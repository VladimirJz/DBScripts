/*
Run this script on:

        10.186.11.19.PRUEBAXSCR    -  This database will be modified

to synchronize it with:

        10.186.11.11\MSSQLServer2.IEEPO

You are recommended to back up your database before running this script

Script created by SQL Compare version 14.4.4.16824 from Red Gate Software Ltd at 26/11/2020 15:27:46

*/
SET NUMERIC_ROUNDABORT OFF
GO
SET ANSI_PADDING, ANSI_WARNINGS, CONCAT_NULL_YIELDS_NULL, ARITHABORT, QUOTED_IDENTIFIER, ANSI_NULLS ON
GO

GO
PRINT N'Creating [dbo].[SP_LlenaPlazaIEEPOUnaPlaza]'
GO
IF OBJECT_ID(N'[dbo].[SP_LlenaPlazaIEEPOUnaPlaza]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[SP_LlenaPlazaIEEPOUnaPlaza]
@plaza int = 0
WITH EXEC AS CALLER
AS
BEGIN   
  
 SET NOCOUNT ON    
 declare @_plaza int = @plaza
   
  DELETE FROM [PlazaIEEPO] where id_plaza = @_plaza  
     
 INSERT INTO [PlazaIEEPO](Id_plaza,Partida,Unidad,SubUnidad,Categoria,Horas,Diagonal,PlazaIEEPO)    
     
 SELECT     dbo.Plazas.Id_plaza, RIGHT(''00'' + CAST(A.Partida AS varchar), 2) AS partida, CAST(B.Unidad AS varchar) AS unidad,       
                       RIGHT(''00'' + CAST(C.Subunidad AS varchar), 2) AS subunidad, CAST(RIGHT(d.categoria, 6) AS varchar) AS categoria, CAST(dbo.FormatNum(E.Horas * 10, N''000'') AS varchar) AS horas,       
                       RIGHT(''000000'' + CAST(F.Diagonal AS varchar), 6) AS Diagonal, RIGHT(''00'' + CAST(A.Partida AS varchar), 2)       
                       + RIGHT(''00'' + CAST(B.Unidad AS varchar), 2) + RIGHT(''00'' + CAST(C.Subunidad AS varchar), 2) + CAST(RIGHT(d.categoria, 6) AS varchar)       
                       + CAST(dbo.FormatNum(E.Horas * 10, N''000'') AS varchar) + RIGHT(''000000'' + CAST(F.Diagonal AS varchar), 6) AS PlazaIEEPO      
 FROM         dbo.Plazas LEFT OUTER JOIN      
                           (SELECT     dbo.HPartida.id_plaza, dbo.HPartida.Partida      
                             FROM          dbo.HPartida INNER JOIN      
                                                        (SELECT     id_plaza, MAX(fecha) AS Maximo      
                                                          FROM          dbo.HPartida AS HPartida_1      
                                                          --WHERE      (fecha <= GETDATE())      
                                                          GROUP BY id_plaza) AS Z ON Z.id_plaza = dbo.HPartida.id_plaza AND Z.Maximo = dbo.HPartida.fecha) AS A ON       
                       A.id_plaza = dbo.Plazas.Id_plaza LEFT OUTER JOIN      
                           (SELECT     dbo.HUnidad.id_plaza, dbo.HUnidad.Unidad      
                             FROM          dbo.HUnidad INNER JOIN      
                                                        (SELECT     id_plaza, MAX(fecha) AS Maximo      
                                                          FROM          dbo.HUnidad AS HUnidad_1      
                                                          --WHERE      (fecha <= GETDATE())      
                                                          GROUP BY id_plaza) AS AB ON AB.id_plaza = dbo.HUnidad.id_plaza AND AB.Maximo = dbo.HUnidad.fecha) AS B ON       
                       B.id_plaza = dbo.Plazas.Id_plaza LEFT OUTER JOIN      
                           (SELECT     dbo.HSubunidad.id_plaza, dbo.HSubunidad.Subunidad      
                             FROM          dbo.HSubunidad INNER JOIN      
                                                        (SELECT     id_plaza, MAX(fecha) AS Maximo      
                                                          FROM          dbo.HSubunidad AS HSubunidad_1      
                                                          --WHERE      (fecha <= GETDATE())      
                                                          GROUP BY id_plaza) AS AD ON AD.id_plaza = dbo.HSubunidad.id_plaza AND AD.Maximo = dbo.HSubunidad.fecha) AS C ON       
                       C.id_plaza = dbo.Plazas.Id_plaza LEFT OUTER JOIN      
                           (SELECT     k.id_plaza, j.categoria      
                             FROM          dbo.TTabulador_SE_Cat_Puesto AS j INNER JOIN      
                                                        (SELECT     h.id_plaza, h.id_rel      
                                                          FROM          dbo.HTabulador_SE_Cat_Puesto AS h INNER JOIN      
                                                                                     (SELECT     id_plaza, MAX(fecha) AS maximo      
                                                                                       FROM          dbo.HTabulador_SE_Cat_Puesto      
																						--WHERE      (fecha <= GETDATE())      
                                                                                       GROUP BY id_plaza) AS i ON h.id_plaza = i.id_plaza AND h.fecha = i.maximo) AS k ON j.id_Tabulador_SE_Cat_Puesto = k.id_rel) AS d ON      
                        d.id_plaza = dbo.Plazas.Id_plaza LEFT OUTER JOIN      
                           (SELECT     dbo.HHoras.id_plaza, dbo.HHoras.Horas      
                             FROM          dbo.HHoras INNER JOIN      
                                                        (SELECT     id_plaza, MAX(fecha) AS Maximo      
                                                          FROM          dbo.HHoras AS HHoras_1      
                                                          --WHERE      (fecha <= GETDATE())      
                                                          GROUP BY id_plaza) AS AF ON AF.id_plaza = dbo.HHoras.id_plaza AND AF.Maximo = dbo.HHoras.fecha) AS E ON       
                       E.id_plaza = dbo.Plazas.Id_plaza LEFT OUTER JOIN      
                           (SELECT     dbo.HDiagonal.id_plaza, dbo.HDiagonal.Diagonal      
                             FROM          dbo.HDiagonal INNER JOIN      
                                                        (SELECT     id_plaza, MAX(fecha) AS Maximo      
                                                          FROM          dbo.HDiagonal AS HDiagonal_1      
                                                          --WHERE      (fecha <= GETDATE())      
                                                          GROUP BY id_plaza) AS AH ON AH.id_plaza = dbo.HDiagonal.id_plaza AND AH.Maximo = dbo.HDiagonal.fecha) AS F ON       
                       F.id_plaza = dbo.Plazas.Id_plaza  
 WHERE dbo.Plazas.Id_plaza = @_plaza  
 
 
update a set a.PC = case when b.CODIGO_PLAZA is null then 0 else 1 end
from plazaieepo a
left join hplazas_concifed_230217 b on
replace(case when a.plazaieepo like ''14%'' or a.plazaieepo like ''15%'' then ''07''+substring(a.plazaieepo,3, len(a.plazaieepo)) else a.plazaieepo end,'' '','''') = b.CODIGO_PLAZA
and b.ESTATUS <> ''C''
where a.id_plaza = @_plaza
 
                         
 SET NOCOUNT OFF    
  
END'
GO

GO
PRINT N'Creating [dbo].[sp_movs_bajas]'
GO
IF OBJECT_ID(N'[dbo].[sp_movs_bajas]', 'P') IS NULL
EXEC sp_executesql N'----------------------------------
--- Bajas
----------------------------------
----------------------------------
----------------------------------
--- QUINCENA DE LA QUE SE DESEA EL REPORTE---
create procedure [dbo].[sp_movs_bajas]
 (
 @Quincena as int,
 @id_cia as int
 )
 with encryption 
 as begin
 
declare @año as int
set @quincena=Case when @Quincena=1 then 24 else @Quincena-1 end
set @año= Case when @quincena=24 then year(GETDATE())-1 else YEAR(GETDATE()) end

select row_number() OVER (ORDER BY ftm.clave,fmm.clave) as ID_OPERACION,ftm.Clave +''-''+fmm.Clave AS OPERACION,
e.curp AS CURP,
replace(pi.PlazaIEEPO,'' '','''') AS CPZA,
NIVEL_SALARIAL=/*(select top 1 b.id_Tabulador_SE_CM from HTabulador_SE_CM a 
inner join TTabulador_SE_CM b on a.id_rel=b.id_Tabulador_SE_CM
inner join fup_documento_detalle c on a.id_plaza=c.id_plaza
where a.fecha<c.fechaini order by a.fecha desc)*/
 case when (select top 1 id_rel from HTabulador_SE_cm htcm where 
id_plaza=fdd.Id_Plaza and fecha<fdd.fechaini) is null then 3 else 
(select top 1 id_rel from HTabulador_SE_cm htcm where 
id_plaza=fdd.Id_Plaza and fecha<fdd.fechaini)end,
'''' AS UR,
'''' AS FECHA,
--right(''00'' + cast(c.Numero as varchar(max)),2) + cast(''/'' as varchar(max)) + cast(c.año as varchar(max)) as PERIODO,
'''' AS CCT,
'''' AS RFC,
'''' AS PRIMER_APELLIDO,
'''' AS SEGUNDO_APELLIDO,
'''' AS ''NOMBRE(S)'',
'''' AS NACIONALIDAD,	
'''' AS PAIS_NAC,
'''' AS ENTIDAD_NAC,	
'''' AS MUNICIPIO_NAC,
'''' AS SEXO,
'''' AS EDO_CIVIL,
'''' AS CALLE_Y_NUM,
'''' AS CP,
'''' AS COLONIA,
'''' AS ENTIDAD,
'''' AS MUNICIPIO,
'''' AS LOCALIDAD,
'''' AS NIV_MAX_ESTUD,
'''' AS ING_GOB_FED,
'''' AS ING_SEP,
'''' AS ING_RAMA,
'''' AS CED_PROF,
'''' AS TIPO_LIC,
'''' AS QUINQ_DOC,
'''' AS QUINQ_ADM,
'''' AS GRADO_LIC,
'''' AS TITULACION,
'''' AS HORARIO,
'''' AS MOVIMIENTO,
'''' AS DESC_MOVIMIENTO,
'''' AS MOTIVO,
'''' AS DESC_MOTIVO,
'''' AS FECHA_INI,
--fid.Centro_Trabajo AS CCT,
--e.RFC, e.ApPaterno AS PRIMER_APELLIDO,
--e.ApMaterno AS SEGUNDO_APELLIDO,
--e.Nombre AS ''NOMBRE(S)'',
--right(''00'' + cast(tnac.Id_Nacionalidad as varchar(max)),3) AS NACIONALIDAD,
--tp.Descr AS PAIS_NAC,
--ENTIDAD_NAC= Case when e.Id_EstadoNac is null then 0 else te.id_estado end,
--MUNICIPIO_NAC= Case when e.Id_MunicipioNac is null then 0 else tc.Id_Ciudad end,
--e.SEXO,
--EDO_CIVIL= Case when e.edocivil is null then ''S/A'' else e.EdoCivil end,
--CALLE_Y_NUM= Case when hd.Calle is null then '''' else cast(hd.calle as varchar(max))+ '' ''+ CAST(hd.numext as varchar (10)) end,
--CP= Case when hd.CodPostal is null then '''' else hd.CodPostal end,
--COLONIA= Case when hd.Id_Colonia = 0 or hd.Id_Colonia is null then '''' else tcol.DESCR end,
--ENTIDAD=Case when e.Id_EstadoNac is null then ''S/A'' else case when e.Id_EstadoNac<=32 then substring(te.descr,4,50) else te.descr end end,
--MUNICIPIO= Case when e.Id_MunicipioNac is null then '''' else upper(tc.Descr) end,
--LOCALIDAD=Case when hd.Id_Localidad = 0 or hd.Id_Colonia is null then '''' else tloc.Descr end,
--'''' AS NIV_MAX_ESTUD,
--ING_GOB_FED= case when hfagf.fecha is null then '''' else dbo.fechatoanioquincena(hfagf.fecha) end,
--ING_SEP= case when hfas.fecha is null then '''' else dbo.fechatoanioquincena(hfas.fecha) end,
--ING_RAMA= case when hfar.fecha is null then '''' else dbo.fechatoanioquincena(hfar.fecha) end,
--'''' as TIPO_LIC,	
--'''' as QUINQ_DOC,	
--'''' as QUINQ_ADM	,
--'''' as GRADO_LIC,	
--'''' as TITULACIÓN,
--HORARIO=Case when rt.id_nodo is null then '''' else tt.descripcion end,
--ftm.Clave as MOVIMIENTO,	
--ftm.Descripcion as DESC_MOVIMIENTO,	
--fmm.Clave as MOTIVO,	
--fmm.Descripcion as DESC_MOTIVO,
--Convert(varchar(10), fdd.Fechaini, 103) as FECHA_INI, 
FECHA_FIN= Convert(varchar(10), fdd.FechaFin-1, 103),
--'''' as CONCEPTOS_PAGO
--''E'' AS TIPO_NOMINA
--convert(char(12),c.fechaini,103) as FECHA
'''' AS CONCEPTOS_PAGO,
'''' AS REGIMEN
from fup_documentos fd
inner join empleados e on fd.Id_Emp = e.Id_Emp
inner join fup_documento_detalle fdd on fd.Id_Documento = fdd.Id_Documento
inner join plazas p on fdd.Id_Plaza = p.Id_plaza
inner join plazaieepo pi on fdd.Id_Plaza = pi.Id_plaza
--inner join (select id_plaza,MAX(fecha) fecha
--from HTabulador_SE_cm htcm
--group by id_plaza
--) nc on pi.Id_plaza=nc.id_plaza
--inner join HTabulador_SE_CM htcm on htcm.id_plaza=nc.id_plaza and htcm.fecha=nc.fecha
--inner join TTabulador_SE_CM ttcm on htcm.id_rel=ttcm.id_Tabulador_SE_CM
inner join usuarios u on fd.Id_Usuario = u.Id_Usuario
inner join FUP_Informacion_Documentos fid on fd.Id_Documento = fid.Id_Documento
inner join CalenNomina c on fid.Id_Periodo = c.Id_Periodo
inner join FUP_MotivoMovimiento fmm on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
inner join tniveleducativo tn on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
inner join TNacionalidad tnac on e.Id_Nacionalidad=tnac.Id_Nacionalidad
inner join TPais tp on tnac.Id_Nacionalidad=tp.Id_Pais
left join TEstados te on e.Id_EstadoNac = te.Id_Estado
left join tciudad tc on e.Id_EstadoNac=te.Id_Estado and tc.Id_Ciudad=e.Id_MunicipioNac
left join (select id_emp,MAX(movimiento) fecha
from hdomicilio 
group by id_emp
) hdoc on e.Id_emp=hdoc.id_emp
left join HDomicilio hd on hd.id_emp=hdoc.id_emp and hdoc.fecha=hd.Movimiento
left join tcolonia tcol on hd.Id_Colonia=tcol.Id_Colonia
left join TLocalidad tloc on hd.Id_Localidad=tloc.id_Localidad
left join (select id_emp,MAX(fecha_alta_gob_fed) fecha
from HFecha_Alta_Gob_Fed group by id_emp
) hfagf on e.Id_Emp=hfagf.id_emp
left join (select id_emp,MAX(fecha_alta_sep) fecha
from HFecha_Alta_sep group by id_emp
) hfas on e.Id_Emp=hfas.id_emp
left join (select id_emp,MAX(fecha_alta_rama) fecha
from HFecha_Alta_rama group by id_emp
) hfar on e.Id_Emp=hfar.id_emp
inner join VistaTablaLongitud vt on fid.Centro_Trabajo=vt.clave
inner join RCT_Turno rt on vt.Id_Nodo=rt.id_nodo
inner join TCT_Turno tt on rt.id_rel=tt.id_CT_Turno
where fid.Id_Periodo in (select id_periodo from calennomina where Numero in (@quincena)
and Id_cia=@id_cia --and Leyenda10=''CFUP'' 
and Año=@año and parcial<> 0
union all 
select id_periodo from calennomina where Numero in (@quincena+1)
and Id_cia=@id_cia --and Leyenda10=''CFUP'' 
and Año=@año and parcial= 0) and e.id_cia=@id_cia and fd.Id_Estatus =2 and fd.folio not in (select folio_n from HFolio_verificado)
and fmm.Id_MotivoMovimiento in (14,15,16,17,18,19,20,21,22,23,24,25,26,32,33,306,307,308) 
and fd.observaciones not like ''%verificado%'' and fd.observaciones not like ''%procesado%''  and pi.Categoria not like '' ab001''
and fdd.Fechaini <=(
select TOp 1 fechafin from calennomina where Id_cia=@id_cia and Año=YEAR(GETDATE()) and Actualizado=0
)
order by  id_operacion,ftm.clave,fmm.clave
end


'
GO

GO
PRINT N'Creating [dbo].[SP_GeneraAgrupador]'
GO
IF OBJECT_ID(N'[dbo].[SP_GeneraAgrupador]', 'P') IS NULL
EXEC sp_executesql N'CREATE Procedure [dbo].[SP_GeneraAgrupador] (    
  @Agrupador int    -- Agrupador a generar  
)    
As      
  
--eSTA FUNCION SOLO  contempla agrupadores sin periodos que son sumarizar = 1  
--Declare @id_periodoSumarizar int  
  
--Select @id_periodoSumarizar = case when calennomina.id_periodo is null else 0 end from calennomina inner join (Select min(fechacortemov) as fechacortemov from Calennomina where id_AgrupPeriodos = 34 and sumarizar = 1 ) B on calennomina.fechacortemov = b
--.fechacortemov  
  
delete from histpagos_Agrupadores where id_AgrupPeriodos = @Agrupador  
  
insert into histpagos_Agrupadores (id_emp,id_periodo,id_concepto,consecutivo,horas,pesos,id_categ,fecha,pesosexcento,C_Costo,id_plaza,id_referencia,  
id_periodopago,id_agrupperiodos,id_procesonomina,desde,hasta) select h.id_emp, 0 as id_periodo,h.id_concepto,  
max(consecutivo) as consecutivo,sum(horas)as horas,sum(pesos) as pesos,max(id_categ) as id_categ,max(fecha) as fecha, sum(Pesosexcento) as pesosexcento,   
max(C_Costo) as C_Costo, h.id_plaza, max(id_referencia) as id_referencia, max(h.id_periodopago) as id_periodopago, @Agrupador as id_AgrupPeriodos,  
min(id_procesonomina) as id_procesonomina,min(desde) as desde,max(hasta) as hasta from histpagos h inner join calennomina c on h.id_periodo=c.id_periodo   
where c.id_agrupPeriodos = @Agrupador and c.sumarizar =1 group by h.id_emp,h.id_plaza,h.id_concepto  
  
insert into histpagos_Agrupadores (id_emp,id_periodo,id_concepto,consecutivo,horas,pesos,id_categ,fecha,pesosexcento,C_Costo,id_plaza,id_referencia,  
id_periodopago,id_agrupperiodos,id_procesonomina,desde,hasta) select h.id_emp,h.id_periodo,h.id_concepto,h.consecutivo as consecutivo,h.horas as horas,  
h.pesos as pesos,h.id_categ as id_categ,h.fecha as fecha, h.Pesosexcento as pesosexcento, h.C_Costo as C_Costo, h.id_plaza, h.id_referencia as   
id_referencia, h.id_periodopago as id_periodopago, @Agrupador as id_AgrupPeriodos,h.id_procesonomina as id_procesonomina,h.desde as desde,  
h.hasta as hasta  from histpagos h inner join calennomina c on h.id_periodo=c.id_periodo where c.id_agrupPeriodos = @Agrupador and c.sumarizar =0   
group by h.id_emp,h.id_plaza,h.id_periodo,h.id_concepto,h.consecutivo,h.horas,h.pesos,h.id_categ,h.fecha,h.pesosexcento,h.C_Costo,h.id_referencia,  
h.id_periodopago,h.id_procesonomina,h.desde,h.hasta  
  
--insert into histpagos_Agrupadores (id_emp,id_periodo,id_concepto,consecutivo,horas,pesos,fecha,pesosexcento,C_Costo,id_plaza,id_referencia,  
--id_periodopago,id_agrupperiodos,id_procesonomina,desde,hasta) select h.id_emp, 0 as id_periodo,h.id_concepto,max(consecutivo) as   
--consecutivo,sum(horas)as horas,sum(pesos) as pesos,max(fecha) as fecha, sum(Pesosexcento) as pesosexcento, max(CC) as C_Costo, h.id_plaza,   
--max(id_referencia) as id_referencia, max(h.id_periodopago) as id_periodopago, @Agrupador as id_AgrupPeriodos,min(h.id_procesonomina) as   
--id_procesonomina,min(h.desde) as desde,max(h.hasta) as hasta  from nom_histpagos h inner join calennomina c on h.id_periodo=c.id_periodo   
--where c.id_agrupPeriodos = @Agrupador and c.sumarizar =1 group by h.id_emp,h.id_plaza,h.id_concepto  
  
--insert into histpagos_Agrupadores (id_emp,id_periodo,id_concepto,consecutivo,horas,pesos,fecha,pesosexcento,C_Costo,id_plaza,id_referencia,  
--id_periodopago,id_agrupperiodos,id_procesonomina,desde,hasta) select h.id_emp,h.id_periodo,h.id_concepto,h.consecutivo as consecutivo,h.horas as horas,  
--h.pesos as pesos,h.fecha as fecha, h.Pesosexcento as pesosexcento, h.CC as C_Costo, h.id_plaza, h.id_referencia as id_referencia,h.id_periodopago as   
--id_periodopago, @Agrupador as id_AgrupPeriodos ,h.id_procesonomina as id_procesonomina,h.desde as desde,h.hasta as hasta  from nom_histpagos h   
--inner join calennomina c on h.id_periodo=c.id_periodo where c.id_agrupPeriodos = @Agrupador and c.sumarizar =0   
--group by h.id_emp,h.id_plaza,h.id_periodo,h.id_concepto,h.consecutivo,h.horas,h.pesos,h.fecha,h.pesosexcento,h.CC,h.id_referencia,h.id_periodopago,  
--h.id_procesonomina,h.desde,h.hasta  
  '
GO

GO
PRINT N'Creating [dbo].[SPF_ValidaRangos]'
GO
IF OBJECT_ID(N'[dbo].[SPF_ValidaRangos]', 'P') IS NULL
EXEC sp_executesql N'create PROCEDURE [dbo].[SPF_ValidaRangos]
-- Add the parameters for the stored procedure here
@id_drse as int,
@id_niveleducativo as int,
@folio_inicio as varchar(10),
@folio_fin as varchar(200),
@año as varchar(4),
@id_operacion as int,
@id_usuario as int
AS
BEGIN
SET NOCOUNT ON;
--declare @id_drse as int
--declare @id_niveleducativo as int
--declare @folio_inicio as varchar(10)
--declare @folio_fin as varchar(200)
--declare @año as varchar(4)
--declare @id_operacion as int
--declare @id_usuario as int
--set @id_drse = 5
--set @id_niveleducativo = 0
--set @folio_inicio = ''56001''
--set @folio_fin = ''56500''
--set @año = ''2017''
--set @id_operacion = ''1''
--set @id_usuario = ''114''
if(len(@folio_inicio) =1)
	begin 
		 set @folio_inicio=''000''+@folio_inicio
    end
else if (len(@folio_inicio) =2)
    begin 
		 set @folio_inicio=''00''+@folio_inicio
    end
else if (len(@folio_inicio) =3)
    begin 
		 set @folio_inicio=''0''+@folio_inicio
    end

if(len(@folio_fin) =1)
	begin 
		 set @folio_fin=''000''+@folio_fin
    end
else if (len(@folio_fin) =2)
    begin 
		 set @folio_fin=''00''+@folio_fin
    end
else if (len(@folio_fin) =3)
    begin 
		 set @folio_fin=''0''+@folio_fin
    end

if(len(@folio_inicio)=4 and len(@folio_fin)=5)
	begin 
	     set @folio_inicio=''0''+@folio_inicio
	end

declare @folio_final as varchar(200)
declare @desc_nivel as varchar (3) =case @id_niveleducativo 
									when 0 then ''PRM''
									when 1 then ''ADU''      
									when 2 then ''INI''  
									when 3 then ''FIS''      
									when 4 then ''PRE''  
									when 5 then ''IND''      
									when 6 then ''ESP''     
									when 7 then ''UPN''      
									when 8 then ''SCG''  
									when 9 then ''SCT''      
									when 10 then ''TSC''  
									when 11 then ''NRM''      
									else ''ADG'' 
                                    end
if(@id_operacion=1)
		begin 
		if(exists(select 1 from  fup_drse_nivel_folios with(nolock) where año=@año and cast(folio_inicio as int)<=cast(@folio_inicio as int) and cast(folio_fin as int)>=cast(@folio_inicio as int) and @folio_inicio <> folio_inicio))
	  		begin
					  set @folio_final=''El folio de inicio se encuentra dentro de el rango de folios de otra drse o nivel, por favor verifique.''		
					  select @folio_final as folio_final			  
			end
			else
			 if(exists(select 1 from  fup_drse_nivel_folios with(nolock) where año=@año and cast(folio_inicio as int)<=cast(@folio_fin as int) and cast(folio_fin as int)>=cast(@folio_fin as int) and @folio_inicio <> folio_inicio))
	  		   begin
				 set @folio_final=''El folio final se encuentra dentro del rango de folios de otra drse o nivel, por favor verifique.''		
				 select @folio_final as folio_final			  
			   end
			   else
		         if(exists(select 1 from  fup_drse_nivel_folios with(nolock) where id_drse=@id_drse and id_niveleducativo=@id_niveleducativo and año=@año and folio_inicio=@folio_inicio and folio_fin=@folio_fin))
	  			 begin
					  set @folio_final=''El folio de inicio y folio final ya existen para la drse, por favor verifique.''		
					  select @folio_final as folio_final			  
				 end
		         else
				   if(exists(select 1 from  fup_drse_nivel_folios with(nolock) where id_drse<>@id_drse and año=@año and @folio_inicio = folio_inicio)) 
				   begin
		   				set @folio_final=''Ya existe ese folio de inicio para otra derse, por favor verifique.''
						select @folio_final as folio_final
						--print''Ya existe ese folio de inicio para otra derse''
				   end 
				   else
				      if(exists(select 1 from fup_drse_nivel_folios with(nolock) where id_drse=@id_drse and id_niveleducativo=@id_niveleducativo and año=@año and folio_inicio=@folio_inicio and folio_fin=@folio_fin))
				   			 begin

							  set @folio_final=''La drse y el nivel educativo ya tiene ese rango de folio registrado para ese año''
				   		      select @folio_final as folio_final
				   		  --print''La derse y el nivel educativo capturado ya tiene rango de folio para ese año''
				   	         end
				   else
				   	 if(exists(select 1 from  fup_drse_nivel_folios with(nolock) where id_drse<>@id_drse and año=@año and @folio_fin = folio_fin)) 
					  begin
					  	   set @folio_final=''Ya existe ese folio final para otra derse''
		            	   select @folio_final as folio_final
						   --print''Ya existe ese folio de fin para otra derse''
				      end 
					else
					  if(exists(select 1 from fup_drse_nivel_folios with(nolock) where id_drse=@id_drse and id_niveleducativo<>@id_niveleducativo and año=@año and (@folio_inicio = folio_inicio or @folio_fin = folio_fin)))
					       begin
					  	   set @folio_final=''Ya existe este folio de inicio o fin para otro nivel en la misma derse''
						   select @folio_final as folio_final
						   --print''Ya existe este folio de inicio o fin para otro nivel en la misma derse''
						   end 
				    else
					  if(@folio_fin<@folio_inicio)
					       begin
					  	   set @folio_final=''El folio final no puede ser menor al folio de inicio, por favor verifique''
						   select @folio_final as folio_final
						   --print''Ya existe este folio de inicio o fin para otro nivel en la misma derse''
						   end 
					else
					  if(@folio_inicio>@folio_fin)
					       begin
					  	   set @folio_final=''El folio de inicio no puede ser mayor al folio final, por favor verifique''
						   select @folio_final as folio_final
						   --print''Ya existe este folio de inicio o fin para otro nivel en la misma derse''
						   end
				    else
				      if(exists(select 1 from fup_drse_nivel_folios with(nolock) where id_drse=@id_drse and id_niveleducativo=@id_niveleducativo and año=@año and folio_inicio<>@folio_inicio and folio_fin<>@folio_fin))
				   			 begin
								 if(len(@folio_inicio)=5 and substring(@folio_inicio,1,1)=''0'')
									   begin 
											set @folio_inicio=substring(@folio_inicio,2,10)
									   end

								 if(len(@folio_fin)=5 and substring(@folio_fin,1,1)=''0'')
									   begin 
											set @folio_fin=substring(@folio_fin,2,10)
									   end
								  declare @folio_ini_existe as varchar(50)
								  declare @conse_existe as varchar(50)
								  set @folio_ini_existe=(select folio_inicio from fup_drse_nivel_folios with(nolock) where id_drse=@id_drse and id_niveleducativo=@id_niveleducativo and año=@año)
								  set @conse_existe=(select consecutivo from fup_drse_nivel_folios with(nolock) where id_drse=@id_drse and id_niveleducativo=@id_niveleducativo and año=@año)
								
				   				  if(@folio_ini_existe=@conse_existe)
								  begin 
										insert into hfup_drse_nivel_folios (id_drse,id_niveleducativo,desc_nivel,folio_inicio,folio_fin,consecutivo,año,folio_inicio_new,folio_fin_new,fecha,id_usuario,accion)
										select id_drse,id_niveleducativo,desc_nivel,folio_inicio,folio_fin,consecutivo,año,@folio_inicio,@folio_fin,getdate(),@id_usuario,''Actualización''
										from fup_drse_nivel_folios with(nolock) where id_drse=@id_drse and id_niveleducativo=@id_niveleducativo and año=@año

										update fup_drse_nivel_folios set folio_inicio=@folio_inicio,consecutivo=@folio_inicio,folio_fin=@folio_fin  where id_drse=@id_drse and id_niveleducativo=@id_niveleducativo and año=@año
								        set @folio_final=''up''
				   				        select @folio_final as folio_final
								  end
								  
				   		     
				   	         end   
					else
		              if(exists(select 1 from fup_drse_nivel_folios with(nolock) where id_drse=@id_drse and id_niveleducativo=@id_niveleducativo and año=@año and folio_inicio=@folio_inicio))
					       begin

						       if(len(@folio_fin)=5 and substring(@folio_fin,1,1)=''0'')
							      begin 
									   set @folio_fin=substring(@folio_fin,2,10)
								  end
						        insert into hfup_drse_nivel_folios (id_drse,id_niveleducativo,desc_nivel,folio_inicio,folio_fin,consecutivo,año,folio_inicio_new,folio_fin_new,fecha,id_usuario,accion)
								select id_drse,id_niveleducativo,desc_nivel,folio_inicio,folio_fin,consecutivo,año,@folio_inicio,@folio_fin,getdate(),@id_usuario,''Actualización''
								from fup_drse_nivel_folios where id_drse=@id_drse and id_niveleducativo=@id_niveleducativo and año=@año
								
								update fup_drse_nivel_folios set folio_fin=@folio_fin where id_drse=@id_drse and id_niveleducativo=@id_niveleducativo and año=@año
								set @folio_final=''up''
								select @folio_final as folio_final
								--print''La derse y el nivel educativo capturado ya tiene rango de folio para ese año''
						    end
					else
					    if(exists(select 1 from fup_drse_nivel_folios with(nolock) where id_drse=@id_drse and id_niveleducativo=@id_niveleducativo and año=@año and folio_fin=@folio_fin))
						    begin
							    if(len(@folio_inicio)=5 and substring(@folio_inicio,1,1)=''0'')
								   begin 
										set @folio_inicio=substring(@folio_inicio,2,10)
								   end

								if(len(@folio_fin)=5 and substring(@folio_fin,1,1)=''0'')
								   begin 
										set @folio_fin=substring(@folio_fin,2,10)
								   end
								
								declare @fol_ini as varchar(50)
								declare @conse as varchar(50)
								set @fol_ini=(select folio_inicio from fup_drse_nivel_folios with(nolock) where id_drse=@id_drse and id_niveleducativo=@id_niveleducativo and año=@año)
								set @conse=(select consecutivo from fup_drse_nivel_folios with(nolock) where id_drse=@id_drse and id_niveleducativo=@id_niveleducativo and año=@año)
								
								insert into hfup_drse_nivel_folios (id_drse,id_niveleducativo,desc_nivel,folio_inicio,folio_fin,consecutivo,año,folio_inicio_new,folio_fin_new,fecha,id_usuario,accion)
								select id_drse,id_niveleducativo,desc_nivel,folio_inicio,folio_fin,consecutivo,año,@folio_inicio,@folio_fin,getdate(),@id_usuario,''Actualización''
								from fup_drse_nivel_folios with(nolock) where id_drse=@id_drse and id_niveleducativo=@id_niveleducativo and año=@año
								
								if(@fol_ini=@conse)
								  begin
								  	   update fup_drse_nivel_folios set folio_inicio=@folio_inicio,consecutivo=@folio_inicio where id_drse=@id_drse and id_niveleducativo=@id_niveleducativo and año=@año
	 				                   set @folio_final=''up''
									   select @folio_final as folio_final
									   --print''La derse y el nivel educativo capturado ya tiene rango de folio para ese año''
								  end
								else
								  begin
								       update fup_drse_nivel_folios set folio_inicio=@folio_inicio where id_drse=@id_drse and id_niveleducativo=@id_niveleducativo and año=@año
									   set @folio_final=''up''
									   select @folio_final as folio_final
									   --print''La derse y el nivel educativo capturado ya tiene rango de folio para ese año''
								   end
							end   
			       else
				   	   begin
					   if(len(@folio_inicio)=5 and substring(@folio_inicio,1,1)=''0'')
					   begin 
							set @folio_inicio=substring(@folio_inicio,2,10)
					   end

					   if(len(@folio_fin)=5 and substring(@folio_fin,1,1)=''0'')
					   begin 
							set @folio_fin=substring(@folio_fin,2,10)
					   end
					   insert into hfup_drse_nivel_folios
					   values(@id_drse,@id_niveleducativo,@desc_nivel,@folio_inicio,@folio_fin,@folio_inicio,@año,@folio_inicio,@folio_fin,getdate(),@id_usuario,''Inserción'')		

					   insert into fup_drse_nivel_folios (id_drse,id_niveleducativo,desc_nivel,folio_inicio,folio_fin,consecutivo,año)
					   values(@id_drse,@id_niveleducativo,@desc_nivel,@folio_inicio,@folio_fin,@folio_inicio,@año)

					   set @folio_final=''ok''
					   select @folio_final as folio_final
					   end
			end
else 
    if(@id_operacion=2)
	        begin
			     select folio_inicio,folio_fin,consecutivo from fup_drse_nivel_folios with(nolock) where id_drse=@id_drse and id_niveleducativo=@id_niveleducativo and año=@año
			end
else 
    if(@id_operacion=3)
	        begin
			      select a.id_drse,b.descripcion as drse,a.id_niveleducativo,c.Descripcion as nivel,a.folio_inicio,
			      a.folio_fin,a.consecutivo,a.año 
				  from fup_drse_nivel_folios a with(nolock)
				  inner join fup_drse b with(nolock) on a.id_drse=b.id_drse
				  inner join TNivelEducativo c with(nolock) on a.id_niveleducativo=c.id_NivelEducativo
				  order by a.id_drse,a.id_niveleducativo,a.año,a.folio_inicio
			end

else 
    if(@id_operacion=4)
	        begin
			      declare @fol_inic as varchar(50)
				  declare @consec as varchar(50)
				  set @fol_inic=(select folio_inicio from fup_drse_nivel_folios with(nolock) where id_drse=@id_drse and id_niveleducativo=@id_niveleducativo and año=@año)
				  set @consec=(select consecutivo from fup_drse_nivel_folios with(nolock) where id_drse=@id_drse and id_niveleducativo=@id_niveleducativo and año=@año)
				  
				  if (@fol_inic=@consec)
					  begin 
						   insert into hfup_drse_nivel_folios (id_drse,id_niveleducativo,desc_nivel,folio_inicio,folio_fin,consecutivo,año,folio_inicio_new,folio_fin_new,fecha,id_usuario,accion)
						   select id_drse,id_niveleducativo,desc_nivel,folio_inicio,folio_fin,consecutivo,año,@folio_inicio,@folio_fin,getdate(),@id_usuario,''Eliminación''
						   from fup_drse_nivel_folios with(nolock) where id_drse=@id_drse and id_niveleducativo=@id_niveleducativo and año=@año

						   delete from fup_drse_nivel_folios where id_drse=@id_drse and id_niveleducativo=@id_niveleducativo and año=@año
					       
						   set @folio_final=''ok''
					       select @folio_final as folio_final
					  end
				  else
					  begin 
						   set @folio_final=''No puede eliminar el rango para la drse, ya tiene documentos capturados, por favor verifique.''
					       select @folio_final as folio_final
					  end

			end
END
'
GO

GO
PRINT N'Creating [dbo].[spf_DatosPersonales]'
GO
IF OBJECT_ID(N'[dbo].[spf_DatosPersonales]', 'P') IS NULL
EXEC sp_executesql N'CREATE procedure [dbo].[spf_DatosPersonales]            
(              
@id_detalle as int,            
@id_usuario as int,          
@fechamov as datetime,          
@modificacion as varchar(max),          
@accion as int          
)              
with recompile               
as                                                      
begin              
SET NOCOUNT ON;            
declare @id_detalle_loc as int =@id_detalle          
declare @id_usuario_loc as int =@id_usuario                
declare @fechamov_loc as datetime=@fechamov          
declare @accion_loc as int =@accion          
declare @modificacion_loc as varchar (500)=@modificacion          
declare @valor as int           
declare @id_empleado as int          
declare @id_documento as int          
declare @ap_paterno as varchar(max)          
declare @ap_materno as varchar(max)          
declare @nombre as varchar(max)          
declare @rfc as varchar(13)         
declare @fecha_qna  as varchar(max)=(select dbo.fechatoanioquincena(fechaini) from fup_documento_detalle where id_detalle=@id_detalle_loc)        
set @id_documento=(select distinct id_documento from FUP_Documento_Detalle where Id_Detalle=@id_detalle_loc)        
declare @fecha_quincena_apli as datetime=(select c.fechaini from fup_informacion_documentos fid        
            inner join calennomina c on fid.id_periodo=c.id_periodo        
            where fid.id_documento=@id_documento)        
        
set @valor=(select fvs.valor from fup_documento_detalle fdd          
            inner join fup_documentos fd on fdd.Id_Documento=fd.Id_Documento          
            inner join FUP_ValorSubCatalogo fvs on fdd.Id_Detalle=fvs.Id_Documento          
            where fdd.Id_Detalle=@id_detalle_loc)          
        
set @id_empleado=(select id_emp from fup_documentos where Id_Documento =@id_documento)            
        
if (@accion_loc=0)          
    begin          
   if(@valor = 0 )--curp          
    begin           
      if (not exists(select * from hcurp where id_emp=@id_empleado and curp=ltrim(UPPER(@modificacion_loc)) and fecha=dbo.anioquincenatofecha(@fecha_qna,0)) )          
      begin          
         insert into hcurp values (@id_empleado,UPPER(@modificacion_loc),dbo.anioquincenatofecha(@fecha_qna,0),@id_usuario_loc,@fechamov_loc,cast(@id_documento as varchar (max)))        
                 
         update empleados set curp=ltrim(UPPER(@modificacion_loc)) where id_emp=cast (@id_empleado as int)          
        
         declare @descripcion as varchar(18)          
         set @descripcion=(select distinct upper(fvt.Valor) from FUP_Documento_Detalle fdd          
                inner join FUP_DetalleCampos fdc on fdd.Id_MotivoMovimiento=fdc.Id_MotivoMovimiento          
              inner join FUP_ValorText fvt on fvt.Id_Valor=fdc.Id_Valor          
              inner join Tformulas tf on fdc.Id_Formula=tf.idFormula          
              where tf.Descripcion=''DEBE_DECIR'' AND fvt.Id_Documento=@id_detalle_loc and fdc.Id_MotivoMovimiento=320)          
                          
         update fvt set fvt.valor=@descripcion from FUP_Documento_Detalle fdd          
               inner join FUP_DetalleCampos fdc on fdd.Id_MotivoMovimiento=fdc.Id_MotivoMovimiento          
          inner join FUP_ValorText fvt on fvt.Id_Valor=fdc.Id_Valor          
          inner join Tformulas tf on fdc.Id_Formula=tf.idFormula          
          where tf.Descripcion=''DEBE_DECIR'' AND fvt.Id_Documento=@id_detalle_loc           
          and fdc.Id_MotivoMovimiento=320                      
        end                                                                                       
     end         
                
   if(@valor = 1 )--apellido paterno          
     begin           
       if(@modificacion_loc=''.'')          
           begin        
          set @modificacion_loc=''''        
         end        
        else         
            begin        
            set @modificacion_loc=@modificacion_loc        
         end        
              
    if(not exists(select appaterno from empleados where id_emp=@id_empleado and appaterno=ltrim(UPPER(@modificacion_loc))))          
           begin          
            set @ap_paterno =(select appaterno from empleados where id_emp=@id_empleado)          
          set @ap_materno =(select apmaterno from empleados where id_emp=@id_empleado)          
          set @nombre =(select nombre from empleados where id_emp=@id_empleado)          
                  
        
          if (not exists (select * from hnombre where appaterno=@ap_paterno and apmaterno=@ap_materno and nombre=@nombre and fecha=dbo.anioquincenatofecha(@fecha_qna,0)))          
             begin         
               insert into hnombre values (@id_empleado,@ap_paterno,@ap_materno,@nombre,dbo.anioquincenatofecha(@fecha_qna,0),@id_usuario_loc,GETDATE(),cast(@id_documento as varchar (max)))            
          end          
                  
          update empleados set ApPaterno=upper(@modificacion_loc) where id_emp=@id_empleado          
                  
          declare @ap_paterno_desc as varchar(max)          
                  
          set @ap_paterno_desc=(select distinct upper(fvt.Valor) from FUP_Documento_Detalle fdd          
          inner join FUP_DetalleCampos fdc on fdd.Id_MotivoMovimiento=fdc.Id_MotivoMovimiento          
          inner join FUP_ValorText fvt on fvt.Id_Valor=fdc.Id_Valor          
          inner join Tformulas tf on fdc.Id_Formula=tf.idFormula          
          where tf.Descripcion=''DEBE_DECIR'' AND fvt.Id_Documento=@id_detalle_loc           
          and fdc.Id_MotivoMovimiento=320)          
        
          update fvt set fvt.valor=@ap_paterno_desc from FUP_Documento_Detalle fdd          
          inner join FUP_DetalleCampos fdc on fdd.Id_MotivoMovimiento=fdc.Id_MotivoMovimiento          
          inner join FUP_ValorText fvt on fvt.Id_Valor=fdc.Id_Valor          
          inner join Tformulas tf on fdc.Id_Formula=tf.idFormula          
          where tf.Descripcion=''DEBE_DECIR'' AND fvt.Id_Documento=@id_detalle_loc           
          and fdc.Id_MotivoMovimiento=320                      
        end                                                                                        
     end          
             
    if(@valor = 2 )--apellido materno          
      begin           
       if (@modificacion_loc=''.'')          
          begin        
          set @modificacion_loc=''''            
        end        
       else         
          begin        
           set @modificacion_loc=@modificacion_loc        
        end        
               
       if(not exists(select apmaterno from empleados where id_emp=@id_empleado and apmaterno=ltrim(UPPER(@modificacion_loc))))          
         begin          
          set @ap_paterno =(select appaterno from empleados where id_emp=@id_empleado)          
         set @ap_materno =(select apmaterno from empleados where id_emp=@id_empleado)          
         set @nombre =(select nombre from empleados where id_emp=@id_empleado)          
                
         if(not exists (select * from hnombre where appaterno=@ap_paterno and apmaterno=@ap_materno and nombre=@nombre and fecha=dbo.anioquincenatofecha(@fecha_qna,0)))          
             begin         
                 insert into hnombre values (@id_empleado,@ap_paterno,@ap_materno,@nombre,dbo.anioquincenatofecha(@fecha_qna,0),@id_usuario_loc,GETDATE(),cast(@id_documento as varchar (max)))            
             end          
                  
          update empleados set ApMaterno=upper(@modificacion_loc) where id_emp=@id_empleado          
        
          declare @ap_materno_desc as varchar(max)          
          set @ap_materno_desc=(select distinct upper(fvt.Valor) from FUP_Documento_Detalle fdd          
          inner join FUP_DetalleCampos fdc on fdd.Id_MotivoMovimiento=fdc.Id_MotivoMovimiento          
          inner join FUP_ValorText fvt on fvt.Id_Valor=fdc.Id_Valor          
          inner join Tformulas tf on fdc.Id_Formula=tf.idFormula          
          where tf.Descripcion=''DEBE_DECIR'' AND fvt.Id_Documento=@id_detalle_loc           
          and fdc.Id_MotivoMovimiento=320)          
        
          update fvt set fvt.valor=@ap_materno_desc from FUP_Documento_Detalle fdd          
          inner join FUP_DetalleCampos fdc on fdd.Id_MotivoMovimiento=fdc.Id_MotivoMovimiento          
          inner join FUP_ValorText fvt on fvt.Id_Valor=fdc.Id_Valor          
          inner join Tformulas tf on fdc.Id_Formula=tf.idFormula          
          where tf.Descripcion=''DEBE_DECIR'' AND fvt.Id_Documento=@id_detalle_loc           
          and fdc.Id_MotivoMovimiento=320                      
                  
       end                                                               
     end         
     if(@valor = 3 )--nombre          
     begin           
        if(not exists(select nombre from empleados where id_emp=@id_empleado and nombre=ltrim(UPPER(@modificacion_loc))))          
         begin          
         set @ap_paterno =(select appaterno from empleados where id_emp=@id_empleado)          
        set @ap_materno =(select apmaterno from empleados where id_emp=@id_empleado)          
        set @nombre =(select nombre from empleados where id_emp=@id_empleado)          
               
        if(not exists (select * from hnombre where appaterno=@ap_paterno and apmaterno=@ap_materno and nombre=@nombre and fecha=dbo.anioquincenatofecha(@fecha_qna,0)))          
           begin          
             insert into hnombre values (@id_empleado,@ap_paterno,@ap_materno,@nombre,dbo.anioquincenatofecha(@fecha_qna,0),@id_usuario_loc,GETDATE(),cast(@id_documento as varchar (max)))            
           end          
                
        update empleados set nombre=upper(@modificacion_loc) where id_emp=@id_empleado          
               
        declare @nombre_desc as varchar(max)          
        set @nombre_desc=(select distinct upper(fvt.Valor) from FUP_Documento_Detalle fdd          
        inner join FUP_DetalleCampos fdc on fdd.Id_MotivoMovimiento=fdc.Id_MotivoMovimiento          
        inner join FUP_ValorText fvt on fvt.Id_Valor=fdc.Id_Valor          
        inner join Tformulas tf on fdc.Id_Formula=tf.idFormula          
        where tf.Descripcion=''DEBE_DECIR'' AND fvt.Id_Documento=@id_detalle_loc           
        and fdc.Id_MotivoMovimiento=320)          
               
        update fvt set fvt.valor=@nombre_desc from FUP_Documento_Detalle fdd          
        inner join FUP_DetalleCampos fdc on fdd.Id_MotivoMovimiento=fdc.Id_MotivoMovimiento          
        inner join FUP_ValorText fvt on fvt.Id_Valor=fdc.Id_Valor          
        inner join Tformulas tf on fdc.Id_Formula=tf.idFormula          
        where tf.Descripcion=''DEBE_DECIR'' AND fvt.Id_Documento=@id_detalle_loc           
        and fdc.Id_MotivoMovimiento=320                      
          end                                                                                     
     end          
     if(@valor = 4 )--fecha de alta a la sep        
        begin           
         if(not exists(select Fecha_Alta_SEP from HFecha_Alta_SEP where id_emp=@id_empleado and Fecha_Alta_SEP=dbo.anioQuincenaToFecha(@modificacion_loc,0)))          
         begin                       
        /*insert into HFecha_Alta_SEP values (@id_empleado,dbo.anioQuincenaToFecha(@modificacion_loc,0),CONVERT (date, GETDATE()),@id_usuario_loc,getdate(),cast(@id_documento as varchar (max)))*/        
        --se modifica la inserción para que ahora se ingrese la fecha de aplicacion de la fecha inicial del calendario de nomina        
        --19/01/2018        
        insert into HFecha_Alta_SEP values (@id_empleado,dbo.anioQuincenaToFecha(@modificacion_loc,0),@fecha_quincena_apli,@id_usuario_loc,getdate(),cast(@id_documento as varchar (max)))                
         end            
     end          
     if(@valor = 5 )--fecha de alta a la rama          
        begin           
        if(not exists(select Fecha_Alta_Rama from HFecha_Alta_Rama where id_emp=@id_empleado and Fecha_Alta_Rama=dbo.anioQuincenaToFecha(@modificacion_loc,0)))          
         begin                
           /*insert into HFecha_Alta_Rama values (@id_empleado,dbo.anioQuincenaToFecha(@modificacion_loc,0),CONVERT (date, GETDATE()),@id_usuario_loc,getdate())*/        
        --se modifica la inserción para que ahora se ingrese la fecha de aplicacion de la fecha inicial del calendario de nomina        
        ----19/01/2018        
        insert into HFecha_Alta_Rama values (@id_empleado,dbo.anioQuincenaToFecha(@modificacion_loc,0),@fecha_quincena_apli,@id_usuario_loc,getdate())               
         end                                                                                                 
     end        
    if(@valor = 6 )--filiacion          
     begin         
     if(not exists(select rfc from empleados where id_emp=@id_empleado and rfc=ltrim(UPPER(@modificacion_loc))))          
      begin          
    set @rfc =(select rfc from empleados where id_emp=@id_empleado)          
    if(not exists (select * from hrfc where rfc=@modificacion_loc and fecha=dbo.anioquincenatofecha(@fecha_qna,0)))          
    begin           
     insert into hrfc values (@id_empleado,@modificacion_loc,dbo.anioquincenatofecha(@fecha_qna,0),@id_usuario_loc,GETDATE(),cast(@id_documento as varchar (max)))            
    end          
               
    ----------------------------  
    ----------------------------  
    ------- se agrega para contemplar que se modifique para los usuarios de servicios en linea  
    if(exists (select * from [federacion.ieepo.gob.mx].federacion.dbo.usuarios_portal where rfc=@rfc))  
    begin   
     update [federacion.ieepo.gob.mx].federacion.dbo.usuarios_portal  set rfc=upper(@modificacion_loc) where rfc=@rfc  
    end   
      
        
    update empleados set rfc=upper(@modificacion_loc) where id_emp=@id_empleado          
    declare @rfc_desc as varchar(max)          
    set @rfc_desc=(select distinct upper(fvt.Valor) from FUP_Documento_Detalle fdd          
    inner join FUP_DetalleCampos fdc on fdd.Id_MotivoMovimiento=fdc.Id_MotivoMovimiento          
    inner join FUP_ValorText fvt on fvt.Id_Valor=fdc.Id_Valor          
    inner join Tformulas tf on fdc.Id_Formula=tf.idFormula          
    where tf.Descripcion=''DEBE_DECIR'' AND fvt.Id_Documento=@id_detalle_loc           
    and fdc.Id_MotivoMovimiento=320)          
                 
    update fvt set fvt.valor=@rfc_desc from FUP_Documento_Detalle fdd          
    inner join FUP_DetalleCampos fdc on fdd.Id_MotivoMovimiento=fdc.Id_MotivoMovimiento          
    inner join FUP_ValorText fvt on fvt.Id_Valor=fdc.Id_Valor          
    inner join Tformulas tf on fdc.Id_Formula=tf.idFormula          
    where tf.Descripcion=''DEBE_DECIR'' AND fvt.Id_Documento=@id_detalle_loc           
    and fdc.Id_MotivoMovimiento=320                      
       end  
    end      
 if(@valor = 7 )--fecha de alta al gobierno federal-- se agrega en la qna 21/2018--23/10/2018         
    begin           
        if(not exists(select Fecha_Alta_Gob_Fed from HFecha_Alta_Gob_Fed where id_emp=@id_empleado and Fecha_Alta_Gob_Fed=dbo.anioQuincenaToFecha(@modificacion_loc,0)))          
         begin                            
              insert into HFecha_Alta_Gob_Fed values (@id_empleado,dbo.anioQuincenaToFecha(@modificacion_loc,0),@fecha_quincena_apli,@id_usuario_loc,getdate())               
         end                                                                                              
    end                                                                    
end ---fin del hacer         
else--principia la regresion           
    begin           
        if(@valor = 0 )---curp          
          begin           
         declare @curp_original as varchar(18)         
      set @curp_original=(select TOp 1 curp from hcurp where id_emp=@id_empleado and fecha<dbo.anioquincenatofecha(@fecha_qna,0)  order by movimiento desc)          
                    delete from hcurp where id_emp=@id_empleado and fecha=dbo.anioquincenatofecha(@fecha_qna,0)           
      update empleados set curp=ltrim(UPPER(@curp_original)) where id_emp=cast (@id_empleado as int)                                                                             
        
       end          
            if(@valor = 1 )---apellido paterno          
       begin           
         declare @ap_paterno_original as varchar(max)          
      set @ap_paterno_original=(select distinct appaterno from HNombre where id_emp=@id_empleado and fecha=dbo.anioquincenatofecha(@fecha_qna,0))                                  
      if(@ap_paterno_original is null)           
        begin           
             set @ap_paterno_original=(select top 1 appaterno from HNombre where id_emp=@id_empleado order by Movimiento desc)          
                       end      
                      update empleados set appaterno=ltrim(UPPER(@ap_paterno_original)) where id_emp=cast (@id_empleado as int)                     
       delete from HNombre where id_emp=@id_empleado and fecha=dbo.anioquincenatofecha(@fecha_qna,0)                            
    end          
            if(@valor = 2 )---apellido materno          
       begin           
         declare @ap_materno_original as varchar(max)          
      set @ap_materno_original=(select distinct apmaterno from HNombre where id_emp=@id_empleado and fecha=dbo.anioquincenatofecha(@fecha_qna,0))          
      if(@ap_materno_original is null)           
         begin           
           set @ap_materno_original=(select top 1 apmaterno from HNombre where id_emp=@id_empleado order by Movimiento desc)          
         end          
      update empleados set apmaterno=ltrim(UPPER(@ap_materno_original)) where id_emp=cast (@id_empleado as int)                     
      delete from HNombre where id_emp=@id_empleado and fecha=dbo.anioquincenatofecha(@fecha_qna,0)                            
    end                     
            if(@valor = 3 )---nombre          
       begin           
         declare @nombre_original as varchar(max)         
      set @nombre_original=(select distinct nombre from HNombre where id_emp=@id_empleado and fecha=dbo.anioquincenatofecha(@fecha_qna,0))          
      if(@nombre_original is null)           
         begin           
           set @nombre_original=(select top 1 nombre from HNombre where id_emp=@id_empleado order by Movimiento desc)          
         end          
                             
      update empleados set nombre=ltrim(UPPER(@nombre_original)) where id_emp=cast (@id_empleado as int)                                           
      delete from HNombre where id_emp=@id_empleado and fecha=dbo.anioquincenatofecha(@fecha_qna,0)                            
    end          
   if(@valor = 4 )---fecha de alta a la sep          
       begin        
         delete from HFecha_Alta_SEP where id_emp=@id_empleado and Fecha_Alta_SEP=dbo.anioQuincenaToFecha(@modificacion_loc,0) and id_user=@id_usuario_loc          
    end                     
   if(@valor = 5 )---fecha de alta a la rama          
       begin           
        delete from HFecha_Alta_Rama where id_emp=@id_empleado and Fecha_Alta_Rama=dbo.anioQuincenaToFecha(@modificacion_loc,0) and id_user=@id_usuario_loc          
       end                   
      if(@valor = 6 )---filiacion          
       begin           
     declare @rfc_original as varchar(max)          
     set @rfc_original=(select top 1 rfc from hrfc where id_emp=@id_empleado and fecha<>dbo.anioquincenatofecha(@fecha_qna,0))  
  
     set @rfc =(select rfc from empleados where id_emp=@id_empleado)    
               
     delete from hrfc where id_emp=@id_empleado and fecha=dbo.anioquincenatofecha(@fecha_qna,0)        
     if(@rfc_original is null)           
     begin           
       set @rfc_original=(select top 1 rfc from hrfc where id_emp=@id_empleado order by Movimiento desc)          
     end                 
     update empleados set rfc=ltrim(UPPER(@rfc_original)) where id_emp=cast (@id_empleado as int)   
       
     update [federacion.ieepo.gob.mx].federacion.dbo.usuarios_portal set rfc=ltrim(UPPER(@rfc_original)) where rfc=@rfc          
       end      
    if(@valor = 7 )---fecha de alta al gobierno federal          
       begin           
        delete from HFecha_Alta_Gob_Fed where id_emp=@id_empleado and Fecha_Alta_Gob_Fed=dbo.anioQuincenaToFecha(@modificacion_loc,0) and id_user=@id_usuario_loc          
       end           
    end        
SET NOCOUNT OFF;           
end    '
GO

GO
PRINT N'Creating [dbo].[spc_CosteoPlazasRTFiltro]'
GO
IF OBJECT_ID(N'[dbo].[spc_CosteoPlazasRTFiltro]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[spc_CosteoPlazasRTFiltro]
@tipoReporte int, @idFiltro varchar(max)

AS

declare @fechref datetime = (select max(fechaini) from calennomina WITH(NOLOCK) where procesado = 1 and Actualizado = 0 and parcial = 0)

select a.id_plaza, a.Fecha, a.id_rel tipo, m.id_rel motivo 
into #temp1
from HstatusPlaza a WITH(NOLOCK) inner join (
select id_plaza, max(fecha) fecha from HstatusPlaza WITH(NOLOCK) where fecha <= @fechref group by id_plaza
) b on a.Id_plaza = b.Id_plaza and a.Fecha = b.Fecha
left join (
  select a.* from HTipoPlaza a WITH(NOLOCK) inner join (
  select id_plaza, max(fecha) fecha from HTipoPlaza WITH(NOLOCK) where fecha <= @fechref group by id_plaza
  ) b on a.Id_plaza = b.Id_plaza and a.Fecha = b.Fecha
) m on m.id_plaza = a.id_plaza 
where a.id_plaza not in (select Valor_IdCampo from hplazas WITH(NOLOCK) where Id_TipoMovPlazas= 4) --and a.id_rel = 2
and a.id_plaza in (select id_plaza from RTFiltro_Plazas where id_TFiltro_Plazas = @idFiltro)


select a.id_plaza, a.Fecha, a.tipo, a.motivo, tm.idCat, tm.Categoria, tm.Desc_categoria, tm.idModelo, tm.Modelo, case when tm.idmodelo = 7 then 1 else 3 end idCM  
into #temp2
from #temp1 a
inner join (
  select a.id_plaza, t.id_Tabulador_SE_Cat_Puesto idCat, ltrim(t.Categoria) Categoria, t.descripcion Desc_Categoria, t.TModelo_SE_id_Modelo_SE idModelo , substring(m.descripcion,3,len(m.descripcion)) Modelo
  from HTabulador_SE_Cat_Puesto a WITH(NOLOCK) inner join (
  select id_plaza, max(fecha) fecha from HTabulador_SE_Cat_Puesto WITH(NOLOCK) where fecha <= @fechref group by id_plaza
  ) b on a.id_plaza = b.id_plaza and a.fecha = b.fecha
  inner join TTabulador_SE_Cat_Puesto t WITH(NOLOCK) on t.id_Tabulador_SE_Cat_Puesto = a.id_rel
  left join TModelo_SE m WITH(NOLOCK) on m.id_Modelo_SE = t.TModelo_SE_id_Modelo_SE
  where t.TModelo_SE_id_Modelo_SE in (1,2,3,4,5,6,7,9,10)
) tm on tm.id_plaza = a.id_plaza

select a.id_plaza, a.Fecha, a.tipo, a.motivo, a.idCat, a.Categoria, a.Desc_categoria, a.idModelo, a.Modelo, a.idCM, z.Zona 
into #temp3
from #temp2 a
left join (
  select a.id_plaza, a.id_rel zona from hTabulador_SE_Zona a WITH(NOLOCK) inner join (
  select id_plaza, max(fecha) fecha from hTabulador_SE_Zona WITH(NOLOCK) where fecha <= @fechref group by id_plaza
  ) b on  a.id_plaza = b.id_plaza and a.fecha = b.fecha
) z on z.id_plaza = a.id_plaza

select a.id_plaza, a.Fecha, a.tipo, a.motivo, a.idCat, a.Categoria, a.Desc_categoria, a.idModelo, a.Modelo, a.idCM, a.Zona, pe.id_emp, pe.id_nodo 
into #temp4
from #temp3 a
left join (
  select a.id_emp, a.id_plaza, a.id_nodo from plazaempleados a WITH(NOLOCK) inner join (
  select id_plaza, max(fecha) fecha from plazaempleados WITH(NOLOCK) where fecha <= @fechref group by id_plaza
  ) b on a.Id_plaza = b.Id_plaza and a.Fecha = b.Fecha
) pe on pe.id_plaza = a.id_plaza
 
 
select  replace(pi.plazaieepo, '' '','''') Plaza, a.Fecha, a.tipo, a.motivo, a.idCat, a.Categoria, a.Desc_categoria, a.idModelo, a.Modelo, a.idCM, a.Zona, a.id_emp, a.id_nodo, v.clave CT, np.NPago
into #temp5
from #temp4 a
inner join PlazaIEEPO pi WITH(NOLOCK) on pi.id_plaza = a.id_plaza
left join vistatablalongitud v WITH(NOLOCK) on v.id_nodo = a.id_nodo
left join (
  select a.id_plaza, a.id_rel NPago from HTabulador_SE_Nivel_Pago a WITH(NOLOCK) inner join (
  select id_plaza, max(fecha) fecha from HTabulador_SE_Nivel_Pago WITH(NOLOCK) where fecha <= @fechref group by id_plaza
  ) b on a.id_plaza = b.id_plaza and a.fecha = b.fecha
) np on np.id_plaza = a.id_plaza
where a.id_plaza not in (select Valor_IdCampo from hplazas WITH(NOLOCK) where Id_TipoMovPlazas= 4) --and a.tipo = 2
and replace(pi.plazaieepo,'' '','''') in (select codigo_plaza from hplazas_concifed_230217 WITH(NOLOCK) where ESTATUS <> ''C'')


select  a.Plaza, a.Fecha, a.tipo, a.motivo, a.idCat, a.Categoria, a.Desc_categoria, a.idModelo, a.Modelo, a.idCM, a.Zona, a.id_emp, a.id_nodo, a.CT, a.NPago 
into #datosPlazasVacates
from #temp5 a
--union all
--select distinct a.CODIGO_PLAZA, cast( cast(year(@fechref) as varchar)+''/01/01'' as datetime) desde ,2 tipo,0 motivo, tp.id_Tabulador_SE_Cat_Puesto idCat, isnull(ltrim(tp.categoria),case when len(rtrim(a.CODIGO_PLAZA)) = 20 then SUBSTRING(a.CODIGO_PLAZA, 7, 5) else SUBSTRING(a.CODIGO_PLAZA, 7, 6) end ) Categoria, isnull(tp.descripcion, ''CATEGORÍA INEXISTENTE EN EL CATÁLOGO IEEPO.'') Desc_categoria,
--tp.TModelo_SE_id_Modelo_SE idModelo,  substring(tm.descripcion,3,len(tm.descripcion)) Modelo, case when tm.id_Modelo_SE = 7 then 1 else 3 end idCM, z.id_rel Zona, 0 id_emp, v.Id_Nodo, v.Clave CT, 3 NPago
--from hplazas_concifed a 
--left join TTabulador_SE_Cat_Puesto tp on ltrim(tp.categoria) = a.CODIGO
--left join TModelo_SE tm on tm.id_Modelo_SE = tp.TModelo_SE_id_Modelo_SE
--left join VistaTablaLongitud v on v.clave = a.CCT
--left join RCT_Tabulador_SE_Zona z on z.id_nodo = v.Id_Nodo
--where ESTATUS <> ''C'' -- and CODIGO_PLAZA not in (select replace(plazaieepo,'' '','''') from plazaieepo where plazaieepo is not null)
--


select CATEGORIA, PLAZA, dbo.fechatoanioquincena(fecha) DESDE, ''999999'' HASTA,CT, 
case when 
case when plaza like ''%E%'' then substring(plaza,12,3) else substring(plaza,13,3) end = ''000'' then ''J'' else ''H'' 
end TIPO_PLAZA, cast(idmodelo as varchar)+'' - ''+modelo MODELO, DESC_CATEGORIA, 
case when 
case when plaza like ''%E%'' then substring(plaza,12,3) else substring(plaza,13,3) end = ''000'' then 1 else 0 
end PLAZA_JORNADA,
case when 
case when plaza like ''%E%'' then substring(plaza,12,3) else substring(plaza,13,3) end = ''000'' then 0 else cast(case when plaza like ''%E%'' then substring(plaza,12,3) else substring(plaza,13,3) end as int)/10
end TOTAL_HORAS 
into #primerreportevacantes
from #datosPlazasVacates WITH(NOLOCK)


    select a.*, c.resultado, c.nombre,c.tipo 
    into #matrizParaCosteo
    from valoresmatriz4 a WITH(NOLOCK)
    inner join (
      select max(fecha) Fecha, id_Tabulador_SE_Cat_Puesto, id_Tabulador_SE_CM, id_Tabulador_SE_Nivel_Pago, id_Tabulador_SE_Zona
      from valoresmatriz4 a WITH(NOLOCK) where fecha <= @fechref group by 
      id_Tabulador_SE_Cat_Puesto, id_Tabulador_SE_CM, id_Tabulador_SE_Nivel_Pago, id_Tabulador_SE_Zona
    ) b on a.fecha = b.Fecha and
    a.id_Tabulador_SE_Cat_Puesto = b.id_Tabulador_SE_Cat_Puesto and a.id_Tabulador_SE_CM = b.id_Tabulador_SE_CM and 
    a.id_Tabulador_SE_Nivel_Pago = b.id_Tabulador_SE_Nivel_Pago and a.id_Tabulador_SE_Zona = b.id_Tabulador_SE_Zona
    inner join conceptos c WITH(NOLOCK) on c.id_concepto = a.id_concepto
    where a.id_concepto not in (1221,1222,1223,1224,1225,1225,1226,1227)
    
    insert into #matrizParaCosteo
    select a.*, c.resultado, c.nombre,c.tipo from ValoresMatriz8 a WITH(NOLOCK)
    inner join (
      select max(fecha) Fecha, id_Tabulador_SE_Cat_Puesto, id_Tabulador_SE_CM, id_Tabulador_SE_Nivel_Pago, id_Tabulador_SE_Zona
      from ValoresMatriz8 WITH(NOLOCK) where fecha <= @fechref group by 
      id_Tabulador_SE_Cat_Puesto, id_Tabulador_SE_CM, id_Tabulador_SE_Nivel_Pago, id_Tabulador_SE_Zona
    ) b on a.fecha = b.Fecha and
    a.id_Tabulador_SE_Cat_Puesto = b.id_Tabulador_SE_Cat_Puesto and a.id_Tabulador_SE_CM = b.id_Tabulador_SE_CM and 
    a.id_Tabulador_SE_Nivel_Pago = b.id_Tabulador_SE_Nivel_Pago and a.id_Tabulador_SE_Zona = b.id_Tabulador_SE_Zona
    inner join conceptos c WITH(NOLOCK) on c.id_concepto = a.id_concepto

	CREATE NONCLUSTERED INDEX indexCosteo1 ON #matrizParaCosteo ([id_concepto]) INCLUDE ([id_Tabulador_SE_Cat_Puesto])
    
    delete from #matrizParaCosteo where  id_Tabulador_SE_Cat_Puesto in (select id_Tabulador_SE_Cat_Puesto from TTabulador_SE_Cat_Puesto WITH(NOLOCK) where TModelo_SE_id_Modelo_SE  = 10)
    and id_concepto in (1306,1701)
    
	
    select a.*, b.id_concepto, b.resultado, b.Valor,
    case when 
    case when plaza like ''%E%'' then substring(plaza,12,3) else substring(plaza,13,3) end = ''000'' then 0 else cast(case when plaza like ''%E%'' then substring(plaza,12,3) else substring(plaza,13,3) end as int)/10
    end horas 
    into #datosPagoVacantes
    from #datosPlazasVacates a WITH(NOLOCK)
    left join #matrizParaCosteo b WITH(NOLOCK) on a.idCat = b.id_Tabulador_SE_Cat_Puesto and a.idCM= b.id_Tabulador_SE_CM and a.NPago = b.id_Tabulador_SE_Nivel_Pago 
    and a.Zona = b.id_Tabulador_SE_Zona
    
  CREATE NONCLUSTERED INDEX indexDatosPagoVacantes1 ON #datosPagoVacantes ([id_concepto],[idModelo]) INCLUDE ([Plaza])
	CREATE NONCLUSTERED INDEX indexDatosPagoVacantes2 ON #datosPagoVacantes ([Valor]) INCLUDE ([Categoria],[id_concepto])
	CREATE NONCLUSTERED INDEX indexDatosPagoVacantes3 ON #datosPagoVacantes ([resultado],[Valor]) INCLUDE ([Plaza],[Categoria])
	CREATE NONCLUSTERED INDEX indexDatosPagoVacantes4 ON #datosPagoVacantes ([horas]) INCLUDE ([Valor])
	CREATE NONCLUSTERED INDEX indexDatosPagoVacantes5 ON #datosPagoVacantes ([idModelo],[id_concepto]) INCLUDE ([Plaza],[Categoria],[Valor])
	CREATE NONCLUSTERED INDEX indexDatosPagoVacantes6 ON #datosPagoVacantes ([id_concepto],[idModelo]) INCLUDE ([Plaza],[Categoria],[resultado],[Valor],[horas])
    
    
    insert into #datosPagoVacantes ( Plaza, Fecha, tipo, motivo, idCat, Categoria, Desc_categoria, idModelo, Modelo, idCM, Zona, id_emp, 
    id_nodo, CT, NPago, id_concepto, resultado, Valor, horas)
    select Plaza, Fecha, tipo, motivo, idCat, Categoria, Desc_categoria, idModelo, Modelo, idCM, Zona, id_emp, 
    id_nodo, CT, NPago, 1558 id_concepto,''HT'' resultado, 143.74 Valor,
    case when 
    case when plaza like ''%E%'' then substring(plaza,12,3) else substring(plaza,13,3) end = ''000'' then 0 else cast(case when plaza like ''%E%'' then substring(plaza,12,3) else substring(plaza,13,3) end as int)/10
    end horas
    from #datosPlazasVacates WITH(NOLOCK) where idmodelo in (5,6,2,9) and plaza not in (
    select plaza from #datosPagoVacantes WITH(NOLOCK) where id_concepto = 1558 and idmodelo in (5,6,2,9)
    )
    
    update #datosPagoVacantes set valor = 3.59 where id_concepto = 1558 and horas <> 0 and idmodelo in (5,6,2,9)
    
    insert into #datosPagoVacantes (Plaza, Fecha, tipo, motivo, idCat, Categoria, Desc_categoria, idModelo, Modelo, idCM, Zona, id_emp, 
    id_nodo, CT, NPago, id_concepto, resultado, Valor, horas)
    select Plaza, Fecha, tipo, motivo, idCat, Categoria, Desc_categoria, idModelo, Modelo, idCM, Zona, id_emp, 
    id_nodo, CT, NPago, 1306 id_concepto,''38'' resultado, 1091 Valor,
    case when 
    case when plaza like ''%E%'' then substring(plaza,12,3) else substring(plaza,13,3) end = ''000'' then 0 else cast(case when plaza like ''%E%'' then substring(plaza,12,3) else substring(plaza,13,3) end as int)/10
    end horas
    from #datosPlazasVacates WITH(NOLOCK) where idmodelo in (2,5,6) and plaza not in (
    select plaza from #datosPagoVacantes WITH(NOLOCK) where id_concepto = 1306 and IdModelo in (2,5,6)
    )

    update #datosPagoVacantes set Valor = 23.28 where  idmodelo in (2,5,6) and id_concepto = 1306 and horas <> 0
    
    update a set a.valor = b.valor from #datosPagoVacantes a inner join (
      select * from #datosPagoVacantes where plaza in (
        select plaza from (
          select categoria, max(plaza) plaza from #datosPagoVacantes where Categoria in (
            select distinct Categoria from #datosPagoVacantes where valor = 0
          ) and resultado in (''01'',''07'') and valor > 0 group by categoria
        ) a
      )
    ) b on a.Categoria = b.categoria and a.id_concepto = b.id_concepto
    where a.valor = 0
    
    update #datosPagoVacantes set valor = valor * horas where horas <> 0
    
    delete #datosPagoVacantes where id_concepto in (1201,1202,1203)


    select a.Plaza, a.Fecha, c.desde, c.hasta, a.tipo, a.motivo, a.idCat, a.Categoria, a.Desc_categoria, a.idModelo, a.Modelo, a.idCM, a.Zona, a.id_emp, 
    a.id_nodo, a.CT, a.NPago
    , CONCEPTOS = stuff(
    ( select '','' + b.resultado
    from #datosPagoVacantes b WITH(NOLOCK)
    where b.plaza = a.plaza order by b.resultado
    for xml path(''''))
    ,1,1,''''),
    round(sum(a.valor),2) VALOR_MENSUAL , c.PLAZA_JORNADA, c.TOTAL_HORAS
    , 12 MESES,
    round(sum(a.valor),2) * 12 MONTO_TOTAL_MESES
    into #datosCosteoTotalPeriodos
    from #datosPagoVacantes a WITH(NOLOCK)
    left join #primerreportevacantes c WITH(NOLOCK) on c.plaza = a.plaza
    group by  a.Plaza, a.Fecha, a.tipo, a.motivo, a.idCat, a.Categoria, a.Desc_categoria, a.idModelo, a.Modelo, a.idCM, a.Zona, a.id_emp, 
    a.id_nodo, a.CT, a.NPago, c.PLAZA_JORNADA, c.TOTAL_HORAS, c.desde, c.hasta
    ORDER BY a.IdModelo,a.Categoria


alter table #datosCosteoTotalPeriodos add aguinaldo float default 0 with values
alter table #datosCosteoTotalPeriodos add diaMaestro float default 0 with values
alter table #datosCosteoTotalPeriodos add CN float default 0 with values
alter table #datosCosteoTotalPeriodos add Aportacion float default 0 with values
alter table #datosCosteoTotalPeriodos add primaVacacional float default 0 with values

CREATE NONCLUSTERED INDEX indexdatosCosteoTotalPeriodos1 ON #datosCosteoTotalPeriodos ([Aportacion]) INCLUDE ([Plaza],[Categoria],[MESES])

    UPDATE A SET a.aguinaldo =  round(a.meses * b.pesos,2)
    from #datosCosteoTotalPeriodos a inner join (
    select categoria, plaza, ((sum(valor)/30) * 90)/12 pesos 
    from #datosPagoVacantes a
    where a.id_concepto in (1701,1300,1301,1302,1318,1319,1320,1321,1322,1331,1353,1354,1400,1401,1402,1403,1404,1359,1360,1361,1362,1363,1364,1454,1433,1545,1546,1358,1377,1477)
    and a.IdModelo in (1,4) 
    group by categoria, plaza
    ) b on b.categoria = a.CATEGORIA and b.plaza = a.PLAZA

    UPDATE A SET a.aguinaldo = a.meses * b.pesos
    from #datosCosteoTotalPeriodos a inner join (
    select categoria, plaza, ((sum(valor)/30) * 90)/12 pesos from #datosPagoVacantes a
    where a.id_concepto in (1701,1300,1353,1557)
    and a.IdModelo in (3) 
    group by categoria, plaza
    ) b on b.categoria = a.CATEGORIA and b.plaza = a.PLAZA

    UPDATE A SET a.aguinaldo =  case when a.meses >= 6 then b.pesos else  a.meses * (b.pesos/12) end
    from #datosCosteoTotalPeriodos a inner join (
    select categoria, plaza, ((sum(valor)/30) * 90) pesos from #datosPagoVacantes a
    where a.id_concepto in (1300,1328,1701)
    and a.IdModelo in (5,6) 
    group by categoria, plaza
    ) b on b.categoria = a.CATEGORIA and b.plaza = a.PLAZA

    UPDATE A SET a.aguinaldo = case when a.meses >= 6 then b.pesos else  a.meses * (b.pesos/12) end 
    from #datosCosteoTotalPeriodos a inner join (
    select categoria, plaza, ((sum(valor)/30) * 90) pesos from #datosPagoVacantes a
    where a.id_concepto in (1701,1300,1557,1328)
    and a.IdModelo in (2,9) 
    group by categoria, plaza
    ) b on b.categoria = a.CATEGORIA and b.plaza = a.PLAZA

    UPDATE A SET a.aguinaldo = case when a.meses >= 6 then b.pesos else  a.meses * (b.pesos/12) end
    from #datosCosteoTotalPeriodos a inner join (
    select categoria, plaza, ((sum(valor)/30) * 90) pesos from #datosPagoVacantes a
    where a.id_concepto in (1510,1518,1582)
    and a.IdModelo in (7) 
    group by categoria, plaza
    ) b on b.categoria = a.CATEGORIA and b.plaza = a.PLAZA

    UPDATE A SET a.aguinaldo = a.meses * b.pesos
    from #datosCosteoTotalPeriodos a inner join (
    select categoria, plaza, ((sum(valor)/30) * 90)/12 pesos from #datosPagoVacantes a
    where a.id_concepto in (4000,4004)
    and a.IdModelo in (10) 
    group by categoria, plaza
    ) b on b.categoria = a.CATEGORIA and b.plaza = a.PLAZA

    update a set a.diamaestro = b.pesos
    from #datosCosteoTotalPeriodos a inner join (
    select categoria, plaza, sum(valor)/2 pesos 
    from #datosPagoVacantes a
    where a.id_concepto in (1701,1300,1318,1319,1320,1321,1322,1354,1353)
    and a.IdModelo in ( 1 , 2 , 3 , 4 , 5 , 6 , 9 )
    group by categoria, plaza
    ) b on b.categoria = a.CATEGORIA and b.plaza = a.PLAZA

    update a set a.diamaestro = b.pesos
    from #datosCosteoTotalPeriodos a inner join (
    select categoria, plaza, sum(valor)/2 pesos 
    from #datosPagoVacantes a
    where a.id_concepto in (1510)
    and a.IdModelo in ( 7)
    group by categoria, plaza
    ) b on b.categoria = a.CATEGORIA and b.plaza = a.PLAZA

    update #datosCosteoTotalPeriodos set cn = 3887.00 where idmodelo in (1 , 4 )

    update #datosCosteoTotalPeriodos set cn = 3069.02 where idmodelo in (2 , 3 , 9)

    update a set a.aportacion = round(b.aportacion * meses,2)
    from #datosCosteoTotalPeriodos a inner join (
    select a.categoria, a.plaza, a.horas, a.resultado, valor, round(valor * 0.20145,2) aportacion
    from #datosPagoVacantes a
    where a.IdModelo in (1 , 2 , 3 , 4 , 5 , 6 , 9) and a.id_concepto in (1701)
    group by a.categoria, a.plaza, a.horas, valor, a.resultado
    ) b on b.plaza = a.plaza and b.categoria = a.categoria
    where a.aportacion = 0

    update a set a.aportacion = round(b.aportacion * meses,2)
    from #datosCosteoTotalPeriodos a inner join (
    select a.categoria, a.plaza, a.horas, a.resultado, valor, round(valor * .20145,2) aportacion
    from #datosPagoVacantes a
    where a.IdModelo in (7) and a.id_concepto in (1510)
    group by a.categoria, a.plaza, a.horas, valor, a.resultado
    ) b on b.plaza = a.plaza and b.categoria = a.categoria
    where a.aportacion = 0

    update a set a.aportacion = round(b.aportacion * meses,2)
    from #datosCosteoTotalPeriodos a inner join (
    select a.categoria, a.plaza, a.horas, a.resultado, valor, round(valor * .20145,2) aportacion
    from #datosPagoVacantes a
    where a.IdModelo in ( 10) and a.id_concepto in (4000)
    group by a.categoria, a.plaza, a.horas, valor, a.resultado
    ) b on b.plaza = a.plaza and b.categoria = a.categoria
    where a.aportacion = 0

    UPDATE A SET A.PRIMAVACACIONAL = B.PESOS
    from #datosCosteoTotalPeriodos a inner join (
    select categoria, plaza, (round((sum(valor)/30) * 10,2)) pesos 
    from #datosPagoVacantes a
    where a.id_concepto in (4000,4004)
    and a.IdModelo in (10) 
    group by categoria, plaza
    ) b on b.categoria = a.CATEGORIA and b.plaza = a.PLAZA

    UPDATE A SET A.PRIMAVACACIONAL = B.PESOS
    from #datosCosteoTotalPeriodos a inner join (
    select categoria, plaza, (round((sum(valor)/30) * 21,2)) pesos from #datosPagoVacantes a
    where a.id_concepto in (1510,1518)
    and a.IdModelo in (7) and a.categoria  like ''%E%''
    group by categoria, plaza
    ) b on b.categoria = a.CATEGORIA and b.plaza = a.PLAZA

    UPDATE A SET A.PRIMAVACACIONAL = B.PESOS
    from #datosCosteoTotalPeriodos a inner join (
    select categoria, plaza, (round((sum(valor)/30) * 24,2)) pesos from #datosPagoVacantes a
    where a.id_concepto in (1701,1300,1328,1557)
    and a.IdModelo in (2,9)
    group by categoria, plaza
    ) b on b.categoria = a.CATEGORIA and b.plaza = a.PLAZA

    UPDATE A SET A.PRIMAVACACIONAL = B.PESOS
    from #datosCosteoTotalPeriodos a inner join (
    select categoria, plaza, (round((sum(valor)/30) * 24,2)) pesos from #datosPagoVacantes a
    where a.id_concepto in (1701,1300,1307,1328)
    and a.IdModelo in (5,6)
    group by categoria, plaza
    ) b on b.categoria = a.CATEGORIA and b.plaza = a.PLAZA

    UPDATE A SET A.PRIMAVACACIONAL = B.PESOS
    from #datosCosteoTotalPeriodos a inner join (
    select categoria, plaza, (round((sum(valor)/30) * 5,2)) * 2 pesos from #datosPagoVacantes a
    where a.id_concepto in (1701,1557,1300,1353)
    and a.IdModelo in (3)
    group by categoria, plaza
    ) b on b.categoria = a.CATEGORIA and b.plaza = a.PLAZA

    UPDATE A SET A.PRIMAVACACIONAL = B.PESOS
    from #datosCosteoTotalPeriodos a inner join (
    select categoria, plaza, (round((sum(valor)/30) * 5,2)) * 2 pesos from #datosPagoVacantes a
    where a.id_concepto in (1701,1300,1318,1319,1320,1321,1322,1354,1400,1401,1402,1403,1404,1359,1360,1361,1362,1363,1364,1454,1433,1545,1546,1377,1358,1477,1331,1378)
    and a.IdModelo in ( 1 , 4 )
    group by categoria, plaza
    ) b on b.categoria = a.CATEGORIA and b.plaza = a.PLAZA

    if (@tipoReporte = 0)
      begin
        select MODELO, CATEGORIA, DESC_CATEGORIA, ROUND(SUM(VALOR_MENSUAL),2) VALOR_MENSUAL, SUM(PLAZA_JORNADA) PLAZAS_JORNADA, SUM(TOTAL_HORAS) TOTAL_HORAS,
        SUM(MONTO_TOTAL_MESES) MONTO_TOTAL_MESES, SUM(AGUINALDO) AGUINALDO, SUM(diamaestro) DIA_MAESTRO, SUM(CN) CN, SUM(APORTACION) APORTACION, SUM(primavacacional) PRIMA_VACACIONAL,
        ROUND(SUM(MONTO_TOTAL_MESES) + SUM(AGUINALDO) + SUM(diamaestro) + SUM(CN) + SUM(APORTACION) + SUM(primavacacional),2) TOTAL
        from #datosCosteoTotalPeriodos  WITH(NOLOCK)
        GROUP BY IDMODELO, MODELO, CATEGORIA, DESC_CATEGORIA
      end
    else
      begin
        select CATEGORIA, PLAZA, DESDE, HASTA, CT, case when PLAZA_JORNADA = 1 then ''J'' else ''H'' end TIPO_PLAZA, MODELO, desc_categoria DESC_CATEGORIA, CONCEPTOS,
        VALOR_MENSUAL, PLAZA_JORNADA, TOTAL_HORAS, MESES, MONTO_TOTAL_MESES, AGUINALDO, diamaestro DIA_MAESTRO, CN, APORTACION, primavacacional PRIMA_VACACIONAL, MONTO_TOTAL_MESES+aguinaldo+diamaestro+cn+aportacion+primavacacional TOTAL
        from #datosCosteoTotalPeriodos WITH(NOLOCK)
        ORDER BY idModelo, Categoria, PLAZA 
      end'
GO

GO
PRINT N'Creating [dbo].[SP_getConceptosTerceros]'
GO
IF OBJECT_ID(N'[dbo].[SP_getConceptosTerceros]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		Victor Sanchez
-- Create date: 14/04/2017
-- Description:	Muestra el detalle de terceros de un pago (percepciones-deducciones) en base a tes parametros(id_periodo, id_emp, id_plaza)
-- =============================================
create PROCEDURE [dbo].[SP_getConceptosTerceros]
	-- Add the parameters for the stored procedure here
  @Idplaza int,  
  @Idemp int, 
  @idperiodo int
 
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

  SELECT      
   a.id_concepto, case when(a.tipo =1)then ''P'' else ''D'' end as Tipo, a.resultado as Clave, convert(varchar(12), cast(b.Pesos as money), 1) AS Importe,a.descripcion, Desde, Hasta 
      
 FROM      
   Conceptos a       
  INNER JOIN ConceptoRelEmpresa c      
   ON a.id_concepto = c.id_concepto       
  INNER JOIN      
   (SELECT Id_Emp, id_concepto, Id_Periodo, id_plaza, Pesos,Desde,Hasta, isnull(Id_Referencia,0)  Id_Referencia FROM HistPagos      
   UNION ALL      
    SELECT Id_Emp, id_concepto, Id_Periodo, id_plaza, Pesos,Desde,Hasta, isnull(Id_Referencia,0)  Id_Referencia FROM Nom_histpagos) AS b      
   ON a.id_concepto = b.id_concepto    
  inner join Empleados E    
   on e.id_emp = b.id_emp   
  inner join PlantillasConceptos_Detalle PD 
  ON  a.id_concepto = pd.id_concepto and pd.Id_PlantillasConceptos = 21 
   WHERE      
     b.Id_Emp =@idemp and b.id_plaza = @idPlaza AND b.id_periodo=@idperiodo and (c.id_razonsocial = 5) AND (a.En_ListaRaya = 1) AND (a.Tipo <> 3) 
   ORDER BY 
     tipo, A.resultado , DESDE, HASTA
END
'
GO

GO
PRINT N'Creating [dbo].[SP_SHP3per]'
GO
IF OBJECT_ID(N'[dbo].[SP_SHP3per]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		David Santibañez Vargas
-- Create date: 3 de mayo de 2013
-- Description:	percepciones recalculo
-- =============================================
CREATE PROCEDURE [dbo].[SP_SHP3per]
	@idplaza int,      
@Idemp int,      
@idperiodo int
with encryption     
AS
BEGIN
	SET NOCOUNT ON;

     SELECT      
   a.id_concepto,a.Resultado as Clave,a.descripcion, b.Id_Emp,Cast(f.año as varchar(4)) + ''''+Right(''00''+Cast(f.numero as varchar(2)),2) as Periodo, b.id_plaza,Desde+'' ''+Hasta as Desde_Hasta, convert(varchar(12), cast(b.Pesos as money), 1) AS Importe      
      
 FROM      
   Conceptos a       
   INNER JOIN ConceptoRelEmpresa c      
   ON a.id_concepto = c.id_concepto       
   INNER JOIN      
            (SELECT     Id_Emp, id_concepto, Id_Periodo, id_plaza, Pesos,Desde,Hasta      
            FROM       recalculo_histpagos      
            UNION ALL      
            SELECT     Id_Emp, id_concepto, Id_Periodo, id_plaza, Pesos,Desde,Hasta      
            FROM       histpagos)       
   AS b      
   ON a.id_concepto = b.id_concepto      
   inner join Empleados D    
   On D.id_emp = b.id_emp    
   inner join Plazas E    
   on E.id_plaza = b.id_plaza  
   Inner Join Calennomina F  
   on b.Id_Periodo=F.Id_periodo     
     
 WHERE      
   d.noempx=@idemp and e.num_plaza=@idplaza AND b.id_periodo=@idperiodo and  (c.id_razonsocial = 5) AND (a.Tipo = 1) AND (a.En_ListaRaya = 1)      
 ORDER BY      
   A.descripcion      
         
SET NOCOUNT OFF    

END
'
GO

GO
PRINT N'Creating [dbo].[SP_SHP2per]'
GO
IF OBJECT_ID(N'[dbo].[SP_SHP2per]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[SP_SHP2per]
	@idplaza int,      
@Idemp int,      
@idperiodo int     
with encryption
AS
BEGIN
	SET NOCOUNT ON;

     SELECT      
   a.id_concepto,a.Resultado as Clave,a.descripcion, b.Id_Emp,Cast(f.año as varchar(4)) + ''''+Right(''00''+Cast(f.numero as varchar(2)),2) as Periodo, b.id_plaza,Desde+'' ''+Hasta as Desde_Hasta, convert(varchar(12), cast(b.Pesos as money), 1) AS Importe      
      
 FROM      
   Conceptos a       
   INNER JOIN ConceptoRelEmpresa c      
   ON a.id_concepto = c.id_concepto       
   INNER JOIN      
            (SELECT     Id_Emp, id_concepto, Id_Periodo, id_plaza, Pesos,Desde,Hasta      
            FROM       recalculo_histpagos      
            UNION ALL      
            SELECT     Id_Emp, id_concepto, Id_Periodo, id_plaza, Pesos,Desde,Hasta      
            FROM       Nom_histpagos)       
   AS b      
   ON a.id_concepto = b.id_concepto      
   inner join Empleados D    
   On D.id_emp = b.id_emp    
   inner join Plazas E    
   on E.id_plaza = b.id_plaza  
   Inner Join Calennomina F  
   on b.Id_Periodo=F.Id_periodo     
     
 WHERE      
   d.noempx=@idemp and e.num_plaza=@idplaza AND b.id_periodo=@idperiodo and  (c.id_razonsocial = 5) AND (a.Tipo = 1) AND (a.En_ListaRaya = 1)      
 ORDER BY      
   A.descripcion      
         
SET NOCOUNT OFF    

END
'
GO

GO
PRINT N'Creating [dbo].[SPF_bajasdeducfijas]'
GO
IF OBJECT_ID(N'[dbo].[SPF_bajasdeducfijas]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================  
-- Author:  <Author,,Name>  
-- Create date: <Create Date,,>  
-- Description: <Description,,>  
-- =============================================  
CREATE PROCEDURE [dbo].[SPF_bajasdeducfijas]   
      @IdDocumento as int,            
     @Desde as varchar(6), ---- convertir campo desde a entero            
     @idConcepto as int,          
     @IdEmpleado as int,            
     @idplaza as int,          
     @tipo as varchar(1),          
     @accion as bit            
AS  
BEGIN  
 declare @IdDocumento_loc as int =@IdDocumento
 declare @Desde_loc as varchar(6)=@Desde
 declare @idConcepto_loc as int=@idConcepto
 declare @IdEmpleado_loc as int=@IdEmpleado
 declare @idplaza_loc as int=@idplaza
 declare @tipo_loc as varchar(1)=@tipo
 declare @accion_loc as bit=@accion
 
 declare @Tmp as varchar(30)            
 declare @sql as varchar(max)= ''''           
 declare @tipocambio as varchar(1)         
end            
 --declare @Desde as varchar(6)=''201321''            
 declare @fechafin as datetime            
 set @fechafin = cast((select dbo.anioQuincenaToFecha(cast(@Desde_loc as int )-1,1))as datetime)            
 --print @fechafin            
 set @Tmp = ''ZBajaconc19''            
            
 if @accion_loc = 0                  
 Begin                                  
   if @tipo_loc = ''B''      
   begin      
      if exists(select * from deducsfijas where id_emp=@IdEmpleado_loc and id_concepto=@idConcepto_loc and id_plaza= @idplaza_loc)                    
      begin                  
          --1.Mandar a la temporal el registro que esta en ttempleado_plaza_conc             
          if object_id( @Tmp ) is null            
          begin            
             set @sql = ''select * INTO '' + @Tmp + '' from deducsfijas where id_emp='' + cast(@IdEmpleado_loc as varchar(10)) + ''and id_concepto='' + cast(@idConcepto_loc as varchar (10)) + ''and id_plaza='' + cast(@idplaza_loc as varchar (10))                 
             execute (@sql)             
             --2.- Mandar el registro de la tabla temporal con el id_documento a aplicar            
             insert into FUP_TEMPORALES(id_Documento, Nom_temporal) values(@IdDocumento_loc, @Tmp)            
          end            
          --3.- Vencer el concepto al desde del movimiento (un dia antes del desde)             
          update deducsfijas set FechaHasta=@fechafin, Status=''B'' where id_emp=@IdEmpleado_loc and id_concepto=@idConcepto_loc and id_plaza= @idplaza_loc                         
          --4.- Mandar el registro ya vencido a la tabla ttemplado_plaza_conc_bajas            
          insert into deducsfijas_bajas    (Id_Prestamo, Id_Emp, id_concepto, saldoincial, NumPeriodos, Descuento, SaldoActual, Actualizado,            
                                           FechApl, Status, Id_User, NumPagos, Plazo, cancelaciones, comentarios, Tipo_Deduc, Tipo_Desc,            
                                           aviso_deduc, id_prestamoreestructura, id_plaza, FechaHasta, Id_Usuario_Movimiento, Fecha_Movimiento            
                                           )                  
          SELECT  Id_Prestamo, Id_Emp, id_concepto, saldoincial, NumPeriodos, Descuento, SaldoActual, Actualizado,            
                                      FechApl, Status, Id_User, NumPagos, Plazo, cancelaciones, comentarios, Tipo_Deduc, Tipo_Desc,            
                                      aviso_deduc, id_prestamoreestructura, id_plaza, FechaHasta, @IdEmpleado_loc, getdate()            
                                  FROM deducsfijas            
                                  where id_emp=@IdEmpleado_loc and id_Concepto=@idConcepto_loc  and id_plaza= @idplaza_loc            
           --5.- Eliminar el registro de ttempleado_plaza_conc            
           delete from deducsfijas where id_emp=@IdEmpleado_loc and id_concepto=@idConcepto_loc and id_plaza= @idplaza_loc            
      end                
   end       
   ELSE        
   begin        
        if object_id( @Tmp ) is null            
           begin            
             set @sql = ''select * INTO '' + @Tmp + '' from deducsfijas where id_emp='' + cast(@IdEmpleado_loc as varchar(10)) + ''and id_concepto='' + cast(@idConcepto_loc as varchar (10)) + ''and id_plaza='' + cast(@idplaza_loc as varchar (10))                 
             execute (@sql)             
             --2.- Mandar el registro de la tabla temporal con el id_documento a aplicar            
             insert into FUP_TEMPORALES(id_Documento, Nom_temporal) values(@IdDocumento_loc, @Tmp)            
           end            
           update deducsfijas set Status=''I'' where id_emp=@IdEmpleado_loc and id_concepto=@idConcepto_loc and id_plaza= @idplaza_loc                                 
   end            
 end        
 else -- En caso contrario eliminacion          
    if @tipo_loc = ''B''                
    Begin                
         --1.- Regresar el registro a deducsfijas            
         set @sql = ''insert into deducsfijas                  
                                   (Id_Emp, Id_Prestamo, id_concepto, saldoincial, NumPeriodos, Descuento, SaldoActual, Actualizado            
                                          ,FechApl, Status, Id_User, NumPagos, Plazo, cancelaciones, comentarios, ,Tipo_Deduc, Tipo_Desc            
                                          ,aviso_deduc, id_prestamoreestructura, id_plaza, FechaHasta            
                                         )            
                                  SELECT Id_Emp, Id_Prestamo, id_concepto, saldoincial, NumPeriodos, Descuento, SaldoActual, Actualizado            
                                          ,FechApl, Status, Id_User, NumPagos, Plazo, cancelaciones, comentarios, ,Tipo_Deduc, Tipo_Desc            
                                          ,aviso_deduc, id_prestamoreestructura, id_plaza, FechaHasta            
                                  from ZBajaconc19''              
                                  +'' where id_emp= '' + cast(@IdEmpleado_loc as varchar(10)) +'' and id_concepto = '' + cast(@idConcepto_loc as varchar(10)) + ''and id_plaza='' + cast(@idplaza_loc as varchar (10))            
          exec(@sql)            
          --2.- Eliminar el registro de deducsfijas_bajas            
          delete from deducsfijas_bajas where id_emp=@IdEmpleado_loc and id_concepto=@idConcepto_loc and id_plaza= @idplaza_loc                  
       end         
       else        
       begin        
          set @tipocambio = (''select status from ZBajaconc19 where id_emp=''  + cast(@IdEmpleado_loc as varchar(10)) +'' and id_concepto = '' + cast(@idConcepto_loc as varchar(10)) + ''and id_plaza='' + cast(@idplaza_loc as varchar (10)))            
          update deducsfijas set Status=@tipocambio where id_emp=@IdEmpleado_loc and id_concepto=@idConcepto_loc and id_plaza= @idplaza_loc                                 
          
END  '
GO

GO
PRINT N'Creating [dbo].[SP_Gennom]'
GO
IF OBJECT_ID(N'[dbo].[SP_Gennom]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[SP_Gennom]
	-- Add the parameters for the stored procedure here
		@IDPERIODO INT = 0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
    select pt1.UDP as ud,f.id_nodo,g.clave,e.leyenda4 as tippag,b.resultado as concepto,b.tipo as perded,c.rfc as filiacio, C.CURP, c.Id_cod ,(c.appaterno + '' ''+c.apmaterno +'' ''+ c.nombre) as Pnombre,d.plazaieepo,substring(d.plazaieepo,7,6) as puesto,a.* INTO #TMPNOM from histpagos_Agrupadores a  
            inner join conceptos b on a.id_concepto=b.id_concepto inner join empleados c on a.id_emp=c.id_emp inner join plazaieepo d 
            on a.id_plaza=d.id_plaza inner join calennomina e on a.id_periodo=e.id_periodo inner join (select p.id_plaza,p.id_nodo from   
                  plazaempleados p inner join  (select id_plaza,Max(Fecha) as FechaMax, Max(Movimiento) as MovMax   
                   from plazaEmpleados  where fecha <= getdate()  group by id_plaza ) hp  
                  on p.id_plaza = hp.id_plaza and hp.MovMax = p.Movimiento and hp.FechaMax = p.Fecha) f on a.id_plaza=f.id_plaza 
            inner join vistatablalongitud g on f.id_nodo=g.id_nodo inner join
            TablaLongitudProp_28  pt1 on g.Id_Nodo = pt1.id_nodo 
            where a.id_agrupperiodos=@IDPERIODO 
            and a.id_concepto in (1510,1518,1520,1521,1565,1566,1568,1578,1579,1580,1581,1582,1583,1584,2314,2315,2316,2404,2408,2409,2419,2448,2458,2465,2475,2478,2480,2482,2484) 
            order by e.leyenda4,c.rfc

select MAX(fecha) as maxFecha,id_plaza, 
Right(''00'' + cast((select valor_idcampo from hplazas b where b.Id_plaza=hplazas.id_plaza and  b.Fecha= MAX(hplazas.fecha) and id_tipomovplazas=1)  as varchar(2)),2) as motivo
,Right(''00'' + cast((select valor_idcampo from hplazas b where b.Id_plaza=hplazas.id_plaza and  b.Fecha= MAX(hplazas.fecha) and id_tipomovplazas=2)as varchar(2)),2) as status
INTO #TMPSTA from HPlazas where  Fecha  <= getdate()
group by hplazas.id_plaza
            
  --select  a.Id_plaza, Right(''00'' + cast(a.Valor_IdCampo as varchar(2)),2) estatus, b.Valor_IdCampo motivo, a.fecha fecha INTO #TMPSTA from (select * from hplazas where Id_TipoMovPlazas = 2) a 
  --left join (select * from hplazas where Id_TipoMovPlazas = 1) b on a.Fecha = b.Fecha  and a.Id_plaza = b.Id_plaza
  --where a.Id_plaza in (SELECT DISTINCT Id_plaza FROM #TMPNOM) and a.Fecha  <= getdate()


SELECT * FROM #TMPNOM JOIN #TMPSTA ON  #TMPNOM.id_plaza = #TMPSTA.Id_plaza
  
	
END
'
GO

GO
PRINT N'Creating [dbo].[SpuVector]'
GO
IF OBJECT_ID(N'[dbo].[SpuVector]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		wcahun
-- Create date: 26/02/2014
-- Description:	Sp para actualizar la informacion de un vector
-- =============================================
CREATE PROCEDURE [dbo].[SpuVector]
	@idEmp as int
	,@idPlaza as int
	,@vector int
	,@idPeriodoA int
	,@anio int
	,@idcia int
	,@qna int
	,@idUsuario int
AS
BEGIN
begin tran
BEGIN TRY
	if exists(select 1 from hvectores where id_emp=@idEmp and id_plaza=@idPlaza and id_periodo_aplicacion=@idPeriodoA)
		update hvectores
		set id_vector=@vector
		where id_emp=@idEmp and id_plaza=@idPlaza and id_periodo_aplicacion=@idPeriodoA
		

	else
	begin
		declare @idP as int
		set @idP=(select id_periodo from calennomina where id_cia=@idcia and año=@anio and numero=@qna and parcial=0)
		declare @añoQna as varchar(6)
		set @añoQna= CAST(@anio as varchar(4)) + Right(''00''+ cast(@qna as varchar(2)),2)
		insert into Hvectores (id_Emp,id_Plaza,id_Periodo,id_Vector,Fecha,id_user,id_documento,Observaciones,id_periodo_aplicacion)
		values(@idEmp,@idPlaza,@idP,@vector,dbo.anioQuincenaToFecha(@añoQna,0),@idUsuario, 0 , '''' , @idPeriodoA)
		--select ''inserta''
	end
	if @@ROWCOUNT<=0 or @@ROWCOUNT>1
		RAISERROR (''no se actualizó ningun valor'', 16,1);
	else
	begin
		select ''correcto'' as resultado
		commit tran
	end

END TRY
BEGIN CATCH
    SELECT ERROR_MESSAGE() as resultado
    rollback tran
END CATCH;
		
END

'
GO

GO
PRINT N'Creating [dbo].[SPF_Empalme]'
GO
IF OBJECT_ID(N'[dbo].[SPF_Empalme]', 'P') IS NULL
EXEC sp_executesql N'CREATE procedure [dbo].[SPF_Empalme]    
 @id_detalle as int,    
 @undo as bit    
    
AS    
Begin    
 -- vars
 declare @id_detalle_loc as int =@id_detalle
 declare @undo_loc as int =@undo   
 declare @id_documento as int = (Select id_documento from FUP_Documento_Detalle where Id_Detalle = @id_detalle_loc)    
 declare @id_plaza as int = (Select id_plaza from FUP_Documento_Detalle where Id_Detalle = @id_detalle_loc)    
 declare @fecha as date = (Select fechaini from FUP_Documento_Detalle a where Id_Detalle = @id_detalle_loc)    
 declare @id_emp as int = (Select id_emp from FUP_Documentos where Id_Documento = @id_documento)    
 declare @id_motivomov as int = (select Id_MotivoMovimiento from FUP_Documento_Detalle where Id_Detalle = @id_detalle_loc)    
 declare @id_tipmov as int = (select Id_TipoMovimiento from FUP_MotivoMovimiento where Id_MotivoMovimiento = @id_motivomov)    
 declare @flg_baja as bit = (    
  select case when @id_tipmov in (6,7) or @id_motivomov in (25,26,32,33)     
   then 1    
   else 0    
  end    
 )   -- 6,7: BAJA DE PERSONA,PLAZA | 25,26,32,33 : BAJA POR PROMOCION    
 declare @flg_hono as bit = (    
  select case when (select id_rel from HTabulador_SE_Cat_Puesto where id_plaza = @id_plaza) in (1964,2028)    
  then 1    
  else 0    
  end    
 )   /* 1964,2028 Honorarios  */  
    
 if @undo_loc = 0     
 begin    
  insert into empalme_plazaempleados(    
   Id_Emp, Id_plaza, Fecha, Id_User, Movimiento, id_nodo, Documentos, Id,     
   id_plazaanterior, esHistoria, desliguePlaza, tipoHistoria, id_detalle)    
  select Id_Emp, Id_plaza, Fecha, Id_User, Movimiento, id_nodo, Documentos, Id,     
   id_plazaanterior, esHistoria, desliguePlaza, tipoHistoria, @id_detalle_loc id_detalle    
  from plazaempleados     
  where id_plaza = @id_plaza and fecha = @fecha     
  order by fecha desc    
      
  insert into Empalme_HPlazas(Id_plaza, Fecha, Id_TipoMovPlazas, Valor_IdCampo, Id_User, Movimiento, Id, esHistoria, id_detalle)    
  select Id_plaza, Fecha, Id_TipoMovPlazas, Valor_IdCampo, Id_User, Movimiento, Id, esHistoria, @id_detalle_loc id_detalle    
  from hplazas     
  where id_plaza = @id_plaza and fecha = @fecha     
  order by fecha desc, Id_TipoMovPlazas desc    
      
  delete from plazaempleados where id_plaza = @id_plaza and fecha = @fecha    
  delete from hplazas where id_plaza = @id_plaza and fecha = @fecha     
    
  if @flg_baja = 1 -- El movimiento es una baja, se necesita revisar un dia anterior a la fecha indicada    
  begin    
   insert into empalme_plazaempleados(    
    Id_Emp, Id_plaza, Fecha, Id_User, Movimiento, id_nodo, Documentos, Id,     
    id_plazaanterior, esHistoria, desliguePlaza, tipoHistoria, id_detalle)    
   select Id_Emp, Id_plaza, Fecha, Id_User, Movimiento, id_nodo, Documentos, Id,     
     id_plazaanterior, esHistoria, desliguePlaza, tipoHistoria, @id_detalle_loc id_detalle    
   from plazaempleados     
   where id_plaza = @id_plaza and cast(fecha as date) = DATEADD(day,-1, @fecha)    
   order by fecha desc    
    
   insert into Empalme_HPlazas(Id_plaza, Fecha, Id_TipoMovPlazas, Valor_IdCampo, Id_User, Movimiento, Id, esHistoria, id_detalle)    
   select Id_plaza, Fecha, Id_TipoMovPlazas, Valor_IdCampo, Id_User, Movimiento, Id, esHistoria, @id_detalle_loc id_detalle    
   from hplazas     
   where id_plaza = @id_plaza and cast(fecha as date) = DATEADD(day,-1, @fecha)    
   order by fecha desc, Id_TipoMovPlazas desc    
    
   delete from plazaempleados where id_plaza = @id_plaza and cast(fecha as date) = DATEADD(day,-1, @fecha)    
   delete from hplazas where id_plaza = @id_plaza and cast(fecha as date) = DATEADD(day,-1, @fecha)    
    
   if @flg_hono = 1 -- La plaza es de honorarios, se elimiran los periodos consecutivos de la misma persona a partir de la fecha indicada    
   begin    
    declare @cambio_emp as date = (    
     select isnull(min(fecha),convert(date,''9999.12.31'',102))     
     from plazaempleados     
     where id_plaza = @id_plaza and fecha > @fecha and id_emp not in (@id_emp, 0)    
    )    
    
    insert into empalme_plazaempleados(    
     Id_Emp, Id_plaza, Fecha, Id_User, Movimiento, id_nodo, Documentos, Id,     
     id_plazaanterior, esHistoria, desliguePlaza, tipoHistoria, id_detalle)    
    select Id_Emp, Id_plaza, Fecha, Id_User, Movimiento, id_nodo, Documentos, Id,     
      id_plazaanterior, esHistoria, desliguePlaza, tipoHistoria, @id_detalle_loc id_detalle    
    from plazaempleados     
    where id_plaza = @id_plaza and fecha > @fecha and fecha < @cambio_emp     
    order by fecha desc    
    
    insert into Empalme_HPlazas(Id_plaza, Fecha, Id_TipoMovPlazas, Valor_IdCampo, Id_User, Movimiento, Id, esHistoria, id_detalle)    
    select Id_plaza, Fecha, Id_TipoMovPlazas, Valor_IdCampo, Id_User, Movimiento, Id, esHistoria, @id_documento id_documento    
    from hplazas     
    where id_plaza = @id_plaza and fecha > @fecha and fecha < @cambio_emp     
    order by fecha desc, Id_TipoMovPlazas desc    
    
    delete from plazaempleados where id_plaza = @id_plaza and fecha > @fecha and fecha < @cambio_emp     
    delete from hplazas where id_plaza = @id_plaza and fecha > @fecha and fecha < @cambio_emp     
   end    
  end    
 end    
--Codigo para deshacer en caso de error    
 else    
 begin    
  insert into PlazaEmpleados(Id_Emp, Id_plaza, Fecha, Id_User, Movimiento, id_nodo, Documentos, id_plazaanterior, esHistoria, desliguePlaza, tipoHistoria)    
  select Id_Emp, Id_plaza, Fecha, Id_User, Movimiento, id_nodo, Documentos, id_plazaanterior, esHistoria, desliguePlaza, tipoHistoria    
  from Empalme_PlazaEmpleados where id_detalle = @id_detalle_loc    
    
  insert into HPlazas(Id_plaza, Fecha, Id_TipoMovPlazas, Valor_IdCampo, Id_User, Movimiento, esHistoria)    
  select Id_plaza, Fecha, Id_TipoMovPlazas, Valor_IdCampo, Id_User, Movimiento, esHistoria    
  from Empalme_HPlazas    
  where id_detalle = @id_detalle_loc    
    
  delete from Empalme_PlazaEmpleados where id_detalle = @id_detalle_loc     
  delete from Empalme_HPlazas where id_detalle = @id_detalle_loc     
    
 end    
END '
GO

GO
PRINT N'Creating [dbo].[SPF_Baja_clr]'
GO
IF OBJECT_ID(N'[dbo].[SPF_Baja_clr]', 'P') IS NULL
EXEC sp_executesql N'CREATE procedure [dbo].[SPF_Baja_clr]
	@id_detalle as int,  
	@undo as bit
AS  
Begin  
	declare @_id_detalle as int = @id_detalle
	declare @_undo as bit = @undo

	-- vars  
	declare @id_documento int
	declare @id_emp int
	declare @id_plaza int
	declare @id_tipmov int
	declare @id_motivomov int
	declare @desde datetime
	declare @hasta datetime

	declare @tip varchar(2)
	declare @mot varchar(2)
	declare @mot_ant int
	
	select 
		@id_documento = a.id_documento,
		@id_plaza = Id_Plaza,
		@id_emp = id_emp,
		@desde = a.FechaIni,
		@id_motivomov = a.Id_MotivoMovimiento,
		@id_tipmov = d.Id_TipoMovimiento,
		@tip = d.Clave,
		@mot = c.Clave
	from 
		FUP_Documento_Detalle a join FUP_Documentos b
		on a.Id_Documento = b.Id_Documento
		join FUP_MotivoMovimiento c
		on a.Id_MotivoMovimiento = c.Id_MotivoMovimiento
		join FUP_TipoMovimiento d
		on c.Id_TipoMovimiento = d.Id_TipoMovimiento
	where Id_Detalle = @_id_detalle

	if @_undo = 0 
	begin 
		if 
			not exists(select 1 from HDesligues_PlazaEmpleados where id_plaza = @id_plaza and id_doc = @id_documento) and
			not exists(select 1 from HDesligues_HPlazas where id_plaza = @id_plaza and id_doc = @id_documento)
		begin
			set @hasta = isnull
			( 
				(
						select top 1 
								case 
									when Id_Emp = 0 then dateadd(second, 59, fecha)
									else fecha
								end
						from plazaempleados a
						where 
							id_plaza = @id_plaza and
							fecha > @desde and
							(
								not exists (
									select 1
									from PlazaEmpleados
									where
										Id_plaza = @id_plaza and
										fecha > @desde and Fecha < a.Fecha
										and Id_Emp != 0
								)
								or
								not exists (
									select 1
									from PlazaEmpleados
									where
										Id_plaza = @id_plaza and
										fecha > @desde and Fecha < a.Fecha
										and Id_Emp != @id_emp
								)
							)
						order by Fecha desc
				), 
				''9999-12-31''
			)

			insert into HDesligues_PlazaEmpleados(
				Id_Emp, Id_plaza, Fecha, Id_User, Movimiento, id_nodo, Documentos, Id,   
				id_plazaanterior, esHistoria, desliguePlaza, tipoHistoria, id_doc
			)
			select
				Id_Emp, Id_plaza, Fecha, Id_User, Movimiento, id_nodo, Documentos, Id,   
				id_plazaanterior, esHistoria, desliguePlaza, tipoHistoria, @id_documento id_doc
			from plazaempleados 
			where id_plaza = @id_plaza and fecha >= @desde and fecha < @hasta and year(fecha) != 9999
			order by fecha desc  
----------------------------------------------------------------------------------
			declare @ajuste int = 0
			if exists (select 1 from hplazas where Id_plaza = @id_plaza and Fecha = @desde and Valor_IdCampo in (2, 4) and Id_TipoMovPlazas = 2) 
				set @ajuste = 1

			declare @ajuste_hplazas int = 0
			if(year(@hasta) < 9999)
				if(DATEPART(second, @hasta) = 59) if exists(select 1 from hplazas where Id_plaza = @id_plaza and Fecha = dateadd(second, 1, @hasta) and Valor_IdCampo in (2, 4) and Id_TipoMovPlazas = 2)
					set @ajuste_hplazas = 1

			insert into HDesligues_HPlazas(
				Id_plaza, Fecha, Id_TipoMovPlazas, Valor_IdCampo, Id_User, 
				Movimiento, Id, esHistoria, id_doc  
			)
			select 
				Id_plaza, Fecha, Id_TipoMovPlazas, Valor_IdCampo, Id_User, 
				Movimiento, Id, esHistoria, @id_documento id_doc  
			from hplazas   
			where id_plaza = @id_plaza and fecha >= dateadd(minute,@ajuste, @desde) and fecha < dateadd(minute, @ajuste_hplazas, @hasta)
			order by fecha desc, Id_TipoMovPlazas desc  
-----------------------------------------------------------------------------------        
			delete from plazaempleados where id_plaza = @id_plaza and fecha >= @desde and fecha < @hasta  and year(fecha) != 9999
			delete from hplazas where id_plaza = @id_plaza and fecha >= dateadd(minute,@ajuste, @desde) and fecha < dateadd(minute, @ajuste_hplazas, @hasta)
		end  
	end
	else  
	begin  
		insert into PlazaEmpleados(Id_Emp, Id_plaza, Fecha, Id_User, Movimiento, id_nodo, Documentos, id_plazaanterior, esHistoria, desliguePlaza, tipoHistoria)  
		select Id_Emp, Id_plaza, Fecha, Id_User, Movimiento, id_nodo, Documentos, id_plazaanterior, esHistoria, desliguePlaza, tipoHistoria  
		from HDesligues_PlazaEmpleados 
		where id_plaza = @id_plaza and id_doc = @id_documento 
  
		insert into HPlazas(Id_plaza, Fecha, Id_TipoMovPlazas, Valor_IdCampo, Id_User, Movimiento, esHistoria)  
		select Id_plaza, Fecha, Id_TipoMovPlazas, Valor_IdCampo, Id_User, Movimiento, esHistoria  
		from HDesligues_HPlazas  
		where id_plaza = @id_plaza and id_doc = @id_documento 
  
		delete from HDesligues_PlazaEmpleados where id_plaza = @id_plaza and id_doc = @id_documento 
		delete from HDesligues_HPlazas where id_plaza = @id_plaza and id_doc = @id_documento 
	 end  
END'
GO

GO
PRINT N'Creating [dbo].[SIGP_IncidenciasLaborales]'
GO
IF OBJECT_ID(N'[dbo].[SIGP_IncidenciasLaborales]', 'P') IS NULL
EXEC sp_executesql N'
CREATE procedure [dbo].[SIGP_IncidenciasLaborales] AS
BEGIN

	select distinct ID_EMP,RFC,CURP,replace(Clave_Pago,'' '','''') Clave_Pago,Tipo_Incidencia_Laboral,Fecha_Incidencia  from (  
		select e.Id_Emp,e.RFC, e.CURP, pi.plazaieepo Clave_Pago, ''INASISTENCIA'' Tipo_Incidencia_Laboral, a.FechaIna Fecha_Incidencia   
		from Ra_FaltasGabo2016 a   
		inner join empleados e on e.id_emp = a.id_emp  
		inner join plazaieepo pi on pi.id_plaza = a.id_plaza  
		where a.fechaina <> ''00/00/0000'' and exists ( 
			select 1 from hplazas_concifed_230217 pc 
			where pc.CODIGO_PLAZA = replace(case when pi.plazaieepo like ''14%'' or pi.plazaieepo like ''15%'' then ''07''+substring(pi.plazaieepo,3, len(pi.plazaieepo)) else pi.plazaieepo end,'' '','''') and pc.ESTATUS <> ''C''
		) group by e.Id_Emp, e.RFC, e.CURP, pi.plazaieepo, a.FechaIna  

		union  

		select e.ID_EMP,e.RFC, e.CURP, pi.plazaieepo Clave_Pago, ''INASISTENCIA'' Tipo_Incidencia_Laboral, a.FechaIna2 Fecha_Incidencia   
		from Ra_FaltasGabo2017 a   
		inner join empleados e on e.id_emp = a.id_emp  
		inner join plazaieepo pi on pi.id_plaza = a.id_plaza  
		where a.fechaina <> ''00/00/0000''  and exists ( 
			select 1 from hplazas_concifed_230217 pc 
			where pc.CODIGO_PLAZA = replace(case when pi.plazaieepo like ''14%'' or pi.plazaieepo like ''15%'' then ''07''+substring(pi.plazaieepo,3, len(pi.plazaieepo)) else pi.plazaieepo end,'' '','''') and pc.ESTATUS <> ''C'' 
		) group by e.Id_Emp, e.RFC, e.CURP, pi.plazaieepo, a.FechaIna2  

		union  

		select e.ID_EMP,e.RFC, e.CURP, pi.plazaieepo Clave_Pago, ''INASISTENCIA'' Tipo_Incidencia_Laboral, a.FechaIna2 Fecha_Incidencia   
		from Ra_Faltas2018 a   
		inner join empleados e on e.id_emp = a.id_emp  
		inner join plazaieepo pi on pi.id_plaza = a.id_plaza  
		where a.fechaina <> ''00/00/0000'' and exists ( 
			select 1 from hplazas_concifed_230217 pc 
			where pc.CODIGO_PLAZA = replace(case when pi.plazaieepo like ''14%'' or pi.plazaieepo like ''15%'' then ''07''+substring(pi.plazaieepo,3, len(pi.plazaieepo)) else pi.plazaieepo end,'' '','''') and pc.ESTATUS <> ''C'' 
		) group by e.Id_Emp, e.RFC, e.CURP, pi.plazaieepo, a.FechaIna2  

		union

		select e.ID_EMP, e.RFC, e.CURP, pi.PLAZAIEEPO as CLAVE_PAGO, 
		CASE 
			when fmm.Clave = ''44'' or fmm.Clave = ''48'' then  ''INCAPACIDAD CON SUELDO''
			else ''INCAPACIDAD SIN SUELDO''
		END
		as TIPO_INCIDENCIA_LABORAL,convert(varchar,cal.dia,103) as FECHA_INCIDENCIA
		-- select distinct fmm.id_motivomovimiento
		from fup_documentos fd
		inner join fup_documento_detalle fdd on fd.id_documento = fdd.id_documento
		inner join plazaieepo pi on fdd.Id_Plaza = pi.Id_plaza
		inner join empleados e on fd.Id_Emp = e.Id_Emp
		inner join fup_motivomovimiento fmm on fdd.id_motivomovimiento = fmm.id_motivomovimiento
		inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
		inner join(
			select dia from (
				SELECT dia = DATEADD(DAY, rn - 1, ''2016-01-01'') FROM (
					SELECT TOP (DATEDIFF(DAY, ''2016-01-01'', getdate())) rn = ROW_NUMBER() OVER (ORDER BY s1.[object_id]) 
					FROM sys.all_objects AS s1
					CROSS JOIN sys.all_objects AS s2
					ORDER BY s1.[object_id]
				) AS x
			)y where datepart(dw,dia) not in (1,7)
		)cal on fdd.FechaIni <= cal.dia and fdd.FechaFin >= cal.dia
		where ftm.id_tipomovimiento in (9,10,11,31) and fd.id_estatus=2 and fdd.fechaini>=''20160101''
		--order by e.Id_Emp,pi.Id_plaza

	) a order by id_emp,replace(Clave_Pago,'' '',''''),Tipo_Incidencia_Laboral,Fecha_Incidencia

END

'
GO

GO
PRINT N'Creating [dbo].[PL4VENXQU1NUPN]'
GO
IF OBJECT_ID(N'[dbo].[PL4VENXQU1NUPN]', 'P') IS NULL
EXEC sp_executesql N'create proc [dbo].[PL4VENXQU1NUPN]

@qnafin varchar(6)
AS

select p.id_plaza, pla.plazaieepo, dbo.fechaToAnioQuincena( p.fechacreacion) as Desde, dbo.fechaToAnioQuincena( p.fechavencimiento) as Hasta, CONVERT(VARCHAR(10),p.fechacreacion,111) as fechacreacion, CONVERT(VARCHAR(10),p.fechavencimiento,111) as fechavencimiento 
from plazas p 
inner join plazaieepo pla on pla.id_plaza = p.id_plaza
inner join (
	select h.id_plaza,h.id_rel from 
	HTabulador_SE_Cat_Puesto h
	inner join
	(
		select id_plaza,Max(Fecha) as FechaMax 
		from 
		HTabulador_SE_Cat_Puesto
		where fecha <= dbo.anioQuincenaToFecha(@qnafin, 0)
		group by id_plaza
	) htc
	on htc.id_plaza = h.id_plaza and htc.FechaMax = h.fecha
) hc on hc.id_plaza = pla.id_plaza
inner join TTabulador_SE_Cat_Puesto tt on tt.id_tabulador_se_cat_puesto = hc.id_rel
where dbo.fechaToAnioQuincena(p.fechavencimiento) = @qnafin
and tt.TModelo_SE_id_Modelo_SE in (7)'
GO

GO
PRINT N'Creating [dbo].[Dsv_Traspaso_upn]'
GO
IF OBJECT_ID(N'[dbo].[Dsv_Traspaso_upn]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:      David Santibañez vargas
-- Create date: 14/marzo/2014
-- Description:	Migracion de Datos al Nvo Esquema
-- =============================================
CREATE PROCEDURE [dbo].[Dsv_Traspaso_upn]
(
@periodo varchar(max),
@forma int
)
              	
AS
BEGIN
	
	SET NOCOUNT ON;

	if @forma = 1
	begin
	   delete from  [informatica].dbo.Deta_datos  where id_periodo in (@periodo)
	   delete from  [informatica].dbo.Mtra_datosr where id_periodo in (@periodo)
	end

select a.id_periodo, a.Id_Emp, a.id_plaza, a.id_referencia, 
convert(varchar(12),cast(sum(case when b.tipo = 1 then  a.pesos + a.pesosexcento else 0 end)as money), 1) as Percepciones ,               
	 convert(varchar(12), cast(sum(case when b.tipo = 2 then  a.pesos + a.pesosexcento else 0 end) as money), 1) as Deducciones,              
	 convert(varchar(12), cast(sum ( (case when b.tipo = 1 then  a.pesos + a.pesosexcento else 0 end ) - (case when b.tipo = 2 then  a.pesos + a.pesosexcento else 0 end ) ) as money), 1) as Liquido 
	 into #paso1
	 from nom_HistPagos a inner join dbo.conceptos b              
	 on b.id_concepto   = a.id_concepto  
	 where a.Id_Periodo in ( @periodo  )
group by a.id_periodo,a.id_emp,a.id_plaza, a.id_referencia
----------------------------------------------
--if object_id (N''tempdb..#paso2d'' ) is not null drop table #paso2d;
select a.id_concepto, a.id_periodopago, a.pesos,  cc, desde, hasta, id_referencia, id_emp, id_plaza, id_periodo 
into #paso2d from nom_HistPagos a inner join dbo.conceptos b              
	 on b.id_concepto   = a.id_concepto    where b.tipo <> 3 and a.Id_Periodo in ( @periodo)
----------------------------------------------
--if object_id (N''tempdb..#dbefectos'' ) is not null drop table #dbefectos;
select  id_periodo, numero, id_cia, 
cast( year(c.FechaIni) as varchar) + ''''+ Right(''00'' + Cast(case when(day(c.FechaIni)>15)then month(c.FechaIni)*2 else (month(c.FechaIni)*2)-1 end as Varchar(2)),2) as desde,  
	 cast( year(c.FechaFin) as varchar) + ''''+ Right(''00'' + Cast(case when(day(c.FechaFin)>15)then month(c.FechaFin)*2 else (month(c.FechaFin)*2)-1 end as Varchar(2)),2) as hasta
	 into #dbefectos from calennomina c  where Id_Periodo in (select distinct Id_Periodo from #paso1 )
----------------------------------------------
ALTER TABLE #paso1 ADD desde INT
ALTER TABLE #paso1 ADD hasta INT
----------------------------------------------
UPDATE #paso1
SET desde = #dbefectos.desde 
from #dbefectos where #dbefectos.Id_Periodo = #paso1.id_periodo;

UPDATE #paso1
SET hasta = #dbefectos.hasta 
from #dbefectos where #dbefectos.Id_Periodo = #paso1.id_periodo;
----------------------------------------------
ALTER TABLE #paso2d ADD Mtra_datos_Id INT

insert into [informatica].dbo.Mtra_datosr (id_periodo, id_emp, id_plaza, id_referencia, percepciones, deducciones, liquido, desde, hasta)
select id_periodo, id_emp, id_plaza, id_referencia, percepciones, deducciones, liquido, desde, hasta from #paso1 

----------------------------------------------
update #paso2d  set Mtra_datos_Id = (select Mtra_datos_id  from [informatica].dbo.Mtra_datosr  b where  #paso2d.id_emp=b.id_emp and 
#paso2d.id_plaza=b.id_plaza and #paso2d.id_periodo=b.id_periodo and #paso2d.id_referencia=b.id_referencia)
----------------------------------------------
--if object_id (N''tempdb..#pruebamil'' ) is not null drop table #pruebamil;
select distinct  a.desde, a.id_periodo, Mtra_datos_id into #pruebamil
 from #paso2d a 
 where 
  a.Id_Periodo in( 
select id_periodo from calennomina where leyenda4 = 2 and (parcial >= 20 and parcial <= 40) )
----------------------------------------------
--if object_id (N''tempdb..#dbretros'' ) is not null drop table #dbretros;
select min(desde) as desde, max(desde) as hasta, id_periodo, Mtra_datos_id into #dbretros
  from #pruebamil group by Id_Periodo,  Mtra_datos_id
----------------------------------------------
UPDATE [informatica].dbo.Mtra_datosr
SET desde = #dbretros.desde 
from #dbretros where #dbretros.Id_Periodo = [informatica].dbo.Mtra_datosr.id_periodo and #dbretros.Mtra_datos_id = [informatica].dbo.Mtra_datosr.Mtra_datos_Id; 

UPDATE [informatica].dbo.Mtra_datosr
SET hasta = #dbretros.hasta 
from #dbretros where #dbretros.Id_Periodo = [informatica].dbo.Mtra_datosr.id_periodo and #dbretros.Mtra_datos_id = [informatica].dbo.Mtra_datosr.Mtra_datos_Id;
----------------------------------------------
insert into [informatica].dbo.Deta_datos 
select id_concepto, id_periodopago, pesos, cc, desde, hasta, id_referencia, id_periodo, Mtra_datos_Id from #paso2d
    
END
'
GO

GO
PRINT N'Creating [dbo].[sp_SHP2ded]'
GO
IF OBJECT_ID(N'[dbo].[sp_SHP2ded]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		David Santibañez Vargas
-- Create date: 3 de mayo de 2013
-- Description:	percepciones recalculo
-- =============================================

CREATE PROCEDURE [dbo].[sp_SHP2ded]
	@idplaza int,      
@Idemp int,      
@idperiodo int      
with encryption
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT      
   a.id_concepto,a.Resultado as Clave,a.descripcion, b.Id_Emp, Cast(g.año as varchar(4)) + ''''+Right(''00''+Cast(g.numero as varchar(2)),2) as Periodo, b.id_plaza,Desde+'' ''+Hasta as Desde_Hasta, convert(varchar(12), cast(b.Pesos as money), 1) AS Importe      
      
 FROM      
   Conceptos a       
   INNER JOIN ConceptoRelEmpresa c      
   ON a.id_concepto = c.id_concepto       
   INNER JOIN      
            (SELECT     Id_Emp, id_concepto, Id_Periodo, id_plaza, Pesos,Desde,Hasta      
            FROM       recalculo_histpagos      
            UNION ALL      
            SELECT     Id_Emp, id_concepto, Id_Periodo, id_plaza, Pesos,Desde,Hasta     
            FROM       Nom_histpagos)       
   AS b      
   ON a.id_concepto = b.id_concepto    
   inner join Empleados E    
   on e.id_emp = b.id_emp    
   inner join Plazas F    
   on F.id_plaza = b.id_plaza    
   Inner Join Calennomina G  
   on b.Id_Periodo=G.Id_periodo     
 WHERE      
   e.noempx=@idemp and f.num_plaza=@idplaza AND b.id_periodo=@idperiodo and (c.id_razonsocial = 5) AND (a.Tipo = 2) AND (a.En_ListaRaya = 1)      
 ORDER BY      
   A.descripcion      
         
SET NOCOUNT OFF      
    
END
'
GO

GO
PRINT N'Creating [dbo].[ASF_CambiosAdscripcion]'
GO
IF OBJECT_ID(N'[dbo].[ASF_CambiosAdscripcion]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[ASF_CambiosAdscripcion]
@anio int
WITH EXEC AS CALLER
AS

select ''R20'' CV_UR, ''OAXACA'' ENTIDAD, ''IO13 FONE SERVICIOS PERSONALES'' CPP, ''FONE'' NOM_FONDO, e.RFC, e.CURP, e.Nombre NOM_EMP, e.ApPaterno AP1_EMP,
e.ApMaterno AP2_EMP, pi.PlazaIEEPO PLAZA, pi.Diagonal CON_PLAZA, tt.categoria CAT_PUESTO, fmm.Descripcion MOTIVO,
dbo.obtieneCTPlazaQna(''ct'', dbo.fechatoanioquincena(fdd.FechaIni-1), fdd.id_plaza) CCT_ORIG, dbo.fechatoanioquincena(fdd.FechaIni-1)EFEC_BAJA,
fid.Centro_Trabajo CCT_DEST, dbo.fechatoanioquincena(fdd.FechaIni) EFEC_ALTA, '''' NOM_AUT, '''' PUEST_AUT,'''' NUM_OF, '''' FECHA_OF, '''' CARGO_DES, '''' TRAB_REA, '''' NOM_SUST, '''' RFC_SUST, '''' CURP_SUST,
dbo.obtieneCTPlazaQna(''ct'', dbo.fechatoanioquincena(fdd.FechaIni), fdd.id_plaza) ct_destino,
fd.Id_Documento, fd.Id_Emp, fd.Folio, fd.Id_Estatus, fdd.Id_Plaza, fdd.FechaIni, fdd.FechaFin, fdd.Id_MotivoMovimiento,
fmm.Clave CVEMOT, fmm.Descripcion DESCMOTIVO, fmm.Id_TipoMovimiento,ftm.Clave CVETIPO, ftm.Descripcion DECTIPO, dbo.fechatoanioquincena(fdd.FechaIni) QNAINI, dbo.fechatoanioquincena(fdd.FechaIni-1) QNAANT
into #tabla_1
from FUP_Documentos fd
inner join FUP_Documento_Detalle fdd on fd.Id_Documento = fdd.Id_Documento
inner join FUP_MotivoMovimiento fmm on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
inner join FUP_TipoMovimiento ftm on ftm.Id_TipoMovimiento = fmm.Id_TipoMovimiento
inner join FUP_Informacion_Documentos fid on fid.Id_Documento = fd.Id_Documento
inner join empleados e on fd.Id_Emp = e.Id_Emp
inner join PlazaIEEPO pi on pi.Id_plaza = fdd.Id_Plaza
inner join (
  select a.id_plaza, t.categoria, t.descripcion, t.id_Tabulador_SE_Cat_Puesto, a.id_rel from HTabulador_SE_Cat_Puesto a inner join (
  select id_plaza, max(fecha) fecha from HTabulador_SE_Cat_Puesto where fecha <= getdate() group by id_plaza
  ) b on a.fecha = b.fecha and a.id_plaza = b.id_plaza
  inner join TTabulador_SE_Cat_Puesto t on t.id_Tabulador_SE_Cat_Puesto = a.id_rel
) tt on tt.id_plaza = fdd.id_plaza
where fmm.Descripcion like ''%reubicacion%'' and fdd.FechaIni >= (cast(@anio as varchar)+''/01/01'') and fdd.FechaFin <= (cast(@anio as varchar)+''/12/31'') and fd.Id_Estatus = 2

delete from #tabla_1 where CCT_ORIG = CCT_DEST

select CV_UR, ENTIDAD, CPP, NOM_FONDO, RFC, CURP, NOM_EMP, AP1_EMP, AP2_EMP, PLAZA, CON_PLAZA, CAT_PUESTO, MOTIVO, CCT_ORIG, EFEC_BAJA, CCT_DEST, 
EFEC_ALTA, NOM_AUT, PUEST_AUT, NUM_OF, FECHA_OF, CARGO_DES, TRAB_REA, NOM_SUST, RFC_SUST, CURP_SUST 
from #tabla_1'
GO

GO
PRINT N'Creating [dbo].[spf_Genera_Recalculo_conceptos]'
GO
IF OBJECT_ID(N'[dbo].[spf_Genera_Recalculo_conceptos]', 'P') IS NULL
EXEC sp_executesql N'CREATE procedure [dbo].[spf_Genera_Recalculo_conceptos]                                            
(                                                         
  @iddetalle  as int,                         
  @id_concepto as int,                        
  @accion as bit                                            
) as              
Begin                 
 declare @iddetalle_loc as int=@iddetalle               
 --declare @iddetalle_loc as int=2703956               
 declare @id_concepto_loc as int=@id_concepto              
 --declare @id_concepto_loc as int=200              
 declare @accion_loc as bit=@accion              
 --declare @accion_loc as bit=0          
 declare @id_documento as int                        
 declare @procede as int                        
 declare @concepto as varchar(6)                        
 declare @Id_Cia as int                        
 declare @idEmpleado as int                        
 declare @id_calculo as int=0                         
 declare @Añoactual as int=YEAR(GETDATE())                        
 declare @rfc as varchar(13)                        
 declare @plazaieepo as varchar(21)                        
 declare @desdefecha as datetime                         
 declare @hastafecha as datetime       
 declare @fechafinhasta as datetime                        
 declare @tipo as varchar(5)                        
 declare @motivo as varchar(5)                        
 declare @idPlaza as int                        
 declare @id_Periodo_Transfer as int                        
 declare @hasta as varchar (6)=''''                        
 declare @desde as varchar (6)                        
 declare @recalculo as int                    
 declare @añook as int                  
 set @id_documento=(select id_documento from fup_documento_detalle where id_detalle=@iddetalle_loc)                        
 set @concepto =(select resultado from conceptos where id_concepto=@id_concepto_loc)                        
 set @idEmpleado=(select id_emp from fup_documentos where id_documento=@id_documento)                        
 set @id_calculo = (select max(id_calculo)+1  from Recalculo_Calculo)                        
 set @Id_Cia = (select id_cia from Empleados where Id_Emp =@idEmpleado)                        
 set @rfc =  (select rfc from Empleados where Id_Emp =@idEmpleado )                        
 set @idPlaza=(select id_plaza from fup_documento_detalle where id_detalle=@iddetalle_loc)                        
 set @plazaieepo =(select plazaieepo from plazaieepo where id_plaza=@idPlaza)                        
 set @desdefecha=(select fechaini from fup_documento_detalle where id_detalle=@iddetalle_loc)      
 set @fechafinhasta=(select fechafin from fup_documento_detalle where id_detalle=@iddetalle_loc)       
      
 --- se agrega validacion para el caso de los conceptos con retroactivos que tienen un hasta      
if (@desdefecha=@fechafinhasta)       
begin      
     set @hasta=''999924''      
end      
else       
begin      
     set @hasta=(select dbo.fechaToAnioQuincena(@fechafinhasta))      
end            
 set @hastafecha = cast((select dbo.anioQuincenaToFecha(@hasta,1)) as datetime)          
 set @desde =cast((select dbo.fechatoanioquincena(@desdefecha) )as varchar)                        
 set @tipo =(select ftm.clave from fup_documento_detalle fdd                        
 inner join FUP_MotivoMovimiento fmm on fdd.id_motivomovimiento=fmm.id_motivomovimiento                        
 inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento                        
 where fdd.id_detalle=@iddetalle_loc)                        
 --set @motivo=(select clave from FUP_MotivoMovimiento where Id_MotivoMovimiento in (                        
 --select Id_MotivoMovimiento from FUP_documento_detalle                         
 --where id_detalle=@iddetalle_loc))   
 set @motivo=(select clave from FUP_MotivoMovimiento fmm                       
 inner join FUP_documento_detalle fdc on fmm.Id_MotivoMovimiento=fdc.Id_MotivoMovimiento                        
 where fdc.id_detalle=@iddetalle_loc)                   
 set @id_Periodo_Transfer = (select id_periodo from FUP_Informacion_Documentos where id_documento=@id_documento)                        
 set @recalculo=(select count(id_calculo) from recalculo_calculo where id_detalle=@iddetalle_loc and Descripcion not like ''Reversa%'' and Id_Periodo_Transfer=@id_Periodo_Transfer)                   
 declare @añomov as int =year(@desdefecha)          
 declare @quincena as varchar (2)          
 declare @fechaperiodocaptura as datetime= (select fechaini from calennomina where id_periodo=@id_Periodo_Transfer)            
 declare @inserta varchar(30)                
       
          
 if (@Añoactual-@añomov>1)              
  begin     
 if(@Añoactual-@añomov=1)    
    begin          
   set @añook=@añoactual-1                  
   set @quincena=(select (numero) from calennomina where id_periodo=@id_Periodo_Transfer)            
    end    
 else     
    begin    
   set @añook=YEAR(@desdefecha)    
   set @quincena=(select distinct (numero) from calennomina where FechaIni=@desdefecha)     
    end    
    
   if(@quincena<24)            
     begin             
           set @quincena=@quincena            
     end            
   else              
    begin            
        set @quincena=''1''            
    end            
        
    if(@quincena <10)                
       begin           
          set @quincena=''0''+@quincena                          
          set @desde= cast(@añook as varchar(max))+@quincena                       
          set @desdefecha =cast((select dbo.anioQuincenaToFecha(@desde,0) )as varchar)                                   
    end        
    else        
        begin    
       set @desde= cast(@añook as varchar(max))+@quincena                       
             set @desdefecha =cast((select dbo.anioQuincenaToFecha(@desde,0) )as varchar)           
        end          
   end                
 else                  
     begin            
     set @quincena=(select distinct (numero) from calennomina where FechaIni=@desdefecha)                          
  if (@quincena<24)            
      begin           
           if (@Añoactual-@añomov=0)            
    begin          
      set @quincena=@quincena          
    end          
           else          
    begin          
      set @quincena=@quincena       
    end              
     end            
     else              
   begin            
     set @quincena=''1''            
      end            
               
     --set @desdefecha=(select fechaini from fup_documento_detalle where id_detalle=@iddetalle_loc)                        
     --set @desde=cast((select dbo.fechaToAnioQuincena(@desdefecha))as varchar(6))                  
     --set @desde= cast(year(@desdefecha) as varchar(max))+@quincena                       
     --set @desdefecha =cast((select dbo.anioQuincenaToFecha(@desde,0) )as varchar)          
     if(@quincena <10)                
       begin          
         set @quincena=''0''+@quincena                           
         set @desde= cast(year(@desdefecha) as varchar(max))+@quincena                       
         set @desdefecha =cast((select dbo.anioQuincenaToFecha(@desde,0) )as varchar)                           
       end          
       --print @desdefecha          
      --set @desdefecha=(select fechaini from fup_documento_detalle where id_detalle=@iddetalle_loc)                        
      --set @desde =cast((select dbo.fechatoanioquincena(@desdefecha) )as varchar)                  
    end            
  --print @desde                
          
    --1.- Verificar si el movimiento de alta de carrera/cambio no contenga otros movimientos que si generan recalculo,                        
 -- ya que en este caso no debe generar recalculo, si el documento no contiene otro movimiento mas que el                         
 -- alta de carrera se genera el retro.               
          
 if(exists( select fdd.id_motivomovimiento from fup_documento_detalle fdd with (nolock)  
 inner join FUP_MotivoMovimiento fmm  with (nolock) on fdd.Id_MotivoMovimiento=fdd.Id_MotivoMovimiento  
 inner join FUP_TipoMovimiento ftm  with (nolock) on fmm.Id_TipoMovimiento=ftm.Id_TipoMovimiento  
 where fdd.id_documento=@id_documento and ftm.Id_TipoMovimiento in (2,3,4,8,12,13)  
   ))                        
     begin          
          set @procede=0                        
        end          
 else                        
        begin          
          set @procede=1                        
  end          
            
          
 if (@accion_loc=0 and @procede=1 and @recalculo=0)                        
          
 begin                        
     ----2.- Insertar en la tabla recalculo_calculo, con los datos del movimiento,                        
  ---- para este tipo de recalculos se generan con el tipo 2 (Recalculos Fup)           
  ---seimpre y cuando no tenga un recalculo generado de algun concepto o movimiento de ingreso,promocion o adicional          
  declare @si as int=0            
  if(exists (select * from recalculo_calculo where descripcion like +''%''+@plazaieepo+''%'' and descripcion like +''%''+@rfc+''%'' and descripcion like +''%''+@concepto+''%'' and descripcion not like ''Reversa%'' and id_periodo_transfer=@id_Periodo_Transfer and id_recalculo_tipo=2 ))                        
     begin                        
          set @si=1                        
     end               
     else                        
     begin                        
          if(exists (select * from recalculo_calculo where descripcion like +''%''+@plazaieepo+''%'' and descripcion like +''%''+@rfc+''%'' and descripcion not like ''Reversa%'' and id_periodo_transfer=@id_Periodo_Transfer and id_recalculo_tipo<>2))            
       begin                        
            set @si=1           
       end                    
     else                         
        begin           
          if(@fechaperiodocaptura=@desdefecha)          
        begin           
          set @inserta=''No inserta recalculo''          
        end          
       else           
        begin                    
    insert into Recalculo_Calculo (Id_Calculo,Id_Cia,Fecha_CorteMov,Año,Descripcion,Activo,CalculoTotal,                        
          Id_Periodo_Transfer,NumProrrateo,ExcluirCancelados,Calculo_Original,                        
          id_recalculo_tipo,id_Formula_Filtro,Id_Detalle,id_statusplaza_LR,            
          id_tipoplaza_LR)                              
          values(@id_calculo,@Id_Cia, GETDATE(),@Añoactual,''RFUP ''+ @tipo +''-'' +@motivo+ '' concepto=''+ cast(@concepto as varchar(10)) +'' id_plaza= ''+cast(@idPlaza as varchar(10)) +'' id_emp= ''+cast(@idEmpleado as varchar(10))  +'' efectos ''+cast(@desde as varchar(10)) +''-''+cast(@hasta as varchar(10))+'' con RFC:''+ @rfc+'' y plaza: ''+@plazaieepo+''.'',1,0,@id_Periodo_Transfer,0,0,0,2,0,@iddetalle_loc,0,0);                                              
                 
           --3.- Insertar en recalculo_periodos           
          insert into recalculo_periodos (Id_Calculo, Id_Periodo)                                                  
          Select top 24  @id_calculo, Id_Periodo From CalenNomina Where fechaini >= @desdefecha                                              
          and fechafin <= @hastafecha and parcial = 0 and actualizado = 1 and procesado=1 and id_cia = @Id_Cia and numero not in (25);                        
                 
          --4.- Insertar en recalculo_empleadosperiodos                        
          insert into Recalculo_EmpleadosPeriodos (id_recalculo,id_periodo,id_emp,id_plazaCalcular,id_plazaComparar)                                     
          Select top 24  @id_calculo, Id_Periodo, @idEmpleado, @idPlaza, @idPlaza  From CalenNomina Where fechaini >= @desdefecha                                             
          and fechafin <= @hastafecha and parcial = 0 and actualizado = 1 and procesado=1 and id_cia = @Id_Cia and numero not in (25);                        
        end             
     end                        
         end                        
end                              
else --Por si truena lo regresamos                        
     begin                         
     set @procede=0           
     --delete from Recalculo_Periodos                         
     --where Id_Calculo in (select id_calculo from recalculo_calculo where id_detalle=@iddetalle_loc                        
     --and descripcion not like ''%Reversa%'')
	 
	 delete rp from Recalculo_Periodos rp
	 inner join recalculo_calculo rc on rp.Id_Calculo=rc.Id_Calculo and rc.Descripcion not like ''%Reversa%''
	 where rc.Id_Detalle= @iddetalle_loc                     
                                                                   
     --delete from Recalculo_empleadosperiodos                         
     --where id_recalculo in (select id_calculo from recalculo_calculo where id_detalle=@iddetalle_loc                        
     --and descripcion not like ''%Reversa%'')
	 
	 delete rep from Recalculo_empleadosperiodos rep
	 inner join recalculo_calculo rc on rep.id_recalculo=rc.Id_Calculo and rc.Descripcion not like ''%Reversa%''
	 where rc.Id_Detalle= @iddetalle_loc                          
               
     --delete from recalculo_calculo                         
     --where id_Calculo in (select id_calculo from recalculo_calculo where id_detalle=@iddetalle_loc          
     --and descripcion not like ''%Reversa%'') 
	 
	 delete from recalculo_calculo where id_detalle=@iddetalle_loc and descripcion not like ''%Reversa%''
 end                        
end'
GO

GO
PRINT N'Creating [dbo].[DiferenciasCuadre]'
GO
IF OBJECT_ID(N'[dbo].[DiferenciasCuadre]', 'P') IS NULL
EXEC sp_executesql N'CREATE procedure [dbo].[DiferenciasCuadre]
as
begin
Select a.id_concepto,c.resultado,c.tipo,a.cantidad as cantidadEllos,a.cantidaddepagos as cantidaddepagosEllos,
b.cantidad as CantidadNOS, b.cantidadDEPagos as cantidaddepagosNos,
 a.cantidad - b.cantidad as diferencia,a.cantidaddepagos - b.cantidadDEPagos as diferenciaPagos from 
(( Select id_concepto,SUM(importe)/100 as cantidad,count(concepto) as cantidadDEPagos 
from cto1305 group by id_concepto ) A
left join 
(Select id_concepto,SUM(pesos + pesosexcento) as cantidad,count(id_concepto) as cantidadDEPagos  from 
hp1305f group by id_concepto ) B 
on A.id_concepto = B.id_concepto )
inner join conceptos C on c.id_concepto = a.id_concepto
order by c.tipo,c.resultado

end

'
GO

GO
PRINT N'Creating [dbo].[P_Puestos_categorias]'
GO
IF OBJECT_ID(N'[dbo].[P_Puestos_categorias]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		<Sistemas,Noemi>
-- Create date: <Create Date, 10/06/2017 >
-- Description:	<Description, Datos de Puestos y categorias al igual que los conceptos>
-- =============================================
--exec P_Puestos_categorias 1,'''','''','''','''',121,1908,''2''
--select * from empleados where rfc =''LOHE781215RJ6''
CREATE procedure [dbo].[P_Puestos_categorias] 
@consulta int,
@catpuesto varchar(12),--Categoria/Puesto
@descripcionCP varchar(50), --descripcion
@filtroCP varchar(10), --categoria 
@idCias varchar(20), 
@idUsuario int,
@idPuesto Int,
@tipoValor varchar(15)
AS
	if(@consulta = 1)begin 
	CREATE TABLE #TCat_Pto_SE_id_Cat_Pto_SE (
	TCat_Pto_SE_id_Cat_Pto_SE INT 
	);
	
	 if (@catpuesto = ''Puestos'') begin
		INSERT INTO #TCat_Pto_SE_id_Cat_Pto_SE
		SELECT * FROM ( SELECT 2 TCat_Pto_SE_id_Cat_Pto_SE UNION ALL SELECT 3 TCat_Pto_SE_id_Cat_Pto_SE UNION ALL SELECT 4 TCat_Pto_SE_id_Cat_Pto_SE ) A;
	END ELSE BEGIN
		INSERT INTO #TCat_Pto_SE_id_Cat_Pto_SE
		SELECT 1 TCat_Pto_SE_id_Cat_Pto_SE;
	END
			 
		Select distinct id,categoria,descripcion,horasServicio,horasCompatibilidad, 
				Case when horasTotal > 42 then 42 else horasTotal end as horasTotal,Nomina 
		from ( 
			Select Categorias.id_Tabulador_SE_Cat_Puesto as id, Categorias.categoria, Categorias.descripcion, Hrs_Serv as horasServicio, Hrs_Compatibilidad as horasCompatibilidad , 
					Case when Hrs_Compatibilidad > Hrs_Comp_Max Then Hrs_Compatibilidad Else Hrs_Comp_Max end as horasTotal, 
					case when Modelo.Descripcion like ''M-MANDOS MEDIOS'' Then ''MANDOS MEDIOS'' else ( case when Modelo.Descripcion like ''U-UPN'' Then ''UPN'' Else ''BASICA'' End ) End as Nomina 
			from TTabulador_SE_Cat_Puesto Categorias with(nolock)
			inner join TModelo_SE Modelo with(nolock) on Categorias.TModelo_SE_Id_Modelo_SE = Modelo.id_modelo_SE 
			        --Plaza   SELECT * FROM TModelo_SE
			inner join ( 
						Select CatPuesto.id_Plaza, CatPuesto.id_rel from HTabulador_SE_Cat_Puesto CatPuesto with(nolock) inner join ( 
						Select id_plaza, max(fecha) as fecha from HTabulador_SE_Cat_Puesto with(nolock)
						where fecha <= getDate() group by id_plaza 
						) HistCatPuesto on HistCatPuesto.id_plaza = CatPuesto.id_plaza and HistCatPuesto.fecha = CatPuesto.fecha 
			) PuestosPlaza on PuestosPlaza.id_rel = Categorias.id_Tabulador_SE_Cat_Puesto 
            --Plaza Emp para obtener el CT
			inner join ( 
				Select plazaempleados.* from plazaempleados with(nolock) inner join ( 
						Select id_plaza, max(fecha) as fecha from plazaempleados with(nolock) where fecha <= getDate() group by id_Plaza  
				 ) Historico on plazaempleados.id_plaza = Historico.id_plaza and plazaempleados.Fecha = Historico.Fecha 
			) PlazasEmp on PlazasEmp.id_Plaza = PuestosPlaza.id_plaza 
			inner join VistaTablaLongitud Centros on Centros.id_nodo = PlazasEmp.id_nodo 
            --''Permisos de Organigrama
			inner join ( 
			  Select acceso.id_nodo from accesosorganigrama acceso inner join ( 
				  select * from tablaconfigorgan with(nolock) where id_nodopadre in ( 
					  select id_nodo from TablaConfigOrgan with(nolock) where id_nodopadre in ( 
						  select id_nodo from TablaConfigOrgan where id_tablalongitud = 26 
					  ) 
				  ) 
			  ) organ on acceso.id_nodo = organ.id_nodo where acceso.id_usuario = @idUsuario 
			) PermisosOrganigrama on PermisosOrganigrama.id_nodo = Centros.id_nodo 

            --''Permisos por nivel educativo          
			INNER JOIN ( 
				select rn.id_nodo from fup_relnivel_nodo rn with(nolock)
				inner join FUP_RelUsuariosNivelAcademico f with(nolock) on rn.id_nivel_educativo = f.id_nivel    
						where f.id_usuario = @idUsuario 
			) nivel ON nivel.id_nodo = PermisosOrganigrama.id_nodo 
			where TCat_Pto_SE_id_Cat_Pto_SE in (select * from #TCat_Pto_SE_id_Cat_Pto_SE)
					and categoria like ''%''+@filtroCP+''%'' and categorias.descripcion like ''%''+@descripcionCP+''%''
		) Tabla order by categoria, descripcion 
		
	End	
	if(@consulta = 2) begin 
		if(@tipoValor = ''1'') begin 	
			select id, d.zona, concepto as concepto, desde as desde,isnull(hasta,''999999'')hasta, importeMinimo, importeMaximo from (
				Select ROW_NUMBER () over (PARTITION BY concepto,zona order by concepto,zona,desde ) as r ,id_concepto as id, zona, concepto as concepto, desde as desde,  max(importeMinimo) as importeMinimo, max(importeMaximo) as importeMaximo 
				from ( 
				  Select  Matriz.id_concepto, max(Zona.Descripcion) as Zona, max(Conceptos.resultado) as concepto, 
					cast( year(fecha) as varchar) + Right(''00'' + Cast(case when(day(fecha)>15)then month(fecha)*2 else (month(fecha)*2)-1 end as Varchar(2)),2) as desde, 
				   Matriz.id_Tabulador_SE_NIVEL_Pago, 
					case when id_Tabulador_SE_NIVEL_Pago = 1 
						Then 
							max(Matriz.valor) 
					  End 
					as importeMinimo, 
					case when id_Tabulador_SE_NIVEL_Pago = 3 
						Then 
							max(Matriz.valor) 
					  End 
					as importeMaximo 
					from valoresmatriz4 Matriz with(nolock)
					inner join Conceptos with(nolock) on Conceptos.id_concepto = Matriz.id_concepto 
					inner join TTabulador_SE_Zona Zona with(nolock) on Zona.id_Tabulador_SE_Zona = Matriz.id_Tabulador_SE_Zona 
					where id_Tabulador_SE_Cat_Puesto = @idPuesto and len(Conceptos.resultado) = 2 
					group by fecha ,Matriz.id_concepto, Zona.id_Tabulador_SE_Zona, Matriz.id_Tabulador_SE_NIVEL_Pago 
					--order by id_concepto,zona,concepto,desde
				) DetalleCategoria 
				Group by zona, concepto,id_concepto,desde
				--order by concepto, zona, desde asc
				) d 
				left join (select ROW_NUMBER () over (PARTITION BY resultado,zona order by resultado,zona ) as r,
							zona,resultado,dbo.fechaToAnioQuincena(Fecha-4) as hasta
							from valoresmatriz4 Matriz with(nolock)
							inner join Conceptos with(nolock) on Conceptos.id_concepto = Matriz.id_concepto
							inner join TTabulador_SE_Zona Zona with(nolock) on Zona.id_Tabulador_SE_Zona = Matriz.id_Tabulador_SE_Zona 
							where id_tabulador_se_cat_puesto =@idPuesto
							group by  resultado,zona,resultado,dbo.fechaToAnioQuincena(Fecha-4)
							-- order by resultado
				) hasta on d.r = hasta.r-1 and hasta.Zona=d.zona and hasta.resultado=d.concepto
				order by d.zona asc
		end else begin
			select id, d.zona, concepto as concepto, desde as desde,isnull(hasta,''999999'')hasta, importeMinimo, importeMaximo from (
				Select ROW_NUMBER () over (PARTITION BY concepto,zona order by concepto,zona,desde ) as r ,id_concepto as id, zona, concepto as concepto, desde as desde,  max(importeMinimo) as importeMinimo, max(importeMaximo) as importeMaximo 
				from ( 
				  Select  Matriz.id_concepto, max(Zona.Descripcion) as Zona, max(Conceptos.resultado) as concepto, 
					cast( year(fecha) as varchar) + Right(''00'' + Cast(case when(day(fecha)>15)then month(fecha)*2 else (month(fecha)*2)-1 end as Varchar(2)),2) as desde, 
				   Matriz.id_Tabulador_SE_NIVEL_Pago, 
					case when id_Tabulador_SE_NIVEL_Pago = 1 
						Then 
							max(Matriz.valor) 
					  End 
					as importeMinimo, 
					case when id_Tabulador_SE_NIVEL_Pago = 3 
						Then 
							max(Matriz.valor) 
					  End 
					as importeMaximo 
					from valoresmatriz5 Matriz with(nolock)
					inner join Conceptos with(nolock) on Conceptos.id_concepto = Matriz.id_concepto 
					inner join TTabulador_SE_Zona Zona with(nolock) on Zona.id_Tabulador_SE_Zona = Matriz.id_Tabulador_SE_Zona 
					where id_Tabulador_SE_Cat_Puesto = @idPuesto and len(Conceptos.resultado) = 2 
					group by fecha ,Matriz.id_concepto, Zona.id_Tabulador_SE_Zona, Matriz.id_Tabulador_SE_NIVEL_Pago 
					--order by id_concepto,zona,concepto,desde
				) DetalleCategoria 
				Group by zona, concepto,id_concepto,desde
				--order by concepto, zona, desde asc
				) d 
				left join (select ROW_NUMBER () over (PARTITION BY resultado,zona order by resultado,zona ) as r,
							zona,resultado,dbo.fechaToAnioQuincena(Fecha-4) as hasta
							from valoresmatriz5 Matriz with(nolock)
							inner join Conceptos with(nolock) on Conceptos.id_concepto = Matriz.id_concepto
							inner join TTabulador_SE_Zona Zona with(nolock) on Zona.id_Tabulador_SE_Zona = Matriz.id_Tabulador_SE_Zona 
							where id_tabulador_se_cat_puesto =@idPuesto
							group by  resultado,zona,resultado,dbo.fechaToAnioQuincena(Fecha-4)
							-- order by resultado
				) hasta on d.r = hasta.r-1 and hasta.Zona=d.zona and hasta.resultado=d.concepto
				order by d.zona asc

		End
	End	
'
GO

GO
PRINT N'Creating [dbo].[ASF_PlantillaPersonalAnio]'
GO
IF OBJECT_ID(N'[dbo].[ASF_PlantillaPersonalAnio]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[ASF_PlantillaPersonalAnio]
@anio int
WITH EXEC AS CALLER
AS
select a.* into #peDesde from plazaempleados a inner join (
select id_emp, id_plaza, max(fecha) fecha from plazaempleados where fecha <= (cast(@anio as varchar)+''/12/31'') group by id_emp, id_plaza
) b on a.Fecha = b.Fecha and a.Id_Emp = b.Id_Emp and a.Id_plaza = b.Id_plaza
where a.id_emp <> 0

select a.id_emp, a.id_plaza, dbo.fechatoanioquincena(a.fecha) desde, 
dbo.fechatoanioquincena((select min(fecha) from plazaempleados b where b.id_plaza = a.id_plaza and b.fecha > a.fecha)) hasta,a.id_nodo
,(select documentos from plazaempleados d where d.id_plaza = a.id_plaza and d.fecha = (select min(fecha) from plazaempleados b where b.id_plaza = a.id_plaza and b.fecha > a.fecha) ) documento,
a.documentos docligue
 into -- drop table
#peDesdeHasta
from #peDesde a

update #peDesdeHasta set hasta = ''999924'' where hasta is null

select * into -- drop table
#peDHAnio 
from #peDesdeHasta where @anio between year(dbo.anioquincenatofecha(desde,0)) and year(dbo.anioquincenatofecha(hasta,1))

select *, dbo.obtieneEstatusQnaHplazas(''estatus'', dbo.anioquincenatofecha(hasta,0), id_plaza) estatus,dbo.obtieneEstatusQnaHplazas(''qna'', dbo.anioquincenatofecha(hasta,0), id_plaza) qnaest 
into #peDHAnioEstatus
from #peDHAnio

delete #peDHAnioEstatus where estatus is null
delete #peDHAnioEstatus where estatus in (''Cancelada - NG'',''No conciliada - Alta Definitiva'',''No conciliada - Alta provisional o ilimitada'',''Plaza inhabilitada - NG'')
delete #peDHAnioEstatus  where estatus like ''%cancelada%'' and qnaest < cast(@anio as varchar)+''01''

select fd.Id_Documento, fd.Id_Emp, fd.Folio, fd.Id_Estatus, fdd.Id_Plaza, fdd.FechaIni, fdd.FechaFin, fmm.Id_MotivoMovimiento, fmm.Clave clavemot, fmm.Descripcion descripmov,
ftm.Id_TipoMovimiento, ftm.Clave clavetipo, ftm.Descripcion descriptipo into #fupsDocumentos
from FUP_Documentos fd
inner join FUP_Documento_Detalle fdd on fd.Id_Documento = fdd.Id_Documento
inner join FUP_MotivoMovimiento fmm on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
inner join FUP_TipoMovimiento ftm on ftm.Id_TipoMovimiento = fmm.Id_TipoMovimiento
inner join FUP_Informacion_Documentos fid on fid.Id_Documento = fd.Id_Documento
inner join empleados e on fd.Id_Emp = e.Id_Emp
inner join PlazaIEEPO pi on pi.Id_plaza = fdd.Id_Plaza
where fd.Id_Estatus = 2

alter table #peDHAnioEstatus add actest int
update #peDHAnioEstatus set actest = 0

--select  a.*, rtrim(b.descriptipo)+'' - ''+ltrim(b.descripmov) estatus 
update a set a.estatus = rtrim(b.descriptipo)+'' - ''+ltrim(b.descripmov)
from #peDHAnioEstatus a 
inner join #fupsDocumentos b on a.id_emp = b.Id_Emp and a.id_plaza = b.Id_Plaza and a.documento = b.Id_Documento
where a.hasta <= cast(@anio as varchar)+''24'' and (b.descriptipo like ''%BAJA%'' or b.descripmov like ''%BAJA%'') and a.actest = 0 and ISNUMERIC(a.documento) = 1


--select distinct a.*
update a set a.actest = 1
from #peDHAnioEstatus a 
inner join #fupsDocumentos b on a.id_emp = b.Id_Emp and a.id_plaza = b.Id_Plaza and a.documento = b.Id_Documento
where a.hasta <= cast(@anio as varchar)+''24'' and (b.descriptipo like ''%BAJA%'' or b.descripmov like ''%BAJA%'') and a.actest = 0 and ISNUMERIC(a.documento) = 1


-- select  a.*, rtrim(b.descriptipo)+'' - ''+ltrim(b.descripmov)
update a set a.estatus = rtrim(b.descriptipo)+'' - ''+ltrim(b.descripmov)
from #peDHAnioEstatus a 
inner join #fupsDocumentos b on a.id_emp = b.Id_Emp and a.id_plaza = b.Id_Plaza and a.docligue = b.Id_Documento
where ISNUMERIC(a.docligue) = 1 and a.actest = 0 and b.descriptipo not like ''%BAJA%'' and b.descripmov not like ''%BAJA%''
and b.descriptipo not like ''%ALTA PERCEPCION%'' and b.descriptipo not like ''%TRANSFERENCIA DE PLAZA%''

update a set a.actest = 1
from #peDHAnioEstatus a 
inner join #fupsDocumentos b on a.id_emp = b.Id_Emp and a.id_plaza = b.Id_Plaza and a.docligue = b.Id_Documento
where ISNUMERIC(a.docligue) = 1 and a.actest = 0 and b.descriptipo not like ''%BAJA%'' and b.descripmov not like ''%BAJA%''
and b.descriptipo not like ''%ALTA PERCEPCION%'' and b.descriptipo not like ''%TRANSFERENCIA DE PLAZA%''


--select  a.*, rtrim(b.descriptipo)+'' - ''+ltrim(b.descripmov) estatus , p.plazaieepo, pp.PlazaIEEPO
update a set a.estatus = rtrim(b.descriptipo)+'' - ''+ltrim(b.descripmov)
from #peDHAnioEstatus a 
inner join #fupsDocumentos b on a.id_emp = b.Id_Emp and a.documento = b.Id_Documento
inner join plazaieepo p on p.id_plaza = a.id_plaza
inner join plazaieepo pp on pp.id_plaza = b.id_plaza
where a.hasta <= cast(@anio as varchar)+''24'' and (b.descriptipo like ''%BAJA%'' or b.descripmov like ''%BAJA%'') and a.actest = 0 and ISNUMERIC(a.documento) = 1
and replace(case when p.plazaieepo like ''14%'' or p.plazaieepo like ''15%'' then ''07''+substring(p.plazaieepo,3, len(p.plazaieepo)) else p.plazaieepo end,'' '','''') =
replace(case when pp.plazaieepo like ''14%'' or pp.plazaieepo like ''15%'' then ''07''+substring(pp.plazaieepo,3, len(pp.plazaieepo)) else pp.plazaieepo end,'' '','''')

update a set a.actest = 2
from #peDHAnioEstatus a 
inner join #fupsDocumentos b on a.id_emp = b.Id_Emp and a.documento = b.Id_Documento
inner join plazaieepo p on p.id_plaza = a.id_plaza
inner join plazaieepo pp on pp.id_plaza = b.id_plaza
where a.hasta <= cast(@anio as varchar)+''24'' and (b.descriptipo like ''%BAJA%'' or b.descripmov like ''%BAJA%'') and a.actest = 0 and ISNUMERIC(a.documento) = 1
and replace(case when p.plazaieepo like ''14%'' or p.plazaieepo like ''15%'' then ''07''+substring(p.plazaieepo,3, len(p.plazaieepo)) else p.plazaieepo end,'' '','''') =
replace(case when pp.plazaieepo like ''14%'' or pp.plazaieepo like ''15%'' then ''07''+substring(pp.plazaieepo,3, len(pp.plazaieepo)) else pp.plazaieepo end,'' '','''')

-- select  a.* --, rtrim(b.descriptipo)+'' - ''+ltrim(b.descripmov), p.plazaieepo, pp.plazaieepo
 update a set a.estatus = rtrim(b.descriptipo)+'' - ''+ltrim(b.descripmov)
from #peDHAnioEstatus a 
inner join #fupsDocumentos b on a.id_emp = b.Id_Emp and a.docligue = b.Id_Documento
inner join plazaieepo p on p.id_plaza = a.id_plaza
inner join plazaieepo pp on pp.id_plaza = b.id_plaza
where ISNUMERIC(a.docligue) = 1 and a.actest = 0 and b.descriptipo not like ''%BAJA%'' and b.descripmov not like ''%BAJA%'' and b.descriptipo not like ''%ALTA PERCEPCION%'' and b.descriptipo not like ''%TRANSFERENCIA DE PLAZA%''
and replace(case when p.plazaieepo like ''14%'' or p.plazaieepo like ''15%'' then ''07''+substring(p.plazaieepo,3, len(p.plazaieepo)) else p.plazaieepo end,'' '','''') =
replace(case when pp.plazaieepo like ''14%'' or pp.plazaieepo like ''15%'' then ''07''+substring(pp.plazaieepo,3, len(pp.plazaieepo)) else pp.plazaieepo end,'' '','''')
and a.id_plaza <> b.id_plaza

 update a set a.actest = 2
from #peDHAnioEstatus a 
inner join #fupsDocumentos b on a.id_emp = b.Id_Emp and a.docligue = b.Id_Documento
inner join plazaieepo p on p.id_plaza = a.id_plaza
inner join plazaieepo pp on pp.id_plaza = b.id_plaza
where ISNUMERIC(a.docligue) = 1 and a.actest = 0 and b.descriptipo not like ''%BAJA%'' and b.descripmov not like ''%BAJA%'' and b.descriptipo not like ''%ALTA PERCEPCION%'' and b.descriptipo not like ''%TRANSFERENCIA DE PLAZA%''
and replace(case when p.plazaieepo like ''14%'' or p.plazaieepo like ''15%'' then ''07''+substring(p.plazaieepo,3, len(p.plazaieepo)) else p.plazaieepo end,'' '','''') =
replace(case when pp.plazaieepo like ''14%'' or pp.plazaieepo like ''15%'' then ''07''+substring(pp.plazaieepo,3, len(pp.plazaieepo)) else pp.plazaieepo end,'' '','''')
and a.id_plaza <> b.id_plaza



select b.* into #movsValidos
from #fupsDocumentos b
where b.descriptipo not like ''%BAJA%'' and b.descripmov not like ''%BAJA%'' and b.descriptipo not like ''%ALTA PERCEPCION%'' and b.descriptipo not like ''%TRANSFERENCIA DE PLAZA%'' and b.descripmov not like ''%CAMBIO A DATOS PERSONALES%''
and b.descripmov not like ''%ALTAS DE PERCEPCION%'' and b.descripmov not like ''%CAMBIO DE CONCEPTO%'' and b.descripmov not like ''%CAMBIOS DE PERCEPCION%''

select * into #movsValidos_2 from #movsValidos where @anio between year(fechaini) and year(fechafin)

select distinct a.* into #movsValidos_3 
from #movsValidos_2 a inner join (
select id_emp, id_plaza, max(fechaini) fechaini from #movsValidos_2 group by id_emp, id_plaza
) b on a.Id_Emp = b.id_emp and a.id_plaza = b.id_plaza and a.fechaini = b.fechaini

select distinct a.*, fdd.Id_Detalle into #movsValidos_4 from #movsValidos_3 a 
inner join FUP_Documento_Detalle fdd on fdd.Id_Documento = a.Id_Documento

select distinct a.* into #movsValidos_5 from #movsValidos_4 a inner join (
select id_emp, Id_Plaza, max(id_detalle) id_detalle from #movsValidos_4 group by id_emp, Id_Plaza
) b on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza and a.Id_Detalle = b.id_detalle


--select *,rtrim(b.descriptipo)+'' - ''+ltrim(b.descripmov)
update a set a.estatus = rtrim(b.descriptipo)+'' - ''+ltrim(b.descripmov)
from #peDHAnioEstatus a 
inner join #movsValidos_5 b on a.id_emp = b.Id_Emp and a.id_plaza = b.Id_Plaza
where (b.descriptipo like ''%pagos%'' or b.descriptipo like ''%SUSPENSION TEMPORAL%'') 
and b.descripmov not like ''%DESOMITIR PAGO%'' and b.descripmov like ''%OMITIR PAGO%''
and a.estatus not like ''%BAJA%'' and dbo.fechaToAnioQuincena(b.fechaini) >= a.desde and dbo.fechaToAnioQuincena(b.fechaini) <= a.hasta

update a set a.actest = 3
from #peDHAnioEstatus a 
inner join #movsValidos_5 b on a.id_emp = b.Id_Emp and a.id_plaza = b.Id_Plaza
where (b.descriptipo like ''%pagos%'' or b.descriptipo like ''%SUSPENSION TEMPORAL%'') 
and b.descripmov not like ''%DESOMITIR PAGO%'' and b.descripmov like ''%OMITIR PAGO%''
and a.estatus not like ''%BAJA%'' and dbo.fechaToAnioQuincena(b.fechaini) >= a.desde and dbo.fechaToAnioQuincena(b.fechaini) <= a.hasta

--select *,dbo.fechaToAnioQuincena(b.fechafin) ,rtrim(b.descriptipo)+'' - ''+ltrim(b.descripmov)
update a set a.estatus = rtrim(b.descriptipo)+'' - ''+ltrim(b.descripmov)
from #peDHAnioEstatus a 
inner join #movsValidos_5 b on a.id_emp = b.Id_Emp and a.id_plaza = b.Id_Plaza
where (b.descriptipo like ''%pagos%'' or b.descriptipo like ''%SUSPENSION TEMPORAL%'') 
and b.descripmov not like ''%DESOMITIR PAGO%'' and b.descriptipo like ''%SUSPENSION TEMPORAL%''
and b.FechaFin > getdate()and a.estatus not like ''%BAJA%'' and dbo.fechaToAnioQuincena(b.fechaini) >= a.desde

update a set a.actest = 3
from #peDHAnioEstatus a 
inner join #movsValidos_5 b on a.id_emp = b.Id_Emp and a.id_plaza = b.Id_Plaza
where (b.descriptipo like ''%pagos%'' or b.descriptipo like ''%SUSPENSION TEMPORAL%'') 
and b.descripmov not like ''%DESOMITIR PAGO%'' and b.descriptipo like ''%SUSPENSION TEMPORAL%''
and b.FechaFin > getdate()and a.estatus not like ''%BAJA%'' and dbo.fechaToAnioQuincena(b.fechaini) >= a.desde

  select a.id_emp, a.Fecha_Alta_SEP, dbo.fechaToAnioQuincena(a.Fecha_Alta_SEP) alta into #ingresosep from HFecha_Alta_SEP a inner join (
  select id_emp, max(fecha) fecha from HFecha_Alta_SEP where fecha <= getdate() group by id_emp
  ) b on a.id_emp = b.id_emp and a.fecha = b.fecha
  
  select a.id_plaza, t.categoria, t.descripcion, t.id_Tabulador_SE_Cat_Puesto, a.id_rel, t.Modelo_Dgsanef into #tcategoria from HTabulador_SE_Cat_Puesto a inner join (
  select id_plaza, max(fecha) fecha from HTabulador_SE_Cat_Puesto where fecha <= getdate() group by id_plaza
  ) b on a.fecha = b.fecha and a.id_plaza = b.id_plaza
  inner join TTabulador_SE_Cat_Puesto t on t.id_Tabulador_SE_Cat_Puesto = a.id_rel
  
 select distinct pi.id_plaza,pi.unidad,pi.subunidad,pi.categoria,
horas=case when pi.categoria not like '' e%'' then 30 else 
case when pi.horas =''000'' then tt.Hrs_Compatibilidad 
else case when substring(pi.horas,1,1)=0 
then substring(pi.horas,2,1) else substring(pi.horas,1,2) end end end
,pi.diagonal,pi.plazaieepo,
id_niveleducativo=
CASE   
     when (unidad=20 and subunidad=01) or (unidad=87 and subunidad=54) then 2   
     when (unidad=20 and subunidad=02) or (unidad=87 and subunidad=21 ) or (unidad=89 and subunidad=21)
	 or (unidad=21 and subunidad=51) or (unidad=68 and subunidad=21) or (unidad=74 and subunidad=21)
	 or (unidad=97 and subunidad=21) or (unidad=21 and subunidad=50) then 4
	 when (unidad=20 and subunidad=03) or (unidad=87 and subunidad=12) or (unidad=12 and subunidad=51) 
     or (unidad=20 and subunidad=12) or (unidad=20 and subunidad=11) or (unidad=74 and subunidad=12) 
	 or (unidad=24 and subunidad=51) or (unidad=12 and subunidad=53) or (unidad=62 and subunidad=12) 
	 or (unidad=12 and subunidad=11) or (unidad=69 and subunidad=12) or (unidad=12 and subunidad=87)
	 or (unidad=12 and subunidad=50) or (unidad=98 and subunidad=12) --or (unidad=89 and subunidad=29) se cambia a indigena 04-05-2017
     or (unidad=68 and subunidad=12) or (unidad=22 and subunidad=03) or (unidad=51 and subunidad=09)
	 or (unidad=66 and subunidad=12) or (unidad=82 and subunidad=51) --or (unidad=29 and subunidad=33) se cambia a indigena 04-05-2017
	 or (unidad=93 and subunidad=12) or (unidad=12 and subunidad=52) or (unidad=89 and subunidad=12) then 0
	 when (unidad=87 and subunidad=60) or (unidad=60 and subunidad=03) or (unidad=29 and subunidad=03) 
	 or (unidad=24 and subunidad=03) or (unidad=39 and subunidad=30) then 1
	 when (unidad=20 and subunidad=04) or (unidad=87 and subunidad=37) or (unidad=87 and subunidad=47)
	 or (unidad=20 and subunidad=16) or (unidad=20 and subunidad=15) then 6
	 when (unidad=20 and subunidad=05) or (unidad=87 and subunidad=29) or (unidad=20 and subunidad=14) 
	 or (unidad=29 and subunidad=12) or (unidad=18 and subunidad=54)  or (unidad=72 and subunidad=33)
	 or (unidad=29 and subunidad=29) or (unidad=87 and subunidad=39) or (unidad=87 and subunidad=25)
	 or (unidad=87 and subunidad=33) or (unidad=87 and subunidad=20) or (unidad=29 and subunidad=33) 
	 or (unidad=89 and subunidad=29) then 5
	 when (unidad=20 and subunidad=06) or (unidad=87 and subunidad=13) or (unidad=13 and subunidad=54)
	 or (unidad=74 and subunidad=13) or (unidad=87 and subunidad=24) or (unidad=93 and subunidad=13)
	 or (unidad=73 and subunidad=13) or (unidad=29 and subunidad=32) or (unidad=94 and subunidad=13)
	 or (unidad=68 and subunidad=13) or (unidad=29 and subunidad=30) or (unidad=13 and subunidad=53) then 8
	 when (unidad=20 and subunidad=07) or (unidad=20 and subunidad=48) or (unidad=48 and subunidad=20) 
	 or (unidad=18 and subunidad=50) or (unidad=27 and subunidad=51) or (unidad=20 and subunidad=47)
	 or (unidad=10 and subunidad=48) or (unidad=14 and subunidad=56) or (unidad=87 and subunidad=48)
	 or (unidad=25 and subunidad=30) or (unidad=20 and subunidad=31) or (unidad=20 and subunidad=40)
	 or (unidad=20 and subunidad=30) or (unidad=29 and subunidad=48) or (unidad=87 and subunidad=27)
	 or (unidad=20 and subunidad=29) then 9
	 when (unidad=20 and subunidad=08) or (unidad=87 and subunidad=79) or (unidad=87 and subunidad=78)
	 or (unidad=20 and subunidad=19) then 10
	 when (unidad=20 and subunidad=09) or (unidad=87 and subunidad=15) or (unidad=15 and subunidad=50) then 3
	 when (unidad=87 and subunidad=19) or (unidad=38 and subunidad=01) or (unidad=19 and subunidad=54)
	 or (unidad=19 and subunidad=02) or (unidad=99 and subunidad=22) or (unidad=87 and subunidad=38) then 11
	 when (unidad=20 and subunidad=13) or (unidad=20 and subunidad=99) then 12
	 END,
id_niveleducativo_spd=
CASE 
	when (unidad=20 and subunidad=01) or (unidad=87 and subunidad=54) or (unidad=20 and subunidad=02) or (unidad=87 and subunidad=21 ) or (unidad=89 and subunidad=21)
	 or (unidad=21 and subunidad=51) or (unidad=68 and subunidad=21) or (unidad=74 and subunidad=21)
	 or (unidad=97 and subunidad=21) or (unidad=21 and subunidad=50) then 1
	when (unidad=87 and subunidad=19) or (unidad=38 and subunidad=01) or (unidad=19 and subunidad=54)
	 or (unidad=19 and subunidad=02) or (unidad=99 and subunidad=22) or (unidad=87 and subunidad=38) then 4
	else 2
    end into #plazanivel   	       
from plazaieepo pi
inner join TTabulador_SE_Cat_Puesto tt on pi.Categoria=case when len(tt.categoria)=7 then
substring(tt.categoria,2,10) else tt.categoria end
--where pi.plazaieepo in (select plazaieepo from Plazas_Autorizadas)
-- where replace(pi.plazaieepo,'' '','''') in (select codigo_plaza from hplazas_concifed_230217 where estatus<>''C'') and pi.id_plaza not in (select valor_idcampo from hplazas where id_tipomovplazas=4) and partida not in (''14'',''15'')


select ''R20'' CV_UR, ''OAXACA'' ENTIDAD,''IO13 FONE SERVICIOS PERSONALES'' CPP, ''FONE'' NOM_FONDO , i.alta QNA_ING, e.RFC, e.CURP, e.Nombre NOM_EMP, 
e.ApPaterno AP1_EMP, e.ApMaterno AP2_EMP, case when pi.plazaieepo like ''14%'' or pi.plazaieepo like ''15%'' then ''07''+substring(pi.plazaieepo,3, len(pi.plazaieepo)) else pi.plazaieepo end PLAZA, pi.Diagonal CON_PLAZA, tt.categoria CAT_PUESTO, tt.descripcion DESC_PUESTO,
tn.Descripcion CATEGORIA, case when pi.Categoria like ''%E%'' then ''DOCENTE'' when pi.Categoria not like ''%E%'' then ''ADMINISTRATIVO'' else '''' end TIPO_PUEST,
v.clave CCT, upper(a.estatus) ESTATUS,case when a.hasta <= cast(@anio as varchar)+''24'' then a.hasta else '''' end QNA_BAJA, a.id_emp, a.id_plaza
into #tablaparareporte
from #peDHAnioEstatus a
inner join empleados e on e.id_emp = a.id_emp
inner join plazaieepo pi on pi.Id_plaza = a.id_plaza
left join #ingresosep i on i.id_emp = a.id_emp
inner join #tcategoria tt on tt.id_plaza = a.id_plaza
inner join #plazanivel n on n.id_plaza = a.id_plaza
inner join TNivelEducativo tn on n.id_niveleducativo = tn.id_NivelEducativo
inner join VistaTablaLongitud v on v.Id_Nodo = a.id_nodo

select distinct rfc, CURP, CLAVE_PLAZA, id_emp, id_plaza into #empleadosPagos from [FEDERACION.IEEPO.GOB.MX].federacion.dbo.DETALLE_NOMINA 
where QUINCENA like ''''+cast(@anio as varchar)+''%''  AND nomina =''ORDINARIA''

select CV_UR,ENTIDAD,CPP,NOM_FONDO,QNA_ING,RFC,CURP,NOM_EMP,AP1_EMP,AP2_EMP,PLAZA,CON_PLAZA,CAT_PUESTO,DESC_PUESTO,CATEGORIA,TIPO_PUEST,CCT,
ESTATUS,QNA_BAJA
from #tablaparareporte a where exists (
select 1 from #empleadosPagos b where a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
)'
GO

GO
PRINT N'Creating [dbo].[spc_CosteoPorAnios_quincena]'
GO
IF OBJECT_ID(N'[dbo].[spc_CosteoPorAnios_quincena]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[spc_CosteoPorAnios_quincena]
@tipo int, @Anio varchar(4), @TablaConceptos varchar(200), @tPlaza varchar(200) = '''', @Quincena varchar(10) = ''''
WITH EXEC AS CALLER
AS
BEGIN



declare @año varchar(4) = @Anio
declare @qna varchar(10)

--if(@año = year(getdate()))
 -- set @qna = (select right(''00''+cast(max(numero) as varchar),2) qna from calennomina where Actualizado = 0 and Procesado = 1 and parcial = 0)
--else
if @Quincena = ''00''
  set @qna = ''24''
else
  set @qna = @Quincena
  
select  num,rfc,plaza,horas,categoria,desde,hasta,funcion,id_puesto,id_cm,id_npago,id_zona,modelo,tipo_mov, id_emp,id_plaza, ''      '' desde_,''      '' hasta_,
cast(0 as float) sueldo,cast(0 as float) aguinaldo, cast(0 as float) prima,cast(0 as float) DM,cast(0 as float) Cn,cast(0 as float) ap,cast(0 as float) bo,cast(0 as float) di,cast(0 as float) c88, cast(0 as float) qnas 
into #tablaAño  
from C_costeoMindDatos



if @Quincena = ''00''
begin
update #tablaAño set desde_ = case when desde <= @año+''01'' then @año+''01'' else desde end, hasta_ = case when hasta >= @año+''''+@qna then @año+''''+@qna else hasta end
update #tablaAño set desde_ = '''' where desde_ > @año+''''+@qna
update #tablaAño set hasta_ = '''' where desde_ = ''''
update #tablaAño set desde_ = '''', hasta_ = '''' where hasta_ < desde_ and desde_ <> ''''
update #tablaAño set qnas = dbo.PlazosDesdeHasta(desde_, hasta_) where desde_ <> ''''
end
else
begin
update #tablaAño set desde_ = case when desde <= @año+''''+@qna then @año+''''+@qna else '''' end, hasta_ = case when hasta >= @año+''''+@qna then @año+''''+@qna else '''' end
update #tablaAño set hasta_ = '''' where hasta_ <> '''' and desde_ = ''''
update #tablaAño set desde_ = '''' where desde_ <> '''' and hasta_ = '''' 
update #tablaAño set desde_ = '''', hasta_ = '''' where hasta_ < desde_ and desde_ <> ''''

delete #tablaAño where desde_ = '''' and hasta_ = ''''

update #tablaAño set qnas = dbo.PlazosDesdeHasta(desde_, hasta_) where desde_ <> ''''

end
  
if( (select max(desde_) desde from #tablaAño) <> '''' and (select max(hasta_) hasta from #tablaAño) <> '''' )
begin

if(@tPlaza = ''AD'')
begin

select a.*, isnull(e.id_cia,0) id_cia, isnull(c.id_periodo,0) id_periodo into #EmpleadoPeriodo_ad
from #tablaAño a
left join empleados e on e.id_emp = a.id_emp
left join calennomina c on dbo.fechatoanioquincena(c.fechaini) = a.hasta_ and c.id_cia = e.id_cia and c.parcial = 0 and c.numero <= 24 and a.hasta_ <> '''' and a.id_emp <> 0

select distinct a.*, h.id_plaza idplaza into #Empleadoplazaperiodo 
from #EmpleadoPeriodo_ad a
inner join (
select Id_Emp, case when id_periodopago = 0 then Id_Periodo else id_periodopago end id_periodo, id_concepto, Pesos, id_plaza, Id_Referencia, id_periodoPago, Id_ProcesoNomina, Desde, Hasta from nom_histpagos where id_concepto in (select id_concepto from conceptos where tipo = 1)
union all
select Id_Emp, case when id_periodopago = 0 then Id_Periodo else id_periodopago end id_periodo, id_concepto, Pesos, id_plaza, Id_Referencia, id_periodoPago, Id_ProcesoNomina, Desde, Hasta from nom_pagos_hist where id_concepto in (select id_concepto from conceptos where tipo = 1)
) h on h.id_emp = a.id_emp and h.id_periodo = a.id_periodo 

select distinct
isnull(a.num,b.num) num, isnull(a.rfc,b.rfc) rfc, isnull(a.plaza,b.plaza) plaza, isnull(a.horas,b.horas) horas, isnull(a.categoria,b.categoria) categoria, isnull(a.desde,b.desde) desde, isnull(a.hasta,b.hasta) hasta, isnull(a.funcion, b.funcion) funcion, 
isnull(a.id_puesto,b.id_puesto) id_puesto, isnull(a.id_cm,b.id_cm) id_cm, 
isnull(a.id_npago,b.id_npago) id_npago, isnull(a.id_zona,b.id_zona) id_zona, isnull(a.modelo,b.modelo) modelo, isnull(a.tipo_mov,b.tipo_mov) tipo_mov, isnull(a.id_emp,b.id_emp) id_emp, isnull(a.id_plaza,b.id_plaza) id_plaza, isnull(a.desde_,b.desde_) desde_, 
isnull(a.hasta_,b.hasta_) hasta_, isnull(a.sueldo,b.sueldo) sueldo, 
isnull(a.aguinaldo,b.aguinaldo) aguinaldo, isnull(a.prima,b.prima) prima, isnull(a.DM,b.dm) dm, isnull(a.Cn,b.cn) cn, isnull(a.ap,b.ap) ap, isnull(a.bo,b.bo) bo, isnull(a.di, b.di) di, isnull(a.c88,b.c88) c88, isnull(a.qnas,b.qnas) qnas, isnull(a.id_cia,b.id_cia) id_cia, 
isnull(a.id_periodo, b.id_periodo) id_periodo, b.idplaza into #cruceplazasHist
from #EmpleadoPeriodo_ad a
full join #Empleadoplazaperiodo b on a.id_emp = b.id_emp and a.id_periodo = b.id_periodo and a.id_plaza = b.idplaza and a.num = b.num

--para quitar las plazas que no ha tenido en el periodo  07102020
delete #cruceplazasHist where idplaza is null

--select *,replace(p.plazaieepo,'' '','''') plaza, replace(p.Categoria,'' '','''') catego,p.Horas 
update a set a.plaza = replace(p.plazaieepo,'' '',''''), a.horas = p.horas, a.categoria = replace(p.Categoria,'' '',''''), a.id_plaza = a.idplaza
from #cruceplazasHist a
inner join plazaieepo p on p.id_plaza = a.idplaza
where a.idplaza is not null

select *,dbo.FU_TTabulador_SE_CM(idplaza, dbo.anioquincenatofecha(hasta_,0), ''id_Tabulador_SE_CM'') cm into #registrosCCarrera
from #cruceplazasHist a where a.idplaza is not null and id_cm not in (1,2,3)

--select *,dbo.FU_TTabulador_SE_CM(idplaza, dbo.anioquincenatofecha(hasta_,0), ''id_Tabulador_SE_CM'') cm 
update a set a.id_cm = dbo.FU_TTabulador_SE_CM(idplaza, dbo.anioquincenatofecha(hasta_,0), ''id_Tabulador_SE_CM'')
from #cruceplazasHist a where a.idplaza is not null and num in (select num from #registrosCCarrera)

--select *,dbo.FU_TTabulador_SE_Cat_Puesto(idplaza, dbo.anioquincenatofecha(hasta_,0), ''id_Tabulador_SE_Cat_Puesto'') puesto
update a set a.id_puesto = dbo.FU_TTabulador_SE_Cat_Puesto(idplaza, dbo.anioquincenatofecha(hasta_,0), ''id_Tabulador_SE_Cat_Puesto'')
from #cruceplazasHist a where a.idplaza is not null and num in (select num from #registrosCCarrera)

delete from #cruceplazasHist where categoria = ''AB001''

--select *, dbo.FU_TTabulador_SE_Cat_Puesto(idplaza, dbo.anioquincenatofecha(hasta_,0), ''TModelo_SE_id_Modelo_SE'') modelo
update a set a.modelo = dbo.FU_TTabulador_SE_Cat_Puesto(idplaza, dbo.anioquincenatofecha(hasta_,0), ''TModelo_SE_id_Modelo_SE'')
from #cruceplazasHist a where a.idplaza is not null and num in (select num from #registrosCCarrera)

--select *, dbo.FU_TTabulador_SE_Nivel_Pago(idplaza, dbo.anioquincenatofecha(hasta_,0), ''id_Tabulador_SE_Nivel_Pago'') pago
update a set a.id_npago = dbo.FU_TTabulador_SE_Nivel_Pago(idplaza, dbo.anioquincenatofecha(hasta_,0), ''id_Tabulador_SE_Nivel_Pago'')
from #cruceplazasHist a where a.idplaza is not null and num in (select num from #registrosCCarrera)

--select *, dbo.FU_Tabulador_Zona(idplaza, dbo.anioquincenatofecha(hasta_,0)) zona
update a set a.id_zona = dbo.FU_Tabulador_Zona(idplaza, dbo.anioquincenatofecha(hasta_,0))
from #cruceplazasHist a where a.idplaza is not null and num in (select num from #registrosCCarrera)


update a set a.id_puesto = b.id_Tabulador_SE_Cat_Puesto 
-- select distinct a.*
from #cruceplazasHist a 
inner join TTabulador_SE_Cat_Puesto b on b.categoria like ''%''+rtrim(ltrim(a.CATEGORIA))+''%''  
where b.TModelo_SE_id_Modelo_SE in (1,2,3,4,5,6,7,8,9) and a.num not in (select num from #registrosCCarrera)

update #cruceplazasHist set id_puesto = dbo.FU_TTabulador_SE_Cat_Puesto(idplaza, getdate(), ''id_Tabulador_SE_Cat_Puesto'')
where idplaza is not null and num not in (select num from #registrosCCarrera) and dbo.FU_TTabulador_SE_Cat_Puesto(idplaza,getdate(), ''id_Tabulador_SE_Cat_Puesto'') is not null


update #cruceplazasHist set id_puesto = dbo.FU_TTabulador_SE_Cat_Puesto(id_plaza, getdate(), ''id_Tabulador_SE_Cat_Puesto'')
where idplaza is null and id_plaza <> 0 and num not in (select num from #registrosCCarrera)
and dbo.FU_TTabulador_SE_Cat_Puesto(id_plaza, getdate(), ''id_Tabulador_SE_Cat_Puesto'') is not null


update a set a.modelo = b.TModelo_SE_id_Modelo_SE 
-- select  *
from #cruceplazasHist a 
inner join TTabulador_SE_Cat_Puesto b on a.id_puesto = b.id_Tabulador_SE_Cat_Puesto 
where b.TModelo_SE_id_Modelo_SE in (1,2,3,4,5,6,7,8,9) and a.num not in (select num from #registrosCCarrera)

update #cruceplazasHist set id_cm = 1 where modelo = 7

update a set a.id_npago = b.pago, a.id_zona = b.zona 
--select distinct a.*
from #cruceplazasHist a 
inner join ut..ne_TabuladorCategorias b on a.id_CM = b.cm and a.id_puesto = b.puesto where a.num not in (select num from #registrosCCarrera)

update #cruceplazasHist set id_npago = 1, id_zona = 2 where id_puesto in (126,1316) and num not in (select num from #registrosCCarrera)

select *, ROW_NUMBER( ) OVER( order by num ) row into #tablasustituta_a from #cruceplazasHist

select * into #TablaAñoOriginal from #tablaAño
delete from #tablaAño

select rfc,plaza, min(row) row into #minrowplaza from #tablasustituta_a group by rfc, plaza

select a.* into #tablasustituta from #tablasustituta_a a
inner join #minrowplaza b on a.[row] = b.[row] and a.plaza = b.plaza and a.rfc = b.rfc

insert into #tablaAño
select row num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, 
id_emp, id_plaza, desde_, hasta_, sueldo, aguinaldo, prima, DM, Cn, ap, bo, di, c88, qnas
from #tablasustituta

end



--select distinct t.*, dbo.fechaToAnioQuincena(pe.fecha) qna into #QnaDesdePlaza from plazaempleados pe inner join (
--select id_emp, id_plaza, min(fecha) fecha from plazaempleados group by id_emp, id_plaza
--) h  on h.id_emp = pe.id_emp and h.id_plaza = pe.id_plaza and h.fecha = pe.fecha
--inner join #tablaAño t on t.id_emp = pe.id_emp and t.id_plaza = pe.id_plaza
--where pe.id_emp <> 0

select t.*, isnull(pe.qna,t.desde) qna into #QnaDesdePlaza
from #tablaAño t left join (
select distinct pe.*, dbo.fechaToAnioQuincena(pe.fecha) qna  
from plazaempleados pe inner join (
select id_emp, id_plaza, min(fecha) fecha from plazaempleados group by id_emp, id_plaza
) h  on h.id_emp = pe.id_emp and h.id_plaza = pe.id_plaza and h.fecha = pe.fecha
where pe.id_emp <> 0
and pe.id_plaza in (select id_plaza from plazaieepo where replace(''07''+substring(plazaieepo,3,len(plazaieepo)), '' '','''') in (
select codigo_plaza from hplazas_concifed_230217 where ESTATUS <> ''C''
))
) pe on t.id_emp = pe.id_emp and t.id_plaza = pe.id_plaza


if(@tPlaza = ''Asc'')
begin

select a.*, isnull(e.id_cia,0) id_cia, isnull(c.id_periodo,0) id_periodo into #EmpleadoPeriodo_antig
from #QnaDesdePlaza a
left join empleados e on e.id_emp = a.id_emp
left join calennomina c on dbo.fechatoanioquincena(c.fechaini) = a.hasta_ and c.id_cia = e.id_cia and c.parcial = 0 and c.numero <= 24 and a.hasta_ <> '''' and a.id_emp <> 0

select distinct a.*, h.id_plaza idplaza into #Empleadoplazaperiodo_antig 
from #EmpleadoPeriodo_antig a
inner join (
select Id_Emp, case when id_periodopago = 0 then Id_Periodo else id_periodopago end id_periodo, id_concepto, Pesos, id_plaza, Id_Referencia, id_periodoPago, Id_ProcesoNomina, Desde, Hasta from nom_histpagos where id_concepto in (select id_concepto from conceptos where tipo = 1)
union all
select Id_Emp, case when id_periodopago = 0 then Id_Periodo else id_periodopago end id_periodo, id_concepto, Pesos, id_plaza, Id_Referencia, id_periodoPago, Id_ProcesoNomina, Desde, Hasta from nom_pagos_hist where id_concepto in (select id_concepto from conceptos where tipo = 1)
) h on h.id_emp = a.id_emp and h.id_periodo = a.id_periodo 

select t.*, dbo.fechaToAnioQuincena(pe.fecha) qnaAntig into #desdeAntiguedad from #Empleadoplazaperiodo_antig t
inner join (
select distinct pe.*, dbo.fechaToAnioQuincena(pe.fecha) qna  
from plazaempleados pe inner join (
select id_emp, id_plaza, min(fecha) fecha from plazaempleados group by id_emp, id_plaza
) h  on h.id_emp = pe.id_emp and h.id_plaza = pe.id_plaza and h.fecha = pe.fecha
where pe.id_emp <> 0
) pe on t.id_emp = pe.id_emp and t.idplaza = pe.id_plaza

update a set a.qna = b.qnaAntig
from #QnaDesdePlaza a inner join (
select num,rfc, min(qnaAntig) qnaAntig from #desdeAntiguedad group by num,rfc
) b on a.num = b.num

end

if(@tPlaza = ''Forzado'')
begin
update #QnaDesdePlaza set qna = dbo.fechaToAnioQuincena(dateadd(day,-(13*15),dbo.anioQuincenaToFecha(qna, 0)))
end

-- para forzar a tener antiguedad para costeo inc > 201916 07102020
update #QnaDesdePlaza set qna = dbo.fechaToAnioQuincena(dateadd(day,-(13*15),dbo.anioQuincenaToFecha(qna, 0)))


update a set a.qnas =
 a.qnas-(case when (@año+(select case when @año = ''2012'' or @año = ''2014'' or @año = ''2015'' or @año = ''2017'' or @año = ''2019'' or @año = ''2020'' then ''07'' when @año = ''2013'' or @año = ''2016'' or @año = ''2018'' then ''06'' else ''06'' end) between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(b.qna,a.desde) > a.desde then a.desde else isnull(b.qna,a.desde) end, @año+(select case when @año = ''2012'' or @año = ''2014'' or @año = ''2015'' or @año = ''2017'' or @año = ''2019'' or @año = ''2020'' then ''07'' when @año = ''2013'' or @año = ''2016'' or @año = ''2018'' then ''06'' else ''06'' end)) < 12) then 1 else 0 end+
case when @año+''14'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(b.qna,a.desde) > a.desde then a.desde else isnull(b.qna,a.desde) end, @año+''14'') <= 7  then 1 else 0 end+
case when @año+''15'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(b.qna,a.desde) > a.desde then a.desde else isnull(b.qna,a.desde) end, @año+''15'') <= 9 then 1 else 0 end+
case when @año+''24'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(b.qna,a.desde) > a.desde then a.desde else isnull(b.qna,a.desde) end, @año+''24'') < 12 then 1 else 0 end)
from #tablaAño a
left join #QnaDesdePlaza b on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
where a.qnas > 0


update #tablaAño set sueldo = 2514.50 * qnas where CATEGORIA = ''AB001'' and (funcion = ''DOCENTE'' or funcion like ''%MAESTRO%'' or funcion like ''%DOCENTE%'') and qnas > 0
update #tablaAño set sueldo = 2117.00 * qnas where CATEGORIA = ''AB001'' and (funcion = ''ADMINISTRATIVO'' or funcion like ''%ADMINISTRATIVO%'' or funcion like ''%SERVICIO%'' ) and qnas > 0



declare @fecha datetime

if(@tPlaza = ''Inc'')
begin
-- declare @año varchar(4) = ''2014''
set @año = cast(cast(@año as int) -1 as varchar)
-- select @año
end

if @Quincena = ''00''
  set @fecha = @año+''/12/31''
else
  set @fecha = (select dbo.anioquincenatofecha(@año+''''+@qna,0))


 select a.*, c.resultado, c.nombre,c.tipo 
   into #ne_TabuladorCosteo
    from valoresmatriz4 a WITH(NOLOCK)
    inner join (
      select max(fecha) Fecha, id_Tabulador_SE_Cat_Puesto, id_Tabulador_SE_CM, id_Tabulador_SE_Nivel_Pago, id_Tabulador_SE_Zona
      from valoresmatriz4 a WITH(NOLOCK) where fecha <= @fecha and id_concepto not in (1221,1222,1223,1224,1225,1225,1226,1227) group by 
      id_Tabulador_SE_Cat_Puesto, id_Tabulador_SE_CM, id_Tabulador_SE_Nivel_Pago, id_Tabulador_SE_Zona
    ) b on a.fecha = b.Fecha and
    a.id_Tabulador_SE_Cat_Puesto = b.id_Tabulador_SE_Cat_Puesto and a.id_Tabulador_SE_CM = b.id_Tabulador_SE_CM and 
    a.id_Tabulador_SE_Nivel_Pago = b.id_Tabulador_SE_Nivel_Pago and a.id_Tabulador_SE_Zona = b.id_Tabulador_SE_Zona
    inner join conceptos c WITH(NOLOCK) on c.id_concepto = a.id_concepto
    where a.id_concepto not in (1221,1222,1223,1224,1225,1225,1226,1227)
    
    insert into #ne_TabuladorCosteo
    select a.*, c.resultado, c.nombre,c.tipo from ValoresMatriz8 a WITH(NOLOCK)
    inner join (
      select max(fecha) Fecha, id_Tabulador_SE_Cat_Puesto, id_Tabulador_SE_CM, id_Tabulador_SE_Nivel_Pago, id_Tabulador_SE_Zona
      from ValoresMatriz8 WITH(NOLOCK) where fecha <= @fecha group by 
      id_Tabulador_SE_Cat_Puesto, id_Tabulador_SE_CM, id_Tabulador_SE_Nivel_Pago, id_Tabulador_SE_Zona
    ) b on a.fecha = b.Fecha and
    a.id_Tabulador_SE_Cat_Puesto = b.id_Tabulador_SE_Cat_Puesto and a.id_Tabulador_SE_CM = b.id_Tabulador_SE_CM and 
    a.id_Tabulador_SE_Nivel_Pago = b.id_Tabulador_SE_Nivel_Pago and a.id_Tabulador_SE_Zona = b.id_Tabulador_SE_Zona
    inner join conceptos c WITH(NOLOCK) on c.id_concepto = a.id_concepto    
    
      select a.*, c.resultado, c.nombre,c.tipo 
   into #ne_Tabulador5
    from valoresmatriz5 a WITH(NOLOCK)
    inner join (
      select max(fecha) Fecha, id_Tabulador_SE_Cat_Puesto, id_Tabulador_SE_CM, id_Tabulador_SE_Nivel_Pago, id_Tabulador_SE_Zona
      from valoresmatriz5 a WITH(NOLOCK) where fecha <= @fecha group by 
      id_Tabulador_SE_Cat_Puesto, id_Tabulador_SE_CM, id_Tabulador_SE_Nivel_Pago, id_Tabulador_SE_Zona
    ) b on a.fecha = b.Fecha and
    a.id_Tabulador_SE_Cat_Puesto = b.id_Tabulador_SE_Cat_Puesto and a.id_Tabulador_SE_CM = b.id_Tabulador_SE_CM and 
    a.id_Tabulador_SE_Nivel_Pago = b.id_Tabulador_SE_Nivel_Pago and a.id_Tabulador_SE_Zona = b.id_Tabulador_SE_Zona
    inner join conceptos c WITH(NOLOCK) on c.id_concepto = a.id_concepto
    where a.id_concepto not in (1221,1222,1223,1224,1225,1225,1226,1227)
    
    
    --- cuando es e carrera y tiene ea,eb,ec,ed,ee,cb en el tabulador 5 se le poner este en ves de e9
    
      select b.* into #ConcepEInsertar
      from #ne_TabuladorCosteo a
      inner join #ne_Tabulador5 b on a.id_Tabulador_SE_Cat_Puesto = b.id_Tabulador_SE_Cat_Puesto and a.id_Tabulador_SE_CM = b.id_Tabulador_SE_CM and a.id_Tabulador_SE_Nivel_Pago = b.id_Tabulador_SE_Nivel_Pago
      and a.id_Tabulador_SE_Zona = b.id_Tabulador_SE_Zona  
      where a.id_concepto = 1359 and b.id_concepto in (1360,1361,1362,1363,1364,1454) and a.id_Tabulador_SE_CM <> 3
      and b.resultado = case when a.id_Tabulador_SE_CM = 4 then ''EA'' when a.id_Tabulador_SE_CM = 5 then ''EB'' when a.id_Tabulador_SE_CM = 6 then ''CB'' when a.id_Tabulador_SE_CM = 7 then ''EC''
      when a.id_Tabulador_SE_CM = 8 then ''ED'' when a.id_Tabulador_SE_CM = 9 then ''EE'' else '''' end
      
      delete from a
      from #ne_TabuladorCosteo a
      inner join #ne_Tabulador5 b on a.id_Tabulador_SE_Cat_Puesto = b.id_Tabulador_SE_Cat_Puesto and a.id_Tabulador_SE_CM = b.id_Tabulador_SE_CM and a.id_Tabulador_SE_Nivel_Pago = b.id_Tabulador_SE_Nivel_Pago
      and a.id_Tabulador_SE_Zona = b.id_Tabulador_SE_Zona  
      where a.id_concepto = 1359 and b.id_concepto in (1360,1361,1362,1363,1364,1454) and a.id_Tabulador_SE_CM <> 3
      and b.resultado = case when a.id_Tabulador_SE_CM = 4 then ''EA'' when a.id_Tabulador_SE_CM = 5 then ''EB'' when a.id_Tabulador_SE_CM = 6 then ''CB'' when a.id_Tabulador_SE_CM = 7 then ''EC''
      when a.id_Tabulador_SE_CM = 8 then ''ED'' when a.id_Tabulador_SE_CM = 9 then ''EE'' else '''' end

      insert into #ne_TabuladorCosteo
      select * from #ConcepEInsertar
          
    --- fin cambio de e9
    
    
    
 delete from #ne_TabuladorCosteo where  id_Tabulador_SE_Cat_Puesto in (select id_Tabulador_SE_Cat_Puesto from TTabulador_SE_Cat_Puesto WITH(NOLOCK) where TModelo_SE_id_Modelo_SE  = 10)
    and id_concepto in (1306,1701)

delete #ne_TabuladorCosteo where id_concepto in (1201,1202,1203)

    select a.num,a.rfc,a.plaza,a.horas,a.categoria,a.desde,a.hasta,a.funcion,a.id_puesto,a.id_cm,a.id_npago,a.id_zona,a.modelo,a.tipo_mov, a.id_emp, a.id_plaza, a.desde_, a.hasta_, a.qnas, b.id_concepto, b.resultado, b.Valor
    into #ne_ConceptosCosteoTotales
    from #tablaAño a WITH(NOLOCK)
    left join  #ne_TabuladorCosteo b WITH(NOLOCK) on a.id_puesto = b.id_Tabulador_SE_Cat_Puesto and a.id_CM= b.id_Tabulador_SE_CM and a.id_NPago = b.id_Tabulador_SE_Nivel_Pago 
    and a.id_Zona = b.id_Tabulador_SE_Zona
    where a.modelo in (1,2,3,4,5,6,7,9) and a.desde_ <> ''''

 insert into #ne_ConceptosCosteoTotales ( num,rfc,plaza,horas,categoria,desde,hasta,funcion,id_puesto,id_cm,id_npago,id_zona,modelo,tipo_mov, id_emp, id_plaza,desde_,hasta_,qnas,
 id_concepto,resultado,Valor)
    select num,rfc,plaza,horas,categoria,desde,hasta,funcion,id_puesto,id_cm,id_npago,id_zona,modelo,tipo_mov, id_emp, id_plaza,desde_,hasta_,qnas,
    1558 id_concepto,''HT'' resultado,143.74 Valor
 from #tablaAño WITH(NOLOCK) where modelo in (5,6,2,9) and qnas > 0
 
update #ne_ConceptosCosteoTotales set valor = 3.59 where id_concepto = 1558 and horas/10 <> 0 and modelo in (5,6,2,9)

if (@año = ''2012'')
begin
 insert into #ne_ConceptosCosteoTotales (num,rfc,plaza,horas,categoria,desde,hasta,funcion,id_puesto,id_cm,id_npago,id_zona,modelo,tipo_mov, id_emp, id_plaza,desde_,hasta_,qnas,
 id_concepto,resultado,Valor)
 select num,rfc,plaza,horas,categoria,desde,hasta,funcion,id_puesto,id_cm,id_npago,id_zona,modelo,tipo_mov, id_emp, id_plaza,desde_,hasta_,qnas, 1306 id_concepto,''38'' resultado,314 Valor
    from #tablaAño  WITH(NOLOCK) where modelo in (2,5,6) and qnas > 0
end

if (@año = ''2013'' or @año = ''2014'')
begin
 insert into #ne_ConceptosCosteoTotales (num,rfc,plaza,horas,categoria,desde,hasta,funcion,id_puesto,id_cm,id_npago,id_zona,modelo,tipo_mov, id_emp, id_plaza,desde_,hasta_,qnas,
 id_concepto,resultado,Valor)
 select num,rfc,plaza,horas,categoria,desde,hasta,funcion,id_puesto,id_cm,id_npago,id_zona,modelo,tipo_mov, id_emp, id_plaza,desde_,hasta_,qnas, 1306 id_concepto,''38'' resultado,771 Valor
    from #tablaAño  WITH(NOLOCK) where modelo in (2,5,6) and qnas > 0
end
if (@año = ''2015'' or @año = ''2016'')
begin
 insert into #ne_ConceptosCosteoTotales (num,rfc,plaza,horas,categoria,desde,hasta,funcion,id_puesto,id_cm,id_npago,id_zona,modelo,tipo_mov, id_emp, id_plaza,desde_,hasta_,qnas,
 id_concepto,resultado,Valor)
 select num,rfc,plaza,horas,categoria,desde,hasta,funcion,id_puesto,id_cm,id_npago,id_zona,modelo,tipo_mov, id_emp, id_plaza,desde_,hasta_,qnas, 1306 id_concepto,''38'' resultado,931 Valor
    from #tablaAño  WITH(NOLOCK) where modelo in (2,5,6) and qnas > 0
end
if (@año = ''2017'' or @año = ''2018'')
begin
     insert into #ne_ConceptosCosteoTotales (num,rfc,plaza,horas,categoria,desde,hasta,funcion,id_puesto,id_cm,id_npago,id_zona,modelo,tipo_mov, id_emp, id_plaza,desde_,hasta_,qnas,
 id_concepto,resultado,Valor)
 select num,rfc,plaza,horas,categoria,desde,hasta,funcion,id_puesto,id_cm,id_npago,id_zona,modelo,tipo_mov, id_emp, id_plaza,desde_,hasta_,qnas, 1306 id_concepto,''38'' resultado,1091 Valor
    from #tablaAño  WITH(NOLOCK) where modelo in (2,5,6) and qnas > 0
end

if (@año = ''2019'' or @año = ''2020'')
begin
     insert into #ne_ConceptosCosteoTotales (num,rfc,plaza,horas,categoria,desde,hasta,funcion,id_puesto,id_cm,id_npago,id_zona,modelo,tipo_mov, id_emp, id_plaza,desde_,hasta_,qnas,
 id_concepto,resultado,Valor)
 select num,rfc,plaza,horas,categoria,desde,hasta,funcion,id_puesto,id_cm,id_npago,id_zona,modelo,tipo_mov, id_emp, id_plaza,desde_,hasta_,qnas, 1306 id_concepto,''38'' resultado,1255 Valor
    from #tablaAño  WITH(NOLOCK) where modelo in (2,5,6) and qnas > 0
end


if(@tPlaza = ''Inc'')
begin
--declare @año varchar(4) = ''2013''
set @año = cast(cast(@año as int) + 1 as varchar)
--select @año
end


update #ne_ConceptosCosteoTotales set Valor = 23.28 where  modelo in (2,5,6) and id_concepto = 1306 and horas/10 <> 0

update #ne_ConceptosCosteoTotales set valor = valor * cast(horas/10 as float) where horas/10 <> 0      


---
alter table #ne_ConceptosCosteoTotales add tipo int
update #ne_ConceptosCosteoTotales set tipo = 1

-- diferencia de carrera
if(@tPlaza = ''AD'')
begin
select a.num, a.rfc, a.plaza, a.horas, a.categoria, a.desde, a.hasta, a.funcion, a.id_puesto, a.id_cm, a.id_npago, a.id_zona, 
a.modelo, a.tipo_mov, a.id_emp, a.id_plaza, a.desde_, a.hasta_, a.qnas, b.id_concepto, b.resultado, 
case when a.horas <> ''000'' then a.Valor - ( b.Valor * cast(a.horas/10 as float)) else a.valor - b.valor  end valor, a.tipo
into #diferenciacarrera
from #ne_ConceptosCosteoTotales a
inner join #ne_TabuladorCosteo b on a.id_puesto = b.id_Tabulador_SE_Cat_Puesto and a.id_npago = b.id_Tabulador_SE_Nivel_Pago and 
a.id_zona = b.id_Tabulador_SE_Zona
and b.id_Tabulador_SE_CM = 3
where a.resultado in (''7A'',''7B'',''7C'',''7D'',''7E'',''BC'') and b.resultado = ''07''

 insert into ut..Incidencias_DifCMAntecede
select o.num, a.rfc, a.plaza, a.horas, a.categoria, a.desde, a.hasta, a.funcion, a.id_puesto, a.id_cm, a.id_npago, a.id_zona, a.modelo, 
a.tipo_mov, a.id_emp, a.id_plaza, a.desde_, a.hasta_, a.qnas, a.id_concepto, a.resultado, a.valor, a.tipo,o.plaza plazaante, 
o.categoria categoante, o.id_puesto puestoante, o.id_cm cmante, o.id_npago npagoante, o.id_zona zonaante, o.modelo modeloante, 
o.id_plaza idplazaante, @año anio, @qna qna
from #diferenciacarrera a
inner join  #tablasustituta b on a.num = b.[row]
inner join #tablasustituta_a c on c.rfc = b.rfc and c.plaza = b.plaza
inner join #TablaAñoOriginal o on c.num = o.num

end

-- insertar el incentivo de carrera
if(@tPlaza = ''Asc'')
begin

select * into #monto07Asc from #ne_ConceptosCosteoTotales where resultado = ''07'' and tipo = 1

select distinct c.* into #difParaCMAntecede
from (
select distinct a.*, b.funcion funciontipo, t.NIVEL_EDUCATIVO from ut..Incidencias_DifCMAntecede a
inner join ut..Categorias_FuncionCM b on a.categoria = b.categoria
inner join TTabulador_SE_Cat_Puesto t on t.id_Tabulador_SE_Cat_Puesto = a.id_puesto
where a.anio = @año and a.qna = @qna
) c inner join (
select distinct a.*, b.funcion funciontipo, t.NIVEL_EDUCATIVO from #ne_ConceptosCosteoTotales a
inner join ut..Categorias_FuncionCM b on a.categoria = b.categoria
inner join TTabulador_SE_Cat_Puesto t on t.id_Tabulador_SE_Cat_Puesto = a.id_puesto
where a.resultado = ''07''
) d on c.num = d.num and c.NIVEL_EDUCATIVO = d.NIVEL_EDUCATIVO

select num, rfc, plazaante, categoante, puestoante, cmante, npagoante, zonaante, modeloante, id_emp, desde_, hasta_, qnas, id_concepto, resultado,
sum( valor) valor, tipo, idplazaante, anio, qna, NIVEL_EDUCATIVO into #montoincentivo
from #difParaCMAntecede
group by num, rfc, plazaante, categoante, puestoante, cmante, npagoante, zonaante, modeloante, id_emp, desde_, hasta_, qnas, id_concepto, resultado, tipo, idplazaante, anio, qna, NIVEL_EDUCATIVO

select rfc, id_concepto, resultado,sum( valor) valor, tipo, anio, qna into #valorincentivorfc
from #montoincentivo
group by rfc, id_concepto, resultado, tipo, anio, qna

select rfc, desde_, hasta_, id_concepto, resultado,sum( Valor) valor, tipo into #valor07Ascrfc
from #monto07Asc
group by rfc, desde_, hasta_, id_concepto, resultado, tipo

select a.*, b.valor total, (a.valor) / b.valor porcen into #montoAscporcen from #monto07Asc a
inner join #valor07Ascrfc b on a.rfc = b.rfc

select a.*, b.valor incentivo, a.porcen * b.valor incenporplaza into #tabparaincentivo from #montoAscporcen a
inner join #valorincentivorfc b on a.rfc = b.rfc

select distinct a.*, b.funcion funciontipo, c.cm, tc.nivel nivcm into #tabparaincentifo_2 from #tabparaincentivo a
inner join ut..Categorias_FuncionCM b on a.categoria = b.categoria
inner join (select rfc, max(cmante) cm from #montoincentivo group by rfc) c on c.rfc = a.rfc
inner join TTabulador_SE_CM tc on tc.id_Tabulador_SE_CM = c.cm

update a set a.id_concepto = b.id_concepto, a.resultado = b.incentivo, a.tipo = 1
from #tabparaincentifo_2 a
inner join ut..Conversion_CMIncentivo b on a.funciontipo = b.funcion and a.nivcm = b.cm

insert into #ne_ConceptosCosteoTotales(num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, 
modelo, tipo_mov, id_emp, id_plaza, desde_, hasta_, qnas, id_concepto, resultado, Valor, tipo)
select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, 
modelo, tipo_mov, id_emp, id_plaza, desde_, hasta_, qnas, id_concepto, resultado,incenporplaza Valor, tipo
from #tabparaincentifo_2

end



delete #ne_ConceptosCosteoTotales where tipo_mov in (''24'',''25'') and id_concepto <> 1701



--inicia quinquenios

select a.*, e.id_cia, c.id_periodo into #EmpleadoPeriodo from #tablaAño a
inner join empleados e on e.id_emp = a.id_emp
inner join calennomina c on dbo.fechatoanioquincena(c.fechaini) = a.hasta_ and c.id_cia = e.id_cia and c.parcial = 0 and c.numero <= 24
where a.hasta_ <> '''' and a.id_emp <> 0 --and a.id_plaza <> 0


if(@tPlaza = ''AD'')
begin

select distinct a.*, h.id_plaza idplaza, h.id_concepto,case when c.id_concepto not in (1328,1518) then c.resultado else case when h.cc = '''' then c.resultado else h.cc end end quinquenio, h.pesos into #EmpleadoplazaQ_An
from #EmpleadoPeriodo a
inner join (
select Id_Emp, case when id_periodopago = 0 then Id_Periodo else id_periodopago end id_periodo, id_concepto, Pesos, id_plaza, Id_Referencia, id_periodoPago, Id_ProcesoNomina, Desde, Hasta, cc from nom_histpagos where id_concepto in (1323,1324,1325,1326,1327,1400,1401,1402,1403,1404,1328,1518)
union all
select Id_Emp, case when id_periodopago = 0 then Id_Periodo else id_periodopago end id_periodo, id_concepto, Pesos, id_plaza, Id_Referencia, id_periodoPago, Id_ProcesoNomina, Desde, Hasta, cc from nom_pagos_hist where id_concepto in (1323,1324,1325,1326,1327,1400,1401,1402,1403,1404,1328,1518)
) h on h.id_emp = a.id_emp and h.id_periodo = a.id_periodo and h.id_plaza = a.id_plaza 
inner join conceptos c on c.id_concepto = h.id_concepto

select num,rfc,plaza,horas,categoria,desde,hasta,funcion,id_puesto,id_cm,id_npago,id_zona,modelo,tipo_mov,id_emp,id_plaza,desde_,hasta_,sueldo,aguinaldo,
prima,DM,Cn,ap,bo,di,c88,qnas,id_cia,id_periodo,idplaza,max(id_concepto) id_concepto,max(quinquenio) quinquenio, sum(pesos) pesos into #QuinquenioBase
from #EmpleadoplazaQ_An 
group by num,rfc,plaza,horas,categoria,desde,hasta,funcion,id_puesto,id_cm,id_npago,id_zona,modelo,tipo_mov,id_emp,id_plaza,desde_,hasta_,sueldo,aguinaldo,
prima,DM,Cn,ap,bo,di,c88,qnas,id_cia,id_periodo,idplaza

delete from #QuinquenioBase where pesos <= 0

insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, id_concepto,quinquenio resultado, (pesos * 2),1 tipo from #QuinquenioBase

end
else
begin

select top 0 a.*, h.id_plaza idplaza, h.id_concepto,case when c.id_concepto not in (1328,1518) then c.resultado else case when h.cc = '''' then c.resultado else h.cc end end quinquenio into #EmpleadoplazaQuinquenio
from #EmpleadoPeriodo a
inner join (
select top 1 Id_Emp, case when id_periodopago = 0 then Id_Periodo else id_periodopago end id_periodo, id_concepto, Pesos, id_plaza, Id_Referencia, id_periodoPago, Id_ProcesoNomina, Desde, Hasta, cc from nom_histpagos where id_concepto in (1323,1324,1325,1326,1327,1400,1401,1402,1403,1404,1328,1518)
) h on a.id_emp = h.id_emp and a.id_plaza = h.id_plaza 
inner join conceptos c on c.id_concepto = h.id_concepto


if(@tPlaza = ''Forzado'')
begin

select a.num, a.rfc,a.plaza,a.desde,a.hasta,a.id_emp, a.id_plaza,max(h.id_periodo) id_periodo into #MaxPeriodoQin from #EmpleadoPeriodo a
inner join (
select Id_Emp, case when id_periodopago = 0 then Id_Periodo else id_periodopago end id_periodo, id_concepto, Pesos, id_plaza, Id_Referencia, id_periodoPago, Id_ProcesoNomina, Desde, Hasta, cc from nom_histpagos where id_concepto in (1702,1703,1705,1706,1707,1704,1701,1300,1318,1319,1320,1321,1322,1354,1510)
) h on a.id_emp = h.id_emp and a.id_plaza = h.id_plaza
group by a.num, a.rfc,a.plaza,a.desde,a.hasta,a.id_emp, a.id_plaza

insert into #EmpleadoplazaQuinquenio
select distinct b.*, h.id_plaza idplaza, h.id_concepto,case when c.id_concepto not in (1328,1518) then c.resultado else case when h.cc = '''' then c.resultado else h.cc end end quinquenio
from #MaxPeriodoQin a
inner join #EmpleadoPeriodo b on b.num = a.num
inner join (
select Id_Emp, case when id_periodopago = 0 then Id_Periodo else id_periodopago end id_periodo, id_concepto, Pesos, id_plaza, Id_Referencia, id_periodoPago, Id_ProcesoNomina, Desde, Hasta, cc from nom_histpagos where id_concepto in (1323,1324,1325,1326,1327,1400,1401,1402,1403,1404,1328,1518)
) h on a.id_emp = h.id_emp and a.id_plaza = h.id_plaza and a.id_periodo = h.id_periodo
inner join conceptos c on c.id_concepto = h.id_concepto

end
else
begin

insert into #EmpleadoplazaQuinquenio
select distinct a.*, h.id_plaza idplaza, h.id_concepto,case when c.id_concepto not in (1328,1518) then c.resultado else case when h.cc = '''' then c.resultado else h.cc end end quinquenio 
from #EmpleadoPeriodo a
inner join (
select Id_Emp, case when id_periodopago = 0 then Id_Periodo else id_periodopago end id_periodo, id_concepto, Pesos, id_plaza, Id_Referencia, id_periodoPago, Id_ProcesoNomina, Desde, Hasta, cc from nom_histpagos where id_concepto in (1323,1324,1325,1326,1327,1400,1401,1402,1403,1404,1328,1518)
union all
select Id_Emp, case when id_periodopago = 0 then Id_Periodo else id_periodopago end id_periodo, id_concepto, Pesos, id_plaza, Id_Referencia, id_periodoPago, Id_ProcesoNomina, Desde, Hasta, cc from nom_pagos_hist where id_concepto in (1323,1324,1325,1326,1327,1400,1401,1402,1403,1404,1328,1518)
) h on h.id_emp = a.id_emp and h.id_periodo = a.id_periodo 
inner join conceptos c on c.id_concepto = h.id_concepto
where  h.id_plaza <> a.id_plaza 
and h.id_plaza in (select id_plaza from plazaieepo where replace(''07''+substring(plazaieepo,3,len(plazaieepo)), '' '','''') in (
select codigo_plaza from hplazas_concifed_230217 where ESTATUS <> ''C''
))

end

select *,dbo.FU_TTabulador_SE_Cat_Puesto(idplaza, dbo.anioquincenatofecha(hasta_,0), ''TModelo_SE_id_Modelo_SE'') modeloBase into #EmpPlazaQuinBaseMod
from #EmpleadoplazaQuinquenio

--select a.*, quinquenio, b.id_concepto into #registroconquin from #EmpleadoPeriodo a inner join (
--select a.num,a.id_periodo,a.modelobase,b.quinquenio,max(a.id_concepto) id_concepto from #EmpPlazaQuinBaseMod a inner join (
--select num, id_periodo, modelobase,max(quinquenio) quinquenio from #EmpPlazaQuinBaseMod group by num, id_periodo, modelobase
--) b on a.num = b.num and a.quinquenio = b.quinquenio and a.id_periodo = b.id_periodo and a.modelobase = b.modelobase
--group by a.num,a.id_periodo,a.modelobase,b.quinquenio
--) b on a.num = b.num and a.id_periodo = b.id_periodo and a.modelo = b.modelobase

select a.*, quinquenio, b.id_concepto  into #registroconquin from #EmpleadoPeriodo a inner join (
select a.num,a.id_periodo,b.quinquenio,max(a.id_concepto) id_concepto from #EmpPlazaQuinBaseMod a inner join (
select num, id_periodo,max(quinquenio) quinquenio from #EmpPlazaQuinBaseMod group by num, id_periodo
) b on a.num = b.num and a.quinquenio = b.quinquenio and a.id_periodo = b.id_periodo 
group by a.num,a.id_periodo,b.quinquenio
) b on a.num = b.num and a.id_periodo = b.id_periodo 


update #registroconquin set id_concepto = case when categoria like ''%E%'' then case when quinquenio = ''A1'' then 1400 when quinquenio = ''A2'' then 1401 when quinquenio = ''A3'' then 1402 when quinquenio = ''A4'' then 1403
       when quinquenio = ''A5'' then 1404 else id_concepto end else case when quinquenio = ''Q1'' then 1323 when quinquenio = ''Q2'' then 1324 when quinquenio = ''Q3'' then 1325 when quinquenio = ''Q4'' then 1326
       when quinquenio = ''Q5'' then 1327 else id_concepto end end,
       quinquenio = case when categoria like ''%E%'' then case when quinquenio = ''A1'' then ''Q1'' when quinquenio = ''A2'' then ''Q2'' when quinquenio = ''A3'' then ''Q3'' when quinquenio = ''A4'' then ''Q4'' when quinquenio = ''A5'' then ''Q5''
       else quinquenio end else case when quinquenio = ''Q1'' then ''A1'' when quinquenio = ''Q2'' then ''A2'' when quinquenio = ''Q3'' then ''A3'' when quinquenio = ''Q4'' then ''A4'' when quinquenio = ''Q5'' then ''A5'' else quinquenio  end end


--A
select a.*, (case when a.horas = ''000'' then (b.valor/30)*15 else ((b.valor/30)*15)* a.horas/10 end) * 2 valor into #quinquenioaA1A5
from #registroconquin a
inner join #ne_Tabulador5 b on a.id_concepto = b.id_concepto
and id_puesto = b.id_Tabulador_SE_Cat_Puesto and a.id_cm = b.id_Tabulador_SE_CM and a.id_npago = b.id_Tabulador_SE_Nivel_Pago and a.id_zona = b.id_Tabulador_SE_Zona
where a.id_concepto in (1323,1324,1325,1326,1327) and a.modelo = 3 

insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, id_concepto,quinquenio resultado, Valor,1 tipo from #quinquenioaA1A5

--Q
select a.*, (case when a.horas = ''000'' then (b.valor/30)*15 else ((b.valor/30)*15)* a.horas/10 end) * 2 valor into #quinquenioaQ1Q5_1
from #registroconquin a
inner join #ne_Tabulador5 b on a.id_concepto = b.id_concepto
and id_puesto = b.id_Tabulador_SE_Cat_Puesto and a.id_cm = b.id_Tabulador_SE_CM and a.id_npago = b.id_Tabulador_SE_Nivel_Pago and a.id_zona = b.id_Tabulador_SE_Zona
where a.id_concepto in (1400,1401,1402,1403,1404) and a.modelo in (1,4) and ( 
(a.id_cm in (4,5,6,7,8,9) and a.id_zona = 2 and a.categoria in (''E0281'',''E0181'',''E1485'','' E0289'','' E1461'', ''E1489'')) or
(a.id_cm in (3,4,5,6,7,8,9) and a.id_zona = 2 and a.categoria not in (''E0281'',''E0181'',''E1485'','' E0289'','' E1461'', ''E1489'')) or
(a.id_cm in (3,4,5,6,7,8,9) and a.id_zona = 3 )
)

insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, id_concepto,quinquenio resultado, Valor,1 tipo from #quinquenioaQ1Q5_1


select *,case when id_concepto = 1400 then 1240 when id_concepto = 1401 then 1241 when id_concepto = 1402 then 1242 when id_concepto = 1403 then 1243 
when id_concepto = 1404 then 1244 else 0 end sustituto into #registroconquin_sus  from #registroconquin

select a.*, (case when a.horas = ''000'' then (b.valor/30)*15 else ((b.valor/30)*15)* a.horas/10 end) * 2 valor into #quinquenioaQ1Q5_2
from #registroconquin_sus a
inner join #ne_Tabulador5 b on a.sustituto = b.id_concepto
and id_puesto = b.id_Tabulador_SE_Cat_Puesto and a.id_cm = b.id_Tabulador_SE_CM and a.id_npago = b.id_Tabulador_SE_Nivel_Pago and a.id_zona = b.id_Tabulador_SE_Zona
where a.id_concepto in (1400,1401,1402,1403,1404) and a.modelo in (1,4) and a.id_cm in (3) and a.id_zona = 2 and a.categoria in (''E0281'' , ''E0181'' , ''E1485'' , ''E0289'' , ''E1461'' , ''E1489'')

insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, id_concepto,quinquenio resultado, Valor,1 tipo from #quinquenioaQ1Q5_2


-- AA PA QA

select a.num, a.rfc, a.plaza, a.horas, a.categoria, a.desde, a.hasta, a.funcion, a.id_puesto, a.id_cm, a.id_npago, a.id_zona, a.modelo, 
a.tipo_mov, a.id_emp, a.id_plaza, a.desde_, a.hasta_, a.sueldo, a.aguinaldo, a.prima, a.DM, a.Cn, a.ap, a.bo, a.di, a.c88, a.qnas, a.id_cia, 
a.id_periodo, a.quinquenio, a.id_concepto, b.Clave, round(sum(c.Valor)*(porcentaje/100),2) valor
into #quinquenioAAQA_1
from #registroconquin a
inner join (select distinct clave, porcentaje from TQuinquenios_docentes) b on a.quinquenio = b.clave
inner join #ne_ConceptosCosteoTotales c on c.num = a.num
where a.id_concepto in (1328) and a.modelo in (5,6) and c.resultado in (''07'',''7A'',''7B'',''7C'',''7D'',''7E'',''BC'')
group by a.num, a.rfc, a.plaza, a.horas, a.categoria, a.desde, a.hasta, a.funcion, a.id_puesto, a.id_cm, a.id_npago, a.id_zona, a.modelo, 
a.tipo_mov, a.id_emp, a.id_plaza, a.desde_, a.hasta_, a.sueldo, a.aguinaldo, a.prima, a.DM, a.Cn, a.ap, a.bo, a.di, a.c88, a.qnas, a.id_cia, 
a.id_periodo, a.quinquenio, a.id_concepto, b.Clave,b.porcentaje

insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, id_concepto,quinquenio resultado, Valor,1 tipo from #quinquenioAAQA_1

select a.num, a.rfc, a.plaza, a.horas, a.categoria, a.desde, a.hasta, a.funcion, a.id_puesto, a.id_cm, a.id_npago, a.id_zona, a.modelo, 
a.tipo_mov, a.id_emp, a.id_plaza, a.desde_, a.hasta_, a.sueldo, a.aguinaldo, a.prima, a.DM, a.Cn, a.ap, a.bo, a.di, a.c88, a.qnas, a.id_cia, 
a.id_periodo, a.quinquenio, a.id_concepto, b.Clave, round(sum(c.Valor)*(porcentaje/100),2) valor
into #quinquenioAAQA_2
from #registroconquin a
inner join (select distinct clave, porcentaje from TQuinquenios_docentes) b on a.quinquenio = b.clave
inner join #ne_ConceptosCosteoTotales c on c.num = a.num
where a.id_concepto in (1328) and a.modelo in (2,9) and c.resultado in (''07'',''7A'',''7B'',''7C'',''7D'',''7E'',''BC'',''DR'')
group by a.num, a.rfc, a.plaza, a.horas, a.categoria, a.desde, a.hasta, a.funcion, a.id_puesto, a.id_cm, a.id_npago, a.id_zona, a.modelo, 
a.tipo_mov, a.id_emp, a.id_plaza, a.desde_, a.hasta_, a.sueldo, a.aguinaldo, a.prima, a.DM, a.Cn, a.ap, a.bo, a.di, a.c88, a.qnas, a.id_cia, 
a.id_periodo, a.quinquenio, a.id_concepto, b.Clave,b.porcentaje

insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, id_concepto,quinquenio resultado, Valor,1 tipo from #quinquenioAAQA_2

if (@año+''''+@qna >= ''201702'')
begin
select a.num, a.rfc, a.plaza, a.horas, a.categoria, a.desde, a.hasta, a.funcion, a.id_puesto, a.id_cm, a.id_npago, a.id_zona, a.modelo, 
a.tipo_mov, a.id_emp, a.id_plaza, a.desde_, a.hasta_, a.sueldo, a.aguinaldo, a.prima, a.DM, a.Cn, a.ap, a.bo, a.di, a.c88, a.qnas, a.id_cia, 
a.id_periodo, a.quinquenio, a.id_concepto, b.Clave, round(sum(c.Valor)*(porcentaje/100),2) valor
 into #quinquenioUPN_1
from #registroconquin a
inner join (select distinct clave, porcentaje from TQuinquenios_docentes) b on a.quinquenio = b.clave
inner join #ne_ConceptosCosteoTotales c on c.num = a.num
where a.id_concepto in (1518) and a.modelo in (7) and c.id_concepto in (1510,1582)
group by a.num, a.rfc, a.plaza, a.horas, a.categoria, a.desde, a.hasta, a.funcion, a.id_puesto, a.id_cm, a.id_npago, a.id_zona, a.modelo, 
a.tipo_mov, a.id_emp, a.id_plaza, a.desde_, a.hasta_, a.sueldo, a.aguinaldo, a.prima, a.DM, a.Cn, a.ap, a.bo, a.di, a.c88, a.qnas, a.id_cia, 
a.id_periodo, a.quinquenio, a.id_concepto, b.Clave,b.porcentaje

insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, id_concepto,quinquenio resultado, Valor,1 tipo from #quinquenioUPN_1
end
else
begin

select a.*, dbo.anioquincenatofecha(hasta_,0) fechaini,r.Fecha_Alta_Rama, p.ttipo_servicio_se_id_tipo_servicio_se servicio, p.tsubsistema_se_id_subsistema_se subsistema into #tQUPN_1
from #registroconquin a
inner join (
select a.* from hfecha_alta_rama a inner join (
select id_emp, max(fecha) fecha from hfecha_alta_rama where fecha <= getdate() group by id_emp
) b on a.id_emp = b.id_emp and a.fecha = b.fecha
) r on r.id_emp = a.id_emp
inner join ttabulador_se_cat_puesto p on p.id_tabulador_se_cat_puesto = a.id_puesto

select *, (year(fechaini) - year(Fecha_Alta_Rama)) - (     case when (month(Fecha_Alta_Rama)*2- case when day(Fecha_Alta_Rama) >= 16 then 0 else 1 end) > 
(month(fechaini)*2- case when day(fechaini) >= 16 then 0 else 1 end) then 1 else 0 end ) añosserv into #tQUPN_2
from #tQUPN_1

select a.num, a.rfc, a.plaza, a.horas, a.categoria, a.desde, a.hasta, a.funcion, a.id_puesto, a.id_cm, a.id_npago, a.id_zona, a.modelo, 
a.tipo_mov, a.id_emp, a.id_plaza, a.desde_, a.hasta_, a.sueldo, a.aguinaldo, a.prima, a.DM, a.Cn, a.ap, a.bo, a.di, a.c88, a.qnas, a.id_cia, 
a.id_periodo, a.quinquenio, a.id_concepto, a.quinquenio resultado, (((2 * a.añosserv) * ((sum(c.Valor)/2)/100)))*2 valor
 into #quinquenioUPN_9_1
from #tQUPN_2 a
inner join #ne_ConceptosCosteoTotales c on c.num = a.num
where a.id_concepto in (1518) and a.modelo in (7) and a.servicio = ''7'' and a.[añosserv] >= 5 and a.[añosserv] <= 20 and a.subsistema = 12 and c.id_concepto in (1510)
group by a.num, a.rfc, a.plaza, a.horas, a.categoria, a.desde, a.hasta, a.funcion, a.id_puesto, a.id_cm, a.id_npago, a.id_zona, a.modelo, 
a.tipo_mov, a.id_emp, a.id_plaza, a.desde_, a.hasta_, a.sueldo, a.aguinaldo, a.prima, a.DM, a.Cn, a.ap, a.bo, a.di, a.c88, a.qnas, a.id_cia, 
a.id_periodo, a.quinquenio, a.id_concepto,a.añosserv

insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, id_concepto,quinquenio resultado, Valor,1 tipo from #quinquenioUPN_9_1

select a.num, a.rfc, a.plaza, a.horas, a.categoria, a.desde, a.hasta, a.funcion, a.id_puesto, a.id_cm, a.id_npago, a.id_zona, a.modelo, 
a.tipo_mov, a.id_emp, a.id_plaza, a.desde_, a.hasta_, a.sueldo, a.aguinaldo, a.prima, a.DM, a.Cn, a.ap, a.bo, a.di, a.c88, a.qnas, a.id_cia, 
a.id_periodo, a.quinquenio, a.id_concepto, a.quinquenio resultado,a.añosserv,
(case when a.[añosserv] > 30 then ( ( ( 2 * 20 ) + ( 2.5 * ( 30 - 20 ) ) ) / 100 ) * (sum(c.Valor)/2) else ( ( ( 2 * 20 ) + ( 2.5 * ( a.[añosserv] - 20 ) ) ) / 100 ) * ( (sum(c.Valor)/2) )
end) * 2 valor into #quinquenioUPN_9_2
from #tQUPN_2 a
inner join #ne_ConceptosCosteoTotales c on c.num = a.num
where a.id_concepto in (1518) and a.modelo in (7) and a.servicio = ''7'' and a.[añosserv] >= 21 and a.subsistema = 12 and c.id_concepto in (1510)
group by a.num, a.rfc, a.plaza, a.horas, a.categoria, a.desde, a.hasta, a.funcion, a.id_puesto, a.id_cm, a.id_npago, a.id_zona, a.modelo, 
a.tipo_mov, a.id_emp, a.id_plaza, a.desde_, a.hasta_, a.sueldo, a.aguinaldo, a.prima, a.DM, a.Cn, a.ap, a.bo, a.di, a.c88, a.qnas, a.id_cia, 
a.id_periodo, a.quinquenio, a.id_concepto,a.añosserv

insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, id_concepto,quinquenio resultado, Valor,1 tipo from #quinquenioUPN_9_2


select a.num, a.rfc, a.plaza, a.horas, a.categoria, a.desde, a.hasta, a.funcion, a.id_puesto, a.id_cm, a.id_npago, a.id_zona, a.modelo, 
a.tipo_mov, a.id_emp, a.id_plaza, a.desde_, a.hasta_, a.sueldo, a.aguinaldo, a.prima, a.DM, a.Cn, a.ap, a.bo, a.di, a.c88, a.qnas, a.id_cia, 
a.id_periodo, a.quinquenio, a.id_concepto, a.quinquenio resultado, (((1.9 * a.añosserv) * ((sum(c.Valor)/2)/100)))*2 valor
 into #quinquenioUPN_9_3
from #tQUPN_2 a
inner join #ne_ConceptosCosteoTotales c on c.num = a.num
where a.id_concepto in (1518) and a.modelo in (7) and a.servicio <> ''7'' and a.[añosserv] >= 5 and a.[añosserv] <= 20 and a.subsistema = 12 and c.id_concepto in (1510,1582)
group by a.num, a.rfc, a.plaza, a.horas, a.categoria, a.desde, a.hasta, a.funcion, a.id_puesto, a.id_cm, a.id_npago, a.id_zona, a.modelo, 
a.tipo_mov, a.id_emp, a.id_plaza, a.desde_, a.hasta_, a.sueldo, a.aguinaldo, a.prima, a.DM, a.Cn, a.ap, a.bo, a.di, a.c88, a.qnas, a.id_cia, 
a.id_periodo, a.quinquenio, a.id_concepto,a.añosserv

insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, id_concepto,quinquenio resultado, Valor,1 tipo from #quinquenioUPN_9_3


select a.num, a.rfc, a.plaza, a.horas, a.categoria, a.desde, a.hasta, a.funcion, a.id_puesto, a.id_cm, a.id_npago, a.id_zona, a.modelo, 
a.tipo_mov, a.id_emp, a.id_plaza, a.desde_, a.hasta_, a.sueldo, a.aguinaldo, a.prima, a.DM, a.Cn, a.ap, a.bo, a.di, a.c88, a.qnas, a.id_cia, 
a.id_periodo, a.quinquenio, a.id_concepto, a.quinquenio resultado,a.añosserv,
(case when a.[añosserv] > 30 then ( ( ( 1.9 * 20 ) + ( 2.4 * ( 30 - 20 ) ) ) / 100 ) * (sum(c.Valor)/2) else ( ( ( 1.9 * 20 ) + ( 2.4 * ( a.[añosserv] - 20 ) ) ) / 100 ) * ( (sum(c.Valor)/2) )
end) * 2 valor into #quinquenioUPN_9_4
from #tQUPN_2 a
inner join #ne_ConceptosCosteoTotales c on c.num = a.num
 where a.id_concepto in (1518) and a.modelo in (7) and a.servicio <> ''7'' and a.[añosserv] >= 21 and a.subsistema = 12 and c.id_concepto in (1510,1582)
group by a.num, a.rfc, a.plaza, a.horas, a.categoria, a.desde, a.hasta, a.funcion, a.id_puesto, a.id_cm, a.id_npago, a.id_zona, a.modelo, 
a.tipo_mov, a.id_emp, a.id_plaza, a.desde_, a.hasta_, a.sueldo, a.aguinaldo, a.prima, a.DM, a.Cn, a.ap, a.bo, a.di, a.c88, a.qnas, a.id_cia, 
a.id_periodo, a.quinquenio, a.id_concepto,a.añosserv


insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, id_concepto,quinquenio resultado, Valor,1 tipo from #quinquenioUPN_9_4

end

end
-- fin quinquenios

if(@tPlaza = ''Reg'')
begin
delete #ne_ConceptosCosteoTotales where id_concepto not in (1701,1510,1702,1703,1705,1706,1707,1704)
end

select num,rfc,plaza,horas,categoria,desde,hasta,funcion,id_puesto,id_cm,id_npago,id_zona,modelo,tipo_mov, id_emp, id_plaza,desde_,hasta_,qnas, sum(Valor) montoMensual
into #ne_ValorMensualPlaza
from #ne_ConceptosCosteoTotales 
group by num,rfc,plaza,horas,categoria,desde,hasta,funcion,id_puesto,id_cm,id_npago,id_zona,modelo,tipo_mov, id_emp, id_plaza,desde_,hasta_,qnas

--sueldo
  update a set a.sueldo = ( a.qnas / 2) * b.montomensual
from #tablaAño a
inner join #ne_ValorMensualPlaza b on b.num = a.num

-- aguinaldo

   UPDATE A SET a.aguinaldo =  round((cast(a.qnas as float) / 2) * b.pesos,2)
    from #tablaAño a inner join (
    select num, ((sum(valor)/30) * 90)/12 pesos 
    from #ne_ConceptosCosteoTotales a
    where a.id_concepto in (1702,1703,1705,1706,1707,1704,1701,1300,1301,1302,1318,1319,1320,1321,1322,1353,1354,1400,1401,1402,1403,1404,1359,1360,1361,1362,1363,1364,1454,1433,1545,1546,1358,1377,1477,1378,200,201,202,203,204,230,102,205,206,207,208,209,231,103,210,211,212,213,214,232,104,215,216,217,218,219,233,105,220,221,222,223,224,234,106,225,226,227,228,229,235,107)
    and a.Modelo in (1,4) 
    group by num
    ) b on b.num = a.num 
    where a.categoria not like ''%AB001%''

    UPDATE A SET a.aguinaldo = round((cast(a.qnas as float) / 2) * b.pesos,2)
    from #tablaAño a inner join (
    select num, ((sum(valor)/30) * 90)/12 pesos 
    from #ne_ConceptosCosteoTotales a
    where a.id_concepto in (1702,1703,1705,1706,1707,1704,1701,1300,1301,1302,1353,1557)
    and a.Modelo in (3) 
    group by num
    ) b on  b.num = a.num 
    where a.categoria not like ''%AB001%''
    
   UPDATE A SET a.aguinaldo =  case when (cast(a.qnas as float) / 2) >= 6 then b.pesos else  (cast(a.qnas as float) / 2) * (b.pesos/12) end
    from #tablaAño a inner join (
    select num, ((sum(valor)/30) * 90) pesos from #ne_ConceptosCosteoTotales a
    where a.id_concepto in (1300,1301,1302,1328,1365,1701,1702,1703,1705,1706,1707,1704)
    and a.Modelo in (5,6) 
   group by num
    ) b on  b.num = a.num 
    where a.categoria not like ''%AB001%''

    UPDATE A SET a.aguinaldo = case when (cast(a.qnas as float) / 2) >= 6 then b.pesos else  (cast(a.qnas as float) / 2) * (b.pesos/12) end
    from #tablaAño a inner join (
    select num, ((sum(valor)/30) * 90) pesos from #ne_ConceptosCosteoTotales a
    where a.id_concepto in (1702,1703,1705,1706,1707,1704,1701,1300,1301,1302,1557,1328)
    and a.Modelo in (2,9) 
    group by num
    ) b on  b.num = a.num 
    where a.categoria not like ''%AB001%''

    UPDATE A SET a.aguinaldo = round((cast(a.qnas as float) / 2) * b.pesos,2)
    from #tablaAño a inner join (
    select num, ((sum(valor)/30) * 90)/12 pesos 
    from #ne_ConceptosCosteoTotales a
    where a.id_concepto in (1510,1518,1582,1578)
    and a.Modelo in (7) 
    group by num
    ) b on  b.num = a.num 
    where a.categoria not like ''%AB001%''

-------------------------




 -- dia maestro
--select *

if @qna = ''09''
begin
    update a set a.dm = pesos * (case when @año+''09'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, @año+''09'') >= 12 then 1 else 0 end)
    from #tablaAño a inner join (
    select num, sum(valor)/2 pesos 
    from #ne_ConceptosCosteoTotales a
    where a.id_concepto in (1702,1703,1705,1706,1707,1704,1701,1300,1318,1319,1320,1321,1322,1354,1353,1510)
    and a.Modelo in ( 1 , 2 , 3 , 4 , 5 , 6, 7 , 9 )
    group by num
    ) b on b.num = a.num 
    left join #QnaDesdePlaza p on p.num = a.num
    where a.tipo_mov not in (''24'',''25'')
    and a.categoria not like ''%AB001%'' 
end   
    

-- Aportacion

  update a set a.ap = round(b.aportacion * (cast(a.qnas as float)/2),2)
    from #tablaAño a inner join (
    select num, round(sum(valor) * 0.20145 ,2) aportacion
    from #ne_ConceptosCosteoTotales a
    where a.Modelo in ( 1,2,3,4,5,6,7,9) and a.id_concepto in (1701,1510,1702,1703,1705,1706,1707,1704)
    group by num
    ) b on a.num = b.num
where a.tipo_mov not in (''24'',''25'')
and a.categoria not like ''%AB001%''

----- prima vacacional

   UPDATE A SET A.prima = b.pesos * ( case when (@año+(select case when @año = ''2012'' or @año = ''2014'' or @año = ''2015'' or @año = ''2017'' or @año = ''2019'' or @año = ''2020'' then ''07'' when @año = ''2013'' or @año = ''2016'' or @año = ''2018'' then ''06'' else ''06'' end) between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, @año+(select case when @año = ''2012'' or @año = ''2014'' or @año = ''2015'' or @año = ''2017'' or @año = ''2019'' or @año = ''2020'' then ''07'' when @año = ''2013'' or @año = ''2016'' or @año = ''2018'' then ''06'' else ''06'' end)) >= 12) then 6 else 0 end+
   case when (@año+''14'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, @año+''14'') >= 12) then 12 else 0 end
   +case when (@año+''24'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, @año+''24'') >= 12) then 6 else 0 end)
    from #tablaAño a inner join (
    select num, (round((sum(valor)/30),2)) pesos from #ne_ConceptosCosteoTotales a
    where a.id_concepto in (1702,1703,1705,1706,1707,1704,1701,1300,1328,1557)
    and a.Modelo in (2,9)
    group by num
    ) b on b.num = a.num 
    left join #QnaDesdePlaza p on p.num = a.num
    where a.tipo_mov not in (''24'',''25'')
    and a.categoria not like ''%AB001%''
    
    
    UPDATE A SET A.prima = b.pesos * (case when (@año+(select case when @año = ''2012'' or @año = ''2014'' or @año = ''2015'' or @año = ''2017'' or @año = ''2019'' or @año = ''2020'' then ''07'' when @año = ''2013'' or @año = ''2016'' or @año = ''2018'' then ''06'' else ''06'' end) between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, @año+(select case when @año = ''2012'' or @año = ''2014'' or @año = ''2015'' or @año = ''2017'' or @año = ''2019'' or @año = ''2020'' then ''07'' when @año = ''2013'' or @año = ''2016'' or @año = ''2018'' then ''06'' else ''06'' end)) >= 12) then 6 else 0 end
    +case when (@año+''14'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, @año+''14'') >= 12) then 12 else 0 end+case when (@año+''24'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, @año+''24'') >= 12) then 6 else 0 end)
    from #tablaAño a inner join (
    select num, (round((sum(valor)/30),2)) pesos from #ne_ConceptosCosteoTotales a
    where a.id_concepto in (1702,1703,1705,1706,1707,1704,1701,1300,1328,1365)
    and a.Modelo in (5,6)
    group by num
    ) b on b.num = a.num
    left join #QnaDesdePlaza p on p.num = a.num
    where a.tipo_mov not in (''24'',''25'')
    and a.categoria not like ''%AB001%''
    
   UPDATE A SET A.prima = b.pesos * (case when (@año+(select case when @año = ''2012'' or @año = ''2014'' or @año = ''2015'' or @año = ''2017'' or @año = ''2019'' or @año = ''2020'' then ''07'' when @año = ''2013'' or @año = ''2016'' or @año = ''2018'' then ''06'' else ''06'' end) between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, @año+(select case when @año = ''2012'' or @año = ''2014'' or @año = ''2015'' or @año = ''2017'' or @año = ''2019'' or @año = ''2020'' then ''07'' when @año = ''2013'' or @año = ''2016'' or @año = ''2018'' then ''06'' else ''06'' end)) >= 12) then 5 else 0 end
   +case when (@año+''24'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, @año+''24'') >= 12) then 5 else 0 end)
    from #tablaAño a inner join (
    select num, (round((sum(valor)/30),2)) pesos from #ne_ConceptosCosteoTotales a
    where a.id_concepto in (1702,1703,1705,1706,1707,1704,1701,1557,1300,1353)
    and a.Modelo in (3)
    group by num
    ) b on b.num = a.num 
    left join #QnaDesdePlaza p on p.num = a.num
    where a.tipo_mov not in (''24'',''25'')
    and a.categoria not like ''%AB001%''
    
    
   UPDATE A SET A.prima = b.pesos * (case when (@año+(select case when @año = ''2012'' or @año = ''2014'' or @año = ''2015'' or @año = ''2017'' or @año = ''2019'' or @año = ''2020'' then ''07'' when @año = ''2013'' or @año = ''2016'' or @año = ''2018'' then ''06'' else ''06'' end) between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, @año+(select case when @año = ''2012'' or @año = ''2014'' or @año = ''2015'' or @año = ''2017'' or @año = ''2019'' or @año = ''2020'' then ''07'' when @año = ''2013'' or @año = ''2016'' or @año = ''2018'' then ''06'' else ''06'' end)) >= 12) then 5 else 0 end
   +case when (@año+''24'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, @año+''24'') >= 12) then 5 else 0 end)
    from #tablaAño a inner join (
    select num, (round((sum(valor)/30),2)) pesos from #ne_ConceptosCosteoTotales a
    where a.id_concepto in (1702,1703,1705,1706,1707,1704,1701,1300,1318,1319,1320,1321,1322,1354,1400,1401,1402,1403,1404,1359,1360,1361,1362,1363,1364,1454,1433,1545,1546,1377,1358,1477,1331,1378)
    and a.Modelo in ( 1 , 4 )
    group by num
    ) b on b.num = a.num 
    left join #QnaDesdePlaza p on p.num = a.num
    where a.tipo_mov not in (''24'',''25'')
     and a.categoria not like ''%AB001%''
     
     UPDATE A SET A.prima = b.pesos * (case when (@año+(select case when @año = ''2012'' or @año = ''2014'' or @año = ''2015'' or @año = ''2017'' or @año = ''2019'' or @año = ''2020'' then ''07'' when @año = ''2013'' or @año = ''2016'' or @año = ''2018'' then ''06'' else ''06'' end) between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, @año+(select case when @año = ''2012'' or @año = ''2014'' or @año = ''2015'' or @año = ''2017'' or @año = ''2019'' or @año = ''2020'' then ''07'' when @año = ''2013'' or @año = ''2016'' or @año = ''2018'' then ''06'' else ''06'' end)) >= 12) then 6 else 0 end
     +case when (@año+''14'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, @año+''14'') >= 12) then 12 else 0 end+case when (@año+''24'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, @año+''24'') >= 12) then 6 else 0 end)
    from #tablaAño a inner join (
    select num, (round((sum(valor)/30),2)) pesos from #ne_ConceptosCosteoTotales a
    where a.id_concepto in (1510,1518,1521)
    and a.Modelo in (7)
    group by num
    ) b on b.num = a.num 
    left join #QnaDesdePlaza p on p.num = a.num
    where a.tipo_mov not in (''24'',''25'')
    and a.categoria not like ''%AB001%''

--- bono 5 dias qna 16


if @qna = ''16''
begin

if(@tPlaza = ''Asc'' or @tPlaza = ''AD'' or @tPlaza = ''Inc'' or @tPlaza = ''IncD'')
begin
if (@año = ''2012'')
begin
update a set a.bo = case when ''201216'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201216'') >= 12
then 1.00 else 0.00 end * case when a.categoria like ''%E%'' then 1380.00 else 1285.00 end
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where a.qnas > 0 and a.categoria <> ''AB001'' and a.id_puesto > 0 and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%'' and a.modelo in (1,2,3,4,5,6,9)
end

if (@año = ''2013'')
begin
update a set a.bo = case when ''201316'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201316'') >= 12
then 1.00 else 0.00 end * case when a.categoria like ''%E%'' then 1440.00 else 1340.00 end
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where a.qnas > 0 and a.categoria <> ''AB001'' and a.id_puesto > 0 and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%'' and a.modelo in (1,2,3,4,5,6,9)
end

if (@año = ''2014'')
begin
update a set a.bo = case when ''201416'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201416'') >= 12
then 1.00 else 0.00 end * case when a.categoria like ''%E%'' then 1500.00 else 1396.00 end
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where a.qnas > 0 and a.categoria <> ''AB001'' and a.id_puesto > 0 and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%'' and a.modelo in (1,2,3,4,5,6,9)
end

if (@año = ''2015'')
begin
update a set a.bo = case when ''201516'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201516'') >= 12
then 1.00 else 0.00 end * case when a.categoria like ''%E%'' then 1500.00 else 1396.00 end
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where a.qnas > 0 and a.categoria <> ''AB001'' and a.id_puesto > 0 and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%'' and a.modelo in (1,2,3,4,5,6,9)
end

if (@año = ''2016'')
begin
update a set a.bo = case when ''201616'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201616'') >= 12
then 1.00 else 0.00 end * case when a.categoria like ''%E%'' then 1616.75 else 1503.76 end
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where a.qnas > 0 and a.categoria <> ''AB001'' and a.id_puesto > 0 and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%'' and a.modelo in (1,2,3,4,5,6,9)
end

if (@año = ''2017'')
begin
update a set a.bo = case when ''201716'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201716'') >= 12
then 1.00 else 0.00 end * case when a.categoria like ''%E%'' then 1673.34 else 1556.08 end
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where a.qnas > 0 and a.categoria <> ''AB001'' and a.id_puesto > 0 and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%'' and a.modelo in (1,2,3,4,5,6,9,7)
end

if (@año = ''2018'')
begin
update a set a.bo = case when ''201816'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201816'') >= 12
then 1.00 else 0.00 end * case when a.categoria like ''%E%'' then 1746.97 else 1623.46 end
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where a.qnas > 0 and a.categoria <> ''AB001'' and a.id_puesto > 0 and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%'' and a.modelo in (1,2,3,4,5,6,9,7)
end

if (@año = ''2019'')
begin
update a set a.bo = case when ''201916'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201916'') >= 12
then 1.00 else 0.00 end * case when a.categoria like ''%E%'' then 1824.70 else 1694.80 end
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where a.qnas > 0 and a.categoria <> ''AB001'' and a.id_puesto > 0 and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%'' and a.modelo in (1,2,3,4,5,6,9,7)
end

if (@año = ''2020'')
begin
update a set a.bo = case when ''202016'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''202016'') >= 12
then 1.00 else 0.00 end * case when a.categoria like ''%E%'' then 1886.75  else 1752.43 end
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where a.qnas > 0 and a.categoria <> ''AB001'' and a.id_puesto > 0 and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%'' and a.modelo in (1,2,3,4,5,6,9,7)
end

end --termina bono 5 dias Asc

else

begin  -- 5 dias general

if (@año = ''2012'')
begin
update a set a.bo = case when ''201216'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201216'') >= 12
then 1.00 else 0.00 end * case when a.categoria like ''%E%'' then 1380.00 else 1285.00 end
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where a.qnas > 0 and a.categoria <> ''AB001'' and a.id_puesto > 0 and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%'' and a.modelo in (1,2,3,4,5,6,9)
and a.id_emp not in (
select id_emp from nom_histpagos where id_concepto in (1496,69) and id_periodo in (
select id_periodo from calennomina where numero = 16 and año = @año and id_cia in (1, 2))
union
select id_emp from nom_pagos_hist where id_concepto in (1496,69) and id_periodo in (
select id_periodo from calennomina where numero = 16 and año = @año and id_cia in (1,2))
)

end

if (@año = ''2013'')
begin
update a set a.bo = case when ''201316'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201316'') >= 12
then 1.00 else 0.00 end * case when a.categoria like ''%E%'' then 1440.00 else 1340.00 end
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where a.qnas > 0 and a.categoria <> ''AB001'' and a.id_puesto > 0 and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%'' and a.modelo in (1,2,3,4,5,6,9)
and a.id_emp not in (
select id_emp from nom_histpagos where id_concepto in (1496,69) and id_periodo in (
select id_periodo from calennomina where numero = 16 and año = @año and id_cia in (1, 2))
union
select id_emp from nom_pagos_hist where id_concepto in (1496,69) and id_periodo in (
select id_periodo from calennomina where numero = 16 and año = @año and id_cia in (1,2))
)

end

if (@año = ''2014'')
begin
update a set a.bo = case when ''201416'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201416'') >= 12
then 1.00 else 0.00 end * case when a.categoria like ''%E%'' then 1500.00 else 1396.00 end
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where a.qnas > 0 and a.categoria <> ''AB001'' and a.id_puesto > 0 and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%'' and a.modelo in (1,2,3,4,5,6,9)
and a.id_emp not in (
select id_emp from nom_histpagos where id_concepto in (1496,69) and id_periodo in (
select id_periodo from calennomina where numero = 16 and año = @año and id_cia in (1, 2))
union
select id_emp from nom_pagos_hist where id_concepto in (1496,69) and id_periodo in (
select id_periodo from calennomina where numero = 16 and año = @año and id_cia in (1,2))
)
end

if (@año = ''2015'')
begin
update a set a.bo = case when ''201516'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201516'') >= 12
then 1.00 else 0.00 end * case when a.categoria like ''%E%'' then 1500.00 else 1396.00 end
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where a.qnas > 0 and a.categoria <> ''AB001'' and a.id_puesto > 0 and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%'' and a.modelo in (1,2,3,4,5,6,9)
and a.id_emp not in (
select id_emp from nom_histpagos where id_concepto in (1496,69) and id_periodo in (
select id_periodo from calennomina where numero = 16 and año = @año and id_cia in (1, 2))
union
select id_emp from nom_pagos_hist where id_concepto in (1496,69) and id_periodo in (
select id_periodo from calennomina where numero = 16 and año = @año and id_cia in (1,2))
)
end

if (@año = ''2016'')
begin
update a set a.bo = case when ''201616'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201616'') >= 12
then 1.00 else 0.00 end * case when a.categoria like ''%E%'' then 1616.75 else 1503.76 end
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where a.qnas > 0 and a.categoria <> ''AB001'' and a.id_puesto > 0 and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%'' and a.modelo in (1,2,3,4,5,6,9)
and a.id_emp not in (
select id_emp from nom_histpagos where id_concepto in (1496,69) and id_periodo in (
select id_periodo from calennomina where numero = 16 and año = @año and id_cia in (1, 2))
union
select id_emp from nom_pagos_hist where id_concepto in (1496,69) and id_periodo in (
select id_periodo from calennomina where numero = 16 and año = @año and id_cia in (1,2))
)
end

if (@año = ''2017'')
begin
update a set a.bo = case when ''201716'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201716'') >= 12
then 1.00 else 0.00 end * case when a.categoria like ''%E%'' then 1673.34 else 1556.08 end
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where a.qnas > 0 and a.categoria <> ''AB001'' and a.id_puesto > 0 and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%'' and a.modelo in (1,2,3,4,5,6,9,7)
and a.id_emp not in (
select id_emp from nom_histpagos where id_concepto in (1496,69) and id_periodo in (
select id_periodo from calennomina where numero = 16 and año = @año and id_cia in (1, 2))
union
select id_emp from nom_pagos_hist where id_concepto in (1496,69) and id_periodo in (
select id_periodo from calennomina where numero = 16 and año = @año and id_cia in (1,2))
)

end

if (@año = ''2018'')
begin
update a set a.bo = case when ''201816'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201816'') >= 12
then 1.00 else 0.00 end * case when a.categoria like ''%E%'' then 1746.97 else 1623.46 end
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where a.qnas > 0 and a.categoria <> ''AB001'' and a.id_puesto > 0 and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%'' and a.modelo in (1,2,3,4,5,6,9,7)
and a.id_emp not in (
select id_emp from nom_histpagos where id_concepto in (1496,69) and id_periodo in (
select id_periodo from calennomina where numero = 16 and año = @año and id_cia in (1, 2))
union
select id_emp from nom_pagos_hist where id_concepto in (1496,69) and id_periodo in (
select id_periodo from calennomina where numero = 16 and año = @año and id_cia in (1,2))
)
end

if (@año = ''2019'')
begin
update a set a.bo = case when ''201916'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201916'') >= 12
then 1.00 else 0.00 end * case when a.categoria like ''%E%'' then 1824.70 else 1694.80 end
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where a.qnas > 0 and a.categoria <> ''AB001'' and a.id_puesto > 0 and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%'' and a.modelo in (1,2,3,4,5,6,9,7)
and a.id_emp not in (
select id_emp from nom_histpagos where id_concepto in (1496,69) and id_periodo in (
select id_periodo from calennomina where numero = 16 and año = @año and id_cia in (1, 2))
union
select id_emp from nom_pagos_hist where id_concepto in (1496,69) and id_periodo in (
select id_periodo from calennomina where numero = 16 and año = @año and id_cia in (1,2))
)
end

if (@año = ''2020'')
begin
update a set a.bo = case when ''202016'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''202016'') >= 12
then 1.00 else 0.00 end * case when a.categoria like ''%E%'' then 1886.75 else 1752.43  end
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where a.qnas > 0 and a.categoria <> ''AB001'' and a.id_puesto > 0 and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%'' and a.modelo in (1,2,3,4,5,6,9,7)
and a.id_emp not in (
select id_emp from nom_histpagos where id_concepto in (1496,69) and id_periodo in (
select id_periodo from calennomina where numero = 16 and año = @año and id_cia in (1, 2))
union
select id_emp from nom_pagos_hist where id_concepto in (1496,69) and id_periodo in (
select id_periodo from calennomina where numero = 16 and año = @año and id_cia in (1,2))
)
end

end

end -- termina bono 5 dias qna 16



-- CN


if(@tPlaza = ''Asc'' or @tPlaza = ''AD'' or @tPlaza = ''Inc'' or @tPlaza = ''IncD'')
begin

if @qna = ''02''
begin

if (@año = ''2015'')
begin
update a set a.cn = a.cn + (case when (''201502'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201502'') >= 12) then 1000.00 else 0.00 end )
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (1 , 4 ) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''
update a set a.cn = a.cn + (case when (''201502'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201502'') >= 12) then 850.00 else 0.00 end )
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (3) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''
end

if(@año = ''2016'')
begin
update a set a.cn = a.cn + (case when (''201602'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201602'') >= 12) then 1300.00 else 0.00 end)
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (1 , 4 ) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''
update a set a.cn = a.cn + (case when (''201602'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201602'') >= 12) then 1105.00 else 0.00 end )
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (3) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''
end

if (@año = ''2017'')
begin
update a set a.cn = a.cn + (case when (''201702'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201702'') >= 12) then 1690.00 else 0.00 end)
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (1 , 4 ) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''
update a set a.cn = a.cn + (case when (''201702'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201702'') >= 12) then 1370.20 else 0.00 end)
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (3) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''
end

if(@año = ''2018'')
begin
update a set a.cn = a.cn + (case when (''201802'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201802'') >= 12) then 3356.00 else 0.00 end)
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (1 , 4 ) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''
update a set a.cn = a.cn + (case when (''201802'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201802'') >= 12) then 2209.20 else 0.00 end)
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (3) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''
end

if(@año = ''2019'')
begin
update a set a.cn = a.cn + (case when (''201902'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201902'') >= 12) then 3356.00 else 0.00 end)
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (1 , 4 ) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''
update a set a.cn = a.cn + (case when (''201902'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201902'') >= 12) then 2430.00 else 0.00 end)
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (3) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''
end

if(@año = ''2020'')
begin
update a set a.cn = a.cn + (case when (''202002'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''202002'') >= 12) then 3658.00 else 0.00 end)
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (1 , 4 ) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''

update a set a.cn = a.cn + (case when (''202002'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''202002'') >= 12) then 2600.00 else 0.00 end)
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (3) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''
end

end

if @qna = ''16''
begin
if (@año = ''2015'')
begin
update a set a.cn = a.cn + (case when (''201516'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201516'') >= 12) then 1600.00 else 0.00 end )
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (1 , 4 ) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''
update a set a.cn = a.cn + (case when (''201516'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201516'') >= 12) then 1360.00 else 0.00 end )
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (3) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''
end

if(@año = ''2016'')
begin
update a set a.cn = a.cn + (case when (''201616'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201616'') >= 12) then 1690.00 else 0.00 end )
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (1 , 4 ) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''
update a set a.cn = a.cn + (case when (''201616'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201616'') >= 12) then 1370.20 else 0.00 end )
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (3) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''
end

if (@año = ''2017'')
begin
update a set a.cn = a.cn + (case when (''201716'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201716'') >= 12) then 2197.00 else 0.00 end )
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (1 , 4 ) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''
update a set a.cn = a.cn + (case when (''201716'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201716'') >= 12) then 1699.00 else 0.00 end )
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (3) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''
end

if(@año = ''2019'')
begin
update a set a.cn = a.cn + (case when (''201916'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201916'') >= 12) then 3356.00 else 0.00 end )
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (1 , 4 ) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''
update a set a.cn = a.cn + (case when (''201916'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201916'') >= 12) then 2430.00 else 0.00 end )
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (3) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''
end

if(@año = ''2020'')
begin
update a set a.cn = a.cn + (case when (''202016'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''202016'') >= 12) then 3658.00 else 0.00 end )
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (1 , 4 ) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''

update a set a.cn = a.cn + (case when (''202016'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''202016'') >= 12) then 2600.00 else 0.00 end )
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (3) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''
end

end

if @qna = ''11''
begin
if(@año = ''2018'')
begin
update a set a.cn = a.cn + (case when (''201811'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201811'') >= 12) then 3356.00 else 0.00 end )
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (1 , 4 ) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''
update a set a.cn = a.cn + (case when (''201811'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201811'') >= 12) then 2209.00 else 0.00 end )
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (3) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''
end
end

end  --- fin cn asc ad inc

else 

begin  --- inicia cn normal verifica si ya lo tuvo


if @qna = ''02''
begin

if (@año = ''2015'')
begin
update a set a.cn = a.cn + (case when (''201502'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201502'') >= 12) then 1000.00 else 0.00 end )
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (1 , 4 ) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''
and a.id_emp not in (
select id_emp from nom_histpagos where id_concepto = 1597 and id_periodo in (
select id_periodo from calennomina where numero = 2 and año = @año and id_cia in (2))
union
select id_emp from nom_pagos_hist where id_concepto = 1597 and id_periodo in (
select id_periodo from calennomina where numero = 2 and año = @año and id_cia in (2))
)

update a set a.cn = a.cn + (case when (''201502'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201502'') >= 12) then 850.00 else 0.00 end )
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (3) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''
and a.id_emp not in (
select id_emp from nom_histpagos where id_concepto = 1597 and id_periodo in (
select id_periodo from calennomina where numero = 2 and año = @año and id_cia in (2))
union
select id_emp from nom_pagos_hist where id_concepto = 1597 and id_periodo in (
select id_periodo from calennomina where numero = 2 and año = @año and id_cia in (2))
)
end

if(@año = ''2016'')
begin
update a set a.cn = a.cn + (case when (''201602'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201602'') >= 12) then 1300.00 else 0.00 end)
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (1 , 4 ) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''
and a.id_emp not in (
select id_emp from nom_histpagos where id_concepto = 1597 and id_periodo in (
select id_periodo from calennomina where numero = 2 and año = @año and id_cia in (2))
union
select id_emp from nom_pagos_hist where id_concepto = 1597 and id_periodo in (
select id_periodo from calennomina where numero = 2 and año = @año and id_cia in (2))
)

update a set a.cn = a.cn + (case when (''201602'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201602'') >= 12) then 1105.00 else 0.00 end )
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (3) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''
and a.id_emp not in (
select id_emp from nom_histpagos where id_concepto = 1597 and id_periodo in (
select id_periodo from calennomina where numero = 2 and año = @año and id_cia in (2))
union
select id_emp from nom_pagos_hist where id_concepto = 1597 and id_periodo in (
select id_periodo from calennomina where numero = 2 and año = @año and id_cia in (2))
)

end

if (@año = ''2017'')
begin
update a set a.cn = a.cn + (case when (''201702'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201702'') >= 12) then 1690.00 else 0.00 end)
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (1 , 4 ) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''
and a.id_emp not in (
select id_emp from nom_histpagos where id_concepto = 1597 and id_periodo in (
select id_periodo from calennomina where numero = 2 and año = @año and id_cia in (2))
union
select id_emp from nom_pagos_hist where id_concepto = 1597 and id_periodo in (
select id_periodo from calennomina where numero = 2 and año = @año and id_cia in (2))
)

update a set a.cn = a.cn + (case when (''201702'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201702'') >= 12) then 1370.20 else 0.00 end)
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (3) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''
and a.id_emp not in (
select id_emp from nom_histpagos where id_concepto = 1597 and id_periodo in (
select id_periodo from calennomina where numero = 2 and año = @año and id_cia in (2))
union
select id_emp from nom_pagos_hist where id_concepto = 1597 and id_periodo in (
select id_periodo from calennomina where numero = 2 and año = @año and id_cia in (2))
)
end

if(@año = ''2018'')
begin
update a set a.cn = a.cn + (case when (''201802'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201802'') >= 12) then 3356.00 else 0.00 end)
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (1 , 4 ) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''
and a.id_emp not in (
select id_emp from nom_histpagos where id_concepto = 1597 and id_periodo in (
select id_periodo from calennomina where numero = 2 and año = @año and id_cia in (2))
union
select id_emp from nom_pagos_hist where id_concepto = 1597 and id_periodo in (
select id_periodo from calennomina where numero = 2 and año = @año and id_cia in (2))
)

update a set a.cn = a.cn + (case when (''201802'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201802'') >= 12) then 2209.20 else 0.00 end)
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (3) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''
and a.id_emp not in (
select id_emp from nom_histpagos where id_concepto = 1597 and id_periodo in (
select id_periodo from calennomina where numero = 2 and año = @año and id_cia in (2))
union
select id_emp from nom_pagos_hist where id_concepto = 1597 and id_periodo in (
select id_periodo from calennomina where numero = 2 and año = @año and id_cia in (2))
)

end

if(@año = ''2019'')
begin
update a set a.cn = a.cn + (case when (''201902'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201902'') >= 12) then 3356.00 else 0.00 end)
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (1 , 4 ) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''
and a.id_emp not in (
select id_emp from nom_histpagos where id_concepto = 1597 and id_periodo in (
select id_periodo from calennomina where numero = 2 and año = @año and id_cia in (2))
union
select id_emp from nom_pagos_hist where id_concepto = 1597 and id_periodo in (
select id_periodo from calennomina where numero = 2 and año = @año and id_cia in (2))
)

update a set a.cn = a.cn + (case when (''201902'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201902'') >= 12) then 2430.00 else 0.00 end)
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (3) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''
and a.id_emp not in (
select id_emp from nom_histpagos where id_concepto = 1597 and id_periodo in (
select id_periodo from calennomina where numero = 2 and año = @año and id_cia in (2))
union
select id_emp from nom_pagos_hist where id_concepto = 1597 and id_periodo in (
select id_periodo from calennomina where numero = 2 and año = @año and id_cia in (2))
)
end

if(@año = ''2020'')
begin
update a set a.cn = a.cn + (case when (''202002'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''202002'') >= 12) then 3658.00 else 0.00 end)
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (1 , 4 ) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''
and a.id_emp not in (
select id_emp from nom_histpagos where id_concepto = 1597 and id_periodo in (
select id_periodo from calennomina where numero = 2 and año = @año and id_cia in (2))
union
select id_emp from nom_pagos_hist where id_concepto = 1597 and id_periodo in (
select id_periodo from calennomina where numero = 2 and año = @año and id_cia in (2))
)

update a set a.cn = a.cn + (case when (''202002'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''202002'') >= 12) then 2600.00 else 0.00 end)
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (3) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''
and a.id_emp not in (
select id_emp from nom_histpagos where id_concepto = 1597 and id_periodo in (
select id_periodo from calennomina where numero = 2 and año = @año and id_cia in (2))
union
select id_emp from nom_pagos_hist where id_concepto = 1597 and id_periodo in (
select id_periodo from calennomina where numero = 2 and año = @año and id_cia in (2))
)
end


end

if @qna = ''16''
begin
if (@año = ''2015'')
begin
update a set a.cn = a.cn + (case when (''201516'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201516'') >= 12) then 1600.00 else 0.00 end )
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (1 , 4 ) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''
and a.id_emp not in (
select id_emp from nom_histpagos where id_concepto = 1597 and id_periodo in (
select id_periodo from calennomina where numero = 16 and año = @año and id_cia in (2))
union
select id_emp from nom_pagos_hist where id_concepto = 1597 and id_periodo in (
select id_periodo from calennomina where numero = 16 and año = @año and id_cia in (2))
)

update a set a.cn = a.cn + (case when (''201516'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201516'') >= 12) then 1360.00 else 0.00 end )
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (3) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''
and a.id_emp not in (
select id_emp from nom_histpagos where id_concepto = 1597 and id_periodo in (
select id_periodo from calennomina where numero = 16 and año = @año and id_cia in (2))
union
select id_emp from nom_pagos_hist where id_concepto = 1597 and id_periodo in (
select id_periodo from calennomina where numero = 16 and año = @año and id_cia in (2))
)

end

if(@año = ''2016'')
begin
update a set a.cn = a.cn + (case when (''201616'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201616'') >= 12) then 1690.00 else 0.00 end )
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (1 , 4 ) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''
and a.id_emp not in (
select id_emp from nom_histpagos where id_concepto = 1597 and id_periodo in (
select id_periodo from calennomina where numero = 16 and año = @año and id_cia in (2))
union
select id_emp from nom_pagos_hist where id_concepto = 1597 and id_periodo in (
select id_periodo from calennomina where numero = 16 and año = @año and id_cia in (2))
)

update a set a.cn = a.cn + (case when (''201616'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201616'') >= 12) then 1370.20 else 0.00 end )
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (3) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''
and a.id_emp not in (
select id_emp from nom_histpagos where id_concepto = 1597 and id_periodo in (
select id_periodo from calennomina where numero = 16 and año = @año and id_cia in (2))
union
select id_emp from nom_pagos_hist where id_concepto = 1597 and id_periodo in (
select id_periodo from calennomina where numero = 16 and año = @año and id_cia in (2))
)

end

if (@año = ''2017'')
begin
update a set a.cn = a.cn + (case when (''201716'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201716'') >= 12) then 2197.00 else 0.00 end )
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (1 , 4 ) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''
and a.id_emp not in (
select id_emp from nom_histpagos where id_concepto = 1597 and id_periodo in (
select id_periodo from calennomina where numero = 16 and año = @año and id_cia in (2))
union
select id_emp from nom_pagos_hist where id_concepto = 1597 and id_periodo in (
select id_periodo from calennomina where numero = 16 and año = @año and id_cia in (2))
)

update a set a.cn = a.cn + (case when (''201716'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201716'') >= 12) then 1699.00 else 0.00 end )
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (3) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''
and a.id_emp not in (
select id_emp from nom_histpagos where id_concepto = 1597 and id_periodo in (
select id_periodo from calennomina where numero = 16 and año = @año and id_cia in (2))
union
select id_emp from nom_pagos_hist where id_concepto = 1597 and id_periodo in (
select id_periodo from calennomina where numero = 16 and año = @año and id_cia in (2))
)

end

if(@año = ''2019'')
begin
update a set a.cn = a.cn + (case when (''201916'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201916'') >= 12) then 3356.00 else 0.00 end )
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (1 , 4 ) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''
and a.id_emp not in (
select id_emp from nom_histpagos where id_concepto = 1597 and id_periodo in (
select id_periodo from calennomina where numero = 16 and año = @año and id_cia in (2))
union
select id_emp from nom_pagos_hist where id_concepto = 1597 and id_periodo in (
select id_periodo from calennomina where numero = 16 and año = @año and id_cia in (2))
)

update a set a.cn = a.cn + (case when (''201916'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201916'') >= 12) then 2430.00 else 0.00 end )
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (3) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''
and a.id_emp not in (
select id_emp from nom_histpagos where id_concepto = 1597 and id_periodo in (
select id_periodo from calennomina where numero = 16 and año = @año and id_cia in (2))
union
select id_emp from nom_pagos_hist where id_concepto = 1597 and id_periodo in (
select id_periodo from calennomina where numero = 16 and año = @año and id_cia in (2))
)
end

if(@año = ''2020'')
begin
update a set a.cn = a.cn + (case when (''202016'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''202016'') >= 12) then 3658.00 else 0.00 end )
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (1 , 4 ) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''
and a.id_emp not in (
select id_emp from nom_histpagos where id_concepto = 1597 and id_periodo in (
select id_periodo from calennomina where numero = 16 and año = @año and id_cia in (2))
union
select id_emp from nom_pagos_hist where id_concepto = 1597 and id_periodo in (
select id_periodo from calennomina where numero = 16 and año = @año and id_cia in (2))
)

update a set a.cn = a.cn + (case when (''202016'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''202016'') >= 12) then 2600.00 else 0.00 end )
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (3) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''
and a.id_emp not in (
select id_emp from nom_histpagos where id_concepto = 1597 and id_periodo in (
select id_periodo from calennomina where numero = 16 and año = @año and id_cia in (2))
union
select id_emp from nom_pagos_hist where id_concepto = 1597 and id_periodo in (
select id_periodo from calennomina where numero = 16 and año = @año and id_cia in (2))
)
end

end

if @qna = ''11''
begin
if(@año = ''2018'')
begin
update a set a.cn = a.cn + (case when (''201811'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201811'') >= 12) then 3356.00 else 0.00 end )
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (1 , 4 ) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''
and a.id_emp not in (
select id_emp from nom_histpagos where id_concepto = 1597 and id_periodo in (
select id_periodo from calennomina where numero = 11 and año = @año and id_cia in (2))
union
select id_emp from nom_pagos_hist where id_concepto = 1597 and id_periodo in (
select id_periodo from calennomina where numero = 11 and año = @año and id_cia in (2))
)

update a set a.cn = a.cn + (case when (''201811'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201811'') >= 12) then 2209.00 else 0.00 end )
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (3) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''
and a.id_emp not in (
select id_emp from nom_histpagos where id_concepto = 1597 and id_periodo in (
select id_periodo from calennomina where numero = 11 and año = @año and id_cia in (2))
union
select id_emp from nom_pagos_hist where id_concepto = 1597 and id_periodo in (
select id_periodo from calennomina where numero = 11 and año = @año and id_cia in (2))
)

end
end
end



-- DI  88

if @qna = ''22''
begin

if(@tPlaza = ''Asc'' or @tPlaza = ''AD'' or @tPlaza = ''Inc'' or @tPlaza = ''IncD'')
begin
--- DI
update a set a.DI = (case when (@año+''22'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, @año+''22'') > 12) then cast(b.monto as float) else 0.00 end )
from #tablaAño a
inner join ut..ConceptosInformadosPA b on replace(a.categoria,'' '','''') = replace(b.categoria,'' '','''')
left join #QnaDesdePlaza p on a.num = p.num
where b.anio = @año and b.concepto = ''DI'' and a.qnas > 0

--88
update a set a.c88 = (case when (@año+''22'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, @año+''22'') > 12) then cast(b.monto as float) else 0.00 end )
from #tablaAño a
inner join ut..ConceptosInformadosPA b on replace(a.categoria,'' '','''') = replace(b.categoria,'' '','''')
left join #QnaDesdePlaza p on a.num = p.num
where b.anio = @año and b.concepto = ''88'' and a.qnas > 0

end
else
begin  
  -- general revisa si ya se le calculo
--- DI
update a set a.DI = (case when (@año+''22'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, @año+''22'') > 12) then cast(b.monto as float) else 0.00 end )
from #tablaAño a
inner join ut..ConceptosInformadosPA b on replace(a.categoria,'' '','''') = replace(b.categoria,'' '','''')
left join #QnaDesdePlaza p on a.num = p.num
where b.anio = @año and b.concepto = ''DI'' and a.qnas > 0 and a.id_emp not in (
select id_emp from nom_histpagos where id_concepto = 1464 and id_periodo in (
select id_periodo from calennomina where numero = 22 and año = @año and id_cia = 2)
union
select id_emp from nom_pagos_hist where id_concepto = 1464 and id_periodo in (
select id_periodo from calennomina where numero = 22 and año = @año and id_cia = 2)
)


--88
update a set a.c88 = (case when (@año+''22'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, @año+''22'') > 12) then cast(b.monto as float) else 0.00 end )
from #tablaAño a
inner join ut..ConceptosInformadosPA b on replace(a.categoria,'' '','''') = replace(b.categoria,'' '','''')
left join #QnaDesdePlaza p on a.num = p.num
where b.anio = @año and b.concepto = ''88'' and a.qnas > 0 and a.id_emp not in (
select id_emp from nom_histpagos where id_concepto = 1442 and id_periodo in (
select id_periodo from calennomina where numero = 22 and año = @año and id_cia = 2)
union
select id_emp from nom_pagos_hist where id_concepto = 1442 and id_periodo in (
select id_periodo from calennomina where numero = 22 and año = @año and id_cia = 2)
)

end
end



if( @tipo = 1 )
begin

--- deducciones


insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, 1551 id_concepto,''05'' resultado,5029.00 Valor,1
from #tablaAño where categoria like ''%AB001%'' and qnas > 0 and (funcion = ''DOCENTE'' or funcion like ''%MAESTRO%'' or funcion like ''%DOCENTE%'')

insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, 1551 id_concepto,''05'' resultado,4234.00 Valor,1
from #tablaAño where categoria like ''%AB001%'' and qnas > 0 and (funcion = ''ADMINISTRATIVO'' or funcion like ''%ADMINISTRATIVO%'' or funcion like ''%SERVICIO%'')



-- impuesto
create table #tablatonta(id_emp int)



select h.rfc, sum(valor) BaseGraba
into #baseGravableUPNBAS
from #ne_ConceptosCosteoTotales h 
where h.id_concepto in (1300,1318,1319,1320,1321,1322,1354,1301,1302,1303,1306,1312,1313,1315,1323,1324,1325,1326,1327,1328,1331,1353,1357,1358,1557,1297,1477,
1367,1368,1370,1560,1373,1374,1375,1376,1377,1400,1401,1402,1403,1404,1485,1545,1546,1433,1378,102,103,104,105,106,107,200,201,202,203,204,205,206,207,208,209,
210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,290,291,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,
258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,230,231,232,233,234,235,1702,1703,1705,1706,1707,1704, 1701,1551,1510,1511,1518,1520,1522,1508,1513,1514,1576,1582,1596)
and h.qnas > 0
group by h.rfc

create table #Empleadoperiodohist(rfc varchar(max) default '''', id_plaza int default 0, id_concepto int default 0, pesos float default 0 )

if(@tPlaza = ''Asc'' or @tPlaza = ''AD'' or @tPlaza = ''Inc'' or @tPlaza = ''IncD'')
begin
insert into #tablatonta
select top 1 id_emp from #tablaAño
end
else
begin
insert into #Empleadoperiodohist
select *  from (
select distinct a.rfc,h.id_plaza,h.id_concepto, h.pesos from #EmpleadoPeriodo a
inner join nom_histpagos h on a.id_emp = h.id_emp and (h.id_periodo = a.id_periodo and h.id_periodopago = 0 or h.id_periodopago = a.id_periodo)
where h.id_concepto in (1300,1318,1319,1320,1321,1322,1354,1301,1302,1306,1312,1313,1315,1323,1324,1325,1326,1327,1328,1331,1353,1357,1358,1557,1297,1477,
1367,1368,1370,1560,1373,1374,1375,1376,1377,1400,1401,1402,1403,1404,1485,1545,1546,1433,1378,102,103,104,105,106,107,200,201,202,203,204,205,206,207,208,209,
210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,290,291,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,
258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,230,231,232,233,234,235,1551,1510,1511,1518,1520,1522,1508,1513,1514,1576,1582,1596)
and h.id_plaza <> a.id_plaza 
and h.id_plaza in (select id_plaza from plazaieepo where replace(''07''+substring(plazaieepo,3,len(plazaieepo)), '' '','''') in (
select codigo_plaza from hplazas_concifed_230217 where ESTATUS <> ''C''
))
union all
select distinct a.rfc,h.id_plaza,h.id_concepto, h.pesos from #EmpleadoPeriodo a
inner join nom_pagos_hist h on a.id_emp = h.id_emp and (h.id_periodo = a.id_periodo and h.id_periodopago = 0 or h.id_periodopago = a.id_periodo)
where h.id_concepto in (1300,1318,1319,1320,1321,1322,1354,1301,1302,1306,1312,1313,1315,1323,1324,1325,1326,1327,1328,1331,1353,1357,1358,1557,1297,1477,
1367,1368,1370,1560,1373,1374,1375,1376,1377,1400,1401,1402,1403,1404,1485,1545,1546,1433,1378,102,103,104,105,106,107,200,201,202,203,204,205,206,207,208,209,
210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,290,291,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,
258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,230,231,232,233,234,235,1551,1510,1511,1518,1520,1522,1508,1513,1514,1576,1582,1596)
and h.id_plaza <> a.id_plaza 
and h.id_plaza in (select id_plaza from plazaieepo where replace(''07''+substring(plazaieepo,3,len(plazaieepo)), '' '','''') in (
select codigo_plaza from hplazas_concifed_230217 where ESTATUS <> ''C''
))
) a

update a set a.basegraba = a.basegraba + (b.pesos * 2) from
#baseGravableUPNBAS a inner join (
select rfc, sum(pesos) pesos from #Empleadoperiodohist group by rfc
) b on a.rfc = b.rfc

end


select rfc, sum(valor) BaseParticipa into #baseParticipaUPNBAS from #ne_ConceptosCosteoTotales h
where h.id_concepto in (1300,1318,1319,1320,1321,1322,1354,1301,1302,1303,1306,1530,1309,1312,1441,1313,1314,1315,1316,1323,1324,1325,1326,1327,1328,1331,1353,
1357,1358,1557,1297,1359,1360,1361,1362,1362,1365,1477,1367,1368,1370,1560,1373,1374,1375,1376,1377,1400,1401,1402,1403,1404,1485,1545,1546,1433,1493,1454,1563,
1363,1364,1332,1378,102,103,104,105,106,107,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,
229,290,291,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,379,380,381,382,383,384,385,386,387,240,
241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,230,231,232,233,234,
235,1702,1703,1705,1706,1707,1704,  1701,1551, 1508,1510,1511,1513,1514,1518,1520,1522,1576,1578,1582)
group by rfc

create table #Empleadoperiodohist_p(rfc varchar(max) default '''', id_plaza int default 0, id_concepto int default 0, pesos float default 0 )

if(@tPlaza = ''Asc'' or @tPlaza = ''AD'' or @tPlaza = ''Inc'' or @tPlaza = ''IncD'')
begin
insert into #tablatonta
select top 1 id_emp from #tablaAño
end
else
begin
insert into #Empleadoperiodohist_p
select * from (
select distinct a.rfc,h.id_plaza,h.id_concepto, h.pesos from #EmpleadoPeriodo a
inner join nom_histpagos h on a.id_emp = h.id_emp and (h.id_periodo = a.id_periodo and h.id_periodopago = 0 or h.id_periodopago = a.id_periodo)
where h.id_concepto in (1300,1318,1319,1320,1321,1322,1354,1301,1302,1306,1530,1309,1312,1441,1313,1314,1315,1316,1323,1324,1325,1326,1327,1328,1331,1353,
1357,1358,1557,1297,1359,1360,1361,1362,1362,1365,1477,1367,1368,1370,1560,1373,1374,1375,1376,1377,1400,1401,1402,1403,1404,1485,1545,1546,1433,1493,1454,1563,
1363,1364,1332,1378,102,103,104,105,106,107,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,
229,290,291,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,379,380,381,382,383,384,385,386,387,240,
241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,230,231,232,233,234,
235,1551, 1508,1510,1511,1513,1514,1518,1520,1522,1576,1578,1582)
and h.id_plaza <> a.id_plaza 
and h.id_plaza in (select id_plaza from plazaieepo where replace(''07''+substring(plazaieepo,3,len(plazaieepo)), '' '','''') in (
select codigo_plaza from hplazas_concifed_230217 where ESTATUS <> ''C''
))
union all
select distinct a.rfc,h.id_plaza,h.id_concepto, h.pesos from #EmpleadoPeriodo a
inner join nom_pagos_hist h on a.id_emp = h.id_emp and (h.id_periodo = a.id_periodo and h.id_periodopago = 0 or h.id_periodopago = a.id_periodo)
where h.id_concepto in (1300,1318,1319,1320,1321,1322,1354,1301,1302,1306,1530,1309,1312,1441,1313,1314,1315,1316,1323,1324,1325,1326,1327,1328,1331,1353,
1357,1358,1557,1297,1359,1360,1361,1362,1362,1365,1477,1367,1368,1370,1560,1373,1374,1375,1376,1377,1400,1401,1402,1403,1404,1485,1545,1546,1433,1493,1454,1563,
1363,1364,1332,1378,102,103,104,105,106,107,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,
229,290,291,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,379,380,381,382,383,384,385,386,387,240,
241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,230,231,232,233,234,
235,1551, 1508,1510,1511,1513,1514,1518,1520,1522,1576,1578,1582)
and h.id_plaza <> a.id_plaza 
and h.id_plaza in (select id_plaza from plazaieepo where replace(''07''+substring(plazaieepo,3,len(plazaieepo)), '' '','''') in (
select codigo_plaza from hplazas_concifed_230217 where ESTATUS <> ''C''
))
) a

 update a set a.baseparticipa = a.baseparticipa + (b.pesos * 2) from
#baseParticipaUPNBAS a inner join (
select rfc, sum(pesos) pesos from #Empleadoperiodohist_p group by rfc
) b on a.rfc = b.rfc

end

                        
select a.*, b.baseparticipa, round( 1 - ( round(( round(1 - (round(basegraba / baseparticipa,2) ),2)) * 2,2) ),2) subsidio 
into #subsidioUPNBas
from  #baseGravableUPNBAS a
inner join #baseParticipaUPNBAS b on b.rfc = a.rfc 
                        
select a.*,b.rinferior rinferior_ta, b.rsuperior rsuperior_ta, b.cuotaF cuotaF_ta, b.Porciento Porciento_ta , round(basegraba-rinferior,2) ingExecede, round((round(basegraba-rinferior,2)) * (porciento/100),2) impMarginal,
(round((round(basegraba-rinferior,2)) * (porciento/100),2)) + cuotaF isrbruto 
into #isrMarginalBruto
from #subsidioUPNBas a,Tispta b where b.fechavigencia = ''2004/01/01'' and b.dias = 30 and a.basegraba >= b.rinferior and a.basegraba < b.rsuperior 

select a.*, b.RInferior RInferior_tb, b.RSuperior RSuperior_tb, b.CuotaF CuotaF_tb, b.Porciento Porciento_tb, round(a.impmarginal * (b.porciento/100),2) imp01,round((round(a.impmarginal * (b.porciento/100),2))+b.CuotaF,2) subsidiotot,
round((round((round(a.impmarginal * (b.porciento/100),2))+b.CuotaF,2))*a.subsidio,2) subsidioacre 
into #ImpMarBrutoSubAcre
from #isrMarginalBruto a, Tisptb b where b.fechavigencia = ''2004/01/01'' and b.dias = 30 and a.basegraba >= b.rinferior and a.basegraba < b.rsuperior 

select a.*, b.RInferior RInferior_tc, b.RSuperior RSuperior_tc, b.CuotaF CuotaF_tc, round(a.isrbruto - a.subsidioacre,2) difIsrSub, round((round(a.isrbruto - a.subsidioacre,2)) - b.CuotaF,2) ImptMensual, round(((round(a.isrbruto - a.subsidioacre,2)) - b.CuotaF)/2,2) ImpQuincena
into #inpuestoquincenal
from #ImpMarBrutoSubAcre a, Tisptc b where b.fechavigencia = ''2004/01/01'' and b.dias = 30 and a.basegraba >= b.rinferior and a.basegraba < b.rsuperior 
                        
select h.num, h.rfc, h.plaza, h.horas, h.categoria, h.desde, h.hasta, h.funcion, h.id_puesto, h.id_cm, h.id_npago, h.id_zona, h.modelo, 
h.tipo_mov, h.id_emp, h.id_plaza, h.desde_, h.hasta_, h.qnas, sum(h.Valor) pesos into #basegravapplaza
from #ne_ConceptosCosteoTotales h 
where h.id_concepto in (1300,1318,1319,1320,1321,1322,1354,1301,1302,1303,1306,1312,1313,1315,1323,1324,1325,1326,1327,1328,1331,1353,1357,1358,1557,1297,1477,
1367,1368,1370,1560,1373,1374,1375,1376,1377,1400,1401,1402,1403,1404,1485,1545,1546,1433,1378,102,103,104,105,106,107,200,201,202,203,204,205,206,207,208,209,
210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,290,291,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,
258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,230,231,232,233,234,235,1702,1703,1705,1706,1707,1704, 1701,1551,1510,1511,1518,1520,1522,1508,1513,1514,1576,1582,1596) 
group by h.num, h.rfc, h.plaza, h.horas, h.categoria, h.desde, h.hasta, h.funcion, h.id_puesto, h.id_cm, h.id_npago, h.id_zona, h.modelo, 
h.tipo_mov, h.id_emp, h.id_plaza, h.desde_, h.hasta_, h.qnas

create table #Empleadoperiodohist_im(rfc varchar(max) default '''', id_plaza int default 0, id_concepto int default 0, pesos float default 0 )

if(@tPlaza = ''Asc'' or @tPlaza = ''AD'' or @tPlaza = ''Inc'' or @tPlaza = ''IncD'')
begin
insert into #tablatonta
select top 1 id_emp from #tablaAño
end
else
begin
insert into #Empleadoperiodohist_im
select *  from (
select distinct a.rfc,h.id_plaza,h.id_concepto, h.pesos from #EmpleadoPeriodo a
inner join nom_histpagos h on a.id_emp = h.id_emp and (h.id_periodo = a.id_periodo and h.id_periodopago = 0 or h.id_periodopago = a.id_periodo)
where h.id_concepto in (2314,2300)
and h.id_plaza <> a.id_plaza
and h.id_plaza in (select id_plaza from plazaieepo where replace(''07''+substring(plazaieepo,3,len(plazaieepo)), '' '','''') in (
select codigo_plaza from hplazas_concifed_230217 where ESTATUS <> ''C''
))
union all
select distinct a.rfc,h.id_plaza,h.id_concepto, h.pesos from #EmpleadoPeriodo a
inner join nom_pagos_hist h on a.id_emp = h.id_emp and (h.id_periodo = a.id_periodo and h.id_periodopago = 0 or h.id_periodopago = a.id_periodo)
where h.id_concepto in (2314,2300)
and h.id_plaza <> a.id_plaza
and h.id_plaza in (select id_plaza from plazaieepo where replace(''07''+substring(plazaieepo,3,len(plazaieepo)), '' '','''') in (
select codigo_plaza from hplazas_concifed_230217 where ESTATUS <> ''C''
))
) a

update a set a.ImptMensual = a.ImptMensual - (i.pesos * 2) 
from #inpuestoquincenal a
inner join (select rfc, sum(pesos) pesos from #Empleadoperiodohist_im group by rfc ) i on i.rfc = a.rfc

end


update a set a.basegraba = a.basegraba - (b.pesos * 2) from 
#inpuestoquincenal a inner join (
select rfc, sum(pesos) pesos from #Empleadoperiodohist group by rfc
) b on a.rfc = b.rfc


select a.*,round(b.basegraba,2) basegraba, b.ImptMensual, b.impquincena, round((a.pesos*100) / (round(b.basegraba,2)),2) pocent, round(b.ImptMensual * (round((a.pesos*100) / (round(b.basegraba,2)),2)) / 100 ,2) impPPlaza
into #impuestogenerado
from #basegravapplaza a inner join #inpuestoquincenal b on a.rfc = b.rfc

insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza, 
desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza, 
desde_, hasta_, qnas,case when id_cm = 1 then 2314 else 2300 end id_concepto,case when id_cm = 1 then ''26U'' else ''01'' end resultado,
impPPlaza Valor,2 from #impuestogenerado

--insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, 
--desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
--select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, 
--desde_, hasta_, qnas, 2300 id_concepto,''01'' resultado,impPPlaza Valor,2 from #impuestogenerado
--where id_emp in (select id_emp from empleados where id_cia = 2)

--insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, 
--desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
--select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, 
--desde_, hasta_, qnas, 2314 id_concepto,''26U'' resultado,impPPlaza Valor,2 from #impuestogenerado
--where id_emp in (select id_emp from empleados where id_cia = 1)


--77
if(@tPlaza = ''Asc'' or @tPlaza = ''AD'' )
begin
insert into #tablatonta
select top 1 id_emp from #tablaAño
end
else
begin

select distinct a.*, h.id_plaza idplaza into #Empleadoplazaperiodo77 
from #EmpleadoPeriodo a
inner join (
select Id_Emp, case when id_periodopago = 0 then Id_Periodo else id_periodopago end id_periodo, id_concepto, Pesos, id_plaza, Id_Referencia,
id_periodoPago, Id_ProcesoNomina, Desde, Hasta from nom_histpagos where id_concepto in (1510,1300,1318,1319,1320,1321,1322,1354)
union all
select Id_Emp, case when id_periodopago = 0 then Id_Periodo else id_periodopago end id_periodo, id_concepto, Pesos, id_plaza, Id_Referencia,
id_periodoPago, Id_ProcesoNomina, Desde, Hasta from nom_pagos_hist where id_concepto in (1510,1300,1318,1319,1320,1321,1322,1354)
) h on h.id_emp = a.id_emp and h.id_periodo = a.id_periodo 
where  h.id_plaza <> a.id_plaza 
and h.id_plaza in (select id_plaza from plazaieepo where replace(''07''+substring(plazaieepo,3,len(plazaieepo)), '' '','''') in (
select codigo_plaza from hplazas_concifed_230217 where ESTATUS <> ''C''
))

select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza, 
desde_, hasta_, qnas, isnull(sum(case when a.Tipo = 1 then valor end),0) percep,
isnull(sum(case when a.Tipo = 2 then valor end),0) deducs,  isnull(sum(case when a.Tipo = 1 then valor end),0) - isnull(sum(case when a.Tipo = 2 then valor end),0) neto 
into #tablanetos
 from #ne_ConceptosCosteoTotales a 
 where a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''
 group by num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza, 
desde_, hasta_, qnas   
select rfc, max(neto) neto into #sumtabneto  from #tablanetos group by rfc     

select a.rfc, a.num into #SumTabMM from #tablanetos a inner join #sumtabneto b on a.rfc = b.rfc and a.neto = b.neto     

select rfc, max(num) num into #tablapasoMP from #SumTabMM group by rfc
select a.* into #plazaMayorValor from #tablanetos a inner join #tablapasoMP b on a.rfc = b.rfc  and a.num = b.num


insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza, 
desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza, 
desde_, hasta_, qnas,case when id_cm = 1 then 2448 else  2329 end id_concepto,case when id_cm = 1 then ''37'' else ''77'' end resultado,7.9 Valor,2 
from #plazaMayorValor  where tipo_mov not in (''24'',''25'') and categoria not like ''%AB001%''
and num not in (
select num from #Empleadoplazaperiodo77
)

--insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, 
--desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
--select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, 
--desde_, hasta_, qnas, 2329 id_concepto,''77'' resultado,7.9 Valor,2 from #plazaMayorValor  where tipo_mov not in (''24'',''25'') and categoria not like ''%AB001%''
--and id_emp in (select id_emp from empleados where id_cia = 2)

--insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, 
--desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
--select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, 
--desde_, hasta_, qnas, 2448 id_concepto,''37'' resultado,7.9 Valor,2 from #plazaMayorValor  where tipo_mov not in (''24'',''25'') and categoria not like ''%AB001%''
--and id_emp in (select id_emp from empleados where id_cia = 1)

end



--02
if(@tPlaza = ''Inc'')
begin
-- declare @año varchar(4) = ''2014''
set @año = cast(cast(@año as int) -1 as varchar)
-- select @año
end

select rfc, sum(valor)/2 pesos into #sumaBasica
from #ne_ConceptosCosteoTotales b 
where b.id_concepto in (1300,1318,1319,1320,1321,1322,1354,1323,1324,1325,1326,1327,1328,1331,1353,1356,1357,1358,1367,1370,1373,1374,1375,1376,1377,1400,1401,
1402,1403,1404,1433,1442,1443,1477,1485,1510,1518,1545,1546,1557,1297,1560,4000,4006,4007,4008,4009,4010,
4011,4013, 1701,1702,1703,1705,1706,1707,1704)
and b.tipo_mov not in (''24'',''25'') and categoria not like ''%AB001%''
group by rfc

create table #Empleadoperiodohist_24(rfc varchar(max) default '''', id_plaza int default 0, id_concepto int default 0, pesos float default 0 )

if(@tPlaza = ''Asc'' or @tPlaza = ''AD'' or @tPlaza = ''Inc'' or @tPlaza = ''IncD'')
begin
insert into #tablatonta
select top 1 id_emp from #tablaAño
end
else
begin
insert into #Empleadoperiodohist_24
select *  from (
select distinct a.rfc,h.id_plaza,h.id_concepto, h.pesos from #EmpleadoPeriodo a
inner join nom_histpagos h on a.id_emp = h.id_emp and (h.id_periodo = a.id_periodo and h.id_periodopago = 0 or h.id_periodopago = a.id_periodo)
where h.id_concepto in (1300,1318,1319,1320,1321,1322,1354,1323,1324,1325,1326,1327,1328,1331,1353,1356,1357,1358,1367,1370,1373,1374,1375,1376,1377,1400,1401,
1402,1403,1404,1433,1442,1443,1477,1485,1510,1518,1545,1546,1557,1297,1560,4000,4006,4007,4008,4009,4010,
4011,4013)
and h.id_plaza <> a.id_plaza 
and h.id_plaza in (select id_plaza from plazaieepo where replace(''07''+substring(plazaieepo,3,len(plazaieepo)), '' '','''') in (
select codigo_plaza from hplazas_concifed_230217 where ESTATUS <> ''C''
))
union all
select distinct a.rfc,h.id_plaza,h.id_concepto, h.pesos from #EmpleadoPeriodo a
inner join nom_pagos_hist h on a.id_emp = h.id_emp and (h.id_periodo = a.id_periodo and h.id_periodopago = 0 or h.id_periodopago = a.id_periodo)
where h.id_concepto in (1300,1318,1319,1320,1321,1322,1354,1323,1324,1325,1326,1327,1328,1331,1353,1356,1357,1358,1367,1370,1373,1374,1375,1376,1377,1400,1401,
1402,1403,1404,1433,1442,1443,1477,1485,1510,1518,1545,1546,1557,1297,1560,4000,4006,4007,4008,4009,4010,
4011,4013)
and h.id_plaza <> a.id_plaza 
and h.id_plaza in (select id_plaza from plazaieepo where replace(''07''+substring(plazaieepo,3,len(plazaieepo)), '' '','''') in (
select codigo_plaza from hplazas_concifed_230217 where ESTATUS <> ''C''
))
) a

update a set a.pesos = a.pesos + b.pesos
from #sumaBasica a 
inner join (
select rfc, sum(pesos) pesos from #Empleadoperiodohist_24 group by rfc
) b on a.rfc = b.rfc

end


select top 0 a.rfc,sum(a.pesos) pesosb,sum(a.pesos) sumacptos,
(0.06125 * (sum(a.pesos))) importe, 
case when (0.06125 * (sum(a.pesos))) > 572.66 then 572.66 else round((0.06125 * (sum(a.pesos))),2) end cpto0227 into #importepto0227
from  #sumaBasica  a 
group by a.rfc
                 
if (@año = ''2012'')  
begin
insert into #importepto0227
select a.rfc,sum(a.pesos) pesosb,sum(a.pesos) sumacptos,
(0.06125 * (sum(a.pesos))) importe, 
case when (0.06125 * (sum(a.pesos))) > 572.66 then 572.66 else round((0.06125 * (sum(a.pesos))),2) end cpto0227 
from  #sumaBasica  a 
group by a.rfc
end
if (@año = ''2013'')  
begin
insert into #importepto0227
select a.rfc,sum(a.pesos) pesosb,sum(a.pesos) sumacptos,
(0.06125 * (sum(a.pesos))) importe, 
case when (0.06125 * (sum(a.pesos))) > 594.98 then 594.98 else round((0.06125 * (sum(a.pesos))),2) end cpto0227 
from  #sumaBasica  a 
group by a.rfc
end
if (@año = ''2014'')  
begin
insert into #importepto0227
select a.rfc,sum(a.pesos) pesosb,sum(a.pesos) sumacptos,
(0.06125 * (sum(a.pesos))) importe, 
case when (0.06125 * (sum(a.pesos))) > 618.23 then 618.23 else round((0.06125 * (sum(a.pesos))),2) end cpto0227 
from  #sumaBasica  a 
group by a.rfc
end
if (@año = ''2015'')  
begin
insert into #importepto0227
select a.rfc,sum(a.pesos) pesosb,sum(a.pesos) sumacptos,
(0.06125 * (sum(a.pesos))) importe, 
case when (0.06125 * (sum(a.pesos))) > 644.04 then 644.04 else round((0.06125 * (sum(a.pesos))),2) end cpto0227 
from  #sumaBasica  a 
group by a.rfc
end
if (@año = ''2016'')  
begin
insert into #importepto0227
select a.rfc,sum(a.pesos) pesosb,sum(a.pesos) sumacptos,
(0.06125 * (sum(a.pesos))) importe, 
case when (0.06125 * (sum(a.pesos))) > 671.06 then 671.06 else round((0.06125 * (sum(a.pesos))),2) end cpto0227 
from  #sumaBasica  a 
group by a.rfc
end
if (@año = ''2017'')  
begin
insert into #importepto0227
select a.rfc,sum(a.pesos) pesosb,sum(a.pesos) sumacptos,
(0.06125 * (sum(a.pesos))) importe, 
case when (0.06125 * (sum(a.pesos))) > 735.37 then 735.37 else round((0.06125 * (sum(a.pesos))),2) end cpto0227 
from  #sumaBasica  a 
group by a.rfc
end
if (@año = ''2018'')  
begin
insert into #importepto0227
select a.rfc,sum(a.pesos) pesosb,sum(a.pesos) sumacptos,
(0.06125 * (sum(a.pesos))) importe, 
case when (0.06125 * (sum(a.pesos))) > 750.39 then 750.39 else round((0.06125 * (sum(a.pesos))),2) end cpto0227 
from  #sumaBasica  a 
group by a.rfc
end
if (@año = ''2019'')  
begin
insert into #importepto0227
select a.rfc,sum(a.pesos) pesosb,sum(a.pesos) sumacptos,
(0.06125 * (sum(a.pesos))) importe, 
case when (0.06125 * (sum(a.pesos))) > 776.25 then 776.25 else round((0.06125 * (sum(a.pesos))),2) end cpto0227 
from  #sumaBasica  a 
group by a.rfc
end

if (@año = ''2020'')  
begin
insert into #importepto0227
select a.rfc,sum(a.pesos) pesosb,sum(a.pesos) sumacptos,
(0.06125 * (sum(a.pesos))) importe, 
case when (0.06125 * (sum(a.pesos))) > 798.21 then 798.21 else round((0.06125 * (sum(a.pesos))),2) end cpto0227 
from  #sumaBasica  a 
group by a.rfc
end

select b.num, b.rfc, b.plaza, b.horas, b.categoria, b.desde, b.hasta, b.funcion, b.id_puesto, b.id_cm, b.id_npago, b.id_zona, b.modelo, b.tipo_mov, b.id_emp, b.id_plaza, 
b.desde_, b.hasta_, b.qnas, sum(valor)/2 pesos into #importesporplaza
from #ne_ConceptosCosteoTotales b
where b.id_concepto in (1300,1318,1319,1320,1321,1322,1354,1323,1324,1325,1326,1327,1328,1331,1353,1356,1357,1358,1367,1370,1373, 1374,1375,1376,1377,
1400,1401,1402,1403,1404,1433,1442,1443,1477,1485,1510,1518,1545,1546,1557,1297,1560,4000,4006,4007,4008,4009,4010,4011,4013, 1701,1702,1703,1705,1706,1707,1704) 
and b.tipo_mov not in (''24'',''25'') and b.categoria not like ''%AB001%''
group by b.num, b.rfc, b.plaza, b.horas, b.categoria, b.desde, b.hasta, b.funcion, b.id_puesto, b.id_cm, b.id_npago, b.id_zona, b.modelo, b.tipo_mov, b.id_emp, b.id_plaza, 
b.desde_, b.hasta_, b.qnas


update a set a.sumacptos = a.sumacptos - b.pesos
from #importepto0227 a 
inner join (
select rfc, sum(pesos) pesos from #Empleadoperiodohist_24 group by rfc
) b on a.rfc = b.rfc

create table #Empleadoperiodohist_24_p (rfc varchar(max) default '''', id_plaza int default 0, id_concepto int default 0, pesos float default 0 )

if(@tPlaza = ''Asc'' or @tPlaza = ''AD'' or @tPlaza = ''Inc'' or @tPlaza = ''IncD'')
begin
insert into #tablatonta
select top 1 id_emp from #tablaAño
end
else
begin
insert into #Empleadoperiodohist_24_p
select *   from (
select distinct a.rfc,h.id_plaza,h.id_concepto, h.pesos from #EmpleadoPeriodo a
inner join nom_histpagos h on a.id_emp = h.id_emp and (h.id_periodo = a.id_periodo and h.id_periodopago = 0 or h.id_periodopago = a.id_periodo)
where h.id_concepto in (2315,2533)
and h.id_plaza <> a.id_plaza
and h.id_plaza in (select id_plaza from plazaieepo where replace(''07''+substring(plazaieepo,3,len(plazaieepo)), '' '','''') in (
select codigo_plaza from hplazas_concifed_230217 where ESTATUS <> ''C''
))
union all
select distinct a.rfc,h.id_plaza,h.id_concepto, h.pesos from #EmpleadoPeriodo a
inner join nom_pagos_hist h on a.id_emp = h.id_emp and (h.id_periodo = a.id_periodo and h.id_periodopago = 0 or h.id_periodopago = a.id_periodo)
where h.id_concepto in (2315,2533)
and h.id_plaza <> a.id_plaza
and h.id_plaza in (select id_plaza from plazaieepo where replace(''07''+substring(plazaieepo,3,len(plazaieepo)), '' '','''') in (
select codigo_plaza from hplazas_concifed_230217 where ESTATUS <> ''C''
))
) a

update a set a.cpto0227 = a.cpto0227 - b.pesos
from #importepto0227 a
inner join (
select rfc, sum(pesos) pesos from #Empleadoperiodohist_24_p group by rfc
) b on a.rfc = b.rfc

end

select b.*,a.pesosb,a.sumacptos,a.importe,a.cpto0227,(round((b.pesos*100)/a.sumacptos,2))/100 por100to, round(a.cpto0227*((round((b.pesos*100)/a.sumacptos,2))/100),2) NImporte 
into #importeConcep0227
from #importepto0227 a inner join #importesporplaza b on b.rfc = a.rfc


insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza, 
desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza, 
desde_, hasta_, qnas, case when id_cm = 1 then 2315 else 2533 end id_concepto, case when id_cm = 1 then ''27'' else ''02'' end resultado,round(nimporte*2,2) Valor,2 from #importeConcep0227  where tipo_mov not in (''24'',''25'') and categoria not like ''%AB001%''

--insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, 
--desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
--select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, 
--desde_, hasta_, qnas, 2533 id_concepto,''02'' resultado,round(nimporte*2,2) Valor,2 from #importeConcep0227  where tipo_mov not in (''24'',''25'') and categoria not like ''%AB001%''
--and id_emp in (select id_emp from empleados where id_cia = 2)

--insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, 
--desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
--select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, 
--desde_, hasta_, qnas, 2315 id_concepto,''27'' resultado,round(nimporte*2,2) Valor,2 from #importeConcep0227  where tipo_mov not in (''24'',''25'') and categoria not like ''%AB001%''
--and id_emp in (select id_emp from empleados where id_cia = 1)

--04

select rfc, sum(valor)/2 pesos into #sumaBasica04
from #ne_ConceptosCosteoTotales b 
where b.id_concepto in (1300,1318,1319,1320,1321,1322,1354,1323,1324,1325,1326,1327,1328,1331,1353,1356,1357,1358,1367,1370,1373,1374,1375,1376,1377,1400,1401,
1402,1403,1404,1433,1442,1443,1477,1485,1510,1518,1545,1546,1557,1297,1560,4000,4006,4007,4008,4009,4010,
4011,4013, 1701,1702,1703,1705,1706,1707,1704)
and b.tipo_mov not in (''24'',''25'') and categoria not like ''%AB001%''
group by rfc

update a set a.pesos = a.pesos + b.pesos
from #sumaBasica04 a 
inner join (
select rfc, sum(pesos) pesos from #Empleadoperiodohist_24 group by rfc
) b on a.rfc = b.rfc


select top 0 a.rfc,sum(a.pesos) pesosb,sum(a.pesos) sumacptos,
(0.0450 * (sum(a.pesos))) importe, 
case when (0.0450 * (sum(a.pesos))) > 420.73 then 420.73  else round((0.0450 * (sum(a.pesos))),2) end cpto0428 into #importepto0428
from  #sumaBasica04  a 
group by a.rfc

if(@año = ''2012'')
begin
insert into #importepto0428
select a.rfc,sum(a.pesos) pesosb,sum(a.pesos) sumacptos,
(0.0450 * (sum(a.pesos))) importe, 
case when (0.0450 * (sum(a.pesos))) > 420.73 then 420.73  else round((0.0450 * (sum(a.pesos))),2) end cpto0428 
from  #sumaBasica04  a 
group by a.rfc
end
if(@año = ''2013'')
begin
insert into #importepto0428
select a.rfc,sum(a.pesos) pesosb,sum(a.pesos) sumacptos,
(0.0450 * (sum(a.pesos))) importe, 
case when (0.0450 * (sum(a.pesos))) > 437.13 then 437.13  else round((0.0450 * (sum(a.pesos))),2) end cpto0428 
from  #sumaBasica04  a 
group by a.rfc
end
if(@año = ''2014'')
begin
insert into #importepto0428
select a.rfc,sum(a.pesos) pesosb,sum(a.pesos) sumacptos,
(0.0450 * (sum(a.pesos))) importe, 
case when (0.0450 * (sum(a.pesos))) > 454.21 then 454.21  else round((0.0450 * (sum(a.pesos))),2) end cpto0428 
from  #sumaBasica04  a 
group by a.rfc
end
if(@año = ''2015'')
begin
insert into #importepto0428
select a.rfc,sum(a.pesos) pesosb,sum(a.pesos) sumacptos,
(0.0450 * (sum(a.pesos))) importe, 
case when (0.0450 * (sum(a.pesos))) > 473.17 then 473.17  else round((0.0450 * (sum(a.pesos))),2) end cpto0428 
from  #sumaBasica04  a 
group by a.rfc
end
if(@año = ''2016'')
begin
insert into #importepto0428
select a.rfc,sum(a.pesos) pesosb,sum(a.pesos) sumacptos,
(0.0450 * (sum(a.pesos))) importe, 
case when (0.0450 * (sum(a.pesos))) > 493.02 then 493.02  else round((0.0450 * (sum(a.pesos))),2) end cpto0428 
from  #sumaBasica04  a 
group by a.rfc
end                        
if(@año = ''2017'')
begin
insert into #importepto0428
select a.rfc,sum(a.pesos) pesosb,sum(a.pesos) sumacptos,
(0.0450 * (sum(a.pesos))) importe, 
case when (0.0450 * (sum(a.pesos))) > 540.27 then 540.27  else round((0.0450 * (sum(a.pesos))),2) end cpto0428 
from  #sumaBasica04  a 
group by a.rfc
end    
if(@año = ''2018'')
begin
insert into #importepto0428
select a.rfc,sum(a.pesos) pesosb,sum(a.pesos) sumacptos,
(0.0450 * (sum(a.pesos))) importe, 
case when (0.0450 * (sum(a.pesos))) > 551.31 then 551.31  else round((0.0450 * (sum(a.pesos))),2) end cpto0428 
from  #sumaBasica04  a 
group by a.rfc
end    
if(@año = ''2019'')
begin
insert into #importepto0428
select a.rfc,sum(a.pesos) pesosb,sum(a.pesos) sumacptos,
(0.0450 * (sum(a.pesos))) importe, 
case when (0.0450 * (sum(a.pesos))) > 570.31 then 570.31  else round((0.0450 * (sum(a.pesos))),2) end cpto0428 
from  #sumaBasica04  a 
group by a.rfc
end    

if(@año = ''2020'')
begin
insert into #importepto0428
select a.rfc,sum(a.pesos) pesosb,sum(a.pesos) sumacptos,
(0.0450 * (sum(a.pesos))) importe, 
case when (0.0450 * (sum(a.pesos))) > 586.44 then 586.44  else round((0.0450 * (sum(a.pesos))),2) end cpto0428 
from  #sumaBasica04  a 
group by a.rfc
end  

select b.num, b.rfc, b.plaza, b.horas, b.categoria, b.desde, b.hasta, b.funcion, b.id_puesto, b.id_cm, b.id_npago, b.id_zona, b.modelo, b.tipo_mov, b.id_emp, b.id_plaza, 
b.desde_, b.hasta_, b.qnas, sum(valor)/2 pesos into #importesporplaza04
from #ne_ConceptosCosteoTotales b
where b.id_concepto in (1300,1318,1319,1320,1321,1322,1354,1323,1324,1325,1326,1327,1328,1331,1353,1356,1357,1358,1367,1370,1373, 1374,1375,1376,1377,
1400,1401,1402,1403,1404,1433,1442,1443,1477,1485,1510,1518,1545,1546,1557,1297,1560,4000,4006,4007,4008,4009,4010,4011,4013, 1701,1702,1703,1705,1706,1707,1704) 
and b.tipo_mov not in (''24'',''25'') and b.categoria not like ''%AB001%''
group by b.num, b.rfc, b.plaza, b.horas, b.categoria, b.desde, b.hasta, b.funcion, b.id_puesto, b.id_cm, b.id_npago, b.id_zona, b.modelo, b.tipo_mov, b.id_emp, b.id_plaza, 
b.desde_, b.hasta_, b.qnas

update a set a.sumacptos = a.sumacptos - b.pesos
from #importepto0428 a 
inner join (
select rfc, sum(pesos) pesos from #Empleadoperiodohist_24 group by rfc
) b on a.rfc = b.rfc

create table #Empleadoperiodohist_24_p_4 (rfc varchar(max) default '''', id_plaza int default 0, id_concepto int default 0, pesos float default 0 )

if(@tPlaza = ''Asc'' or @tPlaza = ''AD'' or @tPlaza = ''Inc'' or @tPlaza = ''IncD'')
begin
insert into #tablatonta
select top 1 id_emp from #tablaAño
end
else
begin
insert into #Empleadoperiodohist_24_p_4
select *  from (
select distinct a.rfc,h.id_plaza,h.id_concepto, h.pesos from #EmpleadoPeriodo a
inner join nom_histpagos h on a.id_emp = h.id_emp and (h.id_periodo = a.id_periodo and h.id_periodopago = 0 or h.id_periodopago = a.id_periodo)
where h.id_concepto in (2404,2534)
and h.id_plaza <> a.id_plaza
and h.id_plaza in (select id_plaza from plazaieepo where replace(''07''+substring(plazaieepo,3,len(plazaieepo)), '' '','''') in (
select codigo_plaza from hplazas_concifed_230217 where ESTATUS <> ''C''
))
union all
select distinct a.rfc,h.id_plaza,h.id_concepto, h.pesos from #EmpleadoPeriodo a
inner join nom_pagos_hist h on a.id_emp = h.id_emp and (h.id_periodo = a.id_periodo and h.id_periodopago = 0 or h.id_periodopago = a.id_periodo)
where h.id_concepto in (2404,2534)
and h.id_plaza <> a.id_plaza
and h.id_plaza in (select id_plaza from plazaieepo where replace(''07''+substring(plazaieepo,3,len(plazaieepo)), '' '','''') in (
select codigo_plaza from hplazas_concifed_230217 where ESTATUS <> ''C''
))
) a

update a set a.cpto0428 = a.cpto0428 - b.pesos
from #importepto0428 a
inner join (
select rfc, sum(pesos) pesos from #Empleadoperiodohist_24_p_4 group by rfc
) b on a.rfc = b.rfc

end

select b.*,a.pesosb,a.sumacptos,a.importe,a.cpto0428,(round((b.pesos*100)/a.sumacptos,2))/100 por100to, round(a.cpto0428*((round((b.pesos*100)/a.sumacptos,2))/100),2) NImporte 
into #importeConcep0428
from #importepto0428 a inner join #importesporplaza04 b on b.rfc = a.rfc 

insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza, 
desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza, 
desde_, hasta_, qnas,case when id_cm = 1 then 2404 else 2534 end id_concepto,case when id_cm = 1 then ''28'' else ''04'' end resultado,round(nimporte*2,2) Valor,2 from #importeConcep0428 
where tipo_mov not in (''24'',''25'') and categoria not like ''%AB001%''
                    
--insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, 
--desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
--select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, 
--desde_, hasta_, qnas, 2534 id_concepto,''04'' resultado,round(nimporte*2,2) Valor,2 from #importeConcep0428 
--where tipo_mov not in (''24'',''25'') and categoria not like ''%AB001%''
--and id_emp in (select id_emp from empleados where id_cia = 2)

--insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, 
--desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
--select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, 
--desde_, hasta_, qnas, 2404 id_concepto,''28'' resultado,round(nimporte*2,2) Valor,2 from #importeConcep0428 
--where tipo_mov not in (''24'',''25'') and categoria not like ''%AB001%''
--and id_emp in (select id_emp from empleados where id_cia = 1)

if(@tPlaza = ''Inc'')
begin
-- declare @año varchar(4) = ''2014''
set @año = cast(cast(@año as int) +1 as varchar)
-- select @año
end

--58

select b.num, b.rfc, b.plaza, b.horas, b.categoria, b.desde, b.hasta, b.funcion, b.id_puesto, b.id_cm, b.id_npago, b.id_zona, b.modelo, b.tipo_mov, b.id_emp, b.id_plaza, 
b.desde_, b.hasta_, b.qnas, sum(valor) pesos into #importesporplazaSindicato_1
from #ne_ConceptosCosteoTotales b
inner join TTabulador_SE_Cat_Puesto t on t.id_Tabulador_SE_Cat_Puesto = b.id_puesto
where b.id_concepto in (1300,1557,1297, 1701,1702,1703,1705,1706,1707,1704) 
and b.tipo_mov not in (''24'',''25'') and b.categoria not like ''%AB001%'' and b.modelo in ( 2 , 3 , 5 , 6 , 9 ) and t.categoria not like ''%CF%''
group by b.num, b.rfc, b.plaza, b.horas, b.categoria, b.desde, b.hasta, b.funcion, b.id_puesto, b.id_cm, b.id_npago, b.id_zona, b.modelo, b.tipo_mov, b.id_emp, b.id_plaza, 
b.desde_, b.hasta_, b.qnas

insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza, 
desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza, 
desde_, hasta_, qnas, 2324 id_concepto,''58'' resultado,round(pesos * 0.01,2) Valor,2 
from #importesporplazaSindicato_1 
where tipo_mov not in (''24'',''25'') and categoria not like ''%AB001%'' and modelo in ( 2 , 3 , 5 , 6 , 9 ) 

select b.num, b.rfc, b.plaza, b.horas, b.categoria, b.desde, b.hasta, b.funcion, b.id_puesto, b.id_cm, b.id_npago, b.id_zona, b.modelo, b.tipo_mov, b.id_emp, b.id_plaza, 
b.desde_, b.hasta_, b.qnas, sum(valor) pesos into #importesporplazaSindicato_2
from #ne_ConceptosCosteoTotales b
inner join TTabulador_SE_Cat_Puesto t on t.id_Tabulador_SE_Cat_Puesto = b.id_puesto
where b.id_concepto in (1300,1318,1319,1320,1321,1322,1354,1557,1297,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,
263,264,265,266,267,268,269,270,271,272,273,274,275,200,201,202,203,204,230,205,206,207,208,209,231,210,211,212,213,214,232,215,216,217,218,219,233,220,221,222,
223,224,234,225,226,227,228,229,235, 1701,1702,1703,1705,1706,1707,1704) 
and b.tipo_mov not in (''24'',''25'') and b.categoria not like ''%AB001%'' and b.modelo in ( 1 , 4) and t.categoria not like ''%CF%''
group by b.num, b.rfc, b.plaza, b.horas, b.categoria, b.desde, b.hasta, b.funcion, b.id_puesto, b.id_cm, b.id_npago, b.id_zona, b.modelo, b.tipo_mov, b.id_emp, b.id_plaza, 
b.desde_, b.hasta_, b.qnas


insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza, 
desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza, 
desde_, hasta_, qnas, 2324 id_concepto,''58'' resultado,round(pesos * 0.01,2) Valor,2 
from #importesporplazaSindicato_2 
where tipo_mov not in (''24'',''25'') and categoria not like ''%AB001%'' and modelo in ( 1 , 4) 

select b.num, b.rfc, b.plaza, b.horas, b.categoria, b.desde, b.hasta, b.funcion, b.id_puesto, b.id_cm, b.id_npago, b.id_zona, b.modelo, b.tipo_mov, b.id_emp, b.id_plaza, 
b.desde_, b.hasta_, b.qnas, sum(valor) pesos   into #importesporplazaSindicato_3
from #ne_ConceptosCosteoTotales b
inner join TTabulador_SE_Cat_Puesto t on t.id_Tabulador_SE_Cat_Puesto = b.id_puesto
where b.id_concepto in (1510) 
and b.tipo_mov not in (''24'',''25'') and b.categoria not like ''%AB001%'' and b.modelo in ( 7) and t.categoria not like ''%CF%''
group by b.num, b.rfc, b.plaza, b.horas, b.categoria, b.desde, b.hasta, b.funcion, b.id_puesto, b.id_cm, b.id_npago, b.id_zona, b.modelo, b.tipo_mov, b.id_emp, b.id_plaza, 
b.desde_, b.hasta_, b.qnas

insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza, 
desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza, 
desde_, hasta_, qnas, 2419 id_concepto,''52'' resultado,round(pesos * 0.01,2) Valor,2 
from #importesporplazaSindicato_3
where tipo_mov not in (''24'',''25'') and categoria not like ''%AB001%'' and modelo in ( 7) 



select a.*, case when c.clave = 5 then ''93'' else ''58'' end sindicato,case when c.clave = 5 then 2327 else 2324 end id_concepto
into #sindicatoBasica
from HSeccion_Sindical a inner join (
select id_emp, max(fecha) fecha from HSeccion_Sindical where fecha <= getdate() group by id_emp
) b on a.id_emp = b.id_emp and b.fecha = a.fecha
inner join tseccion__sindical c on a.id_rel = c.id_seccion__sindical
where a.id_emp in (select id_emp from empleados where id_cia = 2)

update a set a.resultado = c.sindicato, a.id_concepto = c.id_concepto
from #ne_ConceptosCosteoTotales a
inner join C_costeoMindDatos b on a.num=b.num
inner join #sindicatoBasica c on c.id_emp = b.id_emp
where a.id_concepto = 2324

select a.*, case when c.clave = 5 then ''93'' else ''52'' end sindicato,case when c.clave = 5 then 2328 else 2419 end id_concepto
into #sindicatoUPN
from HSeccion_Sindical a inner join (
select id_emp, max(fecha) fecha from HSeccion_Sindical where fecha <= getdate() group by id_emp
) b on a.id_emp = b.id_emp and b.fecha = a.fecha
inner join tseccion__sindical c on a.id_rel = c.id_seccion__sindical
where a.id_emp in (select id_emp from empleados where id_cia = 1)

 update a set a.resultado = c.sindicato, a.id_concepto = c.id_concepto
from #ne_ConceptosCosteoTotales a
inner join C_costeoMindDatos b on a.num=b.num
inner join #sindicatoBasica c on c.id_emp = b.id_emp
where a.id_concepto = 2419


-----

declare @query nvarchar(max) = ''''
if(@tPlaza = ''AD'')
begin

set @query = ''insert into '' + @TablaConceptos + '' (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza, desde_, hasta_, qnas, 
id_concepto, resultado, Valor,tipo,anio)
select c.num, c.rfc, c.plaza, c.horas, c.categoria, c.desde, c.hasta, c.funcion, c.id_puesto, c.id_cm, c.id_npago, c.id_zona, c.modelo, c.tipo_mov, c.id_emp, c.id_plaza, c.desde_, c.hasta_, a.qnas, 
a.id_concepto, a.resultado, a.Valor,a.tipo,  ''+ @año + ''   
from #ne_ConceptosCosteoTotales a
inner join #tablasustituta b on a.num = b.[row]
inner join #tablasustituta_a s on s.rfc = b.rfc and b.plaza = s.plaza
inner join #TablaAñoOriginal c on c.num = s.num ''
exec sp_executesql @query

end
else
begin
set @query = ''insert into '' + @TablaConceptos + '' (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza, desde_, hasta_, qnas, 
id_concepto, resultado, Valor,tipo,anio)
select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza, desde_, hasta_, qnas, 
id_concepto, resultado, Valor,tipo, '' + @año + '' 
 from #ne_ConceptosCosteoTotales''
exec sp_executesql @query
end

end
-------

-- si es regularizado no lleva las percepciones 
if(@tPlaza = ''Reg'')
begin
update #tablaAño set aguinaldo = 0, prima = 0, dm = 0, bo = 0, di = 0, c88 = 0, cn = 0
end


-- totales
if(@tPlaza = ''AD'')
begin
if (@año = ''2012'')
begin
update a set a.s2012 = a.s2012+b.sueldo, a.ag2012 = a.ag2012+b.aguinaldo, a.pv2012 = a.pv2012+b.prima, a.dm2012 = a.dm2012+b.dm, a.ap2012 = a.ap2012+b.ap, a.bo2012 = a.bo2012+b.bo, a.di2012 = a.di2012+b.di, a.c882012 = a.c882012+b.c88
from C_costeoMindDatos a
inner join (
select c.num, c.rfc, c.plaza, c.horas, c.categoria, c.desde, c.hasta, c.funcion, c.id_puesto, c.id_cm, c.id_npago, c.id_zona, c.modelo, c.tipo_mov, 
c.id_emp, c.id_plaza, c.desde_, c.hasta_, sum(a.sueldo) sueldo, sum(a.aguinaldo) aguinaldo, sum(a.prima) prima, sum(a.DM) dm, sum(a.Cn) cn, sum(a.ap) ap, sum(a.bo) bo, sum(a.di) di, sum(a.c88) c88
from #tablaAño a
inner join #tablasustituta b on a.num = b.[row]
inner join #tablasustituta_a s on s.rfc = b.rfc and b.plaza = s.plaza
inner join #TablaAñoOriginal c on c.num = s.num
group by c.num, c.rfc, c.plaza, c.horas, c.categoria, c.desde, c.hasta, c.funcion, c.id_puesto, c.id_cm, c.id_npago, c.id_zona, c.modelo, c.tipo_mov, c.id_emp, c.id_plaza, c.desde_, c.hasta_
) b on a.num = b.num
--where b.qnas > 0
end

if (@año = ''2013'')
begin
update a set a.s2013 = a.s2013+b.sueldo, a.ag2013 = a.ag2013+b.aguinaldo, a.pv2013 = a.pv2013+b.prima, a.dm2013 = a.dm2013+b.dm, a.ap2013 = a.ap2013+b.ap, a.bo2013 = a.bo2013+b.bo, a.di2013 = a.di2013+b.di, a.c882013 = a.c882013+b.c88
from C_costeoMindDatos a
inner join (
select c.num, c.rfc, c.plaza, c.horas, c.categoria, c.desde, c.hasta, c.funcion, c.id_puesto, c.id_cm, c.id_npago, c.id_zona, c.modelo, c.tipo_mov, 
c.id_emp, c.id_plaza, c.desde_, c.hasta_, sum(a.sueldo) sueldo, sum(a.aguinaldo) aguinaldo, sum(a.prima) prima, sum(a.DM) dm, sum(a.Cn) cn, sum(a.ap) ap, sum(a.bo) bo, sum(a.di) di, sum(a.c88) c88
from #tablaAño a
inner join #tablasustituta b on a.num = b.[row]
inner join #tablasustituta_a s on s.rfc = b.rfc and b.plaza = s.plaza
inner join #TablaAñoOriginal c on c.num = s.num
group by c.num, c.rfc, c.plaza, c.horas, c.categoria, c.desde, c.hasta, c.funcion, c.id_puesto, c.id_cm, c.id_npago, c.id_zona, c.modelo, c.tipo_mov, c.id_emp, c.id_plaza, c.desde_, c.hasta_
) b on a.num = b.num
--where b.qnas > 0
end

if (@año = ''2014'')
begin
update a set a.s2014 = a.s2014+b.sueldo, a.ag2014 = a.ag2014+b.aguinaldo, a.pv2014 = a.pv2014+b.prima, a.dm2014 = a.dm2014+b.dm, a.ap2014 = a.ap2014+b.ap, a.bo2014 = a.bo2014+b.bo, a.di2014 = a.di2014+b.di, a.c882014 = a.c882014+b.c88
from C_costeoMindDatos a
inner join (
select c.num, c.rfc, c.plaza, c.horas, c.categoria, c.desde, c.hasta, c.funcion, c.id_puesto, c.id_cm, c.id_npago, c.id_zona, c.modelo, c.tipo_mov, 
c.id_emp, c.id_plaza, c.desde_, c.hasta_, sum(a.sueldo) sueldo, sum(a.aguinaldo) aguinaldo, sum(a.prima) prima, sum(a.DM) dm, sum(a.Cn) cn, sum(a.ap) ap, sum(a.bo) bo, sum(a.di) di, sum(a.c88) c88
from #tablaAño a
inner join #tablasustituta b on a.num = b.[row]
inner join #tablasustituta_a s on s.rfc = b.rfc and b.plaza = s.plaza
inner join #TablaAñoOriginal c on c.num = s.num
group by c.num, c.rfc, c.plaza, c.horas, c.categoria, c.desde, c.hasta, c.funcion, c.id_puesto, c.id_cm, c.id_npago, c.id_zona, c.modelo, c.tipo_mov, c.id_emp, c.id_plaza, c.desde_, c.hasta_
) b on a.num = b.num
--where b.qnas > 0
end

if (@año = ''2015'')
begin
update a set a.s2015 = a.s2015+b.sueldo, a.ag2015 = a.ag2015+b.aguinaldo, a.pv2015 = a.pv2015+b.prima, a.dm2015 = a.dm2015+b.dm, a.ap2015 = a.ap2015+b.ap, a.cn2015 = a.cn2015+b.cn, a.bo2015 = a.bo2015+b.bo, a.di2015 = a.di2015+b.di, a.c882015 = a.c882015+b.c88
from C_costeoMindDatos a
inner join (
select c.num, c.rfc, c.plaza, c.horas, c.categoria, c.desde, c.hasta, c.funcion, c.id_puesto, c.id_cm, c.id_npago, c.id_zona, c.modelo, c.tipo_mov, 
c.id_emp, c.id_plaza, c.desde_, c.hasta_, sum(a.sueldo) sueldo, sum(a.aguinaldo) aguinaldo, sum(a.prima) prima, sum(a.DM) dm, sum(a.Cn) cn, sum(a.ap) ap, sum(a.bo) bo, sum(a.di) di, sum(a.c88) c88
from #tablaAño a
inner join #tablasustituta b on a.num = b.[row]
inner join #tablasustituta_a s on s.rfc = b.rfc and b.plaza = s.plaza
inner join #TablaAñoOriginal c on c.num = s.num
group by c.num, c.rfc, c.plaza, c.horas, c.categoria, c.desde, c.hasta, c.funcion, c.id_puesto, c.id_cm, c.id_npago, c.id_zona, c.modelo, c.tipo_mov, c.id_emp, c.id_plaza, c.desde_, c.hasta_
) b on a.num = b.num
--where b.qnas > 0
end

if (@año = ''2016'')
begin
update a set a.s2016 = a.s2016+b.sueldo, a.ag2016 = a.ag2016+b.aguinaldo, a.pv2016 = a.pv2016+b.prima, a.dm2016 = a.dm2016+b.dm, a.ap2016 = a.ap2016+b.ap, a.cn2016 = a.cn2016+b.cn, a.bo2016 = a.bo2016+b.bo, a.di2016 = a.di2016+b.di, a.c882016 = a.c882016+b.c88
from C_costeoMindDatos a
inner join (
select c.num, c.rfc, c.plaza, c.horas, c.categoria, c.desde, c.hasta, c.funcion, c.id_puesto, c.id_cm, c.id_npago, c.id_zona, c.modelo, c.tipo_mov, 
c.id_emp, c.id_plaza, c.desde_, c.hasta_, sum(a.sueldo) sueldo, sum(a.aguinaldo) aguinaldo, sum(a.prima) prima, sum(a.DM) dm, sum(a.Cn) cn, sum(a.ap) ap, sum(a.bo) bo, sum(a.di) di, sum(a.c88) c88
from #tablaAño a
inner join #tablasustituta b on a.num = b.[row]
inner join #tablasustituta_a s on s.rfc = b.rfc and b.plaza = s.plaza
inner join #TablaAñoOriginal c on c.num = s.num
group by c.num, c.rfc, c.plaza, c.horas, c.categoria, c.desde, c.hasta, c.funcion, c.id_puesto, c.id_cm, c.id_npago, c.id_zona, c.modelo, c.tipo_mov, c.id_emp, c.id_plaza, c.desde_, c.hasta_
) b on a.num = b.num
--where b.qnas > 0
end

if (@año = ''2017'')
begin
update a set a.s2017 = a.s2017+b.sueldo, a.ag2017 = a.ag2017+b.aguinaldo, a.pv2017 = a.pv2017+b.prima, a.dm2017 = a.dm2017+b.dm, a.ap2017 = a.ap2017+b.ap, a.cn2017 = a.cn2017+b.cn, a.bo2017 = a.bo2017+b.bo, a.di2017 = a.di2017+b.di, a.c882017 = a.c882017+b.c88
from C_costeoMindDatos a
inner join (
select c.num, c.rfc, c.plaza, c.horas, c.categoria, c.desde, c.hasta, c.funcion, c.id_puesto, c.id_cm, c.id_npago, c.id_zona, c.modelo, c.tipo_mov, 
c.id_emp, c.id_plaza, c.desde_, c.hasta_, sum(a.sueldo) sueldo, sum(a.aguinaldo) aguinaldo, sum(a.prima) prima, sum(a.DM) dm, sum(a.Cn) cn, sum(a.ap) ap, sum(a.bo) bo, sum(a.di) di, sum(a.c88) c88
from #tablaAño a
inner join #tablasustituta b on a.num = b.[row]
inner join #tablasustituta_a s on s.rfc = b.rfc and b.plaza = s.plaza
inner join #TablaAñoOriginal c on c.num = s.num
group by c.num, c.rfc, c.plaza, c.horas, c.categoria, c.desde, c.hasta, c.funcion, c.id_puesto, c.id_cm, c.id_npago, c.id_zona, c.modelo, c.tipo_mov, c.id_emp, c.id_plaza, c.desde_, c.hasta_
) b on a.num = b.num
--where b.qnas > 0
end

if (@año = ''2018'')
begin
update a set a.s2018 = a.s2018+b.sueldo, a.ag2018 = a.ag2018+b.aguinaldo, a.pv2018 = a.pv2018+b.prima, a.dm2018 = a.dm2018+b.dm, a.ap2018 = a.ap2018+b.ap, a.cn2018 = a.cn2018+b.cn, a.bo2018 = a.bo2018+b.bo, a.di2018 = a.di2018+b.di, a.c882018 = a.c882018+b.c88
from C_costeoMindDatos a
inner join (
select c.num, c.rfc, c.plaza, c.horas, c.categoria, c.desde, c.hasta, c.funcion, c.id_puesto, c.id_cm, c.id_npago, c.id_zona, c.modelo, c.tipo_mov, 
c.id_emp, c.id_plaza, c.desde_, c.hasta_, sum(a.sueldo) sueldo, sum(a.aguinaldo) aguinaldo, sum(a.prima) prima, sum(a.DM) dm, sum(a.Cn) cn, sum(a.ap) ap, sum(a.bo) bo, sum(a.di) di, sum(a.c88) c88
from #tablaAño a
inner join #tablasustituta b on a.num = b.[row]
inner join #tablasustituta_a s on s.rfc = b.rfc and b.plaza = s.plaza
inner join #TablaAñoOriginal c on c.num = s.num
group by c.num, c.rfc, c.plaza, c.horas, c.categoria, c.desde, c.hasta, c.funcion, c.id_puesto, c.id_cm, c.id_npago, c.id_zona, c.modelo, c.tipo_mov, c.id_emp, c.id_plaza, c.desde_, c.hasta_
) b on a.num = b.num
--where b.qnas > 0
end

if (@año = ''2019'')
begin
update a set a.s2019 = a.s2019+b.sueldo, a.ag2019 = a.ag2019+b.aguinaldo, a.pv2019 = a.pv2019+b.prima, a.dm2019 = a.dm2019+b.dm, a.ap2019 = a.ap2019+b.ap, a.cn2019 = a.cn2019+b.cn, a.bo2019 = a.bo2019+b.bo, a.di2019 = a.di2019+b.di, a.c882019 = a.c882019+b.c88
from C_costeoMindDatos a
inner join (
select c.num, c.rfc, c.plaza, c.horas, c.categoria, c.desde, c.hasta, c.funcion, c.id_puesto, c.id_cm, c.id_npago, c.id_zona, c.modelo, c.tipo_mov, 
c.id_emp, c.id_plaza, c.desde_, c.hasta_, sum(a.sueldo) sueldo, sum(a.aguinaldo) aguinaldo, sum(a.prima) prima, sum(a.DM) dm, sum(a.Cn) cn, sum(a.ap) ap, sum(a.bo) bo, sum(a.di) di, sum(a.c88) c88
from #tablaAño a
inner join #tablasustituta b on a.num = b.[row]
inner join #tablasustituta_a s on s.rfc = b.rfc and b.plaza = s.plaza
inner join #TablaAñoOriginal c on c.num = s.num
group by c.num, c.rfc, c.plaza, c.horas, c.categoria, c.desde, c.hasta, c.funcion, c.id_puesto, c.id_cm, c.id_npago, c.id_zona, c.modelo, c.tipo_mov, c.id_emp, c.id_plaza, c.desde_, c.hasta_
) b on a.num = b.num
--where b.qnas > 0
end

if (@año = ''2020'')
begin
update a set a.s2020 = a.s2020+b.sueldo, a.ag2020 = a.ag2020+b.aguinaldo, a.pv2020 = a.pv2020+b.prima, a.dm2020 = a.dm2020+b.dm, a.ap2020 = a.ap2020+b.ap, a.cn2020 = a.cn2020+b.cn, a.bo2020 = a.bo2020+b.bo, a.di2020 = a.di2020+b.di, a.c882020 = a.c882020+b.c88
from C_costeoMindDatos a
inner join (
select c.num, c.rfc, c.plaza, c.horas, c.categoria, c.desde, c.hasta, c.funcion, c.id_puesto, c.id_cm, c.id_npago, c.id_zona, c.modelo, c.tipo_mov, 
c.id_emp, c.id_plaza, c.desde_, c.hasta_, sum(a.sueldo) sueldo, sum(a.aguinaldo) aguinaldo, sum(a.prima) prima, sum(a.DM) dm, sum(a.Cn) cn, sum(a.ap) ap, sum(a.bo) bo, sum(a.di) di, sum(a.c88) c88
from #tablaAño a
inner join #tablasustituta b on a.num = b.[row]
inner join #tablasustituta_a s on s.rfc = b.rfc and b.plaza = s.plaza
inner join #TablaAñoOriginal c on c.num = s.num
group by c.num, c.rfc, c.plaza, c.horas, c.categoria, c.desde, c.hasta, c.funcion, c.id_puesto, c.id_cm, c.id_npago, c.id_zona, c.modelo, c.tipo_mov, c.id_emp, c.id_plaza, c.desde_, c.hasta_
) b on a.num = b.num
--where b.qnas > 0
end

end
else
begin

if (@año = ''2012'')
begin
update a set a.s2012 = a.s2012+b.sueldo, a.ag2012 = a.ag2012+b.aguinaldo, a.pv2012 = a.pv2012+b.prima, a.dm2012 = a.dm2012+b.dm, a.ap2012 = a.ap2012+b.ap, a.bo2012 = a.bo2012+b.bo, a.di2012 = a.di2012+b.di, a.c882012 = a.c882012+b.c88
from C_costeoMindDatos a
inner join #tablaAño b on a.num = b.num
where b.qnas > 0
end

if (@año = ''2013'')
begin
update a set a.s2013 = a.s2013+b.sueldo, a.ag2013 = a.ag2013+b.aguinaldo, a.pv2013 = a.pv2013+b.prima, a.dm2013 = a.dm2013+b.dm, a.ap2013 = a.ap2013+b.ap, a.bo2013 = a.bo2013+b.bo, a.di2013 = a.di2013+b.di, a.c882013 = a.c882013+b.c88
from C_costeoMindDatos a
inner join #tablaAño b on a.num = b.num
where b.qnas > 0
end

if (@año = ''2014'')
begin
update a set a.s2014 = a.s2014+b.sueldo, a.ag2014 = a.ag2014+b.aguinaldo, a.pv2014 = a.pv2014+b.prima, a.dm2014 = a.dm2014+b.dm, a.ap2014 = a.ap2014+b.ap, a.bo2014 = a.bo2014+b.bo, a.di2014 = a.di2014+b.di, a.c882014 = a.c882014+b.c88
from C_costeoMindDatos a
inner join #tablaAño b on a.num = b.num
where b.qnas > 0
end

if (@año = ''2015'')
begin
update a set a.s2015 = a.s2015+b.sueldo, a.ag2015 = a.ag2015+b.aguinaldo, a.pv2015 = a.pv2015+b.prima, a.dm2015 = a.dm2015+b.dm, a.ap2015 = a.ap2015+b.ap, a.cn2015 = a.cn2015+b.cn, a.bo2015 = a.bo2015+b.bo, a.di2015 = a.di2015+b.di, a.c882015 = a.c882015+b.c88
from C_costeoMindDatos a
inner join #tablaAño b on a.num = b.num
where b.qnas > 0
end

if (@año = ''2016'')
begin
update a set a.s2016 = a.s2016+b.sueldo, a.ag2016 = a.ag2016+b.aguinaldo, a.pv2016 = a.pv2016+b.prima, a.dm2016 = a.dm2016+b.dm, a.ap2016 = a.ap2016+b.ap, a.cn2016 = a.cn2016+b.cn, a.bo2016 = a.bo2016+b.bo, a.di2016 = a.di2016+b.di, a.c882016 = a.c882016+b.c88
from C_costeoMindDatos a
inner join #tablaAño b on a.num = b.num
where b.qnas > 0
end

if (@año = ''2017'')
begin
update a set a.s2017 = a.s2017+b.sueldo, a.ag2017 = a.ag2017+b.aguinaldo, a.pv2017 = a.pv2017+b.prima, a.dm2017 = a.dm2017+b.dm, a.ap2017 = a.ap2017+b.ap, a.cn2017 = a.cn2017+b.cn, a.bo2017 = a.bo2017+b.bo, a.di2017 = a.di2017+b.di, a.c882017 = a.c882017+b.c88
from C_costeoMindDatos a
inner join #tablaAño b on a.num = b.num
where b.qnas > 0
end

if (@año = ''2018'')
begin
update a set a.s2018 = a.s2018+b.sueldo, a.ag2018 = a.ag2018+b.aguinaldo, a.pv2018 = a.pv2018+b.prima, a.dm2018 = a.dm2018+b.dm, a.ap2018 = a.ap2018+b.ap, a.cn2018 = a.cn2018+b.cn, a.bo2018 = a.bo2018+b.bo, a.di2018 = a.di2018+b.di, a.c882018 = a.c882018+b.c88
from C_costeoMindDatos a
inner join #tablaAño b on a.num = b.num
where b.qnas > 0
end

if (@año = ''2019'')
begin
update a set a.s2019 = a.s2019+b.sueldo, a.ag2019 = a.ag2019+b.aguinaldo, a.pv2019 = a.pv2019+b.prima, a.dm2019 = a.dm2019+b.dm, a.ap2019 = a.ap2019+b.ap, a.cn2019 = a.cn2019+b.cn, a.bo2019 = a.bo2019+b.bo, a.di2019 = a.di2019+b.di, a.c882019 = a.c882019+b.c88
from C_costeoMindDatos a
inner join #tablaAño b on a.num = b.num
where b.qnas > 0
end

if (@año = ''2020'')
begin
update a set a.s2020 = a.s2020+b.sueldo, a.ag2020 = a.ag2020+b.aguinaldo, a.pv2020 = a.pv2020+b.prima, a.dm2020 = a.dm2020+b.dm, a.ap2020 = a.ap2020+b.ap, a.cn2020 = a.cn2020+b.cn, a.bo2020 = a.bo2020+b.bo, a.di2020 = a.di2020+b.di, a.c882020 = a.c882020+b.c88
from C_costeoMindDatos a
inner join #tablaAño b on a.num = b.num
where b.qnas > 0
end


end
select ''Completo''



end

END'
GO

GO
PRINT N'Creating [dbo].[D1F2QU1NH1S]'
GO
IF OBJECT_ID(N'[dbo].[D1F2QU1NH1S]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[D1F2QU1NH1S]
@qnaini varchar(6), @qnafin varchar(6), @nom varchar(3), @idperini int, @idperfin int, @idcia int
WITH EXEC AS CALLER
AS
set @idcia = case 
                when @nom = ''BAS'' then 2
                when @nom = ''UPN'' then 1
              end
set @idperini = (select id_periodo from CalenNomina where Año = cast(SUBSTRING(@qnaini, 1, 4) as int) and Numero = cast(SUBSTRING(@qnaini, 5, 2) as int) and Parcial = 0 and Id_cia = @idcia)
set @idperfin = (select id_periodo from CalenNomina where Año = cast(SUBSTRING(@qnafin, 1, 4) as int) and Numero = cast(SUBSTRING(@qnafin, 5, 2) as int) and Parcial = 0 and Id_cia = @idcia)

if exists (select 1 from histpagos where id_periodo = @idperfin)
  begin
    if exists (select 1 from histpagos where id_periodo = @idperini)
      begin
        select isnull(qnaini.id_concepto, qnafin.id_concepto) as id_concepto, c.resultado as Concepto, c.descripcion as Descripcion, isnull(round(qnaini.Total, 2), 0) as qna_inicio, isnull(round(qnafin.Total, 2), 0) as qna_fin,
        round(isnull(qnafin.Total, 0) - isnull(qnaini.Total, 0), 2) as Diferencia, round(isnull(qnafin.Total, 0) + isnull(qnaini.Total, 0), 2) as Total
        from (
          select h.id_concepto, round(sum(pesos),2) as Total 
          from histpagos h 
          where h.id_periodo = @idperini
          group by h.id_concepto
        ) qnaini
        full join (
          select h.id_concepto, round(sum(pesos),2) as Total 
          from histpagos h
          where h.id_periodo = @idperfin 
          group by h.id_concepto
        ) qnafin on qnaini.id_concepto = qnafin.id_concepto
        inner join Conceptos c on c.id_concepto = isnull(qnaini.id_concepto, qnafin.id_concepto)
        where c.tipo in (1,2)
        order by c.Tipo, c.resultado
      end
    else
      begin
        ;with histpagoss as (
          select id_emp, id_periodo, id_concepto, pesos, id_plaza from nom_histpagos where Id_Periodo = @idperini
        )
        select isnull(qnaini.id_concepto, qnafin.id_concepto) as id_concepto, c.resultado as Concepto, c.descripcion as Descripcion, isnull(round(qnaini.Total, 2), 0) as qna_inicio, isnull(round(qnafin.Total, 2), 0) as qna_fin,
        round(isnull(qnafin.Total, 0) - isnull(qnaini.Total, 0), 2) as Diferencia, round(isnull(qnafin.Total, 0) + isnull(qnaini.Total, 0), 2) as Total
        from (
          select h.id_concepto, round(sum(pesos),2) as Total 
          from histpagoss h 
          where h.id_periodo = @idperini
          group by h.id_concepto
        ) qnaini
        full join (
          select h.id_concepto, round(sum(pesos),2) as Total 
          from histpagos h 
          where h.id_periodo = @idperfin
          group by h.id_concepto
        ) qnafin on qnaini.id_concepto = qnafin.id_concepto
        inner join Conceptos c on c.id_concepto = isnull(qnaini.id_concepto, qnafin.id_concepto)
        where c.tipo in (1,2)
        order by c.Tipo, c.resultado
      
      end
  end
else
  begin
    ;with histpagosINI as (
      select id_emp, id_periodo, id_concepto, pesos, id_plaza from nom_histpagos where Id_Periodo = @idperini
    )
    select isnull(qnaini.id_concepto, qnafin.id_concepto) as id_concepto, c.resultado as Concepto, c.descripcion as Descripcion, isnull(round(qnaini.Total, 2), 0) as qna_inicio, isnull(round(qnafin.Total, 2), 0) as qna_fin,
    round(isnull(qnafin.Total, 0) - isnull(qnaini.Total, 0), 2) as Diferencia, round(isnull(qnafin.Total, 0) + isnull(qnaini.Total, 0), 2) as Total
    from (
      select h.id_concepto, round(sum(pesos),2) as Total 
      from histpagosINI h 
      where h.id_periodo = @idperini
      group by h.id_concepto
    ) qnaini
    full join (
      select h.id_concepto, round(sum(pesos),2) as Total 
      from nom_histpagos h 
      where h.id_periodo = @idperfin
      group by h.id_concepto
    ) qnafin on qnaini.id_concepto = qnafin.id_concepto
    inner join Conceptos c on c.id_concepto = isnull(qnaini.id_concepto, qnafin.id_concepto)
    where c.tipo in (1,2)
    order by c.Tipo, c.resultado
  end'
GO

GO
PRINT N'Creating [dbo].[PL4VENXQU1NB4S]'
GO
IF OBJECT_ID(N'[dbo].[PL4VENXQU1NB4S]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[PL4VENXQU1NB4S]
@qna varchar(6)
WITH EXEC AS CALLER
AS
select p.id_plaza, pla.plazaieepo, dbo.fechaToAnioQuincena( p.fechacreacion) as Desde, dbo.fechaToAnioQuincena( p.fechavencimiento) as Hasta, CONVERT(VARCHAR(10),p.fechacreacion,111) as fechacreacion, CONVERT(VARCHAR(10),p.fechavencimiento,111) as fechavencimiento  
from plazas p 
inner join plazaieepo pla on pla.id_plaza = p.id_plaza
inner join (
	select h.id_plaza,h.id_rel from 
	HTabulador_SE_Cat_Puesto h
	inner join
	(
		select id_plaza,Max(Fecha) as FechaMax 
		from 
		HTabulador_SE_Cat_Puesto
		where fecha <= dbo.anioQuincenaToFecha(@qna, 0)
		group by id_plaza
	) htc
	on htc.id_plaza = h.id_plaza and htc.FechaMax = h.fecha
) hc on hc.id_plaza = pla.id_plaza
inner join TTabulador_SE_Cat_Puesto tt on tt.id_tabulador_se_cat_puesto = hc.id_rel
where dbo.fechaToAnioQuincena(p.fechavencimiento) = @qna
and tt.TModelo_SE_id_Modelo_SE in (1,2,3,4,5,6,8,9)'
GO

GO
PRINT N'Creating [dbo].[P_obtenerReportePlazasX]'
GO
IF OBJECT_ID(N'[dbo].[P_obtenerReportePlazasX]', 'P') IS NULL
EXEC sp_executesql N'--=============================================
-- Author:  <Sistemas,Noemi>
-- Create date:<Create Date,21/09/2018 >
-- Description: <Description,obtener plazas del trabajador>
--=============================================

--select * from usuarios 
--select * from empleados where rfc like ''%LOHD580203%''
CREATE procedure [dbo].[P_obtenerReportePlazasX]
(  
 @idEmp int,
 @activas bit,
 @leyenda varchar(100),
 @idUsuario int,--
 @impresion bit,--
 @tipoImpresion varchar(20)--
)
AS
begin
declare @plazas varchar(max);
--exec [P_obtenerReportePlazasX] 71018,0,''Plazas_Empleado'',121,0,''''

Declare @sqlStatus varchar(300)=('',right(''''00''''+cast(Status as varchar),2)as status'');
--select @sqlStatus;
Declare @permisoSeccion Bit=(isnull((select 1 activo from ACCESOSMENUS where Id_Usuario=@idUsuario and ClaveMenu=''1500000228''),0));
--select @permisoSeccion;
Declare @permisoSeccion22 Bit=(isnull((select 1 activo from ACCESOSMENUS where Id_Usuario=@idUsuario and ClaveMenu=''1500000229''),0));
--select @permisoSeccion22;
Declare @permisoPlazasEnProceso Bit=(isnull((select 1 activoX from ACCESOSMENUS where Id_Usuario=@idUsuario and ClaveMenu=''1500000226''),0));
--select @permisoPlazasEnProceso;
Declare @permiso Bit=(isnull((select 1 activoX1 from ACCESOSMENUS where Id_Usuario=@idUsuario and ClaveMenu=''1500000272''),0));
--select @permiso
 If @permiso=1 begin    
  set @sqlStatus='',case when dbo.fechaToAnioQuincena(getdate())> hasta Or Status=2 then ''''03'''' else right(''''00''''+cast(Status as varchar),2)end as status ''
 End;

set @plazas=''  
select * ''+
''into #Hstatplaza ''+
''from(''+
''SELECT hsp.Id_plaza,hsp.id_rel,hsp.Fecha,hsp.Id_User,hsp.Movimiento ''+
''FROM Hstatusplaza hsp with(nolock)''+
''INNER JOIN PlazaEmpleados pe with(nolock)ON pe.id_plaza=hsp.id_plaza ''+
''WHERE pe.id_emp=''+cast(@idEmp as varchar(15))+
--'' UNION ALL ''+
--''SELECT hsp.Id_plaza,hsp.Id_TipoMovPlazas,hsp.Fecha,hsp.Id_User,hsp.Movimiento ''+
--''FROM Empalme_HPlazas hsp with(nolock)''+
--''INNER JOIN Empalme_PlazaEmpleados pe with(nolock)ON pe.id_plaza=hsp.id_plaza ''+
--''WHERE pe.id_emp=''+cast(@idEmp as varchar(15))+
--''AND hsp.Id_TipoMovPlazas=2''+
'')hp where id_rel !=2;''+
''select * ''+
''into #plazas_Emp ''+
''from(''+
''SELECT Id_Emp,Id_plaza,Fecha,Id_User,Movimiento,id_nodo,Documentos,Id,id_plazaanterior,esHistoria,desliguePlaza,tipoHistoria ''+
''FROM PlazaEmpleados with(nolock)''+
--''UNION ALL ''+
--''SELECT Id_Emp,Id_plaza,Fecha,Id_User,Movimiento,id_nodo,Documentos,Id,id_plazaanterior,esHistoria,desliguePlaza,tipoHistoria ''+
--''FROM Empalme_PlazaEmpleados with(nolock)''+
'')pe ''+
''where id_plaza in(select distinct id_plaza from #Hstatplaza);''+


''select DISTINCT tabla.id_emp,tabla.id_plaza,tabla.id_nodo,DESDE,HASTA,quincenaDesde,quincenaHasta ''+
''INTO #tabla ''+
''from(''+
''SELECT pe.id_emp AS id_emp,pe.id_plaza,pe.id_nodo,pe.fecha AS desde,case when hist.hasta is null then ''''9999-12-01 00:00:00.000'''' else hist.hasta end hasta,''+
''cast(year(pe.fecha)as varchar)+Right(''''00''''+Cast(case when(day(pe.fecha)>15)then month(pe.fecha)*2 else(month(pe.fecha)*2)-1 end as Varchar(2)),2)as quincenaDesde,''+
''case when hist.hasta IS NULL OR year(hist.hasta)=9999 THEN ''''999999'''' ELSE cast(year(hist.hasta-1) as varchar)+Right(''''00''''+Cast(case when(day(hist.hasta-1)>15)then month(hist.hasta-1)*2 else(month(hist.hasta-1)*2)-1 end as Varchar(2)),2)end as quincenaHasta ''+
''FROM #plazas_Emp pe with(nolock)''+
''Left Join(''+
''SELECT p.id_plaza,p.fecha,MIN(h.fecha)AS hasta ''+
''FROM #plazas_Emp p with(nolock)''+
''INNER JOIN #plazas_Emp h with(nolock)''+
''ON p.id_plaza=h.id_plaza ''+
''Where p.fecha< h.fecha ''+
''GROUP BY p.id_plaza,p.Fecha ''+
'')hist ON pe.id_plaza=hist.id_plaza AND pe.fecha=hist.fecha ''+
'')Tabla ''+
''join(''+
''SELECT p.Id_Emp,p.id_plaza,documentos ''+
''FROM(''+
''select Id_Emp,id_plaza,fecha,documentos ''+
''from PlazaEmpleados with(nolock)''+
'')p join(''+
''SELECT Id_Emp,id_plaza,max(Fecha)fecha ''+
''FROM PlazaEmpleados with(nolock)''+
''WHERE id_emp=''+cast(@idEmp as varchar(15))+
''group by Id_Emp,id_plaza ''+
'')pf on pf.fecha=p.fecha and p.id_plaza=pf.id_plaza and p.id_emp=pf.id_emp ''+
''WHERE p.id_emp=''+cast(@idEmp as varchar(15))+
''group by p.Id_Emp,p.id_plaza,Documentos ''+
'')tabla2 ''+
''on tabla2.Id_Emp=tabla.Id_Emp and tabla.Id_plaza=tabla2.Id_plaza ''+
''where tabla.id_emp=''+cast(@idEmp as varchar(15))+

''select ROW_NUMBER()OVER(ORDER BY ID_PLAZA desc)np,id_plaza ''+
''into #plazas ''+
''from(''+
''select distinct id_plaza from #tabla ''+
'')a;''+

''SELECT ROW_NUMBER()OVER(PARTITION BY id_plaza ORDER BY ID_PLAZA,QUINCENADESDE desc)AS n,*,0 cambio ''+
''into #dh ''+
''FROM #tabla;''+

''Declare @i int ''+
''set @i=1 ''+
''while @i<=(select max(np)from #plazas where np=@i)begin ''+
''Declare @ip int ''+
''set @ip=(select id_plaza from #plazas where np=@i);''+
''Declare @y int ''+
''set @y=2;''+
'' while(@y<=(select max(n)from #dh where id_plaza=@ip))begin ''+

''if(select quincenaDesde from #dh where id_plaza=@ip and @y-1=n)!=(select dbo.fechaToAnioQuincena(case when hasta=''''9999-12-31 23:59:00.000'''' then ''''1999-12-31 23:59:00.000'''' else hasta+1 end)from #dh where id_plaza=@ip and @y=n)''+
''begin ''+

''update #dh set cambio=(Select max(cambio)+1 from #dh)where n>=@y and id_plaza=@ip ''+
''End ''+
''set @y=@y+1 ''+
''End ''+
''set @i=@i+1 ''+
''End ''+

''select #dh.id_nodo,tabla.* ''+
''into #tabla3 ''+
''from(''+
''select id_emp,id_plaza,min(DESDE)DESDE,max(HASTA)HASTA,min(quincenaDesde)quincenaDesde,max(quincenaHasta)quincenaHasta ''+
''from #dh group by id_emp,id_plaza,Cambio ''+
'')tabla ''+
''join #dh on #dh.quincenaHasta=tabla.quincenaHasta and #dh.id_plaza=tabla.id_plaza;''+
   
''Select distinct tabla.id_Plaza,'''''''' as opciones,partida,right(''''00''''+cast(unidad as varchar),2)as unidad,right(''''00''''+cast(subunidad as varchar),2)as subunidad,categoria,horas,plaza as plaza,/*udp */''+
''Case When ''+
''(select distinct right(''''000''''+cast(t.UDP as varchar),3)from #plazas_Emp temp1 ''+
''inner join TablaLongitudProp_28 t with(nolock)on temp1.id_nodo=t.id_nodo ''+
''inner join plazaempleados temp2 with(nolock)on temp1.id_plaza=temp2.id_plaza ''+
''and temp1.fecha=temp2.fecha and temp1.id_emp=temp2.id_emp ''+
''and temp1.id_nodo=temp2.id_nodo where tabla.id_plaza=temp1.id_plaza ''+
''and temp1.fecha=(select max(fecha)from #plazas_Emp where id_plaza=tabla.id_plaza ''+
''and fecha<=getdate())and temp2.id_emp=''+cast(@idEmp as varchar(15))+'')is null then udp else ''+
''(select distinct right(''''000''''+cast(t.UDP as varchar),3)from #plazas_Emp temp1 ''+
''inner join TablaLongitudProp_28 t with(nolock)on temp1.id_nodo=t.id_nodo ''+
''inner join plazaempleados temp2 with(nolock)on temp1.id_plaza=temp2.id_plaza ''+
''and temp1.fecha=temp2.fecha and temp1.id_emp=temp2.id_emp ''+
''and temp1.id_nodo=temp2.id_nodo where tabla.id_plaza=temp1.id_plaza ''+
''and temp1.fecha=(select max(fecha)from #plazas_Emp where id_plaza=tabla.id_plaza ''+
''and fecha<=getdate())and temp2.id_emp=''+cast(@idEmp as varchar(15))+'')end as udp ''+
   @sqlStatus+
'',left(Motivo,2)motivo,substring(motivo,4,LEN(motivo))id_motivo,''+
''documento,desde,hasta,nivel,''+
''case when''+
''(select distinct v.centro_de_trabajo from #plazas_Emp temp1 with(nolock)inner join vistatablalongitud v with(nolock)on temp1.id_nodo=v.id_nodo ''+
''inner join plazaempleados temp2 with(nolock)on temp1.id_plaza=temp2.id_plaza and temp1.fecha=temp2.fecha ''+
'' and temp1.id_emp=temp2.id_emp and temp1.id_nodo=temp2.id_nodo ''+
'' where tabla.id_plaza=temp1.id_plaza and temp1.fecha=(select max(fecha)from #plazas_Emp with(nolock)where id_plaza=tabla.id_plaza and fecha<=getdate())and temp2.id_emp=''+cast(@idEmp as varchar(15))+'')is null then ct else ''+
''(select distinct v.centro_de_trabajo from #plazas_Emp temp1 with(nolock)inner join vistatablalongitud v with(nolock)on temp1.id_nodo=v.id_nodo ''+
''inner join plazaempleados temp2 with(nolock)on temp1.id_plaza=temp2.id_plaza and temp1.fecha=temp2.fecha ''+
''and temp1.id_emp=temp2.id_emp and temp1.id_nodo=temp2.id_nodo ''+
''where tabla.id_plaza=temp1.id_plaza and temp1.fecha=(select max(fecha)from #plazas_Emp where id_plaza=tabla.id_plaza and fecha<=getdate())and temp2.id_emp=''+cast(@idEmp as varchar(15))+'')end as ct,''+
''nivelCM,case when ss IS null then ''''22'''' when ss=3 then ''''59'''' end SS,desdePlazaEmpleado,tabla.id ,clave ''+
''into #informacionPlazas ''+
''from(''+
''Select HSS.id_rel ss,Documentos.clave,plazaieepo.id_Plaza,plazaieepo.partida,plazaieepo.unidad,plazaieepo.subunidad,plazaieepo.categoria,plazaieepo.horas,plazaieepo.Diagonal as plaza,''+
''right(''''000''''+cast(TablaLongitudProp_28.UDP as varchar),3)as UDP,''+
''right(''''00''''+cast((''+
''Select top 1 id_rel from(''+
''SELECT pe.id_plaza,pe.id_rel AS id_rel,pe.fecha,''+
''dbo.DateToQna(pe.fecha)as quincenaDesde ''+
''FROM #Hstatplaza pe with(nolock) ''+
''Where pe.id_plaza=PlazasEmp.id_plaza ''+
''and Fecha in(select max(fecha)f from #Hstatplaza Where id_plaza=pe.id_plaza and dbo.DateToQna(fecha)<=PlazasEmp.quincenaHasta)''+
'')Aux where Aux.quincenaDesde >=PlazasEmp.quincenaDesde and Aux.quincenaDesde<=PlazasEmp.quincenaHasta ''+
   
''order by quincenaDesde desc ''+
'')as varchar),2)as Status,''+

''(SELECT top 1 id_rel ''+
''FROM(''+
''SELECT pe.id_plaza,rtrim(ltrim(tp.CveTipoPlaza))+''''-''''+cast(pe.id_rel as varchar(3))as id_rel,pe.fecha,dbo.DateToQna(pe.fecha)as quincenaDesde ''+
''FROM htipoplaza pe with(nolock)join ttipoplaza tp with(nolock)on pe.id_rel=tp.Id_TipoPlaza ''+
''WHERE pe.id_plaza=PlazasEmp.id_plaza and Fecha in(select max(fecha)f ''+
''FROM htipoplaza ''+
''WHERE id_plaza=pe.id_plaza and dbo.DateToQna(fecha)<=PlazasEmp.quincenaHasta)''+
'')Aux ''+
   
''WHERE Aux.quincenaDesde >=PlazasEmp.quincenaDesde and Aux.quincenaDesde<=PlazasEmp.quincenaHasta ''+
''ORDER BY quincenaDesde DESC ''+
'')motivo,''+
''Documentos.folio as documento,'';

set @plazas=@plazas+
''Case when categoria like ''''%AB%'''' Then ''+
''(Select top 1 quincenaDesde from(''+
''SELECT pe.id_plaza,pe.id_rel AS id_rel,pe.fecha,''+
''dbo.DateToQna(pe.fecha)as quincenaDesde ''+
''FROM #Hstatplaza pe with(nolock) ''+
''Where pe.id_plaza=PlazasEmp.id_plaza ''+
'')Aux where fecha<=getDate()and Aux.quincenaDesde >=PlazasEmp.quincenaDesde and Aux.quincenaDesde<=PlazasEmp.quincenaHasta ''+
''order by quincenaDesde desc) ''+
''Else ''+
''dbo.DateToQna(PlazasEmp.desde) ''+
''End as Desde,''+
''case when PlazasEmp.hasta IS NULL OR year(PlazasEmp.hasta)=9999 THEN ''''999999'''' ELSE dbo.DateToQna(PlazasEmp.hasta)end as hasta,''+
''right(''''00''''+cast(Tabulador.nivel as varchar),2)as nivel,''+
''right(''''00''''+cast(TabuladorCM.nivel as varchar),2)as nivelCM,''+
''vistatablalongitud.Centro_de_Trabajo as CT,dbo.DateToQna(PlazasEmp.desde)as desdePlazaEmpleado,''+
''id=ROW_NUMBER()OVER(ORDER BY plazaieepo.id_Plaza) ''+
''from Empleados with(nolock)''+
''inner join(''+
'' select * from #tabla3 where id_emp=''+cast(@idEmp as varchar(15))+
'')PlazasEmp on Empleados.id_emp=PlazasEmp.id_emp ''+
''left join(''+
''Select tTabulador_SE_Nivel_Pago.*,HTabulador_SE_Nivel_Pago.id_plaza from HTabulador_SE_Nivel_Pago with(nolock)inner join(''+
''Select id_plaza,max(fecha)as fecha from HTabulador_SE_Nivel_Pago with(nolock)where fecha<=getDate()group by id_plaza ''+
'')HTabuladores on HTabulador_SE_Nivel_Pago.id_plaza=HTabuladores.id_plaza and HTabulador_SE_Nivel_Pago.fecha=HTabuladores.fecha ''+
''inner join tTabulador_SE_Nivel_Pago with(nolock)on HTabulador_SE_Nivel_Pago.id_rel=tTabulador_SE_Nivel_Pago.id_Tabulador_SE_Nivel_Pago ''+
'')Tabulador on Tabulador.id_plaza=PlazasEmp.id_plaza ''+

''left join(Select tTabulador_SE_CM.*,HTabulador_SE_CM.id_plaza ''+
''from HTabulador_SE_CM with(nolock)inner join(''+
''Select id_plaza,max(fecha)as fecha from HTabulador_SE_CM with(nolock)where fecha<=getDate() ''+
''group by id_plaza)HTabuladoresCM on HTabulador_SE_CM.id_plaza=HTabuladoresCM.id_plaza ''+
''and HTabulador_SE_CM.fecha=HTabuladoresCM.fecha ''+
''inner join tTabulador_SE_CM with(nolock)on HTabulador_SE_CM.id_rel=TTabulador_SE_CM.id_Tabulador_SE_CM''+
'')TabuladorCM on TabuladorCM.id_plaza=PlazasEmp.id_plaza ''+
''left join(''+

''Select MAX(right(''''00''''+ftm.clave,2))AS clave,fup_documento_detalle.id_plaza id_plazaPadre,fup_documentos.Fecha_Autorizacion,fup_documentos.folio,FUP_Documentos.Id_Documento,formula,valor id_plaza from fup_documentos with(nolock)inner join fup_documento_detalle with(nolock)on fup_documentos.id_documento=fup_documento_detalle.id_documento ''+
''inner join FUP_MotivoMovimiento fmm with(nolock)on fup_documento_detalle.id_motivomovimiento=fmm.id_motivomovimiento ''+
''inner join FUP_TipoMovimiento ftm with(nolock)on fmm.id_tipomovimiento=ftm.id_tipomovimiento ''+
''inner join(select id_emp,Id_Plaza,MAX(Fecha_Autorizacion)Fecha_Autorizacion from fup_documento_detalle dd with(nolock)join FUP_Documentos d with(nolock)on d.Id_Documento=dd.Id_Documento where id_emp=''+cast(@idEmp as varchar(15))+'' group by id_emp,Id_Plaza)fdm on fup_documentos.Fecha_Autorizacion=fdm.Fecha_Autorizacion and fup_documento_detalle.Id_Plaza=fdm.Id_Plaza ''+

''join FUP_DetalleCampos fdc with(nolock)on fup_documento_detalle.Id_MotivoMovimiento=fdc.Id_MotivoMovimiento join Tformulas tf with(nolock)on tf.idFormula=fdc.Id_Formula and tf.formula=''''id_plaza'''' join FUP_ValorInteger fvi with(nolock)on fvi.Id_Valor=fdc.Id_Valor and fvi.Id_Documento=fup_documento_detalle.Id_Detalle ''+

''where fup_documentos.id_emp=''+cast(@idEmp as varchar(15))+'' and fup_documentos.id_estatus=2 ''+

''group by fup_documento_detalle.id_plaza,fup_documentos.Fecha_Autorizacion,fup_documentos.folio,FUP_Documentos.Id_Documento,formula,valor''+
------
'')Documentos on Documentos.id_plaza=PlazasEmp.id_plaza ''+
--''and Documentos.fechaIni=PlazasEmp.desde''+
----
''Inner join plazaieepo with(nolock)on PlazasEmp.id_plaza=plazaieepo.id_plaza ''+
''left join vistatablalongitud with(nolock)on PlazasEmp.id_nodo=vistatablalongitud.id_nodo ''+
''left join TablaLongitudProp_28 with(nolock)on vistatablalongitud.id_nodo=TablaLongitudProp_28.id_nodo ''+
   --''Para el filtro de secciones sindicales
''LEFT JOIN(select * from hSeccion__Sindical with(nolock)where id_rel=3)HSS ON HSS.id_plaza=PlazasEmp.id_plaza ''+
   --''Permisos de Organigrama
''inner join(''+
''Select acceso.id_nodo from accesosorganigrama acceso with(nolock)inner join(''+
''select * from tablaconfigorgan with(nolock)where id_nodopadre in(''+
''select id_nodo from TablaConfigOrgan with(nolock)where id_nodopadre in(''+
''select id_nodo from TablaConfigOrgan with(nolock)where id_tablalongitud=26 ''+
'')''+
'')''+
'')organ on acceso.id_nodo=organ.id_nodo where acceso.id_usuario=''+cast(@idUsuario as varchar(15))+
'')PermisosOrganigrama on PermisosOrganigrama.id_nodo=vistatablalongitud.id_nodo ''+
   --''Permisos por nivel educativo   
''INNER JOIN(''+
''select DISTINCT rn.id_nodo from fup_relnivel_nodo rn with(nolock) ''+
''inner join FUP_RelUsuariosNivelAcademico f with(nolock)on rn.id_nivel_educativo=f.id_nivel ''+
''where f.id_usuario=''+cast(@idUsuario as varchar(15))+
'')nivel ON nivel.id_nodo=PermisosOrganigrama.id_nodo ''+
''where empleados.id_emp=''+cast(@idEmp as varchar(15))
   If(@permisoSeccion=1 And @permisoSeccion22=0)begin
  set @plazas=@plazas+'' AND HSS.id_plaza IS NOT NULL ''
   End 
   If(@permisoSeccion22=1 and @permisoSeccion=0)begin
  set @plazas=@plazas+'' AND HSS.id_plaza IS NULL ''
   End
   If @permisoSeccion=0 And @permisoSeccion22=0 begin
  set @plazas=@plazas+'' AND HSS.id_plaza=-1 ''
   End
set @plazas=@plazas+'')Tabla,#plazas_Emp peTemp;''

--Declare @sqlWhereActiva varchar(300);
--Declare @sqlWhereHistorico varchar(300);

--   If @permiso=1 begin    
--  set @sqlWhereActiva='' and hasta >=dbo.fechaToAnioQuincena(getdate())''
--    set @sqlWhereHistorico='' or(hasta< dbo.fechaToAnioQuincena(getdate())))''
--   End 

 --  If @activas=1 begin
  --set @plazas=@plazas+'' Tabla.Status in(select id_StatusPlaza from tstatusplaza with(nolock)where procesa=1)''+@sqlWhereActiva 
 --  end Else begin
  --set @plazas=@plazas+''((Tabla.Status in(select id_StatusPlaza from tstatusplaza with(nolock)where procesa=0))or(tabla.status is null)'' 
  --if(@sqlWhereHistorico='''' or @sqlWhereHistorico is null)begin
  -- set @plazas=@plazas+'')''
  --end else begin
  -- set @plazas=@plazas+@sqlWhereHistorico
  --end
 --  End 
 --set @plazas=@plazas+'' Tabla.Status in(select id_StatusPlaza from tstatusplaza with(nolock)where procesa in(0,1)))'';
 --set @plazas=@plazas+''and tabla.id_plaza=peTemp.id_plaza and tabla.desde=dbo.DateToQna(peTemp.fecha)Order by id_plaza desc,desde desc''
--   datManejo.ObtenDataSet(dsHistorico,sbSql.ToString(),"Reporte")
--   Return dsHistorico

--  Catch ex As Exception
--   dsHistorico.Dispose()
--  End Try
--  Return dsHistorico
-- End Function
--select @plazas

set @plazas=-- '' select * from #informacionPlazas;''
@plazas+
''select distinct idF id,infoFinal.id_Plaza,opciones,partida,unidad,subunidad,categoria,horas,plaza,isnull(infoFinal.udp,tlp28.udp) udp,isnull(statusM,status)status,isnull(motivoM,motivo)motivo,isnull(Id_TipoPlazaM,id_motivo)id_motivo,''+
''isnull(fup.Folio,'''''''')documento,isnull(desdeM,desde)desde,isnull(hastaM,hasta)hasta,nivel,isnull(ctM,ct)ct,nivelCM,SS,desdePlazaEmpleado,id ids,infoFinal.clave''+
'' into #plazasTrabajador''+
'' from(''+
''Select idF=ROW_NUMBER()OVER(ORDER BY Datos.desde),pe.*,Datos.status statusM,Datos.motivo motivoM,Datos.desde desdeM,Datos.hasta hastaM,Datos.ct ctM,Datos.quincenaHasta quincenaHastaM,Datos.fechaDesde fechaDesdeM,Datos.Id_plaza Id_plazaM,Id_TipoPlaza Id_TipoPlazaM ''+
''from #informacionPlazas pe''+
'' left join( ''+
''Select right(''''00''''+cast(EstatusPlaza.id_rel as varchar),2)as status,MotivoPlaza.id_rel motivo,Id_TipoPlaza,dbo.DateToQna(EstatusPlaza.desde)as desde,''+
  ''case when right(''''00''''+cast(EstatusPlaza.id_rel as varchar),2)=''''03'''' then dbo.DateToQna(EstatusPlaza.desde)''+
    '' else isnull(dbo.DateToQna(EstatusPlaza.hasta),''''999999'''')end hasta,''+
     --'' case when EstatusPlaza.hasta IS NULL THEN ''''999999'''' ELSE dbo.DateToQna(EstatusPlaza.hasta)END as hasta,''+
     ''(SELECT ISNULL(VTL.Centro_de_Trabajo,'''''''') ''+
      ''FROM PlazaEmpleados PE ''+
      ''LEFT JOIN vistaTablaLongitud VTL ON VTL.id_nodo=PE.id_nodo ''+
      ''WHERE PE.id_plaza=EstatusPlaza.id_plaza AND PE.fecha=(Select MAX(fecha) ''+
                    ''FROM PlazaEmpleados ''+
                    ''WHERE id_plaza=EstatusPlaza.id_plaza AND fecha<=EstatusPlaza.desde ''+
                    '')''+
     '')as ct ,case when EstatusPlaza.quincenaHasta IS NULL THEN ''''999999'''' ELSE dbo.DateToQna(EstatusPlaza.quincenaHasta)END as quincenaHasta,EstatusPlaza.desde as fechaDesde,''+
     ''EstatusPlaza.Id_plaza ''+
   ''from(''+
     ''SELECT pe.id_plaza,pe.id_rel AS id_rel,pe.fecha AS desde,case when hist.hasta is not null then(hist.hasta -1)end as hasta,''+
       ''case when hist.hasta is null then pe.fecha else(hist.hasta -1)end AS quincenaHasta ''+
     ''FROM Hstatusplaza pe ''+
     ''Left Join(''+
        ''SELECT p.id_plaza,p.fecha,MIN(h.fecha)AS hasta ''+
        ''FROM Hstatusplaza p ''+
        ''INNER JOIN Hstatusplaza h ON p.id_plaza=h.id_plaza ''+
        ''Where p.fecha< h.fecha ''+
        ''GROUP BY p.id_plaza,p.Fecha ''+
     '')hist ON pe.id_plaza=hist.id_plaza AND pe.fecha=hist.fecha ''+
   '')EstatusPlaza ''+
   ''left join(''+
      ''SELECT pe.id_plaza,Id_TipoPlaza,rtrim(ltrim(tp.CveTipoPlaza))AS id_rel,pe.fecha AS desde,(hist.hasta-1)AS hasta ''+
      ''FROM htipoplaza pe ''+
      ''join ttipoplaza tp with(nolock)on pe.id_rel=tp.Id_TipoPlaza ''+
      ''Left Join(''+
         ''SELECT p.id_plaza,p.fecha,MIN(h.fecha)AS hasta ''+
         ''FROM htipoplaza p ''+
         ''INNER JOIN htipoplaza h ON p.id_plaza=h.id_plaza ''+
         ''Where p.fecha< h.fecha GROUP BY p.id_plaza,p.Fecha ''+
      '')hist ON pe.id_plaza=hist.id_plaza AND pe.fecha=hist.fecha ''+
   '')MotivoPlaza on EstatusPlaza.id_plaza=MotivoPlaza.id_plaza and MotivoPlaza.desde=EstatusPlaza.desde ''+
   ''where EstatusPlaza.id_plaza in(select id_plaza from #informacionPlazas)''+--=92879 
'')Datos''+
'' on datos.id_plaza=pe.id_plaza and''+
'' datos.desde >= pe.desdePlazaEmpleado''+
--and estatus.fechaDesde<=getDate()
'' and datos.hasta<=pe.hasta''+
'')infoFinal''+
'' left join vistatablalongitud v on infoFinal.ct=v.clave''+
'' join TablaLongitudProp_28 tlp28 on tlp28.id_nodo=v.id_nodo''+

'' left join''+
''(''+
''select distinct id_emp,id_plaza,folio,''+
''case when fmm.Id_tipoMovimiento in(4,6,7,8)and fmm.clave not in(''''10'''',''''95'''')then dbo.fechaToAnioQuincena(FechaIni-1)else dbo.fechaToAnioQuincena(FechaIni)end FechaIni,''+
''case when fmm.Id_tipoMovimiento in(4,6,7,8)and fmm.clave not in(''''10'''',''''95'''')then dbo.fechaToAnioQuincena(Fechafin-1)else dbo.fechaToAnioQuincena(Fechafin)end FechaFin,''+
''fdd.Id_MotivoMovimiento,Clave,Descripcion ''+
''from FUP_Documentos fd join FUP_Documento_Detalle fdd ''+
''on fd.Id_Documento=fdd.Id_Documento ''+
''join FUP_motivoMovimiento fmm on fmm.Id_MotivoMovimiento=fdd.Id_MotivoMovimiento ''+
''where id_emp=''+cast(@idEmp as varchar(15))+'' and id_plaza in(select id_plaza from #informacionPlazas)''+
''and fd.id_estatus=2 ''+
'')fup on fup.id_plaza=infoFinal.Id_plaza and isnull(desdeM,desde)<=cast(rtrim(ltrim(fechaini))as int)and isnull(hastaM,hasta)>=cast(rtrim(ltrim(fechafin))as int) ''+
''and rtrim(ltrim(fup.clave))=isnull(motivoM,motivo);''

set @plazas=@plazas+

''select ROW_NUMBER()OVER(PARTITION BY id_plaza ORDER BY ID_PLAZA,fecha desc)AS id, id_plaza,fecha,max(estatus)status,max(motivo)motivo ''+
''into #desdeEmpal''+
'' from(''+
''select id_plaza,fecha,case when Id_TipoMovPlazas=2 then Valor_IdCampo else -1 end estatus,case when Id_TipoMovPlazas=1 then Valor_IdCampo else -1 end motivo ''+
''from Empalme_hplazas ''+
''where Id_plaza in(select id_plaza from empalme_plazaempleados where id_emp=''+cast(@idEmp as varchar(15))+'')''+
'')empalmes ''+
''group by id_plaza,fecha;''+


''select distinct pi.id_Plaza,''''''''opciones,pi.partida,pi.unidad,pi.subunidad,pi.categoria,pi.horas,pi.diagonal plaza,vt.UDP,''+
''p.status,CveTipoPlaza motivo,tt.Id_TipoPlaza id_motivo,isnull(folio,'''''''')documento,dbo.fechaToAnioQuincena(pe.Fecha)desdePlazaEmpleado,hasta,''''''''nivel,v.Clave ct,''+
'' ''''''''nivelCM,''''''''SS,dbo.fechaToAnioQuincena(pe.Fecha)desde,1 id,null clave''+
--pe.Id_Emp,pe.Id_plaza,pe.id_nodo
'' into #plazasEmpalmes''+
'' from Empalme_PlazaEmpleados pe''+
'' join ''+
''(''+
''select d1.*,isnull(dbo.fechaToAnioQuincena(d2.Fecha),''''999999'''')hasta from #desdeEmpal d1''+
'' left join #desdeEmpal d2 on d1.Id_plaza=d2.Id_plaza and d1.id+1=d2.id''+
'')p on p.Id_plaza=pe.Id_plaza and p.Fecha=pe.fecha''+
'' join TTipoPlaza tt on tt.Id_TipoPlaza=p.motivo''+
'' join plazaieepo pi on pi.Id_plaza=p.Id_plaza''+
'' left join vistatablalongitud v on pe.id_nodo=v.Id_Nodo''+
'' left join TablaLongitudProp_28 vt on vt.id_nodo=v.id_nodo''+

'' left join''+
''(''+
''select distinct id_emp,id_plaza,folio,dbo.fechaToAnioQuincena(FechaIni)FechaIni,dbo.fechaToAnioQuincena(FechaFin)FechaFin,fdd.Id_MotivoMovimiento,Clave,Descripcion ''+
''from FUP_Documentos fd join FUP_Documento_Detalle fdd on fd.Id_Documento=fdd.Id_Documento ''+
''join FUP_motivoMovimiento ftm on ftm.Id_MotivoMovimiento=fdd.Id_MotivoMovimiento ''+
''where id_emp=''+cast(@idEmp as varchar(15))+'' and id_plaza in(select id_plaza from empalme_plazaempleados where id_emp=''+cast(@idEmp as varchar(15))+'')''+
''and fd.id_estatus=2 ''+
'')fup on fup.id_plaza=pe.Id_plaza and cast(rtrim(ltrim(fechaini))as int)=dbo.fechaToAnioQuincena(pe.fecha)''+
''and cast(rtrim(ltrim(fup.clave))as varchar(2))=cast(motivo as varchar(2));''+

''select pte.id_Plaza,''''''''opciones,pte.partida,pte.unidad,pte.subunidad,pte.categoria,pte.horas,pte.plaza,pte.UDP,''''03'''' status,fd.clave motivo,fd.clave id_motivo,isnull(fd.folio,'''''''')documento,fd.desde desdePlazaEmpleado,fd.hasta,''''''''nivel,pte.ct,''''''''nivelCM,''''''''SS,fd.desde desde,1 id,null clave''+
'' into #BajasPlazasEmpalmes''+
'' from #plazasEmpalmes pte''+
'' join( select id_emp,id_plaza,fmm.clave,dbo.fechaToAnioQuincena(FechaIni)desde,dbo.fechaToAnioQuincena(FechaFin)hasta,folio''+
 '' from fup_documentos fd''+
 '' join fup_documento_detalle fdd on fd.id_documento=fdd.id_documento''+
 '' join fup_motivomovimiento fmm on fmm.id_MotivoMovimiento=fdd.id_MotivoMovimiento''+
 '' where fmm.Id_tipoMovimiento in(4,6,7,8)and fmm.clave not in(''''10'''',''''95'''') and fd.id_emp=''+cast(@idEmp as varchar(15))+
'')fd on pte.id_plaza=fd.id_plaza and fd.desde=pte.desde;''+

 '' select id_emp,clave,operacion,ESTATUS_PLAZA_MAP,dbo.fechaToAnioQuincena(cast(right(fecha,4)+''''-''''+substring(fecha,4,2)+''''-''''+left(fecha,2)as date))fecha,REGIMEN,ESTATUS_OPERACION into #anexosNombramiento ''+
      ''from(''+
      ''select id_emp,clave,operacion,ESTATUS_PLAZA_MAP,case when fecha_inicial='''''''' then fecha_final else fecha_inicial end fecha,REGIMEN,ESTATUS_OPERACION ''+
      ''from anexos_nombramientos where id_emp=''+cast(@idEmp as varchar(15))+
      '')a;''+

''select a.*,n.operacion,n.ESTATUS_PLAZA_MAP into #plazasTrabajadorEmpalmes from(select * from #plazasEmpalmes union all select * from #BajasPlazasEmpalmes)a left join #anexosNombramiento n on a.partida+a.unidad+a.subunidad+ltrim(a.categoria)+a.horas+a.plaza=n.clave and(a.desde=n.fecha);''


set @plazas=@plazas+'' select distinct pt.id,pt.id_Plaza,opciones,partida,unidad,subunidad,categoria,horas,plaza,udpnct udp,status,motivo,id_motivo,documento,desdenct desde,hasta,nivel,Centro_de_Trabajo ct,nivelCM,SS,desde desdePlazaEmpleado,id ids,clave,''''''''registro ''+
      ''into #reubicaciones''+
      '' from #plazasTrabajador pt''+
      '' join(''+
      ''select id_emp,id_plaza,dbo.fechaToAnioQuincena(fecha)desdenct,v.Centro_de_Trabajo,tlp28.UDP udpnct ''+
       ''from PlazaEmpleados pe ''+
       ''left join vistatablalongitud v on pe.id_nodo=v.id_nodo ''+
       ''join TablaLongitudProp_28 tlp28 on tlp28.id_nodo=v.id_nodo ''+
       ''where id_emp=''+cast(@idEmp as varchar(15))+'' and(Documentos is not null and Documentos !='''''''')''+
       '')r on r.Id_plaza=pt.id_plaza and desdenct>=desde and desdenct<=hasta and desdenct!=desde;''+
       --and ct!=Centro_de_Trabajo
       
       '' select ROW_NUMBER()OVER(PARTITION BY id ORDER BY ID,DESDE)AS n,* into #platra_X from(''+
       ''select *,''''''''registro from #plazasTrabajador ''+
       ''union all ''+
       ''select * from #reubicaciones ''+
       '')datos;''+
	   
      ''select a.n,a.id_Plaza,a.opciones,a.partida,a.unidad,a.subunidad,a.categoria,a.horas,a.plaza,a.udp,a.status,a.motivo,a.id_motivo,n.operacion,n.ESTATUS_PLAZA_MAP,a.documento,a.desde,a.hasta,a.nivel,a.ct,a.nivelCM,a.SS,a.desdePlazaEmpleado,a.id,'''''''' clave,a.registro ''+
      ''into #platra ''+
      ''from #platra_X a ''+
      ''left join #anexosNombramiento n on a.partida+a.unidad+a.subunidad+ltrim(a.categoria)+a.horas+a.plaza=n.clave and(a.desde=n.fecha);''+

      ''if exists(select top 1 * from #reubicaciones)begin''+
      '' Declare @ii int''+
      '' set @ii=1''+
      '' while @ii<=(select max(id)id from #platra where id in(select id from #platra where n=2))begin''+
       '' if(@ii in(select id id from #platra where id in(select id from #platra where n=2)))begin''+  
        --select isnull(p2.desde-1,p1.hasta)desden,p1.* 
       '' update p1 set p1.hasta=isnull(p2.desde-1,p1.hasta)''+
       '' from #platra p1''+
       '' left join(select * from #platra where id=@ii)p2 ''+
       ''on p1.n+1=p2.n ''+
       ''where p1.id=@ii ''+
       ''end ''+
       ''set @ii=@ii+1 ''+
      ''end ''+
      ''end;'';
declare @operador varchar(2)

if(@activas=1)begin
 set @operador=''>='';
end else begin
 set @operador=''<'';
end

if @activas=1 and(@leyenda=''Plazas_Empleado'' or @leyenda='''')begin
 set @plazas=@plazas+ ''select id_Plaza,opciones,partida,unidad,subunidad,categoria,horas,plaza,udp,right(''''00''''+cast(status as varchar),2)status,right(''''00''''+cast(motivo as varchar),2)motivo,id_motivo,operacion,estatus_plaza_map,documento,desde,hasta,nivel,ct,nivelCM,SS,desde desdePlazaEmpleado,id,clave,''''''''registro from #platra ''+
       ''where status in(''''14'''',''''15'''',''''01'''',''''06'''')and hasta ''+@operador+'' dbo.fechaToAnioQuincena(getdate())''+
       ''Order by id_plaza,desde desc,cast(case when status=''''03'''' then ''''100'''' else status end as int)desc;''
end else 
if @activas=1 and @leyenda=''Plazas_del_Empleado'' 
begin 
set @plazas=@plazas+ ''select id_Plaza,opciones,partida+unidad+subunidad+categoria+horas+plaza plaza ,udp,right(''''00''''+cast(status as varchar),2)status,right(''''00''''+cast(motivo as varchar),2)motivo,id_motivo,operacion,estatus_plaza_map,documento,desde,hasta,nivel,ct,nivelCM,SS,desde desdePlazaEmpleado,id,clave,''''''''registro from #platra ''+
       ''where status in(''''14'''',''''15'''',''''01'''',''''06'''')and hasta ''+@operador+'' dbo.fechaToAnioQuincena(getdate())''+
       ''Order by id_plaza,desde desc,cast(case when status=''''03'''' then ''''100'''' else status end as int)desc;''
end
if @activas=0 and(@leyenda=''Plazas_Empleado'' or @leyenda='''') begin
 set @plazas=@plazas+ ''select * from(''+
        '' select id_Plaza,opciones,partida,unidad,subunidad,categoria,horas,plaza,udp,right(''''00''''+cast(status as varchar),2)status,right(''''00''''+cast(motivo as varchar),2)motivo,id_motivo,operacion,estatus_plaza_map,documento,desde,hasta,nivel,ct,nivelCM,SS,desde desdePlazaEmpleado,id,clave,''''''''registro from #platra where status not in(''''14'''',''''15'''',''''01'''',''''06'''')or hasta ''+@operador+'' dbo.fechaToAnioQuincena(getdate())''+
        '' union all ''+
        ''select id_Plaza,opciones,partida,unidad,subunidad,categoria,horas,plaza,udp,right(''''00''''+cast(rtrim(ltrim(status))as varchar),2)status,right(''''00''''+cast(rtrim(ltrim(motivo))as varchar),2)motivo,id_motivo,operacion,estatus_plaza_map,documento,desde,hasta,nivel,ct,nivelCM,SS,desdePlazaEmpleado,id,clave,''''Empalme'''' registro from #plazasTrabajadorEmpalmes ''+       
       '')a Order by categoria,id_plaza,desde desc,cast(case when status=''''03'''' then ''''100'''' else status end as int)desc,hasta desc;''
end else 
if @activas=0 and @leyenda=''Plazas_del_Empleado''
begin 
 set @plazas=@plazas+ ''select * from(''+
        '' select id_Plaza,opciones,partida+unidad+subunidad+categoria+horas+plaza plaza,udp,right(''''00''''+cast(status as varchar),2)status,right(''''00''''+cast(motivo as varchar),2)motivo,id_motivo,operacion,estatus_plaza_map,documento,desde,hasta,nivel,ct,nivelCM,SS,desde desdePlazaEmpleado,id,clave,''''''''registro from #platra where status not in(''''14'''',''''15'''',''''01'''',''''06'''')or hasta ''+@operador+'' dbo.fechaToAnioQuincena(getdate())''+
        '' union all ''+
        ''select id_Plaza,opciones,partida+unidad+subunidad+categoria+horas+plaza plaza,udp,right(''''00''''+cast(rtrim(ltrim(status))as varchar),2)status,right(''''00''''+cast(rtrim(ltrim(motivo))as varchar),2)motivo,id_motivo,operacion,estatus_plaza_map,documento,desde,hasta,nivel,ct,nivelCM,SS,desdePlazaEmpleado,id,clave,''''Empalme'''' registro from #plazasTrabajadorEmpalmes ''+       
       '')a Order by plaza,id_plaza,desde desc,cast(case when status=''''03'''' then ''''100'''' else status end as int)desc,hasta desc;''
end
EXECUTE (@plazas)
---execute sp_executesql @plazas
--select @plazas
--exec [P_obtenerReportePlazasX] 71018,0,''Plazas_Empleado'',121,0,''''
end

--select * from Empleados where rfc like ''%LOHD580203HD0%''


--exec [P_obtenerReportePlazas] 71018,0,''Plazas_Empleado'',121,0,''''
--exec [P_obtenerReportePlazasX] 59166,0,''Plazas_Empleado'',121,0,''''

----select * from Empleados where rfc=''LADP810530K25''--Id_Emp=114072



--select * from empleados where rfc like ''%SAHN790609TC8%''
--select * from PlazaEmpleados where Id_plaza=92879 order by fecha-- where Id_Emp=114072
--select * from HPlazas where Id_plaza=92879 order by fecha
--select * from FUP_Documentos where Id_Documento=1269247
--select * from FUP_Documento_Detalle where Id_Documento=1269247
--select * from FUP_MotivoMovimiento where Id_MotivoMovimiento=67

--select * from empleados where rfc like ''%GIBG870911%''
--select * from PlazaEmpleados where id_plaza in(select id_plaza from PlazaEmpleados where id_emp =147807)order by id_plaza,fecha 
--select * from HPlazas where id_plaza in(select id_plaza from PlazaEmpleados where id_emp =147807)order by id_plaza,fecha 

--select * from ViewVistaTablalongitud where Id_Nodo in(17542,17568)'
GO

GO
PRINT N'Creating [dbo].[SP_Movimientos_plaza_pendientes]'
GO
IF OBJECT_ID(N'[dbo].[SP_Movimientos_plaza_pendientes]', 'P') IS NULL
EXEC sp_executesql N'create procedure [dbo].[SP_Movimientos_plaza_pendientes]
as
select fd.Folio,e.RFC,(rtrim(e.Nombre)) +'' ''+ (rtrim(e.ApPaterno)) +'' '' + (rtrim(e.ApMaterno)) as Nombre,
pi.PlazaIEEPO,ftm.Clave as Tipo,fmm.Clave as Motivo,dbo.fechaToAnioQuincena(fdd.fechaini) as Desde, 
Hasta=case when dbo.fechaToAnioQuincena(fdd.fechaini)=dbo.fechaToAnioQuincena(fdd.fechafin) then ''999924'' else 
dbo.fechaToAnioQuincena(fdd.fechafin) end,tn.Descripcion as Nivel_Educativo,fid.Centro_Trabajo,fid.No_Relacion
from fup_documentos fd
inner join empleados e on fd.Id_Emp = e.Id_Emp
inner join fup_documento_detalle fdd on fd.Id_Documento = fdd.Id_Documento
inner join plazas p on fdd.Id_Plaza = p.Id_plaza
inner join plazaieepo pi on fdd.Id_Plaza = pi.Id_plaza
inner join usuarios u on fd.Id_Usuario = u.Id_Usuario
inner join FUP_Informacion_Documentos fid on fd.Id_Documento = fid.Id_Documento
inner join CalenNomina c on fid.Id_Periodo = c.Id_Periodo
inner join FUP_MotivoMovimiento fmm on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
inner join tniveleducativo tn on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
where e.id_cia=2 and fd.Id_Estatus in (4) and fmm.Id_MotivoMovimiento=5 and c.año=2015 and c.numero>=1
and pi.categoria=''A01806''
order by tn.Descripcion '
GO

GO
PRINT N'Creating [dbo].[GeneraHccosto]'
GO
IF OBJECT_ID(N'[dbo].[GeneraHccosto]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[GeneraHccosto]
@fecharef datetime, @fechamov datetime
WITH EXEC AS CALLER
AS
begin                    

delete from hccosto where fecha = @fecharef

---- basica

if exists(select * from sysobjects where name like ''zprimera'')
drop table zprimera
if exists(select * from sysobjects where name like ''zsegunda'')
drop table zsegunda
select * into zprimera from
  (
    select id_emp,
          --case when actualizado>@fecharef then diferencia-1 else diferencia end as antiguedad,
	case when diferencia>56 then diferencia-(diferencia-56) else diferencia end as antiguedad, 
          Fecha_Prima_Antiguedad
    from (select t.id_emp,Fecha_Prima_Antiguedad,
                  --,datediff(yy,Fecha_Prima_Antiguedad,@fecharef) as diferencia
                  case when day(@fecharef) in (1) then 
                    dbo.RegresaDiferenciaAños(dateadd(mi,+1,dbo.anioQuincenaToFecha(dbo.fechaToAnioQuincena(fecha_prima_antiguedad), 1)),@fecharef) 
                  else
                    dbo.RegresaDiferenciaAños(dateadd(mi,+1,fecha_prima_antiguedad),@fecharef) 
                  end as diferencia
                  --,dateadd(yy,datediff(yy,Fecha_Prima_Antiguedad,@fecharef) ,Fecha_Prima_Antiguedad) as actualizado
          from 
          HFecha_Prima_Antiguedad T inner join
          (select id_emp, max(fecha) as fecha 
            from HFecha_Prima_Antiguedad 
            where fecha<=@fecharef group by id_emp) h
          on t.id_emp=h.id_emp and t.fecha=h.fecha
          )a --where case when actualizado>@fecharef then diferencia-1 else diferencia end>0
  ) a inner join tquinquenios_docentes t on t.años=a.antiguedad and t.Clave not like ''9%''
where t.Tipo = ''D''-----

if exists(select * from sysobjects where name like ''zprimera'')
insert zprimera (id_emp,antiguedad,Fecha_Prima_Antiguedad,id_Quinquenios_docentes,Clave,[AÑos],Porcentaje,Tipo)
select * 
from
(
  select id_emp,
  --diferencia as antiguedad,
	case when diferencia>56 then diferencia-(diferencia-56) else diferencia end as antiguedad, 
  Fecha_Prima_Antiguedad
  from
  (
    select t.id_emp,Fecha_Prima_Antiguedad
      ,case when month(Fecha_Prima_Antiguedad) >= 2 and month(Fecha_Prima_Antiguedad) < 9 Then 
              cast(cast(Year(Fecha_Prima_Antiguedad) as varchar(4)) + ''/09/01'' as datetime)
            Else Case When month(Fecha_Prima_Antiguedad) = 1 Then
                  cast(cast(Year(Fecha_Prima_Antiguedad) as varchar(4)) + ''/02/01'' as datetime)
                Else
                  cast(cast(Year(Fecha_Prima_Antiguedad)+1 as varchar(4)) + ''/02/01'' as datetime)
            End
        End as FechaCumple
      ,case when month(Fecha_Prima_Antiguedad) >= 2 and month(Fecha_Prima_Antiguedad) < 9 Then 
              dbo.RegresaDiferenciaAños(cast(cast(Year(Fecha_Prima_Antiguedad) as varchar(4)) + ''/09/01'' as datetime),@fecharef) 
            Else Case When month(Fecha_Prima_Antiguedad) = 1 Then
                  dbo.RegresaDiferenciaAños(cast(cast(Year(Fecha_Prima_Antiguedad) as varchar(4)) + ''/02/01'' as datetime),@fecharef) 
                Else
                  dbo.RegresaDiferenciaAños(cast(cast(Year(Fecha_Prima_Antiguedad)+1 as varchar(4)) + ''/02/01'' as datetime),@fecharef) 
            End
        End as diferencia
      ,dateadd(yy,case when month(Fecha_Prima_Antiguedad) >= 2 and month(Fecha_Prima_Antiguedad) < 9 Then 
              dbo.RegresaDiferenciaAños(cast(cast(Year(Fecha_Prima_Antiguedad) as varchar(4)) + ''/09/01'' as datetime),@fecharef) 
            Else Case When month(Fecha_Prima_Antiguedad) = 1 Then
                  dbo.RegresaDiferenciaAños(cast(cast(Year(Fecha_Prima_Antiguedad) as varchar(4)) + ''/02/01'' as datetime),@fecharef) 
                Else
                  dbo.RegresaDiferenciaAños(cast(cast(Year(Fecha_Prima_Antiguedad)+1 as varchar(4)) + ''/02/01'' as datetime),@fecharef)
            End
        End,case when month(Fecha_Prima_Antiguedad) >= 2 and month(Fecha_Prima_Antiguedad) < 9 Then 
              cast(cast(Year(Fecha_Prima_Antiguedad) as varchar(4)) + ''/09/01'' as datetime)
            Else Case When month(Fecha_Prima_Antiguedad) = 1 Then
                  cast(cast(Year(Fecha_Prima_Antiguedad) as varchar(4)) + ''/02/01'' as datetime)
                Else
                  cast(cast(Year(Fecha_Prima_Antiguedad)+1 as varchar(4)) + ''/02/01'' as datetime)
            End
        End) as actualizado
    from 
      HFecha_Prima_Antiguedad T inner join
      (
        select id_emp, max(fecha) as fecha 
        from HFecha_Prima_Antiguedad 
        where fecha<=@fecharef group by id_emp
      ) h
      on t.id_emp=h.id_emp and t.fecha=h.fecha
  ) a 
) a 
inner join tquinquenios_docentes t on t.años=a.antiguedad and t.Clave not like ''9%''
where t.Tipo=''A''---

select  m.id_plaza,m.id_emp,tipo into zsegunda from
(select t.id_plaza,id_emp from
plazaempleados T inner join
(select id_plaza, max(fecha) as fecha  from plazaempleados where fecha<=@fecharef group by id_plaza)h
on t.id_plaza=h.id_plaza and t.fecha=h.fecha where id_emp<>0)M
inner join
(select t.id_plaza,tipo from
htabulador_se_cat_puesto T inner join
(select id_plaza, max(fecha) as fecha  from htabulador_se_cat_puesto where fecha<=@fecharef group by id_plaza)h
on t.id_plaza=h.id_plaza and t.fecha=h.fecha
inner join
(select case when tmodelo_se_id_modelo_se in (2,3,9) then ''A'' else ''D'' end as tipo,id_tabulador_se_cat_puesto 
from ttabulador_se_cat_puesto where tmodelo_se_id_modelo_se in (1,2,3,4,5,6,9))c on
c.id_tabulador_se_cat_puesto=id_rel
)n on m.id_plaza=n.id_plaza 
----

insert into hccosto (id_plaza,id_rel,fecha,id_user,movimiento,id_emp)
select distinct id_plaza,id_quinquenios_docentes as id_rel,@fecharef as fecha,1 as id_user,@fechamov as movimiento, q.id_emp from zprimera q inner join zsegunda t on q.id_emp=t.id_emp and q.tipo=t.tipo
where q.tipo = ''A''

insert into hccosto (id_plaza,id_rel,fecha,id_user,movimiento,id_emp)
select distinct id_plaza,id_quinquenios_docentes as id_rel,@fecharef as fecha,1 as id_user,@fechamov as movimiento, q.id_emp from zprimera q inner join zsegunda t on q.id_emp=t.id_emp and q.tipo=t.tipo
where q.tipo = ''D''

--- UPN

if exists(select * from sysobjects where name like ''zprimera'')
drop table zprimera
if exists(select * from sysobjects where name like ''zsegunda'')
drop table zsegunda

select * into zprimera from
  (
    select id_emp,
	case when diferencia>56 then diferencia-(diferencia-56) else diferencia end as antiguedad, 
          Fecha_Alta_Rama Fecha_Prima_Antiguedad
    from (select t.id_emp,Fecha_Alta_Rama,
				  case when day(@fecharef) in (1) then 
				  dbo.RegresaDiferenciaAños(dateadd(mi,+1,dbo.anioQuincenaToFecha(dbo.fechaToAnioQuincena(Fecha_Alta_Rama), 1)),@fecharef) 
				  else 
				  dbo.RegresaDiferenciaAños(dateadd(mi,+1,Fecha_Alta_Rama),@fecharef) end as diferencia
          from 
          HFecha_Alta_Rama T inner join
          (select id_emp, max(fecha) as fecha 
            from HFecha_Alta_Rama 
            where fecha<=@fecharef group by id_emp) h
          on t.id_emp=h.id_emp and t.fecha=h.fecha
          )a --where case when actualizado>@fecharef then diferencia-1 else diferencia end>0
  ) a inner join tquinquenios_docentes t on t.años=a.antiguedad and t.Clave like ''9%''
where t.Tipo = ''D''-----

if exists(select * from sysobjects where name like ''zprimera'')
insert zprimera (id_emp,antiguedad,Fecha_Prima_Antiguedad,id_Quinquenios_docentes,Clave,[AÑos],Porcentaje,Tipo)
select * 
from
(
  select id_emp,
  --diferencia as antiguedad,
	case when diferencia>56 then diferencia-(diferencia-56) else diferencia end as antiguedad, 
  Fecha_Alta_Rama Fecha_Prima_Antiguedad
  from
  (
    select t.id_emp,Fecha_Alta_Rama
      ,case when month(Fecha_Alta_Rama) >= 2 and month(Fecha_Alta_Rama) < 9 Then 
              cast(cast(Year(Fecha_Alta_Rama) as varchar(4)) + ''/09/01'' as datetime)
            Else Case When month(Fecha_Alta_Rama) = 1 Then
                  cast(cast(Year(Fecha_Alta_Rama) as varchar(4)) + ''/02/01'' as datetime)
                Else
                  cast(cast(Year(Fecha_Alta_Rama)+1 as varchar(4)) + ''/02/01'' as datetime)
            End
        End as FechaCumple
      ,case when month(Fecha_Alta_Rama) >= 2 and month(Fecha_Alta_Rama) < 9 Then 
              dbo.RegresaDiferenciaAños(cast(cast(Year(Fecha_Alta_Rama) as varchar(4)) + ''/09/01'' as datetime),@fecharef) 
            Else Case When month(Fecha_Alta_Rama) = 1 Then
                  dbo.RegresaDiferenciaAños(cast(cast(Year(Fecha_Alta_Rama) as varchar(4)) + ''/02/01'' as datetime),@fecharef) 
                Else
                  dbo.RegresaDiferenciaAños(cast(cast(Year(Fecha_Alta_Rama)+1 as varchar(4)) + ''/02/01'' as datetime),@fecharef) 
            End
        End as diferencia
      ,dateadd(yy,case when month(Fecha_Alta_Rama) >= 2 and month(Fecha_Alta_Rama) < 9 Then 
              dbo.RegresaDiferenciaAños(cast(cast(Year(Fecha_Alta_Rama) as varchar(4)) + ''/09/01'' as datetime),@fecharef) 
            Else Case When month(Fecha_Alta_Rama) = 1 Then
                  dbo.RegresaDiferenciaAños(cast(cast(Year(Fecha_Alta_Rama) as varchar(4)) + ''/02/01'' as datetime),@fecharef) 
                Else
                  dbo.RegresaDiferenciaAños(cast(cast(Year(Fecha_Alta_Rama)+1 as varchar(4)) + ''/02/01'' as datetime),@fecharef)
            End
        End,case when month(Fecha_Alta_Rama) >= 2 and month(Fecha_Alta_Rama) < 9 Then 
              cast(cast(Year(Fecha_Alta_Rama) as varchar(4)) + ''/09/01'' as datetime)
            Else Case When month(Fecha_Alta_Rama) = 1 Then
                  cast(cast(Year(Fecha_Alta_Rama) as varchar(4)) + ''/02/01'' as datetime)
                Else
                  cast(cast(Year(Fecha_Alta_Rama)+1 as varchar(4)) + ''/02/01'' as datetime)
            End
        End) as actualizado
    from 
      HFecha_Alta_Rama T inner join
      (
        select id_emp, max(fecha) as fecha 
        from HFecha_Alta_Rama 
        where fecha<=@fecharef group by id_emp
      ) h
      on t.id_emp=h.id_emp and t.fecha=h.fecha
  ) a 
) a 
inner join tquinquenios_docentes t on t.años=a.antiguedad and t.Clave like ''9%''
where t.Tipo=''A''---

select  m.id_plaza,m.id_emp, case when pi.plazaieepo like ''% E%'' then ''D'' else ''A'' end tipo into zsegunda from
(select t.id_plaza,id_emp from
plazaempleados T inner join
(select id_plaza, max(fecha) as fecha  from plazaempleados where fecha<=@fecharef group by id_plaza)h
on t.id_plaza=h.id_plaza and t.fecha=h.fecha 
where id_emp<>0)M
inner join plazaieepo pi on pi.id_plaza = m.id_plaza
inner join
(
select t.id_plaza,tmodelo_se_id_modelo_se from
htabulador_se_cat_puesto T inner join
(select id_plaza, max(fecha) as fecha  from htabulador_se_cat_puesto where fecha<=@fecharef group by id_plaza)h
on t.id_plaza=h.id_plaza and t.fecha=h.fecha
inner join
(select tmodelo_se_id_modelo_se,id_tabulador_se_cat_puesto 
from ttabulador_se_cat_puesto where tmodelo_se_id_modelo_se in (7))c on
c.id_tabulador_se_cat_puesto=id_rel
)n on m.id_plaza=n.id_plaza 


update q set q.id_quinquenios_docentes = a.id_quinquenios_docentes, q.clave = a.clave, q.años = a.años, q.porcentaje = a.porcentaje
from zprimera q 
inner join zsegunda t on q.id_emp=t.id_emp and q.tipo=t.tipo
inner join tquinquenios_docentes a on a.años = q.[Años]-1 and a.tipo = q.Tipo
where q.tipo = ''A'' and q.Clave = ''9AE'' and a.clave like ''9%''

insert into hccosto (id_plaza,id_rel,fecha,id_user,movimiento,id_emp)
select distinct id_plaza,id_quinquenios_docentes as id_rel,@fecharef as fecha,1 as id_user,@fechamov as movimiento, q.id_emp from zprimera q inner join zsegunda t on q.id_emp=t.id_emp and q.tipo=t.tipo
where q.tipo = ''A''


update q set q.id_quinquenios_docentes = a.id_quinquenios_docentes, q.clave = a.clave, q.años = a.años, q.porcentaje = a.porcentaje
from zprimera q 
inner join zsegunda t on q.id_emp=t.id_emp and q.tipo=t.tipo
inner join tquinquenios_docentes a on a.años = q.[Años]-1 and a.tipo = q.Tipo
where q.tipo = ''D'' and q.Clave = ''9PH'' and a.clave like ''9%''


insert into hccosto (id_plaza,id_rel,fecha,id_user,movimiento,id_emp)
select distinct id_plaza,id_quinquenios_docentes as id_rel,@fecharef as fecha,1 as id_user,@fechamov as movimiento, q.id_emp from zprimera q inner join zsegunda t on q.id_emp=t.id_emp and q.tipo=t.tipo
where q.tipo = ''D''


 end'
GO

GO
PRINT N'Creating [dbo].[SP_Gennom2]'
GO
IF OBJECT_ID(N'[dbo].[SP_Gennom2]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[SP_Gennom2]
	-- Add the parameters for the stored procedure here
	@IDPERIODO INT = 0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	select distinct e.leyenda4 as tippag, pt1.UDP as ud,f.id_nodo,g.clave,c.rfc as filiacio, C.CURP, c.id_cod,(c.appaterno + '' ''+c.apmaterno +'' ''+ c.nombre) as Pnombre,d.plazaieepo,substring(d.plazaieepo,7,6) as puesto, 
	cast( year(a1.Fecha_Alta_SEP) as varchar) + ''''+ Right(''00'' + Cast(case when(day(a1.Fecha_Alta_SEP)>15)then month(a1.Fecha_Alta_SEP)*2 else (month(a1.Fecha_Alta_SEP)*2)-1 end as Varchar(2)),2) as ingsep,
  cast( year(e.FechaIniPago) as varchar) + ''''+ Right(''00'' + Cast(case when(day(e.FechaIniPago)>15)then month(e.FechaIniPago)*2 else (month(e.FechaIniPago)*2)-1 end as Varchar(2)),2) as qnapago, 
  a2.Folio  as cheque, 	a.Id_Emp, a.Id_Periodo, a.id_plaza,	a.id_periodoPago, a.id_AgrupPeriodos, a.Desde, a.Hasta
    INTO #TMPNOM from histpagos_Agrupadores a  
            inner join conceptos b on a.id_concepto=b.id_concepto inner join empleados c on a.id_emp=c.id_emp inner join plazaieepo d 
            on a.id_plaza=d.id_plaza                 
            inner join calennomina e on a.id_periodo=e.id_periodo 
            inner join 
            (select MAX(Movimiento) as movimiento,id_emp, max(Fecha_Alta_SEP) as fecha_alta_sep 
from HFecha_Alta_SEP where  Fecha  <= getdate()
group by HFecha_Alta_SEP.id_emp )a1
            on a1.id_emp = c.id_emp
            inner join (select p.id_plaza,p.id_nodo from   
                  plazaempleados p inner join  (select id_plaza,Max(Fecha) as FechaMax, Max(Movimiento) as MovMax   
                   from plazaEmpleados  where fecha <= getdate()  group by id_plaza ) hp  
                  on p.id_plaza = hp.id_plaza and hp.MovMax = p.Movimiento and hp.FechaMax = p.Fecha) f on a.id_plaza=f.id_plaza 
            inner join vistatablalongitud g on f.id_nodo=g.id_nodo inner join 
             TablaLongitudProp_28  pt1 on g.Id_Nodo = pt1.id_nodo
             inner join folio_recibos a2 on a.id_emp = a2.Id_Emp                 
             and a.id_plaza =a2.Id_Plaza and a.Id_Periodo = a2.Id_Periodo and a2.Id_Recibo = 14           
            where a.id_periodo =@IDPERIODO  
            and a.id_concepto in (1510,1518,1520,1521,1565,1566,1568,1578,1579,1580,1581,1582,1583,1584,2314,2315,2316,2404,2408,2409,2419,2448,2458,2465,2475,2478,2480,2482,2484) 
            order by e.leyenda4,c.rfc
            
select  a.Id_plaza, Right(''00'' + cast(a.Valor_IdCampo as varchar(2)),2) estatus, b.Valor_IdCampo motivo, a.fecha fecha INTO #TMPSTA from (select * from hplazas where Id_TipoMovPlazas = 2) a 
left join (select * from hplazas where Id_TipoMovPlazas = 1) b on a.Fecha = b.Fecha  and a.Id_plaza = b.Id_plaza
where a.Id_plaza in (SELECT DISTINCT Id_plaza FROM #TMPNOM) and a.Fecha  <= getdate()

SELECT * FROM #TMPNOM JOIN #TMPSTA ON  #TMPNOM.id_plaza = #TMPSTA.Id_plaza
END
'
GO

GO
PRINT N'Creating [dbo].[SIGP_ReferenciasPersonales_no_se_usa]'
GO
IF OBJECT_ID(N'[dbo].[SIGP_ReferenciasPersonales_no_se_usa]', 'P') IS NULL
EXEC sp_executesql N'CREATE procedure [dbo].[SIGP_ReferenciasPersonales_no_se_usa] AS          
BEGIN    
SET NOCOUNT ON;          
    
 select e.ID_EMP, e.RFC as RFC_EMPLEADO, e.CURP as CURP_EMPLEADO, par.Id_Parentesco ID_PARENTESCO, ''''  RFC, '''' CURP, a.ApPaterno PRIMER_APELLIDO,     
 a.ApMaterno SEGUNDO_APELLIDO, a.NOMBRE, '''' FECHA_NACIMIENTO, '''' GENERO      
 from CNNombres a       
 inner join CNParentescos par on a.Id_Parentesco = par.Id_Parentesco    
 inner join empleados e on e.Id_Emp = a.Id_Emp     
 where a.nombre<>''''    
    
 union all    
    
 select e.ID_EMP, e.RFC as RFC_EMPLEADO, e.CURP as CURP_EMPLEADO, 7 as ID_PARENTESCO,'''' rfc, tben.CURP, tben.ApPaterno PRIMER_APELLIDO, tben.ApMaterno SEGUNDO_APELLIDO,    
 tben.Nombre NOMBRE, '''' FECHA_NACIMIENTO, case when tben.curp <> '''' then substring(tben.curp,11,1) else '''' end GENERO     
 from empleados e     
 inner join rbeneficiario rben on e.id_emp = rben.id_emp    
 inner join TBeneficiario tben on rben.id_beneficiario = tben.id_Beneficiario    
 where e.id_emp <> 0     
END '
GO

GO
PRINT N'Creating [dbo].[spf_Borrar_Folio]'
GO
IF OBJECT_ID(N'[dbo].[spf_Borrar_Folio]', 'P') IS NULL
EXEC sp_executesql N'CREATE procedure [dbo].[spf_Borrar_Folio]      
(          
@folio as varchar(50),      
@id_usuario as int,      
@motivo_borrado as varchar(150),          
@accion as int       
)          
as                                                  
begin        
--declare @folio as varchar(20)=''1019161415/19''      
--declare @accion as int=0      
--declare @id_usuario as int=114      
--declare @motivo_borrado as varchar(150)=''Error de captura del folio''      
declare @error as varchar(10)=''''      
declare @mensaje as varchar(100)=''''   
declare @id_documento as int=(select id_documento from FUP_Documentos where folio=@folio)       
      
      
if(@accion=0)       
 begin       
      if((select distinct folio from fup_documentos where folio=@folio)='''' or (select folio from fup_documentos where folio=@folio) is null)    
       begin    
     set @error=''0''     
        set @mensaje=(select '' El folio:'' + @folio + '' no existe.'')    
       end    
   else     
       begin    
      set @error=''1''     
      set @mensaje=(select '' El folio:'' + a.folio + '' esta capturado con el RFC: '' + upper(e.rfc)  from fup_documentos a      
      inner join empleados e on a.id_emp=e.id_emp      
      where a.folio=@folio)    
    end    
 end     
     
      
if(@accion=1)       
    begin      
   if((select id_estatus from fup_documentos where folio=@folio)=1) begin       
   set @error=''0''      
   set @mensaje=''El folio ''+@folio +'' no puede eliminarse porque se encuentra en proceso de autorización.''      
   end      
      
   if((select id_estatus from fup_documentos where folio=@folio)=2) begin       
   set @error=''0''      
   set @mensaje=''El folio ''+@folio +'' no puede eliminarse porque se encuentra en estatus procesado.''      
   end      
      
   if((select id_estatus from fup_documentos where folio=@folio)=3) begin       
   set @error=''0''      
   set @mensaje=''El folio ''+@folio +'' no puede eliminarse porque se encuentra en estatus rechazado por usuario.''      
   end      
      
   if((select id_estatus from fup_documentos where folio=@folio) in (4,6))       
   begin      
       --realizar la inserció para dejar registro del borrado      
    insert into hfolio_eliminados (id_documento,folio,rfc,motivo_borrado,id_periodo_borrado,id_usuario,fecha)      
    select a.id_documento,a.folio,e.rfc,@motivo_borrado,fid.id_periodo,@id_usuario,getdate() from fup_documentos a      
    inner join empleados e on a.id_emp=e.id_emp      
    inner join fup_informacion_documentos fid on a.id_documento=fid.id_documento      
    where a.folio=@folio      
      
    --proceder con la eliminacion de las tablas involucradas  
	    
    --delete from fup_valortext where id_documento in (        
    --select fdd.id_detalle from FUP_Documento_Detalle fdd with (nolock)  
    --inner join FUP_Documentos fd with (nolock) on fdd.Id_Documento=fd.Id_Documento  
	--where fd.folio=@folio   
	--)
		
	delete fvt from fup_valortext fvt 
	inner join FUP_Documento_Detalle fdd with (nolock) on fvt.Id_Documento=fdd.Id_Detalle
	inner join FUP_Documentos fd with (nolock) on fdd.id_documento=fd.id_documento
	where fd.folio=@folio
		                
    --delete from fup_valorfloat where id_documento in (        
    --select fdd.id_detalle from FUP_Documento_Detalle fdd with (nolock)  
    --inner join FUP_Documentos fd with (nolock) on fdd.Id_Documento=fd.Id_Documento  
    --where fd.folio=@folio        
    --)		
	
	delete fvf from fup_valorfloat fvf 
	inner join FUP_Documento_Detalle fdd with (nolock) on fvf.Id_Documento=fdd.Id_Detalle
	inner join FUP_Documentos fd with (nolock) on fdd.id_documento=fd.id_documento
	where fd.folio=@folio           
        
    --delete from fup_valorinteger where id_documento in (        
    --select fdd.id_detalle from FUP_Documento_Detalle fdd with (nolock)  
    --inner join FUP_Documentos fd with (nolock) on fdd.Id_Documento=fd.Id_Documento  
    --where fd.folio=@folio       
    --)  
	
	delete fvi from fup_valorinteger fvi
	inner join FUP_Documento_Detalle fdd with (nolock) on fvi.Id_Documento=fdd.Id_Detalle
	inner join FUP_Documentos fd with (nolock) on fdd.id_documento=fd.id_documento
	where fd.folio=@folio        
        
    --delete from fup_valordate where id_documento in (        
    --select fdd.id_detalle from FUP_Documento_Detalle fdd with (nolock)  
    --inner join FUP_Documentos fd with (nolock) on fdd.Id_Documento=fd.Id_Documento  
    --where fd.folio=@folio       
    --) 
	
	delete fvd from fup_valordate fvd
	inner join FUP_Documento_Detalle fdd with (nolock) on fvd.Id_Documento=fdd.Id_Detalle
	inner join FUP_Documentos fd with (nolock) on fdd.id_documento=fd.id_documento
	where fd.folio=@folio       
        
    --delete from fup_valorlista where id_documento in (        
    --select fdd.id_detalle from FUP_Documento_Detalle fdd with (nolock)  
    --inner join FUP_Documentos fd with (nolock) on fdd.Id_Documento=fd.Id_Documento  
    --where fd.folio=@folio       
    --) 
	
	delete fvl from fup_valorlista fvl
	inner join FUP_Documento_Detalle fdd with (nolock) on fvl.Id_Documento=fdd.Id_Detalle
	inner join FUP_Documentos fd with (nolock) on fdd.id_documento=fd.id_documento
	where fd.folio=@folio        
        
    --delete from fup_valorsubcatalogo where id_documento in (        
    --select fdd.id_detalle from FUP_Documento_Detalle fdd with (nolock)  
    --inner join FUP_Documentos fd with (nolock) on fdd.Id_Documento=fd.Id_Documento  
    --where fd.folio=@folio  
    --)  
	
	delete fvs from fup_valorsubcatalogo fvs
	inner join FUP_Documento_Detalle fdd with (nolock) on fvs.Id_Documento=fdd.Id_Detalle
	inner join FUP_Documentos fd with (nolock) on fdd.id_documento=fd.id_documento
	where fd.folio=@folio         
        
    --delete from fup_cancelados where id_documento in (        
    --select fdd.id_documento from FUP_Documento_Detalle fdd with (nolock)  
    --inner join FUP_Documentos fd with (nolock) on fdd.Id_Documento=fd.Id_Documento  
    --where fd.folio=@folio   
    --)  
	
	delete fc from fup_cancelados fc        
    inner join FUP_Documentos fd with (nolock) on fc.Id_Documento=fd.Id_Documento  
    where fd.folio=@folio              
        
    --delete from fup_documento_detalle_mesacontrol where id_documento in (        
    --select id_documento from fup_documentos where folio in (@folio))   
   
    delete from fup_documento_detalle_mesacontrol where id_documento= @id_documento          
        
    --delete from fup_informacion_documentos where id_documento in (        
    --select id_documento from fup_documentos where folio in (@folio))  
   
    delete from fup_informacion_documentos where id_documento=@id_documento         
        
    --delete from fup_documento_detalle where id_documento in (        
    --select id_documento from fup_documentos where folio in (@folio))  
   
    delete from fup_documento_detalle where id_documento=@id_documento         
        
    delete from fup_documentos where folio in (@folio)      
    set @error=''1''    
    set @mensaje=''El folio ''+@folio +'' se eliminó correctamente.''      
   end        
  end    
      select @error as error,@mensaje as mensaje        
end '
GO

GO
PRINT N'Creating [dbo].[spf_InsertaEstatusAplicacion]'
GO
IF OBJECT_ID(N'[dbo].[spf_InsertaEstatusAplicacion]', 'P') IS NULL
EXEC sp_executesql N'CREATE procedure [dbo].[spf_InsertaEstatusAplicacion]                    
(                      
@idusuario as int,                                           
@tipo  as int                     
)
as
begin 
declare @tipo_loc as int=@tipo
declare @idusuario_loc as int=@idusuario
declare @fecha_modificacion as datetime=getdate()
if (@tipo_loc=1)
    begin 
         insert into LoghAplicacionInhabilitada (id_user,tipo,fecha,fecha_modificacion) select id_user,tipo,fecha,@fecha_modificacion from hAplicacionInhabilitada
         
         delete from hAplicacionInhabilitada
         
         insert into hAplicacionInhabilitada values (@idusuario_loc,1,@fecha_modificacion)
    end
else 
    begin 
         insert into LoghAplicacionInhabilitada (id_user,tipo,fecha,fecha_modificacion) select id_user,tipo,fecha,@fecha_modificacion from hAplicacionInhabilitada
         
         delete from hAplicacionInhabilitada
         
         insert into hAplicacionInhabilitada values (@idusuario_loc,0,@fecha_modificacion)
    end
end'
GO

GO
PRINT N'Creating [dbo].[tipoPago]'
GO
IF OBJECT_ID(N'[dbo].[tipoPago]', 'P') IS NULL
EXEC sp_executesql N'
CREATE PROCEDURE [dbo].[tipoPago]      
--WITH EXEC AS CALLER  
AS      
SET NOCOUNT ON
BEGIN    

	-- 112525
	select a.* into #plazas
	from SiaHoy a 
	inner join (
		select distinct curp from SiaHoy where Id_Emp > 0 and StatusPlaza in (''01'',''06'',''14'',''15'')
	)b on a.Curp = b.Curp

	--select * from #plazas
	--drop table #plazas

	UPDATE #plazas SET PLAZAf=''07''+SUBSTRING(PLAZAf,3,19) WHERE SUBSTRING(PLAZAf,1,2)=''14''
	UPDATE #plazas SET PLAZAf=''07''+SUBSTRING(PLAZAf,3,19) WHERE SUBSTRING(PLAZAf,1,2)=''15''


	select a.* into #plazas2
	from #plazas a
	inner join hplazas_concifed_230217 b on b.CODIGO_PLAZA=a.PlazaF

	--select * from #plazas2
	--drop table #plazas2

	-- 82734
	select treg.Descrip as Region,a.Des_Nivel as NE,a.CT,tmun.Des_mun_ct as Mun,tloc.descripcion as Loc,c.Direccion_CT,
	case when e.id_cod = 2 then ''Electrónico'' else ''Cheque'' end tipo_pago into #todo
	from #plazas2 a
	inner join (
		select curp,max(id_plaza) id_plaza from #plazas2  group by curp
	)b on a.curp = b.curp and a.id_plaza = b.id_plaza
	inner join TablaLongitudProp_28 c on a.id_nodo = c.id_nodo
	inner join Empleados e on a.Id_Emp = e.id_emp
	inner join RCT_Region rreg on a.id_nodo = rreg.id_nodo
	inner join TCT_Region treg on rreg.id_rel = treg.id_CT_Region
	inner join RCT_Municipios_ct rmun on a.id_nodo = rmun.id_nodo
	inner join TCT_Municipios_ct tmun on rmun.id_rel = tmun.id_Ct_Municipios_ct
	inner join RCT_Localidad rloc on a.id_nodo = rloc.id_nodo
	inner join TCT_Localidad tloc on rloc.id_rel = tloc.id_ct_localidad

	--select * from #todo
	--drop table #todo

	--11701
	select Region,NE AS NED,CT,Mun,Loc,Direccion_CT,Num_Empleados,Num_Electronicos,Num_Cheque from (
		select x.*,case when y.Empleados is null then 0 else y.Empleados end as Num_Empleados,
		case when y2.Electronico is null then 0 else y2.Electronico end as Num_Electronicos,
		case when y3.cheque is null then 0 else y3.cheque end as Num_Cheque from #todo x
		inner join (
			select CT,count(*) as Empleados from #todo group by CT
		)y on x.CT = y.ct
		left join (
			select CT,count(*) as Electronico from #todo where tipo_pago = ''Electrónico'' group by CT
		)y2 on x.CT = y2.ct
		left join (
			select CT,count(*) as cheque from #todo where tipo_pago = ''Cheque'' group by CT
		)y3 on x.CT = y3.ct
	)tota group by Region,NE,CT,Mun,Loc,Direccion_CT,Num_Empleados,Num_Electronicos,Num_Cheque
END
	'
GO

GO
PRINT N'Creating [dbo].[spu_TraspasaPagoReproceso]'
GO
IF OBJECT_ID(N'[dbo].[spu_TraspasaPagoReproceso]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		Noe Ramirez Ramos
-- Create date: 09/03/2016
-- Description:	Traspasa el pago a el periodo para poder reajustar el pago
-- =============================================
CREATE PROCEDURE [dbo].[spu_TraspasaPagoReproceso]
	-- Add the parameters for the stored procedure here
	@id_emp int,@id_plaza int,@id_referencia int,@id_periodo int,@id_periodorepro int
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
  declare @idemp int = @id_emp
  declare @idplaza int = @id_plaza
  declare @referencia int = @id_referencia
  declare @idperiodo int = @id_periodo
  declare @idperiodorepro int = @id_periodorepro

  BEGIN TRY
    if ((select 1 from pagosReproceso where id_emp = @idemp and id_plaza = @idplaza and id_referencia = @referencia and id_periodo = @idperiodo and id_periodoreproceso = @idperiodorepro and Activo = 1 and pasoReproceso = 0) = 1)
    begin
      insert into Nom_HistpagosPasoReproceso
      select * from Nom_histpagos where Id_Periodo = @idperiodo and id_referencia = @referencia and id_emp = @idemp and id_plaza = @idplaza
      insert into HistpagosDetalleReproceso
      select * from histpagosdetalle where Id_Periodo = @idperiodo and id_referencia = @referencia and id_emp = @idemp and id_plaza = @idplaza    
      insert into HistPagos (Id_Emp, Id_Periodo, id_concepto, Consecutivo, Horas, Pesos, Id_categ, Fecha, PesosExcento, C_costo, id_plaza, Id_Referencia, id_periodoPago, Id_ProcesoNomina, Desde, Hasta)
      select Id_Emp, @idperiodorepro Id_Periodo, id_concepto, Consecutivo, Horas, Pesos,0 Id_categ, Fecha, PesosExcento, cc, id_plaza, Id_Referencia, id_periodoPago, Id_ProcesoNomina, Desde, Hasta 
      from Nom_histpagos where Id_Periodo = @idperiodo and id_referencia = @referencia and id_emp = @idemp and id_plaza = @idplaza   
      delete from Nom_histpagos where Id_Periodo = @idperiodo and id_referencia = @referencia and id_emp = @idemp and id_plaza = @idplaza    
      update histpagosdetalle set id_periodo = @idperiodorepro where Id_Periodo = @idperiodo and id_referencia = @referencia and id_emp = @idemp and id_plaza = @idplaza    
      update pagosReproceso set pasoReproceso = 1 where id_emp = @idemp and id_plaza = @idplaza and id_referencia = @referencia and id_periodo = @idperiodo and id_periodoreproceso = @idperiodorepro and Activo = 1 and pasoReproceso = 0    
    end
  	if @@rowcount<1 
  		RAISERROR (''No se termino el traspaso a reproceso.'', 16,1);
  	else
  		select ''CORRECTO'' as resultado   
  END TRY
  BEGIN CATCH
      SELECT ERROR_MESSAGE() as resultado
  END CATCH;
END'
GO

GO
PRINT N'Creating [dbo].[TEST]'
GO
IF OBJECT_ID(N'[dbo].[TEST]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[TEST]
(
	@numeroInicial int,
	@parcialInicial int,
	@anioInicial int,
    
    @numeroFinal int,
	@parcialFinal int,
	@anioFinal int,
    @isUpnOBasica varchar(6),
    @idEmpleado int
)
AS	
BEGIN
	DECLARE @idPeriodo int
	DECLARE @idEmp int
	DECLARE @total float
	DECLARE @descripcion varchar (100)
	DECLARE @nombre varchar (200)    
    DECLARE @quincena varchar (20)
    DECLARE @idPlaza int
    
    
    DECLARE @idRel int
    DECLARE @descripcionTabulador varchar (200)
    
    
    DECLARE @nError    int
    --Tabla temporal
    DECLARE @temptable TABLE (idPeriodo int,idEmp int,total float,descripcion varchar (100),nombre varchar (200),descripcionTabulador varchar (200),quincena varchar (20))
    SELECT @nError = 0
    
  	-- Primer cursor para obtener las tablas de la bd origen.            	
    IF ((@idEmpleado IS  NULL)OR(@idEmpleado = 0))
    BEGIN	
        DECLARE pagos CURSOR FOR 
        SELECT T1.*,E.Nombre+'' ''+E.ApPaterno+'' ''+E.ApMaterno AS NOMBRE,''Quincena # ''+CAST (CN.Numero AS VARCHAR (4)) AS quincena FROM 
    	(
    		SELECT Id_Periodo,Id_Emp,TotalDeducciones AS TOTAL, CAST(''DEDUCCIONES'' as NVARCHAR(20))AS DESCRIPCION from QDeducciones
			union	
			select Id_Periodo,Id_Emp,TotalPercepciones AS TOTAL, CAST(''PERCEPCIONES'' as NVARCHAR(20))AS DESCRIPCION from QPercepciones
			union
			select Id_Periodo,Id_Emp,Neto AS TOTAL, CAST(''LIQUIDO'' as NVARCHAR(20))AS DESCRIPCION from QNeto        
	    ) AS T1
    	INNER JOIN Empleados E ON E.Id_Emp=T1.Id_Emp 
        INNER JOIN CalenNomina CN ON CN.Id_Periodo=T1.Id_Periodo          
	    WHERE T1.id_periodo IN (SELECT id_periodo FROM dbo.CalenNomina WHERE  (numero BETWEEN @numeroInicial AND @numeroFinal) AND (parcial BETWEEN @parcialInicial AND @parcialFinal) AND (año BETWEEN @anioInicial AND @anioFinal))             
    END ELSE
    BEGIN	
        DECLARE pagos CURSOR FOR 
        SELECT T1.*,E.Nombre+'' ''+E.ApPaterno+'' ''+E.ApPaterno AS NOMBRE,''Quincena # ''+CAST (CN.Numero AS VARCHAR (4)) AS quincena FROM 
    	(
    		SELECT Id_Periodo,Id_Emp,TotalDeducciones AS TOTAL, CAST(''DEDUCCIONES'' as NVARCHAR(20))AS DESCRIPCION from QDeducciones
			union	
			select Id_Periodo,Id_Emp,TotalPercepciones AS TOTAL, CAST(''PERCEPCIONES'' as NVARCHAR(20))AS DESCRIPCION from QPercepciones
			union
			select Id_Periodo,Id_Emp,Neto AS TOTAL, CAST(''LIQUIDO'' as NVARCHAR(20))AS DESCRIPCION from QNeto        
	    ) AS T1
    	INNER JOIN Empleados E ON E.Id_Emp=T1.Id_Emp 
        INNER JOIN CalenNomina CN ON CN.Id_Periodo=T1.Id_Periodo          
	    WHERE T1.id_periodo IN (SELECT id_periodo FROM dbo.CalenNomina WHERE  (numero BETWEEN @numeroInicial AND @numeroFinal) AND (parcial BETWEEN @parcialInicial AND @parcialFinal) AND (año BETWEEN @anioInicial AND @anioFinal))             
        AND T1.Id_Emp=@idEmpleado
    END   
    OPEN pagos
   	FETCH NEXT FROM pagos INTO @idPeriodo,@idEmp,@total,@descripcion,@nombre,@quincena
   	WHILE @@Fetch_Status = 0  
   	BEGIN    	    	
    	IF (@isUpnOBasica = ''UPN'')
	    BEGIN
    	    --Obtengo la última plaza asiganada al empleado
        	SET @idPlaza = (SELECT MAX(Id_plaza) AS Id_plaza FROM PlazaEmpleados WHERE Id_Emp=@idEmp AND (id_nodo = 7883 OR id_nodo = 7884 OR id_nodo = 7885))
        END ELSE IF (@isUpnOBasica = ''BASICA'')
    	BEGIN
    		--Obtengo la última plaza asiganada al empleado
        	SET @idPlaza = (SELECT MAX(Id_plaza) AS Id_plaza FROM PlazaEmpleados WHERE Id_Emp=@idEmp AND (id_nodo <> 7883 AND id_nodo <> 7884 AND id_nodo <> 7885))
    	END
        --Obtengo la plaza que haya sido dada de alta al último
        SET @idRel = (SELECT a.id_rel FROM HTabulador_SE_Cat_Puesto a 
		INNER JOIN ( 
		SELECT id_plaza,MAX(fecha) AS maximo FROM  HTabulador_SE_Cat_Puesto 
 		GROUP BY id_plaza ) b ON  
		a.id_plaza = b.id_plaza AND a.fecha = b.maximo WHERE a.id_plaza = @idPlaza)
        --Obtengo la descripción del tabulador
		SET @descripcionTabulador = (SELECT descripcion FROM TTabulador_SE_Cat_Puesto WHERE id_Tabulador_SE_Cat_Puesto=@idRel)
        IF (@descripcionTabulador <> '''')
        BEGIN
    	    ---Inserto en mi tabla temporal
	        INSERT @temptable(idPeriodo,idEmp,total,descripcion,nombre,descripcionTabulador,quincena)VALUES(@idPeriodo,@idEmp,@total,@descripcion,@nombre,@descripcionTabulador,@quincena)
        END
    	FETCH NEXT FROM pagos INTO @idPeriodo,@idEmp,@total,@descripcion,@nombre,@quincena
    END    
    CLOSE pagos
    Deallocate pagos 
    SELECT * FROM @temptable 
    Fin:
	RETURN @nError    
END
'
GO

GO
PRINT N'Creating [dbo].[spTrasfiereRecalculoOk]'
GO
IF OBJECT_ID(N'[dbo].[spTrasfiereRecalculoOk]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		NRamirez
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spTrasfiereRecalculoOk]
@idPlaza int, @idEmp int, @idPeriodo int, @idRecalculo int
WITH EXEC AS CALLER
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
    
  declare @id_plaza int = @idPlaza
  declare @id_Emp int = @idEmp
  declare @id_Periodo int = @idPeriodo
  declare @id_Recalculo int = @idRecalculo
  
	
	BEGIN TRY
		update  h set h.id_periodo = 1406 
		from histpagos h
		where h.id_periodo= @id_Periodo and h.id_Emp= @id_Emp -- and h.id_plaza= @id_plaza and h.Id_Referencia = @id_Recalculo

		update  h set h.id_periodo=1406 
		from histpagosdetalle h
		where  h.id_periodo= @id_Periodo and h.id_Emp= @id_Emp -- and h.id_plaza= @id_plaza and h.Id_Referencia = @id_Recalculo


		if @@rowcount<1 
			RAISERROR (''no se actualizó ningun valor'', 16,1);
		else
			select ''correcto'' as resultado
	END TRY
	BEGIN CATCH
		SELECT ERROR_MESSAGE() as resultado
	    
	END CATCH;

	
END'
GO

GO
PRINT N'Creating [dbo].[trasfiereHastaTEmpleadoHistpagos]'
GO
IF OBJECT_ID(N'[dbo].[trasfiereHastaTEmpleadoHistpagos]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		<LI. Noé Ramérez Ramos>
-- Create date: <11/10/2013>
-- Description:	<Trasfiere el hasta de TTEmpleado_plaza_conc a histpagos>
-- =============================================
CREATE PROCEDURE [dbo].[trasfiereHastaTEmpleadoHistpagos]
	-- Add the parameters for the stored procedure here
	 @idperiodo int
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
    update h set h.hasta = pr.hasta
	from HistPagos h 
	inner join (
	  select tt.Id_Emp, tt.NoPlaza, p.Id_plaza, tt.NoConcepto, tt.Monto, tt.FechaFin, dbo.fechaToAnioQuincena(tt.fechafin) as hasta 
	  from TTEmpleado_Plaza_Conc tt 
	  inner join Plazas p on p.Num_Plaza = tt.NoPlaza
	  where tt.Tvigencia_id_vigencia = 1
	  and tt.Fecha <= (select FechaIni from CalenNomina where Id_Periodo = @idperiodo) and tt.FechaFin >= (select FechaFin from CalenNomina where Id_Periodo = @idperiodo)
	) pr on h.Id_Emp = pr.Id_Emp and h.id_concepto = pr.NoConcepto and h.id_plaza = pr.Id_plaza and h.pesos = pr.Monto
	where h.Id_Periodo = @idperiodo


END
'
GO

GO
PRINT N'Creating [dbo].[SP_GenEnca]'
GO
IF OBJECT_ID(N'[dbo].[SP_GenEnca]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[SP_GenEnca] 
	-- Add the parameters for the stored procedure here
	@IDPERIODO INT = 0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
   select b.resultado as concepto,b.tipo as perded,d.plazaieepo,a.* into #TMPCTO from histpagos_Agrupadores a  
            inner join conceptos b on a.id_concepto=b.id_concepto inner join plazaieepo d 
            on a.id_plaza=d.id_plaza inner join calennomina e on a.id_periodo=e.id_periodo  
            where a.id_agrupperiodos=@IDPERIODO 
            and a.id_concepto in (1510,1518,1520,1521,1565,1566,1568,1578,1579,1580,1581,1582,1583,1584,2314,2315,2316,2404,2408,2409,2419,2448,2458,2465,2475,2478,2480,2482,2484, 3075, 3076) 
            order by a.id_plaza, a.Id_Emp, a.Id_Periodo, b.resultado 
    
	select distinct e.leyenda4 as tippag, pt1.UDP as ud,f.id_nodo,g.clave,c.rfc as filiacio, C.CURP, c.Id_cod ,
  (c.appaterno + '' ''+c.apmaterno +'' ''+ c.nombre) as Pnombre,d.plazaieepo,substring(d.plazaieepo,7,6) as puesto,
  a.id_periodo, a.id_emp, a.id_plaza, a.id_agrupperiodos, 
  cast( year(a1.Fecha_Alta_SEP) as varchar) + ''''+ Right(''00'' + Cast(case when(day(a1.Fecha_Alta_SEP)>15)then month(a1.Fecha_Alta_SEP)*2 else (month(a1.Fecha_Alta_SEP)*2)-1 end as Varchar(2)),2) as ingsep,
  cast( year(e.FechaIniPago) as varchar) + ''''+ Right(''00'' + Cast(case when(day(e.FechaIniPago)>15)then month(e.FechaIniPago)*2 else (month(e.FechaIniPago)*2)-1 end as Varchar(2)),2) as qnapago, 
  a2.Folio  as cheque into #TMPNOM from histpagos_Agrupadores a  
            inner join empleados c on a.id_emp=c.id_emp and c.Id_Cia = 1  inner join plazaieepo d 
            on a.id_plaza=d.id_plaza 
            inner join 
            (select MAX(Movimiento) as movimiento,id_emp, max(Fecha_Alta_SEP) as fecha_alta_sep 
from HFecha_Alta_SEP where  Fecha  <= getdate()
group by HFecha_Alta_SEP.id_emp )a1
            on a1.id_emp = c.id_emp 
            inner join calennomina e on a.id_periodo=e.id_periodo inner join (select p.id_plaza,p.id_nodo from   
                  plazaempleados p inner join  (select id_plaza,Max(Fecha) as FechaMax, Max(Movimiento) as MovMax   
                   from plazaEmpleados  where fecha <= getdate()  group by id_plaza ) hp  
                  on p.id_plaza = hp.id_plaza and hp.MovMax = p.Movimiento and hp.FechaMax = p.Fecha) f on a.id_plaza=f.id_plaza 
            inner join vistatablalongitud g on f.id_nodo=g.id_nodo 
            inner join TablaLongitudProp_28  pt1 on pt1.id_nodo = g.Id_Nodo            
            inner join folio_recibos a2 on a1.id_emp = a2.Id_Emp 
                       and a.id_plaza =a2.Id_Plaza and a.Id_Periodo = a2.Id_Periodo and a2.Id_Recibo = 14              
            where a.id_agrupperiodos=@IDPERIODO  
            order by g.Clave, c.rfc, d.PlazaIEEPO,  e.leyenda4

  --select TOp 1 a.Id_plaza, Right(''00'' + cast(a.Valor_IdCampo as varchar(2)),2) estatus, b.Valor_IdCampo motivo, a.fecha fecha INTO #TMPSTA from (select * from hplazas where Id_TipoMovPlazas = 2) a 
  --left join (select * from hplazas where Id_TipoMovPlazas = 1) b on a.Fecha = b.Fecha  and a.Id_plaza = b.Id_plaza
  --where a.Id_plaza in (SELECT DISTINCT Id_plaza FROM #TMPNOM) and a.Fecha  <= getdate()

select MAX(fecha) as maxFecha,id_plaza, 
Right(''00'' + cast((select valor_idcampo from hplazas b where b.Id_plaza=hplazas.id_plaza and  b.Fecha= MAX(hplazas.fecha) and id_tipomovplazas=1)  as varchar(2)),2) as motivo
,Right(''00'' + cast((select valor_idcampo from hplazas b where b.Id_plaza=hplazas.id_plaza and  b.Fecha= MAX(hplazas.fecha) and id_tipomovplazas=2)as varchar(2)),2) as status
into #TMPSTA from HPlazas where  Fecha  <= getdate()
group by hplazas.id_plaza

SELECT distinct #TMPNOM.*, #TMPSTA.*  FROM #TMPNOM JOIN #TMPSTA ON  #TMPNOM.id_plaza = #TMPSTA.Id_plaza
INNER JOIN #TMPCTO ON #TMPNOM.id_plaza = #TMPCTO.id_plaza   



END
'
GO

GO
PRINT N'Creating [dbo].[spdHistPagosDetalle]'
GO
IF OBJECT_ID(N'[dbo].[spdHistPagosDetalle]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		wcahun
-- Create date: 10/10/2013
-- Description:	procedimiento para eliminar un concepto histpagos detalle  base a su periodo
-- =============================================
CREATE PROCEDURE [dbo].[spdHistPagosDetalle]
	@id_plaza int
	,@id_emp int
	,@id_periodo int
	,@id_recalculo int
	,@periodos varchar(1000)
	,@id_concepto int
	,@id_plazapago int
AS
BEGIN

DECLARE @Xml AS XML        
		--Se crean los nodos periodo
		SET @Xml = ''<periodo>'' + REPLACE(@periodos, '','', ''</periodo><periodo>'') + ''</periodo>'';


BEGIN TRY

	delete from histpagosdetalle
	where ID_PERIODO=@id_periodo and id_referencia=@id_recalculo
	and id_plaza=@id_plaza and id_emp=@id_emp
	and id_concepto=@id_concepto and id_periodopago IN (SELECT periodos.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodos(n))
	and id_plazapago=@id_plazapago
	
	if @@rowcount<1 
		RAISERROR (''no se elimino ningun valor'', 16,1);
	else
		select ''correcto'' as resultado
END TRY
BEGIN CATCH
    SELECT ERROR_MESSAGE() as resultado
    
END CATCH;


END

'
GO

GO
PRINT N'Creating [dbo].[sp_saycop_cap_pension_informados]'
GO
IF OBJECT_ID(N'[dbo].[sp_saycop_cap_pension_informados]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROC [dbo].[sp_saycop_cap_pension_informados]
@qna varchar(6),
@tiponom varchar(3),
@idcia int 
AS
set @idcia = case 
                when @tiponom = ''UPN'' then 1
                when @tiponom = ''BAS'' then 2
                when @tiponom = ''MM'' then 3
              end
              
select distinct s.id_Saycop, s.id_Emp, e.RFC, rtrim(e.Nombre) +'' ''+ rtrim(e.ApPaterno) +'' ''+ rtrim(e.ApMaterno) as NOMBRE, 
h.id_beneficiario, t.RFC as RFC_BENEF, t.Nombre +'' ''+ t.ApPaterno +'' ''+ t.ApMaterno as BENEFICIARIO 
from Saycop s 
inner join Empleados e on s.id_Emp = e.Id_Emp
inner join HBeneficiario h on s.id_Emp = h.id_emp
inner join TBeneficiario t on h.id_beneficiario = t.id_Beneficiario
inner join  saycop_conceptos sc on sc.id_saycop = s.id_saycop
join conceptos c on  c.id_concepto = sc.id_concepto  
where  exists (select id_concepto from conceptos where id_concepto in (3063,3069,2526,3064,2486,2523,2475,2524) )and s.id_periodo in (
select id_periodo from CalenNomina where Año = cast(substring(@qna,1,4) as int) and numero = cast(substring(@qna,5,2) as int) and Parcial >= 40 and e.id_cia =@idcia
)'
GO

GO
PRINT N'Creating [dbo].[spf_Inserta_Concepto_Normales]'
GO
IF OBJECT_ID(N'[dbo].[spf_Inserta_Concepto_Normales]', 'P') IS NULL
EXEC sp_executesql N'CREATE procedure [dbo].[spf_Inserta_Concepto_Normales]                           
(                                         
@id_documento  as int,         
@accion as bit                            
) as         
Begin        
--- Declaracion de variables que se utilizaran en el proceso        
declare @id_documento_loc as int =@id_documento    
declare @accion_loc as bit=@accion    
declare @idEmpleado as int        
declare @tipo as varchar(5)        
declare @motivo as varchar(5)        
declare @idPlaza as int        
declare @desde as datetime        
declare @modelo_basico as int        
declare @modelo_homologados as int      
declare @altas_homologados as int        
declare @plaza_mayorvalor as int         
declare @plaza_existen_conceptos as int        
declare @procede as int        
declare @id_usuario as int        
    
set @idEmpleado=(select id_emp from fup_documentos where id_documento=@id_documento_loc)-- se obtiene el id del empleado para el folio que se va a procesar        
set @id_usuario=(select id_usuario from fup_documentos where id_documento=@id_documento_loc)-- se obtiene el id del usuario que capturo el folio        
set @modelo_basico=(select count(ttcp.TModelo_SE_id_Modelo_SE) from fup_documento_detalle fdd   
    inner join fup_documentos fd on fd.id_documento=fdd.id_documento       
    inner join FUP_MotivoMovimiento fmm on fdd.id_motivomovimiento=fmm.id_motivomovimiento        
    inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento        
    inner join HTabulador_SE_Cat_Puesto htcp on fdd.id_plaza=htcp.id_plaza        
    inner join TTabulador_SE_Cat_Puesto ttcp on htcp.id_rel=ttcp.id_Tabulador_SE_Cat_Puesto        
    inner join plazaieepo pi on fdd.Id_Plaza = pi.Id_plaza        
    where --fdd.id_documento=@id_documento_loc --se modifico el filtro porque luego se capturan las bajas en diferente folio --fecha 21/08/2018  
 fd.id_emp=@idEmpleado  
 and ftm.Id_TipoMovimiento in (4,8) and fmm.Id_MotivoMovimiento in (25,26,32,33)        
    and ttcp.TModelo_SE_id_Modelo_SE in (1,3,4))--- En la variable @modelo_basico se almacena un valor si existe baja por promocion del nivel básico        
          
   set @modelo_homologados=(select count(ttcp.TModelo_SE_id_Modelo_SE) from fup_documento_detalle fdd   
   inner join fup_documentos fd on fd.id_documento=fdd.id_documento       
   inner join FUP_MotivoMovimiento fmm on fdd.id_motivomovimiento=fmm.id_motivomovimiento        
   inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento        
   inner join HTabulador_SE_Cat_Puesto htcp on fdd.id_plaza=htcp.id_plaza        
   inner join TTabulador_SE_Cat_Puesto ttcp on htcp.id_rel=ttcp.id_Tabulador_SE_Cat_Puesto        
   inner join plazaieepo pi on fdd.Id_Plaza = pi.Id_plaza        
   where --fdd.id_documento=@id_documento_loc --se modifico el filtro porque luego se capturan las bajas en diferente folio -- fecha 21/08/2018  
   fd.id_emp=@idEmpleado  
   and ftm.Id_TipoMovimiento in (4,8) and fmm.Id_MotivoMovimiento in (25,26,32,33)        
   and ttcp.TModelo_SE_id_Modelo_SE in (2,5,6,9))--- En la variable @modelo_homologados se almacena un valor si existe baja por promocion de los modelos         
    
 --- \-NORMALES ADMINISTRATIVOS        
 --- I-CAPACITACION Y MEJORAMIENTO DOCENTE        
 --- H-NORMALES DOCENTES        
 --- R-CAPACITACION Y MEJORAMIENTO ADMINISTRATIVO                       
    
 set @altas_homologados=(select count(pla.num_plaza) from fup_documento_detalle fdd        
 inner join FUP_MotivoMovimiento fmm on fdd.id_motivomovimiento=fmm.id_motivomovimiento        
 inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento        
 inner join HTabulador_SE_Cat_Puesto htcp on fdd.id_plaza=htcp.id_plaza        
 inner join TTabulador_SE_Cat_Puesto ttcp on htcp.id_rel=ttcp.id_Tabulador_SE_Cat_Puesto        
 inner join plazaieepo pi on fdd.Id_Plaza = pi.Id_plaza        
 inner join plazas pla on pi.id_plaza=pla.id_plaza        
 where fdd.Id_Documento=@id_documento_loc and ftm.id_tipomovimiento in (4,8) and        
 fmm.Id_MotivoMovimiento in (11,12,119,120)  and fmm.clave in (''10'',''95'')        
 and ttcp.Hrs_Compatibilidad=(select max(hrs_compatibilidad) from TTabulador_SE_Cat_Puesto        
 where id_Tabulador_SE_Cat_Puesto in (select id_rel from HTabulador_SE_Cat_Puesto where id_plaza in (    
    select id_plaza from fup_documento_detalle where id_documento=@id_documento_loc))    
    )and ttcp.TModelo_SE_id_Modelo_SE in (2,5,6,9))      
    
 set @tipo =(select distinct ftm.clave from fup_documento_detalle fdd        
             inner join FUP_MotivoMovimiento fmm on fdd.id_motivomovimiento=fmm.id_motivomovimiento        
    inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento        
    where fdd.id_documento=@id_documento_loc and ftm.id_tipomovimiento in (4,8) and        
    fmm.Id_MotivoMovimiento in (1,2,5,11,12,119,120)  and fmm.clave in (''10'',''95'')        
    )--- En la variable @tipo se almacena la clave del tipo de movimiento de promocion        
    --- si es docente o administrativa        
      
    if (@accion_loc=0) --- Si la accion es igual a 0 se realiza el hacer        
            begin        
    if (( @modelo_basico>0 or @modelo_homologados>0) and @altas_homologados>0  and @tipo in (''10'',''05''))     
     --- SI existe una baja del modelo basico, no hay bajas de los modelos que se almacenan en la variable    
     --- @modelo_homologados y el tipo de movimiento es administrtivo o docente y tiene altas del modelo de homolagos entra al if        
     begin        
           set @plaza_existen_conceptos=(select count( tt.NoPlaza) from HTabulador_SE_Cat_Puesto ht        
                                      inner join plazas p on ht.id_plaza=p.id_plaza        
              inner join TTEmpleado_Plaza_Conc tt on p.num_plaza=tt.NoPlaza        
              inner join TTabulador_SE_Cat_Puesto tts on ht.id_rel=tts.id_Tabulador_SE_Cat_Puesto        
              inner join conceptos c on tt.NoConcepto=c.id_concepto        
              where tt.NoConcepto in (1306,1558) and tt.id_emp=@idEmpleado and tts.TModelo_SE_id_Modelo_SE in (2,5,6,9)  
     --se agrega validacion para no contemplar las plazas que tuvieron una baja  
     and p.id_plaza not in (       
       select fdd.id_plaza from fup_documentos fd   
    inner join fup_documento_detalle fdd on fdd.id_documento=fd.id_documento  
    inner join fup_motivomovimiento fmm on fdd.id_motivomovimiento=fmm.id_motivomovimiento  
    inner join fup_tipomovimiento ftm on ftm.id_tipomovimiento=fmm.id_tipomovimiento  
    where fd.id_emp=@idEmpleado and ftm.id_tipomovimiento in (4,6,7,8) and fdd.id_motivomovimiento not in (11,12,119,20))  
              )--se agrega validacion para no tomar en cuenta las plazas que tuvieron baja de cualquier tipo  
     --- En la variable @plaza_existen_conceptos se almacena la plaza en caso de que el empleado ya tenga los conceptos        
                                       
                       set @plaza_mayorvalor=(select top 1 pla.num_plaza from fup_documento_detalle fdd        
                               inner join FUP_MotivoMovimiento fmm on fdd.id_motivomovimiento=fmm.id_motivomovimiento        
             inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento        
             inner join HTabulador_SE_Cat_Puesto htcp on fdd.id_plaza=htcp.id_plaza        
             inner join TTabulador_SE_Cat_Puesto ttcp on htcp.id_rel=ttcp.id_Tabulador_SE_Cat_Puesto        
             inner join plazaieepo pi on fdd.Id_Plaza = pi.Id_plaza        
             inner join plazas pla on pi.id_plaza=pla.id_plaza        
             where fdd.Id_Documento=@id_documento_loc and ftm.id_tipomovimiento in (4,8) and        
             fmm.Id_MotivoMovimiento in (11,12,119,120)  and fmm.clave in (''10'',''95'')        
             and ttcp.Hrs_Compatibilidad=(select max(hrs_compatibilidad) from TTabulador_SE_Cat_Puesto        
             where id_Tabulador_SE_Cat_Puesto in (select id_rel from HTabulador_SE_Cat_Puesto where id_plaza in         
             (select id_plaza from fup_documento_detalle where id_documento=@id_documento_loc)        
             ) and ttcp.TModelo_SE_id_Modelo_SE in (2,5,6,9))        
             ) --- En la variable @plaza_mayorvalor se almacena la plaza de mayor valor (Cuando en la promocion le asignan mas de 1 plaza)                                                   
    
        set @desde= (select distinct fdd.fechaini from fup_documento_detalle fdd        
        inner join FUP_MotivoMovimiento fmm on fdd.id_motivomovimiento=fmm.id_motivomovimiento        
        inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento        
        inner join HTabulador_SE_Cat_Puesto htcp on fdd.id_plaza=htcp.id_plaza        
        inner join TTabulador_SE_Cat_Puesto ttcp on htcp.id_rel=ttcp.id_Tabulador_SE_Cat_Puesto        
        inner join plazaieepo pi on fdd.Id_Plaza = pi.Id_plaza        
        inner join plazas pla on pi.id_plaza=pla.id_plaza        
        where fdd.Id_Documento=@id_documento_loc and ftm.id_tipomovimiento in (4,8) and        
        fmm.Id_MotivoMovimiento in (11,12,119,120)  and fmm.clave in (''10'',''95'')        
        and ttcp.Hrs_Compatibilidad=(select max(hrs_compatibilidad) from TTabulador_SE_Cat_Puesto        
        where id_Tabulador_SE_Cat_Puesto in (select id_rel from HTabulador_SE_Cat_Puesto where id_plaza in         
        (select id_plaza from fup_documento_detalle where id_documento=@id_documento_loc)        
        ) and ttcp.TModelo_SE_id_Modelo_SE in (2,5,6,9))        
        ) --- En la variable @desde se almacena el desde del movimiento de la promocion de la plaza de mayor valor        
    
 if (@altas_homologados >0) --- Si el empleado ya tiene los conceptos, no se inserta, se asigna el valor 0 a la variable @procede        
    begin        
    --set  @procede=0        
    if (@plaza_existen_conceptos>0)      
       begin      
        set @procede=0      
    end      
       else       
          begin                 
               insert into TTEmpleado_Plaza_Conc (        
               consecutivo,descripcion,NoPlaza,NoConcepto        
      ,Monto,FechaFin,Tvigencia_id_vigencia,NoEmp_rel,usuario        
      ,Movimiento,Fecha,Id_Emp,TTipo_Captura_id_Tipo_Captura        
      ,id_periodopago,Id_Documento)     
      VALUES (0             -- consecutivo - int        
                       ,''HT''            -- descripcion - varchar(60)        
                       , @plaza_mayorvalor                -- NoPlaza - int        
        ,1558             -- NoConcepto - int        
        ,71.87                  -- Monto - float        
        ,''9999-12-31 23:59:00''               -- FechaFin - datetime        
        ,1   -- Tvigencia_id_vigencia - int        
        ,@idEmpleado              -- NoEmp_rel - int        
        ,@id_usuario                -- usuario - smallint        
        ,getdate()             -- Movimiento - datetime        
        ,@desde                   -- Fecha - datetime        
        ,@idEmpleado                    -- Id_Emp - int        
        ,0  -- TTipo_Captura_id_Tipo_Captura - int        
        ,0          -- id_periodopago - int        
        ,@id_documento_loc            -- Id_Documento - int        
        )        
    
               insert into TTEmpleado_Plaza_Conc (        
               consecutivo,descripcion,NoPlaza,NoConcepto,Monto,FechaFin,Tvigencia_id_vigencia,NoEmp_rel,usuario        
      ,Movimiento,Fecha,Id_Emp,TTipo_Captura_id_Tipo_Captura,id_periodopago,Id_Documento        
      )     
      VALUES (0           -- consecutivo - int        
              ,''38''             -- descripcion - varchar(60)        
        , @plaza_mayorvalor                -- NoPlaza - int        
        ,1306          -- NoConcepto - int        
        ,627.5--545.5--385.5                   -- Monto - float        
        ,''9999-12-31 23:59:00''              -- FechaFin - datetime        
        ,1  -- Tvigencia_id_vigencia - int        
        ,@idEmpleado              -- NoEmp_rel - int        
        ,@id_usuario                -- usuario - smallint        
        ,getdate()             -- Movimiento - datetime        
        ,@desde                  -- Fecha - datetime        
        ,@idEmpleado                    -- Id_Emp - int        
        ,0  -- TTipo_Captura_id_Tipo_Captura - int        
        ,0          -- id_periodopago - int        
        ,@id_documento_loc            -- Id_Documento - int        
        )      
    end      
    end      
       else                             --- Si el empleado no tiene los conceptos, se inserta, se utilizan algunos valores de las variables declaradas anteriormente.        
          begin      
               set @procede=0      
          end          
  end       
end-- Fin del hacer        
  else      -- En caso de que la accion sea diferente de 0 se deshace lo insertado para el empleado, plaza y id_documento del folio        
          begin        
               delete from ttempleado_plaza_conc where id_emp=@idEmpleado and noconcepto in (1306,1558) and id_documento=@id_documento_loc        
          end        
end






'
GO

GO
PRINT N'Creating [dbo].[sp_saycop_cap_pension_no_informados]'
GO
IF OBJECT_ID(N'[dbo].[sp_saycop_cap_pension_no_informados]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROC [dbo].[sp_saycop_cap_pension_no_informados]
@qna varchar(6),
@tiponom varchar(3),
@idcia int 
AS
set @idcia = case 
                when @tiponom = ''UPN'' then 1
                when @tiponom = ''BAS'' then 2
                when @tiponom = ''MM'' then 3
              end
              
select distinct s.id_Saycop, s.id_Emp, e.RFC, rtrim(e.Nombre) +'' ''+ rtrim(e.ApPaterno) +'' ''+ rtrim(e.ApMaterno) as NOMBRE, 
h.id_beneficiario, t.RFC as RFC_BENEF, t.Nombre +'' ''+ t.ApPaterno +'' ''+ t.ApMaterno as BENEFICIARIO 
from Saycop s 
inner join Empleados e on s.id_Emp = e.Id_Emp
inner join HBeneficiario h on s.id_Emp = h.id_emp
inner join TBeneficiario t on h.id_beneficiario = t.id_Beneficiario
inner join  saycop_conceptos sc on sc.id_saycop = s.id_saycop
join conceptos c on  c.id_concepto = sc.id_concepto  
where not  exists (select id_concepto from conceptos where id_concepto in (3063,3069,2526,3064,2486,2523,2475,2524) )and s.id_periodo in (
select id_periodo from CalenNomina where Año = cast(substring(@qna,1,4) as int) and numero = cast(substring(@qna,5,2) as int) and Parcial >= 40 and e.id_cia =@idcia
)'
GO

GO
PRINT N'Creating [dbo].[SP_CompruebaRetrosDivididosEnNegativo]'
GO
IF OBJECT_ID(N'[dbo].[SP_CompruebaRetrosDivididosEnNegativo]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		Noe Ramirez
-- Create date: 22/04/2015
-- Description:	Comprueba que los retros al dividirlos no se vallan a negativo
-- =============================================
CREATE PROCEDURE [dbo].[SP_CompruebaRetrosDivididosEnNegativo]
@periodoOrigen1 int, @periodo20141 int, @periodo20151 int
WITH EXEC AS CALLER
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	declare @periodoOrigen int
	declare @periodo2014 int
	declare @periodo2015 int

	set @periodoOrigen = @periodoOrigen1
	set @periodo2014 = @periodo20141
	set @periodo2015 = @periodo20151


	-- Elimina tabla de paso

	if exists (select * from sys.objects where [name] = ''xxxx_DivideRetros'' and [type] = ''u'')
	  drop table xxxx_DivideRetros
	if exists (select * from sys.objects where [name] = ''xxxx_DivideRetrosLiq2014'' and [type] = ''u'')
	  drop table xxxx_DivideRetrosLiq2014
	if exists (select * from sys.objects where [name] = ''xxxx_DivideRetrosLiq2015'' and [type] = ''u'')
	  drop table xxxx_DivideRetrosLiq2015

	-- Crea tabla de paso del periodo a procesar
	select * into xxxx_DivideRetros from histpagosdetalle where id_periodo = @periodoOrigen

	-- DIvide periodos 2014
	insert into xxxx_DivideRetros
	select h.id_emp, @periodo2014 id_periodo, h.id_concepto, h.consecutivo, h.horas, h.pesos, h.pesosexcento, h.id_plaza, h.id_referencia,
	h.id_periodopago, 
	h.id_procesonomina, h.desde, h.hasta, h.id_plazapago, h.C_costo
	from xxxx_DivideRetros h 
	inner join calennomina c on c.Id_Periodo = h.id_periodopago
	where h.id_periodo = @periodoOrigen
	and c.año <= 2014

	-- Divide periodos 2015

	insert into xxxx_DivideRetros
	select h.id_emp, @periodo2015 id_periodo, h.id_concepto, h.consecutivo, h.horas, h.pesos, h.pesosexcento, h.id_plaza, h.id_referencia, 
	h.id_periodopago, 
	h.id_procesonomina, h.desde, h.hasta, h.id_plazapago, h.C_costo
	from xxxx_DivideRetros h 
	inner join calennomina c on c.Id_Periodo = h.id_periodopago
	where h.id_periodo = @periodoOrigen
	and c.año >= 2015

	-- Redondeo periodos 2014


	delete  from xxxx_DivideRetros where id_periodo = @periodo2014 and id_concepto = 2601

	insert into xxxx_DivideRetros
	select 
	p.id_emp, p.id_periodo, 2601 id_concepto, 0 consecutivo,0 horas, 
	(isnull(p.pesos,0) - isnull(d.pesos,0)) - cast((isnull(p.pesos,0) - isnull(d.pesos,0)) as int) pesos,0 pesosexcento, 
	id_plaza, p.id_referencia, p.periodopago id_periodopago, 
	2 id_procesonomina, dbo.fechatoanioquincena(c.fechaini) desde, dbo.fechatoanioquincena(c.fechaini) hasta, 0 id_plazapago, '''' C_costo
	from (
	select id_emp, id_plaza, id_periodo, h.id_referencia, max(id_periodopago) periodopago, sum(pesos) pesos from xxxx_DivideRetros h 
	inner join conceptos c on c.id_concepto = h.id_concepto and c.Tipo = 1
	where h.id_periodo = @periodo2014
	group by id_emp, id_plaza,id_periodo, h.id_referencia
	) p
	full join (
	select id_periodo, h.id_referencia, max(id_periodopago) periodopago, sum(pesos) pesos from xxxx_DivideRetros h 
	inner join conceptos c on c.id_concepto = h.id_concepto and c.Tipo = 2
	where h.id_periodo = @periodo2014
	group by id_periodo, h.id_referencia
	) d on d.id_periodo = p.id_periodo and d.id_referencia = p.id_referencia
	inner join calennomina c on c.id_periodo = p.periodopago

	-- Redondep periodo 2015

	delete  from xxxx_DivideRetros where id_periodo = @periodo2015 and id_concepto = 2601

	insert into xxxx_DivideRetros
	select 
	p.id_emp, p.id_periodo, 2601 id_concepto, 0 consecutivo,0 horas, 
	(isnull(p.pesos,0) - isnull(d.pesos,0)) - cast((isnull(p.pesos,0) - isnull(d.pesos,0)) as int) pesos,0 pesosexcento,
	id_plaza, p.id_referencia, p.periodopago id_periodopago, 
	2 id_procesonomina, dbo.fechatoanioquincena(c.fechaini) desde, dbo.fechatoanioquincena(c.fechaini) hasta, 0 id_plazapago, '''' C_costo
	from (
	select id_emp, id_plaza, id_periodo, h.id_referencia, max(id_periodopago) periodopago, sum(pesos) pesos from xxxx_DivideRetros h 
	inner join conceptos c on c.id_concepto = h.id_concepto and c.Tipo = 1
	where h.id_periodo = @periodo2015
	group by id_emp, id_plaza,id_periodo, h.id_referencia
	) p
	full join (
	select id_periodo, h.id_referencia, max(id_periodopago) periodopago, sum(pesos) pesos from xxxx_DivideRetros h 
	inner join conceptos c on c.id_concepto = h.id_concepto and c.Tipo = 2
	where h.id_periodo = @periodo2015
	group by id_periodo, h.id_referencia
	) d on d.id_periodo = p.id_periodo and d.id_referencia = p.id_referencia
	inner join calennomina c on c.id_periodo = p.periodopago


	-- liquidos periodo 2014
	select 
	p.id_periodo, p.id_referencia, p.id_emp,p.id_plaza, isnull(p.pesos,0) percepcio,
	isnull(d.pesos,0) Deduccion, isnull(p.pesos,0) - isnull(d.pesos,0) Liquido
	into xxxx_DivideRetrosLiq2014
	from (
	select id_emp, id_plaza, id_periodo, h.id_referencia, sum(pesos) pesos from xxxx_DivideRetros h 
	inner join conceptos c on c.id_concepto = h.id_concepto and c.Tipo = 1
	where h.id_periodo = @periodo2014
	group by id_emp, id_plaza,id_periodo, h.id_referencia
	) p
	full join (
	select id_periodo, h.id_referencia, sum(pesos) pesos from xxxx_DivideRetros h 
	inner join conceptos c on c.id_concepto = h.id_concepto and c.Tipo = 2
	where h.id_periodo = @periodo2014
	group by id_periodo, h.id_referencia
	) d on d.id_periodo = p.id_periodo and d.id_referencia = p.id_referencia

	-- liquido 2015
	select 
	p.id_periodo, p.id_referencia, p.id_emp,p.id_plaza, isnull(p.pesos,0) percepcio, isnull(d.pesos,0) Deduccion,
	isnull(p.pesos,0) - isnull(d.pesos,0) Liquido
	into xxxx_DivideRetrosLiq2015
	from (
	select id_emp, id_plaza, id_periodo, h.id_referencia, sum(pesos) pesos from xxxx_DivideRetros h 
	inner join conceptos c on c.id_concepto = h.id_concepto and c.Tipo = 1
	where h.id_periodo = @periodo2015
	group by id_emp, id_plaza,id_periodo, h.id_referencia
	) p
	full join (
	select id_periodo, h.id_referencia, sum(pesos) pesos from xxxx_DivideRetros h 
	inner join conceptos c on c.id_concepto = h.id_concepto and c.Tipo = 2
	where h.id_periodo = @periodo2015
	group by id_periodo, h.id_referencia
	) d on d.id_periodo = p.id_periodo and d.id_referencia = p.id_referencia

	-- comprobacion de retros en negativo

	select isnull(a.id_periodo,0) periodo2014, isnull(b.id_periodo,0) periodo2015, isnull(a.id_referencia,b.id_referencia) id_referencia,
	isnull(a.id_emp,b.id_emp) id_emp, isnull(a.id_plaza,b.id_plaza) id_plaza, round(isnull(a.liquido,0),2) Liquido2014, round(isnull(b.liquido,0),2) Liquido2015
	from xxxx_DivideRetrosLiq2014 a
	full join xxxx_DivideRetrosLiq2015 b on a.id_referencia = b.id_referencia and a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
	where round(isnull(a.liquido,0),2) < 0 or round(isnull(b.liquido,0),2) < 0



		
	
	
	
END'
GO

GO
PRINT N'Creating [dbo].[SP_PropuestaPagostotal]'
GO
IF OBJECT_ID(N'[dbo].[SP_PropuestaPagostotal]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[SP_PropuestaPagostotal] (@idplaza INT, @Idemp INT, @Anio INT, @AnioQna INT)
		WITH ENCRYPTION
	AS
	SET NOCOUNT ON
begin
	if(exists(select 1 from INFORMATICA..previo_config where prop = ''source'' and value = ''nomhist''))
	begin 
		SELECT a.id_emp, a.id_periodo, a.Periodo, c.Parcial, 
			CASE flg_omitido
				WHEN 0
					THEN Leyenda5 + '' '' + isnull(Xfuera, '''')
				WHEN 6
					THEN ''QNA_NO_CORRESPONDE''
				ELSE ''OMITIDO''
			END AS Descripcion, 
			Pi.PlazaIEEPO AS Plaza, a.Id_plaza, a.Desde, a.Hasta, Percepciones, Deducciones, Liquido, a.Cheque, 
			b.Id_Vector AS Vector, isnull(a.Id_Referencia, 0) Id_Referencia, Mtra_Datos, a.TIPAGO
		FROM (
			(
				SELECT 
					a.id_emp AS Id_Emp, a.id_periodo AS Id_Periodo, 
					cast((c.año * 100 + c.numero) AS VARCHAR(6)) Periodo, 
					d.num_plaza AS Plaza, d.Id_plaza, 
					cast((year(c.fechaIni) * 100 + month(c.FechaIni) * 2 - iif(day(c.FechaIni) > 15, 0, 1)) AS VARCHAR(6)) AS Desde, 
					cast((year(c.fechaFin) * 100 + month(c.FechaFin) * 2 - iif(day(c.FechaFin) > 15, 0, 1)) AS VARCHAR(6)) AS Hasta, 
					convert(VARCHAR(12), cast(sum(
								CASE 
									WHEN b.tipo = 1
										THEN a.pesos + a.pesosexcento
									ELSE 0
									END) AS MONEY), 1) AS Percepciones, convert(VARCHAR(12), cast(sum(CASE 
									WHEN b.tipo = 2
										THEN a.pesos + a.pesosexcento
									ELSE 0
									END) AS MONEY), 1) AS Deducciones, convert(VARCHAR(12), cast(sum(CASE b.tipo
									WHEN 1
										THEN a.pesos + a.pesosexcento
									WHEN 2
										THEN (a.pesos + a.pesosexcento) * - 1
									ELSE 0
								END) 
							AS MONEY), 1) AS Liquido, f.folio AS Cheque, isnull(a.Id_Referencia, 0) Id_Referencia, 0 AS Mtra_Datos, CASE f.Id_Cod
						WHEN 3
							THEN ''CHEQUE''
						WHEN 2
							THEN ''PAG. ELE''
						ELSE '' ''
						END AS TIPAGO, CASE (
							SELECT TOP 1 CASE pesos
									WHEN 6
										THEN 6
									ELSE 1
									END
							FROM dbo.HistPagos
							WHERE Id_Periodo = a.Id_Periodo
								AND id_plaza = d.id_plaza
								AND Id_Emp = a.Id_Emp
								AND id_concepto = 1789
							)
						WHEN 1
							THEN 1
						WHEN 6
							THEN 6
						ELSE 0
						END flg_omitido
				FROM dbo.histpagos a
				INNER JOIN calennomina c
					ON a.id_periodo = c.id_periodo
				INNER JOIN dbo.conceptos b
					ON b.id_concepto = a.id_concepto
				INNER JOIN plazas d
					ON d.id_plaza = a.id_plaza
				LEFT JOIN Folio_Recibos f
					ON f.id_emp = a.id_emp
						AND f.id_plaza = a.id_plaza
						AND f.id_periodo = a.id_periodo
						AND f.Id_Recibo IN (14, 16, 17, 19, 20)
						AND isnull(f.id_referencia, 0) = isnull(a.Id_Referencia, 0)
				WHERE c.leyenda6 NOT LIKE ''1''
				GROUP BY a.id_periodo, a.id_emp, d.num_plaza, d.Id_plaza, c.numero, c.año, c.fechaini, c.fechafin, f.folio, isnull(a.Id_Referencia, 0), f.Id_Cod
				HAVING d.Id_plaza = @idplaza
					AND a.id_emp = @Idemp
/*                         
* ---- Union nomhistpagos         
*/		
				UNION
		
				SELECT a.id_emp AS Id_Emp, a.id_periodo AS Id_Periodo, cast((c.año * 100 + c.numero) AS VARCHAR(6)) Periodo, d.num_plaza AS Plaza, d.Id_plaza, cast((year(c.fechaIni) * 100 + month(c.FechaIni) * 2 - iif(day(c.FechaIni) > 15, 0, 1)) AS VARCHAR(6)) AS Desde, cast((year(c.fechaFin) * 100 + month(c.FechaFin) * 2 - iif(day(c.FechaFin) > 15, 0, 1)) AS VARCHAR(6)) AS Hasta, convert(VARCHAR(12), cast(sum(CASE 
									WHEN b.tipo = 1
										THEN a.pesos + a.pesosexcento
									ELSE 0
									END) AS MONEY), 1) AS Percepciones, convert(VARCHAR(12), cast(sum(CASE 
									WHEN b.tipo = 2
										THEN a.pesos + a.pesosexcento
									ELSE 0
									END) AS MONEY), 1) AS Deducciones, convert(VARCHAR(12), cast(sum(CASE b.tipo
									WHEN 1
										THEN a.pesos + a.pesosexcento
									WHEN 2
										THEN (a.pesos + a.pesosexcento) * - 1
									ELSE 0
									END) AS MONEY), 1) AS Liquido, f.folio AS Cheque, isnull(a.Id_Referencia, 0) Id_Referencia, 0 AS Mtra_Datos, CASE f.Id_Cod
						WHEN 3
							THEN ''CHEQUE''
						WHEN 2
							THEN ''PAG. ELE''
						ELSE '' ''
						END AS TIPAGO, CASE (
							SELECT TOP 1 CASE pesos
									WHEN 6
										THEN 6
									ELSE 1
									END
							FROM dbo.HistPagos
							WHERE Id_Periodo = a.Id_Periodo
								AND id_plaza = d.id_plaza
								AND Id_Emp = a.Id_Emp
								AND id_concepto = 1789
							)
						WHEN 1
							THEN 1
						WHEN 6
							THEN 6
						ELSE 0
						END flg_omitido
				FROM (
					select * from dbo.nom_histpagos 
					where Id_plaza = @idplaza AND id_emp = @Idemp
					union 
					select * from nom_pagos_hist
					where Id_plaza = @idplaza AND id_emp = @Idemp
				) a
				INNER JOIN calennomina c
					ON a.id_periodo = c.id_periodo
				INNER JOIN dbo.conceptos b
					ON b.id_concepto = a.id_concepto
				INNER JOIN plazas d
					ON d.id_plaza = a.id_plaza
				LEFT JOIN Folio_Recibos f
					ON f.id_emp = a.id_emp
						AND f.id_plaza = a.id_plaza
						AND f.id_periodo = a.id_periodo
						AND f.Id_Recibo IN (14, 16, 17, 19, 20)
						AND isnull(f.id_referencia, 0) = isnull(a.Id_Referencia, 0)
				WHERE c.leyenda6 NOT LIKE ''1''
				GROUP BY a.id_periodo, a.id_emp, d.num_plaza, d.Id_plaza, c.numero, c.año, c.fechaini, c.fechafin, f.folio, isnull(a.Id_Referencia, 0), f.Id_Cod
				HAVING d.Id_plaza = @idplaza
					AND a.id_emp = @Idemp
				)
			) a
		LEFT JOIN VistaVectores b
			ON a.id_emp = b.id_emp
				AND a.Id_plaza = b.Id_plaza
				AND a.id_periodo = b.id_periodo
				AND a.id_periodo = b.id_periodo_aplicacion
		LEFT JOIN (
			(
				SELECT Id_periodo, Numero, Parcial, tituloPeriodo, b.DescNomina, Año, a.Leyenda5, a.Xfuera
				FROM Calennomina a
				INNER JOIN ClasificacionNomina b
					ON a.id_clasifnomina = b.Id_clasifnomina
				)
			) c
			ON a.Id_periodo = c.Id_periodo
		LEFT JOIN plazaIEEPO Pi
			ON a.Id_plaza = Pi.Id_plaza
		WHERE c.Año = @Anio
			AND Periodo >= @AnioQna
		ORDER BY Periodo, parcial
	end
	else
	begin
		Select 
			a.id_emp, a.id_periodo, a.Periodo, c.Parcial, 
			case flg_omitido when 0 then Leyenda5 + '' '' + isnull(Xfuera,'''') when 6 then ''QNA_NO_CORRESPONDE'' else ''OMITIDO'' end as Descripcion, 
			Pi.PlazaIEEPO as Plaza, a.Id_plaza, a.Desde, a.Hasta, Percepciones, Deducciones, Liquido, 
			a.Cheque, b.Id_Vector as Vector, isnull(a.Id_Referencia, 0) Id_Referencia, Mtra_Datos, a.TIPAGO            
		From      
			 (
				(
					Select 
						a.id_emp as Id_Emp, a.id_periodo as Id_Periodo, 
						cast((c.año * 100 + c.numero) as varchar(6)) Periodo, 
						d.num_plaza as Plaza,d.Id_plaza,       
						cast( (year(c.fechaIni) * 100 + month(c.FechaIni) * 2 - iif(day(c.FechaIni) > 15, 0, 1)) as varchar(6)) as Desde,
						cast( (year(c.fechaFin) * 100 + month(c.FechaFin) * 2 - iif(day(c.FechaFin) > 15, 0, 1)) as varchar(6)) as Hasta,
						convert(varchar(12), cast(sum(case when b.tipo = 1 then  a.pesos + a.pesosexcento else 0 end) as money), 1) as Percepciones,               
						convert(varchar(12), cast(sum(case when b.tipo = 2 then  a.pesos + a.pesosexcento else 0 end) as money), 1) as Deducciones,              
						convert(varchar(12), cast(sum(case b.tipo when 1 then a.pesos + a.pesosexcento when 2 then (a.pesos + a.pesosexcento) * -1 else 0 end ) as money), 1) as Liquido, 
						f.folio as Cheque, isnull(a.Id_Referencia, 0) Id_Referencia, 0 as Mtra_Datos, case f.Id_Cod when 3 THEN ''CHEQUE'' when 2 then ''PAG. ELE'' ELSE '' '' END AS TIPAGO,
						case (
							select top 1 case pesos when 6 then 6 else 1 end
							from dbo.HistPagos
							where Id_Periodo = a.Id_Periodo 
								and id_plaza = d.id_plaza 
								and Id_Emp = a.Id_Emp
								and id_concepto = 1789
						) when 1 then 1 when 6 then 6 else 0 end flg_omitido
					from dbo.histpagos a               
						join calennomina c on a.id_periodo = c.id_periodo              
						join dbo.conceptos b on b.id_concepto = a.id_concepto                
						join plazas d on d.id_plaza = a.id_plaza                
						left join Folio_Recibos f on f.id_emp = a.id_emp 
							and f.id_plaza = a.id_plaza and f.id_periodo=a.id_periodo 
							and f.Id_Recibo in (14,16,17,19,20) 
							and isnull(f.id_referencia, 0) = isnull(a.Id_Referencia, 0)     
					where c.leyenda6 not like ''1''
					group by 
						a.id_periodo, a.id_emp, d.num_plaza, d.Id_plaza, c.numero, c.año, 
						c.fechaini, c.fechafin, f.folio, isnull(a.Id_Referencia, 0), f.Id_Cod                        
					having d.Id_plaza = @idplaza and a.id_emp = @Idemp       
					UNION
					Select 
						aa.id_emp as Id_Emp, aa.id_periodo as Id_Periodo, 
						Cast( (c.año * 100 + c.numero) as varchar(6)) as Periodo, 
						d.num_plaza as Plaza, d.Id_plaza, aa.desde, aa.hasta, 
						aa.Percepciones, aa.Deducciones, aa.Liquido, f.folio as Cheque, 
						isnull(aa.Id_Referencia, 0) id_referencia, aa.Mtra_datos_Id as Mtra_Datos, 
						case f.Id_Cod  when  3 THEN ''CHEQUE'' when 2 then ''PAG. ELE'' ELSE '' '' END AS TIPAGO,
						case when aa.Percepciones = ''0.00'' and aa.Deducciones = ''0.00'' then 1 else 0 end flg_omitido
					from INFORMATICA..Mtra_datosr aa               
						join calennomina c on aa.id_periodo=c.id_periodo              	              
						join plazas d on d.id_plaza = aa.id_plaza               
						left join Folio_Recibos f on f.id_emp = aa.id_emp 
							and f.id_plaza = aa.id_plaza and f.id_periodo=aa.id_periodo 
							and f.Id_Recibo in (14, 16, 17, 19, 20) 
							and isnull(f.id_referencia, 0) = isnull(aa.Id_Referencia, 0) 
					 where c.Año = @Anio and aa.Id_plaza = @idplaza and aa.id_emp = @Idemp
				)
			) a				
		Left Join VistaVectores b on a.id_emp = b.id_emp and a.Id_plaza=b.Id_plaza 
			and a.id_periodo = b.id_periodo and a.id_periodo= b.id_periodo_aplicacion     
		Left Join (
			(
				Select 
					Id_periodo, Numero, Parcial, tituloPeriodo, 
					b.DescNomina, Año, a.Leyenda5, a.Xfuera  
					from Calennomina a 
					join ClasificacionNomina b on a.id_clasifnomina = b.Id_clasifnomina
			)
		) c on a.Id_periodo = c.Id_periodo  
		left Join plazaIEEPO Pi on a.Id_plaza=Pi.Id_plaza      
		Where c.Año = @Anio And Periodo >= @AnioQna      
		Order By Periodo,parcial   
	end
end
SET NOCOUNT OFF
'
GO

GO
PRINT N'Creating [dbo].[dsv_PropuestaSacaHistPagostotal]'
GO
IF OBJECT_ID(N'[dbo].[dsv_PropuestaSacaHistPagostotal]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		DAVID SANTIBANEZ VARGAS
-- Create date: MARZO 2014
-- Description:	PAGOS NUEVA ESTRUCTURA
-- =============================================
CREATE PROCEDURE [dbo].[dsv_PropuestaSacaHistPagostotal]              
(              
	@Didplaza int,              
	@DIdemp int,  
	@DAnio int,          
	@DAnioQna int              
)
with encryption             
AS        
SET NOCOUNT ON        
BEGIN            

create table #prueba (id_emp int,	id_periodo int,	Periodo int,	
Parcial int, Descripcion varchar(max),	Plaza	varchar(max), Id_plaza int,	Desde int,	Hasta int,
Percepciones varchar(max),	Deducciones varchar(max),	Liquido varchar(max),	Cheque varchar(max),	Vector int, referencia int, Mtra_Datos int,
tipago varchar(max))
insert into #prueba EXEC [dbo].[SP_PropuestaPagostotal] @idplaza = @Didplaza, 	@Idemp = @DIdemp, @Anio = @DAnio, @AnioQna = 1
/*
insert into #prueba (id_emp, id_periodo, Periodo, Parcial,
Descripcion, Plaza, Id_plaza, Desde, Hasta, Percepciones, Deducciones, Liquido, Cheque, Vector, referencia, tipago)
select noemp as id_emp, 0 as id_periodo, desde as Periodo, 0 as Parcial,''OMITIDO'' as Descripcion, 
plazaieepo as Plaza, b.id_plaza, Desde, desde as Hasta, 0 AS Percepciones, 0 AS Deducciones, 0 AS Liquido, 
'''' AS Cheque,  '' '' as Vector, 0 as referencia, 0 as tipago
from templeadosplazaomitidos  a, plazaieepo b
where a.Noemp = @DIdemp and a.numplaza = @Didplaza and a.numplaza=b.id_plaza and cast(substring(desde,1,4) as int) = @DAnio
*/
--update #prueba set Descripcion = ''OMITIDO'' where id_emp = @DIdemp and Id_plaza = @Didplaza 
-- and  id_periodo in (
--select c.Id_Periodo from CalenNomina c inner join #prueba p on c.Id_Periodo = p.id_periodo
--and c.Id_Periodo  in (select distinct id_periodo  from [INFORMATICA].dbo.Deta_datos where id_emp = @DIdemp and id_concepto = 1789 ))

SELECT id_emp, id_periodo, Periodo, Parcial,
Descripcion, Plaza, Id_plaza, Desde, Hasta, Percepciones, Deducciones, Liquido, Cheque, Vector, Mtra_Datos, referencia, tipago as T_Pago  From #prueba  
Order By Periodo,parcial      

END '
GO

GO
PRINT N'Creating [dbo].[DSV_PropuestaSacaHistPagosPerc]'
GO
IF OBJECT_ID(N'[dbo].[DSV_PropuestaSacaHistPagosPerc]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[DSV_PropuestaSacaHistPagosPerc] (@idplaza INT, @Idemp INT, @idperiodo INT, @refere INT, @Mtra_Datos INT)
	 
AS
BEGIN
	DECLARE @PDtbltmp TABLE (
		Id_Emp INT, Id_Periodo INT, id_concepto INT, 
		Pesos FLOAT, CC VARCHAR(10), id_plaza INT, 
		Id_Referencia INT, id_periodoPago INT, 
		Desde VARCHAR(6), Hasta VARCHAR(6)
	)
	
	DECLARE @danio INT = (
		SELECT año
		FROM calennomina
		WHERE Id_Periodo = @idperiodo
	)

	IF (
		EXISTS (
			SELECT 1
			FROM INFORMATICA..previo_config
			WHERE prop = ''source''
				AND value = ''nomhist''
		)
	)
	BEGIN
		INSERT INTO @PDtbltmp
		SELECT 
			@Idemp AS id_emp, id_periodo, id_concepto, pesos, cc, 
			@idplaza AS id_plaza, id_referencia, id_periodopago, desde, hasta
		FROM nom_histpagos
		WHERE
			id_emp = @idemp
			AND id_periodo = @idperiodo
			AND id_plaza = @idplaza
			AND id_referencia = @refere

		INSERT INTO @PDtbltmp
		SELECT 
			@Idemp AS id_emp, id_periodo, id_concepto, pesos, cc, 
			@idplaza AS id_plaza, id_referencia, id_periodopago, desde, hasta
		FROM nom_pagos_hist
		WHERE
			id_emp = @idemp
			AND id_periodo = @idperiodo
			AND id_plaza = @idplaza
			AND id_referencia = @refere
	END
	ELSE
	BEGIN
		INSERT INTO @PDtbltmp
		SELECT 
			@Idemp AS id_emp, id_periodo, id_concepto, pesos, cc, 
			@idplaza AS id_plaza, id_referencia, id_periodopago, desde, hasta
		FROM [informatica].dbo.deta_datos
		WHERE Mtra_datos_Id = @Mtra_Datos
	END

	SELECT 
		a.id_concepto, 
		CASE 
			WHEN a.id_concepto in (1328, 1518)
				THEN b.c_costo
			ELSE a.Resultado
		END AS Clave, 
		convert(VARCHAR(12), cast(b.Pesos AS MONEY), 1) AS Importe, 
		(a.descripcion + dbo.PensionLbl(a.id_concepto)) descripcion, 
		b.Id_Emp, Cast(f.año AS VARCHAR(4)) + '''' + Right(''00'' + Cast(f.numero AS VARCHAR(2)), 2) AS Periodo, 
		b.id_plaza, Desde + '' '' + Hasta AS Desde_Hasta
	FROM Conceptos a
	INNER JOIN ConceptoRelEmpresa c
		ON a.id_concepto = c.id_concepto
	INNER JOIN (
		SELECT 
			Id_Emp, id_concepto, Id_Periodo, id_plaza, Pesos, 
			Desde, Hasta, isnull(Id_Referencia, 0) Id_Referencia, c_costo
		FROM HistPagos
	
		UNION ALL
	
		SELECT 
			Id_Emp, id_concepto, Id_Periodo, id_plaza, Pesos, 
			cast(Desde AS VARCHAR(6)) COLLATE SQL_Latin1_General_CP1_CI_AS AS DESDE, 
			CAST(Hasta AS VARCHAR(6)) COLLATE SQL_Latin1_General_CP1_CI_AS AS HASTA, 
			isnull(Id_Referencia, 0) Id_Referencia, 
			CAST(cc AS VARCHAR(10)) COLLATE SQL_Latin1_General_CP1_CI_AS AS c_costo
		FROM @PDtbltmp
	) AS b 
		ON a.id_concepto = b.id_concepto
	INNER JOIN Empleados D
		ON D.id_emp = b.id_emp
	INNER JOIN Plazas E
		ON E.id_plaza = b.id_plaza
	INNER JOIN Calennomina F
		ON b.Id_Periodo = F.Id_periodo
	WHERE b.id_emp = @idemp
		AND e.id_plaza = @idplaza
		AND b.id_periodo = @idperiodo
		AND (c.id_razonsocial = 5)
		AND (a.Tipo = 1)
		AND (a.En_ListaRaya = 1)
		AND b.Id_Referencia = @refere
	ORDER BY dbo.OrderCtos(a.id_concepto) ASC, A.resultado, Desde, Hasta
END

'
GO

GO
PRINT N'Creating [dbo].[P_DatosCT]'
GO
IF OBJECT_ID(N'[dbo].[P_DatosCT]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		<Sistemas,Noemi>
-- Create date: <Create Date, 10/05/2017 >
-- Description:	<Description, obtener datos del ct>
-- =============================================
--exec [P_DatosCT] 121,2,''20ADG0064N'',148298

CREATE  procedure [dbo].[P_DatosCT]
(		
	@idUsuario int, --
	@opcion int, --1 datos del ct del trabajador  2 datos del ct 
	@ct varchar(10), --dato a buscar
	@idEmp int 
)
AS
begin
	if(@opcion=1)--datos del ct del trabajador 
	begin
		select distinct * into #id_cts from (
			SELECT pe.id_emp AS id_emp, pe.id_plaza, pe.id_nodo 
			from Empalme_Plazaempleados pe with(nolock) 
			join ( SELECT id_emp,id_plaza,max(fecha)fecha  
					FROM Empalme_Plazaempleados pe with(nolock)
					where Id_Emp != 0  AND Id_Emp in (@idEmp)           
					group by id_emp,id_plaza 
			)hist on pe.Id_Emp=hist.Id_Emp and pe.Id_plaza = hist.Id_plaza and pe.Fecha =hist.fecha 
			group by pe.id_emp, pe.id_plaza, pe.id_nodo 
		union all
			SELECT pe.id_emp AS id_emp, pe.id_plaza, pe.id_nodo 
			from Plazaempleados pe with(nolock) 
			join ( SELECT id_emp,id_plaza,max(fecha)fecha  
					FROM Plazaempleados pe with(nolock)
					where Id_Emp != 0  AND Id_Emp in (@idEmp)           
					group by id_emp,id_plaza 
			)hist on pe.Id_Emp=hist.Id_Emp and pe.Id_plaza = hist.Id_plaza and pe.Fecha =hist.fecha 
			group by pe.id_emp, pe.id_plaza, pe.id_nodo 
		)cts

		Select vistatablalongitud.Centro_de_Trabajo as centroTrabajo, vistatablalongitud.descripcion as nombre, Centros.Direccion_CT as domicilio, Centros.Direccion_CT as domicilio, tCT_localidad.des_loc_ct as localidad, 
		right(''00000'' + cast(tCT_localidad.Cve_loc_ct as varchar(5)),5) claveLocalidad,right(''00000'' + cast(tCT_Municipios_ct.Cve_mun_ct as varchar(5)),5) claveMunicipio,tCT_Municipios_ct.des_mun_ct as municipio, tCT_ZEsc.desc_Zesc as zonaEscolar, TCT_Turno.descripcion as turno, 
		Centros.UDP as udp, right(TCT_Status.desc_status, len(TCT_Status.desc_status)-2) as status, cast(TCT_Region.clave as varchar(2)) + '' '' + TCT_Region.descrip  as servreg,cast(fup_drse.num_drse as varchar(1)) +'' ''+ fup_drse.descripcion drse  
		from vistatablalongitud with(nolock) 
		left join TablaLongitudProp_28 Centros with(nolock) on vistatablalongitud.id_nodo = Centros.id_nodo 
		left join rCT_localidad with(nolock) on rCT_localidad.id_nodo = Centros.id_nodo 
		left join tCT_localidad with(nolock) on rCT_localidad.id_rel = tCT_localidad.id_ct_localidad 
		left join rCT_Municipios_ct with(nolock) on rCT_Municipios_ct.id_nodo = Centros.id_nodo 
		left join tCT_Municipios_ct with(nolock) on rCT_Municipios_ct.id_rel = tCT_Municipios_ct.id_ct_municipios_ct 
		left join rCT_ZEsc with(nolock) on rCT_ZEsc.id_nodo = Centros.id_nodo 
		left join tCT_ZEsc with(nolock) on tCT_ZEsc.id_ct_ZEsc = rCT_ZEsc.id_rel 
		left join rCT_Turno with(nolock) on rCT_Turno.id_nodo = Centros.id_nodo 
		left join TCT_Turno with(nolock) on TCT_Turno.id_ct_Turno = rCT_Turno.id_rel 
		left join rCT_Status with(nolock) on rCT_Status.id_nodo = Centros.id_nodo 
		left join TCT_Status with(nolock) on TCT_Status.id_ct_Status = rCT_Status.id_rel 
		left join rCT_Region with(nolock) on rCT_Region.id_nodo = Centros.id_nodo 
		left join TCT_Region with(nolock) on TCT_Region.id_ct_Region = rCT_Region.id_rel 
					--drse
		left join fup_ct_drse with(nolock) on fup_ct_drse.id_nodo=centros.id_nodo 
		left join fup_drse with(nolock) on fup_drse.id_drse=fup_ct_drse.id_drse 
		where vistatablalongitud.Centro_de_Trabajo like ''%''+@ct+''%'' and VistaTablaLongitud.Id_Nodo in (select id_nodo from #id_cts)
	END
	else if(@opcion=2) 
	BEGIN--datos del ct 
		Select vistatablalongitud.Centro_de_Trabajo as centroTrabajo, vistatablalongitud.descripcion as nombre, Centros.Direccion_CT as domicilio, Centros.Direccion_CT as domicilio, tCT_localidad.des_loc_ct as localidad, 
		right(''00000'' + cast(tCT_localidad.Cve_loc_ct as varchar(5)),5) claveLocalidad,right(''00000'' + cast(tCT_Municipios_ct.Cve_mun_ct as varchar(5)),5) claveMunicipio,tCT_Municipios_ct.des_mun_ct as municipio, tCT_ZEsc.desc_Zesc as zonaEscolar, TCT_Turno.descripcion as turno, 
		Centros.UDP as udp, right(TCT_Status.desc_status, len(TCT_Status.desc_status)-2) as status, cast(TCT_Region.clave as varchar(2)) + '' '' + TCT_Region.descrip  as servreg,cast(fup_drse.num_drse as varchar(1)) +'' ''+ fup_drse.descripcion drse  
		from vistatablalongitud with(nolock) 
		left join TablaLongitudProp_28 Centros with(nolock) on vistatablalongitud.id_nodo = Centros.id_nodo 
		left join rCT_localidad with(nolock) on rCT_localidad.id_nodo = Centros.id_nodo 
		left join tCT_localidad with(nolock) on rCT_localidad.id_rel = tCT_localidad.id_ct_localidad 
		left join rCT_Municipios_ct with(nolock) on rCT_Municipios_ct.id_nodo = Centros.id_nodo 
		left join tCT_Municipios_ct with(nolock) on rCT_Municipios_ct.id_rel = tCT_Municipios_ct.id_ct_municipios_ct 
		left join rCT_ZEsc with(nolock) on rCT_ZEsc.id_nodo = Centros.id_nodo 
		left join tCT_ZEsc with(nolock) on tCT_ZEsc.id_ct_ZEsc = rCT_ZEsc.id_rel 
		left join rCT_Turno with(nolock) on rCT_Turno.id_nodo = Centros.id_nodo 
		left join TCT_Turno with(nolock) on TCT_Turno.id_ct_Turno = rCT_Turno.id_rel 
		left join rCT_Status with(nolock) on rCT_Status.id_nodo = Centros.id_nodo 
		left join TCT_Status with(nolock) on TCT_Status.id_ct_Status = rCT_Status.id_rel 
		left join rCT_Region with(nolock) on rCT_Region.id_nodo = Centros.id_nodo 
		left join TCT_Region with(nolock) on TCT_Region.id_ct_Region = rCT_Region.id_rel 
					--drse
		left join fup_ct_drse with(nolock) on fup_ct_drse.id_nodo=centros.id_nodo 
		left join fup_drse with(nolock) on fup_drse.id_drse=fup_ct_drse.id_drse 
		where vistatablalongitud.Centro_de_Trabajo like ''%''+@ct+''%''
	END
END


--exec datosEmpleados 121,1,''dorn880204'''
GO

GO
PRINT N'Creating [dbo].[SP_SacaHistPagostotal_13]'
GO
IF OBJECT_ID(N'[dbo].[SP_SacaHistPagostotal_13]', 'P') IS NULL
EXEC sp_executesql N'

CREATE PROCEDURE [dbo].[SP_SacaHistPagostotal_13]              
(              
	@idplaza int,              
	@Idemp int,  
	@Anio int,          
	@AnioQna int              
)  
with encryption            
AS              
SET NOCOUNT ON              
Select a.id_emp,a.id_periodo,a.Periodo,c.Parcial,Leyenda5+'' ''+ isnull(Xfuera,'''') as Descripcion, Pi.PlazaIEEPO as Plaza,a.Id_plaza,a.Desde,a.Hasta,Percepciones,Deducciones,Liquido,a.Cheque,b.Id_Vector as Vector, 0 as Id_Referencia          
From      
	 ((Select a.id_emp as Id_Emp,a.id_periodo as Id_Periodo,Cast(c.año as varchar(4)) + ''''+Right(''00''+Cast(c.numero as varchar(2)),2) as Periodo, d.num_plaza as Plaza,d.Id_plaza,      
	 cast( year(c.FechaIni) as varchar) + ''''+ Right(''00'' + Cast(case when(day(c.FechaIni)>15)then month(c.FechaIni)*2 else (month(c.FechaIni)*2)-1 end as Varchar(2)),2) as Desde,  
	 cast( year(c.FechaFin) as varchar) + ''''+ Right(''00'' + Cast(case when(day(c.FechaFin)>15)then month(c.FechaFin)*2 else (month(c.FechaFin)*2)-1 end as Varchar(2)),2) as Hasta,       
	 convert(varchar(12), cast(sum(case when b.tipo = 1 then  a.pesos + a.pesosexcento else 0 end)as money), 1) as Percepciones ,               
	 convert(varchar(12), cast(sum(case when b.tipo = 2 then  a.pesos + a.pesosexcento else 0 end) as money), 1) as Deducciones,              
	 convert(varchar(12), cast(sum ( (case when b.tipo = 1 then  a.pesos + a.pesosexcento else 0 end ) - (case when b.tipo = 2 then  a.pesos + a.pesosexcento else 0 end ) ) as money), 1) as Liquido, f.folio as Cheque, 0 as Id_Referencia
	 from dbo.histpagos a               
	 inner join calennomina c              
	 on a.id_periodo=c.id_periodo              
	 inner join dbo.conceptos b              
	 on b.id_concepto   = a.id_concepto                
	 inner join plazas d            
	 on d.id_plaza = a.id_plaza                
	 left join Folio_Recibos f          
	 on f.id_emp = a.id_emp and  f.id_plaza=a.id_plaza and f.id_periodo=a.id_periodo and f.Id_Recibo in (14,16,17) 
	 --and isnull(f.id_referencia,0) = isnull(a.Id_Referencia,0)     
	 group by a.id_periodo,a.id_emp,d.num_plaza,d.Id_plaza,c.numero,c.año,c.fechaini,c.fechafin,f.folio
	 --, a.Id_Referencia 
	 having  d.Id_plaza=@idplaza and a.id_emp = @Idemp    
          
union           
          
	 Select a.id_emp as Id_Emp,a.id_periodo as Id_Periodo,Cast(c.año as varchar(4)) + ''''+Right(''00''+Cast(c.numero as varchar(2)),2) as Periodo, d.num_plaza as Plaza,d.Id_plaza,      
	 cast( year(c.FechaIni) as varchar) + ''''+ Right(''00'' + Cast(case when(day(c.FechaIni)>15)then month(c.FechaIni)*2 else (month(c.FechaIni)*2)-1 end as Varchar(2)),2) as Inicio,  
	 cast( year(c.FechaFin) as varchar) + ''''+ Right(''00'' + Cast(case when(day(c.FechaFin)>15)then month(c.FechaFin)*2 else (month(c.FechaFin)*2)-1 end as Varchar(2)),2) as Fin,       
	 convert(varchar(12), cast(sum(case when b.tipo = 1 then  a.pesos + a.pesosexcento else 0 end)as money), 1) as Percepciones ,               
	 convert(varchar(12), cast(sum(case when b.tipo = 2 then  a.pesos + a.pesosexcento else 0 end) as money), 1) as Deducciones,              
	 convert(varchar(12), cast(sum ( (case when b.tipo = 1 then  a.pesos + a.pesosexcento else 0 end ) - (case when b.tipo = 2 then  a.pesos + a.pesosexcento else 0 end ) ) as money), 1) as Liquido, f.folio as Cheque, 0 as id_referencia
	 from dbo.Nom_histpagos a               
	 inner join calennomina c              
	 on a.id_periodo=c.id_periodo              
	 inner join dbo.conceptos b              
	 on b.id_concepto   = a.id_concepto                
	 inner join plazas d            
	 on d.id_plaza = a.id_plaza               
	 left join Folio_Recibos f          
	 on f.id_emp = a.id_emp and f.id_plaza=a.id_plaza and f.id_periodo=a.id_periodo and f.Id_Recibo in (14,16,17) 
	 --and isnull(f.id_referencia,0) = isnull(a.Id_Referencia,0)  
	 group by a.id_periodo,a.id_emp,d.num_plaza,d.Id_plaza,c.numero,c.año,c.fechaini,c.fechafin,f.folio
	 --, a.Id_Referencia               
	 having  d.Id_plaza=@idplaza and a.id_emp = @Idemp    
)) a       
Left Join VistaVectores b       
On a.id_emp=b.id_emp and a.Id_plaza=b.Id_plaza and a.id_periodo=b.id_periodo and a.id_periodo= b.id_periodo_aplicacion     
Left Join ((Select Id_periodo,Numero,Parcial,tituloPeriodo,b.DescNomina,Año, a.Leyenda5, a.Xfuera   From Calennomina a Inner join ClasificacionNomina b on a.id_clasifnomina=b.Id_clasifnomina)) c      
On a.Id_periodo=c.Id_periodo  
Left Join plazaIEEPO Pi on a.Id_plaza=Pi.Id_plaza      
Where c.Año = @Anio And Periodo>=@AnioQna      
Order By Periodo,parcial      
      
SET NOCOUNT OFF      
'
GO

GO
PRINT N'Creating [dbo].[dsv_SacaHistPagostotal]'
GO
IF OBJECT_ID(N'[dbo].[dsv_SacaHistPagostotal]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		DAVID SANTIBANEZ VARGAS
-- Create date: OCTUBRE 2013
-- Description:	PLAZAS
-- =============================================
CREATE PROCEDURE [dbo].[dsv_SacaHistPagostotal]              
(              
	@Didplaza int,              
	@DIdemp int,  
	@DAnio int,          
	@DAnioQna int              
)
with encryption             
AS        
SET NOCOUNT ON        
BEGIN            

create table #prueba (id_emp int,	id_periodo int,	Periodo int,	
Parcial int,	Descripcion varchar(max),	Plaza	varchar(max), Id_plaza int,	Desde int,	Hasta int,
Percepciones varchar(max),	Deducciones varchar(max),	Liquido varchar(max),	Cheque varchar(max),	Vector int, referencia int)
insert into #prueba EXEC [dbo].[SP_SacaHistPagostotal_13] @idplaza = @Didplaza, 	@Idemp = @DIdemp, @Anio = @DAnio, @AnioQna = 1

insert into #prueba (id_emp, id_periodo, Periodo, Parcial,
Descripcion, Plaza, Id_plaza, Desde, Hasta, Percepciones, Deducciones, Liquido, Cheque, Vector, referencia)
select noemp as id_emp, 0 as id_periodo, desde as Periodo, 0 as Parcial,''OMITIDO'' as Descripcion, 
plazaieepo as Plaza, b.id_plaza, Desde, desde as Hasta, 0 AS Percepciones, 0 AS Deducciones, 0 AS Liquido, 
'''' AS Cheque,  '' '' as Vector, 0 as referencia
from templeadosplazaomitidos  a, plazaieepo b
where a.Noemp = @DIdemp and a.numplaza = @Didplaza and a.numplaza=b.id_plaza and cast(substring(desde,1,4) as int) = @DAnio

--la diferencia

-----------------------------------------
select distinct  a.desde, a.id_plaza, a.id_periodo into #pruebamil
 from nom_HistPagos a inner join #prueba b
 on a.Id_Periodo = b.id_periodo 
 where a.id_plaza = @Didplaza --and substring(a.desde,1,4)=@DAnio
 order by id_periodo
 -----------------------------------------

select id_emp, xx.id_periodo, Periodo, Parcial, Descripcion, Plaza, xx.Id_plaza, v.Desde, v.Hasta,
 Percepciones, Deducciones, Liquido, Cheque, Vector  into #prueba2 from 
 #prueba xx left join  
 (select min(desde) as desde, max(desde) as hasta, id_plaza, id_periodo
  from #pruebamil group by Id_Periodo,  id_plaza) v
 on xx.id_plaza = v.id_plaza and xx.id_periodo = v.id_periodo 
 --and v.Id_Referencia = xx.id_referencia
 where xx.id_periodo in (select id_periodo from calennomina where leyenda4 = 2 and (parcial >= 20 and parcial <= 40)  )
 --upper(Descripcion) =''RETROACTIVO'' 
 ---- fin de la diferencia

 insert into #prueba2 (id_emp, id_periodo, Periodo, Parcial,
Descripcion, Plaza, Id_plaza, Desde, Hasta, Percepciones, Deducciones, Liquido, Cheque, Vector )
 select id_emp, xx.id_periodo, Periodo, Parcial, Descripcion, Plaza, xx.Id_plaza, v.Desde, v.Hasta,
 Percepciones, Deducciones, Liquido, Cheque, Vector from 
 #prueba xx left join  
 (select min(a.desde) as desde, max(a.desde) as hasta,  a.id_plaza, a.Id_Periodo   
 from HistPagos a, #prueba b where a.id_plaza = b.id_plaza and a.Id_Periodo = b.id_periodo 
 and (  a.id_periodo in (select id_periodo from calennomina where leyenda4 = 2 and (parcial >= 20 and parcial <= 40)  ))
 --upper(b.Descripcion) =''RETROACTIVO''
 group by a.id_plaza, a.Id_Periodo ) v
 on xx.id_plaza = v.id_plaza and xx.id_periodo = v.id_periodo 
 --and v.Id_Referencia = xx.id_referencia
 where xx.id_periodo in (select id_periodo from calennomina where leyenda4 = 2 and (parcial >= 20 and parcial <= 40)  )
 --upper(Descripcion) =''RETROACTIVO'' 
 
delete  from #prueba where 
#prueba.id_periodo in (select id_periodo from calennomina where leyenda4 = 2 and (parcial >= 20 and parcial <= 40)  )
--Descripcion =''RETROACTIVO''
delete  from #prueba2 where 
#prueba2.id_periodo in (select id_periodo from calennomina where leyenda4 = 2 and (parcial >= 20 and parcial <= 40)  ) and isnull(desde,'''')=''''
--Descripcion =''RETROACTIVO''

update #prueba set Descripcion = ''OMITIDO'' where id_emp = @DIdemp and Id_plaza = @Didplaza 
 and  id_periodo in (
select c.Id_Periodo from CalenNomina c inner join #prueba p on c.Id_Periodo = p.id_periodo
and c.Id_Periodo  in (select distinct id_periodo  from nom_histpagos where id_emp = @DIdemp and id_concepto = 1789 and id_plaza = @didplaza))



SELECT id_emp, id_periodo, Periodo, Parcial,
Descripcion, Plaza, Id_plaza, Desde, Hasta, Percepciones, Deducciones, Liquido, Cheque, Vector From (
select id_emp, id_periodo, Periodo, Parcial,
Descripcion, Plaza, Id_plaza, Desde, Hasta, Percepciones, Deducciones, Liquido, Cheque, Vector  from #prueba 
union 
select  id_emp, id_periodo, Periodo, Parcial,
Descripcion, Plaza, Id_plaza, Desde, Hasta, Percepciones, Deducciones, Liquido, Cheque, Vector  from #prueba2
) dsvf
Order By Periodo,parcial      


END '
GO

GO
PRINT N'Creating [dbo].[SP_SPl_1]'
GO
IF OBJECT_ID(N'[dbo].[SP_SPl_1]', 'P') IS NULL
EXEC sp_executesql N'
-- =============================================
-- Author:		DAVID SANTIBANEZ VARGAS
-- Create date: DICIEMBRE 2013
-- Description:	PLAZAS QUE TIENE O TUVO UNA PERSONA, EMPALMES Y NUEVO PROCESO DE LEER PLAZAS
-- FALTA VER CORRECTAMENTE LAS HIJAS.
-- =============================================

CREATE PROCEDURE [dbo].[SP_SPl_1] (@Idemp INT = 0, @IdStatus VARCHAR = 0, @Fecha DATETIME = 0)
	WITH ENCRYPTION
AS
SET NOCOUNT ON

BEGIN

--	declare  @Idemp int = 125693, @IdStatus varchar = 0, @Fecha DateTime = getdate()  
	IF OBJECT_ID(N''tempdb..#putofolio_tmp'') IS NOT NULL
		DROP TABLE #putofolio_tmp;

	SELECT a.folio, a.id_emp, b.id_plaza, b.fechaini, b.fechafin, CASE 
			WHEN b.Id_MotivoMovimiento IN (20, 25)
				THEN cast(dbo.datetoqna(dateadd(day, - 1, b.fechaini)) AS INT)
			ELSE cast(dbo.datetoqna(b.fechaini) AS INT)
			END AS desdevalida, e.Año y, e.Numero n, e.Parcial p
	INTO #putofolio_tmp
	FROM FUP_Documentos a
	INNER JOIN FUP_Documento_Detalle b ON a.Id_Documento = b.Id_Documento
		AND a.Id_Emp = @Idemp
	JOIN FUP_MotivoMovimiento c ON b.Id_MotivoMovimiento = c.Id_MotivoMovimiento
	JOIN FUP_Informacion_Documentos d ON a.Id_Documento = d.Id_Documento
	JOIN CalenNomina e ON d.Id_Periodo = e.Id_Periodo
	WHERE a.Id_Estatus = 2

	IF OBJECT_ID(N''tempdb..#putofolio'') IS NOT NULL
		DROP TABLE #putofolio;

	SELECT folio, id_emp, id_plaza, fechaini, fechafin, desdevalida
	INTO #putofolio
	FROM #putofolio_tmp a
	WHERE cast(y AS VARCHAR(4)) + cast(n AS VARCHAR(2)) + cast(p AS VARCHAR(2)) = (
			SELECT TOP 1 cast(y AS VARCHAR(4)) + cast(n AS VARCHAR(2)) + cast(p AS VARCHAR(2))
			FROM #putofolio_tmp
			WHERE Id_Emp = a.Id_Emp
				AND id_plaza = a.Id_Plaza
				AND FechaIni = a.FechaIni
				AND FechaFin = a.FechaFin
				AND desdevalida = a.desdevalida
			ORDER BY y DESC, n DESC, p DESC
			)

	--------------------------------------------------------------------
	IF OBJECT_ID(N''tempdb..#plazas'') IS NOT NULL
		DROP TABLE #plazas;

	SELECT id_plaza
	INTO #plazas
	FROM PlazaEmpleados
	WHERE id_emp = @Idemp

	IF OBJECT_ID(N''tempdb..#plazaemp'') IS NOT NULL
		DROP TABLE #plazaemp;

	SELECT a.id_plaza, a.id_emp, a.id_nodo, a.Fecha desde, IsNull((
				SELECT dateadd(minute, - 1, min(fecha))
				FROM plazaempleados
				WHERE id_plaza = a.id_plaza
					AND fecha > a.Fecha
				), ''9999-12-31T00:00:00'') hasta
	INTO #plazaemp
	FROM plazaempleados a
	JOIN #plazas b ON a.Id_plaza = b.id_plaza
	WHERE year(fecha) != 9999

	IF OBJECT_ID(N''tempdb..#stsmot_tmp01'') IS NOT NULL
		DROP TABLE #stsmot_tmp01;

	SELECT a.id_plaza, b.Valor_IdCampo sts, c.cvetipoplaza mot, b.Fecha
	INTO #stsmot_tmp01
	FROM #plazas a
	JOIN HPlazas b ON a.id_plaza = b.Id_plaza and b.Id_TipoMovPlazas = 2
	join (
		SELECT id_plaza, fecha, ttp.cvetipoplaza
		FROM hplazas hp
		join TTipoPlaza ttp on ttp.Id_TipoPlaza = hp.Valor_IdCampo
		WHERE hp.Id_TipoMovPlazas = 1
	) c on c.id_plaza = b.id_plaza and b.fecha = c.fecha
	

	IF OBJECT_ID(N''tempdb..#stsmot'') IS NOT NULL
		DROP TABLE #stsmot;

	SELECT a.id_plaza, a.sts, a.mot, a.fecha desde, IsNull((
				SELECT dateadd(minute, - 1, min(fecha))
				FROM #stsmot_tmp01
				WHERE id_plaza = a.id_plaza
					AND fecha > a.fecha
				), ''9999-12-31T00:00:00'') hasta
	INTO #stsmot
	FROM #stsmot_tmp01 a

	IF OBJECT_ID(N''tempdb..#hist_tmp01'') IS NOT NULL
		DROP TABLE #hist_tmp01;

	SELECT row_number() OVER (
			ORDER BY a.Id_plaza, a.desde DESC, b.desde DESC
			) r, a.Id_plaza, a.Id_Emp, a.id_nodo, b.sts, b.mot, a.desde d1, a.hasta h1, b.desde d2, b.hasta h2
	INTO #hist_tmp01
	FROM #plazaemp a
	JOIN #stsmot b ON a.Id_plaza = b.id_plaza
		AND (
			a.desde BETWEEN b.desde AND b.hasta
			OR b.desde BETWEEN a.desde AND a.hasta
			)

	IF OBJECT_ID(N''tempdb..#hist'') IS NOT NULL
		DROP TABLE #hist;

	SELECT *, iif(sts = 1
			AND mot IN (''10'', ''95'')
			OR sts = 3
			AND mot NOT IN (''20'', ''24'', ''25''), (
				SELECT min(d1)
				FROM #hist_tmp01 b
				WHERE b.id_plaza = a.Id_plaza
					AND (
						b.sts = 1
						AND b.mot IN (''10'', ''95'')
						OR b.sts = 3
						AND b.mot NOT IN (''20'', ''24'', ''25'')
						)
					AND b.d1 > (
						SELECT max(d1)
						FROM #hist_tmp01 c
						WHERE a.id_plaza = c.Id_plaza
							AND c.d1 < a.d1
							AND (
								c.id_emp != a.Id_Emp
								OR c.sts = 6
								)
						)
				), NULL) desde1095
	INTO #hist
	FROM #hist_tmp01 a
	ORDER BY id_plaza, r

	IF OBJECT_ID(N''tempdb..#hist_actual'') IS NOT NULL
		DROP TABLE #hist_actual;

	DECLARE @qna AS INT = 201320

	SELECT r, id_plaza, id_emp, id_nodo, sts, mot, (
			CASE 
				WHEN d1 >= d2
					THEN d1
				WHEN d1 < d2
					THEN d2
				END
			) desde, iif(h1 >= h2, h2, h1) hasta, desde1095
	INTO #hist_actual
	FROM #hist a

	IF OBJECT_ID(N''tempdb..#Nueva'') IS NOT NULL
		DROP TABLE #Nueva;

	SELECT r, id_plaza, id_emp, id_nodo, sts, mot, iif((
				SELECT TOP 1 1
				FROM #hist_actual
				WHERE id_plaza = a.id_plaza
					AND desde > a.desde1095
					AND desde < a.desde
					AND mot IN (''44'', ''45'', ''46'', ''48'', ''55'')
					AND a.desde1095 IS NOT NULL
				) = 1, desde1095, desde) AS desde, hasta, desde1095
	INTO #Nueva
	FROM #hist_actual a

	IF OBJECT_ID(N''tempdb..#tmpfinish'') IS NOT NULL
		DROP TABLE #tmpfinish;

	SELECT a.r, a.Id_plaza, iif(sts = 3
			AND mot NOT IN (''20'', ''24'', ''25''), (
				SELECT TOP 1 id_emp
				FROM #Nueva
				WHERE id_plaza = a.id_plaza
					AND desde < a.desde
				ORDER BY desde DESC
				), id_emp) id_emp, a.id_nodo, a.sts, a.mot, a.desde, a.hasta, a.desde1095
	INTO #tmpfinish
	FROM #Nueva a

	IF OBJECT_ID(N''tempdb..#ingatum'') IS NOT NULL
		DROP TABLE #ingatum;

	SELECT id_plaza, id_emp, id_nodo, sts, mot, cast(year(desde) AS VARCHAR) + '''' + Right(''00'' + Cast(CASE 
					WHEN (day(desde) > 15)
						THEN month(desde) * 2
					ELSE (month(desde) * 2) - 1
					END AS VARCHAR(2)), 2) AS desde, cast(year(ISNULL(hasta, ''9999-12-31T00:00:00'')) AS VARCHAR) + '''' + Right(''00'' + Cast(CASE 
					WHEN (day(ISNULL(hasta, ''9999-12-31T00:00:00'')) > 15)
						THEN month(ISNULL(hasta, ''9999-12-31T00:00:00'')) * 2
					ELSE (month(ISNULL(hasta, ''9999-12-31T00:00:00'')) * 2) - 1
					END AS VARCHAR(2)), 2) AS hasta
	INTO #ingatum
	FROM #tmpfinish
	WHERE id_emp = @Idemp

	------------------------------------------------------
	IF OBJECT_ID(N''tempdb..#ingatumo'') IS NOT NULL
		DROP TABLE #ingatumo;

	SELECT DISTINCT #ingatum.*, dsv1.folio
	INTO #ingatumo
	FROM #ingatum
	LEFT JOIN #putofolio dsv1 ON #ingatum.Id_plaza = dsv1.Id_Plaza
		AND #ingatum.desde = dsv1.desdevalida
		AND #ingatum.hasta = iif((dsv1.FechaFin = dsv1.FechaIni), 999924, cast(dbo.datetoqna(dateadd(day, - 1, dsv1.fechafin)) AS INT))

	--and #ingatum.hasta = cast(dbo.datetoqna(dateadd(day, -1, dsv1.fechafin)) as int) 
	IF OBJECT_ID(N''tempdb..#inganvo'') IS NOT NULL
		DROP TABLE #inganvo;

	SELECT pik.PlazaIEEPO AS plaza, Right(''00'' + cast(ppp.sts AS VARCHAR(2)), 2) AS tipo, ppp.mot AS motivo, ppp.desde, ppp.hasta, TLP28.UDP AS ud, K.descripcion AS Nivel_Pago, cts.clave AS CT, cts2.descripcion AS CT_Nombre, ppp.Folio, ppp.Id_plaza, ppp.Id_Emp
	INTO #inganvo
	FROM #ingatumo ppp
	LEFT JOIN PlazaIEEPO Pik ON ppp.Id_plaza = Pik.Id_plaza
	JOIN VistaTablalongitud cts ON cts.id_nodo = ppp.id_nodo
	JOIN TNivel3SE cts2 ON cts.clave = cts2.clave
	LEFT JOIN (
		SELECT b.Id_plaza, a.id_tabulador_se_nivel_pago, a.Nivel, a.Descripcion, b.Fecha
		FROM Ttabulador_se_nivel_pago a
		INNER JOIN htabulador_se_nivel_pago b ON a.Id_tabulador_se_nivel_pago = b.Id_rel
		) K ON pik.id_plaza = K.Id_plaza
	LEFT JOIN TablaLongitudProp_28 TLP28 ON ppp.id_nodo = TLP28.id_nodo
	ORDER BY id_plaza, desde

	DELETE
	FROM #inganvo
	WHERE hasta >= cast(dbo.datetoqna(@Fecha) AS INT)
		AND SUBSTRING(plaza, 8, 2) = ''AB''
		AND TIPO = ''03''

	UPDATE #inganvo
	SET tipo = ''03''
	WHERE HASTA < cast(dbo.datetoqna(@Fecha) AS INT)
		AND SUBSTRING(plaza, 8, 2) = ''AB''
		AND TIPO = ''06''

	IF OBJECT_ID(N''tempdb..#ingatumadre'') IS NOT NULL
		DROP TABLE #ingatumadre;

	SELECT plaza, tipo, motivo, desde, hasta, ud, (
			SELECT TOP 1 nivel
			FROM htabulador_se_cm bb
			JOIN Ttabulador_se_cm dd ON dd.Id_Tabulador_se_cm = bb.Id_rel
			WHERE bb.id_plaza = cc.id_plaza
				AND cast(dbo.datetoqna(bb.fecha) AS INT) <= CAST(cc.hasta AS INT)
			ORDER BY bb.fecha DESC
			) AS [Sueldo Base], Nivel_pago, ct, CT_Nombre, Folio, cc.Id_plaza, cc.Id_Emp
	INTO #ingatumadre
	FROM #inganvo cc
	ORDER BY desde, id_plaza

	---------------------------------------------------------------------------------------------
	------------------------------------- empalmes
	SELECT x.Id_plaza, x.estatus, x.motivo, y.id_detalle, cast(year(x.Fecha) AS VARCHAR) + '''' + Right(''00'' + Cast(CASE 
					WHEN (day(x.Fecha) > 15)
						THEN month(x.Fecha) * 2
					ELSE (month(x.Fecha) * 2) - 1
					END AS VARCHAR(2)), 2) AS desde, cast(year(ISNULL(y.Fecha, ''9999-12-31T00:00:00'')) AS VARCHAR) + '''' + Right(''00'' + Cast(CASE 
					WHEN (day(ISNULL(y.Fecha, ''9999-12-31T00:00:00'')) > 15)
						THEN month(ISNULL(y.Fecha, ''9999-12-31T00:00:00'')) * 2
					ELSE (month(ISNULL(y.Fecha, ''9999-12-31T00:00:00'')) * 2) - 1
					END AS VARCHAR(2)), 2) AS hasta
	INTO #qr2E
	FROM (
		SELECT row_number() OVER (
				ORDER BY a.id_plaza, a.fecha
				) row, b.id_detalle, a.Id_plaza, a.Valor_IdCampo estatus, b.cvetipoplaza motivo, a.fecha fecha
		FROM (
			SELECT *
			FROM Empalme_HPlazas
			WHERE Id_TipoMovPlazas = 2
			) a
		LEFT JOIN (
			SELECT ehp.*, ttp.cvetipoplaza
			FROM Empalme_HPlazas ehp
			join ttipoplaza ttp on ehp.valor_idcampo = ttp.id_tipoplaza
			WHERE Id_TipoMovPlazas = 1
			) b ON a.Fecha = b.Fecha
			AND a.Id_plaza = b.Id_plaza
		WHERE a.Id_plaza IN (
				SELECT id_plaza
				FROM empalme_plazaempleados
				WHERE Id_Emp = @Idemp
				)
			AND a.Valor_IdCampo <> 13
			AND NOT (
				a.Valor_IdCampo = 4
				AND b.Valor_IdCampo = 71
				)
		) x
	LEFT JOIN (
		SELECT (
				row_number() OVER (
					ORDER BY a.id_plaza, a.fecha
					) - 1
				) row, b.id_detalle, a.Id_plaza, a.Valor_IdCampo estatus, b.CveTipoPlaza motivo, DATEADD(DD, - 1, a.fecha) fecha
		FROM (
			SELECT *
			FROM Empalme_HPlazas
			WHERE Id_TipoMovPlazas = 2
			) a
		LEFT JOIN (
			SELECT ehp.*, ttp.CveTipoPlaza
			FROM Empalme_HPlazas ehp
			join ttipoplaza ttp on ehp.valor_idcampo = ttp.id_tipoplaza
			WHERE Id_TipoMovPlazas = 1
			) b ON a.Fecha = b.Fecha
			AND a.Id_plaza = b.Id_plaza
		WHERE a.Id_plaza IN (
				SELECT id_plaza
				FROM empalme_plazaempleados
				WHERE Id_Emp = @Idemp
				)
			AND a.Valor_IdCampo <> 13
			AND NOT (
				a.Valor_IdCampo = 4
				AND b.Valor_IdCampo = 71
				)
		) y ON x.row = y.row
		AND x.Id_plaza = y.Id_plaza

	SELECT DISTINCT pik.PlazaIEEPO AS plaza, Right(''00'' + cast(piko.tipo AS VARCHAR(2)), 2) AS tipo, piko.motivo, CASE 
			WHEN piko.motivo LIKE ''[45][0-9]''
				THEN piko.Hdesde
			ELSE piko.desde
			END AS desde, CASE 
			WHEN piko.motivo LIKE ''[45][0-9]''
				THEN piko.Hhasta
			ELSE piko.hasta
			END AS hasta, TLP28.UDP AS ud, K.descripcion AS Nivel_Pago, cts.clave AS CT, cts2.descripcion AS CT_Nombre, dsv1.Folio, piko.Id_plaza, piko.Id_Emp
	INTO #ingatumE
	FROM (
		SELECT q1.Id_plaza, Id_Emp, q1.desde, q1.hasta, isnull(estatus, (
					SELECT TOP 1 estatus
					FROM #qr2E qr2_1
					WHERE qr2_1.desde <= q1.desde
					ORDER BY qr2_1.desde DESC
					)) AS tipo, isnull(motivo, (
					SELECT TOP 1 motivo
					FROM #qr2E qr2_1
					WHERE qr2_1.desde <= q1.desde
					ORDER BY qr2_1.desde DESC
					)) motivo, q1.id_nodo, isnull(#qr2E.desde, (
					SELECT max(desde)
					FROM #qr2E qr2_1
					WHERE qr2_1.desde <= q1.desde
					)) AS Hdesde, isnull(#qr2E.hasta, (
					SELECT TOP 1 hasta
					FROM #qr2E qr2_1
					WHERE qr2_1.desde <= q1.desde
					ORDER BY qr2_1.desde DESC
					)) AS Hhasta, #qr2E.id_detalle
		FROM (
			SELECT *
			FROM (
				SELECT x.id_plaza, x.id_emp, x.id_nodo, cast(year(x.Fecha) AS VARCHAR) + '''' + Right(''00'' + Cast(CASE 
								WHEN (day(x.Fecha) > 15)
									THEN month(x.Fecha) * 2
								ELSE (month(x.Fecha) * 2) - 1
								END AS VARCHAR(2)), 2) AS desde, cast(year(ISNULL(y.Fechax, ''9999-12-31T00:00:00'')) AS VARCHAR) + '''' + Right(''00'' + Cast(CASE 
								WHEN (day(ISNULL(y.Fechax, ''9999-12-31T00:00:00'')) > 15)
									THEN month(ISNULL(y.Fechax, ''9999-12-31T00:00:00'')) * 2
								ELSE (month(ISNULL(y.Fechax, ''9999-12-31T00:00:00'')) * 2) - 1
								END AS VARCHAR(2)), 2) AS hasta, (
						CASE 
							WHEN y.id_nodo IS NULL
								OR y.id_nodo = x.id_nodo
								OR x.Id_Emp <> y.Id_Emp
								THEN ''-''
							ELSE ''''
							END
						) mov
				FROM (
					SELECT ROW_NUMBER() OVER (
							ORDER BY id_plaza, a.fecha
							) row, a.*
					FROM empalme_plazaempleados a
					WHERE id_plaza IN (
							SELECT id_plaza
							FROM empalme_plazaempleados
							WHERE Id_Emp = @Idemp
							)
					) x
				LEFT JOIN (
					SELECT (
							ROW_NUMBER() OVER (
								ORDER BY id_plaza, a.fecha
								) - 1
							) row, a.*, DATEADD(DD, - 1, a.fecha) fechax
					FROM empalme_plazaempleados a
					WHERE id_plaza IN (
							SELECT id_plaza
							FROM empalme_plazaempleados
							WHERE Id_Emp = @Idemp
							)
					) y ON x.row = y.row
					AND x.id_plaza = y.id_plaza
				) AS qry1
			WHERE id_emp = @Idemp
			) q1
		LEFT JOIN #qr2e ON q1.Id_plaza = #qr2E.id_plaza
			AND (CAST(#qr2E.desde AS INT) <= cast(q1.hasta AS INT))
			AND (CAST(#qr2E.desde AS INT) >= cast(q1.desde AS INT))
		) AS piko
	LEFT JOIN PlazaIEEPO Pik ON piko.Id_plaza = Pik.Id_plaza
	JOIN VistaTablalongitud cts ON cts.id_nodo = piko.id_nodo
	JOIN TNivel3SE cts2 ON cts.clave = cts2.clave
	LEFT JOIN (
		SELECT cast(''Emp '' + a.folio AS VARCHAR) folio, a.id_emp, b.id_plaza, b.fechaini, b.fechafin, b.Id_Detalle
		FROM FUP_Documentos a
		INNER JOIN FUP_Documento_Detalle b ON a.Id_Documento = b.Id_Documento
			AND a.Id_Emp = @Idemp
		) dsv1 ON piko.Id_plaza = dsv1.Id_Plaza
		AND CAST(piko.desde AS INT) = cast(dbo.datetoqna(dsv1.fechaini) AS INT)
		AND piko.id_detalle = dsv1.id_detalle
	LEFT JOIN (
		SELECT b.Id_plaza, a.id_tabulador_se_nivel_pago, a.Nivel, a.Descripcion, b.Fecha
		FROM Ttabulador_se_nivel_pago a
		INNER JOIN htabulador_se_nivel_pago b ON a.Id_tabulador_se_nivel_pago = b.Id_rel
		) K ON pik.id_plaza = K.Id_plaza
	LEFT JOIN TablaLongitudProp_28 TLP28 ON piko.id_nodo = TLP28.id_nodo
	GROUP BY piko.desde, piko.id_plaza, pik.PlazaIEEPO, piko.tipo, piko.motivo, piko.hasta, TLP28.UDP, K.descripcion, cts.clave, cts2.descripcion, piko.Id_Emp, dsv1.Folio, piko.Hdesde, piko.Hhasta

	------------------------------------- empalmes
	--select * from #ingatumadre order by id_plaza, desde

	select distinct a.*, isnull(cast(p.pc as int), 0) thst
	from (
		SELECT plaza, tipo, motivo, desde, hasta, ud, [Sueldo Base], Nivel_pago, ct, CT_Nombre, Folio, Id_plaza, Id_Emp, '' '' origen
		FROM #ingatumadre a
		UNION
		SELECT plaza, tipo, motivo, desde, hasta, ud, (
				SELECT TOP 1 nivel
				FROM htabulador_se_cm bb
				JOIN Ttabulador_se_cm dd ON dd.Id_Tabulador_se_cm = bb.Id_rel
				WHERE bb.id_plaza = cc.id_plaza
					AND cast(dbo.datetoqna(bb.fecha) AS INT) <= CAST(cc.hasta AS INT)
				ORDER BY bb.fecha DESC
				) AS [Sueldo Base], Nivel_pago, ct, CT_Nombre, Folio, cc.Id_plaza, cc.Id_Emp, ''Empalme''
		FROM #ingatume cc
	) a
--	left join Thst_Plaza b on a.plaza = b.plazaieepo and b.Estatus = 1
	join PlazaIEEPO p on a.Id_plaza = p.Id_plaza
	ORDER BY a.desde, a.id_plaza
END
'
GO

GO
PRINT N'Creating [dbo].[SP_GetPlazas]'
GO
IF OBJECT_ID(N'[dbo].[SP_GetPlazas]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[SP_GetPlazas]
	-- Add the parameters for the stored procedure here
	@idemple int,
	@ID_USUARIO int
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
SET NOCOUNT ON;
declare @plaza varchar (21)
    declare @tipo varchar (2)
    declare @motivo varchar (2)
    declare @desde varchar (6)
    declare @hasta varchar (6)
    declare @UD varchar (2)
    declare @Nivel_Pago varchar (2)
    declare @CT varchar (10)
    declare @CTNOMBRE varchar (60)
    declare @FOLIO varchar (10)
    declare @ID_PLAZA INT
    declare @Id_Emp INT
    declare @origen varchar(15)
    declare @thst int 
    
     
    declare @ij int
    declare @idplaza int = 0
    declare @idplaza_p int = 0
    declare @midesde varchar(6) = ''''
        
    DECLARE @getplazas TABLE(plaza varchar(21), tipo varchar(2), motivo varchar(2), 
                         	desde varchar(6),hasta varchar(6),ud varchar(2),Sueldo_ni varchar(2),Nivel_Pago varchar(6),
                         	CT VARCHAR(19),	CT_Nombre VARCHAR(50),Folio VARCHAR(10), Id_plaza INT,	Id_Emp INT, origen varchar(10) , thst int)

declare @Permiso bit = (select id_usuario from accesosmenus where claveMenu = 1500000193 and id_usuario = @id_usuario);
  if @Permiso is null
     set @Permiso = 0
  else
     set @Permiso = 1
  

INSERT INTO @getplazas   EXEC [dbo].[SP_SPl_1] @idemp=@idemple
declare @Seccion59 bit = (select id_usuario from accesosmenus where claveMenu = 1500000228 and id_usuario = @id_usuario);
declare @Seccion22 bit = (select id_usuario from accesosmenus where claveMenu = 1500000229 and id_usuario = @id_usuario);
if @Seccion59 is null
   set @Seccion59 = 0
else
   set @Seccion59 = 1
   
 if @Seccion22 is null
   set @Seccion22 = 0
else
   set @Seccion22 = 1
   
--   select * from @getplazas order by Id_plaza, desde
 DECLARE cHistoria SCROLL CURSOR FOR    
 SELECT id_plaza FROM @getplazas group by id_plaza
            
      OPEN cHistoria
      FETCH next from cHistoria INTO @id_plaza
  	  SET @idplaza_p = @Id_plaza	
  	 
       WHILE (@@FETCH_STATUS = 0 )
	   BEGIN   
	        SET @idplaza_p = @Id_plaza  
	       -- print @idplaza_p
            DECLARE cHistoriaPlaza SCROLL CURSOR FOR    
	        SELECT distinct b.plaza, b.tipo, b.motivo, b.desde, b.hasta, b.UD, b.Nivel_Pago, b.CT,  b.CT_NOMBRE, 
            b.FOLIO, b.ID_PLAZA, b.Id_Emp, b.origen, b.thst FROM @getplazas B  where b.ID_PLAZA = @idplaza_p order by desde, hasta
            
			OPEN cHistoriaPlaza
			FETCH FIRST from cHistoriaPlaza INTO @plaza, @tipo, @motivo, @desde, @hasta, @UD, @Nivel_Pago, @CT,  @CTNOMBRE, 
            @FOLIO, @ID_PLAZA, @Id_Emp, @origen, @thst
			SET @midesde = @desde
			SET @idplaza = @Id_plaza	
			 --print @hasta
			--print @midesde			  
         
          
			WHILE (@@FETCH_STATUS = 0 )
			BEGIN 
  
				FETCH NEXT from cHistoriaPlaza INTO @plaza, @tipo, @motivo, @desde, @desde, @UD, @Nivel_Pago, @CT,  @CTNOMBRE, 
				 @FOLIO, @ID_PLAZA, @Id_Emp, @origen, @thst
				--SET @midesde = @desde
				--SET @idplaza = @Id_plaza
				if cast(@midesde as int) - CAST(@desde as int) > 1
				   SET @midesde = @desde
		
			END
			FETCH PRIOR from cHistoriaPlaza INTO @plaza, @tipo, @motivo, @desde, @hasta, @UD, @Nivel_Pago, @CT,  @CTNOMBRE, 
            @FOLIO, @ID_PLAZA, @Id_Emp, @origen, @thst
             update @getplazas set desde = @midesde where Id_plaza = @Id_plaza and 
             Id_Emp =@Id_Emp and (tipo <> ''11'' and tipo <> ''10'') and
             (hasta = ''999924'' or (@tipo = ''6'' or cast(@hasta as int) >= cast(dbo.fechaToAnioQuincena(GETDATE()) as INT)  ))
             and origen <> ''Empalme''
             CLOSE cHistoriaPlaza
			  DEALLOCATE cHistoriaPlaza
    
    FETCH NEXT from cHistoria INTO @Id_plaza
	END			 
	 CLOSE cHistoria
     DEALLOCATE cHistoria			 
	  
	  
	  SELECT distinct piee.Id_plaza, piee.Partida, piee.Unidad, piee.Subunidad, piee.Categoria, piee.Horas, piee.Diagonal, 
        b.plaza, b.tipo, b.motivo, b.desde,	b.hasta, b.Sueldo_ni, b.CT,
        case when a.id_rel IS null then ''22'' when a.id_rel= 3 then ''59'' end SS, b.origen FROM @getplazas b
      join PlazaIEEPO piee on piee.Id_plaza = b.id_plaza
      LEFT JOIN hSeccion__Sindical a ON a.id_plaza=b.id_plaza 
      where (@Seccion22 = 1 and @Seccion59 = 0 and a.id_plaza IS NULL) or
            (@Seccion22 = 1 and @Seccion59 = 1) or
            (@Seccion22 = 0 and @Seccion59 = 0 and a.id_plaza = -1 ) and @Permiso = 1 order by  piee.Id_plaza, b.hasta desc
-- declare @plaza varchar (21)
--    declare @tipo varchar (2)
--    declare @motivo varchar (2)
--    declare @desde varchar (6)
--    declare @hasta varchar (6)
--    declare @UD varchar (2)
--    declare @Nivel_Pago varchar (2)
--    declare @CT varchar (10)
--    declare @CTNOMBRE varchar (60)
--    declare @FOLIO varchar (10)
--    declare @ID_PLAZA INT
--    declare @Id_Emp INT
--    declare @origen varchar(15)
--    declare @thst int 
    
--    declare @ij int
--    declare @idplaza int = 0
--    declare @midesde varchar(6) = ''''
        
--    DECLARE @getplazas TABLE(plaza varchar(21), tipo varchar(2), motivo varchar(2), 
--                         	desde varchar(6),hasta varchar(6),ud varchar(2),Sueldo_ni varchar(2),Nivel_Pago varchar(6),
--                         	CT VARCHAR(19),	CT_Nombre VARCHAR(50),Folio VARCHAR(10), Id_plaza INT,	Id_Emp INT, origen varchar(10) , thst int)

--INSERT INTO @getplazas   EXEC [dbo].[SP_SPl_1] @idemp=@idemple

--declare @Seccion59 bit = (select id_usuario from accesosmenus where claveMenu = 1500000228 and id_usuario = @id_usuario);
--declare @Seccion22 bit = (select id_usuario from accesosmenus where claveMenu = 1500000229 and id_usuario = @id_usuario);
--if @Seccion59 is null
--   set @Seccion59 = 0
--else
--   set @Seccion59 = 1
   
-- if @Seccion22 is null
--   set @Seccion22 = 0
--else
--   set @Seccion22 = 1
   
   
-- DECLARE cHistoria SCROLL CURSOR FOR    
-- SELECT distinct b.plaza, b.tipo, b.motivo, b.desde, b.hasta, b.UD, b.Nivel_Pago, b.CT,  b.CT_NOMBRE, 
--            b.FOLIO, b.ID_PLAZA, b.Id_Emp, b.origen, b.thst FROM @getplazas B order by desde--, hasta
            
--      OPEN cHistoria
--      FETCH FIRST from cHistoria INTO @plaza, @tipo, @motivo, @desde, @hasta, @UD, @Nivel_Pago, @CT,  @CTNOMBRE, 
--            @FOLIO, @ID_PLAZA, @Id_Emp, @origen, @thst
--		 SET @midesde = @desde
--         SET @idplaza = @Id_plaza	
--          --print @hasta
--         print @midesde			   
--	  WHILE (@@FETCH_STATUS = 0 )
--      BEGIN 
  
--         FETCH NEXT from cHistoria INTO @plaza, @tipo, @motivo, @desde, @hasta, @UD, @Nivel_Pago, @CT,  @CTNOMBRE, 
--            @FOLIO, @ID_PLAZA, @Id_Emp, @origen, @thst
--         --SET @midesde = @desde
--         --SET @idplaza = @Id_plaza
		
--	  END
--	   FETCH PRIOR from cHistoria INTO @plaza, @tipo, @motivo, @desde, @hasta, @UD, @Nivel_Pago, @CT,  @CTNOMBRE, 
--            @FOLIO, @ID_PLAZA, @Id_Emp, @origen, @thst
--        --print @hasta
--         --print @midesde
--        -- if @hasta = ''999924''
--         --begin
--            update @getplazas set desde = @midesde where Id_plaza = @Id_plaza and Id_Emp =@Id_Emp and
--                   hasta = ''999924'' and origen <> ''Empalme''
--         --   print @midesde
--	    --end
--	  CLOSE cHistoria
--	  DEALLOCATE cHistoria

	  
--	  SELECT distinct piee.Id_plaza, piee.Partida, piee.Unidad, piee.Subunidad, piee.Categoria, piee.Horas, piee.Diagonal, 
--        b.plaza, b.tipo, b.motivo, b.desde,	b.hasta, b.Sueldo_ni, b.CT,
--        case when a.id_rel IS null then ''22'' when a.id_rel= 3 then ''59'' end SS, b.origen FROM @getplazas b
--      join PlazaIEEPO piee on piee.Id_plaza = b.id_plaza
--      LEFT JOIN hSeccion__Sindical a ON a.id_plaza=b.id_plaza 
--      where (@Seccion22 = 1 and @Seccion59 = 0 and a.id_plaza IS NULL) or
--            (@Seccion22 = 1 and @Seccion59 = 1) or
--            (@Seccion22 = 0 and @Seccion59 = 0 and a.id_plaza = -1 ) order by piee.Id_plaza, b.desde
END
'
GO

GO
PRINT N'Creating [dbo].[SIGP_Prelacion]'
GO
IF OBJECT_ID(N'[dbo].[SIGP_Prelacion]', 'P') IS NULL
EXEC sp_executesql N'
 CREATE procedure [dbo].[SIGP_Prelacion] AS      
 BEGIN      
  SET NOCOUNT ON;      
 select a.curp_spd as CURP,a.nombre_spd as NOMBRE,b.CONVOCATORIA,b.TIPO_CONVOCATORIA,d.descripcion as CONCURSO,    
 e.descripcion as EVALUACION_PRESENTADA,c.FOLIO_FEDERAL,c.RESULTADO,case when c.PRELACION is null then '''' else convert(varchar(10),c.PRELACION,103) end as PRELACION
 from spd_evaluados a    
 -- select * from spd_evaluados a    
 inner join spd_evaluados_detalle b on a.id_registro_spd = b.id_registro_spd    
 inner join spd_evaluados_hist c on b.id_detalle_spd = c.id_detalle_spd    
 inner join SPD_Tipo_Concurso d on b.id_tipo_concurso = d.id_tipo_concurso    
 inner join SPD_Tipo_Evaluacion e on e.id_tipo_evaluacion = b.id_tipo_evaluacion    
 where b.id_tipo_concurso = 1    
 order by b.convocatoria,b.tipo_convocatoria    
 END'
GO

GO
PRINT N'Creating [dbo].[SP_ObtienePagosDosPeriodosTablas]'
GO
IF OBJECT_ID(N'[dbo].[SP_ObtienePagosDosPeriodosTablas]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[SP_ObtienePagosDosPeriodosTablas]
@IdPeriodoActual int, @IdPeriodoAnterior int, @Tipo int
WITH EXEC AS CALLER
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	-- @Tipo = 0 muestra todos
	--			1 muestra las diferencias de liquidos
	--			2 muestra los que no cambiaron de liquido
	
	SET NOCOUNT ON;
	declare @TableAct varchar(20) = (select case when actualizado = 1 then ''Nom_histpagos'' else ''Histpagos'' end from calennomina where Id_Periodo = @IdPeriodoActual)
	declare @TableAnte varchar(20) = (select case when actualizado = 1 then ''Nom_histpagos'' else ''Histpagos'' end from calennomina where Id_Periodo = @IdPeriodoAnterior)
    
    declare @sql varchar(max)
    set @sql = ''select
isnull(a.Id_Periodo, 0) Id_Periodo_Actual,
isnull(b.Id_Periodo, 0) Id_Periodo_Anterior,
isnull(a.id_referencia,0) id_referencia_Actual,
isnull(b.id_referencia,0) id_referencia_Anterior,
isnull(a.id_emp, b.id_emp) Id_Emp, 
isnull(a.id_plaza, b.id_plaza) Id_Plaza,
vc.Clave CT, tl.UDP,em.RFC, pi.PlazaIEEPO Plaza,
round(isnull(a.Percepciones,0),2) Percepciones_Actual,
round(isnull(a.Deducciones,0),2) Deducciones_Actual,
round(isnull(a.Liquido,0),2) Liquido_Actual,
round(isnull(b.Percepciones,0),2) Percepciones_Anterior,
round(isnull(b.Deducciones,0),2) Deducciones_Anterior,
round(isnull(b.Liquido,0),2) Liquido_Anterior,
round(isnull(a.Liquido,0) - isnull(b.Liquido,0),2) Diferencia 
from (
  select  h.Id_ProcesoNomina,h.Id_Periodo,h.id_referencia, h.id_emp, h.id_plaza, sum(case when c.tipo = 1 then pesos+pesosexcento else 0 end) as Percepciones, sum(case when c.tipo = 2 then pesos+pesosexcento else 0 end) as Deducciones,
  round(sum ( case when c.tipo = 1 then pesos+pesosexcento else 0 end - case when c.tipo = 2 then pesos+pesosexcento else 0 end),2) as Liquido 
  from ''+@TableAct+'' h inner join Conceptos C on  h.id_concepto = c.id_concepto and C.Tipo in (1,2)
  where h.id_periodo in (''+cast(@IdPeriodoActual as varchar)+'') 
  group by h.Id_ProcesoNomina,h.id_emp, h.id_plaza,h.Id_Periodo,h.id_referencia
) a
full join (
select  h.Id_ProcesoNomina,h.Id_Periodo,h.id_referencia, h.id_emp, h.id_plaza, sum(case when c.tipo = 1 then pesos+pesosexcento else 0 end) as Percepciones, sum(case when c.tipo = 2 then pesos+pesosexcento else 0 end) as Deducciones,
round(sum ( case when c.tipo = 1 then pesos+pesosexcento else 0 end - case when c.tipo = 2 then pesos+pesosexcento else 0 end),2) as Liquido 
from ''+@TableAnte+'' h inner join Conceptos C on  h.id_concepto = c.id_concepto and C.Tipo in (1,2)
where h.id_periodo in (''+cast(@IdPeriodoAnterior as varchar)+'') 
group by h.Id_ProcesoNomina,h.id_emp, h.id_plaza,h.Id_Periodo,h.id_referencia
) b on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join PlazaIEEPO pi on pi.id_plaza = isnull(a.id_plaza, b.id_plaza)
inner join Empleados em on em.id_emp = isnull(a.id_emp, b.id_emp)
inner join (
  select pe.Id_Emp, pe.Id_plaza, pe.id_nodo from plazaempleados pe
  inner join (
  select id_plaza, max(fecha) fecha from plazaempleados where fecha <= (select FechaIni from CalenNomina where Id_Periodo=1213 ) group by id_plaza
  ) h on h.id_plaza = pe.id_plaza and h.fecha = pe.fecha
) pen on pen.id_emp = em.id_emp and pen.id_plaza = pi.id_plaza
inner join VistaTablaLongitud vc on vc.Id_Nodo = pen.id_nodo
inner join TablaLongitudProp_28 tl on tl.id_nodo = vc.Id_Nodo ''
if(@Tipo = 1)
	set @sql = @sql + '' where isnull(a.Liquido,0) <> isnull(b.Liquido,0)''
if(@Tipo = 2)
	set @sql = @sql + '' where isnull(a.Liquido,0) = isnull(b.Liquido,0)''
    
    -- Insert statements for procedure here
	exec(@sql)
END'
GO

GO
PRINT N'Creating [dbo].[spdHistPagos]'
GO
IF OBJECT_ID(N'[dbo].[spdHistPagos]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		wcahun
-- Create date: 10/10/2013
-- Description:	procedimiento para eliminar un concepto histpagos  base a su periodo
-- =============================================
CREATE PROCEDURE [dbo].[spdHistPagos]
	@id_plaza int
	,@id_emp int
	,@id_periodo int
	,@id_periodoPago int
	,@id_concepto int
AS
BEGIN
BEGIN TRY

	delete from histpagos
	where ID_PERIODO=@id_periodo and id_periodopago=@id_periodoPago
	and id_plaza=@id_plaza and id_emp=@id_emp
	and id_concepto=@id_concepto 
	
	if @@rowcount<1 
		RAISERROR (''no se elimino ningun valor'', 16,1);
	else
		select ''correcto'' as resultado
END TRY
BEGIN CATCH
    SELECT ERROR_MESSAGE() as resultado
    
END CATCH;


END'
GO

GO
PRINT N'Creating [dbo].[SIGP_REFERENCIAS_EMPLEADOS]'
GO
IF OBJECT_ID(N'[dbo].[SIGP_REFERENCIAS_EMPLEADOS]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[SIGP_REFERENCIAS_EMPLEADOS]
AS
select b.id_emp as ID_DE_IDENTIFICACION_DEL_EMPLEADO,
'''' RFC,'''' CURP,A.APPATERNO AS PRIMER_APELLIDO,A.APMATERNO AS SEGUNDO_APELLIDO,A.NOMBRE,
'''' FECHA_NACIMIENTO,'''' GENERO, '''' TIPO_DE_DOMICILIO,'''' PAIS,'''' ENTIDAD,'''' MUNICIPIO,'''' LOCALIDAD,'''' CALLE,'''' TIPO_DE_VIALIDAD,'''' ASENTAMIENTO_COLONIA,
'''' NUMERO_INTERIOR,'''' NUMERO_EXTERIOR,'''' MANZANA,'''' LOTE,'''' CODIGO_POSTAL,'''' TELEFONO,'''' TIPO_DE_TELEFONO,'''' NUMERO_TELEFONICO,'''' EXTENSION,'''' CORREO_ELECTRONICO,
'''' TIPO_CORREO,'''' DIRECCION_DE_CORREO
from cnnombres a
inner join empleados b on a.id_emp=b.id_emp
where a.nombre<>''''
ORDER BY A.ID_EMP'
GO

GO
PRINT N'Creating [dbo].[dsvEmpleado]'
GO
IF OBJECT_ID(N'[dbo].[dsvEmpleado]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[dsvEmpleado]
	(
	@id_emp int
)
 
AS
BEGIN
declare @today datetime = getdate()
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	;with emp as
(
 select id_emp, NOEMPx, Nombre, ApPaterno, ApMaterno, rfc, curp,
	case id_cod when 2 then ''[1]'' when 3 then ''[0]'' else ''[]'' end id_cod
 from empleados
 where id_emp = @id_emp
),
altasep as
(
SELECT top 1 Fecha_Alta_SEP as alta_sep
from HFecha_Alta_SEP 
where id_emp = @id_emp 
order by movimiento desc
),
altarama as
(
 select top 1 Fecha_Alta_Rama alta_rama
 from HFecha_Alta_Rama
 where id_emp = @id_emp
 order by movimiento desc
),
altafed as
(
 select top 1 Fecha_Alta_Gob_Fed alta_fed
 from HFecha_Alta_Gob_Fed
 where id_emp = @id_emp
 order by movimiento desc
)
select id_emp, NOEMPx as numeroempleado, Nombre, ApPaterno as paterno, ApMaterno as materno, rfc, curp, alta_fed as Fecha_Alta_Gob_Fed, alta_rama as Fecha_Alta_Rama, alta_sep as fecha_alta_sep, id_cod
from emp
left join altasep on 1 = 1
left join altarama on 1 = 1
left join altafed on 1 = 1
    
END
'
GO

GO
PRINT N'Creating [dbo].[SP_ImportaDatosSIAPSEP_EMP]'
GO
IF OBJECT_ID(N'[dbo].[SP_ImportaDatosSIAPSEP_EMP]', 'P') IS NULL
EXEC sp_executesql N'CREATE procedure [dbo].[SP_ImportaDatosSIAPSEP_EMP] as 
begin
drop table WEmpNew
select w.*,IDENTITY(int, 1,1) as Llave  into WEmpNew 
from wempleados w left join empleados e on e.rfc=w.rfc Where e.id_emp is null order by w.RFC --and w.vigencia=''A'' 

--Saca Maximo de Id_emp
Declare @MaxIDemp int
set @MaxIDemp =(Select max(id_emp) from empleados)
--select @MaxIDemp

--Saca Maximo de Noempx
Declare @MaxNoempx int
set @MaxNoempx =(Select max(Noempx) from empleados where noempx<38000)
--select @MaxNoempx

----Insertar registros de empleados que no existen

Insert into empleados (id_emp,noempx,nombre,appaterno,apmaterno,rfc,rfcfecha,rfchomo,imss,fecha_alta,vigencia,sexo,
id_nacionalidad,id_banco,cuenta_invernomina,curp,id_direccion,cia,id_cia,edocivil,fecha_baja,fecha_bajass,
id_estadonac,lunac,nip,id_cod)
select @MaxIDemp+llave as id_emp, cast(@MaxNoempx+llave as varchar(5)) as noempx,
nombre,appaterno,apmaterno,rfc,
Cast(''19''+substring(rfc,5,2)+''/''+ substring(rfc,7,2)+''/''+substring(rfc,9,2) as datetime) as rfcfecha,
--Cast(''19''+substring(rfc,5,2)+''/''+ substring(rfc,9,2)+''/''+substring(rfc,7,2) as datetime) as rfcfecha,
substring(rfc,11,3) as rfchomo,
imss,fecha_alta,vigencia,sexo,id_nacionalidad,id_banco,cuenta_invernomina,curp,0 as id_direccion,20 as cia,22 as id_cia
,edocivil,fecha_baja,fecha_bajass,id_estadonac,lunac,rfc as nip, 
case when cuenta_invernomina is null then 3 else case when cuenta_invernomina <> '''' then  2 else 3 end end as id_cod
from WEmpNew

-- Insertar en historia de cias a empleados nuevos
insert into hcia (id_emp,id_rel,fecha,id_user,movimiento)
select @MaxIDemp+llave as id_emp,22 as id_rel, fecha_alta as fecha, 0 as id_user, getdate() as movimiento
from WEmpNew

--select * from hfecha_alta_gob_fed
-- Insertar en historia de fecha de alta de Gobierno Federal
insert into hfecha_alta_gob_fed (id_emp,fecha_alta_gob_fed,fecha,id_user,movimiento)
select 
@MaxIDemp+llave as id_emp,
fecha_alta_gob_fed, 
fecha_alta as fecha, 
0 as id_user
, getdate() as movimiento
from WEmpNew

--select * from hfecha_alta_Sep 
insert into hfecha_alta_Sep (id_emp,fecha_alta_Sep,fecha,id_user,movimiento)
select @MaxIDemp+llave as id_emp,fecha_alta_Sep, fecha_alta as fecha, 0 as id_user, getdate() as movimiento
from WEmpNew
--select * from WEmpNew

drop table wBaseEmp
-- Crear Tabla Temporal con todos los rfc encontrados
select e.id_emp,e.noempx,e.rfc,
case when w.nombre is null then e.nombre else case when rtrim(ltrim(w.nombre)) <> '''' then w.nombre else e.nombre end end as nombre,
case when w.Appaterno is null then e.Appaterno else case when rtrim(ltrim(w.Appaterno)) <> '''' then w.Appaterno else e.Appaterno end end as Appaterno,
case when w.ApMaterno is null then e.ApMaterno else case when rtrim(ltrim(w.ApMaterno)) <> '''' then w.ApMaterno else e.ApMaterno end end as ApMaterno,
case when w.Imss is null then e.Imss else case when rtrim(ltrim(w.Imss)) <> '''' then w.Imss else e.Imss end end as Imss,
case when w.Fecha_alta is null then e.Fecha_alta else case when w.Fecha_alta > ''1900/01/01'' then w.Fecha_alta else e.Fecha_alta end end as Fecha_alta,
case when w.Vigencia is null then e.Vigencia else case when rtrim(ltrim(w.Vigencia)) <> '''' then w.Vigencia else e.Vigencia end end as Vigencia,
case when w.Sexo is null then e.Sexo else case when rtrim(ltrim(w.Sexo)) <> '''' then w.Sexo else e.Sexo end end as Sexo,
case when w.id_nacionalidad is null then e.id_nacionalidad else w.id_nacionalidad end as id_nacionalidad,
case when w.id_banco is null then e.id_banco else w.id_banco end as id_banco,
case when w.Cuenta_invernomina is null then e.Cuenta_invernomina else case when rtrim(ltrim(w.Cuenta_invernomina)) <> '''' then w.Cuenta_invernomina else e.Cuenta_invernomina end end as Cuenta_invernomina,
case when w.curp is null then e.curp else case when rtrim(ltrim(w.curp)) <> '''' then w.curp else e.curp end end as  curp,
case when w.edocivil is null then e.edocivil else case when rtrim(ltrim(w.edocivil)) <> '''' then w.edocivil else e.edocivil end end as edocivil,
case when w.fecha_baja is null then e.fecha_baja else case when w.fecha_baja > ''1900/01/01'' then w.fecha_baja else e.fecha_baja end end as fecha_baja,
case when w.fecha_bajass is null then e.fecha_bajass else case when w.fecha_bajass > ''1900/01/01'' then w.fecha_bajass else e.fecha_bajass end end as fecha_bajass,
case when w.id_EstadoNac is null then e.id_EstadoNac else w.id_EstadoNac end as id_EstadoNac,
case when w.Lunac is null then e.Lunac else case when rtrim(ltrim(w.Lunac)) <> '''' then w.Lunac else e.Lunac end end as Lunac 
into wBaseEmp 
from wempleados w inner join empleados e on e.rfc=w.rfc and e.id_cia=22

--- va a faltar numero de isste
Update empleados 
set
empleados.nombre=b.nombre
,empleados.appaterno=b.appaterno  
,empleados.apmaterno=b.apmaterno
,empleados.rfc=b.rfc
,empleados.imss=b.imss
,empleados.fecha_alta=b.fecha_alta
,empleados.vigencia=b.vigencia
,empleados.sexo=b.sexo
,empleados.id_nacionalidad=b.id_nacionalidad
,empleados.id_banco=b.id_banco
,empleados.Cuenta_invernomina=b.Cuenta_invernomina
,empleados.curp=b.curp
,empleados.edocivil=b.edocivil
,empleados.fecha_baja=b.fecha_baja
,empleados.fecha_bajass=b.fecha_bajass
,empleados.id_EstadoNac=b.id_EstadoNac
,empleados.Lunac=b.Lunac
from wBaseEmp b where b.id_emp=empleados.id_emp

End


'
GO

GO
PRINT N'Creating [dbo].[spuHistPagosReg]'
GO
IF OBJECT_ID(N'[dbo].[spuHistPagosReg]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		wcahun
-- Create date: 10/10/2013
-- Description:	procedimiento para actualizar un concepto histpagos detalle  base a su periodo
-- =============================================
CREATE PROCEDURE [dbo].[spuHistPagosReg]
@id_plaza int, @id_emp int, @id_periodo int, @id_PeriodoPago int, @id_concepto int, @pesos float
WITH EXEC AS CALLER
AS
BEGIN

BEGIN TRY
  
  declare @idPlaza int = @id_plaza
  declare @idEmp int = @id_emp
  declare @idPeriodo int = @id_periodo
  declare @idPeriodoPago int = @id_PeriodoPago
  declare @idConcepto int = @id_concepto
  declare @pesosos float = @pesos
  
	update histpagos
	set pesos=@pesosos
	where ID_PERIODO=@idPeriodo and id_periodoPago=@idPeriodoPago
	and id_plaza=@idPlaza and id_emp=@idEmp
	and id_concepto=@idConcepto
	

	if @@rowcount<1 
		RAISERROR (''no se actualizó ningun valor'', 16,1);
	else
		select ''correcto'' as resultado
END TRY
BEGIN CATCH
    SELECT ERROR_MESSAGE() as resultado
    
END CATCH;


END'
GO

GO
PRINT N'Creating [dbo].[D3SL1PL4_3MPXQU1NUPN]'
GO
IF OBJECT_ID(N'[dbo].[D3SL1PL4_3MPXQU1NUPN]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[D3SL1PL4_3MPXQU1NUPN]
@qnafin varchar(6)
WITH EXEC AS CALLER
AS
select l.id_emp, d.id_plaza, e.RFC as FILIACION, pla.PlazaIEEPO as PLAZA, l.id_nodo, v.clave as CT, dbo.fechaToAnioQuincena(l.fechaas) as DESDE, dbo.fechaToAnioQuincena(d.fechaas) as HASTA, l.fechaas as fecha_ligue, d.fechaas as fecha_desligue from (
  select pla.id_emp,pla.id_plaza,pla.id_nodo, pla.fecha as fechaAs
  from PlazaEmpleados pla
  inner join
  (
	  select id_plaza,Max(Fecha) as FechaMax 
	  from plazaEmpleados
	  where fecha < dbo.anioQuincenaToFecha(@qnafin, 1)
	  group by id_plaza
  ) hp
  on pla.id_plaza = hp.id_plaza and hp.FechaMax = pla.Fecha
  where pla.Id_Emp <> 0
) l
inner join (
  select pla.id_emp,pla.id_plaza,pla.id_nodo, pla.fecha as fechaAs
  from PlazaEmpleados pla
  inner join
  (
	  select id_plaza,Max(Fecha) as FechaMax 
	  from plazaEmpleados
	  where fecha = dbo.anioQuincenaToFecha(@qnafin, 1)
	  group by id_plaza
  ) hp
  on pla.id_plaza = hp.id_plaza and hp.FechaMax = pla.Fecha
) d on d.id_plaza = l.id_plaza
inner join Empleados e on e.id_emp = l.id_emp
inner join plazaieepo pla on pla.id_plaza = d.id_plaza
inner join VistaTablaLongitud v on v.id_nodo = l.id_nodo
inner join (
	select h.id_plaza,h.id_rel from 
	HTabulador_SE_Cat_Puesto h
	inner join
	(
		select id_plaza,Max(Fecha) as FechaMax 
		from 
		HTabulador_SE_Cat_Puesto
		where fecha < dbo.anioQuincenaToFecha(@qnafin, 1)
		group by id_plaza
	) htc
	on htc.id_plaza = h.id_plaza and htc.FechaMax = h.fecha
) hc on hc.id_plaza = pla.id_plaza
inner join TTabulador_SE_Cat_Puesto tt on tt.id_tabulador_se_cat_puesto = hc.id_rel
and tt.TModelo_SE_id_Modelo_SE in (7)'
GO

GO
PRINT N'Creating [dbo].[SIGP_InformacionBancariaEmpleados]'
GO
IF OBJECT_ID(N'[dbo].[SIGP_InformacionBancariaEmpleados]', 'P') IS NULL
EXEC sp_executesql N'CREATE procedure [dbo].[SIGP_InformacionBancariaEmpleados] AS        
 BEGIN      
 SET NOCOUNT ON;        
         
    --149413 Empleados diferentes    
 select distinct RFC,CURP,'''' as Plaza,      
 case       
  when id_cod = 2 then ''Depósito''      
  else ''Cheque''      
 end as Metodo_Pago,    
 case     
  when id_cod = 2 then substring(cuenta_tarjeta,1,3)    
  else ''''    
 end as Clave_Banco,'''' as Numero_Cuenta,    
 case     
  when id_cod = 2 then cuenta_tarjeta    
  else ''''    
 end as CLABE_Interbancaria      
 from empleados where id_emp <> 0 and ( id_emp in (select id_emp from plazaempleados) or id_emp in (select id_emp from FUP_Documentos))  
 and rfc not like ''XXX%''  
 order by rfc     
      
 END '
GO

GO
PRINT N'Creating [dbo].[BuscaPagosVectores]'
GO
IF OBJECT_ID(N'[dbo].[BuscaPagosVectores]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[BuscaPagosVectores] 
	 @rfc varchar(20)
	, @plaza varchar(30)
	, @qna smallint
	, @tipopd varchar(10)
	, @anio int
AS
BEGIN
declare @id_emp int
declare @id_plaza int
declare @parcial int




set @parcial= (select case when @tipopd=''01'' then 0
							when @tipopd=''02'' then 20
							when @tipopd=''08'' then 40 end )
					
set @id_emp= (select id_emp from Empleados where rfc=@rfc)
if @id_emp is null
BEGIN
	set @id_emp= (select id_emp from hrfc where rfc=@rfc)
	if @id_emp is null
		select ''NO EXISTE EL NUMERO DE EMPLEADO''
END
else
BEGIN
	set @id_plaza=(select id_plaza from plazaieepo where PlazaIEEPO=@plaza)
	if @id_plaza is null 
		select ''NO EXISTE EL NUMERO DE LA PLAZA''
	ELSE
	BEGIN
		SELECT * 
		FROM Nom_histpagos 
		WHERE Id_Emp=@id_emp AND id_plaza=@ID_PLAZA 
				AND Id_Periodo=(SELECT ID_PERIODO 
								FROM CalenNomina WHERE Id_cia=2 AND Año=@anio and Numero=@qna and parcial=@parcial)
		select * 
		from Hvectores  
		where Id_Emp=@id_emp AND id_plaza=@ID_PLAZA 
				AND Id_Periodo=(SELECT ID_PERIODO 
								FROM CalenNomina WHERE Id_cia=2 AND Año=@anio and Numero=@qna and parcial=@parcial)
		 
	END
END

END
'
GO

GO
PRINT N'Creating [dbo].[SP_SacaHistPagosPerc]'
GO
IF OBJECT_ID(N'[dbo].[SP_SacaHistPagosPerc]', 'P') IS NULL
EXEC sp_executesql N'
CREATE  PROCEDURE [dbo].[SP_SacaHistPagosPerc]      
(      
@idplaza int,      
@Idemp int,      
@idperiodo int,
@refere int     
)      
AS      
SET NOCOUNT ON      
 SELECT      
   a.id_concepto, a.Resultado as Clave,convert(varchar(12), cast(b.Pesos as money), 1) AS Importe,a.descripcion, b.Id_Emp,Cast(f.año as varchar(4)) + ''''+Right(''00''+Cast(f.numero as varchar(2)),2) as Periodo, b.id_plaza,Desde+'' ''+Hasta as Desde_Hasta      
      
 FROM      
   Conceptos a       
   INNER JOIN ConceptoRelEmpresa c      
   ON a.id_concepto = c.id_concepto       
   INNER JOIN      
            (SELECT     Id_Emp, id_concepto, Id_Periodo, id_plaza, Pesos,Desde,Hasta, isnull(Id_Referencia,0)  Id_Referencia      
            FROM       HistPagos      
            UNION ALL      
            SELECT     Id_Emp, id_concepto, Id_Periodo, id_plaza, Pesos,Desde,Hasta, isnull(Id_Referencia,0) Id_Referencia
            FROM       Nom_histpagos)       
   AS b      
   ON a.id_concepto = b.id_concepto      
   inner join Empleados D    
   On D.id_emp = b.id_emp    
   inner join Plazas E    
   on E.id_plaza = b.id_plaza  
   Inner Join Calennomina F  
   on b.Id_Periodo=F.Id_periodo     
     
 WHERE      
   b.id_emp=@idemp and e.id_plaza=@idplaza AND b.id_periodo=@idperiodo and  (c.id_razonsocial = 5) AND (a.Tipo = 1) AND (a.En_ListaRaya = 1)  and b.Id_Referencia = @refere     
 ORDER BY 
   Desde,Hasta,A.descripcion      
         
SET NOCOUNT OFF    

'
GO

GO
PRINT N'Creating [dbo].[veras]'
GO
IF OBJECT_ID(N'[dbo].[veras]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[veras]
	(              
	@Didplaza int,              
	@DIdemp int,  
	@Didperiodo int,
	@Drefere int
		)              
 
AS        
SET NOCOUNT ON        
BEGIN            
declare @trailer varchar(max), @trailer2 varchar(max)
declare @CC_Rows int, @Num_Rows INT
declare @CC_desde  int
declare @diferencia int,  @CC_desdeAnt int
DECLARE @VAL24 INT

create table #prueba3 (id_concepto int, Clave varchar(max), Importe varchar(max), 
     descripcion varchar(max), Id_Emp int, Periodo int, id_plaza int, Desde_Hasta varchar(max))
insert into #prueba3 EXEC [dbo].[SP_SacaHistPagosPerc] @idplaza = @Didplaza, @Idemp = @DIdemp, @idperiodo = @Didperiodo, @refere=@Drefere
select distinct desde_hasta as desde into #prueba4  from #prueba3 
select distinct desde, ROW_NUMBER () over (order by Desde ) as llave into #prueba5  from #prueba4
set @trailer=''''
SET	@CC_Rows	=	1
SELECT	@Num_Rows	=	COUNT(0) FROM #prueba4
set @CC_desdeAnt = ( SELECT cast(SUBSTRING(desde,1,6) as int) as desde FROM #prueba5 WHERE #prueba5.llave =	@CC_Rows)
if @Num_Rows > 1
BEGIN
  WHILE(@CC_Rows <= @Num_Rows)
  BEGIN
   SET @VAL24 =(SELECT cast(SUBSTRING(desde,5,2) as int) as desde FROM #prueba5 WHERE #prueba5.llave =	@CC_Rows)
   SET @CC_Rows = @CC_Rows + 1
   SElect @CC_desde = ( SELECT cast(SUBSTRING(desde,1,6) as int) as desde FROM #prueba5 WHERE #prueba5.llave	 =	@CC_Rows)
   
   IF @VAL24 = 24
      set @CC_desdeAnt =  @CC_desdeAnt + 77
   ELSE
      set @CC_desdeAnt =  @CC_desdeAnt + 1
   IF @CC_desdeAnt = @CC_desde 
   BEGIN
      select @trailer = @trailer + ''1''	  
	  set @trailer2 = @trailer + ''1''
   END
   else
   begin
      set @diferencia =  @CC_desde - @CC_desdeAnt 
      set @trailer = @trailer + ''1''+REPLICATE(''6'',@diferencia)	  
   end
   set @CC_desdeAnt= @CC_desde
   END
END
ELSE
BEGIN
   set @trailer2 = ''1''
END
select @trailer2 as trailer

END
'
GO

GO
PRINT N'Creating [dbo].[spiInsertaConceptoHistPagos]'
GO
IF OBJECT_ID(N'[dbo].[spiInsertaConceptoHistPagos]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================  
-- Author:  wcahun   
-- Create date: 09/10/2013  
-- Description: procedimientto para insertar un concepto en un periodo del hispagosdetalle  
-- =============================================  
CREATE PROCEDURE [dbo].[spiInsertaConceptoHistPagos]
@id_plaza int, @id_emp int, @id_periodo int, @id_periodoPago int, @id_concepto int, @pesos float
WITH EXEC AS CALLER
AS
BEGIN  
   
   declare @idPlaza int = @id_plaza
   declare @idEmp int = @id_emp
   declare @idPeriodo int = @id_periodo
   declare @idPeriodoPago int = @id_periodoPago
   declare @idConcepto int = @id_concepto
   declare @pesosos float = @pesos
   
   
declare @idProcesoNomina int

if (select parcial from calennomina where id_periodo=@idPeriodo)>=40  
	set @idProcesoNomina=1
else
	set @idProcesoNomina=0

	--select * from histpagos where   
 --   id_emp=@idEmp and id_plaza=@idPlaza and id_periodo=@idPeriodo   
 --   and id_periodopago=@idPeriodoPago and id_concepto=@idConcepto

 if exists(select 1 from histpagos where   
    id_emp=@idEmp and id_plaza=@idPlaza and id_periodo=@idPeriodo   
    and id_periodopago=@idPeriodoPago and id_concepto=@idConcepto )  
 begin  
  select ''Ya existen datos para el periodo de pago destino especificado''as resultado  
 end  
 else  
 begin  
  insert into histpagos (Id_Emp, Id_Periodo, id_concepto, Consecutivo, Horas, Pesos, Id_categ, Fecha, PesosExcento, 
  C_costo, id_plaza, Id_Referencia, id_periodoPago, Id_ProcesoNomina, Desde, Hasta)
  select @idEmp, @idPeriodo,@idConcepto, 0 consecutivo,  0 horas, @pesosos, null idcateg, getdate() fecha, 0 pesosexcento
  ,'''' c_costo,@idPlaza,0 id_referencia,@idPeriodoPago,@idProcesoNomina id_procesonomina  
    , (select dbo.fechatoanioquincena(fechaini) from calennomina where id_periodo=@idPeriodo) desde   
    , (select dbo.fechatoanioquincena(fechaini) from calennomina where id_periodo=@idPeriodo) hasta  

  select ''correcto'' as resultado  
 end  
  
  
END'
GO

GO
PRINT N'Creating [dbo].[SIGP_CatalogoCategorias]'
GO
IF OBJECT_ID(N'[dbo].[SIGP_CatalogoCategorias]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[SIGP_CatalogoCategorias]    
WITH EXEC AS CALLER    
AS    
BEGIN        
 select categoria Clave_De_Categoria, descripcion Descripcion, TModelo_SE_id_Modelo_SE Modelo, TSubsistema_SE_id_Subsistema_SE SubSistema,            
 TSubsubsistema_SE_id_Subsubsistema_SE SubSubSistema, case when categoria like ''%E%'' then ''DOCENTE'' else ''ADMINISTRATIVA'' end Clasificacion_De_Categoria,            
 Hrs_Compatibilidad Horas_De_Compatibilidad, cast('''' as varchar(10)) Clasificacion_De_Pago,             
 case when clasificador_de_pago is null then '''' ELSE clasificador_de_pago END AS clasificador_de_pago,             
 case when categoria like ''%AA%'' or categoria like ''%CF%'' then ''CONFIANZA'' else ''BASE'' end Clasificacion_Funcional,            
 cast('''' as varchar(10)) Nivel_De_Puesto, cast('''' as varchar(10)) Nivel_De_Puesto_Auxiliar            
 into #tabuladorCategorias            
 from TTabulador_SE_Cat_Puesto    
            
 select a.Clave_De_Categoria, a.Descripcion, a.Modelo Modelo, a.SubSistema, a.SubSubSistema, a.Clasificacion_De_Categoria, a.Horas_De_Compatibilidad, a.Clasificacion_De_Pago,
 a.clasificador_de_pago,             
 a.Clasificacion_Funcional, isnull(b.nivel, a.Nivel_De_Puesto) Nivel_De_Puesto, a.Nivel_De_Puesto_Auxiliar,''SI'' categoria_noanalitico,null as modeloFone, isnull(b.modelo, 0)  SMF          
 into #tabuladorCategorias22            
 from #tabuladorCategorias a            
 left join (select codigo, modelo, nivel from hplazas_concifed_230217 group by codigo, modelo, nivel) b             
 on replace(a.Clave_De_Categoria, '' '','''') = replace(b.CODIGO, '' '', '''')             
            
 update #tabuladorCategorias22 set Nivel_De_Puesto = ''07'' where Nivel_De_Puesto = ''''            
  update #tabuladorCategorias22 set Nivel_De_Puesto = ''07'' where Nivel_De_Puesto = ''0''           
    
  select distinct * into #tabuladorCategorias2 from #tabuladorCategorias22              
        
 select categoria, horas, count(*) tot into #plazashoras from plazaieepo group by categoria, horas           
          
 select isnull(a.categoria, b.categoria) categoria, isnull(a.totJor,0) Jornada, isnull(b.Tothor,0) Horas,         
 case when isnull(a.totJor,0) > isnull(b.totHor,0) then ''JORNADA'' else ''HORAS'' end tipo             
 into #plazashoras2            
 from (            
  select categoria,sum(tot) totJor from #plazashoras where horas = ''000'' group by categoria            
 ) a full join (            
  select categoria,sum(tot) totHor from #plazashoras where horas <> ''000'' group by categoria            
 ) b on a.categoria = b.categoria            
            
 update a set a.clasificacion_de_pago = b.tipo            
 from #tabuladorCategorias2 a            
 inner join #plazashoras2 b on right(a.Clave_De_Categoria,6) = b.categoria            
          
 update c set categoria_noanalitico=''NO'' from ttabulador_se_cat_puesto a          
 left join hplazas_concifed_230217 b on ltrim(a.categoria)=b.codigo          
 inner join #tabuladorCategorias2 c on a.categoria=c.clave_de_categoria          
 where b.codigo is null and a.categoria not like '' ab%''          
      
 update #tabuladorCategorias2 set modeloFone = 1 where modelo = 10        
 update #tabuladorCategorias2 set modeloFone = 2 where modelo in (1,4)     
 update #tabuladorCategorias2 set modeloFone = 3 where modelo in (3)        
 update #tabuladorCategorias2 set modeloFone = 4 where modelo in (5,6)    
 update #tabuladorCategorias2 set modeloFone = 5 where modelo in (2,9)    
 --update #tabuladorCategorias2 set modeloFone = 6 where modelo = 2        
 update #tabuladorCategorias2 set modeloFone = 7 where modelo = 7 and Clave_De_Categoria not like ''%e%''        
 update #tabuladorCategorias2 set modeloFone = 8 where modelo = 7 and Clave_De_Categoria like ''%e%''           
            
 --select * from #tabuladorCategorias2    
 --ANTES DEL 07/02/2019  
 -- select replace(Clave_De_Categoria,'' '','''') Clave_De_Categoria,Descripcion,modeloFone modelo,SubSistema,SubSubSistema,Clasificacion_De_Categoria,        
 --Horas_De_Compatibilidad,Clasificacion_De_Pago,Clasificacion_Funcional,Nivel_De_Puesto,Nivel_De_Puesto_Auxiliar         
 --from #tabuladorCategorias2        
 --where Clave_De_Categoria not like ''%AB%''        
   
   
 -----     
 select RIGHT(''  '' + Ltrim(Rtrim(Clave_De_Categoria)),7) as CLAVE_DE_LA_CATEGORIA,Descripcion  
 AS DESCRIPCION_DE_LA_CATEGORIA,  
 modeloFone AS MODELO,  
 SubSistema AS SUBSISTEMA,  
 SubSubSistema AS SUBSUBSISTEMA,  
 Clasificacion_Funcional AS CLASIFICACION_DE_CATEGORIA,        
 Horas_De_Compatibilidad AS HORAS_DE_COMPATIBILIDAD,  
 --Clasificacion_De_Pago AS CLASIFICACION_DE_PAGO_DE_LA_CATEGORIA_PLAZA,  
 Clasificador_De_Pago AS CLASIFICACION_DE_PAGO_DE_LA_CATEGORIA_PLAZA,  
 Clasificacion_De_Categoria AS CLASIFICACION_FUNCIONAL,  
 Nivel_De_Puesto AS NIVEL_DE_PUESTO,  
 Nivel_De_Puesto_Auxiliar AS NIVEL_DE_PUESTO_AUXILIAR        
 from #tabuladorCategorias2        
 where Clave_De_Categoria not like ''%AB%''        
        
END  '
GO

GO
PRINT N'Creating [dbo].[C0NCPV3NQU1CONCPTT3MP]'
GO
IF OBJECT_ID(N'[dbo].[C0NCPV3NQU1CONCPTT3MP]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[C0NCPV3NQU1CONCPTT3MP]
@qnafin varchar(6), @tiponom varchar(3), @concep varchar(2), @idcia int
WITH EXEC AS CALLER
AS
set @idcia = case 
                when @tiponom = ''BAS'' then 2
                when @tiponom = ''UPN'' then 1
              end
select e.Id_Emp, plai.Id_plaza, e.RFC, plai.PlazaIEEPO, tt.descripcion as concepto, tt.Monto, dbo.fechaToAnioQuincena(tt.Fecha) as desde, dbo.fechaToAnioQuincena(tt.FechaFin) as hasta, estado = case when tt.Tvigencia_id_vigencia = 1 then ''Activo'' else ''Inactivo'' end
from TTEmpleado_Plaza_Conc tt 
inner join Plazas pla on pla.Num_Plaza = tt.NoPlaza
inner join PlazaIEEPO plai on plai.id_plaza = pla.Id_plaza
inner join Empleados e on e.id_emp = tt.Id_Emp
where dbo.fechaToAnioQuincena(tt.fechafin) = @qnafin
and e.Id_Cia = @idcia and tt.Tvigencia_id_vigencia = 1 and tt.descripcion = @concep
order by tt.descripcion, e.rfc'
GO

GO
PRINT N'Creating [pagos].[ComparacionPagosIEEPO_MEXICO]'
GO
IF OBJECT_ID(N'[pagos].[ComparacionPagosIEEPO_MEXICO]', 'P') IS NULL
EXEC sp_executesql N'
--
--exec [PAGOS_FEDERACION_BASEFEDE] 2,112637,0,'''',1,121,'''','''',0,'''';
--exec [PAGOS_FEDERACION_BASEFEDE] 2,112637,114530,''201705'',2,121,''20DTV0553J'',''Deposito'',6660.00,''078779E2781300203911''
--exec [Pagos].[ComparacionPagosIEEPO_MEXICO] 37361, 88461
--select * from empleados where rfc =''LOHE781215RJ6''
CREATE procedure [pagos].[ComparacionPagosIEEPO_MEXICO]--[PAGOS_FEDERACION_Pruebas] /*PRODUCCION*/
@idEmp int,
@idPlaza int,
@row int
AS
--select * from empleados where rfc like ''GACC741225HG7''
--select * from PlazaIEEPO where plazaieepo = ''078729 E1485000200056''
--drop table #PagosMexico; drop table #PagosCalculados;

--declare @idEmp int;
--set @idEmp = 37361;
--declare @idPlaza int;
--set @idPlaza = 88461;

 ;WITH tmpvectores AS ( 
 Select  Vectores.id_Vector, Vectores.id_Emp, Vectores.id_Plaza, hist.fecha,Vectores.id_Periodo_aplicacion,Vectores.id_periodo 
 from HVectores Vectores with(nolock) 
 join (  
       Select id_Emp, id_Plaza, id_Periodo_aplicacion, max(fecha) as fecha from HVectores with(nolock) 
 where fecha <= getDate() and id_plaza = @idPlaza and id_emp=@idEmp group by id_Emp, id_Plaza, id_Periodo_aplicacion 
 ) Hist on Vectores.id_emp = Hist.id_emp and Vectores.id_Plaza = Hist.id_Plaza and Vectores.id_Periodo_aplicacion = Hist.id_Periodo_aplicacion and Vectores.fecha = Hist.Fecha  
 left join (select * from nom_Pagos_hist n with(nolock) where id_plaza = @idPlaza and id_emp=@idEmp
)n on n.id_emp = Vectores.id_emp and Vectores.id_plaza =n.id_plaza and Vectores.id_periodo_aplicacion = n.id_periodopago and Vectores.id_periodo=n.id_periodo 
 and vectores.id_referencia = n.id_referencia and vectores.id_procesonomina = n.id_procesonomina 
 Union All 
 Select  Vectores.id_Vector, Vectores.id_Emp, Vectores.id_Plaza, hist.fecha,Vectores.id_Periodo_aplicacion,Vectores.id_periodo 
 from HVectores Vectores with(nolock) 
 join (  
       Select id_Emp, id_Plaza, id_Periodo_aplicacion, max(fecha) as fecha from HVectores with(nolock) 
 where fecha <= getDate() and id_plaza = @idPlaza and id_emp=@idEmp group by id_Emp, id_Plaza, id_Periodo_aplicacion 
 ) Hist on Vectores.id_emp = Hist.id_emp and Vectores.id_Plaza = Hist.id_Plaza and Vectores.id_Periodo_aplicacion = Hist.id_Periodo_aplicacion and Vectores.fecha = Hist.Fecha  
 left join (select * from nom_histpagos n with(nolock) where id_plaza = @idPlaza and id_emp=@idEmp
)n on n.id_emp = Vectores.id_emp and Vectores.id_plaza =n.id_plaza and Vectores.id_periodo_aplicacion = n.id_periodopago and Vectores.id_periodo=n.id_periodo 
 and vectores.id_referencia = n.id_referencia and vectores.id_procesonomina = n.id_procesonomina 
 Union All 
 Select  Vectores.id_Vector, Vectores.id_Emp, Vectores.id_Plaza, hist.fecha,Vectores.id_Periodo_aplicacion,Vectores.id_periodo 
 from HVectores Vectores with(nolock) 
 join (  
       Select id_Emp, id_Plaza, id_Periodo_aplicacion, max(fecha) as fecha from HVectores with(nolock) 
 where fecha <= getDate() and id_plaza = @idPlaza and id_emp=@idEmp group by id_Emp, id_Plaza, id_Periodo_aplicacion 
 ) Hist on Vectores.id_emp = Hist.id_emp and Vectores.id_Plaza = Hist.id_Plaza and Vectores.id_Periodo_aplicacion = Hist.id_Periodo_aplicacion and Vectores.fecha = Hist.Fecha  
 left join (select * from nom_Pagos_hist n with(nolock) where id_plaza = @idPlaza and id_emp=@idEmp
)n on n.id_emp = Vectores.id_emp and Vectores.id_plaza =n.id_plaza and Vectores.id_periodo_aplicacion = n.id_periodopago and Vectores.id_periodo=n.id_periodo 
 and vectores.id_referencia = n.id_referencia and vectores.id_procesonomina = n.id_procesonomina 
 ), 
 tmpHistPagos as (  Select id_emp,id_periodo,id_concepto,consecutivo,horas,pesos,fecha,pesosexcento, 
 c_costo,id_plaza,id_referencia,id_periodopago,id_procesonomina,desde,hasta  from histpagos with(nolock) where id_emp = @idEmp
 and id_plaza = @idPlaza union all 
 Select id_emp,id_periodo,id_concepto,consecutivo,horas,pesos,fecha,pesosexcento, cc,id_plaza,id_referencia,id_periodopago,id_procesonomina,desde,hasta  from nom_HistPagos with(nolock) where id_emp = @idEmp and id_plaza = @idPlaza
 union all
 Select id_emp,id_periodo,id_concepto,consecutivo,horas,pesos,fecha,pesosexcento, cc,id_plaza,id_referencia,id_periodopago,id_procesonomina,desde,hasta  from nom_Pagos_hist with(nolock) where id_emp = @idEmp and id_plaza = @idPlaza )

 Select  id = ROW_NUMBER() OVER (ORDER BY numcheque),idperiodo,case when numQuincena is null then quinavector when numQuincena is not null then numQuincena end numQuincena, numCheque, 
 tipoPago, Ingresos, desde,hasta,Pagos.id_plaza,pagos.id_emp 
into #PagosCalculados
FROM ( 
Select distinct  CalenNomina.FechaPago,CalenNomina.id_periodo as idPeriodo, dbo.fechaToAnioQuincena(HistVectores.fecha) as quinaVector,   
cast(CalenNomina.Año as varchar(4)) + right(''00'' + cast(CalenNomina.numero as varchar(2)), 2) as numQuincena, 
HistorialPagos.folio as numCheque, 
Upper(CalenNomina.TituloPeriodo) as tipoPago, 
  isnull(case when calennomina.parcial < 20 then dbo.fechaToAnioQuincena(calennomina.fechaini) else 
  (  
  case when (
Select min(desde) 
 from tmpHistPagos NH with(nolock) 
 INNER JOIN conceptos CP with(nolock) ON CP.id_concepto=NH.id_concepto   
 left join Folio_Recibos with(nolock) on Folio_Recibos.id_periodo = NH.id_periodo  
 and Folio_Recibos.id_emp = NH.id_emp  
 and Folio_Recibos.id_plaza = NH.id_plaza  
 AND Folio_Recibos.id_referencia=NH.id_referencia  
 AND Folio_Recibos.id_procesoNomina=NH.id_procesoNomina  
 AND Folio_Recibos.id_periodo =NH.id_periodo   
 where NH.id_emp = @idEmp 
 and NH.id_plaza= @idPlaza 
 and NH.id_periodo=  HistorialPagos.id_periodo 
 AND Folio_Recibos.folio= HistorialPagos.folio 
 AND CP.tipo IN (1,2)  
 AND NH.pesos>0  
 AND isnull(Folio_Recibos.id_recibo,16) IN (SELECT idrecibo  
 FROM Trecibos with(nolock) 
 WHERE id_listasraya = 1 AND idrecibo not in (5,18))  
 ) is null then (Select min(desde) 
 from tmpHistPagos NH with(nolock) 
 INNER JOIN conceptos CP with(nolock) ON CP.id_concepto=NH.id_concepto  
 where NH.id_emp = @idEmp 
 and NH.id_plaza= @idPlaza 
 and NH.id_periodo=  HistorialPagos.id_periodo 
 AND CP.tipo IN (1)  
 AND NH.pesos>0   
 ) end 
  
  ) end,'''') as desde,
 isnull(case when calennomina.parcial < 20 then dbo.fechaToAnioQuincena(calennomina.fechafin) else 
 ( 
 case when (
 Select max(hasta) 
 from tmpHistPagos NH with(nolock) 
 INNER JOIN conceptos CP with(nolock) ON CP.id_concepto=NH.id_concepto   
 left join Folio_Recibos with(nolock) on Folio_Recibos.id_periodo = NH.id_periodo  
 and Folio_Recibos.id_emp = NH.id_emp  
 and Folio_Recibos.id_plaza = NH.id_plaza  
 AND Folio_Recibos.id_referencia=NH.id_referencia  
 AND Folio_Recibos.id_procesoNomina=NH.id_procesoNomina  
 AND Folio_Recibos.id_periodo =NH.id_periodo   
 where NH.id_emp = @idEmp  
 and hasta not like ''9999%''
 and NH.id_plaza= @idPlaza 
 and NH.id_periodo=  HistorialPagos.id_periodo 
 AND Folio_Recibos.folio= HistorialPagos.folio 
 AND CP.tipo IN (1,2)  
 AND isnull(Folio_Recibos.id_recibo,16) IN (SELECT idrecibo  
 FROM Trecibos with(nolock) 
 WHERE id_listasraya = 1 AND idrecibo not in (5,18,20))  
 ) is null then (Select max(hasta) 
 from tmpHistPagos NH with(nolock) 
 INNER JOIN conceptos CP with(nolock) ON CP.id_concepto=NH.id_concepto  
 where NH.id_emp = @idEmp 
 and NH.id_plaza= @idPlaza 
 and NH.id_periodo=  HistorialPagos.id_periodo 
 AND CP.tipo IN (1)  
 AND NH.pesos>0   
 ) end ) end,'''') as hasta,
HistorialPagos.Ingresos, Upper(TVectores.Descripcion) as Vector,CalenNomina.FechaFin 
 , HistVectores.id_Vector,HistorialPagos.id_plaza,HistorialPagos.id_emp 
from ( 
  Select id_periodo, max(id_emp) as id_emp, id_plaza as id_plaza, sum(percepciones) - sum(deducciones) as Ingresos, folio, id_procesoNomina 
  from ( 
      Select tmpHistPagos.id_periodo, tmpHistPagos.id_emp, tmpHistPagos.id_plaza, tmpHistPagos.desde, 
      case when Conceptos.tipo = 1 then pesos else 0 end as percepciones, 
      case when Conceptos.tipo = 2 then pesos else 0 end as deducciones, 
      Folio_Recibos.folio ,tmpHistPagos.id_referencia,tmpHistPagos.id_procesoNomina 
      from tmpHistPagos with(nolock)
      inner join Conceptos with(nolock) on Conceptos.id_concepto = tmpHistPagos.id_concepto 
      left join Folio_Recibos with(nolock) on Folio_Recibos.id_periodo = tmpHistPagos.id_periodo and Folio_Recibos.id_emp = tmpHistPagos.id_emp and Folio_Recibos.id_plaza = tmpHistPagos.id_plaza 
      AND Folio_Recibos.id_referencia=tmpHistPagos.id_referencia AND Folio_Recibos.id_procesoNomina=tmpHistPagos.id_procesoNomina 
      where tmpHistPagos.id_emp = @idEmp And tmpHistPagos.id_plaza = @idPlaza 
              AND isnull(Folio_Recibos.id_recibo,16) IN (SELECT idrecibo  
                                              FROM Trecibos with(nolock) 
                                              WHERE id_listasraya = 1 AND idrecibo not in (5,18,20)) 
              AND Conceptos.tipo IN (1,2) 
  ) Ingresos group by id_Periodo, id_plaza, folio, id_referencia, id_procesoNomina
) HistorialPagos 
inner join CalenNomina with(nolock) on CalenNomina.id_periodo = HistorialPagos.id_periodo 
inner join PlazaIEEPO with(nolock) on PlazaIEEPO.id_Plaza = HistorialPagos.id_plaza 
full join ( 
  Select min(id_vector)id_vector,id_Emp,id_Plaza,fecha,id_Periodo_aplicacion FROM ( 
      Select Vectores.id_Vector, Vectores.id_Emp, Vectores.id_Plaza, Vectores.id_Periodo,hist.fecha,Vectores.id_Periodo_aplicacion from HVectores Vectores with(nolock)
      inner join ( 
          Select id_Emp, id_Plaza, id_Periodo_aplicacion, max(fecha) as fecha from HVectores with(nolock)
          where fecha <= getDate()  and id_plaza= @idPlaza and id_emp=@idEmp group by id_Emp, id_Plaza, id_Periodo_aplicacion 
      ) Hist on Vectores.id_emp = Hist.id_emp and Vectores.id_Plaza = Hist.id_Plaza and Vectores.id_Periodo_aplicacion = Hist.id_Periodo_aplicacion and Vectores.fecha = Hist.Fecha 
 ) a group by id_Emp,id_Plaza,fecha,id_Periodo_aplicacion 
) HistVectores on HistVectores.id_emp = HistorialPagos.id_emp and HistVectores.id_Plaza = PlazaIEEPO.id_Plaza  and HistVectores.id_Periodo_aplicacion = CalenNomina.id_periodo  
left join TVectores with(nolock) on HistVectores.id_Vector = TVectores.id_Vectores 
) Pagos 
 Left Join 
 ( 
 Select id_Emp,id_Plaza,fecha,id_Periodo_aplicacion, cast ( 
 STUFF((select '' ''+cast(id_Vector as varchar(100))  from tmpvectores s1  
 where(s1.id_emp = a.id_emp And s1.id_Plaza = a.id_Plaza And s1.id_Periodo_aplicacion = a.id_Periodo_aplicacion) 
 FOR XML path('''')),1,1,'''' ) as varchar(max)) as trailer 
 from tmpvectores a with(nolock) group by id_Emp,id_Plaza,fecha,id_Periodo_aplicacion 
 ) a on a.id_plaza=Pagos.id_plaza and Pagos.id_emp = a.id_emp and a.id_periodo_aplicacion= idperiodo  
WHERE 1=1 and idperiodo is not null
order by Pagos.numQuincena desc


SELECT *, replace(PERIODO,''/'','''')qna
into #PagosMexico
FROM (
select *,''Pagos_1_3_2015''archivo from pagos.Pagos_1_3_2015 WHERE id_emp = @idEmp and id_plaza= @idPlaza
UNION ALL 
select *,''Pagos_4_6_2015''archivo from pagos.Pagos_4_6_2015 WHERE id_emp = @idEmp and id_plaza=@idPlaza
UNION ALL    
select *,''Pagos_7_9_2015''archivo from pagos.Pagos_7_9_2015 WHERE id_emp = @idEmp and id_plaza=@idPlaza
--UNION ALL 
--select *,''Pagos_10_12_2015''archivo from pagos.Pagos_10_12_2015 WHERE id_emp = @idEmp and id_plaza=@idPlaza
UNION ALL 
select *,''Pagos_1_3_2016''archivo from pagos.Pagos_1_3_2016 WHERE id_emp = @idEmp and id_plaza=@idPlaza
UNION ALL 
Select *,''Pagos_4_6_2016''archivo from pagos.Pagos_4_6_2016 WHERE id_emp = @idEmp and id_plaza=@idPlaza
UNION ALL 
select *,''Pagos_7_9_2016''archivo from pagos.Pagos_7_9_2016 WHERE id_emp = @idEmp and id_plaza=@idPlaza
UNION ALL 
select *,''Pagos_10_12_2016''archivo from pagos.Pagos_10_12_2016 WHERE id_emp = @idEmp and id_plaza=@idPlaza
)A

--select SUM(importe_neto) from #PagosMexico
--select SUM(ingresos) from #PagosCalculados where (numQuincena >= 201500 or (numQuincena=201424 and tipoPago like ''%AG%'')) and numQuincena<= 201625

select quincenas,numCheque,tipoPago,Ingresos,desde,hasta,num_comprobante,importe_neto,forma_pago,rfc,curp,clave_plaza,dbo.fechatoañoqna(FECHA_PAGO)FECHA_PAGO,dbo.fechatoañoqna(FECHA_INICIO)FECHA_INICIO,dbo.fechatoañoqna(FECHA_TERMINO)FECHA_TERMINO,idEmp,idPlaza
into #informacionPagos 
from (
select case when numQuincen IS null then qna when qna is null then numQuincen else numQuincen end quincenas ,
c.*,m.num_comprobante,importe_neto,case when m.clabe_banco is null and num_comprobante IS not null then ''CHEQUE'' else m.clabe_banco end forma_pago,m.qna,
rfc,curp,clave_plaza,FECHA_PAGO,FECHA_INICIO,FECHA_TERMINO,case when c.id_emp IS null then m.id_emp else c.id_emp end idEmp,case when c.id_plaza IS null then m.id_plaza else c.id_plaza end idPlaza
from 
	(
		select * from (
		select *,CaSe when numQuincena in (''201424'',''201501'') and tipoPago like ''%AG%'' then 201500 
				when numQuincena = ''201422'' and tipoPago like ''%AG%'' then 201425 
				when numQuincena in (''201524'',''201601'') and tipoPago like ''%AG%'' then 201600 
				when numQuincena = ''201522'' and tipoPago like ''%AG%'' then 201525 
				when numQuincena in(''201624'') and tipoPago like ''%AG%'' then 201600 
				when numQuincena in (''201622'',''201621'') and tipoPago like ''%AG%'' then 201525 				
				else  numQuincena 
			end numQuincen 
		from #PagosCalculados 
		)a 
		where ( numQuincen >= 201500 and numQuincen<= 201625 ) and  numQuincen not in (201519,201520,201521,201522,201523,201524,201525)
	) c 
	full join 
	(select * 
		from #PagosMexico 
		where (qna>= 201500 and qna<= 201625) and qna not in (201519,201520,201521,201522,201523,201524,201525)
	) m
on c.id_emp = m.id_emp and c.id_plaza=m.id_plaza and c.numQuincen=m.qna and cast(c.ingresos as decimal(9,2))=cast(importe_neto as decimal(9,2))
) a order by quincenas

insert into Pagos.PagosIeepoMexico 
select @row,* from #informacionPagos order by quincenas;


'
GO

GO
PRINT N'Creating [dbo].[spsHistPagosPivot]'
GO
IF OBJECT_ID(N'[dbo].[spsHistPagosPivot]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		wcahun
-- Create date: 08102013
-- Description:	procedimiento para seleccionar los datos del histpagos en forma de tabla
-- =============================================
CREATE PROCEDURE [dbo].[spsHistPagosPivot]
@id_plaza int, @id_emp int, @id_periodo int, @id_periodopago int, @tipo int
WITH EXEC AS CALLER
AS
BEGIN

  declare @idPlaza int = @id_plaza
  declare @idEmp int = @id_emp
  declare @idPeriodo int = @id_periodo
  declare @idPeriodoPago int = @id_periodopago
  declare @tipoPD int = @tipo

	declare @listStr varchar(max)
	select @listStr= COALESCE(@listStr+''],['' ,'''') + cast(id_periodopago as varchar(10)) from (
	select distinct a.id_periodopago from histpagos a 
	inner join conceptos c on a.id_concepto=c.id_concepto
	WHERE a.ID_PERIODO=@idPeriodo and a.id_periodopago=@idPeriodoPago
	and a.id_plaza=@idPlaza and a.id_emp=@idEmp
	and c.TIPO=1 ) r
	order by id_periodopago

set @liststr= ''[''+@liststr+'']''

--select @liststr
declare @ejecuta nvarchar(max)


set @ejecuta=
''select '' + cast(@idEmp as varchar(15)) +'' id_emp, ''+cast(@idPlaza as varchar(15))+'' id_plaza,* from ( 
select a.id_concepto, case when a.id_concepto = 1518 then a.c_costo else resultado end resultado, descripcion,A.id_periodopago qnapago,pesos, ''''''''  plazapago , 0 id_plazapago from histpagos a 
	inner join plazaieepo d on a.id_plaza=d.id_plaza
	inner join conceptos c on a.id_concepto=c.id_concepto
	inner join calennomina e on e.id_periodo=a.id_periodo
	WHERE a.ID_PERIODO=''+cast(@idPeriodo as varchar(15))+'' and a.id_periodopago=''+cast(@idPeriodoPago as varchar(15))+''
	and a.id_plaza=''+cast(@idPlaza as varchar(15))+'' and a.id_emp=''+cast(@idEmp as varchar(15))+''
	and c.TIPO=''+cast(@tipoPD as varchar(15))+'' 
	) sourcetable	pivot(sum(pesos) for qnapago in (''+ @liststr +''))  PIVOTETABLE order by resultado''

--select @ejecuta
execute (@ejecuta)
--select top 10 * from histpagosdetalle

END'
GO

GO
PRINT N'Creating [dbo].[SPF_BajaCptos]'
GO
IF OBJECT_ID(N'[dbo].[SPF_BajaCptos]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[SPF_BajaCptos]               
(                      
 @IdEmpleado as int,      
 @IdDocumento as int,      
 @Desde as varchar(6),---- convertir campo desde a entero      
 @idConcepto as int,  
 @num_plaza as int,      
 @accion as bit      
)            
As              
Begin     
 declare @IdEmpleado_loc as int=@IdEmpleado    
 declare @IdDocumento_loc as int =@IdDocumento    
 declare @Desde_loc as varchar(6)=@Desde    
 declare @idConcepto_loc as int=@idConcepto    
 declare @accion_loc as int =@accion    
 declare @id_usuario as int     
             
 declare @Tmp as varchar(30)      
 declare @sql as varchar(max)= ''''       
 declare @fechafin as datetime      
 set @id_usuario=(select id_usuario from fup_documentos where id_documento=@IdDocumento_loc)    
 set @fechafin = dbo.anioQuincenaToFecha(dbo.addQNA(@Desde_loc, -1, ''514m3l4p3l4''),1)      
 set @Tmp = ''ZBajaconc''      
       
 if @accion_loc = 0            
 Begin                            
  if exists(select * from ttempleado_plaza_conc where id_emp=@IdEmpleado_loc)              
    begin            
       --3.- Vencer el concepto al desde del movimiento (un dia antes del desde)       
       --update ttempleado_plaza_conc set FechaFin=@fechafin, tvigencia_id_vigencia= 0 where id_emp=@IdEmpleado_loc and noconcepto=@idConcepto_loc                     
       --4.- Mandar el registro ya vencido a la tabla ttemplado_plaza_conc_bajas      
       insert into ttempleado_plaza_conc_bajas       
                                         (Id_TEmpleado_Plaza_Conc,consecutivo,descripcion,NoPlaza,NoConcepto,Monto      
                                         ,FechaFin,Tvigencia_id_vigencia,NoEmp_rel,usuario,Movimiento,Fecha,Id_Emp      
                                         ,TTipo_Captura_id_Tipo_Captura,id_periodopago,Id_Documento,Id_usuario_Movimiento      
                                         ,Fecha_Movimiento,documentos      
                                         )      
                                  SELECT Id_TEmpleado_Plaza_Conc,consecutivo,descripcion,NoPlaza,NoConcepto,Monto      
                                         ,FechaFin,Tvigencia_id_vigencia,NoEmp_rel,usuario,Movimiento,Fecha,Id_Emp      
                                         ,TTipo_Captura_id_Tipo_Captura,id_periodopago,Id_Documento,@id_usuario as Id_usuario_Movimiento      
                                         ,getdate() as Fecha_Movimiento,''Baja de concepto''            
                                  FROM TTEmpleado_Plaza_Conc       
                                  where id_emp=@IdEmpleado_loc and NoConcepto=@idConcepto_loc and NoPlaza= @num_plaza      
        --5.- Eliminar el registro de ttempleado_plaza_conc      
      delete from TTEmpleado_Plaza_Conc where id_emp=@IdEmpleado_loc and Noconcepto=@idConcepto_loc and NoPlaza= @num_plaza   
    end            
 End             
 Else -- En caso contrario eliminacion            
    Begin          
      --1.- Regresar el registro a ttempleado_plaza_conc      
         set @sql = ''insert into ttempleado_plaza_conc      
                                         (consecutivo,descripcion,NoPlaza,NoConcepto,Monto      
                                         ,FechaFin,Tvigencia_id_vigencia,NoEmp_rel,usuario,Movimiento,Fecha,Id_Emp      
                                         ,TTipo_Captura_id_Tipo_Captura,id_periodopago,Id_Documento      
                                         )      
                                  SELECT consecutivo,descripcion,NoPlaza,NoConcepto,Monto      
                                         ,FechaFin,Tvigencia_id_vigencia,NoEmp_rel,usuario,Movimiento,Fecha,Id_Emp      
                                         ,TTipo_Captura_id_Tipo_Captura,id_periodopago,Id_Documento      
                                  from ttempleado_plaza_conc_bajas''        
                                  +'' where id_emp= '' + cast(@IdEmpleado_loc as varchar(10)) +'' and noconcepto = '' + cast(@idConcepto_loc as varchar(10)) +'' and noplaza = '' + cast(@num_plaza as varchar(10))  
          +'' and Id_usuario_Movimiento = '' + cast(@id_usuario as varchar(10))        
      exec(@sql)      
    --2.- Eliminar el registro de ttempleado_plaza_conc_bajas      
       delete from TTEmpleado_Plaza_Conc_bajas where id_emp=@IdEmpleado_loc and Noconcepto=@idConcepto_loc and NoPlaza= @num_plaza and Id_usuario_Movimiento=@id_usuario     
    --3.- Actualizar fecha fin y vigencia del concepto    
       --update ttempleado_plaza_conc set FechaFin=''99991231 23:59:00'', tvigencia_id_vigencia= 1 where id_emp=@IdEmpleado_loc and noconcepto=@idConcepto_loc                          
  End            
End'
GO

GO
PRINT N'Creating [dbo].[sp_movs_licencias]'
GO
IF OBJECT_ID(N'[dbo].[sp_movs_licencias]', 'P') IS NULL
EXEC sp_executesql N'----------------------------------
--- LICENCIAS
----------------------------------
----------------------------------
----------------------------------
--- QUINCENA DE LA QUE SE DESEA EL REPORTE---
create procedure [dbo].[sp_movs_licencias]
 (
 @Quincena as int,
 @id_cia as int
 )
 with encryption 
 as begin
declare @año as int
set @quincena=Case when @Quincena=1 then 24 else @Quincena-1 end
set @año= Case when @quincena=24 then year(GETDATE())-1 else YEAR(GETDATE()) end
select row_number() OVER (ORDER BY ftm.clave,fmm.clave) as ID_OPERACION,ftm.Clave+''-''+fmm.clave AS OPERACION,
e.curp AS CURP,
replace(pi.PlazaIEEPO,'' '','''') AS CPZA,
NIVEL_SALARIAL= case when (select top 1 id_rel from HTabulador_SE_cm htcm where 
id_plaza=fdd.Id_Plaza and fecha<=fdd.fechaini) is null then 3 else 
(select top 1 id_rel from HTabulador_SE_cm htcm where 
id_plaza=fdd.Id_Plaza and fecha<=fdd.fechaini)end,
'''' AS UR,
'''' AS FECHA,	
'''' AS CCT,
'''' AS RFC,	
'''' AS PRIMER_APELLIDO,	
'''' AS SEGUNDO_APELLIDO,	
'''' AS ''NOMBRE(S)'',	
'''' AS NACIONALIDAD,	
'''' AS PAIS_NAC,
'''' AS ENTIDAD_NAC,	
'''' AS MUNICIPIO_NAC,	
'''' AS SEXO,
'''' AS EDO_CIVIL,
'''' AS CALLE_Y_NUM,
'''' AS CP,
'''' AS COLONIA,
'''' AS ENTIDAD,
'''' AS MUNICIPIO,
'''' AS LOCALIDAD,
'''' AS NIV_MAX_ESTUD,
'''' AS ING_GOB_FED,
'''' AS ING_SEP,
'''' AS ING_RAMA,	
'''' AS CED_PROF,
'''' AS TIPO_LIC,	
'''' AS QUINQ_DOC,
'''' AS QUINQ_ADM,	
'''' AS GRADO_LIC,	
'''' AS TITULACION,
'''' AS HORARIO,
'''' AS MOVIMIENTO,
'''' AS DESC_MOVIMIENTO,
'''' AS MOTIVO,
'''' AS DESC_MOTIVO,
--''R20'' AS UR,right(''00'' + cast(c.Numero as varchar(max)),2) + cast(''/'' as varchar(max)) + cast(c.año as varchar(max)) as PERIODO,
--fid.Centro_Trabajo AS CCT,
--e.RFC, e.ApPaterno AS PRIMER_APELLIDO,
--e.ApMaterno AS SEGUNDO_APELLIDO,
--e.Nombre AS ''NOMBRE(S)'',
--right(''00'' + cast(tnac.Id_Nacionalidad as varchar(max)),3) AS NACIONALIDAD,
--tp.Descr AS PAIS_NAC,
--ENTIDAD_NAC= Case when e.Id_EstadoNac is null then 0 else te.id_estado end,
--MUNICIPIO_NAC= Case when e.Id_MunicipioNac is null then 0 else tc.Id_Ciudad end,
--e.SEXO,
--EDO_CIVIL= Case when e.edocivil is null then ''S/A'' else e.EdoCivil end,
--CALLE_Y_NUM= Case when hd.Calle is null then '''' else cast(hd.calle as varchar(max))+ '' ''+ CAST(hd.numext as varchar (10)) end,
--CP= Case when hd.CodPostal is null then '''' else hd.CodPostal end,
--COLONIA= Case when hd.Id_Colonia = 0 or hd.Id_Colonia is null then '''' else tcol.DESCR end,
--ENTIDAD=Case when e.Id_EstadoNac is null then ''S/A'' else case when e.Id_EstadoNac<=32 then substring(te.descr,4,50) else te.descr end end,
--MUNICIPIO= Case when e.Id_MunicipioNac is null then '''' else upper(tc.Descr) end,
--LOCALIDAD=Case when hd.Id_Localidad = 0 or hd.Id_Colonia is null then '''' else tloc.Descr end,
--'''' AS NIV_MAX_ESTUD,
--ING_GOB_FED= case when hfagf.fecha is null then '''' else dbo.fechatoanioquincena(hfagf.fecha) end,
--ING_SEP= case when hfas.fecha is null then '''' else dbo.fechatoanioquincena(hfas.fecha) end,
--ING_RAMA= case when hfar.fecha is null then '''' else dbo.fechatoanioquincena(hfar.fecha) end,
--'''' as TIPO_LIC,	
--'''' as QUINQ_DOC,	
--'''' as QUINQ_ADM	,
--'''' as GRADO_LIC,	
--'''' as TITULACIÓN,
--HORARIO=Case when rt.id_nodo is null then '''' else tt.descripcion end,
--ftm.Clave as MOVIMIENTO,	
--ftm.Descripcion as DESC_MOVIMIENTO,	
--fmm.Clave as MOTIVO,	
--fmm.Descripcion as DESC_MOTIVO,
Convert(varchar(10), fdd.Fechaini, 103) as FECHA_INI, 
FECHA_FIN= case when dbo.fechaToAnioQuincena(fdd.fechaini)=dbo.fechaToAnioQuincena(fdd.fechafin) then Convert(varchar(10), dbo.anioQuincenaToFecha(''999924'',1), 103)  else Convert(varchar(10), fdd.FechaFin, 103) end,
'''' as CONCEPTOS_PAGO,
--''E'' AS TIPO_NOMINA
'''' AS REGIMEN
--convert(char(12),c.fechaini,103) as FECHA
from fup_documentos fd
inner join empleados e on fd.Id_Emp = e.Id_Emp
inner join fup_documento_detalle fdd on fd.Id_Documento = fdd.Id_Documento
inner join plazas p on fdd.Id_Plaza = p.Id_plaza
inner join plazaieepo pi on fdd.Id_Plaza = pi.Id_plaza
inner join (select id_plaza,MAX(fecha) fecha
from HTabulador_SE_cm htcm
group by id_plaza
) nc on pi.Id_plaza=nc.id_plaza
inner join HTabulador_SE_CM htcm on htcm.id_plaza=nc.id_plaza and htcm.fecha=nc.fecha
inner join TTabulador_SE_CM ttcm on htcm.id_rel=ttcm.id_Tabulador_SE_CM
inner join usuarios u on fd.Id_Usuario = u.Id_Usuario
inner join FUP_Informacion_Documentos fid on fd.Id_Documento = fid.Id_Documento
inner join CalenNomina c on fid.Id_Periodo = c.Id_Periodo
inner join FUP_MotivoMovimiento fmm on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
inner join tniveleducativo tn on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
inner join TNacionalidad tnac on e.Id_Nacionalidad=tnac.Id_Nacionalidad
inner join TPais tp on tnac.Id_Nacionalidad=tp.Id_Pais
left join TEstados te on e.Id_EstadoNac = te.Id_Estado
left join tciudad tc on e.Id_EstadoNac=te.Id_Estado and tc.Id_Ciudad=e.Id_MunicipioNac
left join (select id_emp,MAX(movimiento) fecha
from hdomicilio 
group by id_emp
) hdoc on e.Id_emp=hdoc.id_emp
left join HDomicilio hd on hd.id_emp=hdoc.id_emp and hdoc.fecha=hd.Movimiento
left join tcolonia tcol on hd.Id_Colonia=tcol.Id_Colonia
left join TLocalidad tloc on hd.Id_Localidad=tloc.id_Localidad
left join (select id_emp,MAX(fecha_alta_gob_fed) fecha
from HFecha_Alta_Gob_Fed group by id_emp
) hfagf on e.Id_Emp=hfagf.id_emp
left join (select id_emp,MAX(fecha_alta_sep) fecha
from HFecha_Alta_sep group by id_emp
) hfas on e.Id_Emp=hfas.id_emp
left join (select id_emp,MAX(fecha_alta_rama) fecha
from HFecha_Alta_rama group by id_emp
) hfar on e.Id_Emp=hfar.id_emp
inner join VistaTablaLongitud vt on fid.Centro_Trabajo=vt.clave
inner join RCT_Turno rt on vt.Id_Nodo=rt.id_nodo
inner join TCT_Turno tt on rt.id_rel=tt.id_CT_Turno
where
--fid.Id_Periodo in (select id_periodo from calennomina where Numero in (@quincena)
--and Id_cia=2 --and Leyenda10=''CFUP'' 
--and Año=@año and parcial<> 0
--union all 
--select id_periodo from calennomina where Numero in (@quincena+1)
--and Id_cia=2 --and Leyenda10=''CFUP'' 
--and Año=@año and parcial= 0)-- se quitó para mostrar todos los movimientos de licencia sin importar el periodo de afectacion
fdd.fechafin>(select distinct fechaini from calennomina where numero=(@quincena-1)
and Año=YEAR(GETDATE()) and id_cia=@id_cia)
 and e.id_cia=@id_cia and fd.Id_Estatus =2 and fd.folio not in (select folio_n from HFolio_verificado)
and ftm.Id_TipoMovimiento in (9,10,11,31) 
--and fd.observaciones not like ''%verificado%'' and fd.observaciones not like ''%procesado%''
and fdd.FechaFin >=(
select TOp 1 fechafin from calennomina where Id_cia=@id_cia and Año=YEAR(GETDATE()) and Actualizado=0
)
order by  id_operacion,ftm.clave,fmm.clave
end'
GO

GO
PRINT N'Creating [dbo].[SP_SHP2]'
GO
IF OBJECT_ID(N'[dbo].[SP_SHP2]', 'P') IS NULL
EXEC sp_executesql N'-- Author:		David Santibañez Vargas
-- Create date: 3 de mayo de 2013
-- Description:	Historial de pagos
-- =============================================
CREATE PROCEDURE [dbo].[SP_SHP2]
	@idplaza int,              
	@Idemp int,  
	@Anio int,          
	@AnioQna int              
with encryption
AS
BEGIN
	SET NOCOUNT ON;
	Select a.id_emp,a.id_periodo,a.Periodo,c.Parcial,tituloPeriodo as Descripcion, Pi.PlazaIEEPO as Plaza,a.Id_plaza,a.Desde,a.Hasta,Percepciones,Deducciones,Liquido,Cheque,b.Id_Vector as Vector         
From      
	 ((Select a.id_emp as Id_Emp,a.id_periodo as Id_Periodo,Cast(c.año as varchar(4)) + ''''+Right(''00''+Cast(c.numero as varchar(2)),2) as Periodo, d.num_plaza as Plaza,d.Id_plaza,      
	 cast( year(c.FechaIni) as varchar) + ''''+ Right(''00'' + Cast(case when(day(c.FechaIni)>15)then month(c.FechaIni)*2 else (month(c.FechaIni)*2)-1 end as Varchar(2)),2) as Desde,  
	 cast( year(c.FechaFin) as varchar) + ''''+ Right(''00'' + Cast(case when(day(c.FechaFin)>15)then month(c.FechaFin)*2 else (month(c.FechaFin)*2)-1 end as Varchar(2)),2) as Hasta,       
	 convert(varchar(12), cast(sum(case when b.tipo = 1 then  a.pesos + a.pesosexcento else 0 end)as money), 1) as Percepciones ,               
	 convert(varchar(12), cast(sum(case when b.tipo = 2 then  a.pesos + a.pesosexcento else 0 end) as money), 1) as Deducciones,              
	 convert(varchar(12), cast(sum ( (case when b.tipo = 1 then  a.pesos + a.pesosexcento else 0 end ) - (case when b.tipo = 2 then  a.pesos + a.pesosexcento else 0 end ) ) as money), 1) as Liquido, f.folio as Cheque              
	 from dbo.recalculo_histpagos a               
	 inner join calennomina c              
	 on a.id_periodo=c.id_periodo              
	 inner join dbo.conceptos b              
	 on b.id_concepto   = a.id_concepto                
	 inner join plazas d            
	 on d.id_plaza = a.id_plaza                
	 left join Folio_Recibos f          
	 on f.id_emp = a.id_emp and  f.id_plaza=a.id_plaza and f.id_periodo=a.id_periodo and f.Id_Recibo =14         
	 group by a.id_periodo,a.id_emp,d.num_plaza,d.Id_plaza,c.numero,c.año,c.fechaini,c.fechafin,f.folio                       
	 having  d.Id_plaza=@idplaza and a.id_emp = @Idemp    
          
union           
          
	 Select a.id_emp as Id_Emp,a.id_periodo as Id_Periodo,Cast(c.año as varchar(4)) + ''''+Right(''00''+Cast(c.numero as varchar(2)),2) as Periodo, d.num_plaza as Plaza,d.Id_plaza,      
	 cast( year(c.FechaIni) as varchar) + ''''+ Right(''00'' + Cast(case when(day(c.FechaIni)>15)then month(c.FechaIni)*2 else (month(c.FechaIni)*2)-1 end as Varchar(2)),2) as Inicio,  
	 cast( year(c.FechaFin) as varchar) + ''''+ Right(''00'' + Cast(case when(day(c.FechaFin)>15)then month(c.FechaFin)*2 else (month(c.FechaFin)*2)-1 end as Varchar(2)),2) as Fin,       
	 convert(varchar(12), cast(sum(case when b.tipo = 1 then  a.pesos + a.pesosexcento else 0 end)as money), 1) as Percepciones ,               
	 convert(varchar(12), cast(sum(case when b.tipo = 2 then  a.pesos + a.pesosexcento else 0 end) as money), 1) as Deducciones,              
	 convert(varchar(12), cast(sum ( (case when b.tipo = 1 then  a.pesos + a.pesosexcento else 0 end ) - (case when b.tipo = 2 then  a.pesos + a.pesosexcento else 0 end ) ) as money), 1) as Liquido, f.folio as Cheque              
	 from dbo.Nom_histpagos a               
	 inner join calennomina c              
	 on a.id_periodo=c.id_periodo              
	 inner join dbo.conceptos b              
	 on b.id_concepto   = a.id_concepto                
	 inner join plazas d            
	 on d.id_plaza = a.id_plaza               
	 left join Folio_Recibos f          
	 on f.id_emp = a.id_emp and f.id_plaza=a.id_plaza and f.id_periodo=a.id_periodo and f.Id_Recibo =14  
	 group by a.id_periodo,a.id_emp,d.num_plaza,d.Id_plaza,c.numero,c.año,c.fechaini,c.fechafin,f.folio               
	 having  d.Id_plaza=@idplaza and a.id_emp = @Idemp    
)) a       
Left Join VistaVectores b       
On a.id_emp=b.id_emp and a.Id_plaza=b.Id_plaza and a.id_periodo=b.id_periodo      
Left Join ((Select Id_periodo,Numero,Parcial,tituloPeriodo,b.DescNomina,Año From Calennomina a Inner join ClasificacionNomina b on a.id_clasifnomina=b.Id_clasifnomina)) c      
On a.Id_periodo=c.Id_periodo  
Left Join plazaIEEPO Pi on a.Id_plaza=Pi.Id_plaza      
Where c.Año = @Anio And Periodo>=@AnioQna      
Order By Periodo,parcial      
      
SET NOCOUNT OFF      

END
'
GO

GO
PRINT N'Creating [dbo].[spf_Inserta_Concepto_Normales_Nvos_ingresos]'
GO
IF OBJECT_ID(N'[dbo].[spf_Inserta_Concepto_Normales_Nvos_ingresos]', 'P') IS NULL
EXEC sp_executesql N'CREATE procedure [dbo].[spf_Inserta_Concepto_Normales_Nvos_ingresos]                        
(                                       
  @id_documento  as int,       
  @accion as bit                          
)     
as       
Begin       
--  Declaracion de variables que se usaran durante el proceso      
    declare @id_documento_loc as int=@id_documento    
    declare @accion_loc as int =@accion    
    declare @idEmpleado as int      
    declare @tipo as varchar(5)      
    declare @idPlaza as int      
    declare @desde as datetime      
    declare @modelo_homologados as int      
    declare @plaza_mayorvalor as int       
    declare @plaza_existen_conceptos as int      
    declare @procede as int      
    declare @id_usuario as int         
    
    set @idEmpleado=(select id_emp from fup_documentos where id_documento=@id_documento_loc) -- Se asigna el id del empleado para el folio a procesar       
    set @id_usuario=(select id_usuario from fup_documentos where id_documento=@id_documento_loc) -- Se obtiene el id del usuario que capturó el folio      
    
    set @modelo_homologados=       
    (       
    select count(ttcp.TModelo_SE_id_Modelo_SE) from fup_documento_detalle fdd      
    inner join FUP_MotivoMovimiento fmm on fdd.id_motivomovimiento=fmm.id_motivomovimiento      
    inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento      
    inner join HTabulador_SE_Cat_Puesto htcp on fdd.id_plaza=htcp.id_plaza      
    inner join TTabulador_SE_Cat_Puesto ttcp on htcp.id_rel=ttcp.id_Tabulador_SE_Cat_Puesto      
    inner join plazaieepo pi on fdd.Id_Plaza = pi.Id_plaza      
    where fdd.id_documento=@id_documento_loc and ftm.Id_TipoMovimiento in (2) and fmm.Id_MotivoMovimiento in (1,5)      
    and ttcp.TModelo_SE_id_Modelo_SE in (2,5,6,9)      
    )  --- En la variable @modelo_homologados se almacena el dato correspondiente, si la plaza corresponde a los modelos       
       --- \-NORMALES ADMINISTRATIVOS      
       --- I-CAPACITACION Y MEJORAMIENTO DOCENTE      
       --- H-NORMALES DOCENTES      
       --- R-CAPACITACION Y MEJORAMIENTO ADMINISTRATIVO      
        
    set @tipo =(select distinct ftm.clave from fup_documento_detalle fdd      
                inner join FUP_MotivoMovimiento fmm on fdd.id_motivomovimiento=fmm.id_motivomovimiento      
                inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento      
                where fdd.id_documento=@id_documento_loc and ftm.id_tipomovimiento in (2) and      
                fmm.Id_MotivoMovimiento in (1,5)  and fmm.clave in (''10'',''95'')      
                )  --- En la variable @tipo se almacena el tipo de movimiento, en este caso debe ser un nuevo ingreso      
     
    if (@accion_loc=0)--- En caso de que la accion sea un 0 procede el hacer      
    
            begin      
    
                      if (@modelo_homologados>0 and @tipo in (''01'')) -- Si la plaza es del modelo que se almaceno en la variable @modelo_homologados y es un movimiento de nuevo ingreso      
    
                          begin      
                               set @plaza_existen_conceptos=(      
                                                             select distinct tt.NoPlaza from HTabulador_SE_Cat_Puesto ht      
                                                             inner join plazas p on ht.id_plaza=p.id_plaza      
                                                             inner join TTEmpleado_Plaza_Conc tt on p.num_plaza=tt.NoPlaza      
                                                             inner join TTabulador_SE_Cat_Puesto tts on ht.id_rel=tts.id_Tabulador_SE_Cat_Puesto      
                                                             inner join conceptos c on tt.NoConcepto=c.id_concepto      
                                                             where tt.NoConcepto in (1306,1558) and tt.id_emp=@idEmpleado and tts.TModelo_SE_id_Modelo_SE in (2,5,6,9)   
                and p.id_plaza not in (       
                select fdd.id_plaza from fup_documentos fd   
                inner join fup_documento_detalle fdd on fdd.id_documento=fd.id_documento  
                inner join fup_motivomovimiento fmm on fdd.id_motivomovimiento=fmm.id_motivomovimiento  
                inner join fup_tipomovimiento ftm on ftm.id_tipomovimiento=fmm.id_tipomovimiento  
                where fd.id_emp=@idEmpleado and ftm.id_tipomovimiento in (4,6,7,8) and fdd.id_motivomovimiento not in (11,12,119,20))     
                                                             )--se agrega validacion para no tomar en cuenta las plazas que tuvieron baja de cualquier tipo  
                -- En la variable @plaza_existen_conceptos se almacena la plaza en caso que el empleado ya cuente con los conceptos      
                                          
                                      set @plaza_mayorvalor=(select pla.num_plaza from fup_documento_detalle fdd      
                                                             inner join FUP_MotivoMovimiento fmm on fdd.id_motivomovimiento=fmm.id_motivomovimiento      
                                                             inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento      
                                                             inner join HTabulador_SE_Cat_Puesto htcp on fdd.id_plaza=htcp.id_plaza      
                                                             inner join TTabulador_SE_Cat_Puesto ttcp on htcp.id_rel=ttcp.id_Tabulador_SE_Cat_Puesto      
                                                             inner join plazaieepo pi on fdd.Id_Plaza = pi.Id_plaza      
                                                             inner join plazas pla on pi.id_plaza=pla.id_plaza      
                                                             where fdd.Id_Documento=@id_documento_loc and ftm.id_tipomovimiento in (2) and      
                                                             fmm.Id_MotivoMovimiento in (1,5)  and fmm.clave in (''10'',''95'')      
                                                             and ttcp.Hrs_Compatibilidad=(select max(hrs_compatibilidad) from TTabulador_SE_Cat_Puesto      
                                                             where id_Tabulador_SE_Cat_Puesto in (      
                                                             select id_rel from HTabulador_SE_Cat_Puesto where id_plaza in       
                                                             (select id_plaza from fup_documento_detalle where id_documento=@id_documento_loc)      
                                                             )))  
                -- La variable @plaza_mayorvalor almacena la plaza de mayor valor, en este caso como se reutilizo      
                                                             -- informacion de otro Procedimiento, la plaza se obtiene como tal con la que se da el movimiento ya que un empleado no puede      
                                                             -- tener 2 movimientos (01 95, 01 10) en el mismmo folio.                                                                                                                          
    
                                                set @desde= (select fdd.fechaini from fup_documento_detalle fdd      
                                                            inner join FUP_MotivoMovimiento fmm on fdd.id_motivomovimiento=fmm.id_motivomovimiento      
                                                            inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento      
                                                            inner join HTabulador_SE_Cat_Puesto htcp on fdd.id_plaza=htcp.id_plaza      
                                                            inner join TTabulador_SE_Cat_Puesto ttcp on htcp.id_rel=ttcp.id_Tabulador_SE_Cat_Puesto      
                                                            inner join plazaieepo pi on fdd.Id_Plaza = pi.Id_plaza      
                                                            inner join plazas pla on pi.id_plaza=pla.id_plaza      
                                                            where fdd.Id_Documento=@id_documento_loc and ftm.id_tipomovimiento in (2) and      
                                                            fmm.Id_MotivoMovimiento in (1,5)  and fmm.clave in (''10'',''95'')      
                                                            and ttcp.Hrs_Compatibilidad=(select max(hrs_compatibilidad) from TTabulador_SE_Cat_Puesto      
                                                            where id_Tabulador_SE_Cat_Puesto in (      
                                                            select id_rel from HTabulador_SE_Cat_Puesto where id_plaza in       
                                                            (select id_plaza from fup_documento_detalle where id_documento=@id_documento_loc)      
                                                            )))  
               -- La variable @desde almacena el desde del movimiento de nuevo ingreso      
    
    
                      if (@plaza_existen_conceptos >0) -- En caso de que el empleado ya cuente con los conceptos, no se realiza la insercion de los mismos, solo se asigna el valor 0 a la variable @procede      
                          begin      
                               set  @procede=0      
                          end           
                     else                             -- En caso que el empleado no cuente con los conceptos, se insertan, algunos valores son obtenidos en variables anteriormente declaradas.      
                          begin               
                               insert into TTEmpleado_Plaza_Conc(      
                               consecutivo      
                               ,descripcion      
                               ,NoPlaza      
                               ,NoConcepto      
                               ,Monto      
                               ,FechaFin      
                               ,Tvigencia_id_vigencia      
                               ,NoEmp_rel      
                               ,usuario      
                               ,Movimiento      
                               ,Fecha      
                               ,Id_Emp      
                               ,TTipo_Captura_id_Tipo_Captura      
                               ,id_periodopago      
                               ,Id_Documento      
                               )  
          VALUES(      
                               0             -- consecutivo - int      
                               ,''HT''            -- descripcion - varchar(60)      
                               , @plaza_mayorvalor                -- NoPlaza - int      
                               ,1558             -- NoConcepto - int      
                               ,71.87                  -- Monto - float      
                               ,''9999-12-31 23:59:00''               -- FechaFin - datetime      
                               ,1   -- Tvigencia_id_vigencia - int      
                               ,@idEmpleado              -- NoEmp_rel - int      
                               ,@id_usuario                -- usuario - smallint      
                               ,getdate()             -- Movimiento - datetime      
                               ,@desde                   -- Fecha - datetime      
                               ,@idEmpleado                    -- Id_Emp - int      
                               ,0  -- TTipo_Captura_id_Tipo_Captura - int      
                               ,0          -- id_periodopago - int      
                               ,@id_documento_loc            -- Id_Documento - int      
                               )       
    
      
                               insert into TTEmpleado_Plaza_Conc (      
                               consecutivo      
                               ,descripcion      
        ,NoPlaza      
                               ,NoConcepto      
                               ,Monto      
                               ,FechaFin      
                               ,Tvigencia_id_vigencia      
                               ,NoEmp_rel      
                               ,usuario      
                               ,Movimiento      
                               ,Fecha      
                               ,Id_Emp      
                               ,TTipo_Captura_id_Tipo_Captura      
                               ,id_periodopago      
                               ,Id_Documento      
                               )   
          VALUES(      
                               0           -- consecutivo - int      
                               ,''38''             -- descripcion - varchar(60)      
                               , @plaza_mayorvalor                -- NoPlaza - int      
                               ,1306             -- NoConcepto - int      
                               ,627.5--545.5--385.5                   -- Monto - float      
                               ,''9999-12-31 23:59:00''              -- FechaFin - datetime      
                               ,1  -- Tvigencia_id_vigencia - int      
                               ,@idEmpleado              -- NoEmp_rel - int      
                               ,@id_usuario                -- usuario - smallint      
                               ,getdate()             -- Movimiento - datetime      
                               ,@desde                  -- Fecha - datetime      
                               ,@idEmpleado                    -- Id_Emp - int      
                               ,0  -- TTipo_Captura_id_Tipo_Captura - int      
                               ,0          -- id_periodopago - int      
                               ,@id_documento_loc            -- Id_Documento - int      
                               )      
                               end      
                    end      
              end -- fin de la accion hacer (0)      
        else -- En caso que la accion sea dieferente de 0, se realiza el deshacer      
              begin      
                 delete from ttempleado_plaza_conc where id_emp=@idEmpleado and noconcepto in (1306,1558) and id_documento=@id_documento_loc -- Se eliminan los conceptos insertados con el empleado, la plaza, y el id_documento del folio      
              end      
end'
GO

GO
PRINT N'Creating [dbo].[N3G_N0MH1S]'
GO
IF OBJECT_ID(N'[dbo].[N3G_N0MH1S]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROC  [dbo].[N3G_N0MH1S]
@qnaactual varchar(6),
@idperiodo int,
@nom varchar(3),
@idcia int
AS

set @idcia = case 
                when @nom = ''BAS'' then 2
                when @nom = ''UPN'' then 1
              end
set @idperiodo = (select id_periodo from CalenNomina where Año = cast(SUBSTRING(@qnaactual, 1, 4) as int) and Numero = cast(SUBSTRING(@qnaactual, 5, 2) as int) and Parcial = 0 and Id_cia = @idcia)
select a.id_emp,a.id_plaza, e.RFC,p.PlazaIEEPO, sum(percepciones) as Total_Percepciones, sum(deducciones) as Total_Deducciones, (sum(percepciones) - sum(deducciones)) as Total 
from (
  select id_emp,id_plaza,sum(pesos) as percepciones, 0 as deducciones 
  FROM nom_histpagos
  where Id_Periodo = @idperiodo and id_concepto in (select id_concepto from conceptos where tipo = 1 and descripcion like ''%'' + @nom + ''%'' )
  group by id_emp,id_plaza
  union all
  select id_emp,id_plaza,0 as percepciones, sum(pesos) as deducciones 
  FROM nom_histpagos 
  where Id_Periodo = @idperiodo and id_concepto in (select id_concepto from conceptos where tipo = 2 and descripcion like ''%'' + @nom + ''%'' )
  group by id_emp,id_plaza
) a 
inner join empleados e on e.Id_Emp = a.Id_Emp
inner join plazaieepo p on p.Id_plaza = a.id_plaza
group by a.id_emp,a.id_plaza,e.RFC,p.Id_plaza,p.PlazaIEEPO
having (sum(percepciones) - sum(deducciones)) <= 0 order by a.id_Emp
'
GO

GO
PRINT N'Creating [dbo].[SIGP_CatalogoCts]'
GO
IF OBJECT_ID(N'[dbo].[SIGP_CatalogoCts]', 'P') IS NULL
EXEC sp_executesql N'CREATE procedure [dbo].[SIGP_CatalogoCts] AS      
 BEGIN      
 SET NOCOUNT ON;      
   -- 15925 CT''s conciliados      
   select v.clave as Clave_CT, v.Descripcion as Nombre_CT,      
   --case       
   --  when substring(v.clave,3,1) in (''A'',''F'',''H'',''T'',''B'',''C'',''M'',''Z'') then ''ADMINISTRATIVO''       
   --  when substring(v.clave,3,1) in (''P'',''S'',''U'',''D'',''E'',''N'',''K'',''R'') then ''DOCENTE''       
   --end as Clasificacion,   
   isnull(cf.TIPO,'''') as Clasificacion,  
   tt.descripcion as Turno,tze.descripcion as Zona_Economina,''Centro de Trabajo'' as Tipo_Domicilio,''MEXICO'' as Pais,''OAXACA'' as Entidad,
   tmun.des_mun_ct as Municipio, tloc.des_loc_ct as Localidad,t28.direccion_ct as Calle,'''' as Tipo_Vialidad,'''' as Colonia, 
   '''' as Numero_Exterior,'''' as Numero_Interior, '''' as Referencias,'''' as Manzana,'''' as Lote,'''' as CP,'''' as Latitud,'''' as Longitud,
   '''' as Altitud,'''' as Ventanillas,'''' as Horario_Atencion,'''' as Numero_Modulos,ROW_NUMBER() OVER(ORDER BY v.clave ASC) AS Inmueble
   into #cts
   from vistatablalongitud v      
   inner join tablalongitudprop_28 t28 on v.id_nodo = t28.id_nodo and t28.conciliado = 1      
   inner join rct_turno rt on v.id_nodo = rt.id_nodo      
   inner join tct_turno tt on rt.id_rel = tt.id_ct_turno      
   inner join RCT_Tabulador_SE_Zona rze on v.id_nodo = rze.id_nodo      
   inner join TCT_Tabulador_SE_Zona tze on rze.id_rel = tze.id_ct_tabulador_se_zona      
   inner join RCT_Municipios_ct rmun on v.id_nodo = rmun.id_nodo      
   inner join TCT_Municipios_ct tmun on rmun.id_rel = tmun.id_ct_municipios_ct      
   inner join RCT_Localidad rloc on v.id_nodo = rloc.id_nodo      
   inner join TCT_Localidad tloc on rloc.id_rel = tloc.id_ct_localidad  
   left join TCT_ClasificacionFONE cf on substring(v.clave,3,3) = cf.clave  

   select Clave_CT,Nombre_CT,Clasificacion as clasificacion_CT,Turno,Zona_Economina,Inmueble from #cts

   select Inmueble,Tipo_Domicilio,Pais,Entidad,Municipio,Localidad,Calle,Tipo_Vialidad,Colonia,Numero_Exterior,Numero_Interior,Referencias,
   Manzana,Lote,CP,Latitud,Longitud,Altitud from #cts

END'
GO

GO
PRINT N'Creating [dbo].[sp_traecptospl]'
GO
IF OBJECT_ID(N'[dbo].[sp_traecptospl]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[sp_traecptospl]
	-- Add the parameters for the stored procedure here	
	@idplaza int,              
	@Idemp int,  
	@idperiodo int,             
	@tipopl int

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

if @tipopl = 1 
	select * from histpagos 
	where id_plaza = @idplaza and id_periodo = @idperiodo and id_emp = @Idemp and
    id_concepto in (1511,1564,1565,1518,1566,1568,1588,1589,1522,2510,2515,1512,1509,
	1513,2507,1516,2316,2379,2465,2407,2520,2467,2448,2409,2408,2474,3060,3061,3062,
	3075,3076,3077,2484,2485,2486,2487,2493,2494,2475,2476,2478,1514,1515,1572,1573,
	2495,1574,1441,2387,1575,1576,1580,1581,1582,2328,2410,2482,2481,2458,2459,2456,1556)
else
    select * from histpagos
    where id_plaza = @idplaza and id_periodo = @idperiodo and id_emp = @Idemp and
    id_concepto in (select distinct id_concepto from valoresmatriz5 
where id_Tabulador_SE_Cat_Puesto = 57)

--select distinct id_concepto  from valoresmatriz4 where id_Tabulador_SE_Cat_Puesto = 57
--select distinct id_concepto  from valoresmatriz5 where id_Tabulador_SE_Cat_Puesto = 57
--select *   from valoresmatriz5 where id_Tabulador_SE_Cat_Puesto = 57
--select *  from valoresmatriz4 where id_Tabulador_SE_Cat_Puesto = 57
--select * from conceptos where id_concepto = 1205
--select * from TTabulador_SE_Cat_Puesto 

--select * from conceptos where id_concepto in 
--(select distinct id_concepto from valoresmatriz5 
--where id_Tabulador_SE_Cat_Puesto = 57)


END
'
GO

GO
PRINT N'Creating [dbo].[spf_obten_areasFUP]'
GO
IF OBJECT_ID(N'[dbo].[spf_obten_areasFUP]', 'P') IS NULL
EXEC sp_executesql N'create procedure [dbo].[spf_obten_areasFUP] 
(
@id_usuario as int)
with recompile         
as                                                    
select distinct c.descripcion as Area from usuarios a 
inner join fup_usuario_drse b on a.id_usuario=b.id_usuario
inner join fup_drse c on b.id_drse=c.id_drse
where a.id_usuario=@id_usuario and c.id_drse not in (3)'
GO

GO
PRINT N'Creating [dbo].[SP_SHP3]'
GO
IF OBJECT_ID(N'[dbo].[SP_SHP3]', 'P') IS NULL
EXEC sp_executesql N'-- Author:		David Santibañez Vargas
-- Create date: 3 de mayo de 2013
-- Description:	Historial de pagos
-- =============================================
CREATE PROCEDURE [dbo].[SP_SHP3]
	@idplaza int,              
	@Idemp int,  
	@Anio int,          
	@AnioQna int  
with encryption	            
AS
BEGIN
	SET NOCOUNT ON;
	Select a.id_emp,a.id_periodo,a.Periodo,c.Parcial,tituloPeriodo as Descripcion, Pi.PlazaIEEPO as Plaza,a.Id_plaza,a.Desde,a.Hasta,Percepciones,Deducciones,Liquido,Cheque,b.Id_Vector as Vector         
From      
	 ((Select a.id_emp as Id_Emp,a.id_periodo as Id_Periodo,Cast(c.año as varchar(4)) + ''''+Right(''00''+Cast(c.numero as varchar(2)),2) as Periodo, d.num_plaza as Plaza,d.Id_plaza,      
	 cast( year(c.FechaIni) as varchar) + ''''+ Right(''00'' + Cast(case when(day(c.FechaIni)>15)then month(c.FechaIni)*2 else (month(c.FechaIni)*2)-1 end as Varchar(2)),2) as Desde,  
	 cast( year(c.FechaFin) as varchar) + ''''+ Right(''00'' + Cast(case when(day(c.FechaFin)>15)then month(c.FechaFin)*2 else (month(c.FechaFin)*2)-1 end as Varchar(2)),2) as Hasta,       
	 convert(varchar(12), cast(sum(case when b.tipo = 1 then  a.pesos + a.pesosexcento else 0 end)as money), 1) as Percepciones ,               
	 convert(varchar(12), cast(sum(case when b.tipo = 2 then  a.pesos + a.pesosexcento else 0 end) as money), 1) as Deducciones,              
	 convert(varchar(12), cast(sum ( (case when b.tipo = 1 then  a.pesos + a.pesosexcento else 0 end ) - (case when b.tipo = 2 then  a.pesos + a.pesosexcento else 0 end ) ) as money), 1) as Liquido, f.folio as Cheque              
	 from dbo.histpagos a               
	 inner join calennomina c              
	 on a.id_periodo=c.id_periodo              
	 inner join dbo.conceptos b              
	 on b.id_concepto   = a.id_concepto                
	 inner join plazas d            
	 on d.id_plaza = a.id_plaza                
	 left join Folio_Recibos f          
	 on f.id_emp = a.id_emp and  f.id_plaza=a.id_plaza and f.id_periodo=a.id_periodo and f.Id_Recibo =14         
	 group by a.id_periodo,a.id_emp,d.num_plaza,d.Id_plaza,c.numero,c.año,c.fechaini,c.fechafin,f.folio                       
	 having  d.Id_plaza=@idplaza and a.id_emp = @Idemp    
          
union           
          
	 Select a.id_emp as Id_Emp,a.id_periodo as Id_Periodo,Cast(c.año as varchar(4)) + ''''+Right(''00''+Cast(c.numero as varchar(2)),2) as Periodo, d.num_plaza as Plaza,d.Id_plaza,      
	 cast( year(c.FechaIni) as varchar) + ''''+ Right(''00'' + Cast(case when(day(c.FechaIni)>15)then month(c.FechaIni)*2 else (month(c.FechaIni)*2)-1 end as Varchar(2)),2) as Inicio,  
	 cast( year(c.FechaFin) as varchar) + ''''+ Right(''00'' + Cast(case when(day(c.FechaFin)>15)then month(c.FechaFin)*2 else (month(c.FechaFin)*2)-1 end as Varchar(2)),2) as Fin,       
	 convert(varchar(12), cast(sum(case when b.tipo = 1 then  a.pesos + a.pesosexcento else 0 end)as money), 1) as Percepciones ,               
	 convert(varchar(12), cast(sum(case when b.tipo = 2 then  a.pesos + a.pesosexcento else 0 end) as money), 1) as Deducciones,              
	 convert(varchar(12), cast(sum ( (case when b.tipo = 1 then  a.pesos + a.pesosexcento else 0 end ) - (case when b.tipo = 2 then  a.pesos + a.pesosexcento else 0 end ) ) as money), 1) as Liquido, f.folio as Cheque              
	 from dbo.recalculo_histpagos a               
	 inner join calennomina c              
	 on a.id_periodo=c.id_periodo              
	 inner join dbo.conceptos b              
	 on b.id_concepto   = a.id_concepto                
	 inner join plazas d            
	 on d.id_plaza = a.id_plaza               
	 left join Folio_Recibos f          
	 on f.id_emp = a.id_emp and f.id_plaza=a.id_plaza and f.id_periodo=a.id_periodo and f.Id_Recibo =14  
	 group by a.id_periodo,a.id_emp,d.num_plaza,d.Id_plaza,c.numero,c.año,c.fechaini,c.fechafin,f.folio               
	 having  d.Id_plaza=@idplaza and a.id_emp = @Idemp    
)) a       
Left Join VistaVectores b       
On a.id_emp=b.id_emp and a.Id_plaza=b.Id_plaza and a.id_periodo=b.id_periodo      
Left Join ((Select Id_periodo,Numero,Parcial,tituloPeriodo,b.DescNomina,Año From Calennomina a Inner join ClasificacionNomina b on a.id_clasifnomina=b.Id_clasifnomina)) c      
On a.Id_periodo=c.Id_periodo  
Left Join plazaIEEPO Pi on a.Id_plaza=Pi.Id_plaza      
Where c.Año = @Anio And Periodo>=@AnioQna      
Order By Periodo,parcial      
      
SET NOCOUNT OFF      

END
'
GO

GO
PRINT N'Creating [dbo].[SIGP_AntiguedadesEmpleado]'
GO
IF OBJECT_ID(N'[dbo].[SIGP_AntiguedadesEmpleado]', 'P') IS NULL
EXEC sp_executesql N'
CREATE PROCEDURE [dbo].[SIGP_AntiguedadesEmpleado]    
WITH EXEC AS CALLER  AS    
BEGIN  
 select a.Id_Emp, e.RFC, e.CURP,''Gobierno Federal'' TIPO_FECHA, convert(varchar,a.Fecha_Alta_Gob_Fed,103) FECHA_INGRESO,     
 convert(varchar,GETDATE(),103) FECHA_ACUMULADO, datediff(dd,a.Fecha_Alta_Gob_Fed,GETDATE())+1 DIAS     
 from HFecha_Alta_Gob_Fed a    
 inner join (  
  select id_emp,max(fecha) fecha from HFecha_Alta_Gob_Fed group by id_emp  
 )b on a.id_emp = b.id_emp and a.fecha = b.fecha  
 inner join empleados e on e.id_emp = a.id_emp    
 where e.id_emp > 0 and ( e.id_emp in (select id_emp from plazaempleados) or e.id_emp in (select id_emp from FUP_Documentos))   
 and e.rfc not like ''XX%'' and a.Fecha_Alta_Gob_Fed <= getdate()
  
 union    
  
 select a.Id_Emp, e.RFC, e.CURP,''SEP'' TIPO_FECHA, convert(varchar,a.Fecha_Alta_SEP ,103) FECHA_INGRESO,     
 convert(varchar,GETDATE(),103) FECHA_ACUMULADO, datediff(dd,a.Fecha_Alta_SEP,GETDATE())+1 DIAS     
 from HFecha_Alta_SEP a    
 inner join (  
  select id_emp,max(fecha) fecha from HFecha_Alta_SEP group by id_emp  
 )b on a.id_emp = b.id_emp and a.fecha = b.fecha  
 inner join empleados e on e.id_emp = a.id_emp    
 where e.id_emp > 0 and ( e.id_emp in (select id_emp from plazaempleados) or e.id_emp in (select id_emp from FUP_Documentos))   
 and e.rfc not like ''XX%'' and a.Fecha_Alta_SEP <= getdate()
  
 union    
  
 select a.Id_Emp, e.RFC, e.CURP,''RAMA'' TIPO_FECHA, convert(varchar,a.Fecha_Alta_Rama ,103) FECHA_INGRESO,     
 convert(varchar,GETDATE(),103) FECHA_ACUMULADO, datediff(dd,a.Fecha_Alta_Rama,GETDATE())+1 DIAS     
 from HFecha_Alta_Rama a    
 inner join (  
  select id_emp,max(fecha) fecha from HFecha_Alta_Rama group by id_emp  
 )b on a.id_emp = b.id_emp and a.fecha = b.fecha  
 inner join empleados e on e.id_emp = a.id_emp    
 where e.id_emp > 0 and ( e.id_emp in (select id_emp from plazaempleados) or e.id_emp in (select id_emp from FUP_Documentos))    
 and e.rfc not like ''XX%'' and a.Fecha_Alta_Rama <= getdate()
   
 union    
  
 select a.Id_Emp, e.RFC, e.CURP,''PRIMA ANTIGUEDAD'' TIPO_FECHA, convert(varchar,a.Fecha_Prima_Antiguedad ,103) FECHA_INGRESO,     
 convert(varchar,GETDATE(),103) FECHA_ACUMULADO, datediff(dd,a.Fecha_Prima_Antiguedad,GETDATE())+1 DIAS       
 from HFecha_Prima_Antiguedad a    
 inner join (  
  select id_emp,max(fecha) fecha from HFecha_Prima_Antiguedad group by id_emp  
 )b on a.id_emp = b.id_emp and a.fecha = b.fecha  
 inner join empleados e on e.id_emp = a.id_emp    
 where e.id_emp > 0 and ( e.id_emp in (select id_emp from plazaempleados) or e.id_emp in (select id_emp from FUP_Documentos))  
 and e.rfc not like ''XX%'' and a.Fecha_Prima_Antiguedad <= getdate()
END'
GO

GO
PRINT N'Creating [dbo].[SIGP_Tabulador_Sueldos2Ok]'
GO
IF OBJECT_ID(N'[dbo].[SIGP_Tabulador_Sueldos2Ok]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================      
-- Author:  <Author,,Name>      
-- Create date: 15/11/2018      
-- Description: Tabulador de sueldos para FONE      
-- =============================================      
CREATE PROCEDURE [dbo].[SIGP_Tabulador_Sueldos2Ok]      
       
AS      
BEGIN      
 -- SET NOCOUNT ON added to prevent extra result sets from      
 -- interfering with SELECT statements.      
 SET NOCOUNT ON;      
       
   ------------------------------------------------------------------------------------------------------------------      
   ------------------------------------------------------------------------------------------------------------------      
   ----------------------------------------         UPN     ---------------------------------------------------------      
   ------------------------------------------------------------------------------------------------------------------      
   ------------------------------------------------------------------------------------------------------------------      
      
   select ROW_NUMBER() OVER(PARTITION BY tt.id_Tabulador_SE_Cat_Puesto,resultado,id_Tabulador_SE_Zona,id_Tabulador_SE_Nivel_Pago,tt.nivel_puesto 
   ORDER BY tt.id_Tabulador_SE_Cat_Puesto,resultado,id_Tabulador_SE_Zona,id_Tabulador_SE_Nivel_Pago,tt.nivel_puesto ,fecha ASC) AS Row#,      
   tt.id_Tabulador_SE_Cat_Puesto,tt.categoria,id_Tabulador_SE_Zona,id_Tabulador_SE_Nivel_Pago,tt.nivel_puesto,c.resultado,c.tipo,fecha,max(valor)Valor,TModelo_SE_id_Modelo_SE--,v.*      
   into -- drop table      
   #cat_pue      
   --select *       
    FROM valoresmatriz8 v with(nolock)       
    join TTabulador_SE_Cat_Puesto tt with(nolock) on tt.id_Tabulador_SE_Cat_Puesto=v.id_Tabulador_SE_Cat_Puesto      
    join Conceptos c with(nolock) on c.id_concepto=v.id_concepto      
    inner join TModelo_SE Modelo with(nolock) on tt.TModelo_SE_Id_Modelo_SE = Modelo.id_modelo_SE        
    where tt.categoria not like ''%ET%'' and tt.categoria not like ''%EH%'' and tt.categoria not like ''%AB%'' and modelo.id_modelo=7       
--and categoria='' E9007''      
   group by tt.id_Tabulador_SE_Cat_Puesto,tt.categoria,c.resultado,c.tipo,Fecha,id_Tabulador_SE_Zona,id_Tabulador_SE_Nivel_Pago,tt.nivel_puesto,TModelo_SE_id_Modelo_SE       
--order by tt.id_Tabulador_SE_Cat_Puesto,id_Tabulador_SE_Zona,id_Tabulador_SE_Nivel_Pago 
       
      ---4996
   select rtrim(ltrim(c1.categoria)) categoria,c1.resultado concepto,c1.id_Tabulador_SE_Zona,c1.id_Tabulador_SE_Nivel_Pago,
   case when c1.nivel_puesto ='''' then '''' else c1.nivel_puesto end as nivel_puesto,
   case when c1.tipo in (1,3) then ''P'' else '''' end tipo,dbo.fechaToAnioQuincena(c1.fecha) desde,      
   --isnull(      
   dbo.fechaToAnioQuincena(c2.Fecha-1)      
   --,''999999'' )      
   hasta,c1.Valor,c1.TModelo_SE_id_Modelo_SE      
   into --drop table       
   #UPN      
   from #cat_pue c1      
   left join #cat_pue c2       
   on c1.id_Tabulador_SE_Cat_Puesto=c2.id_Tabulador_SE_Cat_Puesto and c1.resultado = c2.resultado and c1.Tipo=c2.tipo and c1.row#=c2.Row#-1      
   and c1.id_Tabulador_SE_Zona= c2.id_Tabulador_SE_Zona and c1.id_Tabulador_SE_Nivel_Pago=c2.id_Tabulador_SE_Nivel_Pago      
   order by c1.id_Tabulador_SE_Cat_Puesto,c1.resultado,c1.fecha   
   
   --select * from #UPN   
      
   ------------------------------------------------------------------------------------------------------------------      
   ------------------------------------------------------------------------------------------------------------------      
   ----------------------------------------        MANDOS   ---------------------------------------------------------      
   ------------------------------------------------------------------------------------------------------------------      
   ------------------------------------------------------------------------------------------------------------------      
   select       
   tt.id_Tabulador_SE_Cat_Puesto,tt.categoria,c.resultado,c.tipo,id_Tabulador_SE_Zona,id_Tabulador_SE_Nivel_Pago,tt.nivel_puesto,fecha,max(valor)Valor,TModelo_SE_id_Modelo_SE--,v.*      
   into -- drop table      
   #cat_pue_MM      
   FROM (select * from valoresmatriz4 with(nolock) union all select * from valoresmatriz5 with(nolock) ) v      
   join TTabulador_SE_Cat_Puesto tt with(nolock) on tt.id_Tabulador_SE_Cat_Puesto=v.id_Tabulador_SE_Cat_Puesto      
   join Conceptos c with(nolock) on c.id_concepto=v.id_concepto      
   inner join TModelo_SE Modelo with(nolock) on tt.TModelo_SE_Id_Modelo_SE = Modelo.id_modelo_SE        
   where tt.categoria not like ''%ET%'' and tt.categoria not like ''%EH%'' and tt.categoria not like ''%AB%'' and modelo.id_modelo=10       
   group by tt.id_Tabulador_SE_Cat_Puesto,tt.categoria,c.resultado,c.tipo,id_Tabulador_SE_Zona,id_Tabulador_SE_Nivel_Pago,tt.nivel_puesto,Fecha,TModelo_SE_id_Modelo_SE      
      
   select * into -- drop table      
    #cat_pue_sueldos_base from #cat_pue_MM WHERE resultado in (''07'',''7a'',''7b'',''7c'',''7d'',''7e'',''bc'') and tipo = 1;      
   select *       
   into -- drop table       
   #cat_pue_otros from #cat_pue_MM WHERE resultado not in (''07'',''7a'',''7b'',''7c'',''7d'',''7e'',''bc'') and tipo = 1;      
      
   select ROW_NUMBER() OVER(PARTITION BY id_Tabulador_SE_Cat_Puesto,resultado,id_Tabulador_SE_Zona,id_Tabulador_SE_Nivel_Pago,nivel_puesto 
   ORDER BY id_Tabulador_SE_Cat_Puesto,resultado,id_Tabulador_SE_Zona,id_Tabulador_SE_Nivel_Pago,nivel_puesto,fecha ASC) AS Row#,*       
   into  -- drop table       
   #cat_pue_MM_2       
   from (      
   select * from #cat_pue_sueldos_base      
   union all       
   select * from #cat_pue_otros      
   )a      
      
   select rtrim(ltrim(c1.categoria)) categoria,c1.resultado concepto,c1.id_Tabulador_SE_Zona,c1.id_Tabulador_SE_Nivel_Pago,
   case when c1.nivel_puesto ='''' then '''' else c1.nivel_puesto end as nivel_puesto,
   case when c1.tipo in (1,3) then ''P'' else '''' end tipo,dbo.fechaToAnioQuincena(c1.fecha) desde,      
   --isnull(      
   dbo.fechaToAnioQuincena(c2.Fecha-1)      
   --,''999999'' )      
   hasta,c1.Valor,c1.TModelo_SE_id_Modelo_SE      
   into --drop table       
   #MM      
   from #cat_pue_MM_2 c1      
   left join #cat_pue_MM_2 c2       
   on c1.id_Tabulador_SE_Cat_Puesto=c2.id_Tabulador_SE_Cat_Puesto and c1.resultado = c2.resultado and c1.Tipo=c2.tipo and c1.row#=c2.Row#-1      
   and c1.id_Tabulador_SE_Zona= c2.id_Tabulador_SE_Zona and c1.id_Tabulador_SE_Nivel_Pago=c2.id_Tabulador_SE_Nivel_Pago      
   order by c1.id_Tabulador_SE_Cat_Puesto,c1.resultado,c1.id_Tabulador_SE_Zona,c1.id_Tabulador_SE_Nivel_Pago,c1.fecha  
  
         
   --select * from #MM 
   ------------------------------------------------------------------------------------------------------------------      
   ------------------------------------------------------------------------------------------------------------------      
   ----------------------------------------        BASICA   ---------------------------------------------------------      
   ------------------------------------------------------------------------------------------------------------------      
   ------------------------------------------------------------------------------------------------------------------      
   
   select       
   tt.id_Tabulador_SE_Cat_Puesto,tt.categoria,c.resultado,c.tipo,id_Tabulador_SE_Zona,id_Tabulador_SE_Nivel_Pago,tt.nivel_puesto,fecha,max(valor)Valor,TModelo_SE_id_Modelo_SE--,v.*      
   into -- drop table      
   #cat_pue_Ba      
    FROM (select * from valoresmatriz4 with(nolock) union all select * from valoresmatriz5 with(nolock) ) v      
    join TTabulador_SE_Cat_Puesto tt with(nolock) on tt.id_Tabulador_SE_Cat_Puesto=v.id_Tabulador_SE_Cat_Puesto      
    join Conceptos c with(nolock) on c.id_concepto=v.id_concepto      
    inner join TModelo_SE Modelo with(nolock) on tt.TModelo_SE_Id_Modelo_SE = Modelo.id_modelo_SE        
    where tt.categoria not like ''%ET%'' and tt.categoria not like ''%EH%''and tt.categoria not like ''%AB%'' and modelo.id_modelo not in (7,10 )      
   group by tt.id_Tabulador_SE_Cat_Puesto,tt.categoria,c.resultado,c.tipo,id_Tabulador_SE_Zona,id_Tabulador_SE_Nivel_Pago,tt.nivel_puesto,Fecha,TModelo_SE_id_Modelo_SE     
      
   select * into -- drop table      
    #cat_pue_sueldos_base_ba from #cat_pue_Ba WHERE resultado in (''07'',''7a'',''7b'',''7c'',''7d'',''7e'',''bc'') and tipo = 3;      
   select *       
   into -- drop table       
   #cat_pue_otros_ba from #cat_pue_Ba WHERE resultado not in (''07'',''7a'',''7b'',''7c'',''7d'',''7e'',''bc'')and tipo = 1;      
      
   select ROW_NUMBER() OVER(PARTITION BY id_Tabulador_SE_Cat_Puesto,resultado,id_Tabulador_SE_Zona,id_Tabulador_SE_Nivel_Pago,nivel_puesto
   ORDER BY id_Tabulador_SE_Cat_Puesto,resultado,id_Tabulador_SE_Zona,id_Tabulador_SE_Nivel_Pago,nivel_puesto,fecha ASC) AS Row#,*       
   into  -- drop table      
   #cat_pue_Ba_2       
   from (      
   select * from #cat_pue_sueldos_base_ba      
   union all       
   select * from #cat_pue_otros_ba      
   )a      
      
   select rtrim(ltrim(c1.categoria)) categoria,c1.resultado concepto,c1.id_Tabulador_SE_Zona,c1.id_Tabulador_SE_Nivel_Pago,
   case when c1.nivel_puesto ='''' then '''' else c1.nivel_puesto end as nivel_puesto,
   case when c1.tipo in (1,3) then ''P'' else '''' end tipo,dbo.fechaToAnioQuincena(c1.fecha) desde,      
   --isnull(      
   dbo.fechaToAnioQuincena(c2.Fecha-1)      
   --,''999999'' )      
   hasta,c1.Valor,c1.TModelo_SE_id_Modelo_SE      
   into --drop table       
   #Ba      
   from #cat_pue_BA_2 c1      
   left join #cat_pue_Ba_2 c2       
   on c1.id_Tabulador_SE_Cat_Puesto=c2.id_Tabulador_SE_Cat_Puesto and c1.resultado = c2.resultado and c1.Tipo=c2.tipo and c1.row#=c2.Row#-1      
   and c1.id_Tabulador_SE_Zona= c2.id_Tabulador_SE_Zona and c1.id_Tabulador_SE_Nivel_Pago=c2.id_Tabulador_SE_Nivel_Pago      
   order by c1.id_Tabulador_SE_Cat_Puesto,c1.resultado,c1.id_Tabulador_SE_Zona,c1.id_Tabulador_SE_Nivel_Pago,c1.fecha      
   --convert (varchar(10),c1.fecha, 103) desde,--isnull(dbo.fechaToAnioQuincena(c2.Fecha-1),''999999'' )hasta,      
   --isnull(convert (varchar(10),c2.Fecha-1, 103),''31/12/9999'' )hasta,c1.Valor      
         
         
--categoria       
--Nivel_sueldo       
--clave_antecedente       
--Tipo_Concepto       
--Zona_Economica       
--Vigencia_Inicial       
--Vigencia_Final       
--Importe       
--sostenimiento      
      
   --se cambia el orden y criterios de las columnas de acuerdo a lo que solicitan para el sigp    
   --select categoria,id_Tabulador_SE_Nivel_Pago Nivel_sueldo,concepto clave_antecedente, tipo Tipo_Concepto,      
   --id_Tabulador_SE_Zona Zona_Economica,      
   --convert (varchar(10),dbo.anioQuincenaToFecha(desde,0), 103) Vigencia_Inicial,      
   --isnull(convert (varchar(10),dbo.anioQuincenaToFecha(hasta,1), 103),''00/00/0000'' )Vigencia_Final,      
   --Valor Importe,''F''sostenimiento      
    --SELECT * FROM #UPN
	
	---Ocupé esta consulta para un requermiento 13/08/19
	SELECT Entidad,Modelo MD,Nivel_puesto NV,Categoria,Sostenimiento Sostenm,id_Tabulador_SE_Nivel_Pago nivel,TipoConcepto,Concepto,ConceptoFederal,Zona,Importe,min(Desde)Desde,max(Hasta)Hasta
	INTO --drop table 
	#CatPuesto
	FROM (
			select ''R20''Entidad,case when TModelo_SE_id_Modelo_SE=7 and categoria like ''%E%'' then 7 when TModelo_SE_id_Modelo_SE=7 and categoria not like ''%E%'' then 8 end Modelo,Nivel_puesto,''F'' Sostenimiento,Categoria,''P'' TipoConcepto,Concepto,''''ConceptoFederal,id_Tabulador_SE_Zona Zona,
			case when Valor!= 0 then valor else val end Importe, Desde, isnull(Hasta,''999999'')Hasta,id_Tabulador_SE_Nivel_Pago
			from (select * from #UPN where id_Tabulador_SE_Zona = 3 and id_Tabulador_SE_Nivel_Pago = 3 )u1
			left join (select categoria cat,concepto con,desde de, valor val from #UPN where id_Tabulador_SE_Zona = 3 and id_Tabulador_SE_Nivel_Pago = 1)u2
			on u1.categoria=u2.cat and u1.concepto=u2.con and u1.desde=u2.de
			-- and id_Tabulador_SE_Nivel_Pago = 3
				union all      
			select ''R20''Entidad,case when TModelo_SE_id_Modelo_SE=10 then 1 end Modelo,Nivel_puesto,''F'' Sostenimiento,Categoria,''P'' TipoConcepto,concepto,''''ConceptoEstatal,id_Tabulador_SE_Zona Zona,
			case when Valor!= 0 then valor else val end Importe, Desde, isnull(Hasta,''999999'')Hasta,id_Tabulador_SE_Nivel_Pago 			
			from (select * from #MM where id_Tabulador_SE_Zona = 3 and id_Tabulador_SE_Nivel_Pago = 3 )u1
			left join (select categoria cat,concepto con,desde de, valor val from #MM where id_Tabulador_SE_Zona = 3 and id_Tabulador_SE_Nivel_Pago = 1)u2
			on u1.categoria=u2.cat and u1.concepto=u2.con and u1.desde=u2.de 
			--order by importe
				union all 
			select ''R20''Entidad,case when TModelo_SE_id_Modelo_SE in (1,4) then 2 
										when TModelo_SE_id_Modelo_SE in (3) then 3 
										when TModelo_SE_id_Modelo_SE in (5,6) then 4 
										when TModelo_SE_id_Modelo_SE in (2,9) then 5 end Modelo,
					Nivel_puesto,''F'' Sostenimiento,Categoria,''P'' TipoConcepto,concepto,''''ConceptoEstatal,id_Tabulador_SE_Zona Zona,
					case when Valor!= 0 then valor else val end Importe, Desde, isnull(Hasta,''999999'')Hasta,id_Tabulador_SE_Nivel_Pago
			FROM (SELECT * FROM #Ba where id_Tabulador_SE_Zona = 3 and id_Tabulador_SE_Nivel_Pago = 3 )u1
			left join (select categoria cat,concepto con,desde de, valor val from #Ba where id_Tabulador_SE_Zona = 3 and id_Tabulador_SE_Nivel_Pago = 1)u2
			on u1.categoria=u2.cat and u1.concepto=u2.con and u1.desde=u2.de
			--where categoria like ''%E7811%''
					
	)A group by Entidad,Modelo,Nivel_puesto,Sostenimiento,id_Tabulador_SE_Nivel_Pago,Categoria,TipoConcepto,Concepto,ConceptoFederal,Zona,Importe

	Select * 
	into #a
	from (
	select Entidad,MD,NV,Categoria,Sostenm,nivel,TipoConcepto,Concepto,ConceptoFederal,Zona,
	ROUND(Importe,2)Importe,dbo.anioQuincenaToFecha(Desde,0) Desde, case when Hasta=''999999'' then ''00/00/0000'' end Hasta
	from #CatPuesto where categoria not like ''%E%'' and hasta = ''999999'' 	
	--order by categoria,NV,concepto
	union all 
	select Entidad,MD,suel_base.c NV,Categoria,Sostenm,nivel,TipoConcepto,Concepto,ConceptoFederal,Zona,
	ROUND(Importe,2) Importe,dbo.anioQuincenaToFecha(Desde,0) Desde, case when Hasta=''999999'' then ''00/00/0000'' end Hasta
	from #CatPuesto cat
	left join (select categoria CA,concepto C from #CatPuesto where concepto in (''07'',''7A'',''7B'',''7C'',''7D'',''7E'',''BC'',''01'') group by categoria,concepto) suel_base
	on suel_base.ca=cat.categoria 
	where categoria like ''%E%'' and hasta = ''999999'' 
	)a-- where categoria =''E9213''
	order by categoria,NV,concepto
	
	SELECT a.*,hj
	into --DROP TABLE 
	#c
	FROM (
		SELECT DISTINCT Entidad,MD,NV,Categoria,Sostenm,nivel,TipoConcepto,ConceptoFederal,Zona FROM #A WHERE MD IN (4,5) 
	)A 
	LEFT JOIN (select * from ut.[dbo].[HJ_RESP] )b ON 
	RTRIM(LTRIM(b.Categoria))=RTRIM(LTRIM(A.categoria))
	
	SELECT * 
	FROM (
		SELECT * FROM #a
	union all
		SELECT Entidad,MD,NV,Categoria,Sostenm,nivel,TipoConcepto,''38''concepto,ConceptoFederal,Zona,23.28 importe,''01/02/2019''Desde,''00/00/0000''Hasta 
		FROM #c WHERE HJ is not null and hj =''HORAS''
	union all
		SELECT Entidad,MD,NV,Categoria,Sostenm,nivel,TipoConcepto,''38''concepto,ConceptoFederal,Zona,1255 importe,''01/02/2019''Desde,''00/00/0000''Hasta 
		FROM #c WHERE HJ is not null and hj =''JORNADA'' 
	union all
		SELECT Entidad,MD,NV,Categoria,Sostenm,nivel,TipoConcepto,''HT''concepto,ConceptoFederal,Zona,3.59 importe,''01/02/1999''Desde,''00/00/0000''Hasta 
		FROM #c WHERE HJ is not null and hj =''HORAS''
	union all
		SELECT Entidad,MD,NV,Categoria,Sostenm,nivel,TipoConcepto,''HT''concepto,ConceptoFederal,Zona,143.74 importe,''01/02/1999''Desde,''00/00/0000''Hasta 
		FROM #c WHERE HJ is not null and hj =''JORNADA''
	)A 
	ORDER BY categoria,NV,concepto

	--38 -1255    (mensual) JORNADA
	--38 -  23.28           HORAS
	--HT - 143.74           JORNADA
	--HT -   3.59			HORAS

	--order by importe
	--select distinct categoria from #a order by categoria
	--select distinct concepto  from #a order by concepto
	--select * from #a WHERE CONCEPTO =''38'' order by md
	--select distinct categoria  from #CatPuesto where categoria not like ''%E%'' and nivel_puesto =''''
	--select * from TTabulador_SE_Cat_Puesto where  categoria =''S14012''	
	--exec [SIGP_Tabulador_Sueldos2Ok]    

	--select distinct codigo, modelo,Modelo_SIa from Analitico_plazaFONE where Modelo_SIa not like ''%JA04003%'' and modelo_sia !=7 order by codigo
	--select distinct codigo from Analitico_plazaFONE order by codigo
   --select RIGHT(''  '' + Ltrim(Rtrim(categoria)),7) as categoria,    
   --''F'' sostenimiento,    
   ----id_Tabulador_SE_Nivel_Pago Nivel_sueldo,    
   --nivel_puesto Nivel_sueldo,    
   --tipo Tipo_de_Concepto,    
   --'''' clave_concepto_estatal,       
   --concepto clave_concepto_federal,       
   --id_Tabulador_SE_Zona Zona_Economica,    
   -- Valor Importe_mensual,      
   --convert (varchar(10),dbo.anioQuincenaToFecha(desde,0), 103) Vigencia_Inicial,      
   --isnull(convert (varchar(10),dbo.anioQuincenaToFecha(hasta,1), 103),''00/00/0000'' )Vigencia_Final  
   ----into ut.dbo.mb_categoriasfinal    
   --from(      
   --select * from #UPN      
   --union all      
   --select * from #MM       
   --union all      
   --select * FROM #Ba       
   --)tabulador      
   --where len(concepto) = 2 and desde >= 201900      
   --order by categoria,concepto,id_Tabulador_SE_Zona,id_Tabulador_SE_Nivel_Pago,desde        

   ------esta consulta es para obtener la información de solicitada por la federacion en un plazo no mayor a 10 días XD

   -- select distinct RIGHT(''  '' + Ltrim(Rtrim(categoria)),7) as categoria,           
   --concepto clave_concepto,       
   --id_Tabulador_SE_Zona Zona_Economica,    
   -- Valor Importe_mensual,      
   --convert (varchar(10),dbo.anioQuincenaToFecha(desde,0), 103) Vigencia_Inicial,      
   --isnull(convert (varchar(10),dbo.anioQuincenaToFecha(hasta,1), 103),''00/00/0000'' )Vigencia_Final  
   --into #tabulador
   --from(      
   --select * from #UPN      
   --union all      
   --select * from #MM       
   --union all      
   --select * FROM #Ba       
   --)tabulador      
   --where len(concepto) = 2 and desde >= 201800      and desde <= 201812
   
   --select * from #tabulador order by categoria,clave_concepto,Zona_Economica,Vigencia_Inicial

END

--exec [SIGP_Tabulador_Sueldos2Ok]    

--select distinct codigo, modelo,Modelo_SIa from Analitico_plazaFONE 
--where Modelo_SIa not like ''%JA04003%'' and modelo_sia !=7 and 
--modelo_sia like ''%T05809%''
--order by codigo'
GO

GO
PRINT N'Creating [dbo].[SP_CorreccionRetrosV3]'
GO
IF OBJECT_ID(N'[dbo].[SP_CorreccionRetrosV3]', 'P') IS NULL
EXEC sp_executesql N'
create procedure [dbo].[SP_CorreccionRetrosV3]
@num_emp as int,
@num_plaza as int,
@id_ref int,
@params as CrRParamV3 readonly,
@e as varchar(max) = ''''
with encryption
as
begin	
	SET XACT_ABORT ON
	begin try
		begin tran;
			declare @id_emp int = (select Id_Emp from ieepo..empleados where NOEMPx = @num_emp)
			declare @id_plaza int = (select Id_plaza from ieepo..plazas where num_plaza = @num_plaza)
	
			if (select top 1 concepto from @params) is not null
			begin
				select row_number() over(order by concepto,upd_importe, ajuste) n, * into #params from @params
				declare @index int = 1
				declare @rows int = (select count(*) from #params)
				while @index <= @rows
				begin
					IF OBJECT_ID(N''tempdb..#tmp_rec'') IS NOT NULL Drop table #tmp_rec;
					select * into #tmp_rec from #params where n = @index;

					declare @id_concepto int = -1
					declare @concepto as varchar(max) = (select cast(concepto as varchar(max)) from #tmp_rec)
					if(substring(@concepto, 1, 1) not like ''$'')
						set @id_concepto = (select id_concepto from ieepo..conceptos where id_concepto = cast(@concepto as int))
					else
					begin
						set @id_concepto = 
							(
								select distinct a.id_concepto
								from ieepo..conceptos a join ieepo..histpagosdetalle b
								on a.id_concepto = b.id_concepto
								where
									resultado like substring(@concepto, 2, len(@concepto) - 1)
									and a.id_empresa = 2 and b.id_emp = @id_emp 
									and b.id_plaza = @id_plaza and b.id_referencia = @id_ref
									and tipo in (1,2)
							)
						if @id_concepto is null
							set @id_concepto =  (
								select id_concepto 
								from ieepo..Conceptos
								where 
									resultado like substring(@concepto, 2, len(@concepto) - 1) 
									and id_empresa = 2 and tipo in (1,2)
							)
					end
					if @id_concepto is not null and @id_concepto <> -1
					begin
						declare @ctd_periodos int
						if (select upd_importe from #tmp_rec) is not null
						begin	
							set @ctd_periodos = 
							(
								select count(*) from ieepo..histpagosdetalle 
								where 
									id_emp = @id_emp and id_plaza = @id_plaza and id_referencia = @id_ref
									and id_concepto = @id_concepto and pesos >= 0
									and id_periodopago not in (select value from dbo.fn_split((select excep from #tmp_rec),'',''))
							)

							if (@ctd_periodos > 0)
							begin
								declare @upd_pesos decimal(38,2) 
								if( (select tipo_importe from #tmp_rec) is null)
									set @upd_pesos = Round((select upd_importe from #tmp_rec ) / @ctd_periodos, 2)
								else
									set @upd_pesos = (select upd_importe from #tmp_rec )
								update ieepo..histpagosdetalle 
								set pesos = @upd_pesos
								where 
									id_emp = @id_emp and id_plaza = @id_plaza and id_referencia = @id_ref
									and id_concepto = @id_concepto and pesos >= 0
									and id_periodopago not in (select value from dbo.fn_split((select excep from #tmp_rec),'',''))
								
								if( (select tipo_importe from #tmp_rec) is null)
								begin
									declare @udiff decimal(32,2) = ( 
										(
											select sum(pesos) from ieepo..histpagosdetalle 
											where 
												id_emp = @id_emp and id_plaza = @id_plaza and id_referencia = @id_ref
												and id_concepto = @id_concepto and pesos >= 0
												and id_periodopago not in (select value from dbo.fn_split((select excep from #tmp_rec),'',''))
										) - (select upd_importe from #tmp_rec ) 
									)

									;with q1 as ( 
										select top 1 * 
										from ieepo..histpagosdetalle 
										where 
											id_emp = @id_emp and id_plaza = @id_plaza and id_referencia = @id_ref
											and id_concepto = @id_concepto and pesos >= 0
											and id_periodopago not in (select value from dbo.fn_split((select excep from #tmp_rec),'',''))
										order by id_periodopago desc
									)
									update q1 set pesos = (pesos - @udiff)
								end
							end
							else
							begin
								IF OBJECT_ID(N''tempdb..#new_records'') IS NOT NULL Drop table #new_records;
								select distinct 
									id_emp, id_periodo, @id_concepto id_concepto, 0 consecutivo, 0 horas, 
									cast (-1 as decimal(38,2)) pesos, 0 pesosexcento, id_plaza, id_referencia,
									id_periodopago, id_procesonomina, desde, hasta, 0 id_plazapago
								into #new_records
								from ieepo..histpagosdetalle 
								where 
									id_emp = @id_emp and id_plaza = @id_plaza and id_referencia = @id_ref 
									and id_periodopago not in (select value from dbo.fn_split((select excep from #tmp_rec),'',''))
						
								set @ctd_periodos = (select count(*) from #new_records)
								declare @new_pesos decimal(38,2)
								
								if( (select tipo_importe from #tmp_rec) is null)
									set @new_pesos = Round((select upd_importe from #tmp_rec ) / @ctd_periodos, 2)
								else
									set @new_pesos = (select upd_importe from #tmp_rec )

								update #new_records set pesos = @new_pesos
								
								if( (select tipo_importe from #tmp_rec) is null)
								begin
									declare @ndiff decimal(32,2) = (select sum(pesos) from #new_records) - (select upd_importe from #tmp_rec )
						
									;with q1 as (select top 1 * from #new_records)
									update q1 set pesos = (pesos - @ndiff)
								end

								insert into ieepo..histpagosdetalle (
									id_emp, id_periodo, id_concepto, consecutivo, horas, pesos, pesosexcento,
									id_plaza, id_referencia, id_periodopago, id_procesonomina, desde, hasta, 
									id_plazapago
								)
								select
									id_emp, id_periodo, id_concepto, consecutivo, horas, pesos, pesosexcento,
									id_plaza, id_referencia, id_periodopago, id_procesonomina, desde, hasta, 
									id_plazapago
								from #new_records
							end
						end

						if (select ajuste from #tmp_rec) is not null
						begin
							set @ctd_periodos = 
							(
								select count(*) from ieepo..histpagosdetalle 
								where 
									id_emp = @id_emp and id_plaza = @id_plaza and id_referencia = @id_ref
									and id_concepto = @id_concepto
									and id_periodopago not in (select value from dbo.fn_split((select excep from #tmp_rec),'',''))
							)

							if (@ctd_periodos = 0) print @id_concepto

							declare @pesos decimal(38,2)
							
							if( (select tipo_importe from #tmp_rec) is null)
								set @pesos = Round((select ajuste from #tmp_rec ) / @ctd_periodos, 2)
							else
								set @pesos = (select ajuste from #tmp_rec )

							IF OBJECT_ID(N''tempdb..#tmp_01'') IS NOT NULL Drop table #tmp_01;
							select 
								id_emp, id_periodo, id_concepto, consecutivo, horas,  @pesos pesos,  pesosexcento, 
								id_plaza, id_referencia, id_periodopago, id_procesonomina, desde, hasta, @id_plaza id_plazapago
							into #tmp_01
							from ieepo..histpagosdetalle 
							where 
								id_emp = @id_emp and id_plaza = @id_plaza and id_referencia = @id_ref
								and id_concepto = @id_concepto
								and id_periodopago not in (select value from dbo.fn_split((select excep from #tmp_rec),'',''))
					
							if( (select tipo_importe from #tmp_rec) is null)
							begin
								declare @diff decimal(32,2) = ( (select sum(pesos) from #tmp_01) - (select ajuste from #tmp_rec ) )
								;with q1 as ( select top 1 * from #tmp_01 order by id_periodopago desc)
								update q1 set pesos = (pesos - @diff)
							end

							insert into ieepo..histpagosdetalle (
								id_emp, id_periodo, id_concepto, consecutivo, horas, pesos, pesosexcento,
								id_plaza, id_referencia, id_periodopago, id_procesonomina, desde, hasta, 
								id_plazapago
							)
							select
								id_emp, id_periodo, id_concepto, consecutivo, horas, pesos, pesosexcento,
								id_plaza, id_referencia, id_periodopago, id_procesonomina, desde, hasta, 
								id_plazapago
							from #tmp_01
						end
						else
						begin
							if (select 1 from #tmp_rec where ajuste is null and upd_importe is null) = 1
							begin
								insert into ieepo..histpagosdetalle (
									id_emp, id_periodo, id_concepto, consecutivo, horas, pesos, pesosexcento,
									id_plaza, id_referencia, id_periodopago, id_procesonomina, desde, hasta, 
									id_plazapago
								)
								select 
									id_emp, id_periodo, id_concepto, consecutivo, horas,
									(cast( cast(pesos as varchar(max) ) as decimal(38,2) ) * -1) pesos,
									pesosexcento, id_plaza, id_referencia, id_periodopago,
									id_procesonomina, desde, hasta, @id_plaza id_plazapago
								from ieepo..histpagosdetalle 
								where 
									id_emp = @id_emp and id_plaza = @id_plaza and id_referencia = @id_ref
									and id_concepto = @id_concepto	
									and id_periodopago not in (select value from dbo.fn_split((select excep from #tmp_rec),'',''))
							end
						end
					end
			
					delete from #params where n = @index
					set @index += 1
				end
			end

			declare @liquido decimal(38,2) = (
				select sum ( 
					case b.tipo
						when 1 then cast( cast(pesos as varchar(max) ) as decimal(38,2) )
						when 2 then cast( cast(pesos as varchar(max) ) as decimal(38,2) ) * -1
					End
				) from ieepo..HistPagosdetalle a join ieepo..conceptos b
				on a.id_concepto = b.id_concepto
				where 
					a.id_emp = @id_emp and a.id_plaza = @id_plaza and a.id_referencia = @id_ref
					and b.tipo in (1,2)
					and a.id_concepto <> 2601
			)

			update ieepo..HistPagos set pesos = ( @liquido - ROUND(@liquido,0,1) )
			where id_emp = @id_emp and id_plaza = @id_plaza and id_referencia = @id_ref and id_concepto = 2601
	
			update ieepo..histpagosdetalle set pesos = ( @liquido - ROUND(@liquido,0,1) )
			where id_emp = @id_emp and id_plaza = @id_plaza and id_referencia = @id_ref and id_concepto = 2601

			IF (@@ERROR <> 0) 
			BEGIN
				ROLLBACK TRAN
				raiserror(''Script failed'', 20, -1)
				print ERROR_MESSAGE()
			END
		commit tran;
	end try
	begin catch
		IF @@TRANCOUNT > 0
			 ROLLBACK TRANSACTION;
		print ERROR_MESSAGE()
	end catch
end
'
GO

GO
PRINT N'Creating [dbo].[sp_Elimina_de_TrashTemporales]'
GO
IF OBJECT_ID(N'[dbo].[sp_Elimina_de_TrashTemporales]', 'P') IS NULL
EXEC sp_executesql N'
	  CREATE Procedure [dbo].[sp_Elimina_de_TrashTemporales]

As  

Declare @NomTabla  varchar (100), @IdTabla bigint,

        @DropTable varchar (200), @Type as varchar(2),

		@DeleteTable varchar (200),

        @nError    int   , @maximoid bigint

Begin
  declare @_NomTabla  varchar (100) = @NomTabla
  declare @_IdTabla bigint =  @IdTabla
  declare @_DropTable varchar (200) = @DropTable
  declare @_Type as varchar(2) = @Type
  declare @_DeleteTable varchar (200) = @DeleteTable
  declare @_nError    int = @nError
  declare @_maximoid bigint = @maximoid


 set @_nError = 0

 select @_maximoid = max(id) from TrashTemp

 update TrashTemp set marca=@_maximoid where id<=@_maximoid and (marca=0 or marca is null)

 insert into TrashTemp_Bitacora (idreferencia) values(@_maximoid) 

   Declare Cur_Tablas Cursor For

       Select nomtabla, tipo, id From TrashTemp 

       where (tipo=''T'' or tipo=''V'') and left(nomtabla,1) = ''Z'' and marca=@_maximoid 

       Order By id

   Open Cur_Tablas

   Fetch Next From Cur_Tablas Into @_NomTabla, @_Type, @_IdTabla

   While @@Fetch_Status = 0  

   Begin     

		If @_Type = ''T''

            Select @_DropTable = ''Drop Table '' +  @_NomTabla

		Else

			Select @_DropTable = ''Drop View '' +  @_NomTabla

		Select @_DeleteTable = ''Delete from TrashTemp Where id='' +  cast(@_IdTabla as varchar(15))

		Print @_DropTable

		Print @_DeleteTable

		Exec(@_DropTable)

		Exec(@_DeleteTable)

		Fetch Next From Cur_Tablas Into @_NomTabla, @_Type, @_IdTabla

   End

   Close Cur_Tablas

   Deallocate Cur_Tablas   

Fin:

Return @_nError

End

'
GO

GO
PRINT N'Creating [dbo].[SP_DivideRetros20142015]'
GO
IF OBJECT_ID(N'[dbo].[SP_DivideRetros20142015]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		Noe Ramirez
-- Create date: 23/04/2015
-- Description:	Divide los periodos de retro en 2014 y 2015 sin ajustar el conceptos 19 y 99, devido a que estos conceptos ya los ajustan en nomina

-- =============================================
CREATE PROCEDURE [dbo].[SP_DivideRetros20142015]
	-- Add the parameters for the stored procedure here
	@periodoOrigen1 int, @periodo20141 int, @periodo20151 int
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	
	
BEGIN TRY

declare @periodoOrigen int
declare @periodo2014 int
declare @periodo2015 int

set @periodoOrigen = @periodoOrigen1
set @periodo2014 = @periodo20141
set @periodo2015 = @periodo20151


-- Elimina tabla de paso

if exists (select * from sys.objects where [name] = ''xxxx_DividirRetrosPeriodos'' and [type] = ''u'')
  drop table xxxx_DividirRetrosPeriodos


-- Crea tabla de paso del periodo a procesar
select * into xxxx_DividirRetrosPeriodos from histpagosdetalle where id_periodo = @periodoOrigen

-- DIvide periodos 2014
insert into xxxx_DividirRetrosPeriodos
select h.id_emp, @periodo2014 id_periodo, h.id_concepto, h.consecutivo, h.horas, h.pesos, h.pesosexcento, h.id_plaza, h.id_referencia,
h.id_periodopago, 
h.id_procesonomina, h.desde, h.hasta, h.id_plazapago, h.C_costo
from xxxx_DividirRetrosPeriodos h 
inner join calennomina c on c.Id_Periodo = h.id_periodopago
where h.id_periodo = @periodoOrigen
and c.año <= 2014

-- Divide periodos 2015

insert into xxxx_DividirRetrosPeriodos
select h.id_emp, @periodo2015 id_periodo, h.id_concepto, h.consecutivo, h.horas, h.pesos, h.pesosexcento, h.id_plaza, h.id_referencia, 
h.id_periodopago, 
h.id_procesonomina, h.desde, h.hasta, h.id_plazapago, h.C_costo
from xxxx_DividirRetrosPeriodos h 
inner join calennomina c on c.Id_Periodo = h.id_periodopago
where h.id_periodo = @periodoOrigen
and c.año >= 2015

-- Redondeo periodos 2014


delete  from xxxx_DividirRetrosPeriodos where id_periodo = @periodo2014 and id_concepto = 2601

insert into xxxx_DividirRetrosPeriodos
select 
p.id_emp, p.id_periodo, 2601 id_concepto, 0 consecutivo,0 horas, 
(isnull(p.pesos,0) - isnull(d.pesos,0)) - cast((isnull(p.pesos,0) - isnull(d.pesos,0)) as int) pesos,0 pesosexcento, 
id_plaza, p.id_referencia, p.periodopago id_periodopago, 
2 id_procesonomina, dbo.fechatoanioquincena(c.fechaini) desde, dbo.fechatoanioquincena(c.fechaini) hasta, 0 id_plazapago, '''' C_costo
from (
select id_emp, id_plaza, id_periodo, h.id_referencia, max(id_periodopago) periodopago, sum(pesos) pesos from xxxx_DividirRetrosPeriodos h 
inner join conceptos c on c.id_concepto = h.id_concepto and c.Tipo = 1
where h.id_periodo = @periodo2014
group by id_emp, id_plaza,id_periodo, h.id_referencia
) p
full join (
select id_periodo, h.id_referencia, max(id_periodopago) periodopago, sum(pesos) pesos from xxxx_DividirRetrosPeriodos h 
inner join conceptos c on c.id_concepto = h.id_concepto and c.Tipo = 2
where h.id_periodo = @periodo2014
group by id_periodo, h.id_referencia
) d on d.id_periodo = p.id_periodo and d.id_referencia = p.id_referencia
inner join calennomina c on c.id_periodo = p.periodopago

-- Redondeo periodo 2015

delete  from xxxx_DividirRetrosPeriodos where id_periodo = @periodo2015 and id_concepto = 2601

insert into xxxx_DividirRetrosPeriodos
select 
p.id_emp, p.id_periodo, 2601 id_concepto, 0 consecutivo,0 horas, 
(isnull(p.pesos,0) - isnull(d.pesos,0)) - cast((isnull(p.pesos,0) - isnull(d.pesos,0)) as int) pesos,0 pesosexcento,
id_plaza, p.id_referencia, p.periodopago id_periodopago, 
2 id_procesonomina, dbo.fechatoanioquincena(c.fechaini) desde, dbo.fechatoanioquincena(c.fechaini) hasta, 0 id_plazapago, '''' C_costo
from (
select id_emp, id_plaza, id_periodo, h.id_referencia, max(id_periodopago) periodopago, sum(pesos) pesos from xxxx_DividirRetrosPeriodos h 
inner join conceptos c on c.id_concepto = h.id_concepto and c.Tipo = 1
where h.id_periodo = @periodo2015
group by id_emp, id_plaza,id_periodo, h.id_referencia
) p
full join (
select id_periodo, h.id_referencia, max(id_periodopago) periodopago, sum(pesos) pesos from xxxx_DividirRetrosPeriodos h 
inner join conceptos c on c.id_concepto = h.id_concepto and c.Tipo = 2
where h.id_periodo = @periodo2015
group by id_periodo, h.id_referencia
) d on d.id_periodo = p.id_periodo and d.id_referencia = p.id_referencia
inner join calennomina c on c.id_periodo = p.periodopago


-----------+

-- trasfiere a histpagos periodo 2014

delete from histpagos  where id_periodo = @periodo2014

insert into histpagos (id_emp,id_periodo,id_concepto,consecutivo,horas,pesos,id_categ, fecha,pesosexcento,c_costo,id_plaza,id_referencia,id_periodopago,
id_procesonomina,desde,hasta )
Select id_emp, id_periodo,id_concepto,max(consecutivo) as Consecutivo,sum(horas) as horas,sum(pesos) as pesos,0 id_categ, 
getdate() as fecha,sum(pesosexcento) as pesosexcento,  max(c_costo) c_costo, id_plaza,id_referencia,id_periodopago,id_procesonomina,desde,hasta 
from xxxx_DividirRetrosPeriodos where id_periodo = @periodo2014
group by id_emp,id_periodo,id_concepto,id_plaza,id_referencia,id_periodopago,id_procesonomina,desde,hasta

-- trasfiere a histpagos periodo 2015

delete from histpagos  where id_periodo = @periodo2015

insert into histpagos (id_emp,id_periodo,id_concepto,consecutivo,horas,pesos,id_categ, fecha,pesosexcento,c_costo,id_plaza,id_referencia,id_periodopago,
id_procesonomina,desde,hasta )
Select id_emp, id_periodo,id_concepto,max(consecutivo) as Consecutivo,sum(horas) as horas,sum(pesos) as pesos,0 id_categ, 
getdate() as fecha,sum(pesosexcento) as pesosexcento,  max(c_costo) c_costo, id_plaza,id_referencia,id_periodopago,id_procesonomina,desde,hasta 
from xxxx_DividirRetrosPeriodos where id_periodo in (@periodo2015)
group by id_emp,id_periodo,id_concepto,id_plaza,id_referencia,id_periodopago,id_procesonomina,desde,hasta

-- Copia a histpagosdetalle los periodos de pago

-- select * from xxxx_DividirRetrosPeriodos where id_periodo in (1637,1638)

delete from histpagosdetalle where id_periodo in (@periodo2014,@periodo2015)

insert into histpagosdetalle
select * from xxxx_DividirRetrosPeriodos where id_periodo in (@periodo2014,@periodo2015)


Select ''Proceso terminado'' Proceso

END TRY

BEGIN CATCH
  PRINT ERROR_MESSAGE()
END CATCH;



END
'
GO

GO
PRINT N'Creating [dbo].[SP_Sincronizahistpagosdetalle]'
GO
IF OBJECT_ID(N'[dbo].[SP_Sincronizahistpagosdetalle]', 'P') IS NULL
EXEC sp_executesql N'

CREATE Procedure [dbo].[SP_Sincronizahistpagosdetalle] (      
  @ID_recalculo int    -- Recalculo a generar    
)      
As        
delete from histpagosdetalle where id_periodo = 1111 and id_referencia = @ID_recalculo 

insert into histpagosdetalle (id_emp,id_periodo,id_concepto,consecutivo,horas,pesos,pesosexcento,id_plaza,id_referencia,id_periodopago,
id_procesonomina,desde,hasta,id_plazapago)
select id_emp,id_periodo,id_concepto,consecutivo,horas,pesos,pesosexcento,id_plaza,id_referencia,id_periodopago,
id_procesonomina,desde,hasta,0 as id_plazapago
from histpagos where id_periodo = 1111 and id_referencia = @ID_recalculo 
and pesos > 0 order by id_concepto , id_periodopago

insert into histpagosdetalle (id_emp,id_periodo,id_concepto,consecutivo,horas,pesos,pesosexcento,id_plaza,id_referencia,id_periodopago,
id_procesonomina,desde,hasta,id_plazapago)
select id_emp,id_periodo,id_concepto,consecutivo,horas,pesos,pesosexcento,id_plaza,id_referencia,id_periodopago,
id_procesonomina,desde,hasta,1 as id_plazapago
from histpagos where id_periodo = 1111 and id_referencia = @ID_recalculo 
and pesos < 0 order by id_concepto , id_periodopago

'
GO

GO
PRINT N'Creating [dbo].[C0NCPV3NQU1G3NTT3MP]'
GO
IF OBJECT_ID(N'[dbo].[C0NCPV3NQU1G3NTT3MP]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[C0NCPV3NQU1G3NTT3MP]
@qnafin varchar(6), @tiponom varchar(3), @idcia int
WITH EXEC AS CALLER
AS
set @idcia = case 
                when @tiponom = ''BAS'' then 2
                when @tiponom = ''UPN'' then 1
              end
select e.Id_Emp, plai.Id_plaza, e.RFC, plai.PlazaIEEPO, tt.descripcion as concepto, tt.Monto, dbo.fechaToAnioQuincena(tt.Fecha) as desde, dbo.fechaToAnioQuincena(tt.FechaFin) as hasta, estado = case when tt.Tvigencia_id_vigencia = 1 then ''Activo'' else ''Inactivo'' end, CONVERT(VARCHAR(10),tt.Movimiento,111) as Movimiento
from TTEmpleado_Plaza_Conc tt 
inner join Plazas pla on pla.Num_Plaza = tt.NoPlaza
inner join PlazaIEEPO plai on plai.id_plaza = pla.Id_plaza
inner join Empleados e on e.id_emp = tt.Id_Emp
where dbo.fechaToAnioQuincena(tt.fechafin) = @qnafin
and e.Id_Cia = @idcia and tt.Tvigencia_id_vigencia = 1
order by tt.descripcion, e.rfc'
GO

GO
PRINT N'Creating [dbo].[D3SL1PL4_3MPXQU1NB4S]'
GO
IF OBJECT_ID(N'[dbo].[D3SL1PL4_3MPXQU1NB4S]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROC [dbo].[D3SL1PL4_3MPXQU1NB4S]

@qna varchar(6)
AS

select l.id_emp, d.id_plaza, e.RFC as FILIACION, pla.PlazaIEEPO as PLAZA, l.id_nodo, v.clave as CT, dbo.fechaToAnioQuincena(l.fechaas) as DESDE, dbo.fechaToAnioQuincena(d.fechaas) as HASTA, l.fechaas as fecha_ligue, d.fechaas as fecha_desligue from (
  select pla.id_emp,pla.id_plaza,pla.id_nodo, pla.fecha as fechaAs
  from PlazaEmpleados pla
  inner join
  (
	  select id_plaza,Max(Fecha) as FechaMax 
	  from plazaEmpleados
	  where fecha < dbo.anioQuincenaToFecha(@qna, 1)
	  group by id_plaza
  ) hp
  on pla.id_plaza = hp.id_plaza and hp.FechaMax = pla.Fecha
  where pla.Id_Emp <> 0
) l
inner join (
  select pla.id_emp,pla.id_plaza,pla.id_nodo, pla.fecha as fechaAs
  from PlazaEmpleados pla
  inner join
  (
	  select id_plaza,Max(Fecha) as FechaMax 
	  from plazaEmpleados
	  where fecha = dbo.anioQuincenaToFecha(@qna, 1)
	  group by id_plaza
  ) hp
  on pla.id_plaza = hp.id_plaza and hp.FechaMax = pla.Fecha
) d on d.id_plaza = l.id_plaza
inner join Empleados e on e.id_emp = l.id_emp
inner join plazaieepo pla on pla.id_plaza = d.id_plaza
inner join VistaTablaLongitud v on v.id_nodo = l.id_nodo
inner join (
	select h.id_plaza,h.id_rel from 
	HTabulador_SE_Cat_Puesto h
	inner join
	(
		select id_plaza,Max(Fecha) as FechaMax 
		from 
		HTabulador_SE_Cat_Puesto
		where fecha < dbo.anioQuincenaToFecha(@qna, 1)
		group by id_plaza
	) htc
	on htc.id_plaza = h.id_plaza and htc.FechaMax = h.fecha
) hc on hc.id_plaza = pla.id_plaza
inner join TTabulador_SE_Cat_Puesto tt on tt.id_tabulador_se_cat_puesto = hc.id_rel
and tt.TModelo_SE_id_Modelo_SE in (1,2,3,4,5,6,8,9)'
GO

GO
PRINT N'Creating [dbo].[SP_Txpl]'
GO
IF OBJECT_ID(N'[dbo].[SP_Txpl]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		DAVID SANTIBANEZ VARGAS
-- Create date: ENERO 2013
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[SP_Txpl]
	
	@plaza varchar(21)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    select distinct id_plaza
	into #plazas
	from plazaieepo 
	where PlazaIEEPO like @plaza
	
	select ROW_NUMBER() over (order by id_plaza, fecha) row,
		   id_plaza, id_nodo, Id_Emp, Fecha
	into #hplazas_part 
	from plazaempleados 
	where id_plaza in (select id_plaza from #plazas)
	create index idx_hplzsp on #hplazas_part(id_plaza)

	select * into #hplazas from (
		select a.row, a.Id_plaza, a.Id_Emp, a.id_nodo, 
			   [dbo].[DateToQNA](a.Fecha) desde, [dbo].[DateToQNA](b.Fecha) hasta,
			   a.Fecha desde_f, b.Fecha hasta_f,
				case	
					when a.id_nodo <> b.id_nodo and a.Id_plaza = b.Id_plaza 
					then ''''
					else ''''
				end reubica
		from #hplazas_part a left join #hplazas_part b
		on a.Id_plaza = b.Id_plaza and a.row = b.row - 1
	) x 
	create index idx_hplzs on #hplazas(id_plaza)

	select Id_plaza, Fecha, Valor_IdCampo stat_pla into #hstatus 
	from hplazas 
	where Id_TipoMovPlazas = 2 and Id_plaza in (select id_plaza from #plazas)
	create index idx_hstat on #hstatus(id_plaza)

	select Id_plaza, Fecha, Valor_IdCampo mot_pla into #hmotivos
	from hplazas 
	where Id_TipoMovPlazas = 1 and Id_plaza in (select id_plaza from #plazas)
	create index idx_hmot on #hmotivos(id_plaza)

	select ROW_NUMBER() over (order by a.id_plaza, a.fecha) row, 
		   a.Id_plaza, a.fecha, 
		   Right(''00'' + Cast(stat_pla as varchar(2)), 2) stat_pla, 
		   Right(''00'' + Cast(mot_pla as varchar(2)), 2) mot_pla
	into #hmovts_part
	from #hstatus a left join #hmotivos b 
	on a.Id_plaza = b.Id_plaza  and a.Fecha = b.Fecha
	create index idx_hmpart on #hmovts_part(id_plaza)

	select a.Id_plaza, a.stat_pla, a.mot_pla, 
		   [dbo].[DateToQNA](a.Fecha) desde,
		   [dbo].[DateToQNA](DATEADD(DD, -1, b.fecha)) hasta,
		   a.Fecha desde_f, DATEADD(DD, -1, b.fecha) hasta_f
	into #hmovimientos
	from #hmovts_part a left join #hmovts_part b on a.row = b.row -1 and a.id_plaza = b.id_plaza
	insert into #hmovimientos select id_plaza, ''13'' as stat_pla, ''71'' as mot_pla, hasta as desde, hasta, hasta_f as desde_f, hasta_f 
	from #hplazas where reubica = ''R'' 
	create index idx_hmovimientos on #hmovimientos(id_plaza)

	select distinct a.id_nodo, a.clave into #ctsdsv from vistatablalongitud a join  #hplazas b on a.id_nodo=b.id_nodo
	select distinct a.id_plaza, a.plazaieepo into #plzdsv from plazaieepo a join  #hplazas b on a.id_plaza=b.id_plaza

	select  e.RFC, b.stat_pla STAT, b.mot_pla MOT, 
	case when b.mot_pla like ''[45][0-9]''
then b.desde
else a.desde 
end 
as DESDE, 
case when b.mot_pla like ''[45][0-9]''
then b.hasta
else a.hasta 
end 
as HASTA, C.clave CT, d.PlazaIEEPO PLAZA, a.Id_plaza, a.id_nodo, a.Id_Emp 
	from #hplazas a left join #hmovimientos b
	on a.Id_plaza = b.Id_plaza and b.desde between a.desde and (a.hasta )
	left join #ctsdsv c on a.id_nodo = c.id_nodo
	left join #plzdsv d on a.Id_plaza = d.Id_plaza
	left join empleados e on a.Id_Emp = e.Id_Emp
	where e.RFC is not null and e.RFC not like ''''
	order by a.Id_plaza, a.desde
		
	

END
'
GO

GO
PRINT N'Creating [dbo].[spf_validaarchivo]'
GO
IF OBJECT_ID(N'[dbo].[spf_validaarchivo]', 'P') IS NULL
EXEC sp_executesql N'--Script para generar el procedimiento almacenado spf_validaarchivo.

--Datos del servidor
--Servidor: db.ieepo.gob.mx	
--Base de datos: IEEPO

--Credenciales de acceso
--usuario: rhweb
--password:9mOh*#Yo

--1.- Creacion del procedimiento almacenado spf_validaarchivo
--Descripción: Permitirá relizar las validaciones para verificar si existe un folio con los datos proporcionados.
--Resultado esperado: El script se ejecutó correctamente.
--accion=0 Genera el reporte con todos los datos proporcionados
--accion=1 Genera el resultado de validar si hay casos con alguna inconsistencia
--accion=2 Inserta el filtro para generacion de los fups en la tabla de control e histórica
--accion=3 Validación para identificar si existe informacion para generar los fups
--accion=4 obtener total de plazas que se incluyen en los folios
--Tiempo estimado de ejecución: Menos de un minuto.
--Importancia: Alto

create procedure [dbo].[spf_validaarchivo]  
(  
@nomtabla as varchar(100),
@accion as int,
@id_usuario as int 
) 
with recompile           
as   
declare @sql1 as varchar(max)                                        
declare @sql2 as varchar(max) 
declare @select as varchar(max) 
declare @filtro as varchar(max)=''''
declare @tabla_base as varchar(max)=''''
--declare @nomtabla as varchar(max)=''ut.dbo.fups_archivo_114''
--declare @accion as int=4
--declare @id_usuario as int=114
begin 
     if(@accion=0)--realiza las acciones para validar los datos
	 begin
	 --se actualiza la informacion del archivo de carga del tipo de movimiento
     set @sql1=''update '' + @nomtabla + '' set tipo=''''0''''+tipo where len(tipo)=1''
	 exec(@sql1)
     
	 --se actualiza la informacion del archivo de carga del motivo de movimiento
     set @sql2=''update '' + @nomtabla + '' set motivo=''''0''''+motivo where ISNUMERIC(motivo)=1 and LEN(motivo)=1''	 
	 
	 set @select=''select upper(a.RFC) as RFC,upper(a.TIPO) as TIPO,upper(a.MOTIVO) AS MOTIVO,UPPER(a.PLAZA) AS PLAZA,
	 case when b.folio is null 
     then ''''No se encontró un número de folio con los datos proporcionados, por favor verifíque'''' else ''''Validación correcta.''''
     end OBSERVACIONES
     from '' + @nomtabla +'' a
     left join view_movs_procesados b on a.rfc=b.RFC and a.tipo=b.tipo and a.motivo=b.motivo 
	 and replace(a.plaza,'''' '''','''''''')=b.PlazaIEEPO''
	 exec(@select)
	 end

	 if(@accion=1)--revisar si los casos hay por lo menos uno que no se halla encontrado
	 begin 
		 set @select=''if(exists(select upper(a.RFC) as RFC,upper(a.TIPO) as TIPO,upper(a.MOTIVO) AS MOTIVO,UPPER(a.PLAZA) AS PLAZA,
			 case when b.folio is null 
			 then ''''No se encontró un número de folio con los datos proporcionados, por favor verifíque'''' else ''''Validación correcta.''''
			 end OBSERVACIONES
			 from '' + @nomtabla +'' a
			 left join view_movs_procesados b on a.rfc=b.RFC and a.tipo=b.tipo and a.motivo=b.motivo 
			 and replace(a.plaza,'''' '''','''''''')=b.PlazaIEEPO
			 where b.plazaieepo is null))
			 begin 
				  select ''''Error'''' as mensaje
			 end
         else
             begin 
		      select ''''ok'''' as mensaje
             end''
		 exec(@select)
	 end

	 if(@accion=2)--inserta el filtro para generar los documentos
	 begin
	     declare @observaciones as varchar(max)=''''
		 declare @firma_verifica as varchar(100)=''firmaverifica.png''
		 declare @firma_autoriza as varchar(100)=''firmaautoriza.png''
		 declare @plazas_activas as varchar(2)=''NO''
		 declare @cargo_verifica as varchar(100)=''DIRECCIÓN ADMINISTRATIVA''
		 declare @cargo_autoriza as varchar(100)=''OFICIALIA MAYOR''
		 declare @justificacion as varchar(100)=''GENERACIÓN POR ARCHIVO''
		 declare @verifica as varchar(100)=(select titular from fup_titulares_firmas where cargo=@cargo_verifica)                                                                        
         declare @autoriza as varchar(100)=(select titular from fup_titulares_firmas where cargo=@cargo_autoriza)  
		 declare @fecha_elaboracion as varchar(10)=(select cast(GETDATE() as date))
	     
		 set @filtro=''select distinct b.folio from ''+ @nomtabla +'' a
         inner join view_movs_procesados b on a.rfc=b.RFC and a.tipo=b.tipo and a.motivo=b.motivo 
	     and replace(a.plaza,'''' '''','''''''')=b.PlazaIEEPO''
		 
		 --se revisa si el usuario tiene registro en la tabla para generacion de un fup
			  if(exists(select filtro from fup_masivos_filtros where id_usuario=@id_usuario))
				  begin 
					   delete from fup_masivos_filtros where id_usuario=@id_usuario

					   insert into fup_masivos_filtros values (ltrim(@filtro),@fecha_elaboracion,@verifica,@cargo_verifica,@autoriza,@cargo_autoriza,@firma_verifica,
					   @firma_autoriza,@observaciones,@id_usuario,@plazas_activas)
				  end
			  else 
				  begin 
					   insert into fup_masivos_filtros values (ltrim(@filtro),@fecha_elaboracion,@verifica,@cargo_verifica,@autoriza,@cargo_autoriza,@firma_verifica,
					   @firma_autoriza,@observaciones,@id_usuario,@plazas_activas)
				  end
		  
			  --se inserta el log de los documentos que se generan masivos por usuario
			  insert into fup_masivos values (ltrim(@filtro),@fecha_elaboracion,@verifica,@cargo_verifica,@autoriza,@cargo_autoriza,@firma_verifica,
			  @firma_autoriza,@observaciones,@justificacion,@id_usuario,getdate())
	 end

	 if(@accion=3)--Validación para identificar si existe informacion para generar los fups
	 begin 
	   set @filtro= @filtro + ''
	   if((select count(*) from fup_masivos_filtros where id_usuario=''+cast(@id_usuario as varchar(10))+'')=0)
		   begin 
				select ''''No existe información para generar los formatos, por favor verifique.''''  as folio
		   end
	   else 
	       begin 
				select '''''''' as folio
		   end'' 
	   exec(@filtro)		  
	 end

	 if(@accion=4)--obtener total de plazas que se incluyen en los folios
	 begin 
	     set @tabla_base=''ut.dbo.fups_archivo_''+cast(@id_usuario as varchar(10))
	   	 
		 set @filtro=''select count(*) as folio from ''+ @tabla_base +'' a
         inner join view_movs_procesados b on a.rfc=b.RFC and a.tipo=b.tipo and a.motivo=b.motivo 
	     and replace(a.plaza,'''' '''','''''''')=b.PlazaIEEPO'' 
		 exec(@filtro)        
	 end	 
end'
GO

GO
PRINT N'Creating [dbo].[ABCissste]'
GO
IF OBJECT_ID(N'[dbo].[ABCissste]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[ABCissste]
@nomina nvarchar(30),
@quincena nvarchar(30),
@movimiento nvarchar(30)
AS
Declare @año varchar(4), @qna varchar(2), @idCia varchar(1), @qnaAnterior varchar(2),@qnaPosterior varchar(2);
IF(@nomina=''UPN'')BEGIN
	set @idCia=1;
end IF(@nomina=''BASICA'')BEGIN
	SET @idCia=2;
END IF (@nomina=''MANDOS MEDIOS'')BEGIN
	SET @idCia=3;
END

set @año = SUBSTRING(@quincena,1,4);
set @qna = SUBSTRING(@quincena,5,2);

set @qnaAnterior = (select right(''00''+convert(nvarchar(2),CAST(@qna as int)-1),2))
set @qnaPosterior = (select right(''00''+convert(nvarchar(2),CAST(@qna as int)+1),2))

Declare @sql varchar(max);

if(@movimiento = ''ALTAS'') begin 

	IF NOT EXISTS (select * from Altas_Issste where id_cia=@idCia and quincena = substring(@quincena,1,6))
	BEGIN

	set @sql = (''select distinct appaterno,apmaterno,nombre,rfc,sexo,fecha_alta,totPercep sdo_cot,tip_nom,cast(call_tra as varchar(45))call_tra,cast(num_ext as varchar(5))num_ext, ''+
			''cast(num_int as varchar(5))num_int,cast(col_tra as varchar(60))col_tra,cast(cod_post as varchar(5))cod_post,cve_ramo,pag_sub,guia,fech_rec,nss,ent_nac,totPercep sdo_sar, ''+
			''totPercep sdo_tot,plazaieepo cve_cob,curp,fech_nac,ct,informacion.id_emp,derechohabiente ''+
			''into #InformacionAltas ''+
			''from( ''+
				''select distinct e.appaterno,e.apmaterno,e.nombre,e.rfc,e.sexo,convert(nvarchar(4),year(fdd.fechaini))+right(''''00''''+convert(nvarchar(2),MONTH(fdd.fechaini)),2)+right(''''00''''+convert(nvarchar(2),day(fdd.fechaini)),2) fecha_alta, ''+
				''case when pi.PlazaIEEPO like ''''%AA%'''' Or plazahija.Id_plaza IS not null then 30 end tip_nom,''''''''call_tra,''''''''num_ext,''''''''num_int,''''''''col_tra,''''''''cod_post,''''11920''''cve_ramo,''''02000''''pag_sub,''''''''guia,''''''''fech_rec,''''''''nss,SUBSTRING(e.curp,12,2) ent_nac, ''+
				''e.curp,convert(nvarchar(4),year(e.rfcFecha))+right(''''00''''+convert(nvarchar(2),MONTH(e.rfcFecha)),2)+right(''''00''''+convert(nvarchar(2),day(e.rfcFecha)),2) fech_nac,''''''''motivo, ''+
				''e.ID_EMP,''''''''cheque, fid.Centro_Trabajo ct,''''''''nombrecompleto,''''''+@año+@qna+'''''' Quincena,pi.PlazaIEEPO,pi.Id_plaza,fdd.Id_Detalle,plazahija.Id_plaza as plazaH,case when plazahija.Id_plaza IS null then pi.Id_plaza else plazahija.Id_plaza end plazaPago ''+
				''from ''+
				''(select*from fup_documentos where Id_Estatus=2)fd ''+
				''join FUP_Informacion_Documentos fid on fid.Id_Documento=fd.Id_Documento ''+
				''join FUP_Documento_Detalle fdd on fdd.Id_Documento=fid.Id_Documento ''+
				''join Recalculo_Calculo rc on rc.Id_Detalle=fdd.Id_Detalle ''+
				''join (select*from FUP_MotivoMovimiento where id_motivomovimiento in (1,2,5))fmm on fmm.Id_MotivoMovimiento=fdd.Id_MotivoMovimiento ''+
				''join CalenNomina cn on cn.Id_Periodo=fid.Id_Periodo ''+
				''join Empleados e on fd.id_emp=e.id_emp ''+
				''join PlazaIEEPO pi on pi.id_plaza=fdd.id_plaza ''+
				''left join (select fmmc.Descripcion,valor,pi.Id_plaza,pi.PlazaIEEPO,fvi.Id_Documento as id_detalle,fdd.Id_Plaza as plazapadre from Tformulas fmmc ''+
							''inner join FUP_DetalleCampos fdc on fmmc.IdFormula=fdc.Id_Formula inner join FUP_ValorInteger fvi on fdc.Id_Valor=fvi.Id_Valor ''+
							''inner join FUP_Documento_Detalle fdd on fdd.Id_Detalle=fvi.Id_Documento inner join plazaieepo pi on fvi.Valor=pi.Id_plaza ''+
							''where fmmc.Descripcion like ''''%id_plaza%'''' and fdc.Id_MotivoMovimiento=2) plazahija on plazahija.plazapadre=fdd.Id_Plaza and plazahija.id_detalle=fdd.Id_Detalle ''+
				''where cn.Año=''+@año+'' and cn.Numero=''+@qna+'' and cn.Id_cia=''+@idCia+'' ''+
				'')informacion ''+
				''left join( ''+
						''select Id_Emp,id_plaza,SUM(totPercep)totPercep,max(derechohabiente)derechohabiente  from ( ''+
						''select Id_Emp,id_plaza,resultado,case when resultado not in (''''02'''',''''04'''') then SUM(pesos)else 0 end totPercep,case when resultado in (''''02'''',''''04'''') then 1 else 0 end derechohabiente,anterior ''+
						''from(select Id_Emp,id_plaza,Pesos Pesos,Desde,Id_Periodo,id_concepto from histpagos where desde=''+@año+@qna+'' and hasta = ''+@año+@qna+'' union  select Id_Emp,id_plaza,Pesos pesos,Desde,Id_Periodo,id_concepto from nom_histpagos where desde=''+@año+@qna+'' and hasta = ''+@año+@qna+'') nh ''+
						''join(select*from conceptos where tipo in (1,2) and resultado in(''''07'''',''''DF'''',''''DR'''',''''A1'''',''''A2'''',''''A3'''',''''A4'''',''''A5'''',''''RA'''',''''MA'''',''''DO'''',''''I2'''',''''I4'''',''''FC'''',''''Q1'''',''''Q2'''',''''Q3'''',''''Q4'''',''''Q5'''',''''T1'''',''''T2'''',''''T3'''',''''L1'''',''''L2'''',''''L3'''',''''LT'''',''''7A'''',''''7B'''',''''7C'''',''''7D'''',''''7E'''',''''BC'''',''''DR'''',''''AA'''',''''AB'''',''''AC'''',''''AD'''',''''AE'''',''''AF'''',''''AG'''',''''AH'''',''''AI'''',''''AJ'''',''''AK'''',''''AL'''',''''AM'''',''''AN'''',''''AO'''',''''AP'''',''''AQ'''',''''AR'''',''''AS'''',''''AT'''',''''AU'''',''''AV'''',''''AW'''',''''AX'''',''''AY'''',''''AZ'''',''''I8'''',''''I9'''',''''DR'''',''''DF'''',''''QA'''',''''QB'''',''''QC'''',''''QD'''',''''QE'''',''''QF'''',''''QG'''',''''QH'''',''''QI'''',''''QJ'''',''''QK'''',''''QL'''',''''QM'''',''''QN'''',''''QO'''',''''QP'''',''''QQ'''',''''QR'''',''''QS'''',''''QT'''',''''QU'''',''''QV'''',''''QW'''',''''QX'''',''''QY'''',''''QZ'''',''''PA'''',''''PB'''',''''PC'''',''''PD'''',''''PE'''',''''PF'''',''''PG'''',''''PH'''',''''PI'''',''''PJ'''',''''PK'''',''''PL'''',''''PM'''',''''PN'''',''''PO'''',''''PP'''',''''PQ'''',''''PR'''',''''PS'''',''''PT'''',''''PU'''',''''PV'''',''''PW'''',''''PX'''',''''PY'''',''''PZ'''',''''02'''',''''04'''') ) c on c.id_concepto=nh.id_concepto ''+
						''join CalenNomina cn on cn.Id_Periodo=nh.Id_Periodo and Parcial not in (30,31,32,33,34,35,36,37,38,39) ''+
						''left join ( ''+
						''select distinct Id_Emp id_emp_qa,1 anterior from histpagos h join conceptos c on c.id_concepto =h.id_concepto join CalenNomina cn on cn.Id_Periodo = h.Id_Periodo where Año=''+@año+'' and Numero = ''+ @qnaAnterior +'' and resultado in (''''02'''',''''04'''') ''+
						''union  select distinct Id_Emp id_emp_qa,1 anterior from nom_histpagos nh join conceptos c on c.id_concepto =nh.id_concepto join CalenNomina cn on cn.Id_Periodo = nh.Id_Periodo where Año=''+@año+'' and Numero = ''+ @qnaAnterior +'' and resultado in (''''02'''',''''04'''') ''+
						'') ''+
						''qna_anterior on nh.Id_Emp=qna_anterior.id_emp_qa ''+
						''where cn.Año=''+@año+'' and Numero=''+@qna+'' ''+
						'' group by Id_Emp,id_plaza,resultado,anterior ''+
						'') a where anterior is null group by Id_Emp,id_plaza ''+
			'')si on informacion.Id_Emp=si.Id_Emp and informacion.plazaPago=si.id_plaza;''+
			''select appaterno,apmaterno,nombre,inf_tot.rfc,sexo,fecha_alta,sum(sdo_cot)sdo_cot,tip_nom,''+
			''call_tra,num_ext,num_int,col_tra,cod_post,cve_ramo,pag_sub,guia,fech_rec,nss,ent_nac,''+
			''sum(sdo_sar)sdo_sar,sum(sdo_tot)sdo_tot,ClaveCobro.cve_cob,inf_tot.curp,fech_nac,ClaveCobro.ct,id_emp,derechohabiente ''+
			''into #informacionPlaza ''+
			''from #InformacionAltas inf_tot ''+
			''join (''+
				''select plazaMayorValor.rfc,plazaMayorValor.curp,plazaMayorValor.cve_cob,plazaMayorValor.ct ''+
				''from #InformacionAltas plazaMayorValor join (select rfc,curp,MAX(sdo_cot)sdo_cot from #InformacionAltas group by rfc,curp) sueldo_max ''+
				''on plazaMayorValor.sdo_cot=sueldo_max.sdo_cot and plazaMayorValor.rfc=sueldo_max.rfc ''+
			'')ClaveCobro on inf_tot.rfc=ClaveCobro.rfc and inf_tot.curp=ClaveCobro.curp ''+
			''group by appaterno,apmaterno,nombre,inf_tot.rfc,sexo,fecha_alta,tip_nom,call_tra,num_ext,num_int, ''+
			''col_tra,cod_post,cve_ramo,pag_sub,guia,fech_rec,nss,ent_nac,ClaveCobro.cve_cob,inf_tot.curp,fech_nac,ClaveCobro.ct,id_emp,derechohabiente; ''+
			''update #informacionPlaza set tip_nom=10 where tip_nom is null and cve_cob not like ''''%AA%'''';''+
			''update #informacionPlaza set tip_nom=20 where tip_nom is null and cve_cob like ''''%AA%'''';''+
			''UPDATE ip set ''+
			''ip.CALL_TRA = left(ltrim(rtrim(ctd.calle)),45),''+
			''ip.NUM_EXT=left(ltrim(rtrim(ctd.Numero_exterior)),5),''+
			''ip.NUM_INT=left(ltrim(rtrim(ctd.Numero_interior)),5),''+
			''ip.COL_TRA=left(ltrim(rtrim(ctd.colonia)),60),''+
			''ip.COD_POST = Left(LTrim(RTrim(ctd.Codigo_postal)), 5)''+
			''from #informacionPlaza ip INNER join [172.16.77.155].DIRECCIONESISSSTE.DBO.CTS_Datos ctd on LTRIM(RTRIM(ip.ct))=LTRIM(RTRIM(ctd.ct));''+
			
			''Update ip set ip.sdo_sar=totPercep,ip.sdo_tot=totPercep,ip.sdo_cot=totPercep ''+
			''from #informacionPlaza ip ''+
			''left join(select Id_Emp,SUM(totPercep)totPercep  ''+
			 	''from(select Id_Emp,id_plaza,resultado,case when resultado not in (''''02'''',''''04'''') then SUM(pesos)else 0 end totPercep ''+
					''from(select Id_Emp,id_plaza,Pesos Pesos,Desde,hasta,Id_Periodo,id_concepto from histpagos where desde=''+@año+@qnaPosterior+'' union select Id_Emp,id_plaza,Pesos Pesos,Desde,hasta,Id_Periodo,id_concepto from nom_histpagos where desde=''+@año+@qnaPosterior+'' ) nh ''+
								''join (select * from conceptos where tipo in (1,2) and resultado in(''''07'''',''''DF'''',''''DR'''',''''A1'''',''''A2'''',''''A3'''',''''A4'''',''''A5'''',''''RA'''',''''MA'''',''''DO'''',''''I2'''',''''I4'''',''''FC'''',''''Q1'''',''''Q2'''',''''Q3'''',''''Q4'''',''''Q5'''',''''T1'''',''''T2'''',''''T3'''',''''L1'''',''''L2'''',''''L3'''',''''LT'''',''''7A'''',''''7B'''',''''7C'''',''''7D'''',''''7E'''',''''BC'''',''''DR'''',''''AA'''',''''AB'''',''''AC'''',''''AD'''',''''AE'''',''''AF'''',''''AG'''',''''AH'''',''''AI'''',''''AJ'''',''''AK'''',''''AL'''',''''AM'''',''''AN'''',''''AO'''',''''AP'''',''''AQ'''',''''AR'''',''''AS'''',''''AT'''',''''AU'''',''''AV'''',''''AW'''',''''AX'''',''''AY'''',''''AZ'''',''''I8'''',''''I9'''',''''DR'''',''''DF'''',''''QA'''',''''QB'''',''''QC'''',''''QD'''',''''QE'''',''''QF'''',''''QG'''',''''QH'''',''''QI'''',''''QJ'''',''''QK'''',''''QL'''',''''QM'''',''''QN'''',''''QO'''',''''QP'''',''''QQ'''',''''QR'''',''''QS'''',''''QT'''',''''QU'''',''''QV'''',''''QW'''',''''QX'''',''''QY'''',''''QZ'''',''''PA'''',''''PB'''',''''PC'''',''''PD'''',''''PE'''',''''PF'''',''''PG'''',''''PH'''',''''PI'''',''''PJ'''',''''PK'''',''''PL'''',''''PM'''',''''PN'''',''''PO'''',''''PP'''',''''PQ'''',''''PR'''',''''PS'''',''''PT'''',''''PU'''',''''PV'''',''''PW'''',''''PX'''',''''PY'''',''''PZ'''',''''02'''',''''04'''') ) c on c.id_concepto=nh.id_concepto ''+
								''join CalenNomina cn on cn.Id_Periodo=nh.Id_Periodo and Parcial not in (30,31,32,33,34,35,36,37,38,39) ''+
								''where cn.Año= ''+@año+'' and Numero = ''+@qnaPosterior+'' ''+
								''group by Id_Emp,id_plaza,resultado ''+
						'')a group by Id_Emp,id_plaza ''+
			'')nuevoSuelto on nuevoSuelto.Id_Emp=ip.id_emp where sdo_cot <=0 or sdo_cot is null;''+
			--''select ''''''''chek,ROW_NUMBER() OVER(ORDER BY rfc DESC) AS id,appaterno,apmaterno,nombre,rfc,sexo,fecha_alta,sdo_cot*200 sdo_cot,tip_nom,call_tra,num_ext,num_int,col_tra,cod_post,cve_ramo,pag_sub,guia,fech_rec,nss,ent_nac,sdo_sar*200 sdo_sar,sdo_tot*200 sdo_tot,cve_cob,curp,fech_nac,ct,id_emp,derechohabiente,''+@año+@qna+'' quincena,''''NO'''' enviado,getdate() fechaGeneracion,''+@idCia+'' id_cia into abcIssste201504 from #informacionPlaza where sdo_cot is not null or derechohabiente =1 order by rfc;'')
			''insert into Altas_Issste select ''''''''chek,ROW_NUMBER() OVER(ORDER BY rfc DESC) AS id,appaterno,apmaterno,nombre,rfc,sexo,fecha_alta,sdo_cot*200 sdo_cot,tip_nom,call_tra,num_ext,num_int,col_tra,cod_post,cve_ramo,pag_sub,guia,fech_rec,nss,ent_nac,sdo_sar*200 sdo_sar,sdo_tot*200 sdo_tot,cve_cob,curp,fech_nac,ct,id_emp,derechohabiente,''+@año+@qna+'' quincena,''''NO'''' enviado,getdate() fechaGeneracion,''+@idCia+'' id_cia from #informacionPlaza where sdo_cot is not null or derechohabiente=1 order by rfc;'');
			--select @sql
			exec(@sql)
			print ''Información agregada''
			select chek,id,appaterno,apmaterno,nombre,rfc,sexo,fecha_alta,sdo_cot/100 sdo_cot,tip_nom,call_tra,num_ext,num_int,col_tra,cod_post,cve_ramo,pag_sub,guia,fech_rec,nss,ent_nac,sdo_sar/100 sdo_sar,sdo_tot/100 sdo_tot,cve_cob,curp,fech_nac,ct,id_emp,derechohabiente,quincena,enviado,fechaGeneracion,id_cia from Altas_Issste where id_cia=@idCia and quincena = substring(@quincena,1,6) order by rfc
		END
		ELSE IF EXISTS (select * from Altas_Issste where id_cia=@idCia and quincena = substring(@quincena,1,6))
		BEGIN
			select chek,id,appaterno,apmaterno,nombre,rfc,sexo,fecha_alta,sdo_cot/100 sdo_cot,tip_nom,call_tra,num_ext,num_int,col_tra,cod_post,cve_ramo,pag_sub,guia,fech_rec,nss,ent_nac,sdo_sar/100 sdo_sar,sdo_tot/100 sdo_tot,cve_cob,curp,fech_nac,ct,id_emp,derechohabiente,quincena,enviado,fechaGeneracion,id_cia from Altas_Issste where id_cia=@idCia and quincena = substring(@quincena,1,6) order by rfc
		END
	end else 
	if(@movimiento = ''BAJAS'') begin 
	
		IF NOT EXISTS (select * from ISSSTE_BAJAS where id_cia=@idCia and quincena = substring(@quincena,1,6))
		BEGIN
	
			set @sql= (''INSERT INTO ISSSTE_BAJAS ''+
						''SELECT ''''''''chek,ROW_NUMBER() OVER(ORDER BY rfc DESC) AS id,*,''+@quincena+'' quincena,''''NO''''enviado, getdate() fechaGeneracion ,''+@idCia+'' id_cia FROM (''+
						''select distinct e.appaterno,e.apmaterno,e.nombre,e.rfc,fdd.fechafin,''''11920''''cve_ramo,''''02000''''pag_sub,''''''''guia,''''''''fech_rec,''''''''nss,e.curp,e.id_emp ''+--,fmm.Descripcion
						''from ''+
						''(select * from fup_documentos where Id_Estatus =2 ) fd ''+
						''join FUP_Informacion_Documentos fid on fid.Id_Documento=fd.Id_Documento ''+
						''join FUP_Documento_Detalle fdd on fdd.Id_Documento=fid.Id_Documento ''+
						''join (select * from FUP_MotivoMovimiento where Id_MotivoMovimiento in (14,15,16,17,306,307,308) )fmm on fmm.Id_MotivoMovimiento=fdd.Id_MotivoMovimiento ''+
						''join CalenNomina cn on cn.Id_Periodo = fid.Id_Periodo ''+
						''join Empleados e on fd.id_emp=e.id_emp ''+
						''join PlazaIEEPO pi on pi.id_plaza = fdd.id_plaza ''+
						''where cn.Año = ''''''+@año+'''''' and cn.Numero = ''''''+@qna+'''''' and cn.Id_cia = ''+@idCia+'' ''+
						'') BAJAS'');
			--select @sql
			exec(@sql);
			print ''Información agregada''
			select * from ISSSTE_BAJAS where id_cia=@idCia and quincena = substring(@quincena,1,6)
		END
		ELSE IF EXISTS (select * from ISSSTE_BAJAS where id_cia=@idCia and quincena = substring(@quincena,1,6))
		BEGIN
			select * from ISSSTE_BAJAS where id_cia=@idCia and quincena = substring(@quincena,1,6)
		END
	end
'
GO

GO
PRINT N'Creating [dbo].[SIGP_AntiguedadesEmpleado2]'
GO
IF OBJECT_ID(N'[dbo].[SIGP_AntiguedadesEmpleado2]', 'P') IS NULL
EXEC sp_executesql N'	  
CREATE PROCEDURE [dbo].[SIGP_AntiguedadesEmpleado2]
WITH EXEC AS CALLER  AS      
BEGIN     


	-- 150586
	select e.id_emp into #emp 
	from empleados e 
	inner join HCia on e.id_emp = HCia.id_emp
	inner join (
		select id_emp,max(fecha) fecha from HCia where movimiento < ''20190101'' group by id_emp
	)as b on Hcia.id_emp = b.id_emp  and HCia.Fecha = b.fecha
	where  e.id_emp > 0 and e.rfc not like ''%XX%''


	--------------- Obtengo Fecha de alta al Gob_Fed
	select e.Id_Emp, e.RFC, e.CURP,case when fechagfed.Fecha_Alta_Gob_Fed is null then '''' else 
	convert(varchar,fechagfed.Fecha_Alta_Gob_Fed,103) end as Fecha_Ingreso_Gob_Fed into #fechas1
	from empleados e 
	inner join #emp on e.Id_Emp = #emp.Id_Emp
	left join (
		-- 146131
		select hgfed.* from HFecha_Alta_Gob_Fed hgfed 
		inner join (    
			select id_emp,max(fecha) fecha from HFecha_Alta_Gob_Fed where fecha < ''20190101'' group by id_emp    
		)gfed on hgfed.id_emp = gfed.id_emp and hgfed.fecha = gfed.fecha 
	)fechagfed on e.id_emp = fechagfed.id_emp
	------------------------------------------------


	select hprima.*  into #prima
	from HFecha_Prima_Antiguedad hprima
	inner join (    
		select id_emp,max(fecha) fecha from HFecha_Prima_Antiguedad where fecha < ''20190101'' group by id_emp    
	)prima on hprima.id_emp = prima.id_emp and hprima.fecha = prima.fecha 

	-- 995
	select prima1.* into #hprima
	from #prima prima1
	inner join (
		select id_emp, max(id_user) us from #prima group by id_emp
	)prima2 on prima1.id_emp = prima2.id_emp and prima1.id_user = prima2.us


	-- 149441
	select hsep.* into #sep
	from HFecha_Alta_SEP hsep
	inner join (    
		select id_emp,max(fecha) fecha from HFecha_Alta_SEP where fecha < ''20190101'' group by id_emp    
	)sep on hsep.id_emp = sep.id_emp and hsep.fecha = sep.fecha 


	select a.id_emp
	,case 
		when (b.Fecha_Prima_Antiguedad is null) then a.Fecha_Alta_SEP 
		else case when a.Fecha_Alta_SEP > b.Fecha_Prima_Antiguedad then a.Fecha_Alta_SEP else b.Fecha_Prima_Antiguedad end 
	end as Fecha_Alta_SEP into #fechas2
	from #sep a
	left join #hprima b on a.id_emp = b.id_emp


	-----------------------Obtengo fecha de alta a la SEP y AEL
	select a.*,case when b.Fecha_Alta_SEP is null then '''' else convert(varchar,b.Fecha_Alta_SEP,103) end as Fecha_Ingreso_SEP
	,case when b.Fecha_Alta_SEP is null then '''' else convert(varchar,b.Fecha_Alta_SEP,103) end as Fecha_Ingreso_AEL
	,'''' as Fecha_Ingreso_Modelo, '''' as Fecha_Ingreso_Subsistema, '''' as Fecha_Ingreso_Subsubsistema
	from #fechas1 a
	left join #fechas2 b on a.id_emp = b.id_emp
	order by a.rfc
	----------------------------------------------------------

	-- select * from #emp			drop table #emp
	-- select * from #fechas1		drop table #fechas1
	-- select * from #prima			drop table #prima
	-- select * from #hprima		drop table #hprima
	-- select * from #sep			drop table #sep
	-- select * from #fechas2		drop table #fechas2
 
END'
GO

GO
PRINT N'Creating [dbo].[spf_Baja_Vacante_honorarios]'
GO
IF OBJECT_ID(N'[dbo].[spf_Baja_Vacante_honorarios]', 'P') IS NULL
EXEC sp_executesql N'CREATE procedure [dbo].[spf_Baja_Vacante_honorarios]                             
(                                
  @id_plaza as int,                                                     
  @id_documento  as int,                                 
  @id_usuario as int,        
  @accion as bit                                
) 
as                                
Begin 
     declare @id_plaza_loc as int=@id_plaza
     declare @id_documento_loc as int=@id_documento
     declare @id_usuario_loc as int=@id_usuario
     declare @accion_loc as bit=@accion
                                   
     declare @fechavencimiento as datetime        
     declare @hasta as datetime        
     declare @fechafin as datetime        
     declare @desde as datetime        
     declare @procede as int        
     declare @hastaqna as varchar(6)        
     declare @qna as varchar(2)        
     declare @año as varchar (4)        
     declare @desdeqna as varchar (6)             
--   declare @accion as int =1        
     set @fechavencimiento=(select cast(fechavencimiento as DATE) from plazas where id_plaza=@id_plaza_loc)             
     set @hasta=(select distinct fechafin from FUP_Documento_Detalle where Id_Documento=@id_documento_loc and Id_Plaza=@id_plaza_loc        
     and Id_MotivoMovimiento in (103,117,309,310))        
     set @fechafin=(select dbo.anioQuincenaToFecha((select dbo.fechaToAnioQuincena(@hasta)),1))        
     set @hastaqna=(select dbo.fechaToAnioQuincena(@hasta))        
     set @qna=(select SUBSTRING(@hastaqna,5,2))        
     set @año=(select SUBSTRING(@hastaqna,1,4))        
     if (@qna=24)        
     begin        
     set @año=@año+1        
     set @qna=''01''        
     set @desdeqna=@año+@qna        
     set @desde=(select dbo.anioQuincenaToFecha(@desdeqna,0))        
     end        
     else        
     begin         
     set @desde=(select dbo.anioQuincenaToFecha((select dbo.fechaToAnioQuincena(@fechafin))+1,0))        
     end        
             
             
if @accion_loc = 0                                 
    begin           
   if(@hasta=@fechavencimiento)        
         begin         
      --print ''Inserta solo baja''        
      if (exists(select * from hplazas where Id_plaza=@id_plaza_loc and Id_TipoMovPlazas=1 and Fecha=@fechafin))        
        begin        
           set @procede=0        
        end        
      else        
        begin        
         insert into hplazas (Id_plaza,Fecha,Id_TipoMovPlazas,Valor_IdCampo,Id_User,Movimiento,esHistoria)         
                 VALUES (@id_plaza_loc,@fechafin,1,20,@id_usuario_loc,(SELECT CONVERT (date, SYSDATETIME())),0)        
        end        
         if (exists(select * from hplazas where Id_plaza=@id_plaza_loc and Id_TipoMovPlazas=2 and Fecha=@fechafin))        
             
        begin        
            set @procede=0        
        end        
         else        
        begin        
         insert into hplazas (Id_plaza,Fecha,Id_TipoMovPlazas,Valor_IdCampo,Id_User,Movimiento,esHistoria)         
                 VALUES (@id_plaza_loc,@fechafin,2,3,@id_usuario_loc,(SELECT CONVERT (date, SYSDATETIME())),0)        
        end             
            end          
      else        
            if(@hasta<@fechavencimiento)        
      begin        
            ---- Inserta los registros de baja        
            if (exists(select * from hplazas where Id_plaza=@id_plaza_loc and Id_TipoMovPlazas=1 and Fecha=@fechafin))        
        begin        
           set @procede=0        
        end        
      else        
        begin        
         insert into hplazas (Id_plaza,Fecha,Id_TipoMovPlazas,Valor_IdCampo,Id_User,Movimiento,esHistoria)         
                 VALUES (@id_plaza_loc,@fechafin,1,20,@id_usuario_loc,(SELECT CONVERT (date, SYSDATETIME())),0)        
        end        
         if (exists(select * from hplazas where Id_plaza=@id_plaza_loc and Id_TipoMovPlazas=2  and Fecha=@fechafin))        
        begin        
           set @procede=0        
        end        
         else        
        begin        
         insert into hplazas (Id_plaza,Fecha,Id_TipoMovPlazas,Valor_IdCampo,Id_User,Movimiento,esHistoria)         
                 VALUES (@id_plaza_loc,@fechafin,2,3,@id_usuario_loc,(SELECT CONVERT (date, SYSDATETIME())),0)        
        end        
                 
         --- Inserta los registros de la vacante        
                 
         if (exists(select * from hplazas where Id_plaza=@id_plaza_loc and Id_TipoMovPlazas=1 and Fecha=@desde))        
        begin        
           set @procede=0        
        end        
      else        
        begin        
         insert into hplazas (Id_plaza,Fecha,Id_TipoMovPlazas,Valor_IdCampo,Id_User,Movimiento,esHistoria)     
                            VALUES (@id_plaza_loc,@desde,1,20,@id_usuario_loc,(SELECT CONVERT (date, SYSDATETIME())),0)        
        end        
         if (exists(select * from hplazas where Id_plaza=@id_plaza_loc and Id_TipoMovPlazas=2 and Fecha=@desde))        
        begin        
           set @procede=0        
        end        
         else        
        begin        
         insert into hplazas (Id_plaza,Fecha,Id_TipoMovPlazas,Valor_IdCampo,Id_User,Movimiento,esHistoria)         
                 VALUES (@id_plaza_loc,@desde,2,2,@id_usuario_loc,(SELECT CONVERT (date, SYSDATETIME())),0)        
        end        
                  
      end        
                                               
    end                                       
                                 
else -- Reversa a movimiento                      
                    
    begin                    
    declare @fechaven as datetime        
    declare @hasta_date as datetime        
    declare @fechafinal as datetime        
    declare @desdefecha as datetime        
    declare @proc as int        
    declare @hastaqnaa as varchar(6)        
             declare @qnaa as varchar(2)        
             declare @añoo as varchar (4)        
             declare @desdeqnaa as varchar (6)        
    set @fechaven=(select cast(fechavencimiento as DATE) from plazas where id_plaza=@id_plaza_loc)             
    set @hasta_date=(select distinct fechafin from FUP_Documento_Detalle where Id_Documento=@id_documento_loc and Id_Plaza=@id_plaza_loc        
    and Id_MotivoMovimiento in (103,117,309,310))        
    set @fechafinal=(select dbo.anioQuincenaToFecha((select dbo.fechaToAnioQuincena(@hasta_date)),1))        
            
    set @hastaqnaa=(select dbo.fechaToAnioQuincena(@hasta_date))        
    set @qnaa=(select SUBSTRING(@hastaqna,5,2))        
    set @añoo=(select SUBSTRING(@hastaqna,1,4))        
    if (@qnaa=24)        
    begin        
    set @añoo=@añoo+1        
    set @qnaa=''01''        
    set @desdeqnaa=@añoo+@qnaa        
    set @desdefecha=(select dbo.anioQuincenaToFecha(@desdeqnaa,0))        
    end        
    else        
    begin         
       set @desdefecha=(select dbo.anioQuincenaToFecha((select dbo.fechaToAnioQuincena(@fechafinal))+1,0))        
    end        
            
            
    delete hplazas where Id_plaza=@id_plaza_loc and Id_TipoMovPlazas=1 and Valor_IdCampo=20 and Fecha=@fechafinal        
       delete hplazas where Id_plaza=@id_plaza_loc and Id_TipoMovPlazas=2 and Valor_IdCampo=3 and Fecha=@fechafinal        
             delete hplazas where Id_plaza=@id_plaza_loc and Id_TipoMovPlazas=1 and Valor_IdCampo=20 and Fecha=@desdefecha        
       delete hplazas where Id_plaza=@id_plaza_loc and Id_TipoMovPlazas=2 and Valor_IdCampo=2 and Fecha=@desdefecha        
    end                                
                     
end  '
GO

GO
PRINT N'Creating [dbo].[DSV_SacaHistPagosPerc_14]'
GO
IF OBJECT_ID(N'[dbo].[DSV_SacaHistPagosPerc_14]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		David Santibañez Vargas
-- Create date: 22/01/2014
-- Description:	valida las referencias
-- =============================================
CREATE PROCEDURE [dbo].[DSV_SacaHistPagosPerc_14]      

(      
@idplaza int,      
@Idemp int,      
@idperiodo int,
@refere int     
)  
with encryption
AS
SET NOCOUNT ON      
BEGIN  
   


declare @PDtbltmp table (
Id_Emp int, 
Id_Periodo int, 
id_concepto int, 
Consecutivo int, 
Horas float, 
Pesos float, 
Fecha smalldatetime, 
CC varchar(10), 
PesosExcento float, 
id_plaza int, 
Id_Referencia int,
id_periodoPago int, 
Id_ProcesoNomina int, 
Desde varchar(6), 
Hasta varchar(6), 
esHistoria bit, 
Fix bit)
declare @danio int = (select año from calennomina where Id_Periodo = @idperiodo )

--if @DAnio  = 2012 
--insert into @PDtbltmp 
  --select *  from [dep].dbo.Nom_histpagos_2012 where @idplaza  = id_plaza and @Idemp = id_emp 
--if @Danio = 2013
--insert into @PDtbltmp 
  --select *  from [dep].dbo.Nom_histpagos_2013 where @idplaza = id_plaza and @Idemp = id_emp 

insert into @PDtbltmp 
  select *  from Nom_histpagos where @idplaza = id_plaza and @Idemp = id_emp 

-- creacion de variable tipo tabla


 SELECT      
   a.id_concepto, 
   case   when a.id_concepto=  1328
     then b.c_costo
   else a.Resultado 
   end
   as Clave,convert(varchar(12), cast(b.Pesos as money), 1) AS Importe,a.descripcion, b.Id_Emp,Cast(f.año as varchar(4)) + ''''+Right(''00''+Cast(f.numero as varchar(2)),2) as Periodo, b.id_plaza,Desde+'' ''+Hasta as Desde_Hasta      
      
 FROM      
   Conceptos a       
   INNER JOIN ConceptoRelEmpresa c      
   ON a.id_concepto = c.id_concepto       
   INNER JOIN      
            (SELECT     Id_Emp, id_concepto, Id_Periodo, id_plaza, Pesos,Desde,Hasta, isnull(Id_Referencia,0)  Id_Referencia, c_costo      
            FROM       HistPagos      
            UNION ALL      
            SELECT     Id_Emp, id_concepto, Id_Periodo, id_plaza, Pesos,Desde,Hasta, isnull(Id_Referencia,0) Id_Referencia, cc as c_costo
            FROM       @PDtbltmp)       
   AS b      
   ON a.id_concepto = b.id_concepto      
   inner join Empleados D    
   On D.id_emp = b.id_emp    
   inner join Plazas E    
   on E.id_plaza = b.id_plaza  
   Inner Join Calennomina F  
   on b.Id_Periodo=F.Id_periodo     
     
 WHERE      
   b.id_emp=@idemp and e.id_plaza=@idplaza AND b.id_periodo=@idperiodo and  (c.id_razonsocial = 5) AND (a.Tipo = 1) AND (a.En_ListaRaya = 1)  
   and b.Id_Referencia = @refere     
 ORDER BY 
   Desde,Hasta,A.descripcion      
         


SET NOCOUNT OFF    

END
'
GO

GO
PRINT N'Creating [dbo].[P_empleadosPorCt]'
GO
IF OBJECT_ID(N'[dbo].[P_empleadosPorCt]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[P_empleadosPorCt]
	-- Add the parameters for the stored procedure here
	@ct nvarchar(10)
	
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	select pe.id_emp,pe.id_plaza,e.nombre,e.appaterno,e.apmaterno,pe.id_nodo,e.rfc,pie.plazaieepo,v.clave from PlazaEmpleados pe   
                    inner join (     
                     select id_plaza, max(fecha) fecha from plazaempleados     
                     where Fecha <= getdate() group by id_plaza   
                    )x on x.Id_plaza = pe.Id_plaza and x.fecha = pe.Fecha   
                    inner join Empleados e on e.Id_Emp = pe.Id_Emp   
                    inner join PlazaIEEPO pie on pie.Id_plaza = pe.Id_plaza   
                    inner join VistaTablaLongitud v on v.Id_Nodo = pe.id_nodo
	where v.clave = @ct and e.id_emp <> 0 ;
END
'
GO

GO
PRINT N'Creating [dbo].[sp_getFupData]'
GO
IF OBJECT_ID(N'[dbo].[sp_getFupData]', 'P') IS NULL
EXEC sp_executesql N'create procedure [dbo].[sp_getFupData] @data varchar(max), @type int
with encryption
as
begin

	if(@type = 0)
		select 
			a.Folio,b.Id_Detalle, b.Id_Estatus, a.Id_Emp,b.Id_Plaza,
			b.FechaIni, b.FechaFin, c.Descripcion, a.Id_Usuario,
			case when a.Id_Estatus = 3 
				then (
					select top 1 y.Descripcion
					from ieepo..FUP_Cancelados x
					join IEEPO..FUP_MotivoCancelacion y
					on x.Id_MotivoCancelacion = y.Id_MotivoCancelacion
					where x.Id_Documento = a.Id_Documento
				)
			else ''''
			end mot_cancel
		from 
			ieepo..FUP_Documentos  a
			join ieepo..FUP_Documento_Detalle b
			on a.Id_Documento = b.Id_Documento
			join ieepo..FUP_MotivoMovimiento c
			on b.Id_MotivoMovimiento = c.Id_MotivoMovimiento
		where id_plaza in (select value from dbo.fn_split(@data,'',''))
		order by id_plaza, fechaini desc

	if(@type = 1)
		select 
			a.Folio,b.Id_Detalle, b.Id_Estatus, a.Id_Emp,b.Id_Plaza,
			b.FechaIni, b.FechaFin, c.Descripcion, a.Id_Usuario,
			case when a.Id_Estatus = 3 
				then (
					select top 1 y.Descripcion
					from ieepo..FUP_Cancelados x
					join IEEPO..FUP_MotivoCancelacion y
					on x.Id_MotivoCancelacion = y.Id_MotivoCancelacion
					where x.Id_Documento = a.Id_Documento
				)
			else ''''
			end mot_cancel
		from 
			ieepo..FUP_Documentos  a
			join ieepo..FUP_Documento_Detalle b
			on a.Id_Documento = b.Id_Documento
			join ieepo..FUP_MotivoMovimiento c
			on b.Id_MotivoMovimiento = c.Id_MotivoMovimiento
		where id_emp in (select value from dbo.fn_split(@data,'',''))
		order by id_plaza, fechaini desc
end'
GO

GO
PRINT N'Creating [dbo].[sp_CompraPrimasAntiguedadDosQnas]'
GO
IF OBJECT_ID(N'[dbo].[sp_CompraPrimasAntiguedadDosQnas]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[sp_CompraPrimasAntiguedadDosQnas]
	-- Add the parameters for the stored procedure here
	@qnaIni varchar(6), 
	@qnaFin varchar(6)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	select isnull(i.id_emp,f.id_emp) id_emp, isnull(i.id_plaza,f.id_plaza) id_plaza, e.RFC, p.Plazaieepo, i.cc as Prima_QnaIni, f.cc as Prima_QnaFin, i.desde as QnaIni, f.desde as QnaFin 
	into dep..comparaqnas from (
	  select id_emp, id_plaza, cc, pesos, desde from Nom_histpagos where Id_Periodo in (select Id_Periodo from CalenNomina where año = cast(SUBSTRING(@qnaIni, 1, 4) as int) and Numero = cast(SUBSTRING(@qnaIni, 5, 2) as int) and Parcial = 0 and Id_cia = 2 ) and id_concepto = 1328
	) i
	full join (
	  select id_emp, id_plaza, cc, pesos, desde from Nom_histpagos where Id_Periodo in (select Id_Periodo from CalenNomina where año = cast(SUBSTRING(@qnaFin, 1, 4) as int) and Numero = cast(SUBSTRING(@qnaFin, 5, 2) as int) and Parcial = 0 and Id_cia = 2 ) and id_concepto = 1328
	) f on f.id_emp = i.id_emp and f.id_plaza = i.id_plaza
	inner join Empleados e on e.id_emp = isnull(i.id_emp,f.id_emp)
	inner join PlazaIEEPO p on p.Id_plaza = isnull(i.id_plaza,f.id_plaza)
	order by e.rfc


END
'
GO

GO
PRINT N'Creating [dbo].[by_zincrohp]'
GO
IF OBJECT_ID(N'[dbo].[by_zincrohp]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		<samg,Gabo>
-- Create date: <22-11-2013>
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[by_zincrohp] 
	-- Add the parameters for the stored procedure here
	
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	--SET NOCOUNT ON;
	
    -- Insert statements for procedure here
	delete from histpagosp
	----
	insert into histpagosp 	select * from histpagos
	SELECT top 1 id_periodo,fecha from histpagosp group by id_periodo,fecha

END
'
GO

GO
PRINT N'Creating [dbo].[P_obtenerReportePlazas]'
GO
IF OBJECT_ID(N'[dbo].[P_obtenerReportePlazas]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		<Sistemas,Noemi>
-- Create date: <Create Date, 21/09/2018 >
-- Description:	<Description, obtener plazas del trabajador>
-- =============================================
--exec [P_obtenerReportePlazasX] 123597,0,''Plazas_Empleado'',121,0,''''
--exec [P_obtenerReportePlazas] 123597,0,''Plazas_Empleado'',121,0,''''
--select * from usuarios 
--select * from empleados where id_emp = 123597 rfc like ''%LOHD580203%''
CREATE procedure [dbo].[P_obtenerReportePlazas]
(		
	@idEmp int,
	@activas bit,
	@leyenda varchar(100),
	@idUsuario int, --
	@impresion bit, --
	@tipoImpresion varchar(20) --
)
AS
begin
declare @plazas nvarchar(max) 


Declare @sqlStatus varchar(300) = ('', right(''''00'''' + cast(Status as varchar), 2) as status'');
--select @sqlStatus ;
Declare @permisoSeccion Bit = (isnull((select 1 activo from ACCESOSMENUS where Id_Usuario =@idUsuario and ClaveMenu =''1500000228''),0));
--select @permisoSeccion;
Declare @permisoSeccion22 Bit = (isnull((select 1 activo from ACCESOSMENUS where Id_Usuario =@idUsuario and ClaveMenu =''1500000229''),0));
--select @permisoSeccion22;
Declare @permisoPlazasEnProceso Bit = (isnull((select 1 activoX from ACCESOSMENUS where Id_Usuario =@idUsuario and ClaveMenu =''1500000226''),0));
--select @permisoPlazasEnProceso;
Declare @permiso Bit = (isnull((select 1 activoX1 from ACCESOSMENUS where Id_Usuario =@idUsuario and ClaveMenu =''1500000272''),0));
--select @permiso
	If @permiso = 1 begin        
		set @sqlStatus = '',case when dbo.fechaToAnioQuincena(getdate()) > hasta Or Status =2 then ''''03'''' else right(''''00'''' + cast(Status as varchar), 2) end as status ''
  End ;

set @plazas = ''    
select * ''+
''into #Hstatplaza ''+
''from ( ''+
''SELECT hsp.Id_plaza, hsp.id_rel, hsp.Fecha, hsp.Id_User, hsp.Movimiento ''+
''FROM Hstatusplaza hsp with(nolock)''+
''INNER JOIN PlazaEmpleados pe with(nolock) ON pe.id_plaza=hsp.id_plaza ''+
''WHERE pe.id_emp=''+cast(@idEmp as varchar(15))+
--'' UNION ALL ''+
--''SELECT hsp.Id_plaza, hsp.Id_TipoMovPlazas, hsp.Fecha, hsp.Id_User, hsp.Movimiento ''+
--''FROM Empalme_HPlazas hsp with(nolock) ''+
--''INNER JOIN Empalme_PlazaEmpleados pe with(nolock) ON pe.id_plaza=hsp.id_plaza ''+
--''WHERE pe.id_emp=''+cast(@idEmp as varchar(15))+
--''AND hsp.Id_TipoMovPlazas = 2''+
'')hp where id_rel != 2;  ''+
''select * ''+
''into #plazas_Emp ''+
''from ( ''+
''SELECT Id_Emp,Id_plaza,Fecha,Id_User,Movimiento,id_nodo,Documentos,Id,id_plazaanterior,esHistoria,desliguePlaza,tipoHistoria ''+
''FROM PlazaEmpleados with(nolock) ''+
--''UNION ALL ''+
--''SELECT Id_Emp,Id_plaza,Fecha,Id_User,Movimiento,id_nodo,Documentos,Id,id_plazaanterior,esHistoria,desliguePlaza,tipoHistoria ''+
--''FROM Empalme_PlazaEmpleados with(nolock) ''+
'')pe ''+
''where id_plaza in (select distinct id_plaza from #Hstatplaza); ''+


''select DISTINCT tabla.id_emp, tabla.id_plaza, tabla.id_nodo, DESDE,HASTA,quincenaDesde,quincenaHasta ''+
''INTO #tabla ''+
''from ( ''+
''SELECT pe.id_emp AS id_emp, pe.id_plaza, pe.id_nodo ,pe.fecha AS desde , /*hist.hasta*/ case when hist.hasta is null then ''''9999-12-01 00:00:00.000'''' else hist.hasta end hasta, ''+
''cast( year(pe.fecha ) as varchar) + Right(''''00'''' + Cast(case when(day(pe.fecha )>15)then month(pe.fecha )*2 else (month(pe.fecha )*2)-1 end as Varchar(2)),2) as quincenaDesde, ''+
''case when hist.hasta IS NULL OR year(hist.hasta) = 9999 THEN ''''999999'''' ELSE cast( year(hist.hasta-1)  as varchar) + Right(''''00'''' + Cast(case when(day(hist.hasta-1)>15)then month(hist.hasta-1)*2 else (month(hist.hasta-1)*2)-1 end as Varchar(2)),2) end as quincenaHasta ''+
''FROM #plazas_Emp pe with(nolock) ''+
''Left Join ( ''+
''SELECT p.id_plaza, p.fecha, MIN(h.fecha) AS hasta ''+
''FROM #plazas_Emp p with(nolock) ''+
''INNER JOIN #plazas_Emp h with(nolock) ''+
''ON p.id_plaza = h.id_plaza ''+
''Where p.fecha < h.fecha ''+
''GROUP BY p.id_plaza, p.Fecha ''+
'') hist ON pe.id_plaza = hist.id_plaza AND pe.fecha = hist.fecha ''+
'') Tabla ''+
''join ( ''+
''SELECT p.Id_Emp,p.id_plaza,documentos ''+
      
''FROM ( ''+
''select Id_Emp,id_plaza,fecha,documentos ''+
      
''from PlazaEmpleados with(nolock) ''+
--''union all ''+
--''select Id_Emp,id_plaza,fecha,documentos ''+      
--''from empalme_PlazaEmpleados with(nolock) ''+
'') p join ( ''+
''SELECT Id_Emp, id_plaza,max(Fecha)fecha ''+
''FROM PlazaEmpleados with(nolock) ''+
''WHERE id_emp =''+cast(@idEmp as varchar(15))+
''group by Id_Emp, id_plaza ''+
--''union all ''+
--''SELECT Id_Emp, id_plaza,max(Fecha)fecha ''+
--''FROM empalme_PlazaEmpleados with(nolock) ''+
--''WHERE id_emp =''+cast(@idEmp as varchar(15))+
--''group by Id_Emp, id_plaza ''+
'') pf on pf.fecha= p.fecha and p.id_plaza=pf.id_plaza and p.id_emp=pf.id_emp ''+
''WHERE p.id_emp = ''+cast(@idEmp as varchar(15))+
''group by p.Id_Emp, p.id_plaza,Documentos ''+

'') tabla2 ''+
''on tabla2.Id_Emp = tabla.Id_Emp and tabla.Id_plaza = tabla2.Id_plaza ''+
''where tabla.id_emp =''+cast(@idEmp as varchar(15))+

''select ROW_NUMBER() OVER( ORDER BY ID_PLAZA desc)np,id_plaza ''+
''into #plazas ''+
''from ( ''+
''select distinct id_plaza from #tabla ''+
'')a; ''+

''SELECT ROW_NUMBER() OVER( PARTITION BY id_plaza ORDER BY ID_PLAZA,QUINCENADESDE desc) AS n,*,0 cambio ''+
''into #dh ''+
''FROM #tabla; ''+

''Declare @i int ''+
''set @i=1 ''+
''while @i <= (select max(np) from #plazas where np=@i) begin ''+
''Declare @ip int ''+
''set @ip = (select id_plaza from #plazas where np=@i); ''+
''Declare @y int ''+
''set @y = 2; ''+
'' while(@y <=(select max(n) from #dh where id_plaza=@ip))begin ''+

''if(select quincenaDesde from #dh where id_plaza=@ip and @y-1=n )!= (select dbo.fechaToAnioQuincena(case when hasta= ''''9999-12-31 23:59:00.000'''' then ''''1999-12-31 23:59:00.000'''' else hasta+1 end) from #dh where id_plaza=@ip and @y=n ) ''+
''begin ''+

''update #dh set cambio=(Select max(cambio)+1 from #dh) where n>=@y and id_plaza=@ip ''+
''End ''+
''set @y=@y+1 ''+
''End ''+
''set @i=@i+1 ''+
''End ''+

''select #dh.id_nodo,tabla.* ''+
''into #tabla3 ''+
''from (''+
''select id_emp,id_plaza,min(DESDE)DESDE,max(HASTA)HASTA,min(quincenaDesde)quincenaDesde,max(quincenaHasta)quincenaHasta ''+
''from #dh group by id_emp,id_plaza,Cambio ''+
'')tabla ''+
''join #dh on #dh.quincenaHasta=tabla.quincenaHasta and #dh.id_plaza =tabla.id_plaza; ''+
     
'' Select distinct tabla.id_Plaza,'''''''' as opciones, partida, right(''''00'''' + cast(unidad as varchar), 2) as unidad, right(''''00'''' + cast(subunidad as varchar), 2) as subunidad, categoria, horas, plaza as plaza, /*udp */''+
'' Case When ''+
'' (select distinct right(''''000'''' + cast(t.UDP as varchar), 3) from #plazas_Emp temp1 ''+
'' inner join TablaLongitudProp_28 t with(nolock) on temp1.id_nodo = t.id_nodo ''+
'' inner join plazaempleados temp2 with(nolock) on temp1.id_plaza = temp2.id_plaza ''+
'' and temp1.fecha = temp2.fecha and temp1.id_emp = temp2.id_emp ''+
'' and temp1.id_nodo = temp2.id_nodo where tabla.id_plaza = temp1.id_plaza ''+
'' and temp1.fecha = (select max(fecha) from #plazas_Emp where id_plaza = tabla.id_plaza ''+
'' and fecha <= getdate()) and temp2.id_emp=''+cast(@idEmp as varchar(15))+'') is null then udp else ''+
'' (select distinct right(''''000'''' + cast(t.UDP as varchar), 3) from #plazas_Emp temp1 ''+
'' inner join TablaLongitudProp_28 t with(nolock) on temp1.id_nodo = t.id_nodo ''+
'' inner join plazaempleados temp2 with(nolock) on temp1.id_plaza = temp2.id_plaza ''+
'' and temp1.fecha = temp2.fecha  and temp1.id_emp = temp2.id_emp ''+
'' and temp1.id_nodo = temp2.id_nodo  where tabla.id_plaza = temp1.id_plaza ''+
'' and temp1.fecha = (select max(fecha) from #plazas_Emp where id_plaza = tabla.id_plaza ''+
'' and fecha <= getdate()) and temp2.id_emp = ''+cast(@idEmp as varchar(15))+'') end as udp ''+
      @sqlStatus +
'', left (Motivo,2) motivo,substring (motivo,4,LEN(motivo))id_motivo, ''+
'' documento, desde, hasta, nivel, /*ct,*/ ''+
'' case when ''+
'' (select distinct v.centro_de_trabajo from #plazas_Emp temp1 with(nolock) inner join vistatablalongitud v with(nolock) on temp1.id_nodo = v.id_nodo ''+
'' inner join plazaempleados temp2 with(nolock) on temp1.id_plaza = temp2.id_plaza and temp1.fecha = temp2.fecha ''+
'' and temp1.id_emp = temp2.id_emp and temp1.id_nodo = temp2.id_nodo ''+
'' where tabla.id_plaza = temp1.id_plaza and temp1.fecha = (select max(fecha) from #plazas_Emp with(nolock) where id_plaza = tabla.id_plaza and fecha <= getdate()) and temp2.id_emp = ''+cast(@idEmp as varchar(15))+'') is null then ct else ''+
'' (select distinct v.centro_de_trabajo from #plazas_Emp temp1 with(nolock) inner join vistatablalongitud v with(nolock) on temp1.id_nodo = v.id_nodo ''+
''inner join plazaempleados temp2 with(nolock) on temp1.id_plaza = temp2.id_plaza and temp1.fecha = temp2.fecha ''+
'' and temp1.id_emp = temp2.id_emp and temp1.id_nodo = temp2.id_nodo ''+
'' where tabla.id_plaza = temp1.id_plaza and temp1.fecha = (select max(fecha) from #plazas_Emp where id_plaza = tabla.id_plaza and fecha <= getdate()) and temp2.id_emp = ''+cast(@idEmp as varchar(15))+'') end as ct, ''+
'' nivelCM, case when ss IS null then ''''22'''' when ss= 3 then ''''59'''' end SS, desdePlazaEmpleado, tabla.id , clave ''+
''into #informacionPlazas''+
'' from ( ''+
'' Select HSS.id_rel ss,Documentos.clave,plazaieepo.id_Plaza, plazaieepo.partida, plazaieepo.unidad, plazaieepo.subunidad, plazaieepo.categoria, plazaieepo.horas, plazaieepo.Diagonal as plaza, ''+
'' right(''''000'''' + cast(TablaLongitudProp_28.UDP as varchar), 3) as UDP, ''+
'' right(''''00'''' + cast( ( ''+
'' Select top 1 id_rel from ( ''+
''  SELECT pe.id_plaza, pe.id_rel AS id_rel, pe.fecha, ''+
''  dbo.DateToQna(pe.fecha) as quincenaDesde ''+
''  FROM #Hstatplaza pe with(nolock) ''+
''  Where pe.id_plaza = PlazasEmp.id_plaza ''+
'' and Fecha in (select max(fecha)f from #Hstatplaza Where id_plaza = pe.id_plaza and dbo.DateToQna(fecha)<=PlazasEmp.quincenaHasta )''+
''  ) Aux where Aux.quincenaDesde > = PlazasEmp.quincenaDesde and Aux.quincenaDesde <= PlazasEmp.quincenaHasta ''+
      
'' order by quincenaDesde desc ''+
'') as varchar), 2) as Status, ''+

''(SELECT top 1 id_rel ''+
'' FROM ( ''+
''SELECT pe.id_plaza,rtrim(ltrim(tp.CveTipoPlaza))+''''-''''+cast(pe.id_rel as varchar(3)) as id_rel,pe.fecha, dbo.DateToQna(pe.fecha) as quincenaDesde ''+
''FROM htipoplaza pe with(nolock) join ttipoplaza tp with(nolock) on pe.id_rel=tp.Id_TipoPlaza ''+
''WHERE pe.id_plaza = PlazasEmp.id_plaza  and Fecha in (select max(fecha)f ''+
''FROM htipoplaza ''+
''WHERE id_plaza = pe.id_plaza and dbo.DateToQna(fecha)<=PlazasEmp.quincenaHasta) ''+
'') Aux ''+
     
''WHERE Aux.quincenaDesde > = PlazasEmp.quincenaDesde and Aux.quincenaDesde <= PlazasEmp.quincenaHasta ''+
''ORDER BY quincenaDesde DESC ''+
'') motivo, ''+
''Documentos.folio as documento, '';

set @plazas = @plazas+
''Case when categoria like ''''%AB%'''' Then ''+
'' (Select top 1 quincenaDesde from ( ''+
''   SELECT pe.id_plaza, pe.id_rel AS id_rel, pe.fecha, ''+
''   dbo.DateToQna(pe.fecha) as quincenaDesde ''+
''   FROM #Hstatplaza pe with(nolock) ''+
''   Where pe.id_plaza = PlazasEmp.id_plaza ''+
'' ) Aux where fecha <= getDate() and Aux.quincenaDesde > = PlazasEmp.quincenaDesde and Aux.quincenaDesde <= PlazasEmp.quincenaHasta ''+
'' order by quincenaDesde desc ) ''+
''Else ''+
'' dbo.DateToQna(PlazasEmp.desde) ''+
''End as Desde, ''+
''case when PlazasEmp.hasta IS NULL OR year(PlazasEmp.hasta) = 9999 THEN ''''999999'''' ELSE dbo.DateToQna(PlazasEmp.hasta) end as hasta, ''+
''right(''''00'''' + cast(Tabulador.nivel as varchar), 2) as nivel, ''+
''right(''''00'''' + cast(TabuladorCM.nivel as varchar), 2) as nivelCM, ''+
''vistatablalongitud.Centro_de_Trabajo as CT, dbo.DateToQna(PlazasEmp.desde) as desdePlazaEmpleado, ''+
''id = ROW_NUMBER() OVER (ORDER BY plazaieepo.id_Plaza) ''+
''from Empleados with(nolock)''+
''inner join ( ''+
'' select * from #tabla3 where id_emp = ''+cast(@idEmp as varchar(15))+
'') PlazasEmp on Empleados.id_emp = PlazasEmp.id_emp ''+
''left join ( ''+
''  Select tTabulador_SE_Nivel_Pago.*, HTabulador_SE_Nivel_Pago.id_plaza from HTabulador_SE_Nivel_Pago with(nolock) inner join ( ''+
''    Select id_plaza, max(fecha) as fecha from HTabulador_SE_Nivel_Pago with(nolock) where fecha <= getDate() group by id_plaza ''+
''  ) HTabuladores on HTabulador_SE_Nivel_Pago.id_plaza = HTabuladores.id_plaza and HTabulador_SE_Nivel_Pago.fecha= HTabuladores.fecha ''+
''  inner join tTabulador_SE_Nivel_Pago with(nolock) on HTabulador_SE_Nivel_Pago.id_rel = tTabulador_SE_Nivel_Pago.id_Tabulador_SE_Nivel_Pago	''+
'') Tabulador on Tabulador.id_plaza = PlazasEmp.id_plaza ''+

''left join ( Select tTabulador_SE_CM.*, HTabulador_SE_CM.id_plaza ''+
'' from HTabulador_SE_CM with(nolock) inner join ( ''+
'' Select id_plaza, max(fecha) as fecha from HTabulador_SE_CM with(nolock) where fecha <= getDate() ''+
'' group by id_plaza ) HTabuladoresCM on HTabulador_SE_CM.id_plaza = HTabuladoresCM.id_plaza ''+
'' and HTabulador_SE_CM.fecha= HTabuladoresCM.fecha ''+
'' inner join tTabulador_SE_CM with(nolock) on HTabulador_SE_CM.id_rel = TTabulador_SE_CM.id_Tabulador_SE_CM ''+
'') TabuladorCM on TabuladorCM.id_plaza = PlazasEmp.id_plaza ''+
''left join ( ''+

'' Select MAX(right(''''00''''+ftm.clave,2)) AS clave,fup_documento_detalle.id_plaza id_plazaPadre, fup_documentos.Fecha_Autorizacion, fup_documentos.folio,FUP_Documentos.Id_Documento,formula,valor id_plaza from fup_documentos with(nolock) inner join fup_documento_detalle with(nolock) on fup_documentos.id_documento = fup_documento_detalle.id_documento ''+
'' inner join FUP_MotivoMovimiento fmm with(nolock) on fup_documento_detalle.id_motivomovimiento=fmm.id_motivomovimiento ''+
'' inner join FUP_TipoMovimiento ftm with(nolock) on fmm.id_tipomovimiento=ftm.id_tipomovimiento ''+
'' inner join (select id_emp,Id_Plaza,MAX(Fecha_Autorizacion)Fecha_Autorizacion from fup_documento_detalle dd with(nolock) join FUP_Documentos d with(nolock) on d.Id_Documento=dd.Id_Documento where id_emp = ''+cast(@idEmp as varchar(15))+''	group by id_emp,Id_Plaza ) fdm on fup_documentos.Fecha_Autorizacion=fdm.Fecha_Autorizacion and fup_documento_detalle.Id_Plaza=fdm.Id_Plaza ''+

'' join FUP_DetalleCampos fdc with(nolock) on fup_documento_detalle.Id_MotivoMovimiento=fdc.Id_MotivoMovimiento join Tformulas tf with(nolock) on tf.idFormula=fdc.Id_Formula and tf.formula =''''id_plaza'''' join FUP_ValorInteger fvi with(nolock) on fvi.Id_Valor=fdc.Id_Valor and fvi.Id_Documento=fup_documento_detalle.Id_Detalle ''+

''  where fup_documentos.id_emp = ''+cast(@idEmp as varchar(15))+'' and fup_documentos.id_estatus = 2 ''+

'' group by fup_documento_detalle.id_plaza, fup_documentos.Fecha_Autorizacion,fup_documentos.folio,FUP_Documentos.Id_Documento,formula,valor ''+
------
'') Documentos on Documentos.id_plaza = PlazasEmp.id_plaza ''+ 
--''and Documentos.fechaIni = PlazasEmp.desde''+
----
''Inner join plazaieepo with(nolock) on PlazasEmp.id_plaza = plazaieepo.id_plaza ''+
''left join vistatablalongitud with(nolock) on PlazasEmp.id_nodo = vistatablalongitud.id_nodo ''+
''left join TablaLongitudProp_28 with(nolock) on vistatablalongitud.id_nodo = TablaLongitudProp_28.id_nodo ''+
      --''Para el filtro de secciones sindicales
''LEFT JOIN (select * from  hSeccion__Sindical with(nolock) where id_rel=3 )HSS ON HSS.id_plaza=PlazasEmp.id_plaza ''+
      --''Permisos de Organigrama
''inner join ( ''+
'' Select acceso.id_nodo from accesosorganigrama acceso with(nolock) inner join ( ''+
''   select * from tablaconfigorgan with(nolock) where id_nodopadre in ( ''+
''     select id_nodo from TablaConfigOrgan with(nolock) where id_nodopadre in ( ''+
''       select id_nodo from TablaConfigOrgan with(nolock) where id_tablalongitud = 26 ''+
''     ) ''+
''   ) ''+
'' ) organ on acceso.id_nodo = organ.id_nodo where acceso.id_usuario = ''+cast(@idUsuario as varchar(15))+
'') PermisosOrganigrama on PermisosOrganigrama.id_nodo = vistatablalongitud.id_nodo ''+
      --''Permisos por nivel educativo     
''INNER JOIN ( ''+
''  select DISTINCT rn.id_nodo from fup_relnivel_nodo rn with(nolock) ''+
''  inner join FUP_RelUsuariosNivelAcademico f with(nolock) on rn.id_nivel_educativo = f.id_nivel  ''+
''      where f.id_usuario = ''+cast(@idUsuario as varchar(15))+
'') nivel ON nivel.id_nodo = PermisosOrganigrama.id_nodo ''+
''where empleados.id_emp = ''+cast(@idEmp as varchar(15))
      If (@permisoSeccion = 1 And @permisoSeccion22 =0) begin
		set @plazas = @plazas+'' AND HSS.id_plaza IS NOT NULL ''
      End 
      If (@permisoSeccion22 = 1 and @permisoSeccion =0) begin
		set @plazas = @plazas+'' AND HSS.id_plaza IS NULL ''
      End
      If @permisoSeccion=0 And @permisoSeccion22=0 begin
		set @plazas = @plazas+'' AND HSS.id_plaza = -1 ''
      End
set @plazas = @plazas+ '') Tabla, #plazas_Emp peTemp ; ''

--Declare @sqlWhereActiva varchar(300);
--Declare @sqlWhereHistorico varchar(300);

--      If @permiso = 1 begin        
--		set @sqlWhereActiva = '' and hasta >= dbo.fechaToAnioQuincena(getdate()) ''
--        set @sqlWhereHistorico = '' or (hasta < dbo.fechaToAnioQuincena(getdate())) ) ''
--      End 

  --    If @activas = 1 begin
		--set @plazas = @plazas+'' Tabla.Status in (select id_StatusPlaza from tstatusplaza with(nolock) where procesa = 1) '' + @sqlWhereActiva 
  --    end Else begin
		--set @plazas = @plazas+'' ( (Tabla.Status in (select id_StatusPlaza from tstatusplaza with(nolock) where procesa = 0)) or (tabla.status is null) '' 
		--if(@sqlWhereHistorico='''' or @sqlWhereHistorico is null)begin
		--	set @plazas = @plazas+'')''
		--end else begin
		--	set @plazas = @plazas+@sqlWhereHistorico
		--end
  --    End 
	--set @plazas = @plazas+'' Tabla.Status in (select id_StatusPlaza from tstatusplaza with(nolock) where procesa in (0,1)) )'' ;
	--set @plazas = @plazas+ ''and tabla.id_plaza = peTemp.id_plaza and tabla.desde = dbo.DateToQna(peTemp.fecha) Order by id_plaza desc, desde desc''
--      datManejo.ObtenDataSet(dsHistorico, sbSql.ToString(), "Reporte")
--      Return dsHistorico

--    Catch ex As Exception
--      dsHistorico.Dispose()
--    End Try
--    Return dsHistorico
--  End Function
--select @plazas

set @plazas=@plazas+-- '' select * from #informacionPlazas;''

'' select distinct idF id,infoFinal.id_Plaza,opciones,partida,unidad,subunidad,categoria,horas,plaza,isnull(infoFinal.udp,tlp28.udp)  udp,isnull (statusM,status)status,isnull(motivoM,motivo)motivo,isnull(Id_TipoPlazaM,id_motivo)id_motivo,''+
''isnull(fup.Folio,'''''''')documento,isnull(desdeM,desde)desde,isnull(hastaM,hasta)hasta,nivel,isnull(ctM,ct)ct,nivelCM,SS,desdePlazaEmpleado,id ids,infoFinal.clave ''+
'' into #plazasTrabajador''+
'' from(''+
'' Select idF = ROW_NUMBER() OVER (ORDER BY Datos.desde), pe.*,Datos.status statusM,Datos.motivo motivoM,Datos.desde desdeM,Datos.hasta hastaM,Datos.ct ctM,Datos.quincenaHasta quincenaHastaM,Datos.fechaDesde fechaDesdeM,Datos.Id_plaza Id_plazaM,Id_TipoPlaza Id_TipoPlazaM''+
'' from  #informacionPlazas pe''+
'' left join (   ''+
 		''Select right(''''00'''' + cast(EstatusPlaza.id_rel as varchar), 2) as status,MotivoPlaza.id_rel motivo,Id_TipoPlaza,dbo.DateToQna(EstatusPlaza.desde) as desde, ''+
		''case when right(''''00'''' + cast(EstatusPlaza.id_rel as varchar), 2) =''''03'''' then  dbo.DateToQna(EstatusPlaza.desde) ''+
				'' else isnull(dbo.DateToQna(EstatusPlaza.hasta),''''999999'''') end hasta,''+
 				--'' case when EstatusPlaza.hasta IS NULL THEN ''''999999'''' ELSE dbo.DateToQna(EstatusPlaza.hasta) END as hasta,''+
'' 				(SELECT ISNULL(VTL.Centro_de_Trabajo,'''''''') ''+
'' 					FROM PlazaEmpleados PE''+
'' 					LEFT JOIN vistaTablaLongitud VTL ON VTL.id_nodo=PE.id_nodo''+
'' 					WHERE PE.id_plaza = EstatusPlaza.id_plaza AND PE.fecha=(Select MAX(fecha)''+
'' 																			FROM PlazaEmpleados''+
'' 																			WHERE id_plaza = EstatusPlaza.id_plaza  AND  fecha <=EstatusPlaza.desde''+
'' 																			)''+
'' 				) as ct ,case when EstatusPlaza.quincenaHasta IS NULL THEN ''''999999'''' ELSE dbo.DateToQna(EstatusPlaza.quincenaHasta) END as quincenaHasta, EstatusPlaza.desde as fechaDesde,''+
'' 				EstatusPlaza.Id_plaza''+
'' 		from ( ''+
 				''SELECT pe.id_plaza,pe.id_rel AS id_rel,pe.fecha AS desde,case when hist.hasta is not null then (hist.hasta -1) end as hasta,''+
 						''case when hist.hasta is null then pe.fecha else (hist.hasta -1) end AS quincenaHasta''+
'' 				FROM Hstatusplaza pe ''+
'' 				Left Join ( ''+
'' 							SELECT p.id_plaza, p.fecha, MIN(h.fecha) AS hasta  ''+
'' 							FROM Hstatusplaza p ''+
'' 							INNER JOIN Hstatusplaza h ON p.id_plaza  = h.id_plaza''+
'' 							Where p.fecha < h.fecha ''+
'' 							GROUP BY  p.id_plaza, p.Fecha ''+
'' 				) hist  ON pe.id_plaza = hist.id_plaza  AND pe.fecha = hist.fecha ''+
'' 		) EstatusPlaza  ''+
'' 		left join ( ''+
'' 					SELECT pe.id_plaza,Id_TipoPlaza,rtrim(ltrim(tp.CveTipoPlaza)) AS id_rel, pe.fecha AS desde, (hist.hasta-1) AS hasta''+
'' 					FROM htipoplaza pe ''+
'' 					join ttipoplaza tp with(nolock) on pe.id_rel=tp.Id_TipoPlaza''+
'' 					Left Join (''+
'' 								SELECT p.id_plaza, p.fecha, MIN(h.fecha) AS hasta ''+
'' 								FROM htipoplaza p ''+
'' 								INNER JOIN htipoplaza h ON p.id_plaza  = h.id_plaza''+
'' 								Where p.fecha < h.fecha GROUP BY  p.id_plaza, p.Fecha''+
'' 					) hist  ON pe.id_plaza = hist.id_plaza  AND pe.fecha = hist.fecha''+
'' 		) MotivoPlaza on EstatusPlaza.id_plaza = MotivoPlaza.id_plaza and MotivoPlaza.desde = EstatusPlaza.desde''+
'' 		where EstatusPlaza.id_plaza in (select id_plaza from #informacionPlazas)''+--= 92879 
'' ) Datos''+
'' on datos.id_plaza=pe.id_plaza and''+
'' datos.desde >=  pe.desdePlazaEmpleado  ''+
--and estatus.fechaDesde <= getDate()
'' and datos.hasta <= pe.hasta''+
'' )infoFinal''+
'' left join vistatablalongitud v on infoFinal.ct=v.clave''+
'' join TablaLongitudProp_28 tlp28 on tlp28.id_nodo=v.id_nodo''+

'' left join''+
''(''+
''select distinct id_emp,id_plaza,folio,''+
''case when fmm.Id_tipoMovimiento in (4,6,7,8) and fmm.clave not in (''''10'''',''''95'''') then dbo.fechaToAnioQuincena(FechaIni-1) else dbo.fechaToAnioQuincena(FechaIni) end FechaIni,''+
''case when fmm.Id_tipoMovimiento in (4,6,7,8) and fmm.clave not in (''''10'''',''''95'''') then dbo.fechaToAnioQuincena(Fechafin-1) else dbo.fechaToAnioQuincena(Fechafin) end FechaFin,''+
''fdd.Id_MotivoMovimiento,Clave,Descripcion ''+
''from FUP_Documentos fd join FUP_Documento_Detalle fdd ''+
''on fd.Id_Documento=fdd.Id_Documento ''+
''join FUP_motivoMovimiento fmm on fmm.Id_MotivoMovimiento=fdd.Id_MotivoMovimiento ''+
''where id_emp = ''+cast(@idEmp as varchar(15))+'' and id_plaza in (select id_plaza from #informacionPlazas) ''+
''and fd.id_estatus =2 ''+
'')fup on fup.id_plaza=infoFinal.Id_plaza and isnull(desdeM,desde) <=cast(rtrim(ltrim(fechaini)) as int) and isnull(hastaM,hasta)>=cast(rtrim(ltrim(fechafin)) as int)  ''+
''and rtrim(ltrim(fup.clave))=isnull(motivoM,motivo);''

set @plazas=@plazas+

''select ROW_NUMBER() OVER( PARTITION BY id_plaza ORDER BY ID_PLAZA,fecha desc) AS id,  id_plaza,fecha,max(estatus)status,max(motivo)motivo ''+
''into #desdeEmpal''+
'' from (''+
''		select id_plaza,fecha,case when Id_TipoMovPlazas=2 then Valor_IdCampo else -1 end estatus,case when Id_TipoMovPlazas=1 then Valor_IdCampo else -1 end motivo''+
''		from Empalme_hplazas ''+
''		where Id_plaza in (select id_plaza from empalme_plazaempleados where id_emp =''+cast(@idEmp as varchar(15))+'' )''+
'')empalmes ''+
''group by id_plaza,fecha; ''+


'' select distinct  pi.id_Plaza,''''''''opciones,pi.partida,pi.unidad,pi.subunidad,pi.categoria,pi.horas,pi.diagonal plaza,vt.UDP,''+
'' p.status, CveTipoPlaza motivo,tt.Id_TipoPlaza id_motivo,isnull(folio,'''''''') documento,dbo.fechaToAnioQuincena(pe.Fecha)desdePlazaEmpleado,hasta,''''''''nivel,v.Clave ct,''+
'' ''''''''nivelCM,''''''''SS,dbo.fechaToAnioQuincena(pe.Fecha)desde,1 id,null clave''+
--pe.Id_Emp,pe.Id_plaza,pe.id_nodo
'' into #plazasEmpalmes''+
'' from Empalme_PlazaEmpleados pe''+
'' join ''+
'' (''+
'' 	select d1.*,isnull(dbo.fechaToAnioQuincena(d2.Fecha),''''999999'''')hasta from #desdeEmpal d1''+
'' 	left join #desdeEmpal d2 on d1.Id_plaza=d2.Id_plaza and d1.id+1=d2.id''+
'' )p on p.Id_plaza=pe.Id_plaza and p.Fecha = pe.fecha''+
'' join TTipoPlaza tt on tt.Id_TipoPlaza=p.motivo''+
'' join plazaieepo pi on pi.Id_plaza=p.Id_plaza''+
'' left join vistatablalongitud v on pe.id_nodo=v.Id_Nodo''+
'' left join TablaLongitudProp_28 vt on vt.id_nodo=v.id_nodo''+

'' left join''+
''(''+
''select distinct id_emp,id_plaza,folio,dbo.fechaToAnioQuincena(FechaIni)FechaIni,dbo.fechaToAnioQuincena(FechaFin)FechaFin,fdd.Id_MotivoMovimiento,Clave,Descripcion ''+
''from FUP_Documentos fd join FUP_Documento_Detalle fdd ''+
''on fd.Id_Documento=fdd.Id_Documento ''+
''join FUP_motivoMovimiento ftm on ftm.Id_MotivoMovimiento=fdd.Id_MotivoMovimiento ''+
''where id_emp = ''+cast(@idEmp as varchar(15))+'' and id_plaza in (select id_plaza from empalme_plazaempleados where id_emp =''+cast(@idEmp as varchar(15))+'' ) ''+
''and fd.id_estatus =2 ''+
'')fup on fup.id_plaza=pe.Id_plaza  and cast(rtrim(ltrim(fechaini)) as int)=dbo.fechaToAnioQuincena(pe.fecha) ''+
''and cast(rtrim(ltrim(fup.clave)) as varchar(2))=cast(motivo as varchar(2));''+

'' select pte.id_Plaza,''''''''opciones,pte.partida,pte.unidad,pte.subunidad,pte.categoria,pte.horas,pte.plaza,pte.UDP, ''''03'''' status, fd.clave motivo,fd.clave id_motivo,isnull(fd.folio,'''''''') documento,fd.desde desdePlazaEmpleado,fd.hasta,''''''''nivel,pte.ct, ''''''''nivelCM,''''''''SS,fd.desde desde,1 id,null clave''+
'' into #BajasPlazasEmpalmes''+
'' from #plazasEmpalmes pte''+
'' join (''+
	'' select id_emp,id_plaza,fmm.clave,dbo.fechaToAnioQuincena(FechaIni) desde,dbo.fechaToAnioQuincena(FechaFin)hasta,folio''+
	'' from fup_documentos fd''+
	'' join fup_documento_detalle fdd''+
	'' on fd.id_documento=fdd.id_documento''+
	'' join fup_motivomovimiento fmm''+
	'' on fmm.id_MotivoMovimiento = fdd.id_MotivoMovimiento''+
	'' where fmm.Id_tipoMovimiento in (4,6,7,8) and fmm.clave not in (''''10'''',''''95'''')''+
	'' and fd.id_emp = ''+cast(@idEmp as varchar(15))+
'' )fd on pte.id_plaza=fd.id_plaza and fd.desde=pte.desde;''+

''select * into #plazasTrabajadorEmpalmes from (select * from #plazasEmpalmes union all select * from #BajasPlazasEmpalmes)a ''

declare @operador varchar(2)

if(@activas = 1)begin
	set @operador = ''>='';
end else begin
	set @operador = ''<'';
end

set @plazas=@plazas+ '' select distinct pt.id, pt.id_Plaza,opciones,partida,unidad,subunidad,categoria,horas,plaza,udpnct udp,status,motivo,id_motivo,documento,desdenct desde,hasta,nivel,Centro_de_Trabajo ct,nivelCM,SS,desde desdePlazaEmpleado,id ids,clave,''''''''registro ''+ 
						''into #reubicaciones''+
						'' from #plazasTrabajador pt''+
						'' join (''+
						''select id_emp,id_plaza,dbo.fechaToAnioQuincena(fecha)desdenct,v.Centro_de_Trabajo,tlp28.UDP udpnct ''+
						 ''from PlazaEmpleados pe ''+
						 ''left join vistatablalongitud v on pe.id_nodo=v.id_nodo ''+
						 ''join TablaLongitudProp_28 tlp28 on tlp28.id_nodo=v.id_nodo ''+
						 ''where id_emp = ''+cast(@idEmp as varchar(15))+'' and (Documentos is not null and Documentos != '''''''')  ''+
						 '') r on r.Id_plaza=pt.id_plaza and desdenct>= desde and desdenct <=hasta and desdenct!=desde ;''+
						 --and ct!=Centro_de_Trabajo
						 '' select ROW_NUMBER() OVER( PARTITION BY id ORDER BY ID,DESDE) AS n,* into #platra from  ( ''+
						 '' select *,''''''''registro from #plazasTrabajador ''+
						 '' union all ''+
						 '' select * from #reubicaciones ''+
						 '')datos ;''+

						''if exists (select top 1 * from #reubicaciones) begin''+
						'' Declare @ii int  ''+
						'' set @ii=1  ''+
						'' while @ii <= (select max(id) id from #platra where id in (select id from #platra where n=2)) begin  ''+
							'' if(@ii in (select id id from #platra where id in (select id from #platra where n=2))) begin ''+		
								--select isnull(p2.desde-1,p1.hasta)desden,p1.* 
							'' update p1 set p1.hasta  = isnull(p2.desde-1,p1.hasta) ''+
							'' from #platra p1 ''+
							'' left join (select * from #platra where  id = @ii) p2 ''+
							'' on p1.n+1=p2.n ''+
							''	where p1.id = @ii  ''+
							'' end ''+
							'' set @ii = @ii+1 ''+
						'' end ''+
						''end;'';

if @activas=1 and (@leyenda = ''Plazas_Empleado'' or @leyenda ='''')begin
	set @plazas=@plazas + 	'' select id_Plaza,opciones,partida,unidad,subunidad,categoria,horas,plaza,udp,right(''''00'''' + cast(status as varchar), 2) status,right(''''00'''' + cast(motivo as varchar), 2)motivo,id_motivo,documento,desde,hasta,nivel,ct,nivelCM,SS,desde desdePlazaEmpleado,ROW_NUMBER() OVER( ORDER BY categoria,id_plaza,desde desc) AS id,clave,''''''''registro from #platra ''+
							'' where status in (''''14'''',''''15'''',''''01'''',''''06'''') and hasta ''+@operador +'' dbo.fechaToAnioQuincena( getdate() ) ''+
							''Order by id_plaza,desde desc,cast( case when status= ''''03'''' then ''''100'''' else status end as int) desc ;''
end else 
if @activas=1 and @leyenda = ''Plazas_del_Empleado'' 
begin 
set @plazas=@plazas + 	'' select id_Plaza,opciones,partida+unidad+subunidad+categoria+horas+plaza plaza ,udp,right(''''00'''' + cast(status as varchar), 2) status,right(''''00'''' + cast(motivo as varchar), 2)motivo,id_motivo,documento,desde,hasta,nivel,ct,nivelCM,SS,desde desdePlazaEmpleado,ROW_NUMBER() OVER( ORDER BY categoria,id_plaza,desde desc) AS id,clave,''''''''registro from #platra ''+
							'' where status in (''''14'''',''''15'''',''''01'''',''''06'''') and hasta ''+@operador +'' dbo.fechaToAnioQuincena( getdate() ) ''+
							''Order by id_plaza,desde desc,cast( case when status= ''''03'''' then ''''100'''' else status end as int) desc ;''
end
if @activas=0 and ( @leyenda = ''Plazas_Empleado'' or @leyenda ='''')  begin
	set @plazas=@plazas+  ''select id_Plaza,opciones,partida,unidad,subunidad,categoria,horas,plaza,udp,status,motivo,id_motivo,documento,desde,hasta,nivel,ct,nivelCM,SS,desdePlazaEmpleado,ROW_NUMBER() OVER( ORDER BY categoria,id_plaza,desde desc) AS id,clave,registro  from (''+
							  '' select id_Plaza,opciones,partida,unidad,subunidad,categoria,horas,plaza,udp,right(''''00'''' + cast(status as varchar), 2) status,right(''''00'''' + cast(motivo as varchar), 2)motivo,id_motivo,documento,desde,hasta,nivel,ct,nivelCM,SS,desde desdePlazaEmpleado,id,clave,''''''''registro from #platra where status not in (''''14'''',''''15'''',''''01'''',''''06'''') or  hasta ''+@operador +'' dbo.fechaToAnioQuincena( getdate() )''+
							  '' union all ''+
							  '' select id_Plaza,opciones,partida,unidad,subunidad,categoria,horas,plaza,udp,right(''''00'''' + cast(rtrim(ltrim(status)) as varchar), 2) status,right(''''00'''' + cast(rtrim(ltrim(motivo)) as varchar), 2)motivo,id_motivo,documento,desde,hasta,nivel,ct,nivelCM,SS, desdePlazaEmpleado,id,clave,''''Empalme'''' registro from #plazasTrabajadorEmpalmes ''+							
						  '') a Order by categoria,id_plaza,desde desc,cast( case when status= ''''03'''' then ''''100'''' else status end as int) desc,hasta desc ;''
end else 
if @activas=0 and @leyenda = ''Plazas_del_Empleado''
begin 
	set @plazas=@plazas+  ''select id_Plaza,opciones,partida,unidad,subunidad,categoria,horas,plaza,udp,status,motivo,id_motivo,documento,desde,hasta,nivel,ct,nivelCM,SS,desdePlazaEmpleado,ROW_NUMBER() OVER( ORDER BY categoria,id_plaza,desde desc) AS  id,clave,registro from (''+
							  '' select id_Plaza,opciones,partida+unidad+subunidad+categoria+horas+plaza plaza,udp,right(''''00'''' + cast(status as varchar), 2) status,right(''''00'''' + cast(motivo as varchar), 2)motivo,id_motivo,documento,desde,hasta,nivel,ct,nivelCM,SS,desde desdePlazaEmpleado,id,clave,''''''''registro from #platra where status not in (''''14'''',''''15'''',''''01'''',''''06'''') or  hasta ''+@operador +'' dbo.fechaToAnioQuincena( getdate() )''+
							  '' union all ''+
							  '' select id_Plaza,opciones,partida+unidad+subunidad+categoria+horas+plaza plaza,udp,right(''''00'''' + cast(rtrim(ltrim(status)) as varchar), 2) status,right(''''00'''' + cast(rtrim(ltrim(motivo)) as varchar), 2)motivo,id_motivo,documento,desde,hasta,nivel,ct,nivelCM,SS, desdePlazaEmpleado,id,clave,''''Empalme'''' registro from #plazasTrabajadorEmpalmes ''+							
						  '') a Order by plaza,id_plaza,desde desc,cast( case when status= ''''03'''' then ''''100'''' else status end as int) desc,hasta desc ;''
end

execute sp_executesql @plazas
--select @plazas
--exec [P_obtenerReportePlazas] 71018,0,''Plazas_Empleado'',121,0,''''
end


    
--select * into #Hstatplaza from ( SELECT hsp.Id_plaza, hsp.id_rel, hsp.Fecha, hsp.Id_User, hsp.Movimiento FROM Hstatusplaza hsp with(nolock)INNER JOIN PlazaEmpleados pe with(nolock) ON pe.id_plaza=hsp.id_plaza WHERE pe.id_emp=71018)hp where id_rel != 2;  select * into #plazas_Emp from ( SELECT Id_Emp,Id_plaza,Fecha,Id_User,Movimiento,id_nodo,Documentos,Id,id_plazaanterior,esHistoria,desliguePlaza,tipoHistoria FROM PlazaEmpleados with(nolock) )pe where id_plaza in (select distinct id_plaza from #Hstatplaza); select DISTINCT tabla.id_emp, tabla.id_plaza, tabla.id_nodo, DESDE,HASTA,quincenaDesde,quincenaHasta INTO #tabla from ( SELECT pe.id_emp AS id_emp, pe.id_plaza, pe.id_nodo ,pe.fecha AS desde , /*hist.hasta*/ case when hist.hasta is null then ''9999-12-01 00:00:00.000'' else hist.hasta end hasta, cast( year(pe.fecha ) as varchar) + Right(''00'' + Cast(case when(day(pe.fecha )>15)then month(pe.fecha )*2 else (month(pe.fecha )*2)-1 end as Varchar(2)),2) as quincenaDesde, case when hist.hasta IS NULL OR year(hist.hasta) = 9999 THEN ''999999'' ELSE cast( year(hist.hasta-1)  as varchar) + Right(''00'' + Cast(case when(day(hist.hasta-1)>15)then month(hist.hasta-1)*2 else (month(hist.hasta-1)*2)-1 end as Varchar(2)),2) end as quincenaHasta FROM #plazas_Emp pe with(nolock) Left Join ( SELECT p.id_plaza, p.fecha, MIN(h.fecha) AS hasta FROM #plazas_Emp p with(nolock) INNER JOIN #plazas_Emp h with(nolock) ON p.id_plaza = h.id_plaza Where p.fecha < h.fecha GROUP BY p.id_plaza, p.Fecha ) hist ON pe.id_plaza = hist.id_plaza AND pe.fecha = hist.fecha ) Tabla join ( SELECT p.Id_Emp,p.id_plaza,documentos FROM ( select Id_Emp,id_plaza,fecha,documentos from PlazaEmpleados with(nolock) ) p join ( SELECT Id_Emp, id_plaza,max(Fecha)fecha FROM PlazaEmpleados with(nolock) WHERE id_emp =71018group by Id_Emp, id_plaza ) pf on pf.fecha= p.fecha and p.id_plaza=pf.id_plaza and p.id_emp=pf.id_emp WHERE p.id_emp = 71018group by p.Id_Emp, p.id_plaza,Documentos ) tabla2 on tabla2.Id_Emp = tabla.Id_Emp and tabla.Id_plaza = tabla2.Id_plaza where tabla.id_emp =71018select ROW_NUMBER() OVER( ORDER BY ID_PLAZA desc)np,id_plaza into #plazas from ( select distinct id_plaza from #tabla )a; SELECT ROW_NUMBER() OVER( PARTITION BY id_plaza ORDER BY ID_PLAZA,QUINCENADESDE desc) AS n,*,0 cambio into #dh FROM #tabla; Declare @i int set @i=1 while @i <= (select max(np) from #plazas where np=@i) begin Declare @ip int set @ip = (select id_plaza from #plazas where np=@i); Declare @y int set @y = 2;  while(@y <=(select max(n) from #dh where id_plaza=@ip))begin if(select quincenaDesde from #dh where id_plaza=@ip and @y-1=n )!= (select dbo.fechaToAnioQuincena(case when hasta= ''9999-12-31 23:59:00.000'' then ''1999-12-31 23:59:00.000'' else hasta+1 end) from #dh where id_plaza=@ip and @y=n ) begin update #dh set cambio=(Select max(cambio)+1 from #dh) where n>=@y and id_plaza=@ip End set @y=@y+1 End set @i=@i+1 End select #dh.id_nodo,tabla.* into #tabla3 from (select id_emp,id_plaza,min(DESDE)DESDE,max(HASTA)HASTA,min(quincenaDesde)quincenaDesde,max(quincenaHasta)quincenaHasta from #dh group by id_emp,id_plaza,Cambio )tabla join #dh on #dh.quincenaHasta=tabla.quincenaHasta and #dh.id_plaza =tabla.id_plaza;  Select distinct tabla.id_Plaza,'''' as opciones, partida, right(''00'' + cast(unidad as varchar), 2) as unidad, right(''00'' + cast(subunidad as varchar), 2) as subunidad, categoria, horas, plaza as plaza, /*udp */ Case When  (select distinct right(''000'' + cast(t.UDP as varchar), 3) from #plazas_Emp temp1  inner join TablaLongitudProp_28 t with(nolock) on temp1.id_nodo = t.id_nodo  inner join plazaempleados temp2 with(nolock) on temp1.id_plaza = temp2.id_plaza  and temp1.fecha = temp2.fecha and temp1.id_emp = temp2.id_emp  and temp1.id_nodo = temp2.id_nodo where tabla.id_plaza = temp1.id_plaza  and temp1.fecha = (select max(fecha) from #plazas_Emp where id_plaza = tabla.id_plaza  and fecha <= getdate()) and temp2.id_emp=71018) is null then udp else  (select distinct right(''000'' + cast(t.UDP as varchar), 3) from #plazas_Emp temp1  inner join TablaLongitudProp_28 t with(nolock) on temp1.id_nodo = t.id_nodo  inner join plazaempleados temp2 with(nolock) on temp1.id_plaza = temp2.id_plaza  and temp1.fecha = temp2.fecha  and temp1.id_emp = temp2.id_emp  and temp1.id_nodo = temp2.id_nodo  where tabla.id_plaza = temp1.id_plaza  and temp1.fecha = (select max(fecha) from #plazas_Emp where id_plaza = tabla.id_plaza  and fecha <= getdate()) and temp2.id_emp = 71018) end as udp , right(''00'' + cast(Status as varchar), 2) as status, left (Motivo,2) motivo,substring (motivo,4,LEN(motivo))id_motivo,  documento, desde, hasta, nivel, /*ct,*/  case when  (select distinct v.centro_de_trabajo from #plazas_Emp temp1 with(nolock) inner join vistatablalongitud v with(nolock) on temp1.id_nodo = v.id_nodo  inner join plazaempleados temp2 with(nolock) on temp1.id_plaza = temp2.id_plaza and temp1.fecha = temp2.fecha  and temp1.id_emp = temp2.id_emp and temp1.id_nodo = temp2.id_nodo  where tabla.id_plaza = temp1.id_plaza and temp1.fecha = (select max(fecha) from #plazas_Emp with(nolock) where id_plaza = tabla.id_plaza and fecha <= getdate()) and temp2.id_emp = 71018) is null then ct else  (select distinct v.centro_de_trabajo from #plazas_Emp temp1 with(nolock) inner join vistatablalongitud v with(nolock) on temp1.id_nodo = v.id_nodo inner join plazaempleados temp2 with(nolock) on temp1.id_plaza = temp2.id_plaza and temp1.fecha = temp2.fecha  and temp1.id_emp = temp2.id_emp and temp1.id_nodo = temp2.id_nodo  where tabla.id_plaza = temp1.id_plaza and temp1.fecha = (select max(fecha) from #plazas_Emp where id_plaza = tabla.id_plaza and fecha <= getdate()) and temp2.id_emp = 71018) end as ct,  nivelCM, case when ss IS null then ''22'' when ss= 3 then ''59'' end SS, desdePlazaEmpleado, tabla.id , clave into #informacionPlazas from (  Select HSS.id_rel ss,Documentos.clave,plazaieepo.id_Plaza, plazaieepo.partida, plazaieepo.unidad, plazaieepo.subunidad, plazaieepo.categoria, plazaieepo.horas, plazaieepo.Diagonal as plaza,  right(''000'' + cast(TablaLongitudProp_28.UDP as varchar), 3) as UDP,  right(''00'' + cast( (  Select top 1 id_rel from (   SELECT pe.id_plaza, pe.id_rel AS id_rel, pe.fecha,   dbo.DateToQna(pe.fecha) as quincenaDesde   FROM #Hstatplaza pe with(nolock)   Where pe.id_plaza = PlazasEmp.id_plaza  and Fecha in (select max(fecha)f from #Hstatplaza Where id_plaza = pe.id_plaza and dbo.DateToQna(fecha)<=PlazasEmp.quincenaHasta )  ) Aux where Aux.quincenaDesde > = PlazasEmp.quincenaDesde and Aux.quincenaDesde <= PlazasEmp.quincenaHasta  order by quincenaDesde desc ) as varchar), 2) as Status, (SELECT top 1 id_rel  FROM ( SELECT pe.id_plaza,rtrim(ltrim(tp.CveTipoPlaza))+''-''+cast(pe.id_rel as varchar(3)) as id_rel,pe.fecha, dbo.DateToQna(pe.fecha) as quincenaDesde FROM htipoplaza pe with(nolock) join ttipoplaza tp with(nolock) on pe.id_rel=tp.Id_TipoPlaza WHERE pe.id_plaza = PlazasEmp.id_plaza  and Fecha in (select max(fecha)f FROM htipoplaza WHERE id_plaza = pe.id_plaza and dbo.DateToQna(fecha)<=PlazasEmp.quincenaHasta) ) Aux WHERE Aux.quincenaDesde > = PlazasEmp.quincenaDesde and Aux.quincenaDesde <= PlazasEmp.quincenaHasta ORDER BY quincenaDesde DESC ) motivo, Documentos.folio as documento, Case when categoria like ''%AB%'' Then  (Select top 1 quincenaDesde from (    SELECT pe.id_plaza, pe.id_rel AS id_rel, pe.fecha,    dbo.DateToQna(pe.fecha) as quincenaDesde    FROM #Hstatplaza pe with(nolock)    Where pe.id_plaza = PlazasEmp.id_plaza  ) Aux where fecha <= getDate() and Aux.quincenaDesde > = PlazasEmp.quincenaDesde and Aux.quincenaDesde <= PlazasEmp.quincenaHasta  order by quincenaDesde desc ) Else  dbo.DateToQna(PlazasEmp.desde) End as Desde, case when PlazasEmp.hasta IS NULL OR year(PlazasEmp.hasta) = 9999 THEN ''999999'' ELSE dbo.DateToQna(PlazasEmp.hasta) end as hasta, right(''00'' + cast(Tabulador.nivel as varchar), 2) as nivel, right(''00'' + cast(TabuladorCM.nivel as varchar), 2) as nivelCM, vistatablalongitud.Centro_de_Trabajo as CT, dbo.DateToQna(PlazasEmp.desde) as desdePlazaEmpleado, id = ROW_NUMBER() OVER (ORDER BY plazaieepo.id_Plaza) from Empleados with(nolock)inner join (  select * from #tabla3 where id_emp = 71018) PlazasEmp on Empleados.id_emp = PlazasEmp.id_emp left join (   Select tTabulador_SE_Nivel_Pago.*, HTabulador_SE_Nivel_Pago.id_plaza from HTabulador_SE_Nivel_Pago with(nolock) inner join (     Select id_plaza, max(fecha) as fecha from HTabulador_SE_Nivel_Pago with(nolock) where fecha <= getDate() group by id_plaza   ) HTabuladores on HTabulador_SE_Nivel_Pago.id_plaza = HTabuladores.id_plaza and HTabulador_SE_Nivel_Pago.fecha= HTabuladores.fecha   inner join tTabulador_SE_Nivel_Pago with(nolock) on HTabulador_SE_Nivel_Pago.id_rel = tTabulador_SE_Nivel_Pago.id_Tabulador_SE_Nivel_Pago	) Tabulador on Tabulador.id_plaza = PlazasEmp.id_plaza left join ( Select tTabulador_SE_CM.*, HTabulador_SE_CM.id_plaza  from HTabulador_SE_CM with(nolock) inner join (  Select id_plaza, max(fecha) as fecha from HTabulador_SE_CM with(nolock) where fecha <= getDate()  group by id_plaza ) HTabuladoresCM on HTabulador_SE_CM.id_plaza = HTabuladoresCM.id_plaza  and HTabulador_SE_CM.fecha= HTabuladoresCM.fecha  inner join tTabulador_SE_CM with(nolock) on HTabulador_SE_CM.id_rel = TTabulador_SE_CM.id_Tabulador_SE_CM ) TabuladorCM on TabuladorCM.id_plaza = PlazasEmp.id_plaza left join (  Select MAX(right(''00''+ftm.clave,2)) AS clave,fup_documento_detalle.id_plaza id_plazaPadre, fup_documentos.Fecha_Autorizacion, fup_documentos.folio,FUP_Documentos.Id_Documento,formula,valor id_plaza from fup_documentos with(nolock) inner join fup_documento_detalle with(nolock) on fup_documentos.id_documento = fup_documento_detalle.id_documento  inner join FUP_MotivoMovimiento fmm with(nolock) on fup_documento_detalle.id_motivomovimiento=fmm.id_motivomovimiento  inner join FUP_TipoMovimiento ftm with(nolock) on fmm.id_tipomovimiento=ftm.id_tipomovimiento  inner join (select id_emp,Id_Plaza,MAX(Fecha_Autorizacion)Fecha_Autorizacion from fup_documento_detalle dd with(nolock) join FUP_Documentos d with(nolock) on d.Id_Documento=dd.Id_Documento where id_emp = 71018	group by id_emp,Id_Plaza ) fdm on fup_documentos.Fecha_Autorizacion=fdm.Fecha_Autorizacion and fup_documento_detalle.Id_Plaza=fdm.Id_Plaza  join FUP_DetalleCampos fdc with(nolock) on fup_documento_detalle.Id_MotivoMovimiento=fdc.Id_MotivoMovimiento join Tformulas tf with(nolock) on tf.idFormula=fdc.Id_Formula and tf.formula =''id_plaza'' join FUP_ValorInteger fvi with(nolock) on fvi.Id_Valor=fdc.Id_Valor and fvi.Id_Documento=fup_documento_detalle.Id_Detalle   where fup_documentos.id_emp = 71018 and fup_documentos.id_estatus = 2  group by fup_documento_detalle.id_plaza, fup_documentos.Fecha_Autorizacion,fup_documentos.folio,FUP_Documentos.Id_Documento,formula,valor ) Documentos on Documentos.id_plaza = PlazasEmp.id_plaza Inner join plazaieepo with(nolock) on PlazasEmp.id_plaza = plazaieepo.id_plaza left join vistatablalongitud with(nolock) on PlazasEmp.id_nodo = vistatablalongitud.id_nodo left join TablaLongitudProp_28 with(nolock) on vistatablalongitud.id_nodo = TablaLongitudProp_28.id_nodo LEFT JOIN (select * from  hSeccion__Sindical with(nolock) where id_rel=3 )HSS ON HSS.id_plaza=PlazasEmp.id_plaza inner join (  Select acceso.id_nodo from accesosorganigrama acceso with(nolock) inner join (    select * from tablaconfigorgan with(nolock) where id_nodopadre in (      select id_nodo from TablaConfigOrgan with(nolock) where id_nodopadre in (        select id_nodo from TablaConfigOrgan with(nolock) where id_tablalongitud = 26      )    )  ) organ on acceso.id_nodo = organ.id_nodo where acceso.id_usuario = 121) PermisosOrganigrama on PermisosOrganigrama.id_nodo = vistatablalongitud.id_nodo INNER JOIN (   select DISTINCT rn.id_nodo from fup_relnivel_nodo rn with(nolock)   inner join FUP_RelUsuariosNivelAcademico f with(nolock) on rn.id_nivel_educativo = f.id_nivel        where f.id_usuario = 121) nivel ON nivel.id_nodo = PermisosOrganigrama.id_nodo where empleados.id_emp = 71018) Tabla, #plazas_Emp peTemp ;  select distinct idF id,infoFinal.id_Plaza,opciones,partida,unidad,subunidad,categoria,horas,plaza,isnull(infoFinal.udp,tlp28.udp)  udp,isnull (statusM,status)status,isnull(motivoM,motivo)motivo,isnull(Id_TipoPlazaM,id_motivo)id_motivo,isnull(fup.Folio,'''')documento,isnull(desdeM,desde)desde,isnull(hastaM,hasta)hasta,nivel,isnull(ctM,ct)ct,nivelCM,SS,desdePlazaEmpleado,id ids,infoFinal.clave  into #plazasTrabajador from( Select idF = ROW_NUMBER() OVER (ORDER BY Datos.desde), pe.*,Datos.status statusM,Datos.motivo motivoM,Datos.desde desdeM,Datos.hasta hastaM,Datos.ct ctM,Datos.quincenaHasta quincenaHastaM,Datos.fechaDesde fechaDesdeM,Datos.Id_plaza Id_plazaM,Id_TipoPlaza Id_TipoPlazaM from  #informacionPlazas pe left join (   Select right(''00'' + cast(EstatusPlaza.id_rel as varchar), 2) as status,MotivoPlaza.id_rel motivo,Id_TipoPlaza,dbo.DateToQna(EstatusPlaza.desde) as desde, case when right(''00'' + cast(EstatusPlaza.id_rel as varchar), 2) =''03'' then  dbo.DateToQna(EstatusPlaza.desde)  else isnull(dbo.DateToQna(EstatusPlaza.hasta),''999999'') end hasta, 				(SELECT ISNULL(VTL.Centro_de_Trabajo,'''')  					FROM PlazaEmpleados PE 					LEFT JOIN vistaTablaLongitud VTL ON VTL.id_nodo=PE.id_nodo 					WHERE PE.id_plaza = EstatusPlaza.id_plaza AND PE.fecha=(Select MAX(fecha) 																			FROM PlazaEmpleados 																			WHERE id_plaza = EstatusPlaza.id_plaza  AND  fecha <=EstatusPlaza.desde 																			) 				) as ct ,case when EstatusPlaza.quincenaHasta IS NULL THEN ''999999'' ELSE dbo.DateToQna(EstatusPlaza.quincenaHasta) END as quincenaHasta, EstatusPlaza.desde as fechaDesde, 				EstatusPlaza.Id_plaza 		from ( SELECT pe.id_plaza,pe.id_rel AS id_rel,pe.fecha AS desde,case when hist.hasta is not null then (hist.hasta -1) end as hasta,case when hist.hasta is null then pe.fecha else (hist.hasta -1) end AS quincenaHasta 				FROM Hstatusplaza pe  				Left Join (  							SELECT p.id_plaza, p.fecha, MIN(h.fecha) AS hasta   							FROM Hstatusplaza p  							INNER JOIN Hstatusplaza h ON p.id_plaza  = h.id_plaza 							Where p.fecha < h.fecha  							GROUP BY  p.id_plaza, p.Fecha  				) hist  ON pe.id_plaza = hist.id_plaza  AND pe.fecha = hist.fecha  		) EstatusPlaza   		left join (  					SELECT pe.id_plaza,Id_TipoPlaza,rtrim(ltrim(tp.CveTipoPlaza)) AS id_rel, pe.fecha AS desde, (hist.hasta-1) AS hasta 					FROM htipoplaza pe  					join ttipoplaza tp with(nolock) on pe.id_rel=tp.Id_TipoPlaza 					Left Join ( 								SELECT p.id_plaza, p.fecha, MIN(h.fecha) AS hasta  								FROM htipoplaza p  								INNER JOIN htipoplaza h ON p.id_plaza  = h.id_plaza 								Where p.fecha < h.fecha GROUP BY  p.id_plaza, p.Fecha 					) hist  ON pe.id_plaza = hist.id_plaza  AND pe.fecha = hist.fecha 		) MotivoPlaza on EstatusPlaza.id_plaza = MotivoPlaza.id_plaza and MotivoPlaza.desde = EstatusPlaza.desde 		where EstatusPlaza.id_plaza in (select id_plaza from #informacionPlazas) ) Datos on datos.id_plaza=pe.id_plaza and datos.desde >=  pe.desdePlazaEmpleado   and datos.hasta <= pe.hasta )infoFinal left join vistatablalongitud v on infoFinal.ct=v.clave join TablaLongitudProp_28 tlp28 on tlp28.id_nodo=v.id_nodo left join(select distinct id_emp,id_plaza,folio,case when fmm.Id_tipoMovimiento in (4,6,7,8) and fmm.clave not in (''10'',''95'') then dbo.fechaToAnioQuincena(FechaIni-1) else dbo.fechaToAnioQuincena(FechaIni) end FechaIni,case when fmm.Id_tipoMovimiento in (4,6,7,8) and fmm.clave not in (''10'',''95'') then dbo.fechaToAnioQuincena(Fechafin-1) else dbo.fechaToAnioQuincena(Fechafin) end FechaFin,fdd.Id_MotivoMovimiento,Clave,Descripcion from FUP_Documentos fd join FUP_Documento_Detalle fdd on fd.Id_Documento=fdd.Id_Documento join FUP_motivoMovimiento fmm on fmm.Id_MotivoMovimiento=fdd.Id_MotivoMovimiento where id_emp = 71018 and id_plaza in (select id_plaza from #informacionPlazas) and fd.id_estatus =2 )fup on fup.id_plaza=infoFinal.Id_plaza and isnull(desdeM,desde) <=cast(rtrim(ltrim(fechaini)) as int) and isnull(hastaM,hasta)>=cast(rtrim(ltrim(fechafin)) as int)  and rtrim(ltrim(fup.clave))=isnull(motivoM,motivo);select ROW_NUMBER() OVER( PARTITION BY id_plaza ORDER BY ID_PLAZA,fecha desc) AS id,  id_plaza,fecha,max(estatus)status,max(motivo)motivo into #desdeEmpal from (		select id_plaza,fecha,case when Id_TipoMovPlazas=2 then Valor_IdCampo else -1 end estatus,case when Id_TipoMovPlazas=1 then Valor_IdCampo else -1 end motivo		from Empalme_hplazas 		where Id_plaza in (select id_plaza from empalme_plazaempleados where id_emp =71018 ))empalmes group by id_plaza,fecha;  select distinct  pi.id_Plaza,''''opciones,pi.partida,pi.unidad,pi.subunidad,pi.categoria,pi.horas,pi.diagonal plaza,vt.UDP, p.status, CveTipoPlaza motivo,tt.Id_TipoPlaza id_motivo,isnull(folio,'''') documento,dbo.fechaToAnioQuincena(pe.Fecha)desdePlazaEmpleado,hasta,''''nivel,v.Clave ct, ''''nivelCM,''''SS,dbo.fechaToAnioQuincena(pe.Fecha)desde,1 id,null clave into #plazasEmpalmes from Empalme_PlazaEmpleados pe join  ( 	select d1.*,isnull(dbo.fechaToAnioQuincena(d2.Fecha),''999999'')hasta from #desdeEmpal d1 	left join #desdeEmpal d2 on d1.Id_plaza=d2.Id_plaza and d1.id+1=d2.id )p on p.Id_plaza=pe.Id_plaza and p.Fecha = pe.fecha join TTipoPlaza tt on tt.Id_TipoPlaza=p.motivo join plazaieepo pi on pi.Id_plaza=p.Id_plaza left join vistatablalongitud v on pe.id_nodo=v.Id_Nodo left join TablaLongitudProp_28 vt on vt.id_nodo=v.id_nodo left join(select distinct id_emp,id_plaza,folio,dbo.fechaToAnioQuincena(FechaIni)FechaIni,dbo.fechaToAnioQuincena(FechaFin)FechaFin,fdd.Id_MotivoMovimiento,Clave,Descripcion from FUP_Documentos fd join FUP_Documento_Detalle fdd on fd.Id_Documento=fdd.Id_Documento join FUP_motivoMovimiento ftm on ftm.Id_MotivoMovimiento=fdd.Id_MotivoMovimiento where id_emp = 71018 and id_plaza in (select id_plaza from empalme_plazaempleados where id_emp =71018 ) and fd.id_estatus =2 )fup on fup.id_plaza=pe.Id_plaza  and cast(rtrim(ltrim(fechaini)) as int)=dbo.fechaToAnioQuincena(pe.fecha) and cast(rtrim(ltrim(fup.clave)) as varchar(2))=cast(motivo as varchar(2)); select pte.id_Plaza,''''opciones,pte.partida,pte.unidad,pte.subunidad,pte.categoria,pte.horas,pte.plaza,pte.UDP, ''03'' status, fd.clave motivo,fd.clave id_motivo,isnull(fd.folio,'''') documento,fd.desde desdePlazaEmpleado,fd.hasta,''''nivel,pte.ct, ''''nivelCM,''''SS,fd.desde desde,1 id,null clave into #BajasPlazasEmpalmes from #plazasEmpalmes pte join ( select id_emp,id_plaza,fmm.clave,dbo.fechaToAnioQuincena(FechaIni) desde,dbo.fechaToAnioQuincena(FechaFin)hasta,folio from fup_documentos fd join fup_documento_detalle fdd on fd.id_documento=fdd.id_documento join fup_motivomovimiento fmm on fmm.id_MotivoMovimiento = fdd.id_MotivoMovimiento where fmm.Id_tipoMovimiento in (4,6,7,8) and fmm.clave not in (''10'',''95'') and fd.id_emp = 71018 )fd on pte.id_plaza=fd.id_plaza and fd.desde=pte.desde;select * into #plazasTrabajadorEmpalmes from (select * from #plazasEmpalmes union all select * from #BajasPlazasEmpalmes)a  select distinct pt.id, pt.id_Plaza,opciones,partida,unidad,subunidad,categoria,horas,plaza,udpnct udp,status,motivo,id_motivo,documento,desdenct desde,hasta,nivel,Centro_de_Trabajo ct,nivelCM,SS,desde desdePlazaEmpleado,id ids,clave,''''registro into #reubicaciones from #plazasTrabajador pt join (select id_emp,id_plaza,dbo.fechaToAnioQuincena(fecha)desdenct,v.Centro_de_Trabajo,tlp28.UDP udpnct from PlazaEmpleados pe left join vistatablalongitud v on pe.id_nodo=v.id_nodo join TablaLongitudProp_28 tlp28 on tlp28.id_nodo=v.id_nodo where id_emp = 71018 and (Documentos is not null and Documentos != '''')  ) r on r.Id_plaza=pt.id_plaza and desdenct>= desde and desdenct <=hasta and desdenct!=desde ; select ROW_NUMBER() OVER( PARTITION BY id ORDER BY ID,DESDE) AS n,* into #platra from  (  select *,''''registro from #plazasTrabajador  union all  select * from #reubicaciones )datos ;if exists (select top 1 * from #reubicaciones) begin Declare @ii int   set @ii=1   while @ii <= (select max(id) id from #platra where id in (select id from #platra where n=2)) begin   if(@ii in (select id id from #platra where id in (select id from #platra where n=2))) begin  update p1 set p1.hasta  = isnull(p2.desde-1,p1.hasta)  from #platra p1  left join (select * from #platra where  id = @ii) p2  on p1.n+1=p2.n 	where p1.id = @ii   end  set @ii = @ii+1  end end;
--select id_Plaza,opciones,partida,unidad,subunidad,categoria,horas,plaza,udp,status,motivo,id_motivo,documento,desde,hasta,nivel,ct,nivelCM,SS,desdePlazaEmpleado,
--ROW_NUMBER() OVER( ORDER BY categoria,id_plaza,desde desc) AS  id,clave,registro,id
--from ( 
--		select id_Plaza,opciones,partida,unidad,subunidad,categoria,horas,plaza,udp,right(''00'' + cast(status as varchar), 2) status,right(''00'' + cast(motivo as varchar), 2)motivo,
--				id_motivo,documento,desde,hasta,nivel,ct,nivelCM,SS,desde desdePlazaEmpleado,id,clave,''''registro 
--		from #platra where status not in (''14'',''15'',''01'',''06'') or  hasta < dbo.fechaToAnioQuincena( getdate() ) 
--		union all  
--		select id_Plaza,opciones,partida,unidad,subunidad,categoria,horas,plaza,udp,right(''00'' + cast(rtrim(ltrim(status)) as varchar), 2) status,
--			right(''00'' + cast(rtrim(ltrim(motivo)) as varchar), 2)motivo,id_motivo,documento,desde,hasta,nivel,ct,nivelCM,SS, desdePlazaEmpleado,id,clave,''Empalme'' registro 
--		from #plazasTrabajadorEmpalmes 
--	) a 
--Order by categoria,id_plaza,desde desc,cast( case when status= ''03'' then ''100'' else status end as int) desc,hasta desc ;




--select * from Empleados where rfc like ''%LOHD580203HD0%''


--exec [P_obtenerReportePlazas] 59166,1,''Plazas_Empleado'',121,0,''''
--exec [P_obtenerReportePlazasX] 59166,0,''Plazas_Empleado'',121,0,''''

----select * from Empleados where  rfc =''LADP810530K25''--Id_Emp=114072



--select * from empleados where rfc like ''%SAHN790609TC8%''
--select * from PlazaEmpleados where Id_plaza =92879 order by fecha-- where Id_Emp = 114072
--select * from HPlazas where Id_plaza =92879 order by fecha
--select * from FUP_Documentos where Id_Documento=1269247
--select * from FUP_Documento_Detalle  where Id_Documento=1269247
--select * from FUP_MotivoMovimiento where Id_MotivoMovimiento =67

--select * from empleados where rfc like ''%GIBG870911%''
--select * from PlazaEmpleados where id_plaza in (select id_plaza from PlazaEmpleados where id_emp  =147807) order by id_plaza,fecha 
--select * from HPlazas where id_plaza in (select id_plaza from PlazaEmpleados where id_emp  =147807) order by id_plaza,fecha 

--select * from ViewVistaTablalongitud where Id_Nodo in (17542,17568)'
GO

GO
PRINT N'Creating [dbo].[sp_InfoFup]'
GO
IF OBJECT_ID(N'[dbo].[sp_InfoFup]', 'P') IS NULL
EXEC sp_executesql N'create procedure [dbo].[sp_InfoFup] @ids varchar(max),  @type int
with encryption
as
begin
	if (@type = 0)
	begin
		with resumen as (
			select
				folio, Id_Detalle, a.Id_Documento,d.Id_Emp, a.Id_Plaza, a.Id_Estatus, cast(FechaIni as date) d,
				cast(FechaFin as date) h, c.Clave tip, b.Clave mot, b.Descripcion, a.orden,
				(
					select top 1 id_emp from ieepo..plazaempleados 
					where id_plaza = a.Id_Plaza and fecha <= a.FechaIni order by fecha desc
				) id_emp_actual,
				(
					select top 1 valor_idcampo from ieepo..hplazas
					where id_plaza = a.Id_Plaza and fecha <= a.FechaIni and Id_TipoMovPlazas = 2
					order by fecha desc
				) sts_act,
				(
					select top 1 valor_idcampo from ieepo..hplazas
					where id_plaza = a.Id_Plaza and fecha <= a.FechaIni and Id_TipoMovPlazas = 1
					order by fecha desc
				) mot_act, rfc, PlazaIEEPO
			from ieepo..FUP_Documento_Detalle a join ieepo..FUP_MotivoMovimiento b on a.Id_MotivoMovimiento = b.Id_MotivoMovimiento
			join ieepo..FUP_TipoMovimiento c on b.Id_TipoMovimiento = c.Id_TipoMovimiento
			join ieepo..FUP_Documentos d on a.Id_Documento = d.Id_Documento
			join ieepo..PlazaIEEPO e on a.Id_Plaza = e.Id_plaza
			join IEEPO..empleados f on d.Id_Emp = f.Id_Emp
			where d.Folio in (select value from dbo.fn_split(@ids,'',''))
		)
		select a.*, b.rfc rfc_actual
		from resumen a left join ieepo..empleados b
		on a.id_emp_actual = b.id_emp
		order by Id_Documento, orden, Id_Detalle
	end
	if (@type = 1)
		begin
		select
			folio, Id_Detalle, a.Id_Documento,d.Id_Emp, Id_Plaza, a.Id_Estatus, cast(FechaIni as date) d,
			cast(FechaFin as date) h, c.Clave,b.Clave, b.Descripcion
		from ieepo..FUP_Documento_Detalle a join ieepo..FUP_MotivoMovimiento b on a.Id_MotivoMovimiento = b.Id_MotivoMovimiento
		join ieepo..FUP_TipoMovimiento c on b.Id_TipoMovimiento = c.Id_TipoMovimiento
		join ieepo..FUP_Documentos d on a.Id_Documento = d.Id_Documento
		where a.id_documento in (
			select Id_Documento from ieepo..FUP_Documento_Detalle where id_detalle in (select value from dbo.fn_split(@ids,'',''))
		) order by a.Id_Documento, Id_Detalle
	end
end'
GO

GO
PRINT N'Creating [dbo].[InicializaHcontinuidadPagos]'
GO
IF OBJECT_ID(N'[dbo].[InicializaHcontinuidadPagos]', 'P') IS NULL
EXEC sp_executesql N'CREATE procedure [dbo].[InicializaHcontinuidadPagos](@idEmp as integer)                         
 as          
 begin          
 Delete from HcontinuidadPagos where añoqna = ''201212'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                      
           
 insert into HcontinuidadPagos (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )          
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad           
 from BasePeriodo(''20120616'',''20120630'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                    
            
 Delete from HcontinuidadPagos where añoqna = ''201213'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End         
           
 insert into HcontinuidadPagos (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )          
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad           
 from BasePeriodo(''20120701'',''20120715'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                    
           
 Delete from HcontinuidadPagos where añoqna = ''201214'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End         
           
 insert into HcontinuidadPagos (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )          
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad           
 from BasePeriodo(''20120716'',''20120731'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                    
           
 Delete from HcontinuidadPagos where añoqna = ''201215'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End         
           
 insert into HcontinuidadPagos (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )          
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad           
 from BasePeriodo(''20120801'',''20120815'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                    
           
 Delete from HcontinuidadPagos where añoqna = ''201216'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End          
           
 insert into HcontinuidadPagos (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )          
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad           
 from BasePeriodo(''20120816'',''20120831'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                    
          
 Delete from HcontinuidadPagos where añoqna = ''201217'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End          
           
 insert into HcontinuidadPagos (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )          
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad           
 from BasePeriodo(''20120901'',''20120915'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                    
          
 Delete from HcontinuidadPagos where añoqna = ''201218'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End         
           
 insert into HcontinuidadPagos (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )          
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad           
 from BasePeriodo(''20120916'',''20120930'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                    
          
 Delete from HcontinuidadPagos where añoqna = ''201219'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End          
           
 insert into HcontinuidadPagos (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )          
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad           
 from BasePeriodo(''20121001'',''20121015'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                    
          
 Delete from HcontinuidadPagos where añoqna = ''201220'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End          
           
 insert into HcontinuidadPagos (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )          
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad           
 from BasePeriodo(''20121016'',''20121031'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                     
          
 Delete from HcontinuidadPagos where añoqna = ''201221'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End          
           
 insert into HcontinuidadPagos (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )          
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad           
 from BasePeriodo(''20121101'',''20121115'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                    
          
 Delete from HcontinuidadPagos where añoqna = ''201222'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End          
           
 insert into HcontinuidadPagos (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )          
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad           
 from BasePeriodo(''20121116'',''20121130'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                    
          
 Delete from HcontinuidadPagos where añoqna = ''201223'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End          
           
 insert into HcontinuidadPagos (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )          
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad           
 from BasePeriodo(''20121201'',''20121215'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                    
          
 Delete from HcontinuidadPagos where añoqna = ''201224'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End         
           
 insert into HcontinuidadPagos (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )          
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad           
 from BasePeriodo(''20121216'',''20121231'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                     
          
 Delete from HcontinuidadPagos where añoqna = ''201301'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End         
           
 insert into HcontinuidadPagos (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )          
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad           
 from BasePeriodo(''20130101'',''20130115'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                    
          
 Delete from HcontinuidadPagos where añoqna = ''201302'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End         
           
 insert into HcontinuidadPagos (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )          
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad           
 from BasePeriodo(''20130116'',''20130131'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                    
          
 Delete from HcontinuidadPagos where añoqna = ''201303'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End         
           
 insert into HcontinuidadPagos (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )          
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad           
 from BasePeriodo(''20130201'',''20130215'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                     
          
 Delete from HcontinuidadPagos where añoqna = ''201304'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End         
           
 insert into HcontinuidadPagos (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )          
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad           
 from BasePeriodo(''20130216'',''20130228'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                    
          
 Delete from HcontinuidadPagos where añoqna = ''201305'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End         
           
 insert into HcontinuidadPagos (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )          
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad           
 from BasePeriodo(''20130301'',''20130315'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                    
          
 Delete from HcontinuidadPagos where añoqna = ''201306'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End         
           
 insert into HcontinuidadPagos (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )          
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad           
 from BasePeriodo(''20130316'',''20130331'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                    
          
 Delete from HcontinuidadPagos where añoqna = ''201307'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End         
           
 insert into HcontinuidadPagos (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )          
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad           
 from BasePeriodo(''20130401'',''20130415'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                    
          
 Delete from HcontinuidadPagos where añoqna = ''201308'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End         
           
 insert into HcontinuidadPagos (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )          
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad           
 from BasePeriodo(''20130416'',''20130430'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                     
          
 Delete from HcontinuidadPagos where añoqna = ''201309'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End         
           
 insert into HcontinuidadPagos (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )          
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad         
from BasePeriodo(''20130501'',''20130515'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                    
          
 Delete from HcontinuidadPagos where añoqna = ''201310'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End         
           
 insert into HcontinuidadPagos (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )          
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad           
 from BasePeriodo(''20130516'',''20130531'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                    
          
 Delete from HcontinuidadPagos where añoqna = ''201311'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End         
           
 insert into HcontinuidadPagos (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )          
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad           
 from BasePeriodo(''20130601'',''20130615'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                     
          
 Delete from HcontinuidadPagos where añoqna = ''201312'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End         
           
 insert into HcontinuidadPagos (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )          
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad           
 from BasePeriodo(''20130616'',''20130630'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                    
          
 Delete from HcontinuidadPagos where añoqna = ''201313'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End          
           
 insert into HcontinuidadPagos (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )          
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad           
 from BasePeriodo(''20130701'',''20130715'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                    
          
 Delete from HcontinuidadPagos where añoqna = ''201314'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End          
           
 insert into HcontinuidadPagos (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )          
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad           
 from BasePeriodo(''20130716'',''20130731'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                    
          
 Delete from HcontinuidadPagos where añoqna = ''201315'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End         
           
 insert into HcontinuidadPagos (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )          
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad           
 from BasePeriodo(''20130801'',''20130815'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                    
          
 Delete from HcontinuidadPagos where añoqna = ''201316'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End          
           
 insert into HcontinuidadPagos (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )          
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad           
 from BasePeriodo(''20130816'',''20130831'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                    
         
 Delete from HcontinuidadPagos where añoqna = ''201317'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End         
           
 insert into HcontinuidadPagos (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )          
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad           
 from BasePeriodo(''20130901'',''20130915'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
         
 Delete from HcontinuidadPagos where añoqna = ''201318'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End         
           
 insert into HcontinuidadPagos (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )          
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad           
 from BasePeriodo(''20130916'',''20130930'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                    
           
 Delete from HcontinuidadPagos where añoqna = ''201319'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End          
           
 insert into HcontinuidadPagos (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )          
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad           
 from BasePeriodo(''20131001'',''20131015'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                    
     
 Delete from HcontinuidadPagos where añoqna = ''201320'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End         
           
 insert into HcontinuidadPagos (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )          
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad           
 from BasePeriodo(''20131016'',''20131031'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End               
     
 Delete from HcontinuidadPagos where añoqna = ''201321'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End         
           
 insert into HcontinuidadPagos (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )          
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad           
 from BasePeriodo(''20131101'',''20131115'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End              
     
 Delete from HcontinuidadPagos where añoqna = ''201322'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End         
           
 insert into HcontinuidadPagos (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )          
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad           
 from BasePeriodo(''20131116'',''20131130'',@idEmp)  Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End             
     
 Delete from HcontinuidadPagos where añoqna = ''201323'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End          
           
 insert into HcontinuidadPagos (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )          
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad           
 from BasePeriodo(''20131201'',''20131215'',@idEmp)  Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End             
     
 Delete from HcontinuidadPagos where añoqna = ''201324'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End          
           
 insert into HcontinuidadPagos (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )      
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad           
 from BasePeriodo(''20131216'',''20131231'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End              
                 
 Delete from HcontinuidadPagos where añoqna = ''201401'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End          
   
 insert into HcontinuidadPagos (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )          
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad           
 from BasePeriodo(''20140101'',''20140115'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End             
   
 Delete from HcontinuidadPagos where añoqna = ''201402'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End   
   
 insert into HcontinuidadPagos (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )          
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad           
 from BasePeriodo(''20140116'',''20140131'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End   
          
 Delete from HcontinuidadPagos where añoqna = ''201403'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End          
   
 insert into HcontinuidadPagos (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )          
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad           
 from BasePeriodo(''20140201'',''20140215'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End   
   
 Delete from HcontinuidadPagos where añoqna = ''201404'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End  
   
 insert into HcontinuidadPagos (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )          
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad           
 from BasePeriodo(''20140216'',''20140228'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End   
           
 Delete from HcontinuidadPagos where añoqna = ''201405'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End   
   
 insert into HcontinuidadPagos (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )          
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad           
 from BasePeriodo(''20140301'',''20140315'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End   
          
 Delete from HcontinuidadPagos where añoqna = ''201406'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End   
   
 insert into HcontinuidadPagos (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )          
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad           
 from BasePeriodo(''20140316'',''20140331'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End   
          
 Delete from HcontinuidadPagos where añoqna = ''201407'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End    
   
 insert into HcontinuidadPagos (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )          
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad           
 from BasePeriodo(''20140401'',''20140415'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End   
         
 Delete from HcontinuidadPagos where añoqna = ''201408'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End    
   
 insert into HcontinuidadPagos (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )          
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad           
 from BasePeriodo(''20140416'',''20140430'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End         
                 
end   
'
GO

GO
PRINT N'Creating [dbo].[HxEmp]'
GO
IF OBJECT_ID(N'[dbo].[HxEmp]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[HxEmp]
	@rfc varchar(13)
AS
BEGIN
	SET NOCOUNT ON;
	
	IF OBJECT_ID(N''temporalEmp'', N''U'') IS NOT NULL 
	DROP TABLE temporalEmp;
	
	declare @id_emp as int = (select id_emp from [IEEPO].dbo.empleados where RFC like @rfc)

	select distinct id_plaza 
	into #plazas
	from [IEEPO].dbo.plazaempleados 
	where Id_Emp = @id_emp


	-- Armar historia de las plazas
	select ROW_NUMBER() over (order by id_plaza, fecha) row,
		   id_plaza, id_nodo, Id_Emp, Fecha
	into #hplazas_part 
	from [IEEPO].dbo.plazaempleados
	where id_plaza in (select id_plaza from #plazas)
	create index idx_hplzsp on #hplazas_part(id_plaza)

	select * into #hplazas from (
		select a.row, a.Id_plaza, a.Id_Emp, a.id_nodo, 
			   [dbo].[DateToQNA](a.Fecha) desde, [dbo].[DateToQNA](b.Fecha) hasta,
			   a.Fecha desde_f, b.Fecha hasta_f,
				case	
					when a.id_nodo <> b.id_nodo and a.Id_plaza = (a.Id_plaza - 1)
					then ''R''
					else ''''
				end reubica
		from #hplazas_part a left join #hplazas_part b
		on a.Id_plaza = b.Id_plaza and a.row = b.row - 1
	) x 
	create index idx_hplzs on #hplazas(id_plaza)

	select Id_plaza, Fecha, Valor_IdCampo stat_pla into #hstatus 
	from [IEEPO].dbo.hplazas 
	where Id_TipoMovPlazas = 2 and id_plaza in (select id_plaza from #plazas)
	create index idx_hstat on #hstatus(id_plaza)

	select Id_plaza, Fecha, Valor_IdCampo mot_pla into #hmotivos
	from [IEEPO].dbo.hplazas 
	where Id_TipoMovPlazas = 1 and id_plaza in (select id_plaza from #plazas)
	create index idx_hmot on #hmotivos(id_plaza)

	select ROW_NUMBER() over (order by a.id_plaza, a.fecha) row, 
		   a.Id_plaza, a.fecha, 
		   Right(''00'' + Cast(stat_pla as varchar(2)), 2) stat_pla, 
		   Right(''00'' + Cast(mot_pla as varchar(2)), 2) mot_pla
	into #hmovts_part
	from #hstatus a left join #hmotivos b 
	on a.Id_plaza = b.Id_plaza  and a.Fecha = b.Fecha
	create index idx_hmpart on #hmovts_part(id_plaza)

	select a.Id_plaza, a.stat_pla, a.mot_pla, 
		   [dbo].[DateToQNA](a.Fecha) desde,
		   [dbo].[DateToQNA](b.Fecha) hasta,
		   a.Fecha desde_f, b.Fecha hasta_f
	into #hmovimientos
	from #hmovts_part a left join #hmovts_part b on a.row = b.row -1 and a.Id_plaza = b.Id_plaza 
	insert into #hmovimientos select id_plaza, ''13'' as stat_pla, ''71'' as mot_pla, hasta as desde, hasta, hasta_f as desde_f, hasta_f from #hplazas where reubica = ''R''
	create index idx_hmovimientos on #hmovimientos(id_plaza)

	select d.PlazaIEEPO plaza, c.clave ct, e.RFC, a.desde desde_pemp, a.hasta hasta_pemp, 
		   b.stat_pla, b.mot_pla,b.desde, b.hasta,
		   d.partida, d.unidad ,d.subunidad, d.categoria, d.horas, d.Diagonal,
		   a.Id_plaza, a.id_nodo, a.Id_Emp 
	into temporalEmp
	from #hplazas a left join #hmovimientos b
	on a.Id_plaza = b.Id_plaza and b.desde between a.desde and a.hasta 
	left join [IEEPO].dbo.Ct_nodo$ c on a.id_nodo = c.id_nodo
	left join [IEEPO].dbo.plazaieepo$ d on a.Id_plaza = d.Id_plaza
	left join [IEEPO].dbo.empleados e on a.Id_Emp = e.Id_Emp
	where a.Id_Emp = @id_emp
	order by a.Id_plaza, a.desde_f
END
'
GO

GO
PRINT N'Creating [dbo].[SIGP_Empleados]'
GO
IF OBJECT_ID(N'[dbo].[SIGP_Empleados]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[SIGP_Empleados]    
    
@rfcs varchar(MAX) = ''''    
    
AS    
    
DECLARE @Xml AS XML      
SET @Xml = ''<empleado>'' + REPLACE(@rfcs, '','', ''</empleado><empleado>'') + ''</empleado>'';    
    
    
  select em.Id_Emp, em.RFC, em.CURP, em.ApPaterno PRIMER_APELLIDO, em.ApMaterno SEGUNDO_APELLIDO, em.NOMBRE, CONVERT(varchar,em.RFCFecha, 103) FECHA_NACIMIENTO,    
  em.SEXO GENERO, isnull(isnull(b.NSS,sr.NSS),'''') NUMERO_DE_SEGURIDAD_SOCIAL, isnull(isnull(b.Regimen,sr.RegimenRetiro),'''') REGIMEN_DE_PENSION , em.id_direccion, em.Id_Nacionalidad    
  into #empleados    
  from empleados em    
  left join (    
    select a.*, r.RegimenRetiro from hnss a inner join (    
    select id_emp,max(fecha) fecha from hnss where fecha <= getdate() group by id_emp    
    ) b on a.id_emp = b.id_emp and a.fecha = b.fecha    
    left join TRegimenRetiro r on r.id_RegimenRetiro = a.id_regimenretiro    
  ) sr on sr.id_emp = em.id_emp    
  left join Anexos_RegimenISSSTE b on em.CURP = b.CURP    
  where em.id_emp > 0  and em.rfc not like ''xxx%''  
      
  select Id_Emp, RFC, CURP, PRIMER_APELLIDO, SEGUNDO_APELLIDO, NOMBRE, FECHA_NACIMIENTO, GENERO, NUMERO_DE_SEGURIDAD_SOCIAL, REGIMEN_DE_PENSION,     
  TIPO_DE_DOMICILIO, PAIS, ENTIDAD, MUNICIPIO, LOCALIDAD, CALLE, TIPO_DE_VIALIDAD, ASENTAMIENTO_COLONIA, NUMERO_EXTERIOR, NUMERO_INTERIOR, 
  --REFERENCIAS, 
  MANZANA,    
  LOTE, CODIGO_POSTAL, TIPO_DE_TELEFONO--, LADA
  ,'''' NUMERO_TELEFONICO
  , EXTENCION, id_nacionalidad    
  into #empleados2    
  from #empleados e    
  left join (    
  --select distinct d.Id_Direccion, '''' TIPO_DE_DOMICILIO, p.Descr PAIS, e.Estado+'' - ''+e.Descr ENTIDAD, c.Ciudad+'' - ''+c.Descr MUNUCUPIO, l.Localidad+'' - ''+l.Descr LOCALIDAD,    
  --d.CALLE, '''' TIPO_DE_VIALIDAD, co.Colonia+'' - ''+co.Descr COLONIA, d.NumExt NUMERO_EXTERIOR, d.NumInt NUMERO_INTERIOR,'''' REFERENCIAS,'''' MANZANA,'''' LOTE, CODPOSTAL CODIGO_POSTAL,    
  --'''' TIPO_DE_TELEFONO, '''' LADA,TELEFONO NUMERO_TELEFONICO, '''' EXTENCION 
  select distinct d.Id_Direccion, '''' TIPO_DE_DOMICILIO, 
  case when p.Descr is null then '''' else p.Descr end as PAIS
  ,case when e.Id_Estado is null then '''' else e.Id_Estado end as ENTIDAD
  ,case when c.ciudad is null then '''' else c.ciudad end as MUNICIPIO
  ,case when l.Localidad is null then '''' else l.Localidad end as LOCALIDAD
  ,CASE WHEN d.CALLE is null then '''' else d.CALLE end AS CALLE,
  '''' TIPO_DE_VIALIDAD, 
  co.Colonia ASENTAMIENTO_COLONIA, 
  d.NumInt NUMERO_INTERIOR,
  d.NumExt NUMERO_EXTERIOR, --'''' REFERENCIAS
  '''' MANZANA,
  '''' LOTE, 
  CODPOSTAL CODIGO_POSTAL,    
  '''' TELEFONO,  '''' TIPO_DE_TELEFONO-- '''' LADA
  ,TELEFONO NUMERO_TELEFONICO, '''' EXTENCION    
  from TDirecciones d    
  left join TPais p on d.Id_Pais = p.Id_Pais    
  left join TEstados e on e.Id_Estado = d.Id_Estado    
  left join tciudad c on c.Id_Ciudad = d.Id_Ciudad    
  left join TColonia co on co.Id_Colonia = d.Id_Colonia    
  left join TLocalidad l on l.id_Localidad = d.Id_Localidad    
  ) di on di.id_direccion = e.id_direccion    
      
if (@rfcs='''')    
begin    
  select DISTINCT 
  a.Id_Emp as ID_DE_IDENTIFICACION_UNICA_DEL_EMPLEADO, a.RFC, a.CURP, a.PRIMER_APELLIDO, a.SEGUNDO_APELLIDO, a.NOMBRE, a.FECHA_NACIMIENTO, a.GENERO, a.NUMERO_DE_SEGURIDAD_SOCIAL, a.REGIMEN_DE_PENSION,     
  CASE WHEN a.TIPO_DE_DOMICILIO IS NULL THEN '''' ELSE '''' END AS TIPO_DE_DOMICILIO, 
  case when a.PAIS is null then '''' else  a.PAIS end PAIS
  ,case when a.ENTIDAD is null then '''' else a.ENTIDAD end AS ENTIDAD
  ,case when a.MUNICIPIO is null then '''' else a.MUNICIPIO end AS MUNICIPIO
  ,case when a.LOCALIDAD is null then '''' else a.LOCALIDAD end AS LOCALIDAD
  ,case when a.CALLE is null then '''' else a.CALLE end AS CALLE
  ,case when a.TIPO_DE_VIALIDAD is null then '''' else a.TIPO_DE_VIALIDAD end AS TIPO_DE_VIALIDAD
  ,case when a.ASENTAMIENTO_COLONIA is null then '''' else a.ASENTAMIENTO_COLONIA end AS ASENTAMIENTO_COLONIA
  ,case when a.NUMERO_EXTERIOR is null then '''' else a.NUMERO_EXTERIOR end AS NUMERO_EXTERIOR
  ,case when a.NUMERO_INTERIOR is null then '''' else a.NUMERO_INTERIOR end AS NUMERO_INTERIOR
  --a.REFERENCIAS
  ,case when a.MANZANA is null then '''' else a.MANZANA end AS MANZANA
  ,case when a.LOTE is null then '''' else a.LOTE end AS LOTE
  ,case when a.CODIGO_POSTAL is null then '''' else a.CODIGO_POSTAL end AS CODIGO_POSTAL
  ,case when a.TIPO_DE_TELEFONO is null then '''' else a.TIPO_DE_TELEFONO end AS TIPO_DE_TELEFONO
  --, a.LADA
  ,case when a.NUMERO_TELEFONICO is null then '''' else a.NUMERO_TELEFONICO end AS NUMERO_TELEFONICO
  ,case when a.EXTENCION is null then '''' else a.EXTENCION end AS EXTENCION,
  --a.id_nacionalidad
  --'''' TIPO_DE_CORREO,
  CASE WHEN c.email IS NULL THEN '''' ELSE c.email END CORREO_ELECTRONICO,'''' TIPO_DE_CORREO,
  CASE WHEN c.email IS NULL THEN '''' ELSE c.email END DIRECCION_DE_CORREO, 
  --tb.DESCR NOMBRE_DE_CARRERA, '''' FECHA_INICIO, '''' FECHA_TERMINO, '''' ESTATUS_INSTITUCION,     
  --'''' PROMEDIO, tn.Descripcion PROFESION, '''' PAIS_CARRERA, '''' TIPO_NACIONALIDAD, 
  case when na.Descr is null then '''' else na.Descr end AS NACIONALIDAD    
  from #empleados2 a    
  left join [172.16.77.19].federacion.dbo.usuarios_portal c on c.rfc = a.RFC    
  left join Escolaridad es on es.Id_Emp = a.Id_Emp    
  left join TBtEscol tb on tb.Id_Escolaridad = es.Id_Escolaridad    
  left join (select id_emp, max(id_nivelestudios) id_nivelestudios from rNivelEstudios group by id_emp) ne on ne.id_emp = a.Id_Emp    
  left join TNivelEstudios tn on tn.id_NivelEstudios = ne.id_NivelEstudios    
  left join TNacionalidad na on na.Id_Nacionalidad = a.id_nacionalidad order by rfc    
    
end    
else    
begin    
  select DISTINCT 
  a.Id_Emp as ID_DE_IDENTIFICACION_UNICA_DEL_EMPLEADO, a.RFC, a.CURP, a.PRIMER_APELLIDO, a.SEGUNDO_APELLIDO, a.NOMBRE, a.FECHA_NACIMIENTO, a.GENERO, a.NUMERO_DE_SEGURIDAD_SOCIAL, a.REGIMEN_DE_PENSION,     
  CASE WHEN a.TIPO_DE_DOMICILIO IS NULL THEN '''' ELSE '''' END AS TIPO_DE_DOMICILIO, 
  case when a.PAIS is null then '''' else  a.PAIS end PAIS
  ,case when a.ENTIDAD is null then '''' else a.ENTIDAD end AS ENTIDAD
  ,case when a.MUNICIPIO is null then '''' else a.MUNICIPIO end AS MUNICIPIO
  ,case when a.LOCALIDAD is null then '''' else a.LOCALIDAD end AS LOCALIDAD
  ,case when a.CALLE is null then '''' else a.CALLE end AS CALLE
  ,case when a.TIPO_DE_VIALIDAD is null then '''' else a.TIPO_DE_VIALIDAD end AS TIPO_DE_VIALIDAD
  ,case when a.ASENTAMIENTO_COLONIA is null then '''' else a.ASENTAMIENTO_COLONIA end AS ASENTAMIENTO_COLONIA
  ,case when a.NUMERO_EXTERIOR is null then '''' else a.NUMERO_EXTERIOR end AS NUMERO_EXTERIOR
  ,case when a.NUMERO_INTERIOR is null then '''' else a.NUMERO_INTERIOR end AS NUMERO_INTERIOR
  --a.REFERENCIAS
  ,case when a.MANZANA is null then '''' else a.MANZANA end AS MANZANA
  ,case when a.LOTE is null then '''' else a.LOTE end AS LOTE
  ,case when a.CODIGO_POSTAL is null then '''' else a.CODIGO_POSTAL end AS CODIGO_POSTAL
  ,case when a.TIPO_DE_TELEFONO is null then '''' else a.TIPO_DE_TELEFONO end AS TIPO_DE_TELEFONO
  --, a.LADA
  ,case when a.NUMERO_TELEFONICO is null then '''' else a.NUMERO_TELEFONICO end AS NUMERO_TELEFONICO
  ,case when a.EXTENCION is null then '''' else a.EXTENCION end AS EXTENCION,
  --a.id_nacionalidad
  --'''' TIPO_DE_CORREO,
  CASE WHEN c.email IS NULL THEN '''' ELSE c.email END CORREO_ELECTRONICO,'''' TIPO_DE_CORREO,
  CASE WHEN c.email IS NULL THEN '''' ELSE c.email END DIRECCION_DE_CORREO, 
  --tb.DESCR NOMBRE_DE_CARRERA, '''' FECHA_INICIO, '''' FECHA_TERMINO, '''' ESTATUS_INSTITUCION,     
  --'''' PROMEDIO, tn.Descripcion PROFESION, '''' PAIS_CARRERA, '''' TIPO_NACIONALIDAD, 
  case when na.Descr is null then '''' else na.Descr end AS NACIONALIDAD    
  from #empleados2 a    
  left join [172.16.77.19].federacion.dbo.usuarios_portal c on c.rfc = a.RFC    
  left join Escolaridad es on es.Id_Emp = a.Id_Emp    
  left join TBtEscol tb on tb.Id_Escolaridad = es.Id_Escolaridad    
  left join (select id_emp, max(id_nivelestudios) id_nivelestudios from rNivelEstudios group by id_emp) ne on ne.id_emp = a.Id_Emp    
  left join TNivelEstudios tn on tn.id_NivelEstudios = ne.id_NivelEstudios    
  left join TNacionalidad na on na.Id_Nacionalidad = a.id_nacionalidad    
  where a.rfc in (SELECT empleados.n.value(''.'', ''varchar(max)'') AS n FROM @Xml.nodes(''/empleado'') AS empleados(n))    
  order by rfc
end'
GO

GO
PRINT N'Creating [dbo].[Actualiza_nivel_fup]'
GO
IF OBJECT_ID(N'[dbo].[Actualiza_nivel_fup]', 'P') IS NULL
EXEC sp_executesql N'create procedure [dbo].[Actualiza_nivel_fup]
as
--al actualizar un id_detalle se ctualizaran los tipos de empleado y nivel de estudios del folio
--se actualiza a docente siempre y cuando no tenga plazas administrativas
--select fd.folio,fd.fecha_captura,fd.id_documento,fid.centro_trabajo,pi.plazaieepo,te.Descripcion,te.id_TipoEmpleado,
--u.usuario,u.observaciones
update fid set fid.id_tipoempleado=0
from fup_documentos fd
inner join fup_informacion_documentos fid on fd.id_documento=fid.id_documento
inner join fup_documento_detalle fdd on fid.id_documento=fdd.id_documento
inner join plazaieepo pi on fdd.id_plaza=pi.Id_plaza
inner join TTipoEmpleado te on fid.Id_TipoEmpleado=te.id_TipoEmpleado
inner join usuarios u on fd.id_usuario=u.id_usuario
where fd.id_estatus in (2,4,6) and fid.id_periodo in (select id_periodo from calennomina where leyenda10=''CFUP'')
and plazaieepo not like ''%e%'' and fid.Id_TipoEmpleado=1 and fd.id_emp not in (
select fd.id_emp
from fup_documentos fd
inner join fup_informacion_documentos fid on fd.id_documento=fid.id_documento
inner join fup_documento_detalle fdd on fid.id_documento=fdd.id_documento
inner join plazaieepo pi on fdd.id_plaza=pi.Id_plaza
inner join TTipoEmpleado te on fid.Id_TipoEmpleado=te.id_TipoEmpleado
inner join usuarios u on fd.id_usuario=u.id_usuario
where fd.id_estatus in (2,4,6) and fid.id_periodo in (select id_periodo from calennomina where leyenda10=''CFUP'')
and plazaieepo like ''%e%'' and fid.Id_TipoEmpleado=0
)

--se actualiza a tipo de empleado administrativo porque la plaza de mayor valor que tienen es administrativa con alguna
-- por lo menos docenete
--select fd.folio,fd.fecha_captura,fd.id_documento,fid.centro_trabajo,pi.plazaieepo,te.Descripcion,te.id_TipoEmpleado,
--u.usuario,u.observaciones
update fid set fid.id_tipoempleado=1
from fup_documentos fd
inner join fup_informacion_documentos fid on fd.id_documento=fid.id_documento
inner join fup_documento_detalle fdd on fid.id_documento=fdd.id_documento
inner join plazaieepo pi on fdd.id_plaza=pi.Id_plaza
inner join TTipoEmpleado te on fid.Id_TipoEmpleado=te.id_TipoEmpleado
inner join usuarios u on fd.id_usuario=u.id_usuario
where fd.id_estatus in (2,4,6) and fid.id_periodo in (select id_periodo from calennomina where leyenda10=''CFUP'')
and plazaieepo like ''%e%'' and fid.Id_TipoEmpleado=0 and fd.id_emp not in (
select fd.id_emp
from fup_documentos fd
inner join fup_informacion_documentos fid on fd.id_documento=fid.id_documento
inner join fup_documento_detalle fdd on fid.id_documento=fdd.id_documento
inner join plazaieepo pi on fdd.id_plaza=pi.Id_plaza
inner join TTipoEmpleado te on fid.Id_TipoEmpleado=te.id_TipoEmpleado
inner join usuarios u on fd.id_usuario=u.id_usuario
where fd.id_estatus in (2,4,6) and fid.id_periodo in (select id_periodo from calennomina where leyenda10=''CFUP'')
and plazaieepo not like ''%e%'' 
)


update rn set rn.id_NivelEstudios=case when tne.id_NivelEducativo in (3,4,6,8,9,10) then 9 else 6 end
from fup_documentos fd
inner join FUP_Informacion_Documentos fid on fd.id_documento=fid.id_documento
inner join fup_documento_detalle fdd on fd.id_documento=fdd.id_documento
inner join FUP_MotivoMovimiento fmm on fdd.Id_MotivoMovimiento=fmm.Id_MotivoMovimiento
inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento=ftm.Id_TipoMovimiento
inner join empleados e on fd.id_emp=e.id_emp
inner join usuarios u on fd.id_usuario=u.id_usuario
inner join RNivelEstudios rn on fd.id_emp=rn.id_emp
inner join tnivelestudios tn on rn.id_NivelEstudios=tn.id_NivelEstudios
inner join TNivelEducativo tne on fid.Id_Nivel_Educativo=tne.id_NivelEducativo
where fid.Id_Periodo in (3143,3046,3071,3096) and fd.Id_Estatus not in (3)
and rn.id_NivelEstudios=0 and ftm.Id_TipoMovimiento not in (6,7) and fmm.id_motivomovimiento not in (44,47,53,56)
and tne.id_NivelEducativo not in  (12)
'
GO

GO
PRINT N'Creating [dbo].[spsHistPagosDetalle]'
GO
IF OBJECT_ID(N'[dbo].[spsHistPagosDetalle]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		wchun
-- Create date: 08102013
-- Description:	procedimiento para seleccionar los datos del histpagosDEtalle
-- =============================================
CREATE PROCEDURE [dbo].[spsHistPagosDetalle]
@id_plaza int, @id_emp int, @id_periodo int, @id_recalculo int
WITH EXEC AS CALLER
AS
BEGIN

  declare @idplaza int = @id_plaza
  declare @idEmp int = @id_emp
  declare @idPeriodo int = @id_periodo
  declare @idrecalculo int = @id_recalculo

	select d.plazaieepo plaza , isnull(b.plazaieepo,'''') plazapago ,c.resultado, a.* from histpagosdetalle a 
	left join plazaieepo b on a.id_plazapago=b.id_plaza
	inner join plazaieepo d on a.id_plaza=d.id_plaza
	inner join conceptos c on a.id_concepto=c.id_concepto
	WHERE ID_PERIODO=@idPeriodo and id_referencia=@idrecalculo
	and a.id_plaza=@idplaza and a.id_emp=@idEmp
END'
GO

GO
PRINT N'Creating [dbo].[SP_SacaHistPagostotal_dsv]'
GO
IF OBJECT_ID(N'[dbo].[SP_SacaHistPagostotal_dsv]', 'P') IS NULL
EXEC sp_executesql N'
CREATE PROCEDURE [dbo].[SP_SacaHistPagostotal_dsv]              
(              
	@idplaza int,              
	@Idemp int,  
	@Anio int,          
	@AnioQna int              
)  
with encryption            
AS              
SET NOCOUNT ON              
declare @tbltmp table (
Id_Emp int, 
Id_Periodo int, 
id_concepto int, 
Consecutivo int, 
Horas int, 
Pesos decimal(9,2), 
Fecha date, 
CC varchar(max), 
PesosExcento int, 
id_plaza int, 
Id_Referencia int,
id_periodoPago int, 
Id_ProcesoNomina int, 
Desde decimal(6), 
Hasta decimal(6), 
esHistoria int, 
Fix int)

--if @anio = 2012 
--insert into @tbltmp 
  --select *  from [dep].dbo.Nom_histpagos_2012 where @idplaza = id_plaza and @Idemp = id_emp 
--if @anio = 2013
--insert into @tbltmp 
  --select *  from [dep].dbo.Nom_histpagos_2013 where @idplaza = id_plaza and @Idemp = id_emp 

insert into @tbltmp 
  select *  from Nom_histpagos where @idplaza = id_plaza and @Idemp = id_emp 

-- creacion de variable tipo tabla
Select a.id_emp,a.id_periodo,a.Periodo,c.Parcial,tituloPeriodo as Descripcion, Pi.PlazaIEEPO as Plaza,a.Id_plaza,a.Desde,a.Hasta,Percepciones,Deducciones,Liquido,a.Cheque,b.Id_Vector as Vector
--, isnull(a.Id_Referencia,0) Id_Referencia          
From      
	 ((Select a.id_emp as Id_Emp,a.id_periodo as Id_Periodo,Cast(c.año as varchar(4)) + ''''+Right(''00''+Cast(c.numero as varchar(2)),2) as Periodo, d.num_plaza as Plaza,d.Id_plaza,      
	 cast( year(c.FechaIni) as varchar) + ''''+ Right(''00'' + Cast(case when(day(c.FechaIni)>15)then month(c.FechaIni)*2 else (month(c.FechaIni)*2)-1 end as Varchar(2)),2) as Desde,  
	 cast( year(c.FechaFin) as varchar) + ''''+ Right(''00'' + Cast(case when(day(c.FechaFin)>15)then month(c.FechaFin)*2 else (month(c.FechaFin)*2)-1 end as Varchar(2)),2) as Hasta,       
	 convert(varchar(12), cast(sum(case when b.tipo = 1 then  a.pesos + a.pesosexcento else 0 end)as money), 1) as Percepciones ,               
	 convert(varchar(12), cast(sum(case when b.tipo = 2 then  a.pesos + a.pesosexcento else 0 end) as money), 1) as Deducciones,              
	 convert(varchar(12), cast(sum ( (case when b.tipo = 1 then  a.pesos + a.pesosexcento else 0 end ) - (case when b.tipo = 2 then  a.pesos + a.pesosexcento else 0 end ) ) as money), 1) as Liquido, f.folio as Cheque
	 --, isnull(a.Id_Referencia,0) Id_Referencia
	 from dbo.histpagosp a               
	 inner join calennomina c              
	 on a.id_periodo=c.id_periodo              
	 inner join dbo.conceptos b              
	 on b.id_concepto   = a.id_concepto                
	 inner join plazas d            
	 on d.id_plaza = a.id_plaza                
	 left join Folio_Recibos f          
	 on f.id_emp = a.id_emp and  f.id_plaza=a.id_plaza and f.id_periodo=a.id_periodo and f.Id_Recibo in (14,16,17) 
	 --and isnull(f.id_referencia,0) = isnull(a.Id_Referencia,0)     
	 group by a.id_periodo,a.id_emp,d.num_plaza,d.Id_plaza,c.numero,c.año,c.fechaini,c.fechafin,f.folio 
	 --,  isnull(a.Id_Referencia,0)                       
	 having  d.Id_plaza=@idplaza and a.id_emp = @Idemp    
          
union           
          
	 Select a.id_emp as Id_Emp,a.id_periodo as Id_Periodo,Cast(c.año as varchar(4)) + ''''+Right(''00''+Cast(c.numero as varchar(2)),2) as Periodo, d.num_plaza as Plaza,d.Id_plaza,      
	 cast( year(c.FechaIni) as varchar) + ''''+ Right(''00'' + Cast(case when(day(c.FechaIni)>15)then month(c.FechaIni)*2 else (month(c.FechaIni)*2)-1 end as Varchar(2)),2) as Inicio,  
	 cast( year(c.FechaFin) as varchar) + ''''+ Right(''00'' + Cast(case when(day(c.FechaFin)>15)then month(c.FechaFin)*2 else (month(c.FechaFin)*2)-1 end as Varchar(2)),2) as Fin,       
	 convert(varchar(12), cast(sum(case when b.tipo = 1 then  a.pesos + a.pesosexcento else 0 end)as money), 1) as Percepciones ,               
	 convert(varchar(12), cast(sum(case when b.tipo = 2 then  a.pesos + a.pesosexcento else 0 end) as money), 1) as Deducciones,              
	 convert(varchar(12), cast(sum ( (case when b.tipo = 1 then  a.pesos + a.pesosexcento else 0 end ) - (case when b.tipo = 2 then  a.pesos + a.pesosexcento else 0 end ) ) as money), 1) as Liquido, f.folio as Cheque
	 --, isnull(a.Id_Referencia,0) id_referencia
	 from @tbltmp a               
	 inner join calennomina c              
	 on a.id_periodo=c.id_periodo              
	 inner join dbo.conceptos b              
	 on b.id_concepto   = a.id_concepto                
	 inner join plazas d            
	 on d.id_plaza = a.id_plaza               
	 left join Folio_Recibos f          
	 on f.id_emp = a.id_emp and f.id_plaza=a.id_plaza and f.id_periodo=a.id_periodo and f.Id_Recibo in (14,16,17) 
	 --and isnull(f.id_referencia,0) = isnull(a.Id_Referencia,0)  
	 group by a.id_periodo,a.id_emp,d.num_plaza,d.Id_plaza,c.numero,c.año,c.fechaini,c.fechafin,f.folio
	 having  d.Id_plaza=@idplaza and a.id_emp = @Idemp    
	 --, isnull(a.Id_Referencia,0)               
)) a       
Left Join VistaVectores b       
On a.id_emp=b.id_emp and a.Id_plaza=b.Id_plaza and a.id_periodo=b.id_periodo and a.id_periodo= b.id_periodo_aplicacion     
Left Join ((Select Id_periodo,Numero,Parcial,tituloPeriodo,b.DescNomina,Año From Calennomina a Inner join ClasificacionNomina b on a.id_clasifnomina=b.Id_clasifnomina)) c      
On a.Id_periodo=c.Id_periodo  
Left Join plazaIEEPO Pi on a.Id_plaza=Pi.Id_plaza      
Where c.Año = @Anio And Periodo>=@AnioQna      
Order By Periodo,parcial      
      
SET NOCOUNT OFF      
'
GO

GO
PRINT N'Creating [dbo].[ct_region]'
GO
IF OBJECT_ID(N'[dbo].[ct_region]', 'P') IS NULL
EXEC sp_executesql N'create  PROCEDURE [dbo].[ct_region]
with encryption 
AS
select v.id_nodo,v.clave,t.Descrip from VistaTablaLongitud28 v
join RCT_Region r on v.Id_Nodo = r.id_nodo
join TCT_Region t on r.id_rel = t.id_CT_Region'
GO

GO
PRINT N'Creating [dbo].[SP_SacaHistPagostotal]'
GO
IF OBJECT_ID(N'[dbo].[SP_SacaHistPagostotal]', 'P') IS NULL
EXEC sp_executesql N'

CREATE PROCEDURE [dbo].[SP_SacaHistPagostotal]              
(              
	@idplaza int,              
	@Idemp int,  
	@Anio int,          
	@AnioQna int              
)              
AS              
SET NOCOUNT ON              
Select a.id_emp,a.id_periodo,a.Periodo,c.Parcial,Leyenda5+'' '' + isnull(Xfuera,'''')  as Descripcion, Pi.PlazaIEEPO as Plaza,a.Id_plaza,a.Desde,a.Hasta,Percepciones,Deducciones,Liquido,a.Cheque,b.Id_Vector as Vector, isnull(a.Id_Referencia,0) Id_Referencia          
From      
	 ((Select a.id_emp as Id_Emp,a.id_periodo as Id_Periodo,Cast(c.año as varchar(4)) + ''''+Right(''00''+Cast(c.numero as varchar(2)),2) as Periodo, d.num_plaza as Plaza,d.Id_plaza,      
	 cast( year(c.FechaIni) as varchar) + ''''+ Right(''00'' + Cast(case when(day(c.FechaIni)>15)then month(c.FechaIni)*2 else (month(c.FechaIni)*2)-1 end as Varchar(2)),2) as Desde,  
	 cast( year(c.FechaFin) as varchar) + ''''+ Right(''00'' + Cast(case when(day(c.FechaFin)>15)then month(c.FechaFin)*2 else (month(c.FechaFin)*2)-1 end as Varchar(2)),2) as Hasta,       
	 convert(varchar(12), cast(sum(case when b.tipo = 1 then  a.pesos + a.pesosexcento else 0 end)as money), 1) as Percepciones ,               
	 convert(varchar(12), cast(sum(case when b.tipo = 2 then  a.pesos + a.pesosexcento else 0 end) as money), 1) as Deducciones,              
	 convert(varchar(12), cast(sum ( (case when b.tipo = 1 then  a.pesos + a.pesosexcento else 0 end ) - (case when b.tipo = 2 then  a.pesos + a.pesosexcento else 0 end ) ) as money), 1) as Liquido, f.folio as Cheque, isnull(a.Id_Referencia,0) Id_Referencia
	 from dbo.histpagos a               
	 inner join calennomina c              
	 on a.id_periodo=c.id_periodo              
	 inner join dbo.conceptos b              
	 on b.id_concepto   = a.id_concepto                
	 inner join plazas d            
	 on d.id_plaza = a.id_plaza                
	 left join Folio_Recibos f          
	 on f.id_emp = a.id_emp and  f.id_plaza=a.id_plaza and f.id_periodo=a.id_periodo and f.Id_Recibo in (14,16,17) and isnull(f.id_referencia,0) = isnull(a.Id_Referencia,0)     
	 group by a.id_periodo,a.id_emp,d.num_plaza,d.Id_plaza,c.numero,c.año,c.fechaini,c.fechafin,f.folio, isnull(a.Id_Referencia,0)                       
	 having  d.Id_plaza=@idplaza and a.id_emp = @Idemp    
          
union           
          
	 Select a.id_emp as Id_Emp,a.id_periodo as Id_Periodo,Cast(c.año as varchar(4)) + ''''+Right(''00''+Cast(c.numero as varchar(2)),2) as Periodo, d.num_plaza as Plaza,d.Id_plaza,      
	 cast( year(c.FechaIni) as varchar) + ''''+ Right(''00'' + Cast(case when(day(c.FechaIni)>15)then month(c.FechaIni)*2 else (month(c.FechaIni)*2)-1 end as Varchar(2)),2) as Inicio,  
	 cast( year(c.FechaFin) as varchar) + ''''+ Right(''00'' + Cast(case when(day(c.FechaFin)>15)then month(c.FechaFin)*2 else (month(c.FechaFin)*2)-1 end as Varchar(2)),2) as Fin,       
	 convert(varchar(12), cast(sum(case when b.tipo = 1 then  a.pesos + a.pesosexcento else 0 end)as money), 1) as Percepciones ,               
	 convert(varchar(12), cast(sum(case when b.tipo = 2 then  a.pesos + a.pesosexcento else 0 end) as money), 1) as Deducciones,              
	 convert(varchar(12), cast(sum ( (case when b.tipo = 1 then  a.pesos + a.pesosexcento else 0 end ) - (case when b.tipo = 2 then  a.pesos + a.pesosexcento else 0 end ) ) as money), 1) as Liquido, f.folio as Cheque, isnull(a.Id_Referencia,0) id_referencia
	 from dbo.Nom_histpagos a               
	 inner join calennomina c              
	 on a.id_periodo=c.id_periodo              
	 inner join dbo.conceptos b              
	 on b.id_concepto   = a.id_concepto                
	 inner join plazas d            
	 on d.id_plaza = a.id_plaza               
	 left join Folio_Recibos f          
	 on f.id_emp = a.id_emp and f.id_plaza=a.id_plaza and f.id_periodo=a.id_periodo and f.Id_Recibo in (14,16,17) and isnull(f.id_referencia,0) = isnull(a.Id_Referencia,0)  
	 group by a.id_periodo,a.id_emp,d.num_plaza,d.Id_plaza,c.numero,c.año,c.fechaini,c.fechafin,f.folio, isnull(a.Id_Referencia,0)               
	 having  d.Id_plaza=@idplaza and a.id_emp = @Idemp    
)) a       
Left Join VistaVectores b       
On a.id_emp=b.id_emp and a.Id_plaza=b.Id_plaza and a.id_periodo=b.id_periodo and a.id_periodo= b.id_periodo_aplicacion     
Left Join ((Select Id_periodo,Numero,Parcial,tituloPeriodo,b.DescNomina,Año, a.Leyenda5, a.Xfuera   From Calennomina a Inner join ClasificacionNomina b on a.id_clasifnomina=b.Id_clasifnomina)) c      
On a.Id_periodo=c.Id_periodo  
Left Join plazaIEEPO Pi on a.Id_plaza=Pi.Id_plaza      
Where c.Año = @Anio And Periodo>=@AnioQna      
Order By Periodo,parcial      
      
SET NOCOUNT OFF      
'
GO

GO
PRINT N'Creating [dbo].[dsv_SacaHistPagostotal_14]'
GO
IF OBJECT_ID(N'[dbo].[dsv_SacaHistPagostotal_14]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		David Santibañez Vargas
-- Create date: 22/01/2014
-- Description:	referencia
-- =============================================
CREATE PROCEDURE [dbo].[dsv_SacaHistPagostotal_14]              
(              
	@Didplaza int,              
	@DIdemp int,  
	@DAnio int,          
	@DAnioQna int              
)              
with encryption
AS        
SET NOCOUNT ON        
BEGIN            

create table #prueba (id_emp int,	id_periodo int,	Periodo int,	
Parcial int,	Descripcion varchar(max),	Plaza	varchar(max), Id_plaza int,	Desde int,	Hasta int,
Percepciones varchar(max),	Deducciones varchar(max),	Liquido varchar(max),	Cheque varchar(max),	Vector int, id_referencia int)
insert into #prueba EXEC [dbo].[SP_SacaHistPagostotal] @idplaza = @Didplaza, 	@Idemp = @DIdemp, @Anio = @DAnio, @AnioQna = 1

insert into #prueba (id_emp, id_periodo, Periodo, Parcial,
Descripcion, Plaza, Id_plaza, Desde, Hasta, Percepciones, Deducciones, Liquido, Cheque, Vector, id_referencia  )
select noemp as id_emp, 0 as id_periodo, desde as Periodo, 0 as Parcial,''OMITIDO'' as Descripcion, 
plazaieepo as Plaza, b.id_plaza, Desde, desde as Hasta, 0 AS Percepciones, 0 AS Deducciones, 0 AS Liquido, 
'''' AS Cheque,  '' '' as Vector, 0 as id_referencia 
from templeadosplazaomitidos  a, plazaieepo b
where a.Noemp = @DIdemp and a.numplaza = @Didplaza and a.numplaza=b.id_plaza and cast(substring(desde,1,4) as int) = @DAnio

-----------------------------------------
select distinct  a.desde, a.id_plaza, a.id_periodo, a.Id_Referencia  into #pruebamil
 from nom_HistPagos a inner join #prueba b
 on a.Id_Periodo = b.id_periodo 
 where a.id_plaza = @Didplaza --and substring(a.desde,1,4)=@DAnio
 order by id_periodo
 -----------------------------------------
  
select id_emp, xx.id_periodo, Periodo, Parcial, Descripcion, Plaza, xx.Id_plaza, v.Desde, v.Hasta,
 Percepciones, Deducciones, Liquido, Cheque, Vector, v.id_referencia  into #prueba2 from 
 #prueba xx left join  
 (select min(a.desde) as desde, max(a.desde) as hasta,  a.id_plaza, a.Id_Periodo, a.Id_Referencia   
 from #pruebamil  a group by Id_Periodo,  id_plaza, Id_Referencia) v 
 on xx.id_plaza = v.id_plaza and xx.id_periodo = v.id_periodo and v.Id_Referencia = xx.id_referencia
 where xx.id_periodo in (select id_periodo from calennomina where leyenda4 = 2 and (parcial >= 20 and parcial <= 40)  )
 -- upper(Descripcion) =''RETROACTIVO'' 


 insert into #prueba2 (id_emp, id_periodo, Periodo, Parcial,
Descripcion, Plaza, Id_plaza, Desde, Hasta, Percepciones, Deducciones, Liquido, Cheque, Vector, id_referencia )
 select id_emp, xx.id_periodo, Periodo, Parcial, Descripcion, Plaza, xx.Id_plaza, v.Desde, v.Hasta,
 Percepciones, Deducciones, Liquido, Cheque, Vector, v.id_referencia from 
 #prueba xx left join  
 (select min(a.desde) as desde, max(a.desde) as hasta,  a.id_plaza, a.Id_Periodo, a.Id_Referencia   
 from HistPagos a, #prueba b where a.id_plaza = b.id_plaza and a.Id_Periodo = b.id_periodo 
 and (  a.id_periodo in (select id_periodo from calennomina where leyenda4 = 2 and (parcial >= 20 and parcial <= 40)  ))
 --upper(b.Descripcion) =''RETROACTIVO''
 group by a.id_plaza, a.Id_Periodo, a.Id_Referencia ) v
 on xx.id_plaza = v.id_plaza and xx.id_periodo = v.id_periodo and v.Id_Referencia = xx.id_referencia
 where xx.id_periodo in (select id_periodo from calennomina where leyenda4 = 2 and (parcial >= 20 and parcial <= 40)  )
 --upper(Descripcion) =''RETROACTIVO'' 
 
delete  from #prueba where 
#prueba.id_periodo in (select id_periodo from calennomina where leyenda4 = 2 and (parcial >= 20 and parcial <= 40)  )
--Descripcion =''RETROACTIVO''
delete  from #prueba2 where 
#prueba2.id_periodo in (select id_periodo from calennomina where leyenda4 = 2 and (parcial >= 20 and parcial <= 40)  ) and isnull(desde,'''')=''''
--Descripcion =''RETROACTIVO''

update #prueba set Descripcion = ''OMITIDO'' where id_emp = @DIdemp and Id_plaza = @Didplaza 
 and  id_periodo in (
select c.Id_Periodo from CalenNomina c inner join #prueba p on c.Id_Periodo = p.id_periodo
and c.Id_Periodo  in (select distinct id_periodo  from nom_histpagos where id_emp = @DIdemp and id_concepto = 1789 and id_plaza = @didplaza))

SELECT id_emp, id_periodo, Periodo, Parcial,
Descripcion, Plaza, Id_plaza, Desde, Hasta, Percepciones, Deducciones, Liquido, Cheque, Vector, id_referencia From (
select id_emp, id_periodo, Periodo, Parcial,
Descripcion, Plaza, Id_plaza, Desde, Hasta, Percepciones, Deducciones, Liquido, Cheque, Vector, id_referencia  from #prueba 
union 
select  id_emp, id_periodo, Periodo, Parcial,
Descripcion, Plaza, Id_plaza, Desde, Hasta, Percepciones, Deducciones, Liquido, Cheque, Vector, id_referencia  from #prueba2
) dsvf
Order By Periodo,parcial      

end
'
GO

GO
PRINT N'Creating [dbo].[Dsv_Traspaso_info01]'
GO
IF OBJECT_ID(N'[dbo].[Dsv_Traspaso_info01]', 'P') IS NULL
EXEC sp_executesql N'create PROCEDURE [dbo].[Dsv_Traspaso_info01]
(
@periodo varchar(max),
@forma int
)         	
AS
BEGIN
	
	SET NOCOUNT ON;

	if @forma = 1
	begin
	   delete from  [informatica01].dbo.Deta_datos  where id_periodo in (@periodo)
	   delete from  [informatica01].dbo.Mtra_datosr where id_periodo in (@periodo)
	end

select a.id_periodo, a.Id_Emp, a.id_plaza, a.id_referencia, 
convert(varchar(12),cast(sum(case when b.tipo = 1 then  a.pesos + a.pesosexcento else 0 end)as money), 1) as Percepciones ,               
	 convert(varchar(12), cast(sum(case when b.tipo = 2 then  a.pesos + a.pesosexcento else 0 end) as money), 1) as Deducciones,              
	 convert(varchar(12), cast(sum ( (case when b.tipo = 1 then  a.pesos + a.pesosexcento else 0 end ) - (case when b.tipo = 2 then  a.pesos + a.pesosexcento else 0 end ) ) as money), 1) as Liquido 
	 into #paso1
	 from nom_HistPagos a inner join dbo.conceptos b              
	 on b.id_concepto   = a.id_concepto  
	 where a.Id_Periodo in ( @periodo  )
group by a.id_periodo,a.id_emp,a.id_plaza, a.id_referencia
----------------------------------------------

select a.id_concepto, a.id_periodopago, a.pesos,  cc, desde, hasta, id_referencia, id_emp, id_plaza, id_periodo 
into #paso2d from nom_HistPagos a inner join dbo.conceptos b              
	 on b.id_concepto   = a.id_concepto    where b.tipo <> 3 and a.Id_Periodo in ( @periodo)
----------------------------------------------

select  id_periodo, numero, id_cia, 
cast( year(c.FechaIni) as varchar) + ''''+ Right(''00'' + Cast(case when(day(c.FechaIni)>15)then month(c.FechaIni)*2 else (month(c.FechaIni)*2)-1 end as Varchar(2)),2) as desde,  
	 cast( year(c.FechaFin) as varchar) + ''''+ Right(''00'' + Cast(case when(day(c.FechaFin)>15)then month(c.FechaFin)*2 else (month(c.FechaFin)*2)-1 end as Varchar(2)),2) as hasta
	 into #dbefectos from calennomina c  where Id_Periodo in (select distinct Id_Periodo from #paso1 )
----------------------------------------------
ALTER TABLE #paso1 ADD desde INT
ALTER TABLE #paso1 ADD hasta INT
----------------------------------------------
UPDATE #paso1
SET desde = #dbefectos.desde 
from #dbefectos where #dbefectos.Id_Periodo = #paso1.id_periodo;

UPDATE #paso1
SET hasta = #dbefectos.hasta 
from #dbefectos where #dbefectos.Id_Periodo = #paso1.id_periodo;
----------------------------------------------
ALTER TABLE #paso2d ADD Mtra_datos_Id INT

insert into [informatica01].dbo.Mtra_datosr (id_periodo, id_emp, id_plaza, id_referencia, percepciones, deducciones, liquido, desde, hasta)
select id_periodo, id_emp, id_plaza, id_referencia, percepciones, deducciones, liquido, desde, hasta from #paso1 

----------------------------------------------
update #paso2d  set Mtra_datos_Id = (select Mtra_datos_id  from [informatica01].dbo.Mtra_datosr  b where  #paso2d.id_emp=b.id_emp and 
#paso2d.id_plaza=b.id_plaza and #paso2d.id_periodo=b.id_periodo and #paso2d.id_referencia=b.id_referencia)
----------------------------------------------

select distinct  a.desde, a.id_periodo, Mtra_datos_id into #pruebamil
 from #paso2d a 
 where 
  a.Id_Periodo in( 
select id_periodo from calennomina where leyenda4 = 2 and (parcial >= 20 and parcial <= 40) )
----------------------------------------------

select min(desde) as desde, max(desde) as hasta, id_periodo, Mtra_datos_id into #dbretros
  from #pruebamil group by Id_Periodo,  Mtra_datos_id
----------------------------------------------
UPDATE [informatica01].dbo.Mtra_datosr
SET desde = #dbretros.desde 
from #dbretros where #dbretros.Id_Periodo = [informatica01].dbo.Mtra_datosr.id_periodo and #dbretros.Mtra_datos_id = [informatica01].dbo.Mtra_datosr.Mtra_datos_Id; 

UPDATE [informatica01].dbo.Mtra_datosr
SET hasta = #dbretros.hasta 
from #dbretros where #dbretros.Id_Periodo = [informatica01].dbo.Mtra_datosr.id_periodo and #dbretros.Mtra_datos_id = [informatica01].dbo.Mtra_datosr.Mtra_datos_Id;
----------------------------------------------
insert into [informatica01].dbo.Deta_datos 
select id_concepto, id_periodopago, pesos, cc, desde, hasta, id_referencia, id_periodo, Mtra_datos_Id from #paso2d
    
END
'
GO

GO
PRINT N'Creating [dbo].[NP_ReportesGenerales]'
GO
IF OBJECT_ID(N'[dbo].[NP_ReportesGenerales]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		<Sistemas,Noemi>
-- Create date: <Create Date, 30/01/2020 >
-- Description:	<Nomina de Inicio de Año escolar>
-- =============================================
--exec [NP_ReportesGenerales] 1,201516
--exec [NP_ReportesGenerales] 1,201616
--exec [NP_ReportesGenerales] 1,201716
--exec [NP_ReportesGenerales] 1,201816
--exec [NP_ReportesGenerales] 1,202016,'''','''',''''
--exec [NP_ReportesGenerales] 2,202016,'''','''',''''
--exec [NP_ReportesGenerales] 3,201916,'''','''',''''
CREATE  procedure [dbo].[NP_ReportesGenerales] 
	@opcion int,
	@añoQna varchar(6),
	@nivelEducativo varchar(100),
	@ct varchar(10), --
	@categoria varchar(7)
AS

--IF @opcion = 1 BEGIN -- Nivel Educativo Incidencia Categoria
	IF @opcion =3 BEGIN
	DECLARE @mes int 
	set @mes = MONTH (GETDATE());
	 SELECT CAST( DAY (GETDATE()) AS VARCHAR(3)) +'' DE ''+ CASE WHEN @mes=1 then ''ENERO''WHEN @mes=2 then ''FEBRERO''WHEN @mes=3 then ''MARZO''WHEN @mes=4 then ''ABRIL''WHEN @mes=5 then ''MAYO'' 
			WHEN @mes=6 then ''JUNIO'' WHEN @mes=7 then ''JULIO''WHEN @mes=8 then ''AGOSTO'' WHEN @mes=9 then ''SEPTIEMBRE'' WHEN @mes=10 then ''OCTUBRE''WHEN @mes=11 then ''NOVIEMBRE''WHEN @mes=12 then ''DICIEMBRE'' END + '' DEL '' +CAST (YEAR (GETDATE()) AS VARCHAR(4))+''.'' FECHA
	END 
	ELSE 
	BEGIN
		IF (@nivelEducativo is null ) BEGIN 
			set @nivelEducativo = '''';
		END
		IF (@ct is null ) BEGIN 
			set @ct = '''';
		END
		IF (@categoria is null ) BEGIN 
			set @categoria = '''';
		END
		--Declare @añoQna varchar(6) 
		--set @añoQna=''201916''
		DECLARE @fecha DATETIME 
		SET @fecha = (SELECT DBO.anioQuincenaToFecha(@añoQna,1))-- ''201916''

		--select @fecha
		--- obtener la fecha del ultimo movimiento antes de la fecha seleccionada.
		SELECT id_plaza,fecha 
		into #fechaUltimoMovimientoAntesDeLaFechaHP
		FROM(
			SELECT ROW_NUMBER() OVER (PARTITION BY id_plaza ORDER BY id_plaza,fecha DESC) ID,id_plaza,fecha  
			FROM hplazas with(nolock) WHERE fecha <= @fecha--''2019-08-31 00:00:00.000''
		)a WHERE ID=1


		--select * from #fechaUltimoMovimientoAntesDeLaFecha order by id_plaza,fecha

		SELECT id_plaza,fecha 
		into #fechaUltimoMovimientoAntesDeLaFechaPE
		FROM(
			SELECT ROW_NUMBER() OVER (PARTITION BY id_plaza ORDER BY id_plaza,fecha DESC) ID,id_plaza,fecha  
			FROM plazaempleados with(nolock) WHERE fecha <= @fecha--''2019-08-31 00:00:00.000''
		)a WHERE ID=1

		select --ROW_NUMBER() over (partition by pe.id_plaza order by pe.id_plaza,pe.fecha ) id,
		pe.* 
		into #plazaempleados_ultimoMovimientoAntesDeLaFecha
		from plazaempleados pe with(nolock)
		join (select * from #fechaUltimoMovimientoAntesDeLaFechaPE) fum
		on pe.id_plaza=fum.id_plaza and pe.id_emp != 0 and pe.fecha = fum.fecha
		order by pe.id_plaza,pe.fecha 

		select *
		into --drop table
		#informacion_status
		from(
		SELECT row_number() over(partition by UHP.id_plaza order by UHP.id_plaza,pe.fecha desc)id, UHP.ID_PLAZA,PE.ID_EMP,STATUSPLAZA,Descri DESCRIPCION_ESTATUS,UHP.Fecha fecha_status,PE.Fecha
		FROM #fechaUltimoMovimientoAntesDeLaFechaHP UHP with(nolock)
		JOIN HstatusPlaza hsp with(nolock) ON UHP.Id_plaza=HSP.ID_PLAZA AND UHP.FECHA=HSP.FECHA
		LEFT join TStatusPlaza sp with(nolock) on hsp.id_rel=sp.Id_StatusPlaza 
		LEFT JOIN PlazaEmpleados PE with(nolock) on PE.Id_plaza=UHP.Id_plaza AND PE.Fecha<=UHP.Fecha
		--where uhp.id_plaza= 12
		)a where id=1

		--5:24 - 2sgs
		select pe.id_emp,pe.id_plaza,CURP,RFC,nombre+'' ''+appaterno+'' ''+apmaterno nombre,plazaieepo clave_plaza,clave centro_trabajo,p.Categoria,t.DESCRIPCION DESCRIPCION_CATEGORIA,estatus.STATUSPLAZA ESTATUS,estatus.DESCRIPCION_ESTATUS
		into -- DROP TABLE 
		#reporte
		from #plazaempleados_ultimoMovimientoAntesDeLaFecha pe with(nolock)
		join empleados e with(nolock) on e.id_emp = pe.Id_Emp 
		join plazaieepo p with(nolock) on pe.Id_plaza = p.id_plaza
		left join VistaTablaLongitud vt with(nolock) on vt.Id_Nodo=pe.id_nodo
		left join #informacion_status estatus with(nolock) on estatus.id_emp=pe.id_emp and estatus.id_plaza=pe.id_plaza
		LEFT JOIN TTabulador_SE_Cat_Puesto t with(nolock) ON RTRIM(LTRIM(p.CATEGORIA))=RTRIM(LTRIM(t.CATEGORIA))
		order by pe.id_plaza

		UPDATE A SET A.DESCRIPCION_CATEGORIA = P.DESCRIPCION
		FROM #reporte A--109756
		LEFT JOIN TTabulador_SE_Cat_Puesto P with(nolock) 
		ON A.CATEGORIA=RIGHT (P.CATEGORIA,6)
		WHERE A.DESCRIPCION_CATEGORIA IS NULL

		select pn.id_plaza,ne.Descripcion NIVEL_EDUCATIVO into #pne from view_plaza_nivel pn left join TNivelEducativo ne on pn.id_niveleducativo=ne.id_NivelEducativo

		--select * from #reporte
		--drop table #2015_1
		select ROW_NUMBER() OVER(ORDER BY RFC) ID,CURP,RFC,NOMBRE,CLAVE_PLAZA,CENTRO_TRABAJO,CATEGORIA,DESCRIPCION_CATEGORIA, ESTATUS,DESCRIPCION_ESTATUS,ne.NIVEL_EDUCATIVO
		into #datos_quincena
		from(
				select distinct a.CURP,a.RFC,a.NOMBRE,a.CLAVE_PLAZA,a.CENTRO_TRABAJO,a.CATEGORIA,a.DESCRIPCION_CATEGORIA, a.ESTATUS,a.DESCRIPCION_ESTATUS,a.Id_plaza
				from #reporte a
				join (select * from [FEDERACION.IEEPO.GOB.MX].federacion.dbo.detalle_nomina with(nolock) where quincena = @añoQna and ESTATUS=''VALIDACIÓN CORRECTA'')b
				on a.id_emp = b.id_emp and replace(a.clave_plaza,'' '','''')= replace(b.clave_plaza ,'' '','''')
				where a.estatus in (''06'',''01'',''14'',''15'')
		)a left join #pne ne
		on ne.id_plaza=a.id_plaza
		WHERE  NIVEL_EDUCATIVO like ''%''+@nivelEducativo+''%'' and centro_trabajo like ''%''+@ct+''%'' and Categoria like ''%''+@categoria+''%'' 
		
	IF @opcion = 1 BEGIN
		SELECT ID,CURP,RFC,NOMBRE,CLAVE_PLAZA,CENTRO_TRABAJO,CATEGORIA,DESCRIPCION_CATEGORIA, ESTATUS,DESCRIPCION_ESTATUS 
		FROM #datos_quincena 
		--WHERE  NIVEL_EDUCATIVO like ''%''+@nivelEducativo+''%'' and centro_trabajo like ''%''+@ct+''%'' and Categoria like ''%''+@categoria+''%'' 
		ORDER BY ID;
	END 
	IF @opcion = 2 BEGIN

		select  (Select count(distinct(curp)) empleados from #datos_quincena)''Empleados'',
				(Select count(distinct(clave_plaza) ) plazas from #datos_quincena)''Plazas'',
				(Select count(*) ''Activas_01'' from #datos_quincena where estatus=''01'')''Activas_01'',
				(Select count(*) ''Interinato_06'' from #datos_quincena where estatus=''06'')''Interinato_06'',
				(Select count(*) ''Gravidez_14'' from #datos_quincena where estatus=''14'')''Gravidez_14'',
				(Select count(*) ''Pre_Jubilatoria_15'' from #datos_quincena where estatus=''15'')''Pre_Jubilatoria_15'',
				(Select count(*) ''Total'' from #datos_quincena)''Total '',
				(select  CONVERT(nvarchar, GETDATE(), 113) FechaGeneracionReporte)''FechaGeneracionReporte''
		
	END
END'
GO

GO
PRINT N'Creating [dbo].[spr_Reubicaciones]'
GO
IF OBJECT_ID(N'[dbo].[spr_Reubicaciones]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		Noe Ramirez
-- Create date: 18 04 2016
-- Description:	Realiza las validaciones correspondientes y la aplicaion de reubicaciones por oficio
-- =============================================
CREATE PROCEDURE [dbo].[spr_Reubicaciones]
@periodo int, @emp int, @plaza int, @quincena varchar(6), @nodo int, @ctr varchar(15), @obs varchar(500), @user int
WITH EXEC AS CALLER
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
  
  
  
	SET NOCOUNT ON;
  declare @idPeriodoN int = @periodo
  declare @idEmp int = @emp
  declare @id_plaza int = @plaza
  declare @qna varchar(6) = @quincena
  declare @idnodo int = @nodo
  declare @ctd varchar(20) = @ctr
  declare @obser varchar(500) = @obs
  declare @iduser int = @user
  declare @result varchar(600)

BEGIN TRY

  if(@idnodo <> 0)
  begin
    if((select top 1 1 from RCT_Status a inner join TCT_Status b on a.id_rel = b.id_CT_Status where a.id_nodo = @idnodo and b.id_status in(1,4)) = 1)
    begin
      if((select pe.id_nodo from plazaempleados pe inner join ( select id_plaza, max(fecha) fecha from plazaempleados where Fecha <= ( select fechafin from CalenNomina where id_periodo = @idPeriodoN ) group by id_plaza ) h on h.id_plaza = pe.id_plaza and h.fecha = pe.fecha where pe.id_plaza = @id_plaza and pe.id_emp = @idEmp) <> @idnodo)
      begin
      
        if(( Select top 1 1 From  (Select id_plaza,max(fecha) as maximo from PlazaEmpleados where fecha <= ( select fechafin from CalenNomina where id_periodo = @idPeriodoN ) and id_plaza=@id_plaza group by id_plaza) q1 
          Left Join (    Select t1.Id_plaza,t1.id_rel,t3.StatusPlaza from hstatusplaza t1 Inner Join  (Select id_plaza,max(fecha) as fecha from hstatusplaza where fecha <= ( select fechafin from CalenNomina where id_periodo = @idPeriodoN ) and id_plaza=@id_plaza group by id_plaza) t2  
          on t1.id_plaza=t2.id_plaza and t1.fecha=t2.fecha Inner Join tstatusplaza t3 on t1.id_rel=t3.Id_StatusPlaza ) q2 On q1.id_plaza=q2.Id_plaza Left Join (    Select t1.Id_plaza,t1.id_rel,t3.CveTipoPlaza from htipoplaza t1   
          Inner Join  (Select id_plaza,max(fecha) as fecha from htipoplaza where fecha <= ( select fechafin from CalenNomina where id_periodo = @idPeriodoN ) and id_plaza=@id_plaza group by id_plaza) t2  
          on t1.id_plaza=t2.id_plaza and t1.fecha=t2.fecha Inner Join ttipoplaza t3 on t1.id_rel=t3.Id_TipoPlaza ) q3 On q1.id_plaza=q3.id_plaza where (StatusPlaza=''01'' and  CveTipoPlaza =''96'') or (StatusPlaza=''01'' and  CveTipoPlaza =''95'') or (StatusPlaza=''01'' and  CveTipoPlaza =''10'') or (StatusPlaza=''06'' and  CveTipoPlaza =''20'') 
        ) = 1)
        begin
          insert into PlazaEmpleados (Id_Emp, Id_plaza, Fecha, Id_User, Movimiento, id_nodo, Documentos, id_plazaanterior, esHistoria, desliguePlaza, tipoHistoria)
          select @idEmp, @id_plaza, dbo.anioquincenatofecha(@qna, 0), @iduser, getdate(),@idnodo, ''RO'', 0,0,0,0
          
          Update PlazaEmpleados Set id_nodo = @idnodo where id_plaza = @id_plaza and fecha > dbo.anioquincenatofecha(@qna, 0)
          
          insert into HReubicaciones_Oficio(Id_emp,Id_plaza,Quincena,IdNodoDestino,CtDestino,Observaciones,Razon,Movimiento, id_usuario)
          select @idEmp, @id_plaza, @qna, @idnodo, @ctd,@obser, ''Aplicado.'', getdate(),@iduser
          where not exists(
            select 1 from HReubicaciones_Oficio a where a.id_emp = @idEmp and id_plaza = @id_plaza and quincena = @qna and ctdestino =@ctd
          )
          set @result = ''Reubicación realizada con éxito.''
        end  
        else
        begin
          insert into HReubicaciones_Oficio(Id_emp,Id_plaza,Quincena,IdNodoDestino,CtDestino,Observaciones,Razon,Movimiento, id_usuario)
          select @idEmp, @id_plaza, @qna, @idnodo, @ctd,@obser, ''La plaza no tiene estatus valido.'', getdate(),@iduser
          where not exists(
            select 1 from HReubicaciones_Oficio a where a.id_emp = @idEmp and id_plaza = @id_plaza and quincena = @qna and ctdestino =@ctd
          )
          set @result = ''La plaza no tiene estatus valido.''
        end
      end
      else
      begin
        insert into HReubicaciones_Oficio(Id_emp,Id_plaza,Quincena,IdNodoDestino,CtDestino,Observaciones,Razon,Movimiento, id_usuario)
        select @idEmp, @id_plaza, @qna, @idnodo, @ctd,@obser, ''El empleado ya se encuentra en el CT seleccionado.'', getdate(),@iduser
        where not exists(
          select 1 from HReubicaciones_Oficio a where a.id_emp = @idEmp and id_plaza = @id_plaza and quincena = @qna and ctdestino =@ctd
        )
        set @result = ''El empleado ya se encuentra en el ct selccionado.'' 
      end
    end
    else
    begin
      declare @estatusct varchar(100) = (select TOP 1 b.desc_status from RCT_Status a inner join TCT_Status b on a.id_rel = b.id_CT_Status where a.id_nodo = @idnodo )
      insert into HReubicaciones_Oficio(Id_emp,Id_plaza,Quincena,IdNodoDestino,CtDestino,Observaciones,Razon,Movimiento, id_usuario)
      select @idEmp, @id_plaza, @qna, @idnodo, @ctd,@obser, ''El CT destino se encuentra en estatus ''+isnull(@estatusct,'''')+''.'', getdate(),@iduser
      where not exists(
        select 1 from HReubicaciones_Oficio a where a.id_emp = @idEmp and id_plaza = @id_plaza and quincena = @qna and ctdestino =@ctd
      )
      set @result = ''El centro de trabajo seleccionado se encuentra en estatus ''+isnull(@estatusct,'''')+''.''
    end
  end
  else
  begin
    insert into HReubicaciones_Oficio(Id_emp,Id_plaza,Quincena,IdNodoDestino,CtDestino,Observaciones,Razon,Movimiento, id_usuario)
    select @idEmp, @id_plaza, @qna, @idnodo, @ctd,@obser, ''El CT destino no existe.'', getdate(),@iduser
    where not exists(
      select 1 from HReubicaciones_Oficio a where a.id_emp = @idEmp and id_plaza = @id_plaza and quincena = @qna and ctdestino =@ctd
    )
    set @result = ''El centro de trabajo seleccionado no existe.'' 
  end
  
  if @@rowcount<1 
		RAISERROR (''Ocurrio un error durante el proceso.'', 16,1);
	else
		select ''''+ @result as resultado
  
END TRY

BEGIN CATCH
  SELECT ERROR_MESSAGE() as resultado
  
END CATCH;

END'
GO

GO
PRINT N'Creating [dbo].[DSV_SP_SacaHistPagosDedu_14]'
GO
IF OBJECT_ID(N'[dbo].[DSV_SP_SacaHistPagosDedu_14]', 'P') IS NULL
EXEC sp_executesql N'
CREATE PROCEDURE [dbo].[DSV_SP_SacaHistPagosDedu_14]      
(      
@idplaza int,      
@Idemp int,      
@idperiodo int,
@refere int         
)      

 with encryption 
AS      
SET NOCOUNT ON      

declare @DDtbltmp table (
Id_Emp int, 
Id_Periodo int, 
id_concepto int, 
Consecutivo int, 
Horas float, 
Pesos float, 
Fecha smalldatetime, 
CC varchar(10), 
PesosExcento float, 
id_plaza int, 
Id_Referencia int,
id_periodoPago int, 
Id_ProcesoNomina int, 
Desde varchar(6), 
Hasta varchar(6), 
esHistoria bit, 
Fix bit)
declare @danio int = (select año from calennomina where Id_Periodo = @idperiodo )

--if @DAnio  = 2012 
--insert into @DDtbltmp 
  --select *  from [dep].dbo.Nom_histpagos_2012 where @idplaza  = id_plaza and @Idemp = id_emp 
--if @Danio = 2013
--insert into @DDtbltmp 
  --select *  from [dep].dbo.Nom_histpagos_2013 where @idplaza = id_plaza and @Idemp = id_emp 

insert into @DDtbltmp 
  select *  from Nom_histpagos where @idplaza = id_plaza and @Idemp = id_emp 
-- creacion de variable tipo tabla

 SELECT      
   a.id_concepto, a.Resultado as Clave,convert(varchar(12), cast(b.Pesos as money), 1) AS Importe,a.descripcion, b.Id_Emp, Cast(g.año as varchar(4)) + ''''+Right(''00''+Cast(g.numero as varchar(2)),2) as Periodo, b.id_plaza,Desde+'' ''+Hasta as Desde_Hasta      
      
 FROM      
   Conceptos a       
   INNER JOIN ConceptoRelEmpresa c      
   ON a.id_concepto = c.id_concepto       
   INNER JOIN      
            (SELECT     Id_Emp, id_concepto, Id_Periodo, id_plaza, Pesos,Desde,Hasta, isnull(Id_Referencia,0)  Id_Referencia      
            FROM       HistPagos      
            UNION ALL      
            SELECT     Id_Emp, id_concepto, Id_Periodo, id_plaza, Pesos,Desde,Hasta, isnull(Id_Referencia,0)  Id_Referencia     
            FROM       @DDtbltmp)       
   AS b      
   ON a.id_concepto = b.id_concepto    
   inner join Empleados E    
   on e.id_emp = b.id_emp    
   inner join Plazas F    
   on F.id_plaza = b.id_plaza    
   Inner Join Calennomina G  
   on b.Id_Periodo=G.Id_periodo     
 WHERE      
   b.Id_Emp =@idemp and f.id_plaza=@idplaza AND b.id_periodo=@idperiodo and (c.id_razonsocial = 5) AND (a.Tipo = 2) AND (a.En_ListaRaya = 1)  
   and b.Id_Referencia = @refere     
 ORDER BY 
   DESDE, HASTA, A.descripcion      
         

SET NOCOUNT OFF      
'
GO

GO
PRINT N'Creating [dbo].[spc_CalculoImpuestoRFCQNA]'
GO
IF OBJECT_ID(N'[dbo].[spc_CalculoImpuestoRFCQNA]', 'P') IS NULL
EXEC sp_executesql N'create PROCEDURE [dbo].[spc_CalculoImpuestoRFCQNA]
@rfc varchar(20), @qna varchar(10)
WITH EXEC AS CALLER
as
begin

select a.rfc,a.quincena, min(e.Id_Cia) id_cia into #empleadoimp from (
select rfc,quincena from view_PercepcionesEmpleado where rfc = @rfc and QUINCENA = @qna group by rfc, quincena
) a inner join (
select distinct a.Id_Emp, e.Id_Cia, e.RFC from plazaempleados a inner join (
select id_plaza, max(fecha) fecha from plazaempleados where fecha <= getdate() group by id_plaza
) b on a.Id_plaza = b.Id_plaza and a.Fecha = b.Fecha
inner join empleados e on e.id_emp = a.id_emp
) e on e.rfc = a.rfc
group by a.rfc,a.quincena


select a.*,case when a.id_cia = 3 then ''2013/01/01'' else ''2004/01/01'' end vigencia, round(b.participa * 2,2) participa, round(c.gravable * 2,2) gravable
into #impuesto1
from #empleadoimp a 
inner join (
select rfc, quincena, sum(monto) participa from view_PercepcionesEmpleado where rfc = @rfc and QUINCENA = @qna
and ID_CONCEPTO in (select id_concepto from view_ConceptosImpuesto where Participa = 1) group by rfc, quincena
) b on a.RFC = b.RFC inner join ( 
select rfc, quincena, sum(monto) gravable from view_PercepcionesEmpleado where rfc = @rfc and QUINCENA = @qna
and ID_CONCEPTO in (select id_concepto from view_ConceptosImpuesto where Graba = 1) group by rfc, quincena
) c on c.RFC = a.RFC

select *, round( 1 - ( round(( round(1 - (round(gravable / participa,2) ),2)) * 2,2) ),2) subsidio
into #tc_7
from #impuesto1

select a.*, b.rinferior rinferior_ta, b.rsuperior rsuperior_ta, b.cuotaF cuotaF_ta, b.Porciento Porciento_ta , 
round(gravable-rinferior,2) ingExecede, round((round(gravable-rinferior,2)) * (porciento/100),2) impMarginal,
(round((round(gravable-rinferior,2)) * (porciento/100),2)) + cuotaF isrbruto
into #tc_8
from #tc_7 a, Tispta b 
where b.fechavigencia = a.vigencia and b.dias = 30 and a.gravable >= b.rinferior and a.gravable < b.rsuperior

select a.*, b.RInferior RInferior_tb, b.RSuperior RSuperior_tb, b.CuotaF CuotaF_tb, b.Porciento Porciento_tb, 
round(a.impmarginal * (isnull(b.porciento,0)/100),2) imp01,
round((round(a.impmarginal * (isnull(b.porciento,0)/100),2))+isnull(b.CuotaF,0),2) subsidiotot,
round((round((round(a.impmarginal * (isnull(b.porciento,0)/100),2))+isnull(b.CuotaF,0),2))*a.subsidio,2) subsidioacre
into #tc_9
from #tc_8 a
left join Tisptb b on a.gravable >= b.rinferior and a.gravable < b.rsuperior and b.fechavigencia = a.vigencia and b.dias = 30 
--where b.fechavigencia = ''2013/01/01'' and b.dias = 30 

select a.*, b.RInferior RInferior_tc, b.RSuperior RSuperior_tc, b.CuotaF CuotaF_tc, 
round(a.isrbruto - a.subsidioacre,2) difIsrSub, 
round((round(a.isrbruto - a.subsidioacre,2)) - isnull(b.CuotaF,0),2) ImptMensual, 
round(((round(a.isrbruto - a.subsidioacre,2)) - isnull(b.CuotaF,0))/2,2) ImpQuincena
into #tc_10
from #tc_9 a
left join Tisptc b on b.fechavigencia = a.vigencia and b.dias = 30 and a.gravable >= b.rinferior and a.gravable < b.rsuperior
--where b.fechavigencia = ''2013/01/01'' and b.dias = 30 and a.gravable >= b.rinferior and a.gravable < b.rsuperior

select ImptMensual Impuesto_mensual, ImpQuincena Impuesto_quincenal from #tc_10

end'
GO

GO
PRINT N'Creating [dbo].[sp_BorraPlazaIeepo]'
GO
IF OBJECT_ID(N'[dbo].[sp_BorraPlazaIeepo]', 'P') IS NULL
EXEC sp_executesql N'-- ================================================
-- =============================================
-- Author:		Ieepo
-- Create date: 05/06/2013
-- Description:	Borra una plaza ieepo por el ID
-- =============================================
CREATE PROCEDURE [dbo].[sp_BorraPlazaIeepo] 
	-- Add the parameters for the stored procedure here
	@plaza int = 0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
    if NOT EXISTS (select * from nom_histpagos where id_plaza = @plaza ) and
		NOT EXISTS (select * from hvectores where id_plaza = @plaza )
		begin
		delete HPartida WHERE id_plaza = @plaza
		delete HUnidad  WHERE id_plaza = @plaza
		delete HSubunidad  WHERE id_plaza = @plaza
		delete HHoras WHERE id_plaza = @plaza
		delete HDiagonal  WHERE id_plaza = @plaza
		delete PLAZAIEEPO WHERE ID_PLAZA= @plaza
		delete htabulador_se_nivel_pago  where id_plaza=@plaza
		delete HTabulador_SE_Cat_Puesto where id_plaza= @plaza
		delete HTabulador_SE_CM where id_plaza=@plaza
		delete PlazasOrgan where id_plaza=@plaza
		delete HNivelPlazas where id_plaza=@plaza
		delete hpuestosplazas where id_plaza=@plaza
		delete HOficioAfectacionCancelacion where id_plaza = @plaza
		delete HOficioAfectacionCreacion where id_plaza = @plaza
		delete HOficioAfectacionPlaza where id_plaza = @plaza
		delete HRegularizacion where id_plaza = @plaza
		delete HTipo_Seg_Social where id_plaza = @plaza
		delete hplazas where id_plaza=@plaza
		delete plazaempleados where id_plaza=@plaza
		delete Plazas  WHERE id_plaza = @plaza
		select ''La plaza ha sido eliminada con exito.'' as Mensaje

		end
	else
	
		select ''No se puede borrar, Revisar historia de pago y mover antes de pasar a borrar.'' as Mensaje

		
END
'
GO

GO
PRINT N'Creating [dbo].[EMP13_M4YL1Q]'
GO
IF OBJECT_ID(N'[dbo].[EMP13_M4YL1Q]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[EMP13_M4YL1Q]
@qnaactual varchar(6), @idperiodo int, @nom varchar(3), @idcia int
WITH EXEC AS CALLER
AS
set @idcia = case 
                when @nom = ''BAS'' then 2
                when @nom = ''UPN'' then 1
              end
set @idperiodo = (select id_periodo from CalenNomina where Año = cast(SUBSTRING(@qnaactual, 1, 4) as int) and Numero = cast(SUBSTRING(@qnaactual, 5, 2) as int) and Parcial = 0 and Id_cia = @idcia)
if exists (select 1 from histpagos where Id_Periodo = @idperiodo )
  begin
    select a.id_emp,a.id_plaza, e.RFC,p.PlazaIEEPO, sum(percepciones) as Total_Percepciones, sum(deducciones) as Total_Deducciones, (sum(percepciones) - sum(deducciones)) as Total 
    from (
      select id_emp,id_plaza,sum(pesos) as percepciones, 0 as deducciones 
      FROM histpagos
      where Id_Periodo = @idperiodo and id_concepto in (select id_concepto from conceptos where tipo = 1 and descripcion like ''%'' + @nom + ''%'' )
      group by id_emp,id_plaza
      union all
      select id_emp,id_plaza,0 as percepciones, sum(pesos) as deducciones FROM histpagos 
      where Id_Periodo = @idperiodo and id_concepto in (select id_concepto from conceptos where tipo = 2 and descripcion like ''%'' + @nom + ''%'' )
      group by id_emp,id_plaza
    ) a 
    inner join empleados e on e.Id_Emp = a.Id_Emp
    inner join plazaieepo p on p.Id_plaza = a.id_plaza
    group by a.id_emp,a.id_plaza,e.RFC,p.Id_plaza,p.PlazaIEEPO
    having (sum(percepciones) - sum(deducciones)) >= 28000 order by e.rfc
  end
else
  begin
    select a.id_emp,a.id_plaza, e.RFC,p.PlazaIEEPO, sum(percepciones) as Total_Percepciones, sum(deducciones) as Total_Deducciones, (sum(percepciones) - sum(deducciones)) as Total 
    from (
      select id_emp,id_plaza,sum(pesos) as percepciones, 0 as deducciones 
      FROM nom_histpagos
      where Id_Periodo = @idperiodo and id_concepto in (select id_concepto from conceptos where tipo = 1 and descripcion like ''%'' + @nom + ''%'' )
      group by id_emp,id_plaza
      union all
      select id_emp,id_plaza,0 as percepciones, sum(pesos) as deducciones 
      FROM nom_histpagos 
      where Id_Periodo = @idperiodo and id_concepto in (select id_concepto from conceptos where tipo = 2 and descripcion like ''%'' + @nom + ''%'' )
      group by id_emp,id_plaza
    ) a 
    inner join empleados e on e.Id_Emp = a.Id_Emp
    inner join plazaieepo p on p.Id_plaza = a.id_plaza
    group by a.id_emp,a.id_plaza,e.RFC,p.Id_plaza,p.PlazaIEEPO
    having (sum(percepciones) - sum(deducciones)) >= 28000 order by e.rfc
  end'
GO

GO
PRINT N'Creating [dbo].[sp_hexadecimal]'
GO
IF OBJECT_ID(N'[dbo].[sp_hexadecimal]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[sp_hexadecimal]
    @binvalue varbinary(256),
    @hexvalue varchar (514) OUTPUT
AS
DECLARE @charvalue varchar (514)
DECLARE @i int
DECLARE @length int
DECLARE @hexstring char(16)
SELECT @charvalue = ''0x''
SELECT @i = 1
SELECT @length = DATALENGTH (@binvalue)
SELECT @hexstring = ''0123456789ABCDEF''
WHILE (@i <= @length)
BEGIN
  DECLARE @tempint int
  DECLARE @firstint int
  DECLARE @secondint int
  SELECT @tempint = CONVERT(int, SUBSTRING(@binvalue,@i,1))
  SELECT @firstint = FLOOR(@tempint/16)
  SELECT @secondint = @tempint - (@firstint*16)
  SELECT @charvalue = @charvalue +
    SUBSTRING(@hexstring, @firstint+1, 1) +
    SUBSTRING(@hexstring, @secondint+1, 1)
  SELECT @i = @i + 1
END

SELECT @hexvalue = @charvalue
'
GO

GO
PRINT N'Creating [dbo].[sp_help_revlogin]'
GO
IF OBJECT_ID(N'[dbo].[sp_help_revlogin]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[sp_help_revlogin] @login_name sysname = NULL AS
DECLARE @name sysname
DECLARE @type varchar (1)
DECLARE @hasaccess int
DECLARE @denylogin int
DECLARE @is_disabled int
DECLARE @PWD_varbinary  varbinary (256)
DECLARE @PWD_string  varchar (514)
DECLARE @SID_varbinary varbinary (85)
DECLARE @SID_string varchar (514)
DECLARE @tmpstr  varchar (1024)
DECLARE @is_policy_checked varchar (3)
DECLARE @is_expiration_checked varchar (3)

DECLARE @defaultdb sysname
 
IF (@login_name IS NULL)
  DECLARE login_curs CURSOR FOR

      SELECT p.sid, p.name, p.type, p.is_disabled, p.default_database_name, l.hasaccess, l.denylogin FROM 
sys.server_principals p LEFT JOIN sys.syslogins l
      ON ( l.name = p.name ) WHERE p.type IN ( ''S'', ''G'', ''U'' ) AND p.name <> ''sa''
ELSE
  DECLARE login_curs CURSOR FOR


      SELECT p.sid, p.name, p.type, p.is_disabled, p.default_database_name, l.hasaccess, l.denylogin FROM 
sys.server_principals p LEFT JOIN sys.syslogins l
      ON ( l.name = p.name ) WHERE p.type IN ( ''S'', ''G'', ''U'' ) AND p.name = @login_name
OPEN login_curs

FETCH NEXT FROM login_curs INTO @SID_varbinary, @name, @type, @is_disabled, @defaultdb, @hasaccess, @denylogin
IF (@@fetch_status = -1)
BEGIN
  PRINT ''No login(s) found.''
  CLOSE login_curs
  DEALLOCATE login_curs
  RETURN -1
END
SET @tmpstr = ''/* sp_help_revlogin script ''
PRINT @tmpstr
SET @tmpstr = ''** Generated '' + CONVERT (varchar, GETDATE()) + '' on '' + @@SERVERNAME + '' */''
PRINT @tmpstr
PRINT ''''
WHILE (@@fetch_status <> -1)
BEGIN
  IF (@@fetch_status <> -2)
  BEGIN
    PRINT ''''
    SET @tmpstr = ''-- Login: '' + @name
    PRINT @tmpstr
    IF (@type IN ( ''G'', ''U''))
    BEGIN -- NT authenticated account/group

      SET @tmpstr = ''CREATE LOGIN '' + QUOTENAME( @name ) + '' FROM WINDOWS WITH DEFAULT_DATABASE = ['' + @defaultdb + '']''
    END
    ELSE BEGIN -- SQL Server authentication
        -- obtain password and sid
            SET @PWD_varbinary = CAST( LOGINPROPERTY( @name, ''PasswordHash'' ) AS varbinary (256) )
        EXEC sp_hexadecimal @PWD_varbinary, @PWD_string OUT
        EXEC sp_hexadecimal @SID_varbinary,@SID_string OUT
 
        -- obtain password policy state
        SELECT @is_policy_checked = CASE is_policy_checked WHEN 1 THEN ''ON'' WHEN 0 THEN ''OFF'' ELSE NULL END FROM sys.sql_logins WHERE name = @name
        SELECT @is_expiration_checked = CASE is_expiration_checked WHEN 1 THEN ''ON'' WHEN 0 THEN ''OFF'' ELSE NULL END FROM sys.sql_logins WHERE name = @name
 
            SET @tmpstr = ''CREATE LOGIN '' + QUOTENAME( @name ) + '' WITH PASSWORD = '' + @PWD_string + '' HASHED, SID = '' + @SID_string + '', DEFAULT_DATABASE = ['' + @defaultdb + '']''

        IF ( @is_policy_checked IS NOT NULL )
        BEGIN
          SET @tmpstr = @tmpstr + '', CHECK_POLICY = '' + @is_policy_checked
        END
        IF ( @is_expiration_checked IS NOT NULL )
        BEGIN
          SET @tmpstr = @tmpstr + '', CHECK_EXPIRATION = '' + @is_expiration_checked
        END
    END
    IF (@denylogin = 1)
    BEGIN -- login is denied access
      SET @tmpstr = @tmpstr + ''; DENY CONNECT SQL TO '' + QUOTENAME( @name )
    END
    ELSE IF (@hasaccess = 0)
    BEGIN -- login exists but does not have access
      SET @tmpstr = @tmpstr + ''; REVOKE CONNECT SQL TO '' + QUOTENAME( @name )
    END
    IF (@is_disabled = 1)
    BEGIN -- login is disabled
      SET @tmpstr = @tmpstr + ''; ALTER LOGIN '' + QUOTENAME( @name ) + '' DISABLE''
    END
    PRINT @tmpstr
  END

  FETCH NEXT FROM login_curs INTO @SID_varbinary, @name, @type, @is_disabled, @defaultdb, @hasaccess, @denylogin
   END
CLOSE login_curs
DEALLOCATE login_curs
RETURN 0
'
GO

GO
PRINT N'Creating [dbo].[P_Empleados_Omitidos]'
GO
IF OBJECT_ID(N'[dbo].[P_Empleados_Omitidos]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		<Sistemas,Noemi>
-- Create date: <Create Date, 10/06/2017 >
-- Description:	<Description, Datos de las omisiones de los empleados>
-- =============================================
--exec [P_Empleados_Omitidos] 29337,''072013F33892000200371''
CREATE procedure [dbo].[P_Empleados_Omitidos] 
--@consulta int,
@id_emp int,
@plaza varchar(22)
--@id_usuario int
AS
	select ROW_NUMBER() over(order by DESDE) id,*
	FROM (

	--select * from empleados where rfc like ''DIGM830530TC9''

		SELECT --id_emp id,--Folio FUP,
		CaSe when fmm.id_motivomovimiento =316 then ''OMISIÓN'' when fmm.Id_MotivoMovimiento = 317 then ''REACTIVACIÓN''end movimiento, 
				PlazaIEEPO plaza,dbo.fechaToAnioQuincena(fechaini)desde,dbo.fechaToAnioQuincena(Fecha_Autorizacion)Quincena_Proceso,observaciones descripcion 
		from FUP_Documentos fd join FUP_Documento_Detalle fdd on fd.Id_Documento=fdd.Id_Documento 
		join FUP_MotivoMovimiento fmm on fmm.Id_MotivoMovimiento=fdd.Id_MotivoMovimiento 
		left join PlazaIEEPO pi on pi.Id_plaza = fdd.Id_Plaza 
		where fd.id_estatus = 2 and fmm.Id_MotivoMovimiento in (316,317) and Id_Emp =@id_emp and pi.plazaieepo=@plaza 
			UNION ALL
		select --Noemp,--''Oficio''FUP,
		''OMISIÓN''movimiento,pi.PlazaIEEPO,tepo.Desde,tepo.hasta,Observaciones
		from TEmpleadosPlazaOmitidos tepo 
		join Plazas p on p.Num_Plaza=tepo.NumPlaza
		join plazaieepo pi on pi.Id_plaza=p.Id_plaza
		left join (SELECT id_emp,Folio FUP,
					CaSe when fmm.id_motivomovimiento =316 then ''OMISIÓN'' when fmm.Id_MotivoMovimiento = 317 then ''REACTIVACIÓN''end movimiento, 
				PlazaIEEPO,dbo.fechaToAnioQuincena(fechaini)desde,dbo.fechaToAnioQuincena(Fecha_Autorizacion)Quincena_Proceso,observaciones descripcion 
		from FUP_Documentos fd join FUP_Documento_Detalle fdd on fd.Id_Documento=fdd.Id_Documento 
		join FUP_MotivoMovimiento fmm on fmm.Id_MotivoMovimiento=fdd.Id_MotivoMovimiento 
		left join PlazaIEEPO pi on pi.Id_plaza = fdd.Id_Plaza 
		where fd.id_estatus = 2 and fmm.Id_MotivoMovimiento in (316,317) and Id_Emp =@id_emp and pi.plazaieepo=@plaza )
		fup on fup.desde=tepo.desde and fup.Quincena_Proceso=tepo.hasta and fup.PlazaIEEPO=pi.PlazaIEEPO
		where TipoPago=7 and Status in (''0'',''O'') and fup.fup is null and
		--PlazaIEEPO =''078719 E9213000100416'' and Noemp = 24
		pi.PlazaIEEPO = @plaza and Noemp=@id_emp
			UNION ALL	
		select-- Noemp,--''Oficio''FUP,
		''REACTIVACIÓN''movimiento,
		pi.PlazaIEEPO,tepo.Desde,hasta,Observaciones
		from TEmpleadosPlazaOmitidos tepo 
		join Plazas p on p.Num_Plaza=tepo.NumPlaza
		join plazaieepo pi on pi.Id_plaza=p.Id_plaza
		left join (SELECT id_emp,Folio FUP,
					CaSe when fmm.id_motivomovimiento =316 then ''OMISIÓN'' when fmm.Id_MotivoMovimiento = 317 then ''REACTIVACIÓN''end movimiento, 
						PlazaIEEPO,dbo.fechaToAnioQuincena(fechaini)desde,dbo.fechaToAnioQuincena(Fecha_Autorizacion)Quincena_Proceso,observaciones descripcion 
					from FUP_Documentos fd join FUP_Documento_Detalle fdd on fd.Id_Documento=fdd.Id_Documento 
					join FUP_MotivoMovimiento fmm on fmm.Id_MotivoMovimiento=fdd.Id_MotivoMovimiento 
					left join PlazaIEEPO pi on pi.Id_plaza = fdd.Id_Plaza 
					where fd.id_estatus = 2 and fmm.Id_MotivoMovimiento in (316,317) and Id_Emp =@id_emp and pi.plazaieepo=@plaza 
		)fup on fup.desde=tepo.desde and fup.Quincena_Proceso=tepo.hasta and fup.PlazaIEEPO=pi.PlazaIEEPO
		where  Status in (''A'') and fup.fup is null and
		--PlazaIEEPO =''078779 E2781300204201'' and Noemp = 25714
		pi.PlazaIEEPO = @plaza and Noemp=@id_emp 
	)A
	'
GO

GO
PRINT N'Creating [dbo].[sp_getPEmpData]'
GO
IF OBJECT_ID(N'[dbo].[sp_getPEmpData]', 'P') IS NULL
EXEC sp_executesql N'create procedure [dbo].[sp_getPEmpData] @plazas varchar(max)
with encryption
as
begin
	select b.RFC, c.PlazaIEEPO, 
		a.Id_Emp, a.Id_plaza, cast(a.Fecha as date) fecha, a.Id_User, cast(a.Movimiento as date) mov,
		a.id_nodo, a.Documentos, a.Id, a.id_plazaanterior, a.esHistoria, a.desliguePlaza, a.tipoHistoria
	from 
		ieepo..plazaempleados a join ieepo..empleados b
		on a.Id_Emp = b.Id_Emp
		join ieepo..PlazaIEEPO c
		on a.Id_plaza = c.Id_plaza
	where a.id_plaza in (select value from dbo.fn_split(@plazas,'',''))
	order by a.id_plaza, Fecha desc

	select * from ieepo..hplazas where id_plaza in (select value from dbo.fn_split(@plazas,'',''))
	order by id_plaza, fecha desc, Id_TipoMovPlazas desc
end'
GO

GO
PRINT N'Creating [dbo].[spf_reportes_estadisticos]'
GO
IF OBJECT_ID(N'[dbo].[spf_reportes_estadisticos]', 'P') IS NULL
EXEC sp_executesql N'CREATE procedure [dbo].[spf_reportes_estadisticos]                                               
(                                                  
@quincena as varchar(6),                                                 
@id_niveleducativo as varchar(10)='''',                              
@area as varchar(50)='''',                              
@id_tipomovimiento as varchar(10)=0,                              
@id_motivomovimiento as varchar(10)=0,                        
@id_tipoagrupador as int=0,          
@id_tiporeporte as int,                              
@accion as int                                              
)                                               
with recompile                                                   
as                                                                                          
begin                                                  
SET NOCOUNT ON;                                              
--declare @quincena as varchar(6)=''201901''                               
--declare @id_niveleducativo as varchar=''''                              
--declare @area as varchar(50)=''''                              
--declare @id_tipomovimiento as varchar(6)=2                            
--declare @id_motivomovimiento as varchar(6)=0          
--declare @id_tiporeporte as int=4          
--declare @id_tipoagrupador as int=1      
--declare @accion as int=4                              
declare @anio_totales as varchar(4)=substring(@quincena,1,4)                                            
declare @qna_totales as varchar(2)=substring(@quincena,5,2)                          
                                       
declare @año as varchar(4)=substring(@quincena,1,4)                                            
declare @qna as varchar(4)=substring(@quincena,5,2)                                            
   if (@quincena<>'''')                                            
   begin                                            
     if(@qna=''01'')                                            
      begin              
     --se comenta ya que solictaron se muestren los movs que vencen efectivos a la quincena                                           
        --declare @quincena_ok as varchar(6)=cast(@año-1 as varchar(4))+cast(''24'' as varchar(2))                                            
  declare @quincena_ok as varchar(6)=@quincena                                             
      end                                            
     else                                            
      begin            
     --se comenta ya que solictaron se muestren los movs que vencen efectivos a la quincena                                            
        --set @quincena_ok=@quincena-1                                            
  set @quincena_ok=@quincena                                           
      end                                            
                                               
     declare @fechafin as date= (select convert(varchar(10),dbo.anioQuincenaToFecha(@quincena_ok,1),112))                                              
      end                                                    
declare @where as varchar(max)=''''                              
declare @ssql as varchar(max)=''''                              
                              
--//////////INICIO DE LA SECCION DE LOS FILTROS//////////////////////////                              
                              
if (@id_niveleducativo <>'''')--si trae filtro para el nivel educativo                              
 begin                               
   set @where= '' and fid.id_nivel_educativo='' +'''''''' + @id_niveleducativo +''''''''                              
 end                              
                              
if (@area <>'''')--si trae el filtro por drse ó área                              
 begin                               
   set @where= @where + '' and u.observaciones='' +'''''''' + @area +''''''''                                
 end                              
  
if (@id_tipomovimiento<>0)--si viene el filtro por nivel educativo                                
   begin                   
        set @where= @where + '' and ftm.id_tipomovimiento='' + '''''''' + @id_tipomovimiento +''''''''               
   end                               
                              
if (@id_motivomovimiento<>0)--si viene el filtro por nivel educativo                           
   begin                                
        set @where= @where + '' and fmm.id_motivomovimiento='' + '''''''' + @id_motivomovimiento +''''''''                              
   end                                  
--///////////////////////////////////////////////////////--fin de la seccion del where                                    
                                                      
 if(@accion=0)--mostrar quincenas                                            
 begin                                            
   if(@id_tiporeporte=1)          
   begin          
        select distinct cast(año as varchar(10))+RIGHT(''00'' + Ltrim(Rtrim(cast(numero as varchar(2)))),2) as quincena from calennomina where parcial=0 --and actualizado=0                                             
    and numero<=''24'' and año in (year(getdate()),year(getdate())+1)              
    union              
    select CAST(YEAR(GETDATE())+1 as varchar(6))+cast(''01'' as varchar(10)) as quincena                 
   end          
   else          
    begin           
   select distinct cast(año as varchar(10))+RIGHT(''00'' + Ltrim(Rtrim(cast(numero as varchar(2)))),2) as quincena from calennomina where parcial=0 and actualizado=1          
   and numero<=''24'' and año in (year(getdate()),year(getdate())+1,year(getdate())-1) order by quincena           
    end          
 end                                             
 if(@accion=1)--generar reporte de movs que vencen                                            
 begin                                             
   set @ssql=''select distinct fd.folio as ID,fd.id_emp,fdd.id_plaza,FD.FOLIO,e.RFC AS FILIACION,E.CURP,(rtrim(e.nombre) + '''' '''' + rtrim(appaterno) + '''' '''' + rtrim(apmaterno)) ''''NOMBRE'''',pi.PLAZAIEEPO AS PLAZA,                                            
   fid.CENTRO_TRABAJO,                                            
   ftm.Clave as TIPO,                                         
   fmm.Clave as MOTIVO,                                            
   fmm.DESCRIPCION,                                            
   CONCEPTO= case when cpto.resultado is null then '''''''' else cpto.resultado  end,                                            
   "IMPORTE"= case                                             
                  when vf.Valor is null then cast('''''''' as varchar(10))                                              
                  when cpto.id_concepto in (1568,1449) then (vf.Valor)                                           
         when cpto.id_concepto in (1566,1308) then ((vf.Valor * 2))                                        
         else (vf.Valor * 2)                                                                           
              end                                            
   , dbo.fechaToAnioQuincena(fdd.fechaini) as DESDE,                                            
   HASTA= case when dbo.fechaToAnioQuincena(fdd.fechaini)=dbo.fechaToAnioQuincena(fdd.fechafin) and fdd.Id_MotivoMovimiento not in (select Id_MotivoMovimiento from FUP_MotivoMovimiento where muestrafechafin=1) then ''''999924''''                              
 
    
      
         
          
           
               
      when dbo.fechaToAnioQuincena(fdd.fechaini)=dbo.fechaToAnioQuincena(fdd.fechafin) and fdd.Id_MotivoMovimiento in (select Id_MotivoMovimiento from FUP_MotivoMovimiento where muestrafechafin=1) then dbo.fechaToAnioQuincena(fdd.fechafin)                
  
    
      
        
          
            
              
                
                 
                    
                       
                        
      
                           
                             
      else dbo.fechaToAnioQuincena(fdd.fechafin) end,                                            
    tn.Descripcion as NIVEL_EDUCATIVO,fb.DESCRIPCION as ESTATUS,                                                        
 CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA                              
  
    
      
          
            
              
                
   into #vencen                                
   from fup_documentos fd with(nolock)                                                      
   inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp                                            
   inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento                                            
   inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza                                            
   inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza                                            
   inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario                                            
   inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento                                            
   inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo                                            
   inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo                                            
   inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento                                            
   left join  FUP_ValorFloat vf with(nolock) on fdd.Id_Detalle=vf.Id_Documento                                            
   inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento                                            
   inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus                                            
   left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento                                            
   left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto                                            
   where fdd.fechafin=''+ '''''''' + cast(@fechafin as varchar(30)) +'''''''' + '' and fdd.id_estatus=2 and fmm.clave not in (''''15'''',''''11'''',''''16'''',''''44'''',''''48'''',''''12'''',''''13'''',''''14'''',''''24'''') and fmm.id_motivomovimiento not in (379,380,328)''                          
  
    
     
                                                           
   if(@where<>'''')                              
   begin                               
        set @ssql= @ssql + @where                              
   end                              
                                 
   set @ssql=@ssql +''  delete c from fup_documentos fd                                
   inner join fup_documento_detalle fdd on fd.id_documento=fdd.id_documento                                
   inner join fup_motivomovimiento fmm on fdd.id_motivomovimiento=fmm.id_motivomovimiento                                
   inner join fup_tipomovimiento ftm on fmm.id_tipomovimiento=ftm.id_tipomovimiento                                
   inner join #vencen c on fd.id_emp=c.id_emp and fdd.id_plaza=c.id_plaza                                
   where fmm.id_tipomovimiento in (6,7) and fdd.id_estatus=2                                
   and dbo.fechatoanioquincena(fdd.fechaini)>=c.desde''                              
                               
   set @ssql=@ssql + ''  select ID,FOLIO,FILIACION,CURP,NOMBRE,PLAZA,CENTRO_TRABAJO,TIPO,MOTIVO,CONCEPTO,IMPORTE,DESDE,HASTA,NIVEL_EDUCATIVO,ESTATUS,QNA from #vencen                                
   ORDER BY NIVEL_EDUCATIVO,FILIACION''                              
                              
   exec(@ssql)                                                
 end                               
                                            
 if(@accion=2)--obtiene total folios                                            
 begin                                                    
   set @ssql=''select distinct fd.folio as ID,fd.id_emp,fdd.id_plaza,FD.FOLIO,e.RFC AS FILIACION,E.CURP,(rtrim(e.nombre) + '''' '''' + rtrim(appaterno) + '''' '''' + rtrim(apmaterno)) ''''NOMBRE'''',pi.PLAZAIEEPO AS PLAZA,                               
   fid.CENTRO_TRABAJO,                                            
   ftm.Clave as TIPO,                                            
 fmm.Clave as MOTIVO,                                            
   fmm.DESCRIPCION,                                            
   CONCEPTO= case when cpto.resultado is null then '''''''' else cpto.resultado  end,                                            
   "IMPORTE"= case                                             
                  when vf.Valor is null then cast('''''''' as varchar(10))                                              
                  when cpto.id_concepto in (1568,1449) then (vf.Valor)                                           
         when cpto.id_concepto in (1566,1308) then ((vf.Valor * 2))                         
         else (vf.Valor * 2)                                                                           
              end                                            
   , dbo.fechaToAnioQuincena(fdd.fechaini) as DESDE,                                            
   HASTA= case when dbo.fechaToAnioQuincena(fdd.fechaini)=dbo.fechaToAnioQuincena(fdd.fechafin) and fdd.Id_MotivoMovimiento not in (select Id_MotivoMovimiento from FUP_MotivoMovimiento where muestrafechafin=1) then ''''999924''''                              
  
    
     
         
         
            
              
               
      when dbo.fechaToAnioQuincena(fdd.fechaini)=dbo.fechaToAnioQuincena(fdd.fechafin) and fdd.Id_MotivoMovimiento in (select Id_MotivoMovimiento from FUP_MotivoMovimiento where muestrafechafin=1) then dbo.fechaToAnioQuincena(fdd.fechafin)                
  
    
      
        
          
            
              
                
                  
                    
                      
                        
                          
                            
      else dbo.fechaToAnioQuincena(fdd.fechafin) end,                                            
    tn.Descripcion as NIVEL_EDUCATIVO,fb.DESCRIPCION as ESTATUS,                                                        
   CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA                            
  
    
      
        
          
            
              
                
   into #vencen2                                
   from fup_documentos fd with(nolock)                                                      
   inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp                                            
   inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento                                            
   inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza                                            
   inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza                                            
   inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario                                  
   inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento                                            
   inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo                          
   inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo                         inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento                    
   
       
       
   left join  FUP_ValorFloat vf with(nolock) on fdd.Id_Detalle=vf.Id_Documento                                            
   inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento                                            
   inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus                                            
   left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento                                            
   left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto                    
   where fdd.fechafin=''+ '''''''' + cast(@fechafin as varchar(30)) +'''''''' + '' and fdd.id_estatus=2 and fmm.clave not in (''''15'''',''''11'''',''''16'''',''''44'''',''''48'''',''''12'''',''''13'''',''''14'''',''''24'''') and fmm.id_motivomovimiento not in (379,380,328)''                         
   
    
     
                                                           
   if(@where<>'''')                              
   begin                               
        set @ssql= @ssql + @where                              
   end                              
                                 
   set @ssql=@ssql +''     delete c from fup_documentos fd                                
   inner join fup_documento_detalle fdd on fd.id_documento=fdd.id_documento                                
   inner join fup_motivomovimiento fmm on fdd.id_motivomovimiento=fmm.id_motivomovimiento                                
   inner join fup_tipomovimiento ftm on fmm.id_tipomovimiento=ftm.id_tipomovimiento                                
   inner join #vencen2 c on fd.id_emp=c.id_emp and fdd.id_plaza=c.id_plaza                                
   where fmm.id_tipomovimiento in (6,7) and fdd.id_estatus=2                                
   and dbo.fechatoanioquincena(fdd.fechaini)>=c.desde''                              
                               
   set @ssql=@ssql + ''  select count(distinct folio) as totalFolios from (select distinct folio                                            
   from #vencen2                                                                         
   ) folios ''                              
                              
   exec(@ssql)                                           
 end                           
  if(@accion=3)--generar reporte de movs que vencen solo exportacion a excel/pdf                          
 begin                                             
   set @ssql=''select fd.id_emp,fdd.id_plaza,FD.FOLIO,e.RFC AS FILIACION,E.CURP,(rtrim(e.nombre) + '''' '''' + rtrim(appaterno) + '''' '''' + rtrim(apmaterno)) ''''NOMBRE'''',pi.PLAZAIEEPO AS PLAZA,                                            
   fid.CENTRO_TRABAJO,                                            
   ftm.Clave as TIPO,                                            
   fmm.Clave as MOTIVO,                                            
   fmm.DESCRIPCION,                                            
   CONCEPTO= case when cpto.resultado is null then '''''''' else cpto.resultado  end,                                            
   "IMPORTE"= case                                             
                  when vf.Valor is null then cast('''''''' as varchar(10))                                              
                  when cpto.id_concepto in (1568,1449) then (vf.Valor)                                           
         when cpto.id_concepto in (1566,1308) then ((vf.Valor * 2))                                        
         else (vf.Valor * 2)                                                                           
              end                                            
   , dbo.fechaToAnioQuincena(fdd.fechaini) as DESDE,                                            
   HASTA= case when dbo.fechaToAnioQuincena(fdd.fechaini)=dbo.fechaToAnioQuincena(fdd.fechafin) and fdd.Id_MotivoMovimiento not in (select Id_MotivoMovimiento from FUP_MotivoMovimiento where muestrafechafin=1) then ''''999924''''                              
  
   
       
       
          
             
              
      when dbo.fechaToAnioQuincena(fdd.fechaini)=dbo.fechaToAnioQuincena(fdd.fechafin) and fdd.Id_MotivoMovimiento in (select Id_MotivoMovimiento from FUP_MotivoMovimiento where muestrafechafin=1) then dbo.fechaToAnioQuincena(fdd.fechafin)                
  
    
      
        
          
            
              
                
                  
                   
                       
                        
                          
                           
           
      else dbo.fechaToAnioQuincena(fdd.fechafin) end,                                
    tn.Descripcion as NIVEL_EDUCATIVO,fb.DESCRIPCION as ESTATUS,                                                        
   CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA                            
  
    
      
        
          
            
              
                
   into #vencenExportacion                               
   from fup_documentos fd with(nolock)                                                      
   inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp                                            
   inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento                                            
   inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza                                            
   inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza                                            
   inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario               
   inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento                                            
   inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo                                            
   inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo                                            
   inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento                                            
   left join  FUP_ValorFloat vf with(nolock) on fdd.Id_Detalle=vf.Id_Documento                                            
   inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento                                            
   inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus                                            
   left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento                                            
   left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto                                            
   where fdd.fechafin=''+ '''''''' + cast(@fechafin as varchar(30)) +'''''''' + '' and fdd.id_estatus=2 and fmm.clave not in (''''15'''',''''11'''',''''16'''',''''44'''',''''48'''',''''12'''',''''13'''',''''14'''',''''24'''') and fmm.id_motivomovimiento not in (379,380,328)''                          
  
    
     
                                                           
   if(@where<>'''')                              
   begin                               
        set @ssql= @ssql + @where                              
   end                              
                                 
   set @ssql=@ssql +''  delete c from fup_documentos fd                                
   inner join fup_documento_detalle fdd on fd.id_documento=fdd.id_documento                                
   inner join fup_motivomovimiento fmm on fdd.id_motivomovimiento=fmm.id_motivomovimiento                                
   inner join fup_tipomovimiento ftm on fmm.id_tipomovimiento=ftm.id_tipomovimiento                                
   inner join #vencenExportacion c on fd.id_emp=c.id_emp and fdd.id_plaza=c.id_plaza        
   where fmm.id_tipomovimiento in (6,7) and fdd.id_estatus=2                                
   and dbo.fechatoanioquincena(fdd.fechaini)>=c.desde''                              
                               
   set @ssql=@ssql + ''  select FOLIO,FILIACION,CURP,NOMBRE,PLAZA,CENTRO_TRABAJO,TIPO,MOTIVO,CONCEPTO,IMPORTE,DESDE,HASTA,NIVEL_EDUCATIVO,ESTATUS,QNA from #vencenExportacion                                
   ORDER BY NIVEL_EDUCATIVO,FILIACION''                              
                              
   exec(@ssql)                                                
 end                        
   if(@accion=4)--generar reporte de totales por movimiento general                        
  begin                         
       if(@id_tipoagrupador=1)                        
     begin                        
    set @ssql=@ssql+'' if ((select distinct count (*) as NUMERO_DE_CASOS                        
      from fup_documentos fd                                    
      inner join empleados e on fd.Id_Emp = e.Id_Emp                        
      inner join fup_documento_detalle fdd on fd.Id_Documento = fdd.Id_Documento                        
      inner join plazas p on fdd.Id_Plaza = p.Id_plaza                        
      inner join plazaieepo pi on fdd.Id_Plaza = pi.Id_plaza                        
      inner join usuarios u on fd.Id_Usuario = u.Id_Usuario                        
      inner join FUP_Informacion_Documentos fid on fd.Id_Documento = fid.Id_Documento                        
      inner join CalenNomina c on fid.Id_Periodo = c.Id_Periodo                        
      inner join TNivelEducativo tn on fid.Id_Nivel_Educativo=tn.id_NivelEducativo                        
      inner join FUP_MotivoMovimiento fmm on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento                             
      inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento                             
      where fd.id_estatus=2 and fid.id_periodo in (                        
      select id_periodo from calennomina where numero=''+ '''''''' + cast(@qna_totales as varchar(30)) +'''''''' +'' and año='' + '''''''' + cast(@anio_totales as varchar(30)) +'''''''' +'')''                        
      if(@where<>'''')                              
         begin                               
       set @ssql= @ssql + @where                              
         end                        
      set @ssql= @ssql +'')=0)                         
      begin select distinct ftm.clave as id,ftm.clave as TIPO,fmm.clave as MOTIVO,fmm.descripcion as DESCRIPCION_DEL_MOVIMIENTO, count (*) as NUMERO_DE_CASOS                        
      from fup_documentos fd                                    
      inner join empleados e on fd.Id_Emp = e.Id_Emp                        
      inner join fup_documento_detalle fdd on fd.Id_Documento = fdd.Id_Documento                        
      inner join plazas p on fdd.Id_Plaza = p.Id_plaza                        
      inner join plazaieepo pi on fdd.Id_Plaza = pi.Id_plaza                        
      inner join usuarios u on fd.Id_Usuario = u.Id_Usuario                      
      inner join FUP_Informacion_Documentos fid on fd.Id_Documento = fid.Id_Documento                        
      inner join CalenNomina c on fid.Id_Periodo = c.Id_Periodo                        
      inner join TNivelEducativo tn on fid.Id_Nivel_Educativo=tn.id_NivelEducativo                        
      inner join FUP_MotivoMovimiento fmm on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento                             
      inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento                             
      where fd.id_estatus=2 and fid.id_periodo in (                        
      select id_periodo from calennomina where numero=''+ '''''''' + cast(@qna_totales as varchar(30)) +'''''''' +'' and año='' + '''''''' + cast(@anio_totales as varchar(30)) +'''''''' +'')''                        
      if(@where<>'''')                              
         begin                               
       set @ssql= @ssql + @where                              
         end                          
      set @ssql=@ssql+'' group by ftm.clave,fmm.clave,fmm.descripcion ''                        
      +'' end else begin ''                        
      +'' select distinct ftm.clave as id,ftm.clave as TIPO,fmm.clave as MOTIVO,fmm.descripcion as DESCRIPCION_DEL_MOVIMIENTO, count (*) as NUMERO_DE_CASOS                        
      from fup_documentos fd                                    
      inner join empleados e on fd.Id_Emp = e.Id_Emp                
      inner join fup_documento_detalle fdd on fd.Id_Documento = fdd.Id_Documento                        
      inner join plazas p on fdd.Id_Plaza = p.Id_plaza                        
      inner join plazaieepo pi on fdd.Id_Plaza = pi.Id_plaza                        
      inner join usuarios u on fd.Id_Usuario = u.Id_Usuario                        
      inner join FUP_Informacion_Documentos fid on fd.Id_Documento = fid.Id_Documento                        
      inner join CalenNomina c on fid.Id_Periodo = c.Id_Periodo                        
      inner join TNivelEducativo tn on fid.Id_Nivel_Educativo=tn.id_NivelEducativo                        
      inner join FUP_MotivoMovimiento fmm on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento                             
      inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento                             
      where fd.id_estatus=2 and fid.id_periodo in (                        
      select id_periodo from calennomina where numero=''+ '''''''' + cast(@qna_totales as varchar(30)) +'''''''' +'' and año='' + '''''''' + cast(@anio_totales as varchar(30)) +'''''''' +'')''                        
      if(@where<>'''')                              
         begin                               
       set @ssql= @ssql + @where                              
         end                          
      set @ssql=@ssql+'' group by ftm.clave,fmm.clave,fmm.descripcion ''                        
      +''union''                              
      +'' select distinct '''''''' id,'''''''','''''''',''''TOTAL'''', count (*) as NUMERO_DE_CASOS                        
      from fup_documentos fd                                    
      inner join empleados e on fd.Id_Emp = e.Id_Emp                        
      inner join fup_documento_detalle fdd on fd.Id_Documento = fdd.Id_Documento                        
      inner join plazas p on fdd.Id_Plaza = p.Id_plaza                        
      inner join plazaieepo pi on fdd.Id_Plaza = pi.Id_plaza                        
      inner join usuarios u on fd.Id_Usuario = u.Id_Usuario                        
      inner join FUP_Informacion_Documentos fid on fd.Id_Documento = fid.Id_Documento                        
      inner join CalenNomina c on fid.Id_Periodo = c.Id_Periodo                        
      inner join TNivelEducativo tn on fid.Id_Nivel_Educativo=tn.id_NivelEducativo                        
      inner join FUP_MotivoMovimiento fmm on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento                             
      inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento                         
      where fd.id_estatus=2 and fid.id_periodo in (                        
      select id_periodo from calennomina where numero=''+ '''''''' + cast(@qna_totales as varchar(30)) +'''''''' +'' and año='' + '''''''' + cast(@anio_totales as varchar(30)) +'''''''' +'')''                        
      if(@where<>'''')                              
         begin                               
       set @ssql= @ssql + @where                              
         end                        
      set @ssql=@ssql+'' order by ftm.clave DESC end''                        
                              
      exec (@ssql)                        
     end                        
  if(@id_tipoagrupador=2)                        
     begin                        
    set @ssql=''select isnull(ftm.clave+''''-''''+fmm.clave+'''' ''''+ fmm.descripcion,''''SUBTOTAL'''') as DESCRIPCION_DEL_MOVIMIENTO,tn.descripcion as NIVEL_EDUCATIVO, CAST(count (*) AS VARCHAR(10))                        
        as NUMERO_DE_CASOS,cast('''''''' as varchar(10)) TOTAL_NIVEL                        
       into #totalmovs_nivel                        
       from fup_documentos fd                                    
       inner join empleados e on fd.Id_Emp = e.Id_Emp                        
       inner join fup_documento_detalle fdd on fd.Id_Documento = fdd.Id_Documento                        
       inner join plazas p on fdd.Id_Plaza = p.Id_plaza                        
       inner join plazaieepo pi on fdd.Id_Plaza = pi.Id_plaza                        
       inner join usuarios u on fd.Id_Usuario = u.Id_Usuario                        
       inner join FUP_Informacion_Documentos fid on fd.Id_Documento = fid.Id_Documento                       
       inner join CalenNomina c on fid.Id_Periodo = c.Id_Periodo                        
       inner join TNivelEducativo tn on fid.Id_Nivel_Educativo=tn.id_NivelEducativo                        
       inner join FUP_MotivoMovimiento fmm on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento                        
       inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento                        
       where fd.id_estatus=2 and fid.id_periodo in (select id_periodo from calennomina where numero=''+ '''''''' + cast(@qna_totales as varchar(30)) +'''''''' +'' and año='' + '''''''' + cast(@anio_totales as varchar(30)) +'''''''' +'')''                        
       if(@where<>'''')                              
       begin                               
        set @ssql= @ssql + @where               
       end                         
                               
       set @ssql=@ssql+'' group by tn.descripcion,ftm.clave+''''-''''+fmm.clave+'''' ''''+fmm.descripcion with rollup''                         
                        
       if(@where<>'''')                         
        begin                         
         set @ssql=@ssql+'' if ((SELECT count(*) as total from #totalmovs_nivel)=0)                         
                                                      begin                         
                    select DESCRIPCION_DEL_MOVIMIENTO AS ID,DESCRIPCION_DEL_MOVIMIENTO,NIVEL_EDUCATIVO,NUMERO_DE_CASOS,TOTAL_NIVEL from #totalmovs_nivel                         
               end                         
               else                        
         begin                        
                delete from #totalmovs_nivel where nivel_educativo is null                        
                update #totalmovs_nivel set descripcion_del_movimiento='''''''',nivel_educativo='''''''',NUMERO_DE_CASOS='''''''',TOTAL_NIVEL=NUMERO_DE_CASOS WHERE DESCRIPCION_DEL_MOVIMIENTO=''''SUBTOTAL''''                        
                select DESCRIPCION_DEL_MOVIMIENTO AS ID,DESCRIPCION_DEL_MOVIMIENTO,NIVEL_EDUCATIVO,NUMERO_DE_CASOS,TOTAL_NIVEL from #totalmovs_nivel                        
               end''                        
        end                        
       else                        
           begin                        
         set @ssql=@ssql+'' if ((SELECT count(*) as total from #totalmovs_nivel)=0)                         
               begin                                          select DESCRIPCION_DEL_MOVIMIENTO AS ID,DESCRIPCION_DEL_MOVIMIENTO,NIVEL_EDUCATIVO,NUMERO_DE_CASOS,TOTAL_NIVEL from #totalmovs_nivel                         
               end                         
               else                        
               begin                        
                delete from #totalmovs_nivel where nivel_educativo is null                        
                update #totalmovs_nivel set descripcion_del_movimiento='''''''',nivel_educativo='''''''',NUMERO_DE_CASOS='''''''',TOTAL_NIVEL=NUMERO_DE_CASOS WHERE DESCRIPCION_DEL_MOVIMIENTO=''''SUBTOTAL''''                        
                select DESCRIPCION_DEL_MOVIMIENTO AS ID,DESCRIPCION_DEL_MOVIMIENTO,NIVEL_EDUCATIVO,NUMERO_DE_CASOS,TOTAL_NIVEL from #totalmovs_nivel                        
                UNION ALL                        
                SELECT '''''''','''''''','''''''','''''''',''''''''                     
                UNION ALL                        
                SELECT '''''''',''''TOTAL GENERAL'''','''''''','''''''',CAST(SUM(CAST(TOTAL_NIVEL AS INT))AS VARCHAR(10)) FROM #totalmovs_nivel                        
               end''                        
        end                                   
       exec (@ssql)                        
     end                        
  end                        
 if(@accion=5)--generar reporte exportacion de totales excel                         
  begin                         
       if(@id_tipoagrupador=1)                        
      begin                         
           set @ssql=@ssql+'' if ((select distinct count (*) as NUMERO_DE_CASOS                        
      from fup_documentos fd                                    
      inner join empleados e on fd.Id_Emp = e.Id_Emp                        
      inner join fup_documento_detalle fdd on fd.Id_Documento = fdd.Id_Documento                        
      inner join plazas p on fdd.Id_Plaza = p.Id_plaza                        
      inner join plazaieepo pi on fdd.Id_Plaza = pi.Id_plaza                        
      inner join usuarios u on fd.Id_Usuario = u.Id_Usuario                        
      inner join FUP_Informacion_Documentos fid on fd.Id_Documento = fid.Id_Documento                        
      inner join CalenNomina c on fid.Id_Periodo = c.Id_Periodo                        
      inner join TNivelEducativo tn on fid.Id_Nivel_Educativo=tn.id_NivelEducativo                        
      inner join FUP_MotivoMovimiento fmm on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento                             
      inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento                             
      where fd.id_estatus=2 and fid.id_periodo in (                        
      select id_periodo from calennomina where numero=''+ '''''''' + cast(@qna_totales as varchar(30)) +'''''''' +'' and año='' + '''''''' + cast(@anio_totales as varchar(30)) +'''''''' +'')''                        
      if(@where<>'''')                              
         begin                               
       set @ssql= @ssql + @where                              
         end                        
      set @ssql= @ssql +'')=0)                         
     begin select distinct ftm.clave as TIPO,fmm.clave as MOTIVO,fmm.descripcion as DESCRIPCION_DEL_MOVIMIENTO, count (*) as NUMERO_DE_CASOS                        
      from fup_documentos fd                                    
      inner join empleados e on fd.Id_Emp = e.Id_Emp                        
      inner join fup_documento_detalle fdd on fd.Id_Documento = fdd.Id_Documento                        
      inner join plazas p on fdd.Id_Plaza = p.Id_plaza                        
      inner join plazaieepo pi on fdd.Id_Plaza = pi.Id_plaza                        
      inner join usuarios u on fd.Id_Usuario = u.Id_Usuario                        
      inner join FUP_Informacion_Documentos fid on fd.Id_Documento = fid.Id_Documento                        
      inner join CalenNomina c on fid.Id_Periodo = c.Id_Periodo                        
      inner join TNivelEducativo tn on fid.Id_Nivel_Educativo=tn.id_NivelEducativo                   
      inner join FUP_MotivoMovimiento fmm on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento                             
      inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento                             
      where fd.id_estatus=2 and fid.id_periodo in (                        
      select id_periodo from calennomina where numero=''+ '''''''' + cast(@qna_totales as varchar(30)) +'''''''' +'' and año='' + '''''''' + cast(@anio_totales as varchar(30)) +'''''''' +'')''                        
      if(@where<>'''')                              
         begin        
       set @ssql= @ssql + @where                              
         end                          
      set @ssql=@ssql+'' group by ftm.clave,fmm.clave,fmm.descripcion ''                        
      +'' end else begin ''                        
      +'' select distinct ftm.clave as TIPO,fmm.clave as MOTIVO,fmm.descripcion as DESCRIPCION_DEL_MOVIMIENTO, count (*) as NUMERO_DE_CASOS                        
      from fup_documentos fd                                    
      inner join empleados e on fd.Id_Emp = e.Id_Emp                        
      inner join fup_documento_detalle fdd on fd.Id_Documento = fdd.Id_Documento                        
      inner join plazas p on fdd.Id_Plaza = p.Id_plaza                        
      inner join plazaieepo pi on fdd.Id_Plaza = pi.Id_plaza                        
      inner join usuarios u on fd.Id_Usuario = u.Id_Usuario                        
      inner join FUP_Informacion_Documentos fid on fd.Id_Documento = fid.Id_Documento                        
      inner join CalenNomina c on fid.Id_Periodo = c.Id_Periodo                        
      inner join TNivelEducativo tn on fid.Id_Nivel_Educativo=tn.id_NivelEducativo                        
      inner join FUP_MotivoMovimiento fmm on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento                             
      inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento                             
      where fd.id_estatus=2 and fid.id_periodo in (                        
      select id_periodo from calennomina where numero=''+ '''''''' + cast(@qna_totales as varchar(30)) +'''''''' +'' and año='' + '''''''' + cast(@anio_totales as varchar(30)) +'''''''' +'')''                        
      if(@where<>'''')                              
         begin                               
       set @ssql= @ssql + @where                              
         end                          
      set @ssql=@ssql+'' group by ftm.clave,fmm.clave,fmm.descripcion ''                        
      +''union''                              
      +'' select distinct '''''''','''''''',''''TOTAL'''', count (*) as NUMERO_DE_CASOS                        
      from fup_documentos fd                                    
  inner join empleados e on fd.Id_Emp = e.Id_Emp                        
      inner join fup_documento_detalle fdd on fd.Id_Documento = fdd.Id_Documento                        
      inner join plazas p on fdd.Id_Plaza = p.Id_plaza                        
      inner join plazaieepo pi on fdd.Id_Plaza = pi.Id_plaza                 
      inner join usuarios u on fd.Id_Usuario = u.Id_Usuario                        
      inner join FUP_Informacion_Documentos fid on fd.Id_Documento = fid.Id_Documento                        
      inner join CalenNomina c on fid.Id_Periodo = c.Id_Periodo                        
      inner join TNivelEducativo tn on fid.Id_Nivel_Educativo=tn.id_NivelEducativo                        
      inner join FUP_MotivoMovimiento fmm on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento                             
      inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento                             
      where fd.id_estatus=2 and fid.id_periodo in (                        
      select id_periodo from calennomina where numero=''+ '''''''' + cast(@qna_totales as varchar(30)) +'''''''' +'' and año='' + '''''''' + cast(@anio_totales as varchar(30)) +'''''''' +'')''                        
      if(@where<>'''')           
         begin                               
       set @ssql= @ssql + @where                              
         end                        
      set @ssql=@ssql+'' order by ftm.clave DESC end''                        
                              
      exec (@ssql)                        
   end                        
 if(@id_tipoagrupador=2)                        
     begin                        
    set @ssql=''select isnull(ftm.clave+''''-''''+fmm.clave+'''' ''''+ fmm.descripcion,''''SUBTOTAL'''') as DESCRIPCION_DEL_MOVIMIENTO,tn.descripcion as NIVEL_EDUCATIVO, CAST(count (*) AS VARCHAR(10))                        
        as NUMERO_DE_CASOS,cast('''''''' as varchar(10)) TOTAL_NIVEL                        
       into #totalmovs_nivel                        
       from fup_documentos fd                                    
       inner join empleados e on fd.Id_Emp = e.Id_Emp                        
       inner join fup_documento_detalle fdd on fd.Id_Documento = fdd.Id_Documento                        
       inner join plazas p on fdd.Id_Plaza = p.Id_plaza                        
       inner join plazaieepo pi on fdd.Id_Plaza = pi.Id_plaza                        
       inner join usuarios u on fd.Id_Usuario = u.Id_Usuario                        
       inner join FUP_Informacion_Documentos fid on fd.Id_Documento = fid.Id_Documento                        
       inner join CalenNomina c on fid.Id_Periodo = c.Id_Periodo                        
       inner join TNivelEducativo tn on fid.Id_Nivel_Educativo=tn.id_NivelEducativo                        
       inner join FUP_MotivoMovimiento fmm on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento                        
       inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento                        
       where fd.id_estatus=2 and fid.id_periodo in (select id_periodo from calennomina where numero=''+ '''''''' + cast(@qna_totales as varchar(30)) +'''''''' +'' and año='' + '''''''' + cast(@anio_totales as varchar(30)) +'''''''' +'')''                        
       if(@where<>'''')                              
       begin                               
        set @ssql= @ssql + @where                              
       end                         
                               
       set @ssql=@ssql+'' group by tn.descripcion,ftm.clave+''''-''''+fmm.clave+'''' ''''+fmm.descripcion with rollup''                         
                        
    if(@where<>'''')                         
        begin                         
         set @ssql=@ssql+'' if ((SELECT count(*) as total from #totalmovs_nivel)=0)                         
                                                      begin                         
                    select DESCRIPCION_DEL_MOVIMIENTO,NIVEL_EDUCATIVO,NUMERO_DE_CASOS,TOTAL_NIVEL from #totalmovs_nivel                       
               end                         
               else                        
                           begin                        
                delete from #totalmovs_nivel where nivel_educativo is null                        
                update #totalmovs_nivel set descripcion_del_movimiento='''''''',nivel_educativo='''''''',NUMERO_DE_CASOS='''''''',TOTAL_NIVEL=NUMERO_DE_CASOS WHERE DESCRIPCION_DEL_MOVIMIENTO=''''SUBTOTAL''''                        
                select DESCRIPCION_DEL_MOVIMIENTO,NIVEL_EDUCATIVO,NUMERO_DE_CASOS,TOTAL_NIVEL from #totalmovs_nivel                        
               end''                        
    end                        
       else                        
           begin                        
         set @ssql=@ssql+'' if ((SELECT count(*) as total from #totalmovs_nivel)=0)                         
                                                      begin                         
                   select DESCRIPCION_DEL_MOVIMIENTO,NIVEL_EDUCATIVO,NUMERO_DE_CASOS,TOTAL_NIVEL from #totalmovs_nivel                         
               end                         
               else                        
               begin                        
                delete from #totalmovs_nivel where nivel_educativo is null                        
                update #totalmovs_nivel set descripcion_del_movimiento='''''''',nivel_educativo='''''''',NUMERO_DE_CASOS='''''''',TOTAL_NIVEL=NUMERO_DE_CASOS WHERE DESCRIPCION_DEL_MOVIMIENTO=''''SUBTOTAL''''                        
                select DESCRIPCION_DEL_MOVIMIENTO,NIVEL_EDUCATIVO,NUMERO_DE_CASOS,TOTAL_NIVEL from #totalmovs_nivel                        
                UNION ALL                        
           SELECT '''''''','''''''','''''''',''''''''                        
                UNION ALL                        
                SELECT ''''TOTAL GENERAL'''','''''''','''''''',CAST(SUM(CAST(TOTAL_NIVEL AS INT))AS VARCHAR(10)) FROM #totalmovs_nivel                        
               end''                        
        end                                   
       exec (@ssql)                        
     end                        
  end                        
  if(@accion=6)--generar reporte de totales por estatus procesados, rechazados,etc                        
  begin                                
    set @ssql=''select fe.descripcion as estatus ,CAST(count (*) AS VARCHAR(10)) as numero_de_casos                        
         into #rep_estatus                        
 from fup_documentos fd                        
         inner join empleados e on fd.Id_Emp = e.Id_Emp                        
         inner join fup_documento_detalle fdd on fd.Id_Documento = fdd.Id_Documento                        
         inner join plazas p on fdd.Id_Plaza = p.Id_plaza                        
         inner join plazaieepo pi on fdd.Id_Plaza = pi.Id_plaza                        
         inner join usuarios u on fd.Id_Usuario = u.Id_Usuario                        
         inner join FUP_Informacion_Documentos fid on fd.Id_Documento = fid.Id_Documento                        
         inner join CalenNomina c on fid.Id_Periodo = c.Id_Periodo                        
         inner join TNivelEducativo tn on fid.Id_Nivel_Educativo=tn.id_NivelEducativo                        
         inner join FUP_MotivoMovimiento fmm on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento                        
         inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento                        
         inner join fup_estatus fe on fd.id_estatus=fe.id_estatus                        
         where fid.id_periodo in (select id_periodo from calennomina where numero=''+ '''''''' + cast(@qna_totales as varchar(30)) +'''''''' +'' and año='' + '''''''' + cast(@anio_totales as varchar(30)) +'''''''' +'')''                        
         +'' group by fd.id_estatus,fe.descripcion ''                        
                        
         +'' if ((SELECT count(*) as total from #rep_estatus)=0)                         
                              begin SELECT estatus as id,estatus,numero_de_casos from #rep_estatus end else''                        
         +'' begin                         
         SELECT estatus as id,estatus,numero_de_casos from #rep_estatus                        
         union all                        
         select '''''''','''''''',''''''''                        
         union all                        
         select '''''''',''''TOTAL'''',isnull(CAST(SUM(CAST(numero_de_casos AS INT))AS VARCHAR(10)),'''''''') from #rep_estatus end''                              
                              
         exec(@ssql)                          
  end                        
  if(@accion=7)--generar reporte de totales por estatus procesados, rechazados,etc para exportacion                        
  begin                                
    set @ssql=''select fe.descripcion as estatus ,CAST(count (*) AS VARCHAR(10)) as numero_de_casos                        
         into #rep_estatus                        
         from fup_documentos fd                        
         inner join empleados e on fd.Id_Emp = e.Id_Emp                        
         inner join fup_documento_detalle fdd on fd.Id_Documento = fdd.Id_Documento                        
         inner join plazas p on fdd.Id_Plaza = p.Id_plaza                        
         inner join plazaieepo pi on fdd.Id_Plaza = pi.Id_plaza                        
         inner join usuarios u on fd.Id_Usuario = u.Id_Usuario                        
         inner join FUP_Informacion_Documentos fid on fd.Id_Documento = fid.Id_Documento                        
         inner join CalenNomina c on fid.Id_Periodo = c.Id_Periodo                        
 inner join TNivelEducativo tn on fid.Id_Nivel_Educativo=tn.id_NivelEducativo                        
         inner join FUP_MotivoMovimiento fmm on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento                        
         inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento                        
         inner join fup_estatus fe on fd.id_estatus=fe.id_estatus                        
         where fid.id_periodo in (select id_periodo from calennomina where numero=''+ '''''''' + cast(@qna_totales as varchar(30)) +'''''''' +'' and año='' + '''''''' + cast(@anio_totales as varchar(30)) +'''''''' +'')''                        
         +'' group by fd.id_estatus,fe.descripcion ''                        
         +'' if ((SELECT count(*) as total from #rep_estatus)=0)                         
                              begin SELECT estatus,numero_de_casos from #rep_estatus end else''                        
         +'' begin                       
         SELECT estatus,numero_de_casos from #rep_estatus                        
         union all                        
         select '''''''',''''''''                        
         union all                        
         select ''''TOTAL'''',isnull(CAST(SUM(CAST(numero_de_casos AS INT))AS VARCHAR(10)),'''''''') from #rep_estatus end''                              
                              
         exec(@ssql)                       
  end                                              
end '
GO

GO
PRINT N'Creating [dbo].[spd_EliminaCalculo]'
GO
IF OBJECT_ID(N'[dbo].[spd_EliminaCalculo]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		wcahun
-- Create date: Mar-2014
-- Description:	Procedimiento para eliminarun recalculo completo
-- =============================================
CREATE PROCEDURE [dbo].[spd_EliminaCalculo]
	@id_plaza int
	,@id_periodo int
	,@id_emp int
	,@id_periodopago int
AS
BEGIN
	

	delete from histpagos
	where ID_PLAZA=@id_plaza AND ID_EMP=@id_emp AND id_periodo=@id_periodo 
		AND @id_periodopago=@id_periodopago 

	select ''correcto'' as resultado   
END

'
GO

GO
PRINT N'Creating [dbo].[spdHistPagosDetallePeriodoRecalculo]'
GO
IF OBJECT_ID(N'[dbo].[spdHistPagosDetallePeriodoRecalculo]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		wcahun
-- Create date: 10/10/2013
-- Description:	procedimiento para eliminar un recalculo histpagos detalle  base a su periodo
-- =============================================
CREATE PROCEDURE [dbo].[spdHistPagosDetallePeriodoRecalculo]
	@id_plaza int
	,@id_emp int
	,@id_periodo int
	,@id_recalculo int
	,@periodos varchar(1000)
AS
BEGIN

DECLARE @Xml AS XML        
		--Se crean los nodos periodo
		SET @Xml = ''<periodo>'' + REPLACE(@periodos, '','', ''</periodo><periodo>'') + ''</periodo>'';


BEGIN TRY

	delete from histpagosdetalle
	where ID_PERIODO=@id_periodo and id_referencia=@id_recalculo
	and id_plaza=@id_plaza and id_emp=@id_emp
	and id_periodopago IN (SELECT periodos.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodos(n))
	
	if @@rowcount<1 
		RAISERROR (''no se elimino ningun valor'', 16,1);
	else
		select ''correcto'' as resultado
END TRY
BEGIN CATCH
    SELECT ERROR_MESSAGE() as resultado
    
END CATCH;


END

'
GO

GO
PRINT N'Creating [dbo].[SIGP_AnaliticoPlazas]'
GO
IF OBJECT_ID(N'[dbo].[SIGP_AnaliticoPlazas]', 'P') IS NULL
EXEC sp_executesql N'CREATE procedure [dbo].[SIGP_AnaliticoPlazas] AS                  
BEGIN                
SET NOCOUNT ON;                  
   -- VERSION ANTES DEL 07/02/2019            
   --select distinct pie.partida as CODIGO_PAGO, pie.UNIDAD,pie.SUBUNIDAD, replace(pie.CATEGORIA,'' '',''''), pie.HORAS, pie.Diagonal as CONSECUTIVO,              
   --'''' as ESTRUCTURA_FUNCIONAL,an.cct as CENTRO_TRABAJO,              
   --convert(varchar,p.fechaCreacion,103) as VIGENCIA_INICIO,        
   --case when p.FechaVencimiento > ''01-01-2990'' then ''00/00/0000'' else convert(varchar,p.fechaVencimiento,103) end as VIGENCIA_TERMINO            
   --from plazaieepo pie              
   --inner join plazas p on pie.id_plaza = p.id_plaza              
   --inner join hplazas_concifed an on replace(pie.plazaieepo,'' '','''') = an.codigo_plaza         
   --where pie.pc = 1 and p.fechaVencimiento > = getdate() and pie.Partida = ''07''        
         
   select pie.partida as CODIGO_PAGO, pie.UNIDAD,pie.SUBUNIDAD, RIGHT(''  '' + Ltrim(Rtrim(an.codigo)),7) as CATEGORIA,       
   cast(substring(pie.horas,1,2) as varchar(3))+''.0'' as HORAS_DE_PLAZA,      
   pie.Diagonal as CONSECUTIVO,              
   an.CT_IEEPO as CENTRO_TRABAJO,  
   '''' ESTRUCTURA_FUNCIONAL_PROGRAMATICA,              
   convert(varchar,p.fechaCreacion,103) as VIGENCIA_DE_INICIO_DE_CREACION_DE_LA_PLAZA,        
   case when p.FechaVencimiento > ''01-01-2990'' then ''00/00/0000'' else convert(varchar,p.fechaVencimiento,103) end as VIGENCIA_DE_TERMINO_DE_CREACION_DE_LA_PLAZA            
   from plazaieepo pie              
   inner join plazas p on pie.id_plaza = p.id_plaza              
   inner join analitico_plazafone an on pie.Id_plaza=an.id_plaza             
   where an.estatus<>''c''
   union
   select pie.partida as CODIGO_PAGO, pie.UNIDAD,pie.SUBUNIDAD, RIGHT(''  '' + Ltrim(Rtrim(an.codigo)),7) as CATEGORIA,       
   cast(substring(pie.horas,1,2) as varchar(3))+''.0'' as HORAS_DE_PLAZA,      
   pie.Diagonal as CONSECUTIVO,              
   an.CT_IEEPO as CENTRO_TRABAJO,  
   '''' ESTRUCTURA_FUNCIONAL_PROGRAMATICA,              
   convert(varchar,p.fechaCreacion,103) as VIGENCIA_DE_INICIO_DE_CREACION_DE_LA_PLAZA,        
   case when p.FechaVencimiento > ''01-01-2990'' then ''00/00/0000'' else convert(varchar,p.fechaVencimiento,103) end as VIGENCIA_DE_TERMINO_DE_CREACION_DE_LA_PLAZA            
   from plazaieepo pie              
   inner join plazas p on pie.id_plaza= p.id_plaza              
   inner join analitico_plazafone an on replace(pie.plazaieepo,'' '','''')=an.codigo_plaza
   where an.estatus<>''c'' and an.id_plaza=0 and pie.id_plaza=251682   
         
END '
GO

GO
PRINT N'Creating [dbo].[SIGP_ConceptosPersonales]'
GO
IF OBJECT_ID(N'[dbo].[SIGP_ConceptosPersonales]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[SIGP_ConceptosPersonales]
WITH EXEC AS CALLER
AS

select * into #TTEmpleado_Plaza_Conc from (
select a.*, isnull(c.NoPlaza, cb.NoPlaza) NoPlaza, isnull(c.NoConcepto, cb.NoConcepto) NoConcepto, isnull(c.Monto, cb.Monto) Monto, isnull(c.FechaFin, cb.FechaFin) FechaFin, isnull(c.Tvigencia_id_vigencia,cb.Tvigencia_id_vigencia) Tvigencia_id_vigencia, isnull(c.Fecha, cb.Fecha) Fecha,isnull(c.descripcion , cb.descripcion) descripcion  
from (
  select h.id_emp,h.id_plaza, h.id_concepto,consecutivo, sum(h.pesos) pesos, min(h.desde) desde, max(h.hasta) hasta 
  from nom_histpagos h
  inner join plazaieepo pi on pi.Id_plaza = h.id_plaza
  where h.id_periodo in (2515,2540,2565) and h.id_concepto in (select NoConcepto from TTEmpleado_Plaza_Conc where Tvigencia_id_vigencia = 1)
  group by h.id_emp, h.id_concepto,consecutivo,h.id_plaza
) a
inner join plazas p on p.id_plaza = a.id_plaza
left join TTEmpleado_Plaza_Conc c on c.Id_Emp = a.Id_Emp and c.noconcepto = a.id_concepto and c.noplaza = p.Num_Plaza
left join TTEmpleado_Plaza_Conc_bajas cb on cb.Id_Emp = a.Id_Emp and cb.noconcepto = a.id_concepto and cb.noplaza = p.Num_Plaza
where c.id_emp is not null or cb.id_emp is not null
) h where monto > 0 and id_concepto not in (select id_concepto from ValoresMatriz5)

select a.Id_Emp,e.RFC, e.CURP, pi.Partida+''''+pi.Unidad+''''+pi.Subunidad+''''+right(''   ''+pu.Categoria,7)+''''+left(pi.Horas,2)+''.''+right(pi.Horas,1)+''''+pi.Diagonal Clave_Pago, case when c.tipo = 1 then ''PERCEPCION'' when c.tipo = 2 then ''DEDUCCION'' END Tipo_Concepto,    
  right(''000''+c.resultado,4) Clave_Concepto, a.monto Cantidad, convert(varchar,a.fecha,103) Vigencia_Inicio, case when convert(varchar,a.FechaFin,103) = ''31/12/9999'' then ''00/00/0000'' else convert(varchar,a.FechaFin,103) end Vigencia_Termino,    
  0 Numero_Prestamo, 0 Total_Descuentos, 0 Descuentos_Aplicados    
  from #TTEmpleado_Plaza_Conc a    
  inner join plazas p on p.Num_Plaza = a.NoPlaza    
  inner join PlazaIEEPO pi on pi.Id_plaza = p.Id_plaza
  inner join (select a.id_plaza, replace(p.categoria,'' '','''') categoria  from HTabulador_SE_Cat_Puesto a inner join (
    select id_plaza, max(fecha) fecha from HTabulador_SE_Cat_Puesto where fecha <= getdate() group by id_plaza
    ) b on b.id_plaza = a.id_plaza and b.fecha = a.fecha
    inner join TTabulador_SE_Cat_Puesto p on p.id_Tabulador_SE_Cat_Puesto = a.id_rel
  ) pu on pu.id_plaza = pi.id_plaza
  inner join conceptos c on c.id_concepto = a.NoConcepto    
  inner join empleados e on e.id_emp = a.Id_Emp    
  where a.Tvigencia_id_vigencia = 1 and a.descripcion not in (''XTC'')    
  and a.FechaFin >= ''2018/12/31''
  and ( exists ( select 1 from Analitico_plazaFONE pc where pc.CODIGO_PLAZA = replace(case when pi.plazaieepo like ''14%'' or pi.plazaieepo like ''15%'' then ''07''+substring(pi.plazaieepo,3, len(pi.plazaieepo)) else pi.plazaieepo end,'' '','''') and pc.ESTATUS <> ''C'' )  ) -- or pi.plazaieepo is null 
  union all  
  select d.Id_Emp,e.RFC, e.CURP,
  case when pi.plazaieepo is null then '''' else pi.Partida+''''+pi.Unidad+''''+pi.Subunidad+''''+right(''   ''+pu.Categoria,7)+''''+left(pi.Horas,2)+''.''+right(pi.Horas,1)+''''+pi.Diagonal end
  ,case when c.tipo = 1 then ''PERCEPCION'' when c.tipo = 2 then ''DEDUCCION'' END Tipo_Concepto,    
  right(''000''+c.resultado,4) Clave_Concepto, d.Descuento Cantidad, convert(varchar, d.FechApl,103 ) Vigencia_Inicio,   
  case when case when c.id_concepto in (select id_concepto from conceptos where resultado in (''21'',''33'',''39'',''42'',''51'',''53'',''55'',''56'',''57'',''64'',''94'',''SA'',''SI'') and tipo=2) then ''31/12/9999'' else  
  convert(varchar,d.fechahasta,103) end = ''31/12/9999'' then ''00/00/0000'' else case when c.id_concepto in (select id_concepto from conceptos where resultado in (''21'',''33'',''39'',''42'',''51'',''53'',''55'',''56'',''57'',''64'',''94'',''SA'',''SI'') and tipo=2) then ''31/12/9999'' else  
  convert(varchar,d.fechahasta,103) end end Vigencia_termino,    
  d.Id_Prestamo Numero_Prestamo, case when c.id_concepto in (select id_concepto from conceptos where resultado in (''21'',''33'',''39'',''42'',''51'',''53'',''55'',''56'',''57'',''64'',''94'',''SA'',''SI'') and tipo=2) then ''9999'' else d.Plazo end Total_Descuentos, d.NumPagos Descuentos_Aplicados    
  from (
      select isnull(d.id_prestamo, db.id_prestamo) id_prestamo, a.id_emp, isnull(d.id_plaza, db.id_plaza) id_plaza, a.id_concepto, 
      case when isnull(d.tipo_desc, db.tipo_desc) = ''P'' then isnull(d.descuento, db.descuento) else a.pesos end descuento, isnull(d.fechapl, db.fechapl) fechapl, isnull(d.fechahasta, db.fechahasta) fechahasta,
      isnull(d.plazo, db.plazo) plazo, dbo.PlazosDesdeHasta(dbo.fechatoanioquincena(isnull(d.fechapl, db.fechapl)), ''201824'') numpagos
      from (
        select id_emp, id_concepto,consecutivo, sum(pesos) pesos
        from nom_histpagos where id_periodo in (2515,2540,2565) and id_concepto not in (select id_concepto from Terceros_Orden)
        and id_concepto in (select id_concepto from deducsfijas) and id_concepto not in (2518,2465,2309, 2310,4209,2476)
        group by id_emp, id_concepto,consecutivo
      ) a
      left join deducsfijas d on d.id_prestamo = a.consecutivo 
      left join DeducsFijas_Bajas db on db.id_prestamo = a.consecutivo 
  ) d     
  left join plazaieepo pi on pi.id_plaza = d.id_plaza  
  left join (select a.id_plaza, replace(p.categoria,'' '','''') categoria  from HTabulador_SE_Cat_Puesto a inner join (
    select id_plaza, max(fecha) fecha from HTabulador_SE_Cat_Puesto where fecha <= getdate() group by id_plaza
    ) b on b.id_plaza = a.id_plaza and b.fecha = a.fecha
    inner join TTabulador_SE_Cat_Puesto p on p.id_Tabulador_SE_Cat_Puesto = a.id_rel
  ) pu on pu.id_plaza = pi.id_plaza
  inner join conceptos c on c.id_concepto = d.id_concepto    
  inner join empleados e on e.id_emp = d.Id_Emp    
  where  d.Descuento > 0 and c.resultado <> ''SF'' 
  and d.id_concepto not in (select id_concepto from Terceros_Orden)
  and (exists ( select 1 from Analitico_plazaFONE pc where pc.CODIGO_PLAZA = replace(case when pi.plazaieepo like ''14%'' or pi.plazaieepo like ''15%'' then ''07''+substring(pi.plazaieepo,3, len(pi.plazaieepo)) else pi.plazaieepo end,'' '','''') and pc.ESTATUS   
  <> ''C'' ) or pi.plazaieepo is null )  
  union all
  select e.Id_Emp, e.RFC, e.CURP,'''' plaza,case when c.tipo = 1 then ''PERCEPCION'' when c.tipo = 2 then ''DEDUCCION'' END Tipo_Concepto,right(''000''+c.resultado,4) concepto,
  a.pesos cantidad, convert(varchar, dbo.anioquincenatofecha(a.desde,0),103) vigencia_inicio, convert(varchar,dbo.anioquincenatofecha(a.hasta,1),103) vigencia_termino, 0 Numero_prestamo, 1 Total_descuento, 1 Descuento_aplicados
  from (
  select id_emp, id_concepto, sum(pesos) pesos, min(desde) desde, max(hasta) hasta 
  from nom_histpagos where id_periodo in (2515,2540,2565) and id_concepto in (select id_concepto from Terceros_Orden)
  group by id_emp, id_concepto
  ) a
  inner join empleados e on e.Id_Emp = a.id_emp
  inner join conceptos c on c.id_concepto = a.id_concepto
  union all
  select a.id_emp  
  ,a.rfc,a.curp,pi.Partida+''''+pi.Unidad+''''+pi.Subunidad+''''+right(''   ''+pu.Categoria,7)+''''+left(pi.Horas,2)+''.''+right(pi.Horas,1)+''''+pi.Diagonal plaza,''DEDUCCION'' as Tipo_Concepto,right(''000''+b.concepto,4) as Clave_concepto,b.importe as Cantidad,'''' Vigencia_Inicio,  
  ''00/00/0000'' as vigencia_termino,  
  0 as Numero_Prestamo,''9999'' Total_descuentos,z.total 
  from  [172.16.77.19].federacion.dbo.detalle_nomina a  
  inner join [172.16.77.19].federacion.dbo.datos_enviados_ctos b on a.num_comprobante=b.num_comprobante and a.curp=b.curp  
  inner join ut.dbo.mb_total_periodossf z on a.id_emp=z.id_emp 
  left join PlazaIEEPO pi on pi.Id_plaza = a.id_plaza
  left join (select a.id_plaza, replace(p.categoria,'' '','''') categoria  from HTabulador_SE_Cat_Puesto a inner join (
    select id_plaza, max(fecha) fecha from HTabulador_SE_Cat_Puesto where fecha <= getdate() group by id_plaza
    ) b on b.id_plaza = a.id_plaza and b.fecha = a.fecha
    inner join TTabulador_SE_Cat_Puesto p on p.id_Tabulador_SE_Cat_Puesto = a.id_rel
  ) pu on pu.id_plaza = pi.id_plaza
  where periodo=''24/2018'' and concepto in (''SF'',''33'') --6537-basica 17--upn--6554--menos 7 caos que se dieron de baja 16112018--6547'
GO

GO
PRINT N'Creating [dbo].[spf_Plaza_Vacante]'
GO
IF OBJECT_ID(N'[dbo].[spf_Plaza_Vacante]', 'P') IS NULL
EXEC sp_executesql N'CREATE procedure [dbo].[spf_Plaza_Vacante]                             
(                                
  @id_detalle as int                              
) as                                
Begin          
     declare @_id_detalle as int = @id_detalle
     declare @id_plaza as int        
     declare @fechaini as datetime        
     declare @fechaocupada as datetime        
     declare @QuincenaOcupada as varchar(6)        
     declare @idEmp_Ocupa as int        
     declare @Rfc_ocupa as varchar (13)        
     declare @CT_Ocupa as varchar(10)        
     declare @idnodo_ocupa as int        
     declare @plazaieepo as varchar (21)        
     declare @mensaje as varchar (500)    
     declare @procede as int   
     declare @hastaquincenafecha as datetime         
     declare @fecha_desligue_ocupada_plaza as datetime      
             
     set @id_plaza=(select id_plaza from FUP_Documento_Detalle where Id_Detalle=@_id_detalle)        
     set @plazaieepo=(select plazaieepo from plazaieepo where Id_plaza=@id_plaza)        
     set @fechaini=(select fechaini from fup_documento_detalle where id_detalle=@_id_detalle)      
     set @fecha_desligue_ocupada_plaza=(select top 1 fecha from plazaempleados where id_plaza=@id_plaza and id_emp=0 order by fecha desc)  
     if (@fecha_desligue_ocupada_plaza>@fechaini)  
        begin  
             set @idEmp_Ocupa=(select top 1 id_emp from plazaempleados where id_plaza=@id_plaza and id_emp<>0 order by fecha desc)
             set @fechaocupada=(select top 1 fecha from plazaempleados where id_plaza=@id_plaza and Id_Emp=@idEmp_Ocupa order by fecha desc)
             set @QuincenaOcupada=(select dbo.fechaToAnioQuincena(@fechaocupada))              
			 set @Rfc_ocupa=(select rfc from empleados where id_emp=@idEmp_Ocupa)        
			 set @idnodo_ocupa=(select max(id_nodo) from plazaempleados where id_emp=@idEmp_Ocupa and id_plaza=@id_plaza)        
			 set @CT_Ocupa =(select Clave from VistaTablaLongitud where id_nodo=@idnodo_ocupa)   
			 set @mensaje=''La plaza '' +@plazaieepo +'' esta ocupada por '' + @Rfc_ocupa + '' desde la Quincena '' + @QuincenaOcupada + '' en el CT '' + @CT_Ocupa        

            
        end  
     else  
         begin  
			   set @procede=0 
         end  
     --print ''La plaza '' +@plazaieepo +'' esta ocupada por '' + @Rfc_ocupa + '' desde la Quincena '' + @QuincenaOcupada + '' en el CT '' + @CT_Ocupa        

     if (@mensaje is null)    
     begin     
           delete from FUP_Rel_Id_Detalle_Mensaje where Id_Detalle=@_id_detalle  
     end    
     else    
     begin    
     if (exists(select * from FUP_Rel_Id_Detalle_Mensaje where Id_Detalle=@_id_detalle))        
     delete from FUP_Rel_Id_Detalle_Mensaje where Id_Detalle=@_id_detalle        
             
     insert into FUP_Rel_Id_Detalle_Mensaje (Id_Detalle,mensaje) values (@_id_detalle,@mensaje)        
     end    
end









'
GO

GO
PRINT N'Creating [dbo].[CreaVistaOrganigrama]'
GO
IF OBJECT_ID(N'[dbo].[CreaVistaOrganigrama]', 'P') IS NULL
EXEC sp_executesql N'
CREATE  PROCEDURE [dbo].[CreaVistaOrganigrama]  
AS   
Begin  
 declare @tabla as varchar(20)  
 declare @tabla2 as varchar(20)  
 declare @tabla_T as varchar(20)  
 declare @tabla_T2 as varchar(20)  
  
 declare @tablaVista as varchar(20)  
 set @tablaVista = ''VistaOrganigrama''  
  
 declare @tablaVT as varchar(20)  
 set @tablaVT = ''VistaTransparencia''  
  
 declare @query as varchar(2000)  
  
 IF EXISTS (SELECT 1 FROM SYSOBJECTS WHERE NAME = ''vistaTLBase'')  
 drop table vistaTLBase  
 select * into vistaTLBase from vistatablalongitud  
  
  
-- set @tabla = ltrim(rtrim(''z''+cast(year(dbo.getFechaHora())as varchar)+right(''00''+cast(month(dbo.getFechaHora())as varchar),2)+right(''00''+cast(day(dbo.getFechaHora())as varchar),2)+cast(datename(hh,dbo.getFechaHora())as varchar)+cast(datename(n,dbo.getFechaHora()) as varchar)))  
 set @tabla = ltrim(rtrim(  
                     ''z''+  
                     cast(year(getdate())as varchar)+  
                     right(''00''+cast(month(getdate())as varchar),2)+  
                     right(''00''+cast(day(getdate())as varchar),2)+  
                     right(''00''+cast(datename(hh,getdate())as varchar),2)+  
                     right(''00''+cast(datename(n,getdate()) as varchar),2)  
                     ))  
 set @tabla2 = @tabla + ''_2''  
 set @tabla_T = @tabla + ''_T''  
 set @tabla_T2 = @tabla + ''_T2''  
 IF EXISTS (SELECT 1 FROM SYSOBJECTS WHERE NAME = ''vistaorganigramabaseTabla'')  
 drop table vistaorganigramabaseTabla  
-- go  
 select * into vistaorganigramabaseTabla from vistaorganigramabase  
-- go  
 if not exists(select * from sysobjects where name=@tabla)   
  begin   
  
  set @query=''create table '' + @tabla + '' (id_plaza int null,num_plaza int null,ClaveOrganigrama varchar(100) null,''  
                set @query=@query + ''CodTrab int null,PueTrab varchar(200) null,id_nodo int null,NomTrab varchar(200) null,''  
                set @query=@query + ''ApTrab varchar(200) null,StatusP varchar(50) null,tipoplaza varchar(50) null,Secretary bit,''  
                set @query=@query + ''CodJefe int null ,iddepp int null,jerarquia int null,categoria varchar(200) null, ''  
                set @query=@query + ''Category varchar(200) null,dependencia varchar(200) null, nombre_puestodirgen varchar(200) null,''   
                set @query=@query + ''NomDirGen varchar(200) null,PuestoDirGeneral int null,administrativo varchar(200) null,NomAdministrativo varchar(200) null,''   
                set @query=@query + ''PuestoTit varchar(200) null,NomTit varchar(200) null,ncreacion bit,ndescreacion varchar(100) null,''   
                set @query=@query + ''pclave bit, pdesclave varchar(100) null,genteacargo varchar(200) null, tipodepuesto varchar(200) null,''  
                set @query=@query + ''actividadpuesto varchar(200) null,mandomedio varchar(200) null,responsabilidadpuesto varchar(200) null,''  
                set @query=@query + ''fechaact smalldatetime null,email varchar(50) null,Picture varchar(800) null,Expediente varchar(800) null,''  
                set @query=@query + ''PerfilPuesto varchar(800),SectorPuesto varchar(200),PuestoGenerico varchar(200),es_titular bit,''  
                set @query=@query + ''token varchar(40) null,no_empx varchar(20) null,Tipo_de_Plaza varchar(40))''  
  --select @query  
  exec(@query)  
  
  set @query=''Insert into '' + @tabla + '' (id_plaza,num_plaza,ClaveOrganigrama,CodTrab,Puetrab,id_nodo,Nomtrab,Aptrab,StatusP,''  
                set @query=@query + ''Tipoplaza,secretary,codjefe,iddepp,jerarquia,categoria,Category,dependencia,nombre_puestodirgen,''  
                set @query=@query + ''NomDirGen,PuestoDirGeneral,administrativo,NomAdministrativo,PuestoTit,NomTit,ncreacion,ndescreacion,pclave,pdesclave,''   
                set @query=@query + ''genteacargo,tipodepuesto,actividadpuesto,mandomedio,responsabilidadpuesto,fechaact,email,Picture,''  
                set @query=@query + ''Expediente,PerfilPuesto,SectorPuesto,PuestoGenerico,es_titular,token,no_empx,Tipo_de_Plaza)''  
  set @query=@query + ''Select id_plaza,num_plaza,ClaveOrganigrama,CodTrab,Puetrab,id_nodo,Nomtrab,Aptrab,StatusP,Tipoplaza,''  
                set @query=@query + ''secretary,codjefe,iddepp,jerarquia,Nivel_Jerar as categoria,Category,dependencia,nombre_puestodirgen,NomDirGen,''  
                set @query=@query + ''PuestoDirGeneral,administrativo,NomAdministrativo,PuestoTit,NomTit,ncreacion,ndescreacion,pclave,pdesclave,genteacargo,''   
                set @query=@query + ''tipodepuesto,actividadpuesto,mandomedio,responsabilidadpuesto,getdate() as fechaact, email,''  
                set @query=@query + ''''''<Img src=''''''''http://geanom01/fotos/''''+num_emp+''''.jpg''''''''>'''' as Picture,''  
--                set @query=@query + ''''''''''''''http://geanom01/UsuarioLogin.aspx?token_id=''''+token+'''''''''''''''' as Expediente''  
                set @query=@query + ''''''http://geanom01/UsuarioLogin.aspx?token_id=''''+token+'''''''' as Expediente''  
  
                set @query=@query + '','''''''' as PerfilPuesto, SectorPuesto, PuestoGenerico, Case When nomtit=nomtrab+'''' ''''+Aptrab or (codjefe = 0 and jerarquia = 1) Then 1''  
  
                set @query=@query + '' else 0 end as es_titular,token,num_emp as no_empx,Tipo_de_Plaza from vistaorganigramabaseTabla''  
--  select @query  
  exec(@query)  
   ---- <Img src=''http://geanom01/fotos/03414.jpg''>  
  --select ''<Img src=''''http://geanom01/fotos/03414.jpg''''>''  
  
  
  
  set @query=''create table '' + @tabla_T + '' (id_plaza int null, num_plaza int null, CodTrab int null, PueTrab varchar(200) null, ''  
                set @query=@query + ''id_nodo int null, NomTrab varchar(200) null, ApTrab varchar(200) null, Secretary bit, CodJefe int null, ''  
                set @query=@query + ''iddepp int null, jerarquia int null, categoria varchar(200) null, Category varchar(200) null,''  
                set @query=@query + ''dependencia varchar(200) null,email varchar(50) null,es_titular bit)''  
  exec(@query)  
  
  set @query=''Insert into '' + @tabla_T + '' (id_plaza, num_plaza, CodTrab, Puetrab, id_nodo, Nomtrab, Aptrab, secretary, ''  
                set @query=@query + ''codjefe, iddepp, jerarquia, categoria, Category, dependencia, email, es_titular)''  
  set @query=@query + ''Select id_plaza, num_plaza, CodTrab, Puetrab, id_nodo, Nomtrab, Aptrab, secretary, ''  
                set @query=@query + ''codjefe, iddepp, jerarquia, Nivel_Jerar as categoria, Category, dependencia, email,''  
                set @query=@query + ''Case When nomtit=nomtrab+'''' ''''+Aptrab or (codjefe = 0 and jerarquia = 1) Then 1 else 0 end as es_titular from vistaorganigramabaseTabla''  
--  select @query  
  exec(@query)  
  
  
  end  
--        set @query= ''Select * from '' + @tabla  
-- exec(@query)  
 if exists(select * from sysobjects where name=@tablaVista)   
 begin  
  EXEC sp_rename @tablaVista, @tabla2  
 end  
 if exists(select * from sysobjects where name=@tabla)   
 begin  
  EXEC sp_rename @tabla, @tablaVista  
 end  
  
 if exists(select * from sysobjects where name=@tablaVT)   
 begin  
  EXEC sp_rename @tablaVT, @tabla_T2  
 end  
 if exists(select * from sysobjects where name=@tabla_T)   
 begin  
  EXEC sp_rename @tabla_T, @tablaVT  
 end  
  
  
        set @query= ''Drop table '' +  @tabla2  
 exec(@query)  
   
        set @query= ''Drop table '' +  @tabla_T2  
 exec(@query)  
  
      set @query= ''GRANT SELECT, INSERT, UPDATE, DELETE ON '' + @tablaVista + '' TO organigrama''   
      exec(@query)  
  
      set @query= ''GRANT SELECT, INSERT, UPDATE, DELETE ON '' + @tablaVT + '' TO transparencia''   
      exec(@query)  
   
      set @query= ''GRANT SELECT ON '' + @tablaVista + '' TO transparencia''   
      exec(@query)  

      set @query= ''GRANT SELECT ON '' + @tablaVista + '' TO [Alejandro.Esparza]''   
      exec(@query)  

 --select @tabla,@tabla2,@tablaVista  
  
end
'
GO

GO
PRINT N'Creating [dbo].[RevisaModificacion]'
GO
IF OBJECT_ID(N'[dbo].[RevisaModificacion]', 'P') IS NULL
EXEC sp_executesql N'create procedure [dbo].[RevisaModificacion] as
begin
declare @total int
set @total=(
select sum(reg) from
(
select count(1)as reg from plazaempleados where movimiento<getdate() and movimiento>dateadd(n,-10, getdate())
union all
select count(1)as reg from hcatPuestosPlaza where movimiento<getdate() and movimiento>dateadd(n,-10, getdate())
union all
select count(1)as reg from hpuestosplazas where movimiento<getdate() and movimiento>dateadd(n,-10, getdate())
union all
select count(1)as reg from hpuestoDepende where movimiento<getdate() and movimiento>dateadd(n,-10, getdate())
union all
select count(1)as reg from hpuestoDirGeneral where movimiento<getdate() and movimiento>dateadd(n,-10, getdate())
union all

select count(1)as reg from hpuestoAdministrativo where movimiento<getdate() and movimiento>dateadd(n,-10, getdate())
union all
select count(1)as reg from hpuestoTitular where movimiento<getdate() and movimiento>dateadd(n,-10, getdate())
union all
select count(1)as reg from HgenteCargo where movimiento<getdate() and movimiento>dateadd(n,-10, getdate())
union all
select count(1)as reg from Hstaff where movimiento<getdate() and movimiento>dateadd(n,-10, getdate())
union all
select count(1)as reg from HpuestoClave where movimiento<getdate() and movimiento>dateadd(n,-10, getdate())
union all
select count(1)as reg from HnuevaCreacion where movimiento<getdate() and movimiento>dateadd(n,-10, getdate())
union all
select count(1)as reg from HtipoPuesto where movimiento<getdate() and movimiento>dateadd(n,-10, getdate())
union all
select count(1)as reg from HestatusPuesto where movimiento<getdate() and movimiento>dateadd(n,-10, getdate())
union all
select count(1)as reg from HcatActividadPuesto where movimiento<getdate() and movimiento>dateadd(n,-10, getdate())
union all
select count(1)as reg from HcatResponPuesto where movimiento<getdate() and movimiento>dateadd(n,-10, getdate())
union all
select count(1)as reg from HnivelPuesto where movimiento<getdate() and movimiento>dateadd(n,-10, getdate())
union all
select count(1)as reg from HsectorPuesto where movimiento<getdate() and movimiento>dateadd(n,-10, getdate())
union all
select count(1)as reg from HtipodePlaza where movimiento<getdate() and movimiento>dateadd(n,-10, getdate())
union all
select count(1)as reg from HmandosMedios where movimiento<getdate() and movimiento>dateadd(n,-10, getdate())
union all
select count(1)as reg from HasignacionPuesto where movimiento<getdate() and movimiento>dateadd(n,-10, getdate())
) a
)
if @total > 0 
	exec creavistaorganigrama
	
end

'
GO

GO
PRINT N'Creating [dbo].[spf_observaciones_omision]'
GO
IF OBJECT_ID(N'[dbo].[spf_observaciones_omision]', 'P') IS NULL
EXEC sp_executesql N'create procedure [dbo].[spf_observaciones_omision]
(                          
 @id_documento as int,    
 @num_plaza as int,                        
 @accion as bit                          
)     
with recompile    
as    
begin    
declare @id_documento_loc as int=@id_documento
declare @num_plaza_loc as int=@num_plaza      
declare @accion_loc as int=@accion  
      
declare @id_emp as int=(select id_emp from fup_documentos where Id_Documento=@id_documento_loc)  
declare @observaciones as varchar(4000)= (select observaciones from fup_documentos where Id_Documento=@id_documento_loc and id_emp=@id_emp)     
declare @desde as varchar(6)= (select dbo.fechaToAnioQuincena(fechaini) from FUP_Documento_Detalle where Id_Plaza=@num_plaza_loc and id_documento=@id_documento_loc)  

if (@accion_loc=0)    
begin    
    update TEmpleadosPlazaOmitidos set Observaciones=@observaciones where Noemp=@id_emp and
    NumPlaza=@num_plaza_loc and Desde=@desde and TipoPago=7 and Status=''O''
end       
end '
GO

GO
PRINT N'Creating [dbo].[sp_movs_cambio_de_datos]'
GO
IF OBJECT_ID(N'[dbo].[sp_movs_cambio_de_datos]', 'P') IS NULL
EXEC sp_executesql N'----------------------------------
--- cambio de datos
----------------------------------
----------------------------------
----------------------------------
--- QUINCENA DE LA QUE SE DESEA EL REPORTE---
 create procedure [dbo].[sp_movs_cambio_de_datos] 
 (
 @Quincena as int,
 @id_cia as int
 )
 with encryption 
 as begin
 
declare @año as int
set @quincena=Case when @Quincena=1 then 24 else @Quincena-1 end
set @año= Case when @quincena=24 then year(GETDATE())-1 else YEAR(GETDATE()) end

select row_number() OVER (ORDER BY ftm.clave,fmm.clave) as ID_OPERACION,ftm.Clave+''-''+fmm.clave AS OPERACION,
e.curp AS CURP,
replace(pi.PlazaIEEPO,'' '','''') AS CPZA,
ttcm.id_Tabulador_SE_CM  AS NIVEL_SALARIAL,
''R20'' AS UR,
''PERIODO''= CASE WHEN C.NUMERO=24 THEN cast (right(''00'' + cast(01 as varchar(max)),2) + cast(''/'' as varchar(max)) + cast (year(getdate()) as varchar (max)) as varchar(max)) ELSE 
cast (right(''00'' + cast((cast (c.Numero as int)+1) as varchar(max)),2) + cast(''/'' as varchar(max)) + cast(c.año as varchar(max)) as varchar(max)) END,
''O'' AS TIPO_NOMINA,convert(char(12),c.fechaini,103) as FECHA,
fid.Centro_Trabajo AS CCT,
e.RFC, e.ApPaterno AS PRIMER_APELLIDO,
e.ApMaterno AS SEGUNDO_APELLIDO,
e.Nombre AS ''NOMBRE(S)'',
right(''00'' + cast(tnac.Id_Nacionalidad as varchar(max)),3) AS NACIONALIDAD,
PAIS_NAC=Case when tp.Descr=''MEXICO'' then 141 else 0 end,  
ENTIDAD_NAC=Case  substring(e.curp,12,2)
            when ''AS'' then 1 
            when ''BC'' then 2 
            when ''BS'' then 3 
            when ''CC'' then 4 
            when ''CS'' then 5
            when ''CM'' then 6 
            when ''CL'' then 7 
            when ''CH'' then 8 
            when ''DF'' then 9
            when ''DG'' then 10
            when ''GT'' then 11
            when ''GR'' then 12
            when ''HG'' then 13
            when ''JC'' then 14 
            when ''MC'' then 15 
            when ''MN'' then 16
            when ''MS'' then 17 
            when ''NT'' then 18 
            when ''NL'' then 19
            when ''OC'' then 20
            when ''PL'' then 21 
            when ''QT'' then 22
            when ''QR'' then 23 
            when ''SP'' then 24 
            when ''SL'' then 25
            when ''SR'' then 26
            when ''TC'' then 27
            when ''TS'' then 28
            when ''TL'' then 29
            when ''VZ'' then 30
            when ''YN'' then 31
            when ''ZS'' then 32
            else 0 end,
MUNICIPIO_NAC= Case when e.Id_MunicipioNac is null then 0 else tc.Id_Ciudad end,
e.SEXO,
EDO_CIVIL= Case when e.edocivil=''C'' then ''02'' else 
		   Case when e.edocivil=''S'' then ''01'' else ''01'' end end,
CALLE_Y_NUM= Case when hd.Calle is null then '''' else cast(hd.calle as varchar(max))+ '' ''+ CAST(hd.numext as varchar (10)) end,
CP= Case when hd.CodPostal is null then '''' else hd.CodPostal end,
COLONIA= Case when hd.Id_Colonia = 0 or hd.Id_Colonia is null then '''' else tcol.DESCR end,
ENTIDAD=Case when e.Id_EstadoNac is null then ''S/A'' else case when e.Id_EstadoNac<=32 then substring(te.descr,4,50) else te.descr end end,
MUNICIPIO= Case when e.Id_MunicipioNac is null then '''' else upper(tc.Descr) end,
LOCALIDAD=Case when hd.Id_Localidad = 0 or hd.Id_Colonia is null then '''' else tloc.Descr end,
'''' AS NIV_MAX_ESTUD,
ING_GOB_FED= case when hfagf.fecha is null then '''' else SUBSTRING(dbo.fechatoanioquincena(hfagf.fecha),1,4)+'' '' +SUBSTRING(dbo.fechatoanioquincena(hfagf.fecha),5,2) end,
ING_SEP= case when hfas.fecha is null then '''' else SUBSTRING(dbo.fechatoanioquincena(hfas.fecha),1,4)+'' '' +SUBSTRING(dbo.fechatoanioquincena(hfas.fecha),5,2) end,
ING_RAMA= case when hfar.fecha is null then '''' else SUBSTRING(dbo.fechatoanioquincena(hfar.fecha),1,4)+'' '' + SUBSTRING(dbo.fechatoanioquincena(hfar.fecha),5,2)end,
'''' as TIPO_LIC,	
'''' as QUINQ_DOC,	
'''' as QUINQ_ADM	,
'''' as GRADO_LIC,	
'''' as TITULACIÓN,
HORARIO=Case when rt.id_nodo is null then '''' else tt.descripcion end,
ftm.Clave as MOVIMIENTO,	
ftm.Descripcion as DESC_MOVIMIENTO,	
fmm.Clave as MOTIVO,	
DESC_MOTIVO= CaSe When fdd.Id_MotivoMovimiento=320 then fmm.Descripcion+substring(ttfdp.Descripcion,3,1000) else fmm.Descripcion end,
Convert(varchar(10), fdd.Fechaini, 103) as FECHA_INI, 
FECHA_FIN= case when dbo.fechaToAnioQuincena(fdd.fechaini)=dbo.fechaToAnioQuincena(fdd.fechafin) then Convert(varchar(10), ''00/00/0000'', 103)  else Convert(varchar(10), fdd.FechaFin, 103) end,
'''' as CONCEPTOS_PAGO,
'''' REGIMEN
from fup_documentos fd
inner join empleados e on fd.Id_Emp = e.Id_Emp
inner join fup_documento_detalle fdd on fd.Id_Documento = fdd.Id_Documento
inner join plazas p on fdd.Id_Plaza = p.Id_plaza
inner join plazaieepo pi on fdd.Id_Plaza = pi.Id_plaza
inner join (select id_plaza,MAX(fecha) fecha
from HTabulador_SE_cm htcm
group by id_plaza
) nc on pi.Id_plaza=nc.id_plaza
inner join HTabulador_SE_CM htcm on htcm.id_plaza=nc.id_plaza and htcm.fecha=nc.fecha
inner join TTabulador_SE_CM ttcm on htcm.id_rel=ttcm.id_Tabulador_SE_CM
inner join usuarios u on fd.Id_Usuario = u.Id_Usuario
inner join FUP_Informacion_Documentos fid on fd.Id_Documento = fid.Id_Documento
inner join CalenNomina c on fid.Id_Periodo = c.Id_Periodo
inner join FUP_MotivoMovimiento fmm on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
inner join tniveleducativo tn on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
inner join TNacionalidad tnac on e.Id_Nacionalidad=tnac.Id_Nacionalidad
inner join TPais tp on tnac.Id_Nacionalidad=tp.Id_Pais
left join TEstados te on e.Id_EstadoNac = te.Id_Estado
left join tciudad tc on e.Id_EstadoNac=te.Id_Estado and tc.Id_Ciudad=e.Id_MunicipioNac
left join (select id_emp,MAX(movimiento) fecha
from hdomicilio 
group by id_emp
) hdoc on e.Id_emp=hdoc.id_emp
left join HDomicilio hd on hd.id_emp=hdoc.id_emp and hdoc.fecha=hd.Movimiento
left join tcolonia tcol on hd.Id_Colonia=tcol.Id_Colonia
left join TLocalidad tloc on hd.Id_Localidad=tloc.id_Localidad
left join FUP_ValorSubCatalogo fvs on fdd.Id_Detalle=fvs.Id_Documento
left join TTFup_Cambio_Datos_Personales ttfdp on fvs.Valor=ttfdp.id_TFup_Cambio_Datos_Personales
left join (select id_emp,MAX(fecha_alta_gob_fed) fecha
from HFecha_Alta_Gob_Fed group by id_emp
) hfagf on e.Id_Emp=hfagf.id_emp
left join (select id_emp,MAX(fecha_alta_sep) fecha
from HFecha_Alta_sep group by id_emp
) hfas on e.Id_Emp=hfas.id_emp
left join (select id_emp,MAX(fecha_alta_rama) fecha
from HFecha_Alta_rama group by id_emp
) hfar on e.Id_Emp=hfar.id_emp
inner join VistaTablaLongitud vt on fid.Centro_Trabajo=vt.clave
inner join RCT_Turno rt on vt.Id_Nodo=rt.id_nodo
inner join TCT_Turno tt on rt.id_rel=tt.id_CT_Turno
where fid.Id_Periodo in (select id_periodo from calennomina where Numero in (@quincena)
and Id_cia=@id_cia --and Leyenda10=''CFUP'' 
and Año=@año and parcial<> 0
union all 
select id_periodo from calennomina where Numero in (@quincena+1)
and Id_cia=@id_cia --and Leyenda10=''CFUP'' 
and Año=@año and parcial= 0) and e.id_cia=@id_cia and fd.Id_Estatus =2 and fd.folio not in (select folio_n from HFolio_verificado)
and ftm.Id_TipoMovimiento in (45) and fmm.id_motivomovimiento in (320)
and fd.observaciones not like ''%verificado%'' and fd.observaciones not like ''%procesado%''
order by  id_operacion,ftm.clave,fmm.clave
end
'
GO

GO
PRINT N'Creating [dbo].[EliminaPlaza]'
GO
IF OBJECT_ID(N'[dbo].[EliminaPlaza]', 'P') IS NULL
EXEC sp_executesql N'CREATE procedure [dbo].[EliminaPlaza]
(@num_plaza int)
As  
Declare @NomTabla  varchar (100),@CadenaDrop varchar (1000),@nError    int
begin
	 Select @nError = 0

-- Primer cursor para obtener las tablas de la bd origen.     
   Declare Cur_Tablas Cursor For
       select nomtabla from systablas where idtipotabla=1 and idclasiftabla=2 and editable=1

   Open Cur_Tablas
   Fetch Next From Cur_Tablas Into @NomTabla
   print ''Antes While''
   While @@Fetch_Status = 0  
   Begin     
	    Select @CadenaDrop = ''delete from '' + @NomTabla + '' where id_plaza in (select id_plaza from plazas where num_plaza='' + ltrim(rtrim(cast(@num_plaza as varchar(100)))) + '')'' 
			if @NomTabla <> ''HZonaEcono''
				begin
			       Print @CadenaDrop
			       Exec(@CadenaDrop)
				end
       Fetch Next From Cur_Tablas Into @NomTabla
   End
   Close Cur_Tablas
   Deallocate Cur_Tablas   

   Print ''delete from plazaempleados where id_plaza in (select id_plaza from plazas where num_plaza='' + ltrim(rtrim(cast(@num_plaza as varchar(100)))) + '')'' 
	delete from plazaempleados where id_plaza in (select id_plaza from plazas where num_plaza=@num_plaza) 

   Print ''delete from hplazas where id_plaza in (select id_plaza from plazas where num_plaza='' + ltrim(rtrim(cast(@num_plaza as varchar(100)))) + '')'' 
	delete from hplazas where id_plaza in (select id_plaza from plazas where num_plaza=@num_plaza) 

   Print ''delete from hnivelplazas where id_plaza in (select id_plaza from plazas where num_plaza='' + ltrim(rtrim(cast(@num_plaza as varchar(100)))) + '')'' 
	delete from hnivelplazas where id_plaza in (select id_plaza from plazas where num_plaza=@num_plaza) 

   Print ''delete from HPuestosPlazas where id_plaza in (select id_plaza from plazas where num_plaza='' + ltrim(rtrim(cast(@num_plaza as varchar(100)))) + '')'' 
	delete from HPuestosPlazas where id_plaza in (select id_plaza from plazas where num_plaza=@num_plaza) 

   Print ''delete from HExcepcionesPlaza where id_plaza in (select id_plaza from plazas where num_plaza='' + ltrim(rtrim(cast(@num_plaza as varchar(100)))) + '')'' 
	delete from HExcepcionesPlaza where id_plaza in (select id_plaza from plazas where num_plaza=@num_plaza) 

   Print ''delete from HMotivoMov where id_plaza in (select id_plaza from plazas where num_plaza='' + ltrim(rtrim(cast(@num_plaza as varchar(100)))) + '')'' 
	delete from HMotivoMov where id_plaza in (select id_plaza from plazas where num_plaza=@num_plaza) 

   Print ''delete from PlazasOrgan where id_plaza in (select id_plaza from plazas where num_plaza='' + ltrim(rtrim(cast(@num_plaza as varchar(100)))) + '')'' 
	delete from PlazasOrgan where id_plaza in (select id_plaza from plazas where num_plaza=@num_plaza)

   Print ''delete from plazas where id_plaza in (select id_plaza from plazas where num_plaza='' + ltrim(rtrim(cast(@num_plaza as varchar(100)))) + '')'' 
	delete from plazas where id_plaza in (select id_plaza from plazas where num_plaza=@num_plaza)

Fin:
Return @nError
End

'
GO

GO
PRINT N'Creating [dbo].[SIGP_EmpleadosOK]'
GO
IF OBJECT_ID(N'[dbo].[SIGP_EmpleadosOK]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[SIGP_EmpleadosOK]      
      
@rfcs varchar(MAX) = ''''      
      
AS      
      
DECLARE @Xml AS XML        
SET @Xml = ''<empleado>'' + REPLACE(@rfcs, '','', ''</empleado><empleado>'') + ''</empleado>'';      
  
  select distinct em.Id_Emp, em.RFC, em.CURP, em.ApPaterno PRIMER_APELLIDO, em.ApMaterno SEGUNDO_APELLIDO, em.NOMBRE, CONVERT(varchar,em.RFCFecha, 103) FECHA_NACIMIENTO,      
  em.SEXO GENERO,em.id_direccion, em.Id_Nacionalidad  
  into #emps_pararegimen
  from empleados em
  inner join hcia b on em.id_emp=b.id_emp
  inner join (
  select max(fecha) as fecha,id_emp from hcia
  where movimiento<''20190101'' 
  group by id_emp
  ) c on c.id_emp=b.id_emp and c.fecha=b.fecha
  where em.id_emp > 0  and em.rfc not like ''xxx%''  
  and b.movimiento<''20190101'' ---150586    

    
  select DISTINCT  em.*,case when z.nss is null then '''' else z.nss end as NUMERO_DE_SEGURIDAD_SOCIAL
  --,  case when b.fecha_alta_sep <''20070401'' then ''DÉCIMO TRANSITORIO'' 
  --                       when b.fecha_alta_sep is null then ''CUENTAS INDIVIDUALES''  
  --                       ELSE ''CUENTAS INDIVIDUALES'' 
  --                       END REGIMEN_DE_PENSION     
  into #emps_pararegimen_con_nss      
  from #emps_pararegimen em      
  left join (      
    select x.* from hnss x 
	inner join (      
    select id_emp,max(fecha) fecha from hnss where fecha <''20190101'' 
	group by id_emp      
    ) y on x.id_emp = y.id_emp and x.fecha = y.fecha
  ) z on em.id_emp=z.id_emp
  
  select a.* into #fechas_sep from hfecha_alta_sep a 
  inner join (
  select max(fecha) as fecha,id_emp from hfecha_alta_sep
  group by id_emp
  ) b on b.id_emp=a.id_emp and a.fecha=b.fecha      

  select distinct a.*, case when b.fecha_alta_sep <''20070401'' then ''DÉCIMO TRANSITORIO'' 
                         when b.fecha_alta_sep is null then ''CUENTAS INDIVIDUALES''  
                         ELSE ''CUENTAS INDIVIDUALES'' 
                         END REGIMEN_DE_PENSION  
  into #empleados
  from #emps_pararegimen_con_nss a
  left join #fechas_sep b on a.id_emp=b.id_emp
 
  select a.* into #emps_prima_antiguedad 
  from hfecha_prima_antiguedad a
  inner join (
  select max(fecha) as fecha,id_emp from hfecha_prima_antiguedad
  group by id_emp
  ) b on b.id_emp=a.id_emp and a.fecha=b.fecha

  update a set a.REGIMEN_DE_PENSION=''DÉCIMO TRANSITORIO'' from #empleados a
  inner join #emps_prima_antiguedad b on a.id_emp=b.id_emp
  where a.regimen_de_pension=''cuentas individuales''
  and b.fecha_prima_antiguedad<''20070401''
  
           
  select Id_Emp, RFC, CURP, PRIMER_APELLIDO, SEGUNDO_APELLIDO, NOMBRE, FECHA_NACIMIENTO, GENERO, NUMERO_DE_SEGURIDAD_SOCIAL, REGIMEN_DE_PENSION,       
  TIPO_DE_DOMICILIO, PAIS, ENTIDAD, MUNICIPIO, LOCALIDAD, CALLE, TIPO_DE_VIALIDAD, ASENTAMIENTO_COLONIA, NUMERO_EXTERIOR, NUMERO_INTERIOR,   
  --REFERENCIAS,   
  MANZANA,      
  LOTE, CODIGO_POSTAL, TIPO_DE_TELEFONO--, LADA  
  ,'''' NUMERO_TELEFONICO  
  , EXTENCION, id_nacionalidad      
  into #empleados2      
  from #empleados e      
  left join (      
  --select distinct d.Id_Direccion, '''' TIPO_DE_DOMICILIO, p.Descr PAIS, e.Estado+'' - ''+e.Descr ENTIDAD, c.Ciudad+'' - ''+c.Descr MUNUCUPIO, l.Localidad+'' - ''+l.Descr LOCALIDAD,      
  --d.CALLE, '''' TIPO_DE_VIALIDAD, co.Colonia+'' - ''+co.Descr COLONIA, d.NumExt NUMERO_EXTERIOR, d.NumInt NUMERO_INTERIOR,'''' REFERENCIAS,'''' MANZANA,'''' LOTE, CODPOSTAL CODIGO_POSTAL,      
  --'''' TIPO_DE_TELEFONO, '''' LADA,TELEFONO NUMERO_TELEFONICO, '''' EXTENCION   
  select distinct d.Id_Direccion, '''' TIPO_DE_DOMICILIO,   
  case when p.Descr is null then '''' else p.Descr end as PAIS  
  ,case when e.Id_Estado is null then '''' else e.Id_Estado end as ENTIDAD  
  ,case when c.ciudad is null then '''' else c.ciudad end as MUNICIPIO  
  ,case when l.Localidad is null then '''' else l.Localidad end as LOCALIDAD  
  ,CASE WHEN d.CALLE is null then '''' else d.CALLE end AS CALLE,  
  '''' TIPO_DE_VIALIDAD,   
  co.Colonia ASENTAMIENTO_COLONIA,   
  d.NumInt NUMERO_INTERIOR,  
  d.NumExt NUMERO_EXTERIOR, --'''' REFERENCIAS  
  '''' MANZANA,  
  '''' LOTE,   
  CODPOSTAL CODIGO_POSTAL,      
  '''' TELEFONO,  '''' TIPO_DE_TELEFONO-- '''' LADA  
  ,TELEFONO NUMERO_TELEFONICO, '''' EXTENCION      
  from TDirecciones d      
  left join TPais p on d.Id_Pais = p.Id_Pais      
  left join TEstados e on e.Id_Estado = d.Id_Estado      
  left join tciudad c on c.Id_Ciudad = d.Id_Ciudad      
  left join TColonia co on co.Id_Colonia = d.Id_Colonia      
  left join TLocalidad l on l.id_Localidad = d.Id_Localidad      
  ) di on di.id_direccion = e.id_direccion      
        
if (@rfcs='''')      
begin      
  select DISTINCT   
  a.Id_Emp as ID_DE_IDENTIFICACION_UNICA_DEL_EMPLEADO, a.RFC, a.CURP, a.PRIMER_APELLIDO, a.SEGUNDO_APELLIDO, a.NOMBRE, a.FECHA_NACIMIENTO, a.GENERO, a.NUMERO_DE_SEGURIDAD_SOCIAL, a.REGIMEN_DE_PENSION,       
  CASE WHEN a.TIPO_DE_DOMICILIO IS NULL THEN '''' ELSE '''' END AS TIPO_DE_DOMICILIO,   
  case when a.PAIS is null then '''' else  a.PAIS end PAIS  
  ,case when a.ENTIDAD is null then '''' else a.ENTIDAD end AS ENTIDAD  
  ,case when a.MUNICIPIO is null then '''' else a.MUNICIPIO end AS MUNICIPIO  
  ,case when a.LOCALIDAD is null then '''' else a.LOCALIDAD end AS LOCALIDAD  
  ,case when a.CALLE is null then '''' else a.CALLE end AS CALLE  
  ,case when a.TIPO_DE_VIALIDAD is null then '''' else a.TIPO_DE_VIALIDAD end AS TIPO_DE_VIALIDAD  
  ,case when a.ASENTAMIENTO_COLONIA is null then '''' else a.ASENTAMIENTO_COLONIA end AS ASENTAMIENTO_COLONIA  
,case when a.NUMERO_EXTERIOR is null then '''' else a.NUMERO_EXTERIOR end AS NUMERO_EXTERIOR  
  ,case when a.NUMERO_INTERIOR is null then '''' else a.NUMERO_INTERIOR end AS NUMERO_INTERIOR  
  --a.REFERENCIAS  
  ,case when a.MANZANA is null then '''' else a.MANZANA end AS MANZANA  
  ,case when a.LOTE is null then '''' else a.LOTE end AS LOTE  
  ,case when a.CODIGO_POSTAL is null then '''' else a.CODIGO_POSTAL end AS CODIGO_POSTAL  
  ,case when a.TIPO_DE_TELEFONO is null then '''' else a.TIPO_DE_TELEFONO end AS TIPO_DE_TELEFONO  
  --, a.LADA  
  ,case when a.NUMERO_TELEFONICO is null then '''' else a.NUMERO_TELEFONICO end AS NUMERO_TELEFONICO  
  ,case when a.EXTENCION is null then '''' else a.EXTENCION end AS EXTENCION,  
  --a.id_nacionalidad  
  --'''' TIPO_DE_CORREO,  
  CASE WHEN c.email IS NULL THEN '''' ELSE c.email END CORREO_ELECTRONICO,'''' TIPO_DE_CORREO,  
  CASE WHEN c.email IS NULL THEN '''' ELSE c.email END DIRECCION_DE_CORREO,   
  --tb.DESCR NOMBRE_DE_CARRERA, '''' FECHA_INICIO, '''' FECHA_TERMINO, '''' ESTATUS_INSTITUCION,       
  --'''' PROMEDIO, tn.Descripcion PROFESION, '''' PAIS_CARRERA, '''' TIPO_NACIONALIDAD,   
  case when na.Descr is null then '''' else na.Descr end AS NACIONALIDAD      
  from #empleados2 a      
  left join [172.16.77.19].federacion.dbo.usuarios_portal c on c.rfc = a.RFC      
  left join Escolaridad es on es.Id_Emp = a.Id_Emp      
  left join TBtEscol tb on tb.Id_Escolaridad = es.Id_Escolaridad      
  left join (select id_emp, max(id_nivelestudios) id_nivelestudios from rNivelEstudios group by id_emp) ne on ne.id_emp = a.Id_Emp      
  left join TNivelEstudios tn on tn.id_NivelEstudios = ne.id_NivelEstudios      
  left join TNacionalidad na on na.Id_Nacionalidad = a.id_nacionalidad order by rfc      
      
end      
else      
begin      
  select DISTINCT   
  a.Id_Emp as ID_DE_IDENTIFICACION_UNICA_DEL_EMPLEADO, a.RFC, a.CURP, a.PRIMER_APELLIDO, a.SEGUNDO_APELLIDO, a.NOMBRE, a.FECHA_NACIMIENTO, a.GENERO, a.NUMERO_DE_SEGURIDAD_SOCIAL, a.REGIMEN_DE_PENSION,       
  CASE WHEN a.TIPO_DE_DOMICILIO IS NULL THEN '''' ELSE '''' END AS TIPO_DE_DOMICILIO,   
  case when a.PAIS is null then '''' else  a.PAIS end PAIS  
  ,case when a.ENTIDAD is null then '''' else a.ENTIDAD end AS ENTIDAD  
  ,case when a.MUNICIPIO is null then '''' else a.MUNICIPIO end AS MUNICIPIO  
  ,case when a.LOCALIDAD is null then '''' else a.LOCALIDAD end AS LOCALIDAD  
  ,case when a.CALLE is null then '''' else a.CALLE end AS CALLE  
  ,case when a.TIPO_DE_VIALIDAD is null then '''' else a.TIPO_DE_VIALIDAD end AS TIPO_DE_VIALIDAD  
  ,case when a.ASENTAMIENTO_COLONIA is null then '''' else a.ASENTAMIENTO_COLONIA end AS ASENTAMIENTO_COLONIA  
  ,case when a.NUMERO_EXTERIOR is null then '''' else a.NUMERO_EXTERIOR end AS NUMERO_EXTERIOR  
  ,case when a.NUMERO_INTERIOR is null then '''' else a.NUMERO_INTERIOR end AS NUMERO_INTERIOR  
  --a.REFERENCIAS  
  ,case when a.MANZANA is null then '''' else a.MANZANA end AS MANZANA  
  ,case when a.LOTE is null then '''' else a.LOTE end AS LOTE  
  ,case when a.CODIGO_POSTAL is null then '''' else a.CODIGO_POSTAL end AS CODIGO_POSTAL  
  ,case when a.TIPO_DE_TELEFONO is null then '''' else a.TIPO_DE_TELEFONO end AS TIPO_DE_TELEFONO  
  --, a.LADA  
  ,case when a.NUMERO_TELEFONICO is null then '''' else a.NUMERO_TELEFONICO end AS NUMERO_TELEFONICO  
  ,case when a.EXTENCION is null then '''' else a.EXTENCION end AS EXTENCION,  
  --a.id_nacionalidad  
  --'''' TIPO_DE_CORREO,  
  CASE WHEN c.email IS NULL THEN '''' ELSE c.email END CORREO_ELECTRONICO,'''' TIPO_DE_CORREO,  
  CASE WHEN c.email IS NULL THEN '''' ELSE c.email END DIRECCION_DE_CORREO,   
  --tb.DESCR NOMBRE_DE_CARRERA, '''' FECHA_INICIO, '''' FECHA_TERMINO, '''' ESTATUS_INSTITUCION,       
  --'''' PROMEDIO, tn.Descripcion PROFESION, '''' PAIS_CARRERA, '''' TIPO_NACIONALIDAD,   
  case when na.Descr is null then '''' else na.Descr end AS NACIONALIDAD      
  from #empleados2 a      
  left join [172.16.77.19].federacion.dbo.usuarios_portal c on c.rfc = a.RFC      
  left join Escolaridad es on es.Id_Emp = a.Id_Emp      
  left join TBtEscol tb on tb.Id_Escolaridad = es.Id_Escolaridad      
  left join (select id_emp, max(id_nivelestudios) id_nivelestudios from rNivelEstudios group by id_emp) ne on ne.id_emp = a.Id_Emp      
  left join TNivelEstudios tn on tn.id_NivelEstudios = ne.id_NivelEstudios      
  left join TNacionalidad na on na.Id_Nacionalidad = a.id_nacionalidad      
  where a.rfc in (SELECT empleados.n.value(''.'', ''varchar(max)'') AS n FROM @Xml.nodes(''/empleado'') AS empleados(n))      
  order by rfc  
end'
GO

GO
PRINT N'Creating [dbo].[spf_CT_Activo]'
GO
IF OBJECT_ID(N'[dbo].[spf_CT_Activo]', 'P') IS NULL
EXEC sp_executesql N'CREATE procedure [dbo].[spf_CT_Activo]                          
(                              
  @id_detalle as int                            
) as                              
Begin     
     declare @id_detalle_loc as int =@id_detalle
     declare @id_plaza as int        
     declare @CT_Ocupa as varchar(10)      
     declare @idnodo_plaza as int      
     declare @plazaieepo as varchar (21)      
     declare @mensaje as varchar (500)      
     declare @Estatus_idnodo_plaza as int    
     declare @Desc_id_nodo_plaza as varchar (12)    
     declare @Clave_id_nodo_plaza as varchar (10)    
     declare @Ct_nuevo as varchar(10)    
     declare @Id_nodo_CT_Nuevo as int     
     declare @Estatus_Ct_nuevo as int    
     declare @procede as int    
           
           
     set @id_plaza=(select id_plaza from FUP_Documento_Detalle where Id_Detalle=@id_detalle_loc)      
     set @plazaieepo=(select plazaieepo from plazaieepo where Id_plaza=@id_plaza)     
     set @idnodo_plaza=(select top 1 id_nodo from plazaempleados where id_plaza=@id_plaza and Fecha<''99991231'' order by fecha desc)    
     set @Clave_id_nodo_plaza =(select clave from VistaTablaLongitud where id_nodo=@idnodo_plaza)    
         
     set @Ct_nuevo=(select centro_trabajo from FUP_Informacion_Documentos where id_documento in (    
     select id_documento from FUP_Documento_Detalle where id_detalle=@id_detalle_loc    
     ))    
  set @Id_nodo_CT_Nuevo=(select id_nodo from VistaTablaLongitud where Clave=@Ct_nuevo)     
  if (@idnodo_plaza=@Id_nodo_CT_Nuevo)     
      begin     
         
     set @Estatus_idnodo_plaza=(select id_rel from RCT_Status where id_nodo=@idnodo_plaza)    
     set  @mensaje= case when @Estatus_idnodo_plaza=2 then ''El Centro de trabajo '' + @Clave_id_nodo_plaza +'' está en estatus de Baja.''     
        else case when @Estatus_idnodo_plaza=3 then ''El Centro de trabajo '' + @Clave_id_nodo_plaza +'' está en estatus clausurado.''     
        else '''' end end    
     if   (@mensaje='''')    
      begin    
      set @procede =0     
      end    
     else    
          begin    
          if (exists(select * from FUP_Rel_Id_Detalle_Mensaje where Id_Detalle=@id_detalle_loc))    
                delete from FUP_Rel_Id_Detalle_Mensaje where Id_Detalle=@id_detalle_loc      
                insert into FUP_Rel_Id_Detalle_Mensaje (Id_Detalle,mensaje) values (@id_detalle_loc,@mensaje)      
          end       
    
   end    
  else     
         begin     
                  
     set @Estatus_Ct_nuevo=(select id_rel from RCT_Status where id_nodo=@Id_nodo_CT_Nuevo)    
         
     set  @mensaje= case when @Estatus_Ct_nuevo=2 then ''El Centro de trabajo '' + @Ct_nuevo +'' está en estatus de Baja.''     
        else case when @Estatus_Ct_nuevo=3 then ''El Centro de trabajo '' + @Ct_nuevo +'' está en estatus clausurado.''    
        else '''' end end    
     if   (@mensaje='''')    
      begin    
      set @procede =0     
      end    
     else    
          begin    
       if (exists(select * from FUP_Rel_Id_Detalle_Mensaje where Id_Detalle=@id_detalle_loc))    
          delete from FUP_Rel_Id_Detalle_Mensaje where Id_Detalle=@id_detalle_loc      
                      insert into FUP_Rel_Id_Detalle_Mensaje (Id_Detalle,mensaje) values (@id_detalle_loc,@mensaje)    
          end    
   end    
end'
GO

GO
PRINT N'Creating [dbo].[sps_DesdeHastaRecalculo]'
GO
IF OBJECT_ID(N'[dbo].[sps_DesdeHastaRecalculo]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		Wcahun
-- Create date: 03/03/2014
-- Description:	Obtener desde y hasta de un identificador de recalculo
-- =============================================
CREATE PROCEDURE [dbo].[sps_DesdeHastaRecalculo]
@idRecalculo int
WITH EXEC AS CALLER
AS
BEGIN

declare @id_Recalculo int = @idRecalculo

	Select a.id_recalculo , left (dbo.DateToQNA(min(b.fechaini)),4) + right (dbo.DateToQNA(min(b.fechaini)),2) as inicio,
	left(dbo.DateToQNA( max(b.fechafin)),4) + right(dbo.DateToQNA( max(b.fechafin)),2) as final
	from recalculo_empleadosperiodos A inner join 
	calennomina B on a.id_periodo = b.id_periodo  and id_recalculo = @id_Recalculo
	group by a.id_recalculo 
	order by a.id_recalculo
END'
GO

GO
PRINT N'Creating [dbo].[spc_InicializaHcontinuidad]'
GO
IF OBJECT_ID(N'[dbo].[spc_InicializaHcontinuidad]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[spc_InicializaHcontinuidad]
@quincena varchar(6), @id_emp varchar(MAX), @id_cia int
WITH EXEC AS CALLER
AS
begin 



  DECLARE @Xml AS XML  
  DECLARE @desde as datetime
  DECLARE @hasta as datetime
  SET @Xml = ''<empleado>'' + REPLACE(@id_emp, '','', ''</empleado><empleado>'') + ''</empleado>'';
  SET @desde = (select dbo.anioquincenatofecha(@quincena,0))
  SET @hasta = DATEADD (mi,-1,(select dbo.anioquincenatofecha(@quincena,1)))

               

  if  @id_emp = ''0''
    begin
    
     Delete from h from Hcontinuidad h with(nolock)
     inner join empleados ee with(nolock) on ee.id_emp = h.id_emp
     where h.añoqna = @quincena  and h.Id_emp = Case When @id_emp = ''0'' Then h.Id_emp else @id_emp End and ee.id_cia =  @id_cia  
      
     insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )
     select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
     from spc_BasePeriodo(@desde,@hasta,@id_emp, @id_cia ) 
     Where  Id_emp = Case When @id_emp = 0 Then Id_emp else @id_emp End      
    end
  else
    begin
    
     Delete from h from Hcontinuidad h with(nolock)
     inner join empleados ee with(nolock) on ee.id_emp = h.id_emp
     where h.añoqna = @quincena  
     and h.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n)) 
     and ee.id_cia = @id_cia
      
     insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )
     select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
     from spc_BasePeriodo(@desde,@hasta,@id_emp, @id_cia ) 
     Where  Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
    end
          
end'
GO

GO
PRINT N'Creating [dbo].[sp_saycop_cap_pension]'
GO
IF OBJECT_ID(N'[dbo].[sp_saycop_cap_pension]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[sp_saycop_cap_pension]
@qna varchar(6), @tiponom varchar(3), @idcia int
WITH EXEC AS CALLER
AS
set @idcia = case 
                when @tiponom = ''UPN'' then 1
                when @tiponom = ''BAS'' then 2
                when @tiponom = ''MM'' then 3
              end
select s.id_Saycop, s.id_Emp, e.RFC, rtrim(e.Nombre) +'' ''+ rtrim(e.ApPaterno) +'' ''+ rtrim(e.ApMaterno) as NOMBRE, 
h.id_beneficiario, t.RFC as RFC_BENEF, t.Nombre +'' ''+ t.ApPaterno +'' ''+ t.ApMaterno as BENEFICIARIO 
from Saycop s 
inner join Empleados e on s.id_Emp = e.Id_Emp
inner join HBeneficiario h on s.id_Emp = h.id_emp
inner join TBeneficiario t on h.id_beneficiario = t.id_Beneficiario
where s.id_periodo in (
select id_periodo from CalenNomina where Año = cast(substring(@qna,1,4) as int) and numero = cast(substring(@qna,5,2) as int) and Parcial >= 40 and e.id_cia =@idcia
)'
GO

GO
PRINT N'Creating [dbo].[spf_Inserta_hplaza_plazaempleados]'
GO
IF OBJECT_ID(N'[dbo].[spf_Inserta_hplaza_plazaempleados]', 'P') IS NULL
EXEC sp_executesql N'CREATE procedure [dbo].[spf_Inserta_hplaza_plazaempleados](                                          
@id_detalle as int,                              
@fechamov as datetime,                                          
@accion as int                                        
)                                 
as                                
begin                              
--declare @id_detalle as int=2682091                              
--declare @accion_loc as int=0                              
--declare @fechamov as date=getdate()                              
declare @accion_loc as int=@accion                              
declare @fechaini as datetime=(select fechaini from FUP_Documento_Detalle with(nolock) where id_detalle=@id_detalle)                              
declare @fechafin as datetime=(select fechafin from FUP_Documento_Detalle with(nolock) where id_detalle=@id_detalle)                              
declare @id_motivomovimiento as int=(select Id_MotivoMovimiento from FUP_Documento_Detalle with(nolock) where id_detalle=@id_detalle)                              
declare @tipo_recalculo as int=(select programa from fup_motivomovimiento with(nolock) where id_motivomovimiento=@id_motivomovimiento)                              
declare @id_rel_motivomov as int =(select id_motivomov from tmotivomov where idcampo=@id_motivomovimiento)                                
declare @clavemov as varchar(10)=(select clave from fup_motivomovimiento with(nolock) where id_motivomovimiento=@id_motivomovimiento)                              
declare @fechafin_horas as datetime=(case when @fechaini=@fechafin then (select dbo.anioQuincenaToFecha(''999924'',1)) else                              
(select dbo.anioQuincenaToFecha(dbo.fechatoanioquincena(@fechafin),1)) end)                              
declare @id_usuario as int= (select fd.id_usuario from FUP_Documento_Detalle fdd with(nolock)                               
inner join fup_documentos fd with(nolock) on fdd.id_documento=fd.id_documento                              
where fdd.id_detalle=@id_detalle)                              
declare @id_documento as int= (select fd.id_documento from FUP_Documento_Detalle fdd with(nolock)                               
inner join fup_documentos fd with(nolock) on fdd.id_documento=fd.id_documento                              
where fdd.id_detalle=@id_detalle)                              
declare @id_estatus_doc as int =(select id_estatus from fup_documentos where id_documento=@id_documento)                              
declare @id_emp as int=(select id_emp from fup_documentos with(nolock) where id_documento=@id_documento)                              
declare @id_nodo as int=( select vtl.Id_Nodo from FUP_Informacion_Documentos fid with(nolock)                               
inner join VistaTablaLongitud vtl with(nolock) on fid.Centro_Trabajo=vtl.Clave                              
where fid.Id_Documento=@id_documento)                              
declare @id_plaza as int=(select id_plaza from FUP_Documento_Detalle with(nolock) where id_detalle=@id_detalle)                              
declare @id_plaza_hija as int                              
declare @estatus_plaza as int                              
declare @est_vacancia as int                              
declare @mot_plaza as int                              
declare @fechaini_lic as datetime                            
declare @mot_vacante as int  
declare @rel_cm as int

-- cuando los movimientos son de 01 95 de upn inserta el nivel de sueldo 01 sino es de basica con sueldo 07   
if(@id_motivomovimiento = 389 or @id_motivomovimiento = 390)                        
      begin                         
        set @rel_cm=1                       
      end  
else 
      begin                         
        set @rel_cm=3
      end 
                     
if(@tipo_recalculo=7)                              
begin           
  if(@id_motivomovimiento=407)--para los casos nuevos de motivo 22 sustituto de becario          
   begin           
     set @mot_plaza=( select b.Id_TipoPlaza from FUP_MotivoMovimiento a                              
     inner join TTipoPlaza b on a.clave=b.CveTipoPlaza                              
     where a.Id_MotivoMovimiento=407 and b.id_tipoplaza>=99 and b.DesTipoPlaza=''SUSTITUTO DE BECARIO''                           
     and a.programa=@tipo_recalculo)          
   end       
  else if(@id_motivomovimiento=390)--para los casos de 95 sobre plazas de upn con efectos cerrados        
   begin           
     set @mot_plaza=154          
   end                             
  else if(@id_motivomovimiento=393)--para los casos de prorroga de nombramiento codigo 97 nuevo ingreso        
   begin         
     set @mot_plaza=(select b.Id_TipoPlaza from FUP_MotivoMovimiento a                              
   inner join TTipoPlaza b on a.clave=b.CveTipoPlaza                              
      where a.Id_MotivoMovimiento=393 and b.id_tipoplaza>=99                   
   and a.programa=@tipo_recalculo and b.id_tipoplaza not in (                              
   select b.Id_TipoPlaza from FUP_MotivoMovimiento a                              
   inner join TTipoPlaza b on a.clave=b.CveTipoPlaza                              
      where a.Id_MotivoMovimiento=393 and DesTipoPlaza like ''%adicional%'' and b.id_tipoplaza>=99                              
   ) AND b.Id_TipoPlaza NOT IN (154))         
   end        
  else          
    begin          
    set @mot_plaza=(select b.Id_TipoPlaza from FUP_MotivoMovimiento a                              
   inner join TTipoPlaza b on a.clave=b.CveTipoPlaza                              
      where a.Id_MotivoMovimiento=@id_motivomovimiento and DesTipoPlaza like ''%alta%'' and b.id_tipoplaza>=99                   
   and a.programa=@tipo_recalculo and b.id_tipoplaza not in (                              
   select b.Id_TipoPlaza from FUP_MotivoMovimiento a                              
   inner join TTipoPlaza b on a.clave=b.CveTipoPlaza                              
      where a.Id_MotivoMovimiento=@id_motivomovimiento and DesTipoPlaza like ''%adicional%'' and b.id_tipoplaza>=99                              
   ) AND b.Id_TipoPlaza NOT IN (154)                                 
   )                               
    end          
end                              
else                              
begin          
 if(@id_motivomovimiento=408)----para los casos nuevos de motivo 22 sustituto de becario adicionales          
   begin           
         set @mot_plaza=( select b.Id_TipoPlaza from FUP_MotivoMovimiento a                              
         inner join TTipoPlaza b on a.clave=b.CveTipoPlaza                              
         where a.Id_MotivoMovimiento=408 and b.id_tipoplaza>=99 and b.DesTipoPlaza=''SUSTITUTO DE BECARIO ADICIONAL''                           
         and a.programa=@tipo_recalculo)          
   end      
 else if(@id_motivomovimiento=389)--para los casos de 95 adicional sobre plazas de upn con efectos cerrados        
   begin           
     set @mot_plaza=155         
   end            
 else if (@id_motivomovimiento=394)--para los casos de prroga adicional por codigo 97      
   begin         
        set @mot_plaza=(select b.Id_TipoPlaza from FUP_MotivoMovimiento a                              
        inner join TTipoPlaza b on a.clave=b.CveTipoPlaza                              
        where a.Id_MotivoMovimiento=394 and DesTipoPlaza like ''%adicional%'' and b.id_tipoplaza>=99                              
        and a.programa=@tipo_recalculo and b.Id_TipoPlaza not in (155)   )          
   end        
 else        
   begin                  
   set @mot_plaza=(select b.Id_TipoPlaza from FUP_MotivoMovimiento a                              
  inner join TTipoPlaza b on a.clave=b.CveTipoPlaza                              
     where a.Id_MotivoMovimiento=@id_motivomovimiento and DesTipoPlaza like ''%adicional%'' and b.id_tipoplaza>=99                              
  and a.programa=@tipo_recalculo and b.Id_TipoPlaza not in (155))                              
   end          
end                 
                             
if(@id_motivomovimiento in (select Id_MotivoMovimiento from FUP_MotivoMovimiento where clave in (''FV'',''FW'',''FS'',''FI'',''FY'',''FZ'',''FT'',''29'',''FK'',''84'',''89'',''FU'',''FJ'',''10'',''94'',''90'',''95'',''09'',''99'') and id_motivomovimiento>120))--solo para contemplar que se vaya por la plaza padre                    
  begin                               
    set @id_plaza_hija=@id_plaza                              
    set @estatus_plaza=1                              
    set @est_vacancia=2             
    if(@clavemov in (''11'',''12'',''13'',''14'',''15'',''24'',''25'',''16'',''29'',''17'',''29'',''18'',''84'',''88'',''89'',''90'',''91'',''92'',''FU'',''93'',''09'',''95'',''99''))--se agrega porque son con efectos cerrados por eso van con estatus 6 y no dependen de licencia                      
  
     
      
       
    begin                               
     set @estatus_plaza=6                              
    end                        
                     
    -- para contemplar los movimientos motivo 95 y 97 (prorroga) que finalmente van sobre licencias sin goce de sueldo                         
    if(@id_motivomovimiento in (405,406,393,394))                     
    begin                        
      set @estatus_plaza=6                         
      set @fechaini_lic= (select distinct top 1 fechaini from FUP_Documento_Detalle where Id_MotivoMovimiento in (                          
                        select Id_MotivoMovimiento from FUP_MotivoMovimiento where Id_TipoMovimiento in (                              
                        select Id_TipoMovimiento from FUP_TipoMovimiento where id_tipomovimiento in (9,10,11,31)                              
                     ) and clave not in (''44'',''48'',''88'')) and id_estatus=2 and id_plaza=@id_plaza order by fechaini desc)                        
   if(@fechaini_lic is null or @fechaini_lic='''')                              
       begin                               
            set @id_plaza_hija = null                              
       end                              
       else                              
    begin                         
      set @id_plaza_hija=(select top 1 valor_idcampo from hplazas where Id_TipoMovPlazas=4 and id_plaza=@id_plaza and fecha>=@fechaini_lic                              
                    and fecha<=@fechafin order by fecha desc)                              
      set @estatus_plaza=6                              
      set @est_vacancia=7                              
    end                                          
   end                           
  end                           
else                               
   begin                              
    set @fechaini_lic= (select distinct top 1 fechaini from FUP_Documento_Detalle where Id_MotivoMovimiento in (                              
                        select Id_MotivoMovimiento from FUP_MotivoMovimiento where Id_TipoMovimiento in (                              
                        select Id_TipoMovimiento from FUP_TipoMovimiento where id_tipomovimiento in (9,10,11,31)                              
                     )) and id_estatus=2 and id_plaza=@id_plaza order by fechaini desc)                              
    if(@fechaini_lic is null or @fechaini_lic='''')                              
       begin                               
            set @id_plaza_hija = null                              
       end                              
   else                              
    begin                         
      set @id_plaza_hija=(select top 1 valor_idcampo from hplazas where Id_TipoMovPlazas=4 and id_plaza=@id_plaza and fecha>=@fechaini_lic                              
                    and fecha<=@fechafin order by fecha desc)                              
      set @estatus_plaza=6                              
      set @est_vacancia=7                              
    end                              
   end                           
--print @id_plaza                    
--print @fechaini_lic                     
--print @id_plaza_hija                               
declare @quincenafin as varchar(2)=(select substring(dbo.fechatoanioquincena(@fechafin),5,2))                              
declare @añomov as int=(select substring(dbo.fechatoanioquincena(@fechafin),1,4))                              
declare @diasiguiente as datetime                              
declare @msg as varchar                         
                              
                              
 if(@quincenafin=24)--se valida la quincena para la vacancia                              
  begin                              
       set @añomov+=1                          
    set @quincenafin=''01''                              
    set @diasiguiente=(select dbo.anioQuincenaToFecha(cast(@añomov as varchar(4))+cast(@quincenafin as varchar(2)),0))                              
  end                              
 else                              
     begin                               
   set @diasiguiente=(select dbo.anioQuincenaToFecha((select dbo.fechaToAnioQuincena(@fechafin)+1),0))                          
  end                              
 if (@accion_loc=0) ---entrar al hacer                              
     begin                                 
   if not exists(select * from hplazas_empalme where fecha=@fechaini and id_plaza=@id_plaza_hija)--se contempla para las reversas                              
    begin                              
       if(@id_estatus_doc<>2)--se valida no entre cuando ya fue procesado                              
         begin                              
         if exists(select * from hplazas where fecha=@fechaini and id_plaza=@id_plaza_hija)                              
            begin                               
           --insertar los registros existentes para respaldo en hplazas_empalme                              
         insert into hplazas_empalme (id_plaza,fecha,Id_TipoMovPlazas,valor_idcampo,id_user,movimiento,esHistoria)                              
           select id_plaza,fecha,Id_TipoMovPlazas,valor_idcampo,id_user,movimiento,esHistoria                               
           from hplazas where id_plaza=@id_plaza_hija and fecha=@fechaini                              
                              
           --actualizar registros para la asignacion                              
           update hplazas set Valor_IdCampo=@mot_plaza,documentos=@id_documento,id_user=@id_usuario,movimiento=@fechamov                               
           where Id_TipoMovPlazas=1 and id_plaza=@id_plaza_hija and fecha=@fechaini                              
                                  
           update hplazas set Valor_IdCampo=@estatus_plaza,documentos=@id_documento,id_user=@id_usuario,movimiento=@fechamov                               
           where Id_TipoMovPlazas=2 and id_plaza=@id_plaza_hija and fecha=@fechaini                              
                              
           ---select * from hplazas where id_plaza=246357 order by fecha                              
           --update hplazas set Valor_IdCampo=48 where Id_TipoMovPlazas=1 and fecha=''20170816''                              
           --update hplazas set Valor_IdCampo=7 where Id_TipoMovPlazas=2 and fecha=''20170816''                              
           --select * from hplazas_empalme where id_plaza=246357                              
                                    
           --insertar registros de vacancia siempre y cuando la fecha final sea diferente a la fecha inicial                              
           if(@fechafin<>@fechaini)                              
           begin                              
    if not exists(select * from hplazas where fecha=@diasiguiente and id_plaza=@id_plaza_hija)                              
    begin                        
        if(@id_motivomovimiento = 389 or @id_motivomovimiento = 390)                        
      begin                         
        set @mot_vacante=95                        
      end                    
   else if(@id_motivomovimiento = 393 or @id_motivomovimiento = 394)                        
      begin                         
        set @mot_vacante=20                      
      end             
   else if(@id_motivomovimiento = 401 or @id_motivomovimiento = 402)           
      begin                         
        set @mot_vacante=20                     
      end            
   else if(@id_motivomovimiento = 395 or @id_motivomovimiento = 396)                        
      begin                         
        set @mot_vacante=25                     
      end            
   else if(@id_motivomovimiento = 403 or @id_motivomovimiento = 404)                        
      begin                    
        set @mot_vacante=20                     
      end                            
      else                         
         begin                         
           set @mot_vacante=20                        
         end                  
     insert into hplazas (id_plaza,fecha,Id_TipoMovPlazas,Valor_IdCampo,id_user,movimiento,esHistoria,documentos) values                              
     (@id_plaza_hija,@diasiguiente,1,@mot_vacante,@id_usuario,@fechamov,0,@id_documento)                              
                              
     insert into hplazas (id_plaza,fecha,Id_TipoMovPlazas,Valor_IdCampo,id_user,movimiento,esHistoria,documentos) values                              
     (@id_plaza_hija,@diasiguiente,2,@est_vacancia,@id_usuario,@fechamov,0,@id_documento)                              
    end                              
            end                              
                              
           --actualizar/insertar el registro en carrera magisterial de acuerdo al movimiento si es sobre plaza de upn 01 (1), basica 07 (3)  12/03/2020                           
           if exists(select * from HTabulador_SE_CM where fecha=@fechaini and id_plaza=@id_plaza_hija)                              
           begin                               
              update htabulador_se_cm set id_rel=@rel_cm,movimiento=@fechaini,id_user=@id_usuario where id_plaza=@id_plaza_hija and fecha=@fechaini                              
           end                              
                              
           if not exists(select * from HTabulador_SE_CM where fecha=@fechaini and id_plaza=@id_plaza_hija)                              
           begin                               
            insert into htabulador_se_cm values (@id_plaza_hija,@rel_cm,@fechaini,@id_usuario,@fechaini,0,'''')                              
           end                              
                              
            end                              
          else                   
            begin                              
           --insertar registros de asignacion                              
           insert into hplazas (id_plaza,fecha,Id_TipoMovPlazas,Valor_IdCampo,id_user,movimiento,esHistoria,documentos) values                              
           (@id_plaza_hija,@fechaini,1,@mot_plaza,@id_usuario,@fechamov,0,@id_documento)                              
                              
           insert into hplazas (id_plaza,fecha,Id_TipoMovPlazas,Valor_IdCampo,id_user,movimiento,esHistoria,documentos) values                              
           (@id_plaza_hija,@fechaini,2,@estatus_plaza,@id_usuario,@fechamov,0,@id_documento)                              
                              
           --insertar registros de vacancia siempre y cuando la fecha final sea diferente a la fecha inicial                              
           if(@fechafin<>@fechaini)                              
           begin                              
               if not exists(select * from hplazas where fecha=@diasiguiente and id_plaza=@id_plaza_hija)                              
               begin                        
         if(@id_motivomovimiento = 389 or @id_motivomovimiento = 390)                        
      begin                         
        set @mot_vacante=95                        
      end                  
   else if(@id_motivomovimiento = 393 or @id_motivomovimiento = 394)                        
      begin                         
        set @mot_vacante=20                    
      end            
   else if(@id_motivomovimiento = 401 or @id_motivomovimiento = 402)                       
      begin                         
        set @mot_vacante=20                     
      end            
   else if(@id_motivomovimiento = 395 or @id_motivomovimiento = 396)                        
      begin                         
        set @mot_vacante=25                     
      end            
   else if(@id_motivomovimiento = 403 or @id_motivomovimiento = 404)                        
      begin                         
        set @mot_vacante=20                    
      end             
     else                         
         begin                         
           set @mot_vacante=20                        
      end                               
      insert into hplazas (id_plaza,fecha,Id_TipoMovPlazas,Valor_IdCampo,id_user,movimiento,esHistoria,documentos) values                              
      (@id_plaza_hija,@diasiguiente,1,@mot_vacante,@id_usuario,@fechamov,0,@id_documento)                              
                              
      insert into hplazas (id_plaza,fecha,Id_TipoMovPlazas,Valor_IdCampo,id_user,movimiento,esHistoria,documentos) values                              
      (@id_plaza_hija,@diasiguiente,2,@est_vacancia,@id_usuario,@fechamov,0,@id_documento)                              
               end                              
           end                              
           end                                  
                                   
            --actualizar plaza hija                              
            update fvi set fvi.valor=@id_plaza_hija from FUP_Documento_Detalle fdd with(nolock)                              
            inner join FUP_ValorInteger fvi with(nolock) on fdd.Id_Detalle=fvi.Id_Documento                              
            inner join FUP_DetalleCampos fdc with(nolock) on fvi.Id_Valor=fdc.Id_Valor                              
            inner join Tformulas t with(nolock) on fdc.Id_Formula=t.idFormula                              
            where fdd.Id_Detalle=@id_detalle and t.Descripcion=''id_plaza''                              
            and fdd.Id_MotivoMovimiento in (@id_motivomovimiento)                              
                              
            --insercion del ligue y desligue en plazaempleados                              
            --select * from plazaempleados where id_plaza=246357 order by fecha                              
            insert into plazaempleados (id_emp,id_plaza,fecha,id_user,movimiento,id_nodo,documentos,id_plazaanterior,esHistoria,desliguePlaza,tipoHistoria)                              
            values (@id_emp,@id_plaza_hija,@fechaini,@id_usuario,@fechamov,@id_nodo,@id_documento,0,0,0,null)                              
                              
            --si existe registro se respeta sino se inserta                              
            if not exists(select * from plazaempleados where fecha=@fechafin_horas and id_emp=0 and id_plaza=@id_plaza_hija)                              
            begin                              
            insert into plazaempleados (id_emp,id_plaza,fecha,id_user,movimiento,id_nodo,documentos,id_plazaanterior,esHistoria,desliguePlaza,tipoHistoria)                              
            values (0,@id_plaza_hija,@fechafin_horas,@id_usuario,@fechamov,@id_nodo,@id_documento,0,0,0,null)                                   
            end                              
                                       
            --se insertan registros para contemplar pago de quinquenio en hmotivo                              
            --id_Plaza Id_MotivoMov F_Aplicacion F_Captura Id_User idcampo esHistoria                              
            --1.- para el campo del motivo de la plaza                              
            insert into hmotivomov values (@id_plaza_hija,@id_rel_motivomov,@fechaini,@fechamov,@id_usuario,277,0)                              
            --2.- para el campo del estatus de la plaza                              
     insert into hmotivomov values (@id_plaza_hija,@id_rel_motivomov,@fechaini,@fechamov,@id_usuario,1676,0)                              
            --3.- para el campo identificador del ligue de la plaza con el empleado                              
            insert into hmotivomov values (@id_plaza_hija,@id_rel_motivomov,@fechaini,@fechamov,@id_usuario,1829,0)                              
                                          
            --actualizar/insertar el registro en carrera magisterial de acuerdo al movimiento si es sobre plaza de upn 01 (1), basica 07 (3)   12/03/2020                            
            if exists(select * from HTabulador_SE_CM where fecha=@fechaini and id_plaza=@id_plaza_hija)                              
            begin                               
              update htabulador_se_cm set id_rel=@rel_cm,movimiento=@fechaini,id_user=@id_usuario where id_plaza=@id_plaza_hija and fecha=@fechaini                              
            end                              
                              
            if not exists(select * from HTabulador_SE_CM where fecha=@fechaini and id_plaza=@id_plaza_hija)                              
            begin                               
              insert into htabulador_se_cm values (@id_plaza_hija,@rel_cm,@fechaini,@id_usuario,@fechaini,0,'''')                              
            end                                          
      end                              
     else                              
       begin                              
         set @msg=''not execute''                              
           end                              
    end--fin se contempla para reversas                              
   else                              
       begin                              
      set @msg=''not execute''                              
    end                              
  end                                
 else   --inicio del deshacer                              
  begin                                
    if exists(select * from hplazas_empalme where fecha=@fechaini and id_plaza=@id_plaza_hija)                              
       begin                               
      --eliminar todo lo existente de la plaza con el id_documento de hplazas                              
      delete from hplazas where id_plaza=@id_plaza_hija and documentos=cast(@id_documento as varchar(255))                              
                  
      --insertar los registros existentes de respaldo en hplazas                              
      insert into hplazas (id_plaza,fecha,Id_TipoMovPlazas,valor_idcampo,id_user,movimiento,esHistoria,documentos)                              
      select id_plaza,fecha,Id_TipoMovPlazas,valor_idcampo,id_user,movimiento,esHistoria,null as documentos from hplazas_empalme                               
      where id_plaza=@id_plaza_hija and fecha=@fechaini                              
                              
      --eliminar de hplazas_empalme los registros de respaldo                              
      delete from hplazas_empalme where id_plaza=@id_plaza_hija and fecha=@fechaini                              
                              
      ---select * from hplazas where id_plaza=246357 order by fecha                              
      --update hplazas set Valor_IdCampo=48 where Id_TipoMovPlazas=1 and fecha=''20170816''                              
      --update hplazas set Valor_IdCampo=7 where Id_TipoMovPlazas=2 and fecha=''20170816''                              
      --select * from hplazas_empalme where id_plaza=246357                              
       end                              
     else                               
             begin                              
            --eliminar registros de asignacion en hplazas                              
      delete from hplazas where id_plaza=@id_plaza_hija and documentos=cast(@id_documento as varchar(255))                                    
       end                              
                              
 --regresar el id de la plaza                               
       update fvi set fvi.valor=fdd.id_plaza from FUP_Documento_Detalle fdd with(nolock)                              
       inner join FUP_ValorInteger fvi with(nolock) on fdd.Id_Detalle=fvi.Id_Documento                
       inner join FUP_DetalleCampos fdc with(nolock) on fvi.Id_Valor=fdc.Id_Valor                              
       inner join Tformulas t with(nolock) on fdc.Id_Formula=t.idFormula                              
       where fdd.Id_Detalle=@id_detalle and t.Descripcion=''id_plaza''                              
       and fdd.Id_MotivoMovimiento in (@id_motivomovimiento)                              
        
       --eliminar ligue y desligue en plazaempleados cast(1292328 as varchar(50))                           
       delete from plazaempleados where id_plaza=@id_plaza_hija and documentos=cast(@id_documento as varchar(255))                              
                              
       -- eliminar lo insertado por los campos lógicos de hmotivomov                              
       delete from hmotivomov where id_plaza=@id_plaza_hija and F_Captura=@fechamov and Id_MotivoMov=@id_rel_motivomov                              
       and idcampo in (277,1676,1829) and id_user=@id_usuario and F_Aplicacion=@fechaini                              
                              
       delete from HTabulador_SE_CM where fecha=@fechaini and id_plaza=@id_plaza_hija and id_rel=@rel_cm                                              
  end                                
end'
GO

GO
PRINT N'Creating [dbo].[DSV_PropuestaSacaHistPagosDedu]'
GO
IF OBJECT_ID(N'[dbo].[DSV_PropuestaSacaHistPagosDedu]', 'P') IS NULL
EXEC sp_executesql N'
CREATE PROCEDURE [dbo].[DSV_PropuestaSacaHistPagosDedu] (@idplaza INT, @Idemp INT, @idperiodo INT, @refere INT, @Mtra_Datos INT)
	 
AS
BEGIN
	DECLARE @PDtbltmp TABLE (
		Id_Emp INT, Id_Periodo INT, 
		id_concepto INT, Pesos FLOAT, 
		CC VARCHAR(10), id_plaza INT, 
		Id_Referencia INT, id_periodoPago INT, 
		Desde VARCHAR(6), Hasta VARCHAR(6)
	)
	DECLARE @danio INT = (
		SELECT año
		FROM calennomina
		WHERE Id_Periodo = @idperiodo
	)

	IF (
		EXISTS (
			SELECT 1
			FROM INFORMATICA..previo_config
			WHERE prop = ''source''
				AND value = ''nomhist''
		)
	)
	BEGIN
		INSERT INTO @PDtbltmp
		SELECT 
			@Idemp AS id_emp, id_periodo, id_concepto, 
			pesos, cc, @idplaza AS id_plaza, id_referencia, 
			id_periodopago, desde, hasta
		FROM 
			nom_histpagos
		WHERE
			id_emp = @idemp
			AND id_periodo = @idperiodo
			AND id_plaza = @idplaza
			AND id_referencia = @refere;

		INSERT INTO @PDtbltmp
		SELECT 
			@Idemp AS id_emp, id_periodo, id_concepto, 
			pesos, cc, @idplaza AS id_plaza, id_referencia, 
			id_periodopago, desde, hasta
		FROM 
			nom_pagos_hist
		WHERE
			id_emp = @idemp
			AND id_periodo = @idperiodo
			AND id_plaza = @idplaza
			AND id_referencia = @refere
	END
	ELSE
	BEGIN
		INSERT INTO @PDtbltmp
		SELECT 
			@Idemp AS id_emp, id_periodo, id_concepto, 
			pesos, cc, @idplaza AS id_plaza, id_referencia, 
			id_periodopago, desde, hasta
		FROM [INFORMATICA].dbo.deta_datos
		WHERE Mtra_datos_Id = @Mtra_Datos
	END

	SELECT 
		a.id_concepto, a.Resultado AS Clave, convert(VARCHAR(12), 
		cast(b.Pesos AS MONEY), 1) AS Importe, 
		(a.descripcion + dbo.PensionLbl(a.id_concepto)) descripcion, 
		b.Id_Emp, Cast(f.año AS VARCHAR(4)) + '''' + Right(''00'' + Cast(f.numero AS VARCHAR(2)), 2) AS Periodo, 
		b.id_plaza, Desde + '' '' + Hasta AS Desde_Hasta
	FROM Conceptos a
	INNER JOIN ConceptoRelEmpresa c
		ON a.id_concepto = c.id_concepto
	INNER JOIN (
		SELECT 
			Id_Emp, id_concepto, Id_Periodo, id_plaza, 
			Pesos, Desde, Hasta, isnull(Id_Referencia, 0) Id_Referencia, c_costo
		FROM HistPagos
		
		UNION ALL
		
		SELECT 
			Id_Emp, id_concepto, Id_Periodo, id_plaza, 
			Pesos, cast(Desde AS VARCHAR(6)) COLLATE SQL_Latin1_General_CP1_CI_AS AS DESDE, 
			CAST(Hasta AS VARCHAR(6)) COLLATE SQL_Latin1_General_CP1_CI_AS AS HASTA, 
			isnull(Id_Referencia, 0) Id_Referencia, 
			CAST(cc AS VARCHAR(10)) COLLATE SQL_Latin1_General_CP1_CI_AS AS c_costo
		FROM @PDtbltmp
	) AS b
		ON a.id_concepto = b.id_concepto
	INNER JOIN Empleados D
		ON D.id_emp = b.id_emp
	INNER JOIN Plazas E
		ON E.id_plaza = b.id_plaza
	INNER JOIN Calennomina F
		ON b.Id_Periodo = F.Id_periodo
	WHERE b.id_emp = @idemp
		AND e.id_plaza = @idplaza
		AND b.id_periodo = @idperiodo
		AND (c.id_razonsocial = 5)
		AND (a.Tipo = 2)
		AND (a.En_ListaRaya = 1)
		AND b.Id_Referencia = @refere
	ORDER BY dbo.OrderCtos(a.id_concepto) ASC, A.resultado ASC, Desde, Hasta
END'
GO

GO
PRINT N'Creating [dbo].[spf_plaza_vacante_hija]'
GO
IF OBJECT_ID(N'[dbo].[spf_plaza_vacante_hija]', 'P') IS NULL
EXEC sp_executesql N'CREATE procedure [dbo].[spf_plaza_vacante_hija]                            
(                                
  @id_detalle as int                              
) as                                
Begin                                 
     declare @id_detalle_loc as int=@id_detalle
     declare @id_plaza as int      
     declare @fechaini as datetime            
     declare @id_plaza_hija as int        
     declare @plazaieepo as varchar (21)        
     declare @mensaje as varchar (500)      
     declare @idEmp_ocupa as int       
     declare @fechaocupada as datetime       
     declare @Quincenaocupada as varchar(6)      
     declare @Rfc_ocupa as varchar (13)      
     declare @idnodo_ocupa as int         
     declare @CT_Ocupa as varchar(10)
     declare @idnodo_plaza as int      
     declare @Clave_id_nodo_plaza as varchar (10)      
     declare @procede as int
     declare @hasta as datetime=case when (select fechaini      
     from fup_documento_detalle where id_detalle=@id_detalle_loc)=(select fechafin      
     from fup_documento_detalle where id_detalle=@id_detalle_loc) then ''99991231'' else (select fechafin      
     from fup_documento_detalle where id_detalle=@id_detalle_loc) end 
     declare @hastaquincenafecha as datetime       
     declare @fecha_desligue_ocupada_plaza as datetime 
             
      
if(exists(select * from fup_documento_detalle where Id_MotivoMovimiento in (3,4,8,9) and Id_Detalle=@id_detalle_loc))      
  begin         
     set @id_plaza=(select id_plaza from FUP_Documento_Detalle where Id_Detalle=@id_detalle_loc)        
     set @id_plaza_hija =(select MAX (Valor_IdCampo) from hplazas where Id_TipoMovPlazas=4 and Id_plaza=@id_plaza)       
     set @plazaieepo=(select plazaieepo from plazaieepo where Id_plaza=@id_plaza_hija)      
     set @fechaini=(select fechaini from fup_documento_detalle where id_detalle=@id_detalle_loc)        
     set @idEmp_ocupa=(select top 1 id_emp from plazaempleados where id_plaza=@id_plaza_hija and id_emp<>0 order by fecha desc)      
     set @fechaocupada= (select max(Fecha) from plazaempleados where id_emp=@idEmp_ocupa and id_plaza=@id_plaza_hija and Fecha<=@fechaini)      
     set @QuincenaOcupada=(select dbo.fechaToAnioQuincena(@fechaocupada))              
     set @Rfc_ocupa=(select rfc from empleados where id_emp=@idEmp_ocupa)       
     set @idnodo_ocupa=(select max(id_nodo) from plazaempleados where id_emp=@idEmp_Ocupa and id_plaza=@id_plaza_hija)        
     set @CT_Ocupa =(select Clave from VistaTablaLongitud where id_nodo=@idnodo_ocupa)       
     set @mensaje=''La plaza '' +@plazaieepo +'' esta ocupada por '' + @Rfc_ocupa + '' desde la Quincena '' + @QuincenaOcupada + '' en el CT '' + @CT_Ocupa          
           
     if (@mensaje is null)    
    begin     
         set @procede=0    
    end    
     else    
    begin    
      if (exists(select * from FUP_Rel_Id_Detalle_Mensaje where Id_Detalle=@id_detalle_loc))        
      delete from FUP_Rel_Id_Detalle_Mensaje where Id_Detalle=@id_detalle_loc        
                 
      insert into FUP_Rel_Id_Detalle_Mensaje (Id_Detalle,mensaje) values (@id_detalle_loc,@mensaje)        
    end
  end

-- cuando el mov es un 01 20
if(exists(select * from fup_documento_detalle where Id_MotivoMovimiento in (2,7) and Id_Detalle=@id_detalle_loc))      
   begin       
     set @id_plaza=(select id_plaza from FUP_Documento_Detalle where Id_Detalle=@id_detalle_loc)        
     set @id_plaza_hija =(select MAX (Valor_IdCampo) from hplazas where Id_TipoMovPlazas=4 and Id_plaza=@id_plaza and Fecha<@hasta)         
     
		 if(@id_plaza_hija >0)          
		 begin       
				  set @plazaieepo=(select plazaieepo from plazaieepo where Id_plaza=@id_plaza_hija)      
				  set @fechaini=(select fechaini from fup_documento_detalle where id_detalle=@id_detalle_loc)            
				  set @hastaquincenafecha=(select dbo.anioQuincenaToFecha((select dbo.fechaToAnioQuincena(@hasta)),1))         
				  set @fecha_desligue_ocupada_plaza=(select top 1 fecha from plazaempleados where id_plaza=@id_plaza_hija and id_emp=0 and fecha<=@hastaquincenafecha order by fecha desc)      
				  if (@fecha_desligue_ocupada_plaza>@fechaini)      
						begin      
							 set @idEmp_Ocupa=(select top 1 id_emp from plazaempleados where id_plaza=@id_plaza_hija and id_emp<>0 and fecha<@hasta order by fecha desc)          
						end      
				   else      
						begin      
							 set @procede=0      
						end      
				   set @fechaocupada= (select max(Fecha) from plazaempleados where id_emp=@idEmp_Ocupa and id_plaza=@id_plaza_hija and fecha < @hasta)            
				   set @QuincenaOcupada=(select dbo.fechaToAnioQuincena(@fechaocupada))            
				   set @Rfc_ocupa=(select rfc from empleados where id_emp=@idEmp_Ocupa)            
				   set @idnodo_ocupa=(select max(id_nodo) from plazaempleados where id_emp=@idEmp_Ocupa and id_plaza=@id_plaza_hija)            
				   set @CT_Ocupa =(select Clave from VistaTablaLongitud where id_nodo=@idnodo_ocupa)      
				   set @idnodo_plaza=(select top 1 id_nodo from plazaempleados where id_plaza=@id_plaza_hija and Fecha<''99991231'' order by fecha desc)          
				   set @Clave_id_nodo_plaza =(select clave from VistaTablaLongitud where id_nodo=@idnodo_plaza)      
			                  
				   set @mensaje=''La plaza '' +@plazaieepo +'' esta ocupada por '' + @Rfc_ocupa + '' desde la Quincena '' + @QuincenaOcupada + '' en el CT '' + @CT_Ocupa        
			             
				   if(@mensaje is null)      
									   begin       
											set @procede=0      
									   end      
				   else      
									   begin      
												if (exists(select * from FUP_Rel_Id_Detalle_Mensaje where Id_Detalle=@id_detalle_loc))        
                                                   delete from FUP_Rel_Id_Detalle_Mensaje where Id_Detalle=@id_detalle_loc        
                 
                                                   insert into FUP_Rel_Id_Detalle_Mensaje (Id_Detalle,mensaje) values (@id_detalle_loc,@mensaje)      
									   end
	          
		  end
else
	begin	  
           set @id_plaza=(select id_plaza from FUP_Documento_Detalle where Id_Detalle=@id_detalle_loc)        
		   set @plazaieepo=(select plazaieepo from plazaieepo where Id_plaza=@id_plaza)      
		   set @fechaini=(select fechaini from fup_documento_detalle where id_detalle=@id_detalle_loc)            
		   set @hastaquincenafecha=(select dbo.anioQuincenaToFecha((select dbo.fechaToAnioQuincena(@hasta)),1))         
		   set @fecha_desligue_ocupada_plaza=(select top 1 fecha from plazaempleados where id_plaza=@id_plaza and id_emp=0 and fecha<=@hastaquincenafecha order by fecha desc)      
		   if (exists(select top 1 fecha from plazaempleados where id_plaza=@id_plaza and id_emp=0 and fecha<@fecha_desligue_ocupada_plaza order by fecha desc))      
			  begin      
					set @fecha_desligue_ocupada_plaza=(select top 1 fecha from plazaempleados where id_plaza=@id_plaza and id_emp=0 and fecha<@fecha_desligue_ocupada_plaza order by fecha desc)      
			  end      
		   else       
			  begin      
					set @fecha_desligue_ocupada_plaza=(select top 1 fecha from plazaempleados where id_plaza=@id_plaza and id_emp=0 and fecha<=@hastaquincenafecha order by fecha desc)      
			  end      
		   if (@fecha_desligue_ocupada_plaza>@fechaini)      
			  begin      
				   set @idEmp_Ocupa=(select top 1 id_emp from plazaempleados where id_plaza=@id_plaza and id_emp<>0 and fecha<@hasta order by fecha desc)          
			  end      
		   else      
			  begin      
				   set @procede=0      
			  end      
		   set @fechaocupada= (select max(Fecha) from plazaempleados where id_emp=@idEmp_Ocupa and id_plaza=@id_plaza and fecha < @hasta)            
		   set @QuincenaOcupada=(select dbo.fechaToAnioQuincena(@fechaocupada))            
		   set @Rfc_ocupa=(select rfc from empleados where id_emp=@idEmp_Ocupa)            
		   set @idnodo_ocupa=(select max(id_nodo) from plazaempleados where id_emp=@idEmp_Ocupa and id_plaza=@id_plaza)            
		   set @CT_Ocupa =(select Clave from VistaTablaLongitud where id_nodo=@idnodo_ocupa)      
		   set @idnodo_plaza=(select top 1 id_nodo from plazaempleados where id_plaza=@id_plaza and Fecha<''99991231'' order by fecha desc)          
		   set @Clave_id_nodo_plaza =(select clave from VistaTablaLongitud where id_nodo=@idnodo_plaza)      
	                  
		   set @mensaje=''La plaza '' +@plazaieepo +'' esta ocupada por '' + @Rfc_ocupa + '' desde la Quincena '' + @QuincenaOcupada + '' en el CT '' + @CT_Ocupa        
	                          
	      
		   if(@mensaje is null)    
							   begin       
									set @procede=0      
							   end      
		   else      
							   begin      
                                    if (exists(select * from FUP_Rel_Id_Detalle_Mensaje where Id_Detalle=@id_detalle_loc))        
                                    delete from FUP_Rel_Id_Detalle_Mensaje where Id_Detalle=@id_detalle_loc        
                 
                                    insert into FUP_Rel_Id_Detalle_Mensaje (Id_Detalle,mensaje) values (@id_detalle_loc,@mensaje)      
      
							   end     
	   end  
   end           
end  



'
GO

GO
PRINT N'Creating [dbo].[spi_CptoRedondeo]'
GO
IF OBJECT_ID(N'[dbo].[spi_CptoRedondeo]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		Noe Ramírez Ramos
-- Create date: 07/12/2015
-- Description: inserta el concepto redondeo al modificar un pd normal o retroacivo
-- =============================================
CREATE PROCEDURE [dbo].[spi_CptoRedondeo]
@id_plaza int, @id_emp int, @id_periodo int, @id_recalculo int, @tipo int, @id_cia int
WITH EXEC AS CALLER
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	
	
declare @idemp int = @id_emp
declare @idplaza int = @id_plaza
declare @idperiodo int = @id_periodo
declare @idRecalculo int = @id_recalculo
declare @fecha datetime = (select fechaini from CalenNomina where Id_Periodo = @idperiodo)


if @tipo = 1
  begin
    
    delete from histpagos where id_plaza = @idplaza and id_emp = @idemp and Id_Periodo = @idperiodo and id_periodopago = @idRecalculo and id_concepto in ( 2601,4214)
    
    select id_emp, id_plaza, id_periodo, h.id_referencia, max(id_periodopago) periodopago, sum(pesos) pesos, max(c_costo) c_costo 
    into #percepciones
    from histpagos h 
    inner join conceptos c on c.id_concepto = h.id_concepto and c.Tipo = 1
    where h.id_periodo = @idperiodo and h.id_plaza = @idplaza and id_emp = @idemp and id_periodopago = @idRecalculo
    group by id_emp, id_plaza,id_periodo, h.id_referencia
    
    select id_periodo, h.id_referencia,h.Id_Emp, h.id_plaza, max(id_periodopago) periodopago, sum(pesos) pesos , max(c_costo) c_costo
    into #deducciones
    from histpagos h 
    inner join conceptos c on c.id_concepto = h.id_concepto and c.Tipo = 2
    where h.id_periodo = @idperiodo and h.id_plaza = @idplaza and id_emp = @idemp and id_periodopago = @idRecalculo
    group by id_periodo, h.id_referencia,h.Id_Emp, h.id_plaza
      
    insert into HistPagos (Id_Emp, Id_Periodo, id_concepto, Consecutivo, Horas, Pesos, Id_categ, Fecha, PesosExcento, C_costo, id_plaza, Id_Referencia, 
    id_periodoPago, Id_ProcesoNomina, Desde, Hasta)
    select p.id_emp, p.id_periodo, case when @id_cia = 2 then 2601 else 4214 end id_concepto, 0 consecutivo,0 horas, round((isnull(p.pesos,0) - isnull(d.pesos,0)) - cast((isnull(p.pesos,0) - isnull(d.pesos,0)) as int),2) pesos, 
    0 id_categ, getdate() fecha, 0 pesosexcento, ''0''  C_costo, p.id_plaza, p.id_referencia, isnull(p.periodopago,d.periodopago) id_periodopago, 0 id_procesonomina, 
    dbo.fechatoanioquincena(@fecha) desde, dbo.fechatoanioquincena(@fecha) hasta
    from #percepciones p 
    full join #deducciones d on d.id_periodo = p.id_periodo and d.id_referencia = p.id_referencia and d.id_emp = p.id_emp and d.id_plaza = p.id_plaza

  end
else
  begin
    delete from histpagosdetalle where id_periodo = @idperiodo and id_referencia = @idRecalculo and id_emp = @idemp and id_plaza = @idplaza and id_concepto in (2601,4214)
    
    select id_emp, id_plaza, id_periodo, h.id_referencia, max(id_periodopago) periodopago, sum(pesos) pesos
    into #percepciones2
    from histpagosdetalle h 
    inner join conceptos c on c.id_concepto = h.id_concepto and c.Tipo = 1
    where h.id_periodo = @idperiodo and h.id_plaza = @idplaza and h.id_emp = @idemp and h.id_referencia = @idRecalculo
    group by id_emp, id_plaza,id_periodo, h.id_referencia 
    
    select id_periodo, h.id_referencia,h.Id_Emp, h.id_plaza, max(id_periodopago) periodopago, sum(pesos) pesos 
    into #deducciones2
    from histpagosdetalle h 
    inner join conceptos c on c.id_concepto = h.id_concepto and c.Tipo = 2
    where h.id_periodo = @idperiodo and h.id_plaza = @idplaza and h.id_emp = @idemp and h.id_referencia = @idRecalculo
    group by id_periodo, h.id_referencia,h.Id_Emp, h.id_plaza
    
    insert into histpagosdetalle (id_emp, id_periodo, id_concepto, consecutivo, horas, pesos, pesosexcento, id_plaza, id_referencia, id_periodopago, 
    id_procesonomina, desde, hasta, id_plazapago, C_costo)
    select 
    p.id_emp, p.id_periodo, case when @id_cia = 2 then 2601 else 4214 end id_concepto, 0 consecutivo,0 horas, (isnull(p.pesos,0) - isnull(d.pesos,0)) - cast((isnull(p.pesos,0) - isnull(d.pesos,0)) as int) pesos,
    0 pesosexcento, p.id_plaza, p.id_referencia, isnull(p.periodopago,d.periodopago) id_periodopago, 2 id_procesonomina, dbo.fechatoanioquincena(c.fechaini) desde, 
    dbo.fechatoanioquincena(c.fechaini) hasta, 0 id_plazapago, ''0'' C_costo
    from #percepciones2 p
    full join #deducciones2 d on d.id_periodo = p.id_periodo and d.id_referencia = p.id_referencia and d.id_emp = p.id_emp and d.id_plaza = p.id_plaza
    inner join calennomina c on c.id_periodo = p.periodopago
  end


END'
GO

GO
PRINT N'Creating [dbo].[spc_CosteoPlazasEspecifico]'
GO
IF OBJECT_ID(N'[dbo].[spc_CosteoPlazasEspecifico]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[spc_CosteoPlazasEspecifico]
@tipoReporte int, @idPlaza varchar(MAX)
WITH EXEC AS CALLER
AS
SET NOCOUNT ON  
DECLARE @Xml AS XML    
SET @Xml = ''<plaza>'' + REPLACE(@idPlaza, '','', ''</plaza><plaza>'') + ''</plaza>'';   
  
declare @fechref datetime = (select max(fechaini) from calennomina WITH(NOLOCK) where procesado = 1 and Actualizado = 0 and parcial = 0)  
  
select a.id_plaza, a.Fecha, a.id_rel tipo, m.id_rel motivo   
into #temp1  
from HstatusPlaza a WITH(NOLOCK) inner join (  
select id_plaza, max(fecha) fecha from HstatusPlaza WITH(NOLOCK) where fecha <= @fechref group by id_plaza  
) b on a.Id_plaza = b.Id_plaza and a.Fecha = b.Fecha  
left join (  
  select a.* from HTipoPlaza a WITH(NOLOCK) inner join (  
  select id_plaza, max(fecha) fecha from HTipoPlaza WITH(NOLOCK) where fecha <= @fechref group by id_plaza  
  ) b on a.Id_plaza = b.Id_plaza and a.Fecha = b.Fecha  
) m on m.id_plaza = a.id_plaza   
where a.id_plaza not in (select Valor_IdCampo from hplazas WITH(NOLOCK) where Id_TipoMovPlazas= 4) --and a.id_rel = 2  
and a.id_plaza in (SELECT plazas.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/plaza'') AS plazas(n))  
  
  
select a.id_plaza, a.Fecha, a.tipo, a.motivo, tm.idCat, tm.Categoria, tm.Desc_categoria, tm.idModelo, tm.Modelo, case when tm.idmodelo = 7 then 1 else 3 end idCM    
into #temp2  
from #temp1 a  
inner join (  
  select a.id_plaza, t.id_Tabulador_SE_Cat_Puesto idCat, ltrim(t.Categoria) Categoria, t.descripcion Desc_Categoria, t.TModelo_SE_id_Modelo_SE idModelo , m.descripcion Modelo  
  from HTabulador_SE_Cat_Puesto a WITH(NOLOCK) inner join (  
  select id_plaza, max(fecha) fecha from HTabulador_SE_Cat_Puesto WITH(NOLOCK) where fecha <= @fechref group by id_plaza  
  ) b on a.id_plaza = b.id_plaza and a.fecha = b.fecha  
  inner join TTabulador_SE_Cat_Puesto t WITH(NOLOCK) on t.id_Tabulador_SE_Cat_Puesto = a.id_rel  
  left join TModelo_SE m WITH(NOLOCK) on m.id_Modelo_SE = t.TModelo_SE_id_Modelo_SE  
  where t.TModelo_SE_id_Modelo_SE in (1,2,3,4,5,6,7,9,10)  
) tm on tm.id_plaza = a.id_plaza  
  
select a.id_plaza, a.Fecha, a.tipo, a.motivo, a.idCat, a.Categoria, a.Desc_categoria, a.idModelo, a.Modelo, a.idCM, z.Zona   
into #temp3  
from #temp2 a  
left join (  
  select a.id_plaza, a.id_rel zona from hTabulador_SE_Zona a WITH(NOLOCK) inner join (  
  select id_plaza, max(fecha) fecha from hTabulador_SE_Zona WITH(NOLOCK) where fecha <= @fechref group by id_plaza  
  ) b on  a.id_plaza = b.id_plaza and a.fecha = b.fecha  
) z on z.id_plaza = a.id_plaza  
  
select a.id_plaza, a.Fecha, a.tipo, a.motivo, a.idCat, a.Categoria, a.Desc_categoria, a.idModelo, a.Modelo, a.idCM, a.Zona, pe.id_emp, pe.id_nodo   
into #temp4  
from #temp3 a  
left join (  
  select a.id_emp, a.id_plaza, a.id_nodo from plazaempleados a WITH(NOLOCK) inner join (  
  select id_plaza, max(fecha) fecha from plazaempleados WITH(NOLOCK) where fecha <= @fechref group by id_plaza  
  ) b on a.Id_plaza = b.Id_plaza and a.Fecha = b.Fecha  
) pe on pe.id_plaza = a.id_plaza  
   
   
select  replace(pi.plazaieepo, '' '','''') Plaza, a.Fecha, a.tipo, a.motivo, a.idCat, a.Categoria, a.Desc_categoria, a.idModelo, a.Modelo, a.idCM, a.Zona, a.id_emp, a.id_nodo, v.clave CT, np.NPago  
into #temp5  
from #temp4 a  
inner join PlazaIEEPO pi WITH(NOLOCK) on pi.id_plaza = a.id_plaza  
left join vistatablalongitud v WITH(NOLOCK) on v.id_nodo = a.id_nodo  
left join (  
  select a.id_plaza, a.id_rel NPago from HTabulador_SE_Nivel_Pago a WITH(NOLOCK) inner join (  
  select id_plaza, max(fecha) fecha from HTabulador_SE_Nivel_Pago WITH(NOLOCK) where fecha <= @fechref group by id_plaza  
  ) b on a.id_plaza = b.id_plaza and a.fecha = b.fecha  
) np on np.id_plaza = a.id_plaza  
where a.id_plaza not in (select Valor_IdCampo from hplazas WITH(NOLOCK) where Id_TipoMovPlazas= 4) --and a.tipo = 2  
and replace(pi.plazaieepo,'' '','''') in (select codigo_plaza from hplazas_concifed_230217 WITH(NOLOCK) where ESTATUS <> ''C'')  
  
  
select  a.Plaza, a.Fecha, a.tipo, a.motivo, a.idCat, a.Categoria, a.Desc_categoria, a.idModelo, a.Modelo, a.idCM, a.Zona, a.id_emp, a.id_nodo, a.CT, a.NPago   
into #datosPlazasVacates  
from #temp5 a  
--union all  
--select distinct a.CODIGO_PLAZA, cast( cast(year(@fechref) as varchar)+''/01/01'' as datetime) desde ,2 tipo,0 motivo, tp.id_Tabulador_SE_Cat_Puesto idCat, isnull(ltrim(tp.categoria),case when len(rtrim(a.CODIGO_PLAZA)) = 20 then SUBSTRING(a.CODIGO_PLAZA, 7, 5) else SUBSTRING(a.CODIGO_PLAZA, 7, 6) end ) Categoria, isnull(tp.descripcion, ''CATEGORÍA INEXISTENTE EN EL CATÁLOGO IEEPO.'') Desc_categoria,  
--tp.TModelo_SE_id_Modelo_SE idModelo,  substring(tm.descripcion,3,len(tm.descripcion)) Modelo, case when tm.id_Modelo_SE = 7 then 1 else 3 end idCM, z.id_rel Zona, 0 id_emp, v.Id_Nodo, v.Clave CT, 3 NPago  
--from hplazas_concifed a   
--left join TTabulador_SE_Cat_Puesto tp on ltrim(tp.categoria) = a.CODIGO  
--left join TModelo_SE tm on tm.id_Modelo_SE = tp.TModelo_SE_id_Modelo_SE  
--left join VistaTablaLongitud v on v.clave = a.CCT  
--left join RCT_Tabulador_SE_Zona z on z.id_nodo = v.Id_Nodo  
--where ESTATUS <> ''C'' -- and CODIGO_PLAZA not in (select replace(plazaieepo,'' '','''') from plazaieepo where plazaieepo is not null)  
--  
  
  
select CATEGORIA, PLAZA, dbo.fechatoanioquincena(fecha) DESDE, ''999999'' HASTA,CT,   
case when   
case when plaza like ''%E%'' then substring(plaza,12,3) else substring(plaza,13,3) end = ''000'' then ''J'' else ''H''   
end TIPO_PLAZA, cast(idmodelo as varchar)+'' - ''+modelo MODELO, DESC_CATEGORIA,   
case when   
case when plaza like ''%E%'' then substring(plaza,12,3) else substring(plaza,13,3) end = ''000'' then 1 else 0   
end PLAZA_JORNADA,  
case when   
case when plaza like ''%E%'' then substring(plaza,12,3) else substring(plaza,13,3) end = ''000'' then 0 else cast(case when plaza like ''%E%'' then substring(plaza,12,3) else substring(plaza,13,3) end as int)/10  
end TOTAL_HORAS   
into #primerreportevacantes  
from #datosPlazasVacates WITH(NOLOCK)  
  
  
    select a.*, c.resultado, c.nombre,c.tipo   
    into #matrizParaCosteo  
    from valoresmatriz4 a WITH(NOLOCK)  
    inner join (  
      select max(fecha) Fecha, id_Tabulador_SE_Cat_Puesto, id_Tabulador_SE_CM, id_Tabulador_SE_Nivel_Pago, id_Tabulador_SE_Zona  
      from valoresmatriz4 a WITH(NOLOCK) where fecha <= @fechref group by   
      id_Tabulador_SE_Cat_Puesto, id_Tabulador_SE_CM, id_Tabulador_SE_Nivel_Pago, id_Tabulador_SE_Zona  
    ) b on a.fecha = b.Fecha and  
    a.id_Tabulador_SE_Cat_Puesto = b.id_Tabulador_SE_Cat_Puesto and a.id_Tabulador_SE_CM = b.id_Tabulador_SE_CM and   
    a.id_Tabulador_SE_Nivel_Pago = b.id_Tabulador_SE_Nivel_Pago and a.id_Tabulador_SE_Zona = b.id_Tabulador_SE_Zona  
    inner join conceptos c WITH(NOLOCK) on c.id_concepto = a.id_concepto  
    where a.id_concepto not in (1221,1222,1223,1224,1225,1225,1226,1227)  
      
    insert into #matrizParaCosteo  
    select a.*, c.resultado, c.nombre,c.tipo from ValoresMatriz8 a WITH(NOLOCK)  
    inner join (  
      select max(fecha) Fecha, id_Tabulador_SE_Cat_Puesto, id_Tabulador_SE_CM, id_Tabulador_SE_Nivel_Pago, id_Tabulador_SE_Zona  
      from ValoresMatriz8 WITH(NOLOCK) where fecha <= @fechref group by   
      id_Tabulador_SE_Cat_Puesto, id_Tabulador_SE_CM, id_Tabulador_SE_Nivel_Pago, id_Tabulador_SE_Zona  
    ) b on a.fecha = b.Fecha and  
    a.id_Tabulador_SE_Cat_Puesto = b.id_Tabulador_SE_Cat_Puesto and a.id_Tabulador_SE_CM = b.id_Tabulador_SE_CM and   
    a.id_Tabulador_SE_Nivel_Pago = b.id_Tabulador_SE_Nivel_Pago and a.id_Tabulador_SE_Zona = b.id_Tabulador_SE_Zona  
    inner join conceptos c WITH(NOLOCK) on c.id_concepto = a.id_concepto  
  
 CREATE NONCLUSTERED INDEX indexCosteo1 ON #matrizParaCosteo ([id_concepto]) INCLUDE ([id_Tabulador_SE_Cat_Puesto])  
      
    delete from #matrizParaCosteo where  id_Tabulador_SE_Cat_Puesto in (select id_Tabulador_SE_Cat_Puesto from TTabulador_SE_Cat_Puesto WITH(NOLOCK) where TModelo_SE_id_Modelo_SE  = 10)  
    and id_concepto in (1306,1701)  
      
  
    select a.*, b.id_concepto, b.resultado, b.Valor,  
    case when   
    case when plaza like ''%E%'' then substring(plaza,12,3) else substring(plaza,13,3) end = ''000'' then 0 else cast(case when plaza like ''%E%'' then substring(plaza,12,3) else substring(plaza,13,3) end as int)/10  
    end horas   
    into #datosPagoVacantes  
    from #datosPlazasVacates a WITH(NOLOCK)  
    left join #matrizParaCosteo b WITH(NOLOCK) on a.idCat = b.id_Tabulador_SE_Cat_Puesto and a.idCM= b.id_Tabulador_SE_CM and a.NPago = b.id_Tabulador_SE_Nivel_Pago   
    and a.Zona = b.id_Tabulador_SE_Zona  
      
  CREATE NONCLUSTERED INDEX indexDatosPagoVacantes1 ON #datosPagoVacantes ([id_concepto],[idModelo]) INCLUDE ([Plaza])  
 CREATE NONCLUSTERED INDEX indexDatosPagoVacantes2 ON #datosPagoVacantes ([Valor]) INCLUDE ([Categoria],[id_concepto])  
 CREATE NONCLUSTERED INDEX indexDatosPagoVacantes3 ON #datosPagoVacantes ([resultado],[Valor]) INCLUDE ([Plaza],[Categoria])  
 CREATE NONCLUSTERED INDEX indexDatosPagoVacantes4 ON #datosPagoVacantes ([horas]) INCLUDE ([Valor])  
 CREATE NONCLUSTERED INDEX indexDatosPagoVacantes5 ON #datosPagoVacantes ([idModelo],[id_concepto]) INCLUDE ([Plaza],[Categoria],[Valor])  
 CREATE NONCLUSTERED INDEX indexDatosPagoVacantes6 ON #datosPagoVacantes ([id_concepto],[idModelo]) INCLUDE ([Plaza],[Categoria],[resultado],[Valor],[horas])  
      
      
    insert into #datosPagoVacantes ( Plaza, Fecha, tipo, motivo, idCat, Categoria, Desc_categoria, idModelo, Modelo, idCM, Zona, id_emp,   
    id_nodo, CT, NPago, id_concepto, resultado, Valor, horas)  
    select Plaza, Fecha, tipo, motivo, idCat, Categoria, Desc_categoria, idModelo, Modelo, idCM, Zona, id_emp,   
    id_nodo, CT, NPago, 1558 id_concepto,''HT'' resultado, 143.74 Valor,  
    case when   
    case when plaza like ''%E%'' then substring(plaza,12,3) else substring(plaza,13,3) end = ''000'' then 0 else cast(case when plaza like ''%E%'' then substring(plaza,12,3) else substring(plaza,13,3) end as int)/10  
    end horas  
    from #datosPlazasVacates WITH(NOLOCK) where idmodelo in (5,6,2,9) and plaza not in (  
    select plaza from #datosPagoVacantes WITH(NOLOCK) where id_concepto = 1558 and idmodelo in (5,6,2,9)  
    )  
      
    update #datosPagoVacantes set valor = 3.59 where id_concepto = 1558 and horas <> 0 and idmodelo in (5,6,2,9)  
      
    insert into #datosPagoVacantes (Plaza, Fecha, tipo, motivo, idCat, Categoria, Desc_categoria, idModelo, Modelo, idCM, Zona, id_emp,   
    id_nodo, CT, NPago, id_concepto, resultado, Valor, horas)  
    select Plaza, Fecha, tipo, motivo, idCat, Categoria, Desc_categoria, idModelo, Modelo, idCM, Zona, id_emp,   
    id_nodo, CT, NPago, 1306 id_concepto,''38'' resultado, 1255 Valor,  
    case when   
    case when plaza like ''%E%'' then substring(plaza,12,3) else substring(plaza,13,3) end = ''000'' then 0 else cast(case when plaza like ''%E%'' then substring(plaza,12,3) else substring(plaza,13,3) end as int)/10  
    end horas  
    from #datosPlazasVacates WITH(NOLOCK) where idmodelo in (2,5,6) and plaza not in (  
    select plaza from #datosPagoVacantes WITH(NOLOCK) where id_concepto = 1306 and IdModelo in (2,5,6)  
    )  
  
    update #datosPagoVacantes set Valor = 23.28 where  idmodelo in (2,5,6) and id_concepto = 1306 and horas <> 0  
      
    update a set a.valor = b.valor from #datosPagoVacantes a inner join (  
      select * from #datosPagoVacantes where plaza in (  
        select plaza from (  
          select categoria, max(plaza) plaza from #datosPagoVacantes where Categoria in (  
            select distinct Categoria from #datosPagoVacantes where valor = 0  
          ) and resultado in (''01'',''07'') and valor > 0 group by categoria  
        ) a  
      )  
    ) b on a.Categoria = b.categoria and a.id_concepto = b.id_concepto  
    where a.valor = 0  
      
    update #datosPagoVacantes set valor = valor * horas where horas <> 0  
      
    delete #datosPagoVacantes where id_concepto in (1201,1202,1203)  
  
  
    select a.Plaza, a.Fecha, c.desde, c.hasta, a.tipo, a.motivo, a.idCat, a.Categoria, a.Desc_categoria, a.idModelo, a.Modelo, a.idCM, a.Zona, a.id_emp,   
    a.id_nodo, a.CT, a.NPago  
    , CONCEPTOS = stuff(  
    ( select '','' + b.resultado  
    from #datosPagoVacantes b WITH(NOLOCK)  
    where b.plaza = a.plaza order by b.resultado  
    for xml path(''''))  
    ,1,1,''''),  
    round(sum(a.valor),2) VALOR_MENSUAL , c.PLAZA_JORNADA, c.TOTAL_HORAS  
    , 12 MESES,  
    round(sum(a.valor),2) * 12 MONTO_TOTAL_MESES  
    into #datosCosteoTotalPeriodos  
    from #datosPagoVacantes a WITH(NOLOCK)  
    left join #primerreportevacantes c WITH(NOLOCK) on c.plaza = a.plaza  
    group by  a.Plaza, a.Fecha, a.tipo, a.motivo, a.idCat, a.Categoria, a.Desc_categoria, a.idModelo, a.Modelo, a.idCM, a.Zona, a.id_emp,   
    a.id_nodo, a.CT, a.NPago, c.PLAZA_JORNADA, c.TOTAL_HORAS, c.desde, c.hasta  
    ORDER BY a.IdModelo,a.Categoria  
  
alter table #datosCosteoTotalPeriodos add aguinaldo float default 0 with values  
alter table #datosCosteoTotalPeriodos add diaMaestro float default 0 with values  
alter table #datosCosteoTotalPeriodos add CN float default 0 with values  
alter table #datosCosteoTotalPeriodos add Aportacion float default 0 with values  
alter table #datosCosteoTotalPeriodos add primaVacacional float default 0 with values  
  
CREATE NONCLUSTERED INDEX indexdatosCosteoTotalPeriodos1 ON #datosCosteoTotalPeriodos ([Aportacion]) INCLUDE ([Plaza],[Categoria],[MESES])  
  
    UPDATE A SET a.aguinaldo =  round(a.meses * b.pesos,2)  
    from #datosCosteoTotalPeriodos a inner join (  
    select categoria, plaza, ((sum(valor)/30) * 90)/12 pesos   
    from #datosPagoVacantes a  
    where a.id_concepto in (1701,1300,1301,1302,1318,1319,1320,1321,1322,1331,1353,1354,1400,1401,1402,1403,1404,1359,1360,1361,1362,1363,1364,1454,1433,1545,1546,1358,1377,1477)  
    and a.IdModelo in (1,4)   
    group by categoria, plaza  
    ) b on b.categoria = a.CATEGORIA and b.plaza = a.PLAZA  
  
    UPDATE A SET a.aguinaldo = a.meses * b.pesos  
    from #datosCosteoTotalPeriodos a inner join (  
    select categoria, plaza, ((sum(valor)/30) * 90)/12 pesos from #datosPagoVacantes a  
    where a.id_concepto in (1701,1300,1353,1557)  
    and a.IdModelo in (3)   
    group by categoria, plaza  
    ) b on b.categoria = a.CATEGORIA and b.plaza = a.PLAZA  
  
    UPDATE A SET a.aguinaldo =  case when a.meses >= 6 then b.pesos else  a.meses * (b.pesos/12) end  
    from #datosCosteoTotalPeriodos a inner join (  
    select categoria, plaza, ((sum(valor)/30) * 90) pesos from #datosPagoVacantes a  
    where a.id_concepto in (1300,1328,1701)  
    and a.IdModelo in (5,6)   
    group by categoria, plaza  
    ) b on b.categoria = a.CATEGORIA and b.plaza = a.PLAZA  
  
    UPDATE A SET a.aguinaldo = case when a.meses >= 6 then b.pesos else  a.meses * (b.pesos/12) end   
    from #datosCosteoTotalPeriodos a inner join (  
    select categoria, plaza, ((sum(valor)/30) * 90) pesos from #datosPagoVacantes a  
    where a.id_concepto in (1701,1300,1557,1328)  
    and a.IdModelo in (2,9)   
    group by categoria, plaza  
    ) b on b.categoria = a.CATEGORIA and b.plaza = a.PLAZA  
  
    UPDATE A SET a.aguinaldo = case when a.meses >= 6 then b.pesos else  a.meses * (b.pesos/12) end  
    from #datosCosteoTotalPeriodos a inner join (  
    select categoria, plaza, ((sum(valor)/30) * 90) pesos from #datosPagoVacantes a  
    where a.id_concepto in (1510,1518,1582)  
    and a.IdModelo in (7)   
    group by categoria, plaza  
    ) b on b.categoria = a.CATEGORIA and b.plaza = a.PLAZA  
  
    UPDATE A SET a.aguinaldo = a.meses * b.pesos  
    from #datosCosteoTotalPeriodos a inner join (  
    select categoria, plaza, ((sum(valor)/30) * 90)/12 pesos from #datosPagoVacantes a  
    where a.id_concepto in (4000,4004)  
    and a.IdModelo in (10)   
    group by categoria, plaza  
    ) b on b.categoria = a.CATEGORIA and b.plaza = a.PLAZA  
  
    update a set a.diamaestro = b.pesos  
    from #datosCosteoTotalPeriodos a inner join (  
    select categoria, plaza, sum(valor)/2 pesos   
    from #datosPagoVacantes a  
    where a.id_concepto in (1701,1300,1318,1319,1320,1321,1322,1354,1353)  
    and a.IdModelo in ( 1 , 2 , 3 , 4 , 5 , 6 , 9 )  
    group by categoria, plaza  
    ) b on b.categoria = a.CATEGORIA and b.plaza = a.PLAZA  
  
    update a set a.diamaestro = b.pesos  
    from #datosCosteoTotalPeriodos a inner join (  
    select categoria, plaza, sum(valor)/2 pesos   
    from #datosPagoVacantes a  
    where a.id_concepto in (1510)  
    and a.IdModelo in ( 7)  
    group by categoria, plaza  
    ) b on b.categoria = a.CATEGORIA and b.plaza = a.PLAZA  
  
    update #datosCosteoTotalPeriodos set cn = 3356.00 where idmodelo in (1 , 4 )  
  
    update #datosCosteoTotalPeriodos set cn = 2209.20 where idmodelo in (2 , 3 , 9)  
  
    update a set a.aportacion = round(b.aportacion * meses,2)  
    from #datosCosteoTotalPeriodos a inner join (  
    select a.categoria, a.plaza, a.horas, a.resultado, valor, round(valor * 0.20145,2) aportacion  
    from #datosPagoVacantes a  
    where a.IdModelo in (1 , 2 , 3 , 4 , 5 , 6 , 9) and a.id_concepto in (1701)  
    group by a.categoria, a.plaza, a.horas, valor, a.resultado  
    ) b on b.plaza = a.plaza and b.categoria = a.categoria  
    where a.aportacion = 0  
  
    update a set a.aportacion = round(b.aportacion * meses,2)  
    from #datosCosteoTotalPeriodos a inner join (  
    select a.categoria, a.plaza, a.horas, a.resultado, valor, round(valor * .20145,2) aportacion  
    from #datosPagoVacantes a  
    where a.IdModelo in (7) and a.id_concepto in (1510)  
    group by a.categoria, a.plaza, a.horas, valor, a.resultado  
    ) b on b.plaza = a.plaza and b.categoria = a.categoria  
    where a.aportacion = 0  
  
    update a set a.aportacion = round(b.aportacion * meses,2)  
    from #datosCosteoTotalPeriodos a inner join (  
    select a.categoria, a.plaza, a.horas, a.resultado, valor, round(valor * .20145,2) aportacion  
    from #datosPagoVacantes a  
    where a.IdModelo in ( 10) and a.id_concepto in (4000)  
    group by a.categoria, a.plaza, a.horas, valor, a.resultado  
    ) b on b.plaza = a.plaza and b.categoria = a.categoria  
    where a.aportacion = 0  
  
    UPDATE A SET A.PRIMAVACACIONAL = B.PESOS  
    from #datosCosteoTotalPeriodos a inner join (  
    select categoria, plaza, (round((sum(valor)/30) * 10,2)) pesos   
    from #datosPagoVacantes a  
    where a.id_concepto in (4000,4004)  
    and a.IdModelo in (10)   
    group by categoria, plaza  
    ) b on b.categoria = a.CATEGORIA and b.plaza = a.PLAZA  
  
    UPDATE A SET A.PRIMAVACACIONAL = B.PESOS  
    from #datosCosteoTotalPeriodos a inner join (  
    select categoria, plaza, (round((sum(valor)/30) * 21,2)) pesos from #datosPagoVacantes a  
    where a.id_concepto in (1510,1518)  
    and a.IdModelo in (7) and a.categoria  like ''%E%''  
    group by categoria, plaza  
    ) b on b.categoria = a.CATEGORIA and b.plaza = a.PLAZA  
  
    UPDATE A SET A.PRIMAVACACIONAL = B.PESOS  
    from #datosCosteoTotalPeriodos a inner join (  
    select categoria, plaza, (round((sum(valor)/30) * 24,2)) pesos from #datosPagoVacantes a  
    where a.id_concepto in (1701,1300,1328,1557)  
    and a.IdModelo in (2,9)  
    group by categoria, plaza  
    ) b on b.categoria = a.CATEGORIA and b.plaza = a.PLAZA  
  
    UPDATE A SET A.PRIMAVACACIONAL = B.PESOS  
    from #datosCosteoTotalPeriodos a inner join (  
    select categoria, plaza, (round((sum(valor)/30) * 24,2)) pesos from #datosPagoVacantes a  
    where a.id_concepto in (1701,1300,1307,1328)  
    and a.IdModelo in (5,6)  
    group by categoria, plaza  
    ) b on b.categoria = a.CATEGORIA and b.plaza = a.PLAZA  
  
    UPDATE A SET A.PRIMAVACACIONAL = B.PESOS  
    from #datosCosteoTotalPeriodos a inner join (  
    select categoria, plaza, (round((sum(valor)/30) * 5,2)) * 2 pesos from #datosPagoVacantes a  
    where a.id_concepto in (1701,1557,1300,1353)  
    and a.IdModelo in (3)  
    group by categoria, plaza  
    ) b on b.categoria = a.CATEGORIA and b.plaza = a.PLAZA  
  
    UPDATE A SET A.PRIMAVACACIONAL = B.PESOS  
    from #datosCosteoTotalPeriodos a inner join (  
    select categoria, plaza, (round((sum(valor)/30) * 5,2)) * 2 pesos from #datosPagoVacantes a  
    where a.id_concepto in (1701,1300,1318,1319,1320,1321,1322,1354,1400,1401,1402,1403,1404,1359,1360,1361,1362,1363,1364,1454,1433,1545,1546,1377,1358,1477,1331,1378)  
    and a.IdModelo in ( 1 , 4 )  
    group by categoria, plaza  
    ) b on b.categoria = a.CATEGORIA and b.plaza = a.PLAZA  
  
    if (@tipoReporte = 0)  
      begin  
        select MODELO, CATEGORIA, DESC_CATEGORIA, ROUND(SUM(VALOR_MENSUAL),2) VALOR_MENSUAL, SUM(PLAZA_JORNADA) PLAZAS_JORNADA, SUM(TOTAL_HORAS) TOTAL_HORAS,  
        SUM(MONTO_TOTAL_MESES) MONTO_TOTAL_MESES, SUM(AGUINALDO) AGUINALDO, SUM(diamaestro) DIA_MAESTRO, SUM(CN) CN, SUM(APORTACION) APORTACION, SUM(primavacacional) PRIMA_VACACIONAL,  
        ROUND(SUM(MONTO_TOTAL_MESES) + SUM(AGUINALDO) + SUM(diamaestro) + SUM(CN) + SUM(APORTACION) + SUM(primavacacional),2) TOTAL  
        from #datosCosteoTotalPeriodos  WITH(NOLOCK)  
        GROUP BY IDMODELO, MODELO, CATEGORIA, DESC_CATEGORIA  
      end  
    else  
      begin  
        select CATEGORIA, PLAZA, DESDE, HASTA, CT, case when PLAZA_JORNADA = 1 then ''J'' else ''H'' end TIPO_PLAZA, MODELO, desc_categoria DESC_CATEGORIA, CONCEPTOS,  
        VALOR_MENSUAL, PLAZA_JORNADA, TOTAL_HORAS, MESES, MONTO_TOTAL_MESES, AGUINALDO, diamaestro DIA_MAESTRO, CN, APORTACION, primavacacional PRIMA_VACACIONAL, MONTO_TOTAL_MESES+aguinaldo+diamaestro+cn+aportacion+primavacacional TOTAL  
        from #datosCosteoTotalPeriodos WITH(NOLOCK)  
        ORDER BY idModelo, Categoria, PLAZA   
      end'
GO

GO
PRINT N'Creating [dbo].[spf_Recalculo_DR_Prejub]'
GO
IF OBJECT_ID(N'[dbo].[spf_Recalculo_DR_Prejub]', 'P') IS NULL
EXEC sp_executesql N'CREATE procedure [dbo].[spf_Recalculo_DR_Prejub]                          
(                          
  @idDocumento as Int,                          
  @idEmpleado as int,                           
  @idPlaza as int,                          
  @desde as DateTime, -- desde del DR          
  @hastaCancelar as varchar(6),                                  
  @hasta as DateTime, -- hasta del DR              
  @accion as bit                          
)                          
as                          
Begin                           
   declare @idDocumento_loc as int =@idDocumento
   declare @idEmpleado_loc as int =@idEmpleado
   declare @idPlaza_loc as int =@idPlaza
   declare @desde_loc as Datetime=@desde
   declare @hastaCancelar_loc as varchar(6)=@hastaCancelar
   declare @hasta_loc as Datetime=@hasta
   declare @accion_loc as bit=@accion
   
   declare @Año as int                          
   declare @Id_Cia as Int                          
   declare @id_Periodo_Transfer as int                          
   declare @rfc as varchar(13)                          
   declare @id_calculo as int                          
   declare @plazaieepo as varchar(21)                          
   declare @fechaFinCanc as datetime                          
   declare @desdepagar as int                          
   declare @desdep as datetime                          
   declare @sql as varchar(max)                          
   declare @tipo as varchar(5)                          
   declare @motivo as varchar(5)                          
   declare @idDetalle as int     
   declare @desdeint as int    
   declare @hastaint as int    
                             
   set @Id_Cia = (select id_cia from Empleados where Id_Emp = CAST (@idEmpleado_loc as varchar(max)))                          
   set @Año = YEAR(GETDATE())                          
   set @id_Periodo_Transfer = (select Id_Periodo  from FUP_Informacion_Documentos where Id_Documento = CAST(@idDocumento_loc as varchar(10)) )                          
   set @rfc = (select rfc from Empleados where Id_Emp = CAST(@idEmpleado_loc as varchar(10)))                          
   set @plazaieepo = (select PlazaIEEPO from PlazaIEEPO where Id_plaza = CAST(@idPlaza_loc as varchar(10)))                          
   set @id_calculo = (select max(id_calculo)+ 1  from Recalculo_Calculo)                          
   set @fechaFinCanc = cast((select dbo.anioQuincenaToFecha(@hastaCancelar_loc,1)) as datetime)                  
   set @desdepagar = (CAST(@hastaCancelar_loc as int)  + 1)                          
   set @desdep = (select dbo.anioQuincenaToFecha(@desdepagar,0))                       
   set @idDetalle = (select id_detalle from FUP_Documento_Detalle where Id_Documento = @idDocumento_loc)                         
   set @desdeint =(select dbo.fechaToAnioQuincena(@desde_loc))       
   set @hastaint =(select dbo.fechaToAnioQuincena(@hasta_loc))     
       
   set @tipo = (select hs.id_rel  tipo from (                          
    select MAX(fecha) fecha, Id_plaza   from HstatusPlaza  where Id_plaza = @idPlaza_loc  group by Id_plaza                           
      ) t1 inner join HstatusPlaza hs on t1.fecha = hs.Fecha and t1.Id_plaza = hs.Id_plaza )                          
                                
   set @motivo = (select hs.id_rel motivo   from (                          
      select MAX(fecha) fecha, Id_plaza   from HTipoPlaza   where Id_plaza = @idPlaza_loc   group by Id_plaza                           
      ) t1 inner join HTipoPlaza hs on t1.fecha = hs.Fecha and t1.Id_plaza = hs.Id_plaza )                          
                          
   if @accion_loc = 0                           
   begin                                   
                                     
     insert into Recalculo_Calculo (Id_Calculo,Id_Cia,Fecha_CorteMov,Año,Descripcion,Activo,CalculoTotal,Id_Periodo_Transfer,                          
            NumProrrateo,ExcluirCancelados,Calculo_Original,id_recalculo_tipo,id_Formula_Filtro,Id_Detalle,id_statusplaza_LR,id_tipoplaza_LR)                          
     values(                          
      @id_calculo,                          
      @Id_Cia, GETDATE(), @Año,                           
      ''RFUP DR Periodo Cancelar,''+ @tipo +''-'' +@motivo+ '',id_emp ''+cast(@idEmpleado_loc as varchar(10)) +'',id_plaza '' +cast(@idPlaza_loc as varchar(10)) +'',efectos:['' +cast(@desdeint as varchar(10)) +''-''+@hastaCancelar_loc+'']''+'' con RFC: ''+ @rfc+'' y plaza: ''+@plazaieepo+''.'',          
      1,0,@id_Periodo_Transfer,0,0,0,9,0,@idDetalle,@tipo,@motivo);                               
                                
   insert into recalculo_periodos (Id_Calculo, Id_Periodo)                              
   Select top 24  @id_calculo, Id_Periodo From CalenNomina Where fechaini >= @desde_loc                           
   and fechafin <= @fechaFinCanc                          
   and parcial = 0 and actualizado = 1 and id_cia = @Id_Cia;                       
                             
   insert into Recalculo_EmpleadosPeriodos (id_recalculo,id_periodo,id_emp,id_plazaCalcular,id_plazaComparar)                          
   Select top 24  @id_calculo, Id_Periodo, @idEmpleado_loc, @idPlaza_loc, @idPlaza_loc  From CalenNomina Where fechaini >= @desde_loc                           
   and fechafin <= @fechaFinCanc                          
   and parcial = 0 and actualizado = 1 and id_cia = @Id_Cia;                          
                             
     -- Insertamos el segundo retro------------------------------------------------------------                          
     set @id_calculo = 0                          
     set @id_calculo = (select max(id_calculo)+1  from Recalculo_Calculo)                          
                               
     insert into Recalculo_Calculo (Id_Calculo,Id_Cia,Fecha_CorteMov,Año,Descripcion,Activo,CalculoTotal,Id_Periodo_Transfer,                          
            NumProrrateo,ExcluirCancelados,Calculo_Original,id_recalculo_tipo,id_Formula_Filtro,Id_Detalle,id_statusplaza_LR,id_tipoplaza_LR)                          
     values(                          
      @id_calculo,                          
      @Id_Cia, GETDATE(), @Año,                           
      ''RFUP DR Periodo a pagar,''+ @tipo +''-'' +@motivo+ '',id_emp ''+cast(@idEmpleado_loc as varchar(10)) +'',id_plaza ''+cast(@idPlaza_loc as varchar(10)) +'',efectos:[''+cast(@desdepagar as varchar(10)) +''-''+cast(@hastaint as varchar(10))+'']''+'' con RFC: ''+ @rfc+'' y plaza: ''+@plazaieepo+''.'',                          
      1,0,@id_Periodo_Transfer,0,0,0,9,0,@idDetalle,@tipo,@motivo);                          
                                
   insert into recalculo_periodos (Id_Calculo, Id_Periodo)                              
   Select top 24  @id_calculo, Id_Periodo From CalenNomina Where fechaini >= @desdep                           
   and fechafin <= @hasta_loc                          
   and parcial = 0 and actualizado = 1 and id_cia = @Id_Cia;                          
                             
   insert into Recalculo_EmpleadosPeriodos (id_recalculo,id_periodo,id_emp,id_plazaCalcular,id_plazaComparar)                          
   Select top 24  @id_calculo, Id_Periodo, @idEmpleado_loc, @idPlaza_loc, @idPlaza_loc  From CalenNomina Where fechaini >= @desdep                         
   and fechafin <= @hasta_loc                          
   and parcial = 0 and actualizado = 1 and id_cia = @Id_Cia;                          
                         
                          
                          
 end                           
 Else -- borramos si algo truena                          
 Begin                          
  delete from recalculo_periodos where Id_Calculo in (select Id_Calculo from Recalculo_Calculo where Id_Detalle  = @idDetalle  )                           
  delete from Recalculo_EmpleadosPeriodos where id_recalculo in (select Id_Calculo from Recalculo_Calculo where Id_Detalle  = @idDetalle) and id_plazaCalcular = @idPlaza_loc and id_emp = @idEmpleado_loc                               
     delete from Recalculo_Calculo where Id_Detalle = @idDetalle                           
                            
 End                          
end'
GO

GO
PRINT N'Creating [dbo].[transfiereHastaHistpagos]'
GO
IF OBJECT_ID(N'[dbo].[transfiereHastaHistpagos]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		Noe Ramirez Ramos
-- Create date: 10/10/2013
-- Description: Transfiere el hasta de deducsfijas a histpagos
-- =============================================
CREATE PROCEDURE [dbo].[transfiereHastaHistpagos]
@idperiodo int
WITH EXEC AS CALLER
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
update h set h.hasta = dbo.fechaToAnioQuincena(d.FechaHasta) 
from (
  select * from DeducsFijas where status in (''A'',''C'') 
  and FechaHasta is not null and id_plaza = 0 and Id_Emp in (select Id_Emp from Empleados where Id_Cia = 2)
) d 
inner join HistPagos h on h.id_concepto = d.id_concepto and d.Id_Emp = h.Id_Emp
where d.status in (''A'',''C'') and d.FechaHasta is not null and h.Id_Periodo = @idperiodo
and h.Hasta <> dbo.fechaToAnioQuincena(d.FechaHasta)

update h set h.hasta = dbo.fechaToAnioQuincena(d.FechaHasta)
from DeducsFijas d 
inner join HistPagos h on h.id_concepto = d.id_concepto and d.Id_Emp = h.Id_Emp and d.id_plaza = h.id_plaza and h.Pesos = d.Descuento
where d.status in (''A'',''C'') and h.Id_Periodo = @idperiodo and d.id_emp in (select Id_Emp from Empleados where Id_Cia = 2)
and h.Hasta <> dbo.fechaToAnioQuincena(d.FechaHasta)

update histpagos set hasta = dep.dbo.addqna(dep.dbo.addqna(hasta,1, ''514m3l4p3l4'') ,-1, ''514m3l4p3l4'') where SUBSTRING(hasta,5,2)=''00''


END'
GO

GO
PRINT N'Creating [dbo].[spf_BorraConceptoAB]'
GO
IF OBJECT_ID(N'[dbo].[spf_BorraConceptoAB]', 'P') IS NULL
EXEC sp_executesql N'create procedure [dbo].[spf_BorraConceptoAB]                    
(                      
 @id_detalle  as int,
 @fechamov   as date,                    
 @accion as bit                      
) 
with recompile
as
begin
declare @id_detalle_loc as int=@id_detalle
declare @id_documento as int
declare @id_usuario as int
declare @id_emp as int
declare @noplaza as int
declare @fechaini as datetime
declare @accion_loc as int=@accion
declare @fechamov_loc as date=@fechamov


set @id_documento=(select id_documento from FUP_Documento_Detalle where Id_Detalle=@id_detalle_loc)
set @id_usuario=(select id_usuario from fup_documentos where Id_Documento=@id_documento)
set @id_emp= (select id_emp from fup_documentos where Id_Documento=@id_documento)
set @noplaza=(select p.num_plaza from plazas p
              inner join fup_documento_detalle fdd on p.Id_plaza=fdd.Id_Plaza
              where fdd.id_detalle=@id_detalle_loc)
set @fechaini=(select fechaini from fup_documento_detalle where id_detalle=@id_detalle_loc)              
              
if (@accion_loc=0)
begin
if (exists(select * from TTEmpleado_Plaza_Conc where Id_Emp=@id_emp and NoPlaza=@noplaza and noconcepto=1551 and fecha<=@fechaini))
begin

insert into ttempleado_plaza_conc_bajas (Id_TEmpleado_Plaza_Conc,consecutivo,descripcion,NoPlaza,NoConcepto,Monto
                                         ,FechaFin,Tvigencia_id_vigencia,NoEmp_rel,usuario,Movimiento,Fecha,Id_Emp
                                         ,TTipo_Captura_id_Tipo_Captura,id_periodopago,Id_Documento,Id_usuario_Movimiento
                                         ,Fecha_Movimiento) 
SELECT Id_TEmpleado_Plaza_Conc,consecutivo,descripcion,NoPlaza,NoConcepto,Monto,FechaFin,Tvigencia_id_vigencia,NoEmp_rel
       ,usuario,Movimiento,Fecha,Id_Emp,TTipo_Captura_id_Tipo_Captura,id_periodopago,Id_Documento,@id_usuario as Id_usuario_Movimiento 
       ,@fechamov_loc AS Fecha_Movimiento
       FROM TTEmpleado_Plaza_Conc where Id_Emp=@id_emp and NoPlaza=@noplaza and noconcepto=1551

delete TTEmpleado_Plaza_Conc where Id_Emp=@id_emp and NoPlaza=@noplaza and noconcepto=1551

end
end

else
    begin 
         insert into ttempleado_plaza_conc(consecutivo,descripcion,NoPlaza,NoConcepto,Monto            
                                         ,FechaFin,Tvigencia_id_vigencia,NoEmp_rel,usuario,Movimiento,Fecha,Id_Emp            
                                         ,TTipo_Captura_id_Tipo_Captura,id_periodopago,Id_Documento            
                                         )            
                                  SELECT consecutivo,descripcion,NoPlaza,NoConcepto,Monto            
                                         ,FechaFin,Tvigencia_id_vigencia,NoEmp_rel,usuario,Movimiento,Fecha,Id_Emp            
                                         ,TTipo_Captura_id_Tipo_Captura,id_periodopago,Id_Documento            
                                  from ttempleado_plaza_conc_bajas where Id_Emp=@id_emp and NoPlaza=@noplaza 
                                  and noconcepto=1551 and fecha_movimiento>=@fechamov_loc
                                  
         delete TTEmpleado_Plaza_Conc_bajas where Id_Emp=@id_emp and NoPlaza=@noplaza and noconcepto=1551
     
    end

end '
GO

GO
PRINT N'Creating [dbo].[NPC_Historia_Plazas_Empleado]'
GO
IF OBJECT_ID(N'[dbo].[NPC_Historia_Plazas_Empleado]', 'P') IS NULL
EXEC sp_executesql N'-- ==========================================================================================
-- Author:		Noemi Eunice Domínguez Rojas
-- Create date: 2018-09-05 08:18:27.010
-- Description:	obtener la historia de las plazas del empleado por idEmp,idPlaza o idEmp idPlaza
--				El parametro debe estar separado por comas sin espacios en blanco, son 3 opciones
--
-- idEmp IS NULL   and  idPlaza con valor.		opción 1 : obtendrá la historia de la plaza con todos sus empleados.
-- idPlaza IS NULL and    idEmp con valor.		opción 2 : obtendrá la historia de la(s) plaza(s) de los idEmp.
-- idEmp con valor - idPlaza con valor.			opción 3 : obtendrá la historia de la plaza con el empleado solicitado.
--
-- ==========================================================================================
CREATE PROCEDURE [dbo].[NPC_Historia_Plazas_Empleado]--<Procedure_Name, sysname, ProcedureName> 	
	@idEmp VARCHAR(100),
	@idPlaza VARCHAR(100)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    SELECT hsp.Id_plaza, hsp.Id_TipoMovPlazas,hsp.Fecha, hsp.Id_User, hsp.Movimiento 
	INTO --drop table
	#Hstatplaz
	FROM Hplazas hsp WITH(NOLOCK)
	INNER JOIN PlazaEmpleados pe WITH(NOLOCK) ON  pe.id_plaza=hsp.id_plaza   AND hsp.Id_TipoMovPlazas = 2 

 
	SELECT hsp.Id_plaza, hsp.Id_TipoMovPlazas, hsp.Fecha, hsp.Id_User, hsp.Movimiento 
	INTO --drop table
	#Hstatplaz_emp
	FROM Empalme_HPlazas hsp WITH(NOLOCK) 
	INNER JOIN Empalme_PlazaEmpleados pe WITH(NOLOCK) ON  pe.id_plaza=hsp.id_plaza AND hsp.Id_TipoMovPlazas = 2 

	SELECT Id_Emp,Id_plaza,Fecha,Id_User,Movimiento,id_nodo,Documentos,Id,id_plazaanterior,esHistoria,desliguePlaza,tipoHistoria 
	INTO  --drop table
	#plazasE
	FROM PlazaEmpleados WITH(NOLOCK) 

	SELECT Id_Emp,Id_plaza,Fecha,Id_User,Movimiento,id_nodo,Documentos,Id,id_plazaanterior,esHistoria,desliguePlaza,tipoHistoria 
	INTO  --drop table
	#plazasE_Emp
	FROM Empalme_PlazaEmpleados WITH(NOLOCK) 


	SELECT DISTINCT tabla.id_emp, tabla.id_plaza, tabla.id_nodo, DESDE,HASTA,quincenaDesde,quincenaHasta 
	INTO #tabla 
	FROM ( 
		SELECT pe.id_emp AS id_emp, pe.id_plaza, pe.id_nodo ,pe.fecha AS desde , /*hist.hasta*/ CASE WHEN hist.hasta is null THEN ''9999-12-01 00:00:00.000'' ELSE hist.hasta END hasta, 
		cast( year(pe.fecha ) AS VARCHAR) + Right(''00'' + Cast(CASE WHEN(DAY(pe.fecha )>15)THEN MONTH(pe.fecha )*2 ELSE (MONTH(pe.fecha )*2)-1 END AS VARCHAR(2)),2) AS quincenaDesde,  
		CASE WHEN hist.hasta IS NULL OR year(hist.hasta) = 9999 THEN ''999999'' ELSE CAST( YEAR(hist.hasta-1) AS VARCHAR) + RIGHT(''00'' + CAST(CASE WHEN(DAY(hist.hasta-1)>15)THEN MONTH(hist.hasta-1)*2 ELSE (MONTH(hist.hasta-1)*2)-1 END AS VARCHAR(2)),2) END AS quincenaHasta 
		FROM #plazasE pe WITH(NOLOCK) 
		Left Join (
			SELECT p.id_plaza, p.fecha, MIN(h.fecha) AS hasta  
			FROM #plazasE p WITH(NOLOCK)  
			INNER JOIN #plazasE h WITH(NOLOCK)
			ON p.id_plaza  = h.id_plaza 
			WHERE p.fecha < h.fecha 
			GROUP BY  p.id_plaza, p.Fecha 
		) hist  ON pe.id_plaza = hist.id_plaza  AND pe.fecha = hist.fecha 
	) Tabla 
	join ( 
		SELECT p.Id_Emp,p.id_plaza,documentos  
		FROM ( 
				SELECT Id_Emp,id_plaza,fecha,documentos
				FROM  PlazaEmpleados WITH(NOLOCK)  
		) p join  ( 
				SELECT Id_Emp, id_plaza,MAX(Fecha)fecha  
				FROM PlazaEmpleados WITH(NOLOCK)  
				GROUP BY Id_Emp, id_plaza  
		) pf ON pf.fecha= p.fecha and p.id_plaza=pf.id_plaza and p.id_emp=pf.id_emp 
		GROUP BY p.Id_Emp, p.id_plaza,Documentos 
	) tabla2  
	ON tabla2.Id_Emp = tabla.Id_Emp and tabla.Id_plaza = tabla2.Id_plaza 


	SELECT DISTINCT tabla.id_emp, tabla.id_plaza, tabla.id_nodo, DESDE,HASTA,quincenaDesde,quincenaHasta 
	INTO #tabla_emp
	FROM ( 
		SELECT pe.id_emp AS id_emp, pe.id_plaza, pe.id_nodo ,pe.fecha AS desde , /*hist.hasta*/ CASE WHEN hist.hasta is null THEN ''9999-12-01 00:00:00.000'' ELSE hist.hasta END hasta, 
		CAST( YEAR(pe.fecha ) AS VARCHAR) + Right(''00'' + CAST(CASE WHEN(DAY(pe.fecha )>15)THEN MONTH(pe.fecha )*2 ELSE (MONTH(pe.fecha )*2)-1 END AS VARCHAR(2)),2) as quincenaDesde,  
		CASE WHEN hist.hasta IS NULL OR YEAR(hist.hasta) = 9999 THEN ''999999'' ELSE CAST( YEAR (hist.hasta-1) AS VARCHAR) + Right(''00'' + CAST(CASE WHEN(DAY(hist.hasta-1)>15)THEN MONTH(hist.hasta-1)*2 ELSE (MONTH(hist.hasta-1)*2)-1 END AS VARCHAR(2)),2) END AS quincenaHasta 
		FROM #plazasE_Emp pe  WITH(NOLOCK)
		Left Join (  
			SELECT p.id_plaza, p.fecha, MIN(h.fecha) AS hasta  
			FROM #plazasE_Emp p  WITH(NOLOCK)
			INNER JOIN #plazasE_Emp h WITH(NOLOCK)
			ON p.id_plaza  = h.id_plaza 
			Where p.fecha < h.fecha 
			GROUP BY  p.id_plaza, p.Fecha 
		) hist  ON pe.id_plaza = hist.id_plaza  AND pe.fecha = hist.fecha 
	) Tabla 
	join ( 
		SELECT p.Id_Emp,p.id_plaza,documentos  
		FROM (
			SELECT Id_Emp,id_plaza,fecha,documentos
			FROM empalme_PlazaEmpleados WITH(NOLOCK)
		) p join  ( 
			SELECT Id_Emp, id_plaza,max(Fecha)fecha 
			FROM empalme_PlazaEmpleados WITH(NOLOCK) 
			GROUP BY Id_Emp, id_plaza 
		) pf on pf.fecha= p.fecha and p.id_plaza=pf.id_plaza and p.id_emp=pf.id_emp 
		GROUP BY p.Id_Emp, p.id_plaza,Documentos 
	) tabla2  
	ON tabla2.Id_Emp = tabla.Id_Emp and tabla.Id_plaza = tabla2.Id_plaza 


	SELECT ROW_NUMBER() OVER( ORDER BY ID_PLAZA DESC)np,id_plaza 
	INTO -- drop table 
	#plazas 
	FROM ( 
		SELECT DISTINCT id_plaza FROM #tabla
		UNION ALL 
		SELECT DISTINCT id_plaza FROM #tabla_emp --where id_plaza=60263
	)a 


	SELECT ROW_NUMBER() OVER( PARTITION BY id_plaza ORDER BY ID_PLAZA,QUINCENADESDE DESC) AS n,*,0 cambio  
	INTO -- drop table 
	#dh
	FROM (
		SELECT *,''''tabla FROM #tabla 
		UNION ALL 
		SELECT *,''Empalme''tabla FROM #tabla_emp 
	)a

	
	SELECT #dh.*,p.PlazaIEEPO,v.Clave,status,motivo-- ,a.*
	INTO #informacionPlaza
	FROM #dh 
	LEFT JOIN
	(
		SELECT Id_plaza,fecha fec,cast( year(fecha ) as varchar) + Right(''00'' + Cast(case when(day(fecha )>15)then month(fecha )*2 else (month(fecha )*2)-1 end as Varchar(2)),2) Fecha,Id_User,max(status)status,max(motivo)motivo,max(id)id
		FROM (
			SELECT Id_plaza,Fecha,Id_User,Movimiento,CASE WHEN id_tipoMovPlazas=2 THEN Valor_IdCampo END STATUS, 
			CASE WHEN id_tipoMovPlazas=1 then Valor_IdCampo end motivo,id
			FROM hplazas h  --order by Id_plaza,fecha
			UNION ALL
			SELECT Id_plaza,Fecha,Id_User,Movimiento,CASE WHEN id_tipoMovPlazas=2 THEN Valor_IdCampo END STATUS, 
			CASE WHEN id_tipoMovPlazas=1 THEN Valor_IdCampo END motivo,id
			FROM empalme_hplazas h
		)a
		GROUP BY Id_plaza,Fecha,Id_User
	)a
	ON #dh.id_plaza=a.Id_plaza  and #dh.desde=a.Fec
	left join PlazaIEEPO p ON p.Id_plaza=#dh.Id_plaza
	left join VistaTablaLongitud28 v ON v.Id_Nodo=#dh.id_nodo	
	ORDER BY #dh.ID_PLAZA,n

  IF @idEmp ='''' BEGIN
		SELECT * FROM #informacionPlaza
		WHERE Id_plaza in (SELECT RTRIM(LTRIM([value])) FROM STRING_SPLIT(@idPlaza,'',''))	
  END
  ELSE IF @idPlaza ='''' BEGIN
		SELECT * FROM #informacionPlaza
		WHERE Id_emp in (SELECT RTRIM(LTRIM([value])) FROM STRING_SPLIT(@idEmp,'',''))
  END
  ELSE BEGIN
	  SELECT * FROM #informacionPlaza
	  WHERE Id_plaza in (SELECT RTRIM(LTRIM([value])) FROM STRING_SPLIT(@idPlaza,'',''))	
	  and Id_emp in (SELECT RTRIM(LTRIM([value])) FROM STRING_SPLIT(@idEmp,'',''))
	  --END
  END
END
'
GO

GO
PRINT N'Creating [dbo].[spf_layout_spd]'
GO
IF OBJECT_ID(N'[dbo].[spf_layout_spd]', 'P') IS NULL
EXEC sp_executesql N'CREATE procedure [dbo].[spf_layout_spd]                  
(                                                      
@periodo as varchar(6)                                                    
)  
WITH RECOMPILE                   
as                                                      
Begin                                  
--declare @periodo as varchar(20)=''201720''  
declare @anio as varchar(4)=substring(@periodo,1,4)
declare @quincena as varchar(2)=substring(@periodo,5,2)
declare @id_periodo as int=(select id_periodo from calennomina where año=@anio and numero=@quincena and id_cia=2 and parcial=0)
--print @id_periodo

select ''20'' as cve_entidad,cast(folio_federal as varchar(100))as folio_federal,e.curp,
vn.id_niveleducativo_spd as cve_nivel_educativo,
'''' as cve_subsistema,
''Depende del nivel educativo'' as cve_tipo_servicio,''de donde se obtiene de archivos evaluacion'' as cve_modalidad,	
''solo lo tiene el archivo de evauacion ordinario 2017'' as cve_figura,
''1'' as cve_tipo_de_sostenimiento,''1'' as cve_region,
''De donde tomar el dato en archivos evaluacion'' as cve_funcion,
''1'' as cve_tipo_de_concurso,
''de donde obtener el dato, no coinciden con catalogo'' cve_tipo_evaluacion,
''de donde obtener el dato'' as cve_campo_disciplinar,
a.grupo_desempeño,a.prelacion as Ordendepre,
replace(pi.plazaieepo,'' '','''') as codigo_plaza,
tt.categoria as cve_categoria,	
tt.descripcion as descripcion_categoria,
tipo_plaza=case when vn.horas=20 then 5
           when vn.horas=30 then 4
		   when vn.horas=40 then 3
		   when vn.horas=0 then 1
		   else 2					 
           end,
case when cast(vn.horas as varchar(5))=''20'' then ''''
           when cast(vn.horas as varchar(5))=''30'' then ''''
		   when cast(vn.horas as varchar(5))=''40'' then ''''
		   when cast(vn.horas as varchar(5))=''0'' then ''''
		   else cast(vn.horas as varchar(5))				 
           end as horas,
'''' as cve_asignatura_ms,
''de donde obtener el dato que no sea texto'' as cve_asignatura_basica,
case when cast(fmm.clave as varchar(5))=''95'' then cast(1 as varchar(5))
           when cast(fmm.clave as varchar(5))=''10'' then cast(1 as varchar(5))
		   when cast(fmm.clave as varchar(5))=''20'' then cast(2 as varchar(5))
		   else ''''
           end as tipo_vacante,
case when cast (fmm.clave as varchar(5)) in (''40'',''41'',''42'',''43'',''44'',''45'',''46'',''47'',''48'',''49'',''51'',''52'',''53'',''55'',''56'',''57'')
then cast(fmm.clave as varchar(5)) else '''' end as cve_motivo_licencia,
convert(varchar(13),fdd.fechaini,111) as fecha_inicio,
case when cast(fmm.clave as varchar(5)) in (''20'') then convert(varchar(13),fdd.fechafin,111)
		   else ''''
           end as fecha_fin,
tz.Zona as zona_economica,
''donde sacamos el dato o se obtiene por el tipo de nombremiento'' as cve_proceso_destino_vacancia,
d.CCT as cct_analitico_plazas,
v.Clave as cct_nomina,
fid.centro_trabajo as cct_necesidad_educativa
from fup_documentos fd with(nolock)
inner join spd_evaluacion_ingreso a with(nolock) on fd.id_emp=a.id_emp           
inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
left join hplazas_concifed_230217 d with(nolock)on replace(pi.plazaieepo,'' '','''')=d.CODIGO_PLAZA
inner join view_plaza_nivel vn with(nolock) on pi.id_plaza=vn.id_plaza
inner join TTabulador_SE_Cat_Puesto tt with(nolock)on pi.Categoria=case when len(tt.categoria)=7 then
substring(tt.categoria,2,10) else tt.categoria end
left join [dbo].[spd_tipo_plaza] t with(nolock) on pi.horas=t.horas
inner join hTabulador_SE_Zona ht with(nolock) on pi.Id_plaza=ht.id_plaza
inner join (
select max(fecha) as fecha,id_plaza from hTabulador_SE_Zona with(nolock) where fecha<>''99991231 23:59''
group by id_plaza
) htz on ht.id_plaza=htz.id_plaza and ht.fecha=htz.fecha
inner join tTabulador_SE_Zona tz with(nolock) on ht.id_rel=tz.id_Tabulador_SE_Zona
inner join plazaempleados pe with(nolock) on fdd.id_plaza=pe.id_plaza
inner join (
select max(pe.fecha) as fecha,pe.id_plaza from  spd_evaluacion_ingreso d 
inner join fup_documentos fd with(nolock) on d.id_emp=fd.id_emp
inner join fup_documento_detalle fdd with(nolock) on fd.id_documento=fdd.id_documento
inner join fup_informacion_documentos fid with(nolock) on fd.id_documento=fid.id_documento
inner join plazaempleados pe with(nolock) on fdd.id_plaza=pe.id_plaza
where pe.id_emp=0 and pe.fecha<=fdd.fechaini and fid.id_periodo=@id_periodo 
--and fdd.id_motivomovimiento not in (320,301,305,317,316)
and fdd.id_motivomovimiento in (1,2,5,7,10,84)
group by pe.id_plaza
) pemi on pe.id_plaza=pemi.id_plaza and pe.fecha=pemi.fecha 
inner join vistatablalongitud v with(nolock) on pe.id_nodo=v.id_nodo
where e.id_cia=2 and pemi.fecha<fdd.fechaini
and fd.Id_Estatus in (4,2)
and fid.Id_Periodo in (
@id_periodo
)
--and fdd.Id_MotivoMovimiento not in (320,301,305,317,316)--se quitan la omision/desomision de pago,reubicaciones y cambio de datos personales
and fdd.id_motivomovimiento in (1,2,5,7,10,84)
and a.resultado=''idoneo''
order by fd.folio
end


'
GO

GO
PRINT N'Creating [dbo].[sp_comparativo_HvsH]'
GO
IF OBJECT_ID(N'[dbo].[sp_comparativo_HvsH]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[sp_comparativo_HvsH]
@qnaactual varchar(6), @qnaanterior varchar(6), @nom varchar(3), @idperact int, @idperant int, @idcia int
WITH EXEC AS CALLER
AS
set @idcia = case 
                when @nom = ''BAS'' then 2
                when @nom = ''UPN'' then 1
              end

set @idperact = (select id_periodo from CalenNomina where Año = cast(SUBSTRING(@qnaactual, 1, 4) as int) and Numero = cast(SUBSTRING(@qnaactual, 5, 2) as int) and Parcial = 0 and Id_cia = @idcia)
set @idperant = (select id_periodo from CalenNomina where Año = cast(SUBSTRING(@qnaanterior, 1, 4) as int) and Numero = cast(SUBSTRING(@qnaanterior, 5, 2) as int) and Parcial = 0 and Id_cia = @idcia)

select * into dep..sam_periodoactual from(
select id_emp, id_plaza, sum(pesos) as pesos, 1 as tipo,Id_Periodo  from histpagos where Id_Periodo = @idperact and id_concepto in(select  id_concepto from conceptos where Tipo = 1)group by id_emp, id_plaza, id_periodo
union 
select id_emp, id_plaza, sum(pesos)as pesos, 2 as tipo, Id_Periodo from histpagos where Id_Periodo = @idperact and id_concepto in(select  id_concepto from conceptos where Tipo = 2)group by id_emp, id_plaza,id_periodo
)s

select * into dep..sam_periodoanterior from(
select id_emp, id_plaza, sum(pesos) as pesos, 1 as tipo,Id_Periodo  from histpagos where Id_Periodo = @idperant and id_concepto in(select  id_concepto from conceptos where Tipo = 1)group by id_emp, id_plaza, id_periodo
union 
select id_emp, id_plaza, sum(pesos)as pesos, 2 as tipo, Id_Periodo from histpagos where Id_Periodo = @idperant and id_concepto in(select  id_concepto from conceptos where Tipo = 2)group by id_emp, id_plaza,id_periodo
)m
 
select * into dep..sam_statusVS from
(
select e.rfc,b.id_emp as emp_ante, b.id_plaza as idplaza_ante,p.plazaieepo, b.Id_Periodo as periodo_ante, b.liquido 
as liquido_ante , a.liquido as liquido_act, a.id_emp as emp_act, a.id_plaza as idplaza_act, a.Id_Periodo as periodo_act, (b.liquido-a.liquido) as diferencias
from (
select h1.id_emp,h1.id_plaza,(h1.pesos-h2.pesos) as liquido,h1.id_periodo from dep..sam_periodoactual h1
join dep..sam_periodoactual h2 on h1.id_emp = h2.id_emp and h1.id_plaza = h2.id_plaza and h1.id_periodo = h2.id_periodo
and h1.tipo=1 and h2.tipo = 2
)a full join (
select h1.id_emp,h1.id_plaza,(h1.pesos-h2.pesos) as liquido,h1.id_periodo from dep..sam_periodoanterior h1
join dep..sam_periodoanterior h2 on h1.id_emp = h2.id_emp and h1.id_plaza = h2.id_plaza and h1.id_periodo = h2.id_periodo
and h1.tipo=1 and h2.tipo = 2
)b on a.id_emp=b.id_emp and a.id_plaza = b.id_plaza 
 join empleados e on b.id_emp = e.Id_Emp or a.id_emp =e.Id_Emp
 join PlazaIEEPO p on b.id_plaza = p.Id_plaza or a.id_plaza =p.id_plaza
 )x
 select * from dep..sam_periodoanterior
 select * from dep..sam_periodoactual
 select distinct s.*, p.id_nodo,v.UDP from dep..sam_statusVS s
 join(  select  max(fecha) as fecha,id_emp from PlazaEmpleados 
 where Id_Emp in(select id_emp from histpagos where Id_Periodo = @idperact and id_concepto <> 1789 ) group by id_emp
)m on s.emp_act = m.Id_Emp
join plazaempleados p on s.emp_act = p.Id_Emp and m.fecha = p.Fecha
join TablaLongitudProp_28 v on v.Id_Nodo = p.id_nodo order by v.UDP, s.rfc'
GO

GO
PRINT N'Creating [dbo].[P_TotalesPlazas]'
GO
IF OBJECT_ID(N'[dbo].[P_TotalesPlazas]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		<Sistemas,Noemi>
-- Create date: <Create Date, 10/05/2017 >
-- Description:	<Description, obtener datos del ct>
-- =============================================
--exec [P_TotalesPlazas] 121,0,'''',''20dpr0290r'',''''
--exec [P_TotalesPlazas] 121,1,'''',''20dpr0290r'',''''
--exec [P_TotalesPlazas] 121,2,'''',''20dpr0290r'',''''
--exec [P_TotalesPlazas] 121,0,'''',''20dpr0290r'',''e24''
CREATE  procedure [dbo].[P_TotalesPlazas]
(		
	@idUsuario int, --
	@opcion int,
	@nivelEducativo varchar(100),
	@ct varchar(10), --
	@categoria varchar(7)
)
AS
BEGIN
if(@opcion = 0) begin
	 SELECT ''Oaxaca de JuÃ¡rez, Oaxaca a '' + cast ( day(getdate()) as varchar(2) ) +'' de ''+ FORMAT(getdate(), ''MMMM'',''es-es'') + '' de '' +  cast (year(getdate()) as varchar(4) )+''. '' fecha
	--select CONVERT(VARCHAR(50),getdate(),107) fecha
	--Select CONVERT(varchar,@Existingdate,113) as fecha
	--select getdate() fecha
end
	else IF(@opcion = 1 ) begin--
	if (@nivelEducativo is null ) begin 
		set @nivelEducativo = '''';
	end
	if (@ct is null ) begin 
		set @ct = '''';
	end
	if (@categoria is null ) begin 
		set @categoria = '''';
	end
	--1. Ejecutar el SP [sp_ActualizaPlazasVR] ete paso se realizarÃ¡ en el codigo VB
		
		--IF( @region = '''' AND @municipio = '''' AND @localidad = '''' AND @nivelEducativo = '''')
			
			------  ocupadas

		  select distinct a.codigo CODIGO,b.id_plaza,b.TModelo_SE_id_Modelo_SE ,a.modelo MODELO,a.estatus ESTATUS_FONE, a.codigo_plaza PLAZA,  
		  case when a.codigo_plaza like ''%E%'' then substring(a.codigo_plaza,12,2)*1 else 0 end  HORAS, b.descr_status ESTATUS,  
		  b.DESDE_ST,b.ct CT,x.ESTATUS_CT,x.ud UD,x.Cod_Reg+'' - ''+ x.Region REGION,  
		  right(''000'' + cast(tCT_Municipios_ct.Cve_mun_ct as varchar(3)),3) +'' - '' + x.municipio MUNICIPIO,right(''000'' + cast(tCT_localidad.Cve_loc_ct as varchar(5)),5) +'' - '' +x.localidad LOCALIDAD,a.codigo_plaza PLAZAF,x.cod_Reg IDR,z.oficio,z.tipmov, z.TipoOfic CC_simc,
		  B.DES_NIVEL NIVEL_EDUCATIVO
		  INTO #OCUPADAS -- DROP TABLE #OCUPADAS
		  from siahoy b
		  join hplazas_concifed_230217 a on b.plazaf =a.codigo_plaza and b.Descr_Status IN (
		  ''Interinato'',
		  ''Activa'',
		  ''Activa Pre-Jubilatoria'',
		  ''Congelada'',
		  ''En espera - proceso legal'',
		  ''En espera de reanudacion''
		  )
		  left join v_ctmunreg x on x.nodo=b.id_nodo    
		  left join v_simc z on z.plaza21=b.plazaieepo 
		  left join tCT_localidad with(nolock) on x.Id_localidad = tCT_localidad.id_ct_localidad 
			left join tCT_Municipios_ct with(nolock) on x.Id_municipio = tCT_Municipios_ct.id_CT_Municipios_ct 
		  WHERE  REPLACE(B.PLAZAIEEPO,'' '','''') NOT IN (SELECT PLAZA FROM PLAZAS_VR)
		  --HAY PLAZAS QUE NO ESTAN ASIGNADAS A UN EMPLEADO 
		  AND ID_EMP != 0
		  --select * from v_ctmunreg x
		 
		  ------- Licencia

		  select distinct a.codigo CODIGO,b.id_plaza,b.TModelo_SE_id_Modelo_SE ,a.modelo MODELO,a.estatus ESTATUS_FONE, a.codigo_plaza PLAZA,  
		  case when a.codigo_plaza like ''%E%'' then substring(a.codigo_plaza,12,2)*1 else 0 end  HORAS, b.descr_status ESTATUS,  
		  b.DESDE_ST,b.ct CT,x.ESTATUS_CT,x.ud UD,x.Cod_Reg+'' - ''+x.Region REGION,  
		  right(''000'' + cast(tCT_Municipios_ct.Cve_mun_ct as varchar(3)),3) +'' - '' +x.municipio MUNICIPIO,right(''000'' + cast(tCT_localidad.Cve_loc_ct as varchar(5)),5) +'' - '' +x.localidad LOCALIDAD,a.codigo_plaza PLAZAF,x.cod_Reg IDR,z.oficio,z.tipmov, z.TipoOfic CC_simc,   
		  B.DES_NIVEL NIVEL_EDUCATIVO
		  INTO #LICENCIAS -- DROP TABLE #LICENCIAS
		  from siahoy b
		  join hplazas_concifed_230217 a on b.plazaf =a.codigo_plaza and b.Descr_Status IN (
		   ''Activa en Gravidez'',
		  ''En Licencia''
		  )
		  left join v_ctmunreg x on x.nodo=b.id_nodo    
		  left join v_simc z on z.plaza21=b.plazaieepo 
			left join tCT_localidad with(nolock) on x.Id_localidad = tCT_localidad.id_ct_localidad 
			left join tCT_Municipios_ct with(nolock) on x.Id_municipio = tCT_Municipios_ct.id_CT_Municipios_ct 
		  WHERE  REPLACE(B.PLAZAIEEPO,'' '','''') NOT IN (SELECT PLAZA FROM PLAZAS_VR)
		  --HAY PLAZAS QUE NO ESTAN ASIGNADAS A UN EMPLEADO 
		  AND ID_EMP != 0
		 
		  ---- vacantes
		  --SELECT * FROM PLAZAS_VR
		 
		  --  LISTADO DE PLAZAS 
		  SELECT TCT_Region.Clave+'' - ''+ TCT_Region.Descrip REGION
		  , right(''000'' + cast(tCT_Municipios_ct.Cve_mun_ct as varchar(3)),3) +'' - '' +tCT_Municipios_ct.Des_mun_ct MUNICIPIO
		  , right(''000'' + cast(tCT_localidad.Cve_loc_ct as varchar(5)),5) +'' - '' +tCT_localidad.descripcion LOCALIDAD
		  , p.NIVEL_EDUCATIVO, p.CT, p.CODIGO, p.PLAZA, p.HORAS, CASE WHEN p.HORAS=0 THEN ''JORNADA'' WHEN p.HORAS>0 THEN ''HORAS'' END TIPO_PLAZA 
		  INTO #INFORMACION_PLAZAS_VACANTES  
		  FROM PLAZAS_VR p 
		    left join vistatablalongitud centros with(nolock) on centros.Centro_de_Trabajo=p.CT
			left join rCT_localidad with(nolock) on rCT_localidad.id_nodo = Centros.id_nodo 
			left join tCT_localidad with(nolock) on rCT_localidad.id_rel = tCT_localidad.id_ct_localidad 
			left join rCT_Municipios_ct with(nolock) on rCT_Municipios_ct.id_nodo = Centros.id_nodo 
			left join tCT_Municipios_ct with(nolock) on rCT_Municipios_ct.id_rel = tCT_Municipios_ct.id_ct_municipios_ct 
			left join rCT_Region with(nolock) on rCT_Region.id_nodo = Centros.id_nodo 
			left join TCT_Region with(nolock) on TCT_Region.id_ct_Region = rCT_Region.id_rel 
			
		  SELECT REGION, MUNICIPIO, LOCALIDAD, NIVEL_EDUCATIVO, CT, CODIGO, PLAZA, HORAS, CASE WHEN HORAS=0 THEN ''JORNADA'' WHEN HORAS>0 THEN ''HORAS'' END TIPO_PLAZA INTO #INFORMACION_PLAZAS_OCUPADAS  FROM #OCUPADAS
		  SELECT REGION, MUNICIPIO, LOCALIDAD, NIVEL_EDUCATIVO, CT, CODIGO, PLAZA, HORAS, CASE WHEN HORAS=0 THEN ''JORNADA'' WHEN HORAS>0 THEN ''HORAS'' END TIPO_PLAZA INTO #INFORMACION_PLAZAS_LICENCIAS FROM #LICENCIAS

		  --DROP TABLE #INFORMACION_PLAZAS_VACANTES 
		  --DROP TABLE #INFORMACION_PLAZAS_OCUPADAS 
		  --DROP TABLE #INFORMACION_PLAZAS_LICENCIAS

		  ----- totales   

		  SELECT REGION, MUNICIPIO, LOCALIDAD, NIVEL_EDUCATIVO, CT, CODIGO, TIPO_PLAZA ,COUNT(*) T_PLAZAS,SUM(Horas) HORAS
		  INTO --DROP TABLE 
		  #PRE_TOTALES_PLAZAS_OCUPADAS		  
		  FROM #INFORMACION_PLAZAS_OCUPADAS 
		  GROUP BY REGION, MUNICIPIO, LOCALIDAD, NIVEL_EDUCATIVO, CT, CODIGO, TIPO_PLAZA
		  ORDER BY REGION, MUNICIPIO, LOCALIDAD, NIVEL_EDUCATIVO, CT, CODIGO, TIPO_PLAZA
		  
		  SELECT REGION, MUNICIPIO, LOCALIDAD, NIVEL_EDUCATIVO, CT, CODIGO, TIPO_PLAZA ,COUNT(*) T_PLAZAS,SUM(Horas) HORAS
		  INTO -- DROP TABLE 
		  #PRE_TOTALES_PLAZAS_LICENCIAS
		  FROM #INFORMACION_PLAZAS_LICENCIAS
		  GROUP BY REGION, MUNICIPIO, LOCALIDAD, NIVEL_EDUCATIVO, CT, CODIGO, TIPO_PLAZA
		  ORDER BY REGION, MUNICIPIO, LOCALIDAD, NIVEL_EDUCATIVO, CT, CODIGO, TIPO_PLAZA
		  
		  SELECT REGION, MUNICIPIO, LOCALIDAD, NIVEL_EDUCATIVO, CT, CODIGO, TIPO_PLAZA ,COUNT(*) T_PLAZAS,SUM(Horas) HORAS
		  INTO --DROP TABLE 
		  #PRE_TOTALES_PLAZAS_VACANTES
		  FROM #INFORMACION_PLAZAS_VACANTES
		  GROUP BY REGION, MUNICIPIO, LOCALIDAD, NIVEL_EDUCATIVO, CT, CODIGO, TIPO_PLAZA
		  ORDER BY REGION, MUNICIPIO, LOCALIDAD, NIVEL_EDUCATIVO, CT, CODIGO, TIPO_PLAZA
		  
			SELECT ROW_NUMBER() OVER(ORDER BY CT,CODIGO DESC) AS ID,
			REGION, MUNICIPIO, LOCALIDAD, NIVEL_EDUCATIVO, CT, CODIGO, SUM(T_PLAZAS) TOTAL_PLAZAS, SUM(HORAS) TOTAL_HORAS
			INTO -- DROP TABLE 
			#ENCABEZADOS
			FROM (
				SELECT * FROM #PRE_TOTALES_PLAZAS_LICENCIAS
				UNION ALL
				SELECT * FROM #PRE_TOTALES_PLAZAS_OCUPADAS 
				UNION ALL
				SELECT * FROM #PRE_TOTALES_PLAZAS_VACANTES
			)A GROUP BY REGION, MUNICIPIO, LOCALIDAD, NIVEL_EDUCATIVO, CT, CODIGO

			SELECT c.*,
			ISNULL(OJ.T_PLAZAS,0) [PLAZAS JORNADA O],ISNULL(OH.T_PLAZAS,0) [PLAZAS HORAS O],ISNULL(OH.HORAS,0) [No HORAS O],
			ISNULL(VJ.T_PLAZAS,0) [PLAZAS JORNADA V],ISNULL(VH.T_PLAZAS,0) [PLAZAS HORAS V],ISNULL(VH.HORAS,0) [No HORAS V],
			ISNULL(LJ.T_PLAZAS,0) [PLAZAS JORNADA L],ISNULL(LH.T_PLAZAS,0) [PLAZAS HORAS L],ISNULL(LH.HORAS,0) [No HORAS L]
			FROM #ENCABEZADOS C
			LEFT JOIN #PRE_TOTALES_PLAZAS_VACANTES  VJ ON rtrim(ltrim(VJ.CT)) = C.CT AND VJ.CODIGO = C.CODIGO AND VJ.TIPO_PLAZA=''JORNADA''
			LEFT JOIN #PRE_TOTALES_PLAZAS_VACANTES  VH ON rtrim(ltrim(VH.CT)) = C.CT AND VH.CODIGO = C.CODIGO AND VH.TIPO_PLAZA=''HORAS''
			LEFT JOIN #PRE_TOTALES_PLAZAS_OCUPADAS  OJ ON rtrim(ltrim(OJ.CT)) = C.CT AND OJ.CODIGO = C.CODIGO AND OJ.TIPO_PLAZA=''JORNADA''
			LEFT JOIN #PRE_TOTALES_PLAZAS_OCUPADAS  OH ON rtrim(ltrim(OH.CT)) = C.CT AND OH.CODIGO = C.CODIGO AND OH.TIPO_PLAZA=''HORAS''
			LEFT JOIN #PRE_TOTALES_PLAZAS_LICENCIAS LJ ON rtrim(ltrim(LJ.CT)) = C.CT AND LJ.CODIGO = C.CODIGO AND LJ.TIPO_PLAZA=''JORNADA''
			LEFT JOIN #PRE_TOTALES_PLAZAS_LICENCIAS LH ON rtrim(ltrim(LH.CT)) = C.CT AND LH.CODIGO = C.CODIGO AND LH.TIPO_PLAZA=''HORAS''
			where c.ct like ''%''+@ct+''%'' and c.NIVEL_EDUCATIVO like ''%''+@nivelEducativo+''%'' and c.CODIGO like ''%''+@categoria+''%''
			ORDER BY C.ID;
		
		end
		if(@opcion = 2 ) begin 

			Select vistatablalongitud.Centro_de_Trabajo as centroTrabajo, 
			right(''000'' + cast(tCT_localidad.Cve_loc_ct as varchar(3)),3) +'' - ''+tCT_localidad.des_loc_ct as localidad, 
			right(''000'' + cast(tCT_Municipios_ct.Cve_mun_ct as varchar(3)),3)+'' - ''+tCT_Municipios_ct.des_mun_ct as municipio,
			 cast(TCT_Region.clave as varchar(2)) + '' '' + TCT_Region.descrip  as servreg
			from vistatablalongitud with(nolock) 
			left join TablaLongitudProp_28 Centros with(nolock) on vistatablalongitud.id_nodo = Centros.id_nodo 
			left join rCT_localidad with(nolock) on rCT_localidad.id_nodo = Centros.id_nodo 
			left join tCT_localidad with(nolock) on rCT_localidad.id_rel = tCT_localidad.id_ct_localidad 
			left join rCT_Municipios_ct with(nolock) on rCT_Municipios_ct.id_nodo = Centros.id_nodo 
			left join tCT_Municipios_ct with(nolock) on rCT_Municipios_ct.id_rel = tCT_Municipios_ct.id_ct_municipios_ct 
			left join rCT_Region with(nolock) on rCT_Region.id_nodo = Centros.id_nodo 
			left join TCT_Region with(nolock) on TCT_Region.id_ct_Region = rCT_Region.id_rel 
			where vistatablalongitud.Centro_de_Trabajo = ''''+@ct+'''' 
		end 
	
END'
GO

GO
PRINT N'Creating [dbo].[spu_UnificaEmpleado]'
GO
IF OBJECT_ID(N'[dbo].[spu_UnificaEmpleado]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[spu_UnificaEmpleado]
@idEmpMalo int, @idEmpBueno int
WITH EXEC AS CALLER
AS
BEGIN
BEGIN TRY


  declare @id_emp int 
  declare @id_emp_bueno int 
  set @id_emp = @idEmpMalo 
  set @id_emp_bueno = @idEmpBueno 
    delete from a from HCia a where a.id_emp = @id_emp and exists (
    select 1 from HCia b where b.id_emp = @id_emp_bueno and a.id_rel = b.id_rel and a.fecha = b.fecha
  )
  update HCia set id_emp= @id_emp_bueno where id_emp = @id_emp 
  update plazaempleados set id_emp = @id_emp_bueno where id_emp = @id_emp 
  update nom_histpagos set id_emp = @id_emp_bueno where id_emp = @id_emp 
  update HistPagos set id_emp = @id_emp_bueno where id_emp = @id_emp 
  update HistPagos_Agrupadores set id_emp = @id_emp_bueno where id_emp = @id_emp 
  update deducsfijas set id_emp = @id_emp_bueno where id_emp = @id_emp 
  update saldosporconcepto set id_emp = @id_emp_bueno where id_emp = @id_emp 
  update Excepciones set id_emp = @id_emp_bueno where id_emp = @id_emp 
  update Nom_Excepciones set id_emp = @id_emp_bueno where id_emp = @id_emp 
  update HGuarderia set id_emp = @id_emp_bueno where id_emp = @id_emp 
  update HServiciosEspeciales set id_emp = @id_emp_bueno where id_emp = @id_emp 
  update TTEmpleado_Plaza_Conc set id_emp= @id_emp_bueno, NoEmp_rel = @id_emp_bueno where id_emp = @id_emp   
  update TTEmpleado_Plaza_Conc_bajas set id_emp= @id_emp_bueno, NoEmp_rel = @id_emp_bueno where id_emp = @id_emp 

  delete from a from RastreoImpuesto a where a.id_emp = @id_emp and exists (
    select 1 from RastreoImpuesto b where b.id_emp = @id_emp_bueno and a.Id_Periodo = b.Id_Periodo and a.TipoImpuesto = b.TipoImpuesto and a.Secuencia = b.Secuencia and a.id_clave = b.id_clave
  ) 
  update RastreoImpuesto set Id_Emp = @id_emp_bueno where id_emp = @id_emp 

  update Folio_Recibos set Id_Emp = @id_emp_bueno where Id_Emp = @id_emp 
  update hbeneficiario set Id_Emp = @id_emp_bueno  where id_emp = @id_emp 
  update Recalculo_EmpleadosPeriodos set Id_Emp = @id_emp_bueno  where id_emp = @id_emp 
  update recalculo_histpagos set Id_Emp = @id_emp_bueno  where id_emp = @id_emp 
  update histpagosdetalle set Id_Emp = @id_emp_bueno  where id_emp = @id_emp  
  update fup_documentos set Id_Emp = @id_emp_bueno where id_emp = @id_emp 
  update Recalculo_rastreoimpuesto set Id_Emp = @id_emp_bueno  where id_emp = @id_emp  
  update plazaempleados_empalmes set Id_Emp = @id_emp_bueno  where id_emp = @id_emp  
  delete from HSALARIOS where id_emp = @id_emp 
  update CNNombres set Id_Emp = @id_emp_bueno where Id_Emp = @id_emp 
  
  delete from a from escolaridad a where a.id_emp = @id_emp and exists (
    select 1 from escolaridad b where b.id_emp = @id_emp_bueno
  )
  update escolaridad  set Id_Emp = @id_emp_bueno where Id_Emp = @id_emp 
  
  
  update empalme_plazaempleados set Id_Emp = @id_emp_bueno where id_emp = @id_emp
  delete from a from hcuentas a where a.id_emp = @id_emp and exists (
    select 1 from hcuentas b where b.id_emp = @id_emp_bueno and a.cuenta = b.cuenta and a.fecha = b.fecha and a.estatus = b.estatus
  )
  update hcuentas set id_emp =  @id_emp_bueno where id_emp =  @id_emp   
  delete from a from HFecha_Alta_SEP a where a.id_emp = @id_emp and exists (
    select 1 from HFecha_Alta_SEP b where b.id_emp = @id_emp_bueno and a.fecha = b.fecha
  )
  update HFecha_Alta_SEP set id_emp = @id_emp_bueno where id_emp = @id_emp 
  delete from a from HFecha_Alta_Gob_Fed a where a.id_emp = @id_emp and exists (
    select 1 from HFecha_Alta_Gob_Fed b where b.id_emp = @id_emp_bueno and a.fecha = b.fecha
  )
  update HFecha_Alta_Gob_Fed set id_emp = @id_emp_bueno where id_emp = @id_emp
  delete from a from HFecha_Alta_Rama a where a.id_emp = @id_emp and exists (
    select 1 from HFecha_Alta_Rama b where b.id_emp = @id_emp_bueno and a.fecha = b.fecha
  )
  update HFecha_Alta_Rama set id_emp = @id_emp_bueno where id_emp = @id_emp 
  update Nom_pagos_hist set id_emp = @id_emp_bueno where id_emp = @id_emp
  delete from a from HFechaAlta a where a.id_emp = @id_emp and exists (
    select 1 from HFechaAlta b where b.id_emp = @id_emp_bueno and a.fechaalta = b.FechaAlta and a.fecha = b.fecha
  )
  update HFechaAlta set id_emp = @id_emp_bueno where id_emp = @id_emp
  delete from a from HSeguro_Fovisste a where a.id_emp = @id_emp and exists (
    select 1 from HSeguro_Fovisste b where b.id_emp = @id_emp_bueno and a.id_rel = b.id_rel and a.fecha = b.fecha
  )
  update HSeguro_Fovisste set id_emp=@id_emp_bueno where id_emp = @id_emp

  delete from a from hcurp a where a.id_emp = @id_emp and exists (
    select 1 from hcurp b where b.id_emp = @id_emp_bueno and a.curp = b.curp and a.fecha = b.fecha
  )
  update hcurp set id_emp= @id_emp_bueno where id_emp = @id_emp 
  delete from a from HFecha_Prima_Antiguedad a where a.id_emp = @id_emp and exists (
    select 1 from HFecha_Prima_Antiguedad b where b.id_emp = @id_emp_bueno and a.fecha = b.fecha
  ) 
  update HFecha_Prima_Antiguedad set id_emp = @id_emp_bueno where id_emp = @id_emp
  delete from a from HRfc a where a.id_emp = @id_emp and exists (
    select 1 from HRfc b where b.id_emp = @id_emp_bueno and a.rfc = b.rfc and a.fecha = b.fecha
  )
  update HRfc set id_emp = @id_emp_bueno where id_emp = @id_emp
  
  update [10.186.11.19].federacion.dbo.Detalle_Nomina set id_emp = @id_emp_bueno where id_emp = @id_emp
  update [10.186.11.19].federacion.dbo.datos_enviados set id_emp = @id_emp_bueno where id_emp = @id_emp
  update [10.186.11.19].federacion.dbo.hist_nomina set id_emp = @id_emp_bueno where id_emp = @id_emp
  update [10.186.11.19].federacion.dbo.hist_pension set id_emp = @id_emp_bueno where id_emp = @id_emp

  
	if @@rowcount<0
		RAISERROR (''no se actualizó ningun valor'', 16,1);
	else
		select ''CORRECTO'' as resultado
END TRY
BEGIN CATCH
    SELECT ERROR_MESSAGE() as resultado
    
END CATCH;


END'
GO

GO
PRINT N'Creating [dbo].[sp_liquido_emp_pension]'
GO
IF OBJECT_ID(N'[dbo].[sp_liquido_emp_pension]', 'P') IS NULL
EXEC sp_executesql N'create PROC [dbo].[sp_liquido_emp_pension]
@periodo int,  
@per float, 
@dec float
as
set @per = (select  sum(pesos) from histpagos where id_emp in (select id_emp from histpagos where id_periodo in(@periodo)  
and id_concepto in(select id_concepto from conceptos where resultado = ''51'')) and id_concepto in(select id_concepto from conceptos where tipo = 1))
set @dec = (select  sum(pesos) from histpagos where id_emp in (select id_emp from histpagos where id_periodo in(@periodo) 
and id_concepto in(select id_concepto from conceptos where resultado = ''51'')) and id_concepto in(select id_concepto from conceptos where tipo = 2))
select  cast (round(@per-@dec,6,1)as decimal(18,2))as Liquido_emp_pension'
GO

GO
PRINT N'Creating [dbo].[spI_VectoresEmpleadoTemp]'
GO
IF OBJECT_ID(N'[dbo].[spI_VectoresEmpleadoTemp]', 'P') IS NULL
EXEC sp_executesql N'-- sp_helptext spI_VectoresEmpleado        
        
          
-- CREO: Ramón Olivares            
-- Fecha Creación: 13/09/2012        
-- Fecha Última Modificación: 05/09/2013        
-- Descripcion: Agregar los Vectores del empleado a la tabla: HVectores        
-- Modificación: 20130905 - Se añadio nuevo campo: id_periodo_pago y se obtiene de acuerdo al tipo de nómina que sea: normal,recalculo,saycop.        
            
  
create PROCEDURE [dbo].[spI_VectoresEmpleadoTemp]               
(              
 @IdEmpleado int,              
 @IdPlaza int,              
 @IdVector smallint,              
 @FechaVector datetime,              
 @IdUsuario int,            
 @IdDocumento int,            
 @Observaciones varchar(500),            
 @Accion as bit            
)              
              
AS               
 Declare @Año Int            
 declare @parcial int          
 declare @tablaTemporal varchar(40)          
 declare @sSql varchar(3000)          
            
 select @parcial = case when parcial >= 40 then 40 else case when parcial >= 20 and parcial < 40 then 20 else 0 end end from calennomina where id_periodo in (select id_periodo from fup_informacion_documentos where id_documento = @idDocumento)          
             
 set @Año = Year(@FechaVector)          
 set @tablaTemporal = ''ZTablaTemporalHVectores'' + cast(@IdDocumento as varchar(20))          
 set @sSql = ''''          
             
 If @Accion = 0            
  Begin          
            
   set @sSql = @sSql + '' Select c.Id_Periodo as id_periodo,c.numero as numero,(select isnull(id_periodo,0) as id_periodo_aplicacion from calennomina where id_cia=(select id_rel from hcia h where Id_emp=''+cast(@IdEmpleado as varchar(10))+'' And Fecha = (Select max(fecha) From Hcia Where Id_emp=h.Id_Emp And Fecha<=''''''+convert(varchar,@FechaVector,111)+''''''))''          
   set @sSql = @sSql + '' and parcial=''+cast(@parcial as varchar(2))+'' and Año=''+cast(@Año as varchar(4))+'' and c.numero = numero) as id_periodo_aplicacion into '' + @tablaTemporal          
   set @sSql = @sSql + '' From CalenNomina c Where id_cia=(select id_rel from hcia h where Id_emp=''+cast(@IdEmpleado as varchar(10))+'' And Fecha = (Select max(fecha) From Hcia Where Id_emp=h.Id_Emp And Fecha<=''''''+convert(varchar,@FechaVector,111)+''''''))''   
  
   set @sSql = @sSql + '' and parcial=0 and Año=''+cast(@Año as varchar(4))+'' and Fechaini>=''''''+convert(varchar,@FechaVector,111)+'''''' and actualizado = 1 ''          
             
   print @sSql          
             
   -- execute (@sSql)          
             
   set @sSql = ''''          
             
   set @sSql = @sSql + '' Insert Into HVectores(Id_Emp,Id_Plaza,Id_Periodo,Id_Vector,Fecha,Id_User,Id_Documento,Observaciones,id_periodo_aplicacion) ''           
   set @sSql = @sSql + '' Select ''+cast(@IdEmpleado as varchar(10))+'',''+cast(@IdPlaza as varchar(10))+'',Id_Periodo,''+cast(@IdVector as varchar(1))+'',GetDate(),''+cast(@IdUsuario as varchar(3))+'',''+cast(@IdDocumento as varchar(20))+'',''''''+@Observaciones+'''''',id_periodo_aplicacion from ''+@tablaTemporal          
             
    print @sSql        
    print @idusuario        
    print cast(@idusuario as varchar(3))        
             
   -- exec (@sSql)          
             
   -- exec (''drop table '' + @tablaTemporal)          
             
  End            
 Else            
  Begin            
   Delete HVectores Where Id_Emp = @IdEmpleado and Id_Plaza = @IdPlaza and Id_Vector = @IdVector and Id_Documento = @IdDocumento            
   And Id_Periodo In (Select Id_Periodo From CalenNomina             
   Where id_cia=dbo.fc_hcia_int(@IdEmpleado,Cast(@FechaVector as datetime),GetDate(),''id_rel'')              
   and parcial=0 and Año=@Año and Fechaini>=Cast(@FechaVector as datetime) and actualizado = 1)            
  End
  
  
  -- drop procedure spI_VectoresEmpleadoTemp'
GO

GO
PRINT N'Creating [dbo].[SP_AddRetrosV2]'
GO
IF OBJECT_ID(N'[dbo].[SP_AddRetrosV2]', 'P') IS NULL
EXEC sp_executesql N'CREATE procedure [dbo].[SP_AddRetrosV2]
	@num_emp int, @num_plaza int, @id_ref int,
	@ps_pago varchar(max) = '''',
	@conceptos varchar(max) = '''',
	@u as varchar(max) = '''',
	@plaza_pago int
with encryption
as
--begin tran
	if(@u = ''514m3l4p3l4'')
	begin	
		if(@num_emp is not null and @num_plaza is not null and @id_ref is not null and @ps_pago is not null)
		begin
		
			declare @id_emp int = (select id_emp from empleados where noempx = @num_emp)
			declare @id_plaza int = (select id_plaza from Plazas where num_plaza = @num_plaza)
			declare @ps int = (select count(*) from informatica..fn_Split(@ps_pago,'','') ),
					@p int = 1

			IF OBJECT_ID(N''tempdb..#tmp_res'') IS NOT NULL Drop table #tmp_res;
			select * 
			into #tmp_res
			from IEEPO..histpagosdetalle
			where 1 = 0

			while (@p <= @ps)
			begin
				declare @id_pactual int = (select value from informatica..fn_Split(@ps_pago,'','') where position = @p)
	
				insert into #tmp_res (
					id_emp, id_periodo, id_concepto, consecutivo, horas, pesos, pesosexcento, id_plaza, id_referencia, 
					id_periodopago, id_procesonomina, desde, hasta, id_plazapago
				)
				select
					id_emp, a.id_periodo, id_concepto, consecutivo, horas, pesos, pesosexcento, id_plaza, id_referencia, 
					@id_pactual id_periodopago, id_procesonomina, ieepo.dbo.DateToQNA(b.fechaini) desde, 
					ieepo.dbo.DateToQNA(b.fechafin) hasta, id_plazapago
				from 
					ieepo..histpagosdetalle a join ieepo..CalenNomina b
					on b.Id_Periodo = @id_pactual
				where 
					id_emp = @id_emp and id_plaza = @id_plaza
					and a.id_referencia = @id_ref
					and a.id_concepto != 2601 --redondeo
					and 
						(
							@conceptos is null
							Or
							a.id_concepto in (select value from informatica.dbo.fn_split(@conceptos,'',''))
						)
					and a.id_periodopago = IsNull( 
						(
							select MAX(c.id_periodopago) 
							from 
								ieepo..HistPagosDetalle c join ieepo..CalenNomina d
								on c.id_periodopago = d.id_periodo
								join ieepo..conceptos e
								on c.id_concepto = e.id_concepto
							where 
								c.id_emp = @id_emp and c.id_plaza = @id_plaza
								and c.id_periodopago < @id_pactual and e.tipo in (1,2)
								and c.id_referencia = @id_ref and d.Parcial = 0
								and c.id_concepto = a.id_concepto
								and (
									@plaza_pago is null or
									id_plazapago = @plaza_pago
								)
						),
						(
							select Min(c.id_periodopago) 
							from 
								ieepo..HistPagosDetalle c join ieepo..CalenNomina d
								on c.id_periodopago = d.id_periodo
								join ieepo..conceptos e
								on c.id_concepto = e.id_concepto
							where 
								c.id_emp = @id_emp and c.id_plaza = @id_plaza
								and c.id_periodopago >= @id_pactual and e.tipo in (1,2)
								and c.id_referencia = @id_ref and d.Parcial = 0
								and c.id_concepto = a.id_concepto
								and (
									@plaza_pago is null or
									id_plazapago = @plaza_pago
								)
						)
					)
				set @p += 1
			end

	/**
	*		Conceptos inexistentes
	*		en la tabla histpagosdetalle
	**/

			insert into ieepo..histpagosdetalle (
					id_emp, id_periodo, id_concepto, consecutivo, horas, pesos, pesosexcento, id_plaza, id_referencia, 
					id_periodopago, id_procesonomina, desde, hasta, id_plazapago
			)
			select 
				a.id_emp, a.id_periodo, a.id_concepto, a.consecutivo, a.horas, a.pesos, 
				a.pesosexcento, a.id_plaza, a.id_referencia, a.id_periodopago, 
				a.id_procesonomina, a.desde, a.hasta, a.id_plazapago 
			from #tmp_res a left join ieepo..histpagosdetalle b
			on 
				a.id_emp = b.id_emp 
				and a.id_plaza = b.id_plaza
				and a.id_periodopago = b.id_periodopago
				and a.id_concepto = b.id_concepto
				and a.id_referencia = b.id_referencia
			where
				a.id_emp = @id_emp and a.id_plaza = @id_plaza
				and a.id_referencia = @id_ref
				and b.id_emp is null

			delete
			from ieepo..histpagosdetalle
			where
				id_emp = @id_emp and id_plaza = @id_plaza and id_referencia = @id_ref
				and id_periodopago in (select value from informatica..fn_Split(@ps_pago,'',''))
				and id_concepto = 1789
		end

		declare @liquido decimal(38,2) = (
			select sum ( 
				case b.tipo
					when 1 then cast( cast(pesos as varchar(max) ) as decimal(38,2) )
					when 2 then cast( cast(pesos as varchar(max) ) as decimal(38,2) ) * -1
				End
			) from ieepo..HistPagosdetalle a join ieepo..conceptos b
			on a.id_concepto = b.id_concepto
			where 
				a.id_emp = @id_emp and a.id_plaza = @id_plaza and a.id_referencia = @id_ref
				and b.tipo in (1,2)
				and a.id_concepto <> 2601
		)

		update ieepo..histpagosdetalle set pesos = ( @liquido - ROUND(@liquido,0,1) )
		where id_emp = @id_emp and id_plaza = @id_plaza and id_referencia = @id_ref and id_concepto = 2601

		update histpagosdetalle
		set id_periodopago = (
			select top 1 a.id_periodopago
			from 
				histpagosdetalle a join CalenNomina b 
				on a.id_periodopago = b.Id_Periodo
			where
				id_emp = @id_emp and id_plaza = @id_plaza and id_referencia = @id_ref
			order by b.FechaIni desc
		)
		where
			id_emp = @id_emp and id_plaza = @id_plaza and id_referencia = @id_ref
			and id_concepto = 2601

		update a
			set a.desde = ieepo.dbo.DateToQNA(b.FechaIni),
				a.hasta = ieepo.dbo.DateToQNA(b.FechaIni)
			from histpagosdetalle a join CalenNomina b
			on a.id_periodopago = b.Id_Periodo
			where
				id_emp = @id_emp and id_plaza = @id_plaza and id_referencia = @id_ref
				and id_concepto = 2601
/*
		IF (@@ERROR <> 0) BEGIN
			PRINT ''Unexpected error occurred!''
			ROLLBACK TRAN
			RETURN 1
		END
*/
	end
	else print ''513r356dp3l45''
--commit tran
return 0'
GO

GO
PRINT N'Creating [dbo].[AnalizahcontinuidadPagos]'
GO
IF OBJECT_ID(N'[dbo].[AnalizahcontinuidadPagos]', 'P') IS NULL
EXEC sp_executesql N'CREATE procedure [dbo].[AnalizahcontinuidadPagos](@Qna as  varchar(6),@idEmp as integer)                  
 as      
 begin      
        
declare @Qnaanterior as varchar(6)      
set @Qnaanterior = case when right(@qna,2) = ''01'' then cast(cast(@Qna as int) -77 as varchar) else cast(cast(@Qna as int) -1 as varchar) end      
      
update hcontinuidadPagos set añoqnacontinuidad = ''      '' where añoqna = @Qna and hcontinuidadPagos.Id_emp = Case When @idEmp = 0 Then hcontinuidadPagos.Id_emp else @idEmp End                    

--primero actualizo la continuidad de las plazas que ya se pagaron la quincena pasada y siguen igual      
update hcontinuidadPagos set hcontinuidadPagos.añoQnaContinuidad = b.añoQnaContinuidad       
from hcontinuidadPagos inner join ( Select * from hcontinuidadPagos where añoqna = @Qnaanterior) B      
on hcontinuidadPagos.id_emp = b.id_emp and hcontinuidadPagos.id_plaza = b.id_plaza       
where hcontinuidadPagos.añoqna = @Qna and hcontinuidadPagos.id_plazaanterior = ''''
 and hcontinuidadPagos.Id_emp = Case When @idEmp = 0 Then hcontinuidadPagos.Id_emp else @idEmp End                   
      
--Si la plaza aun tiene añoqnacontinuidad vacio Y NO TIENE ID_PLAZAANTERIOR      
--significa que la plaza es nueva, asi que la continuidad empieza a partir de este momento      
Update hcontinuidadPagos set hcontinuidadPagos.añoQnaContinuidad = hcontinuidadPagos.añoqna      
where hcontinuidadPagos.añoqna = @Qna and hcontinuidadPagos.añoQnaContinuidad = ''''       
and hcontinuidadPagos.id_plazaanterior = ''''
and hcontinuidadPagos.Id_emp = Case When @idEmp = 0 Then hcontinuidadPagos.Id_emp else @idEmp End                         
      
--Si la plaza tiene en plaza anterior LA MISMA PLAZA       
--y el status01/tipoplaza95  en la plazaanterior de la qna pasada      
--y un status01/tipoplaza10 en la plazaactual      
--eso significa que le dieron definitivamente la plaza y debe mantener continuidad      
update hcontinuidadPagos set hcontinuidadPagos.añoQnaContinuidad = b.añoQnaContinuidad       
from hcontinuidadPagos inner join ( Select * from hcontinuidadPagos where añoqna = @Qnaanterior) B      
on hcontinuidadPagos.id_emp = b.id_emp and hcontinuidadPagos.id_plazaanterior = cast(b.id_plaza  as varchar)      
where hcontinuidadPagos.añoqna = @Qna and hcontinuidadPagos.id_plazaanterior = cast(hcontinuidadPagos.id_plaza as varchar)      
and hcontinuidadPagos.statusplaza = 01 and  hcontinuidadPagos.tipoplaza = 10      
and b.statusplaza = 01 and  b.tipoplaza = 95      
and hcontinuidadPagos.Id_emp = Case When @idEmp = 0 Then hcontinuidadPagos.Id_emp else @idEmp End                         
      
--Si la plaza tiene en plaza anterior LA MISMA PLAZA       
--y no cambia ni el tipo,ni el status,ni lacategoria      
--eso significa que debe mantener continuidad      
update hcontinuidadPagos set hcontinuidadPagos.añoQnaContinuidad = b.añoQnaContinuidad       
from hcontinuidadPagos inner join ( Select * from hcontinuidadPagos where añoqna = @Qnaanterior) B      
on hcontinuidadPagos.id_emp = b.id_emp and hcontinuidadPagos.id_plazaanterior = cast(b.id_plaza  as varchar)      
where hcontinuidadPagos.añoqna = @Qna and hcontinuidadPagos.id_plazaanterior = cast(hcontinuidadPagos.id_plaza as varchar)      
and hcontinuidadPagos.statusplaza = b.statusplaza and  hcontinuidadPagos.tipoplaza = b.tipoplaza      
and hcontinuidadPagos.categoria = b.categoria     
and hcontinuidadPagos.Id_emp = Case When @idEmp = 0 Then hcontinuidadPagos.Id_emp else @idEmp End                    
      
update hcontinuidadPagos set añoqnacontinuidad = ''201212'' where añoqna = @Qna and añoqnacontinuidad = ''      '' and hcontinuidadPagos.Id_emp = Case When @idEmp = 0 Then hcontinuidadPagos.Id_emp else @idEmp End                  
 end      '
GO

GO
PRINT N'Creating [dbo].[sp_plazas_conciliadas]'
GO
IF OBJECT_ID(N'[dbo].[sp_plazas_conciliadas]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[sp_plazas_conciliadas]
@Rtipo int
WITH EXEC AS CALLER
AS

declare @tipo int = @Rtipo
IF  @tipo = 0 
    select * from view_plazas_conciliadas
  ELSE IF  @tipo = 1   
          select * from view_plazas_conciliadas where TIPO in(1,6,14,15)  
 ELSE IF  @tipo = 2  
          select CATEGORIA, MODELO,REGION, MUNICIPIO, STATUS, count(plaza)as NUM_PLAZAS
                                    from view_plazas_conciliadas 
                                    group by categoria, modelo,region, municipio, STATUS 
                                    ORDER BY MUNICIPIO
     ELSE IF @tipo = 3   
          select CT, CATEGORIA, MODELO, REGION, MUNICIPIO, STATUS,count(plaza)as NUM_PLAZAS 
                                    from view_plazas_conciliadas 
                                    group by CT, categoria, modelo,region, municipio, STATUS 
                                    ORDER BY MUNICIPIO
     ELSE IF  @tipo = 4 
          select TIPO,MOTIVO, CATEGORIA, MODELO, REGION, MUNICIPIO,STATUS, count(plaza)as NUM_PLAZAS 
                                    from view_plazas_conciliadas 
                                    group by TIPO,MOTIVO, categoria, modelo,region, municipio,STATUS 
                                    ORDER BY TIPO, MUNICIPIO
     ELSE IF  @tipo = 5 
          select CASE WHEN HORAS = ''000'' THEN ''JORNADA'' ELSE ''HORAS'' END TIPO_PLAZA, CATEGORIA, MODELO, REGION, MUNICIPIO,STATUS, count(plaza)as NUM_PLAZAS 
                                    from view_plazas_conciliadas 
                                    group by HORAS, categoria, modelo,region, municipio,STATUS 
                                    ORDER BY CATEGORIA, REGION
     ELSE IF  @tipo = 6 
          select STATUS, CATEGORIA, MODELO, REGION, MUNICIPIO, count(plaza)as NUM_PLAZAS
                                    from view_plazas_conciliadas 
                                    group by STATUS, categoria, modelo,region, municipio 
                                    ORDER BY STATUS, REGION
     ELSE IF  @tipo = 7 
          select MODELO, CATEGORIA,  REGION, MUNICIPIO, STATUS, count(plaza)as NUM_PLAZAS
                                    from view_plazas_conciliadas 
                                    group by categoria, modelo,region, municipio, STATUS 
                                    ORDER BY STATUS, REGION
     ELSE IF  @tipo = 8 
          select REGION,CATEGORIA,MODELO, STATUS, count(plaza)as NUM_PLAZAS
                                    from view_plazas_conciliadas 
                                    group by REGION,CATEGORIA,MODELO, STATUS 
                                    ORDER BY REGION, STATUS 
      ELSE IF  @tipo = 9 
          select REGION, MUNICIPIO, CATEGORIA,MODELO, STATUS, count(plaza)as NUM_PLAZAS
                                    from view_plazas_conciliadas 
                                    group by REGION, MUNICIPIO, CATEGORIA,MODELO, STATUS 
                                    ORDER BY REGION, STATUS'
GO

GO
PRINT N'Creating [dbo].[spf_Actualiza_FechaSEP]'
GO
IF OBJECT_ID(N'[dbo].[spf_Actualiza_FechaSEP]', 'P') IS NULL
EXEC sp_executesql N'CREATE procedure [dbo].[spf_Actualiza_FechaSEP] (            
@id_emp as int,  
@id_documento as int,            
@accion as int          
)   
as  
begin
declare @id_emp_loc as int=@id_emp 
declare @id_documento_loc as int=@id_documento
declare @accion_loc as int=@accion
declare @fechaini as datetime  
declare @id_usuario as int  
declare @id_plaza_anterior as int  
declare @categoria as varchar (6)  
set @id_plaza_anterior=(select TOp 1 id_plaza from plazaempleados where id_emp=@id_emp_loc order by fecha desc)  
if(@id_plaza_anterior is null)  
begin  
set @id_plaza_anterior=(select TOp 1 id_plaza from empalme_plazaempleados where id_emp=@id_emp_loc order by fecha desc)  
end  
else  
begin  
set @id_plaza_anterior=(select TOp 1 id_plaza from plazaempleados where id_emp=@id_emp_loc order by fecha desc)  
end  
set @categoria= (select categoria from PlazaIEEPO where id_plaza=@id_plaza_anterior)  
set @fechaini=(select distinct fechaini from fup_documento_detalle where id_documento=@id_documento_loc and id_motivomovimiento in (5,322))  
set @id_usuario =(select id_usuario from fup_documentos where Id_Documento=@id_documento_loc)      
if (@accion_loc=0 and @categoria= '' AB001'') --- si el empleado venia cobrando honorarios y toma un 01 95 entra al hacer  
 begin           
   if(exists(select * from hfecha_alta_sep where id_emp=@id_emp_loc and Fecha_Alta_Sep=@fechaini))        
   begin  
   update hfecha_alta_sep set Fecha_Alta_Sep=@fechaini,fecha=@fechaini where id_emp=@id_emp_loc and Fecha_Alta_Sep=@fechaini          
   end  
else            
   begin            
        insert into HFecha_Alta_SEP values (@id_emp_loc,@fechaini,@fechaini,@id_usuario,getdate(),@id_documento_loc)          
   end                     
   
   if(exists(select * from HSeguro_Fovisste where id_emp=@id_emp_loc and fecha=@fechaini))            
      begin  
	     update HSeguro_Fovisste set Fecha=@fechaini where id_emp=@id_emp_loc and fecha=@fechaini          
      end  
	  else            
	  begin            
	       insert HSeguro_Fovisste values (@id_emp_loc,0,@fechaini,@id_usuario,GETDATE())          
      end            
end  
else   
 begin  
 delete HFecha_Alta_SEP where Fecha_Alta_SEP=@fechaini and fecha=@fechaini and id_user=@id_usuario and id_emp=@id_emp_loc  
 delete HSeguro_Fovisste where id_emp=@id_emp_loc and fecha=@fechaini and id_user=@id_usuario and id_rel=0  
 end  
end'
GO

GO
PRINT N'Creating [dbo].[SPF_Continuidad0620]'
GO
IF OBJECT_ID(N'[dbo].[SPF_Continuidad0620]', 'P') IS NULL
EXEC sp_executesql N'/*
	declare @id_emp int = 56456
	declare @fecha date = ''2012-01-01''
	declare @mov date = getdAte()
	declare @id_user int = 0
	declare @undo bit = 0
*/

/*
	create table AltaSepAux (
		id_emp int, fecha_alta_sep datetime,
		fecha datetime, id_user int,
		movimiento datetime, id int identity
	)
*/

CREATE procedure [dbo].[SPF_Continuidad0620] 
	@id_emp int = 0, @fecha date = ''1900-01-01'', 
	@mov date = ''1900-01-01'', @id_user int = 0,
	@id_plaza int = 0, @undo bit = 0
--with encryption
as
begin
	declare @tmp table (r int, id_emp int, id_plaza int, id_nodo int, desde datetime, hasta datetime, con varchar(1))
	declare @result table(fecha date)

	if @undo = 0
	begin
		;with noHono(id_plaza)
		as (
			select a.id_plaza
			from
				PlazaIEEPO a join (
					select id_plaza
					from plazaempleados
					where id_emp = @id_emp
				) b
				on a.Id_plaza = b.Id_plaza
			where 
				Categoria not like ''% AB%''
		),
		hpla(id_plaza, fecha, id_tipomotplazas, valor_idcampo)
		as (
			select a.id_plaza, fecha, Id_TipoMovPlazas, Valor_IdCampo
			from 
				hplazas a join noHono b
				on a.Id_plaza = b.Id_plaza
		),
		stsmot (r, id_plaza, fecha, sts, mot)
		as(
			select 
				ROW_NUMBER() over (order by a.id_plaza, a.fecha),
				a.id_plaza, a.fecha, a.valor_idcampo, b.valor_idcampo
			from hpla a join hpla b
			on a.id_plaza = b.id_plaza and a.fecha = b.fecha
			where a.id_tipomotplazas = 2 and b.id_tipomotplazas = 1
		),
		sts_mot_DH (id_plaza, sts, mot, desde, hasta)
		as (
			select 
				a.id_plaza, a.sts, a.mot, a.fecha, 
				case 
					when  day(b.fecha) in (1,16) then DATEADD(minute, -1, b.fecha)
					when b.fecha is null then ''9999-31-12T23:59:00''
					else b.fecha
				end
			from stsmot a left join stsmot b
			on a.id_plaza = b.id_plaza and a.r + 1 = b.r
		),
		pemp (r, id_emp, id_plaza, fecha, id_nodo)
		as (
			select 
				ROW_NUMBER() over (order by a.id_plaza, a.fecha),
				a.id_emp, a.id_plaza, a.fecha, a.id_nodo
			from 
				plazaempleados a join noHono b
				on a.Id_plaza = b.Id_plaza
		),
		pemp_dh(id_emp, id_plaza, id_nodo, desde, hasta)
		as (
			select
				a.id_emp, a.id_plaza, a.id_nodo, a.fecha, 
				case 
					when b.fecha is null then ''9999-31-12T23:59:00''
					when day(b.fecha) in (1, 16) then DATEADD(MINUTE, -1, b.fecha)
					else b.fecha
				end
			from
				pemp a join pemp b
				on a.id_plaza = b.id_plaza and a.r + 1 = b.r
		),
		pemp_filtro (r, id_emp, id_plaza, id_nodo, desde, hasta)
		as (
			select 
				ROW_NUMBER() over (order by id_plaza, desde), 
				id_emp, id_plaza, id_nodo, desde, hasta
			from pemp_dh
			where 
				desde < hasta
				and day(desde) in (1,16)
				and id_emp = @id_emp
		)
		insert into @tmp
		select 
			a.*, 
			case
				when DATEDIFF(minute, b.hasta, a.desde) = 1 then ''C''
				when b.hasta is null then ''C''
				else ''D''
			end con
		from pemp_filtro a left join pemp_filtro b
		on a.id_plaza = b.id_plaza and a.r = b.r + 1

		;with todos_cont(id_emp, id_plaza, id_nodo, desde, hasta, con)
		as (
			select id_emp, id_plaza, id_nodo, desde, hasta, con
			from @tmp
			where 
				id_plaza not in (
					select id_plaza
					from @tmp
					where con = ''D''
				)
				and (id_plaza != @id_plaza or desde != @fecha)
		),
		pla_acept(id_plaza)
		as (
			select top 1 id_plaza
			from todos_cont
			where 
				@fecha between desde and hasta
				or (
					ABS(DATEDIFF(day, hasta, @fecha)) = 0 and
					ABS(DATEDIFF(minute, hasta, @fecha)) = 1
				)
			group by id_plaza
		),
		res ( id_plaza, fecha)
		as (
			select id_plaza, desde
			from todos_cont
			where id_plaza = (select id_plaza from pla_acept)
		)
		insert into @result
		select min(fecha) from Res

		declare @fecha_sep datetime = (select fecha from @result)
		
		if 
			@fecha_sep is null 
			and not exists(select 1 from HFecha_Alta_SEP where @id_emp = id_emp and Fecha_Alta_SEP = @fecha) 
			and not exists(select 1 from HFecha_Alta_SEP where @id_emp = id_emp and fecha = cast(@mov as date))
		begin
			insert into HFecha_Alta_SEP (id_emp, Fecha_Alta_SEP, fecha, id_user, movimiento)
			values(@id_emp, @fecha, cast(@mov as date), @id_user, @mov)
		end
		else
		begin
			if exists(select 1 from HFecha_Alta_SEP where @id_emp = id_emp and fecha = cast(@mov as date) and movimiento != @mov)
			begin
				insert into AltaSepAux (id_emp, Fecha_Alta_SEP, fecha, id_user, movimiento)
				select id_emp, Fecha_Alta_SEP, fecha, id_user, movimiento
				from HFecha_Alta_SEP where @id_emp = id_emp and fecha = cast(@mov as date)

				update HFecha_Alta_SEP
				set Fecha_Alta_SEP = @fecha, id_user = @id_user, movimiento = @mov
				where id_emp = @id_emp and fecha = cast(@mov as date)
			end
		end
	end
	else
	begin
		if(not exists (select 1 from AltaSepAux where id_emp = @id_emp and fecha = cast(@mov as date)))
		begin
			delete from HFecha_Alta_SEP
			where 
				id_emp = @id_emp and
				Fecha_Alta_SEP = @fecha and
				fecha = cast(@mov as date) and
				id_user = @id_user and
				movimiento = @mov
		end
		else
		begin
			declare @id_user_ant int, @fecha_alta_ant datetime, @mov_ant datetime
			select top 1 
				@id_user_ant = id_user, @fecha_alta_ant = Fecha_Alta_Sep,
				@mov_ant = movimiento
			from AltaSepAux
			where id_emp = @id_emp and fecha = cast(@mov as date)
			order by id desc

			update HFecha_Alta_SEP
			set Fecha_Alta_SEP = @fecha_alta_ant, id_user = @id_user_ant, movimiento = @mov_ant
			where id_emp = @id_emp and fecha = cast(@mov as date)

			;with del as (
				select top 1 *
				from AltaSepAux
				where id_emp = @id_emp and fecha = cast(@mov as date)
				order by id desc
			)
			delete from del
		end
	end
end
/*
select a.id_plaza, fecha, Id_TipoMovPlazas, Valor_IdCampo
from 
	hplazas a join (
		select id_plaza
		from plazaempleados
		where id_emp = @id_emp
	) b
	on a.Id_plaza = b.Id_plaza
*/
/*
go

select max(idtabla) from systablas
select max(IdCampo) from syscampos


INSERT INTO systablas (idtabla, Nomtabla, NomLogTabla, Observaciones, IdBaseDatos, Visible, Orden, idTipoTabla,	IdClasifTabla, Editable, requerido, id_agrupador, esquemacatalogo, VistaDinamica, clase, id_SubAgrupador)
VALUES (1144, ''Continuidad0620'', ''SPF_upd_FechaSEP'', ''SP Para actualizar fecha de alta a la SEP'',0,	0, 209,	0, 1, 1, 0,	10,	1, 0, 75, 0);

INSERT INTO syscampos (idcampo, IdTabla, IdCondicion1, NomCampo, NomLogCampo, Tipo, Longitud, IdTablaLiga, Orden, Visible, VerInfo1, IdTipoCampo, Observaciones, idTipoDato, Llave, Obligatorio, Consecutivo, LongMinima, Favorito)
VALUES (6362, 1144, 1144, ''id_emp'', ''id_emp_SPF_upd_FechaSEP'', ''Numerico'',	8,	0,	1,	1,	0,	1,	''Id Empleado'',	3,	1,	1,	0,	0,	0)

INSERT INTO syscampos (idcampo, IdTabla, IdCondicion1, NomCampo, NomLogCampo, Tipo, Longitud, IdTablaLiga, Orden, Visible, VerInfo1, IdTipoCampo, Observaciones, idTipoDato, Llave, Obligatorio, Consecutivo, LongMinima, Favorito)
VALUES (6363, 1144, 1144, ''fecha'', ''fecha_SPF_upd_FechaSEP'', ''Fecha/Hora'',	10,	0,	2,	1,	0,	1,	''Desde del movimiento'',	135,	1,	1,	0,	0,	0)

INSERT INTO syscampos (idcampo, IdTabla, IdCondicion1, NomCampo, NomLogCampo, Tipo, Longitud, IdTablaLiga, Orden, Visible, VerInfo1, IdTipoCampo, Observaciones, idTipoDato, Llave, Obligatorio, Consecutivo, LongMinima, Favorito)
VALUES (6364, 1144, 1144, ''mov'', ''mov_SPF_upd_FechaSEP'', ''Fecha/Hora'',	10,	0,	3,	1,	0,	1,	''Fecha del movimiento'',	135,	1,	1,	0,	0,	0)

INSERT INTO syscampos (idcampo, IdTabla, IdCondicion1, NomCampo, NomLogCampo, Tipo, Longitud, IdTablaLiga, Orden, Visible, VerInfo1, IdTipoCampo, Observaciones, idTipoDato, Llave, Obligatorio, Consecutivo, LongMinima, Favorito)
VALUES (6365, 1144, 1144, ''id_user'', ''id_user_SPF_upd_FechaSEP'', ''Numerico'',	8,	0,	4,	1,	0,	1,	''Id Usuario'',	3,	1,	1,	0,	0,	0)

INSERT INTO syscampos (idcampo, IdTabla, IdCondicion1, NomCampo, NomLogCampo, Tipo, Longitud, IdTablaLiga, Orden, Visible, VerInfo1, IdTipoCampo, Observaciones, idTipoDato, Llave, Obligatorio, Consecutivo, LongMinima, Favorito)
VALUES (6366, 1144, 1144, ''id_plaza'', ''id_plaza_SPF_upd_FechaSEP'', ''Numerico'',	8,	0,	5,	1,	0,	1,	''Id Plaza'',	3,	1,	1,	0,	0,	0)

select * from SysTipoDato

select * from importacionCatalogos 
insert into importacionCatalogos ( idCatalogo, catalogo, idTipoCatalogo, idTabla) 
VALUES (907, ''SPF_upd_FechaSEP'', 12, 1144)

select * from SYSCAMPOS where IdTabla = 1144

--delete from SYSCAMPOS where IdTabla = 1146
*/'
GO

GO
PRINT N'Creating [dbo].[sp_DiferenciasPrimaAntiguedad]'
GO
IF OBJECT_ID(N'[dbo].[sp_DiferenciasPrimaAntiguedad]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		Noe Ramirez Ramos
-- Create date: 22/10/2013
-- Description:	Obtiene las promas de antiguedad entre dos periodos
-- =============================================
CREATE PROCEDURE [dbo].[sp_DiferenciasPrimaAntiguedad]
@fecharefINI datetime, @fechamovINI datetime, @fecharefFIN datetime, @fechamovFIN datetime
WITH EXEC AS CALLER
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
    

select isnull(ini.id_plaza,fin.id_plaza) id_plaza,isnull(ini.id_emp,fin.id_emp) id_emp, e.RFC, p.PlazaIEEPO, ini.id_rel as id_rel_INI, ini.fecha as fecha_INI,ini.movimiento as movimiento_INI, ini.ccosto as PrimaAtig_INI, ini.descr as Descr_INI, ini.statusb as Status_INI,
fin.id_rel as Id_Rel_FIN, fin.fecha as Fecha_FIN,fin.movimiento as movimiento_FIN, fin.ccosto as PrimaAntig_FIN, fin.descr as Descr_FIN, fin.statusb as Status_FIN
from (
  select * from (
    select distinct id_plaza,z1.id_emp,id_quinquenios_docentes as id_rel,@fecharefINI as fecha,1 as id_user,@fechamovINI as movimiento 
    from (
      select * from
        (
          select id_emp,
                --case when actualizado>@fecharef then diferencia-1 else diferencia end as antiguedad,
      	case when diferencia>56 then diferencia-(diferencia-56) else diferencia end as antiguedad, 
                Fecha_Prima_Antiguedad
          from (select t.id_emp,Fecha_Prima_Antiguedad
                        --,datediff(yy,Fecha_Prima_Antiguedad,@fecharef) as diferencia
                        ,dbo.RegresaDiferenciaAños(dateadd(mi,+1,dbo.anioQuincenaToFecha(dbo.fechaToAnioQuincena(fecha_prima_antiguedad), 1)),@fecharefINI) as diferencia
                        --,dateadd(yy,datediff(yy,Fecha_Prima_Antiguedad,@fecharef) ,Fecha_Prima_Antiguedad) as actualizado
                from 
                HFecha_Prima_Antiguedad T inner join
                (select id_emp, max(fecha) as fecha 
                  from HFecha_Prima_Antiguedad 
                  where fecha<=@fecharefINI group by id_emp) h
                on t.id_emp=h.id_emp and t.fecha=h.fecha
                )a --where case when actualizado>@fecharef then diferencia-1 else diferencia end>0
        ) a inner join tquinquenios_docentes t on t.años=a.antiguedad
      where t.Tipo = ''D''-----
      union all
      select * 
      from
      (
        select id_emp,
        --diferencia as antiguedad,
      	case when diferencia>56 then diferencia-(diferencia-56) else diferencia end as antiguedad, 
        Fecha_Prima_Antiguedad
        from
        (
          select t.id_emp,Fecha_Prima_Antiguedad
            ,case when month(Fecha_Prima_Antiguedad) >= 2 and month(Fecha_Prima_Antiguedad) < 9 Then 
                    cast(cast(Year(Fecha_Prima_Antiguedad) as varchar(4)) + ''/09/01'' as datetime)
                  Else Case When month(Fecha_Prima_Antiguedad) = 1 Then
                        cast(cast(Year(Fecha_Prima_Antiguedad) as varchar(4)) + ''/02/01'' as datetime)
                      Else
                        cast(cast(Year(Fecha_Prima_Antiguedad)+1 as varchar(4)) + ''/02/01'' as datetime)
                  End
              End as FechaCumple
            ,case when month(Fecha_Prima_Antiguedad) >= 2 and month(Fecha_Prima_Antiguedad) < 9 Then 
                    dbo.RegresaDiferenciaAños(cast(cast(Year(Fecha_Prima_Antiguedad) as varchar(4)) + ''/09/01'' as datetime),@fecharefINI) 
                  Else Case When month(Fecha_Prima_Antiguedad) = 1 Then
                        dbo.RegresaDiferenciaAños(cast(cast(Year(Fecha_Prima_Antiguedad) as varchar(4)) + ''/02/01'' as datetime),@fecharefINI) 
                      Else
                        dbo.RegresaDiferenciaAños(cast(cast(Year(Fecha_Prima_Antiguedad)+1 as varchar(4)) + ''/02/01'' as datetime),@fecharefINI) 
                  End
              End as diferencia
            ,dateadd(yy,case when month(Fecha_Prima_Antiguedad) >= 2 and month(Fecha_Prima_Antiguedad) < 9 Then 
                    dbo.RegresaDiferenciaAños(cast(cast(Year(Fecha_Prima_Antiguedad) as varchar(4)) + ''/09/01'' as datetime),@fecharefINI) 
                  Else Case When month(Fecha_Prima_Antiguedad) = 1 Then
                        dbo.RegresaDiferenciaAños(cast(cast(Year(Fecha_Prima_Antiguedad) as varchar(4)) + ''/02/01'' as datetime),@fecharefINI) 
                      Else
                        dbo.RegresaDiferenciaAños(cast(cast(Year(Fecha_Prima_Antiguedad)+1 as varchar(4)) + ''/02/01'' as datetime),@fecharefINI)
                  End
              End,case when month(Fecha_Prima_Antiguedad) >= 2 and month(Fecha_Prima_Antiguedad) < 9 Then 
                    cast(cast(Year(Fecha_Prima_Antiguedad) as varchar(4)) + ''/09/01'' as datetime)
                  Else Case When month(Fecha_Prima_Antiguedad) = 1 Then
                        cast(cast(Year(Fecha_Prima_Antiguedad) as varchar(4)) + ''/02/01'' as datetime)
                      Else
                        cast(cast(Year(Fecha_Prima_Antiguedad)+1 as varchar(4)) + ''/02/01'' as datetime)
                  End
              End) as actualizado
          from 
            HFecha_Prima_Antiguedad T inner join
            (
              select id_emp, max(fecha) as fecha 
              from HFecha_Prima_Antiguedad 
              where fecha<=@fecharefINI group by id_emp
            ) h
            on t.id_emp=h.id_emp and t.fecha=h.fecha
        ) a 
      ) a 
      inner join tquinquenios_docentes t on t.años=a.antiguedad
      where t.Tipo=''A''---
    ) z1
    inner join (
      select  m.id_plaza,m.id_emp,tipo from
      (select t.id_plaza,id_emp from
      plazaempleados T inner join
      (select id_plaza, max(fecha) as fecha  from plazaempleados where fecha<=@fecharefINI group by id_plaza)h
      on t.id_plaza=h.id_plaza and t.fecha=h.fecha where id_emp<>0)M
      inner join
      (select t.id_plaza,tipo from
      htabulador_se_cat_puesto T inner join
      (select id_plaza, max(fecha) as fecha  from htabulador_se_cat_puesto where fecha<=@fecharefINI group by id_plaza)h
      on t.id_plaza=h.id_plaza and t.fecha=h.fecha
      inner join
      (select case when tmodelo_se_id_modelo_se in (2,3,9) then ''A'' else ''D'' end as tipo,id_tabulador_se_cat_puesto 
      from ttabulador_se_cat_puesto where tmodelo_se_id_modelo_se in (1,2,3,4,5,6,9))c on
      c.id_tabulador_se_cat_puesto=id_rel
      )n on m.id_plaza=n.id_plaza 
    ) z2 on z1.id_emp=z2.id_emp and z1.tipo=z2.tipo
    where z1.tipo = ''A''
    union all
    select distinct id_plaza,z1.id_emp,id_quinquenios_docentes as id_rel,@fecharefINI as fecha,1 as id_user,@fechamovINI as movimiento 
    from (
      select * from
        (
          select id_emp,
                --case when actualizado>@fecharef then diferencia-1 else diferencia end as antiguedad,
      	case when diferencia>56 then diferencia-(diferencia-56) else diferencia end as antiguedad, 
                Fecha_Prima_Antiguedad
          from (select t.id_emp,Fecha_Prima_Antiguedad
                        --,datediff(yy,Fecha_Prima_Antiguedad,@fecharef) as diferencia
                        ,dbo.RegresaDiferenciaAños(dateadd(mi,+1,dbo.anioQuincenaToFecha(dbo.fechaToAnioQuincena(fecha_prima_antiguedad), 1)),@fecharefINI) as diferencia
                        --,dateadd(yy,datediff(yy,Fecha_Prima_Antiguedad,@fecharef) ,Fecha_Prima_Antiguedad) as actualizado
                from 
                HFecha_Prima_Antiguedad T inner join
                (select id_emp, max(fecha) as fecha 
                  from HFecha_Prima_Antiguedad 
                  where fecha<=@fecharefINI group by id_emp) h
                on t.id_emp=h.id_emp and t.fecha=h.fecha
                )a --where case when actualizado>@fecharef then diferencia-1 else diferencia end>0
        ) a inner join tquinquenios_docentes t on t.años=a.antiguedad
      where t.Tipo = ''D''-----
      union all
      select * 
      from
      (
        select id_emp,
        --diferencia as antiguedad,
      	case when diferencia>56 then diferencia-(diferencia-56) else diferencia end as antiguedad, 
        Fecha_Prima_Antiguedad
        from
        (
          select t.id_emp,Fecha_Prima_Antiguedad
            ,case when month(Fecha_Prima_Antiguedad) >= 2 and month(Fecha_Prima_Antiguedad) < 9 Then 
                    cast(cast(Year(Fecha_Prima_Antiguedad) as varchar(4)) + ''/09/01'' as datetime)
                  Else Case When month(Fecha_Prima_Antiguedad) = 1 Then
                        cast(cast(Year(Fecha_Prima_Antiguedad) as varchar(4)) + ''/02/01'' as datetime)
                      Else
                        cast(cast(Year(Fecha_Prima_Antiguedad)+1 as varchar(4)) + ''/02/01'' as datetime)
                  End
              End as FechaCumple
            ,case when month(Fecha_Prima_Antiguedad) >= 2 and month(Fecha_Prima_Antiguedad) < 9 Then 
                    dbo.RegresaDiferenciaAños(cast(cast(Year(Fecha_Prima_Antiguedad) as varchar(4)) + ''/09/01'' as datetime),@fecharefINI) 
                  Else Case When month(Fecha_Prima_Antiguedad) = 1 Then
                        dbo.RegresaDiferenciaAños(cast(cast(Year(Fecha_Prima_Antiguedad) as varchar(4)) + ''/02/01'' as datetime),@fecharefINI) 
                      Else
                        dbo.RegresaDiferenciaAños(cast(cast(Year(Fecha_Prima_Antiguedad)+1 as varchar(4)) + ''/02/01'' as datetime),@fecharefINI) 
                  End
              End as diferencia
            ,dateadd(yy,case when month(Fecha_Prima_Antiguedad) >= 2 and month(Fecha_Prima_Antiguedad) < 9 Then 
                    dbo.RegresaDiferenciaAños(cast(cast(Year(Fecha_Prima_Antiguedad) as varchar(4)) + ''/09/01'' as datetime),@fecharefINI) 
                  Else Case When month(Fecha_Prima_Antiguedad) = 1 Then
                        dbo.RegresaDiferenciaAños(cast(cast(Year(Fecha_Prima_Antiguedad) as varchar(4)) + ''/02/01'' as datetime),@fecharefINI) 
                      Else
                        dbo.RegresaDiferenciaAños(cast(cast(Year(Fecha_Prima_Antiguedad)+1 as varchar(4)) + ''/02/01'' as datetime),@fecharefINI)
                  End
              End,case when month(Fecha_Prima_Antiguedad) >= 2 and month(Fecha_Prima_Antiguedad) < 9 Then 
                    cast(cast(Year(Fecha_Prima_Antiguedad) as varchar(4)) + ''/09/01'' as datetime)
                  Else Case When month(Fecha_Prima_Antiguedad) = 1 Then
                        cast(cast(Year(Fecha_Prima_Antiguedad) as varchar(4)) + ''/02/01'' as datetime)
                      Else
                        cast(cast(Year(Fecha_Prima_Antiguedad)+1 as varchar(4)) + ''/02/01'' as datetime)
                  End
              End) as actualizado
          from 
            HFecha_Prima_Antiguedad T inner join
            (
              select id_emp, max(fecha) as fecha 
              from HFecha_Prima_Antiguedad 
              where fecha<=@fecharefINI group by id_emp
            ) h
            on t.id_emp=h.id_emp and t.fecha=h.fecha
        ) a 
      ) a 
      inner join tquinquenios_docentes t on t.años=a.antiguedad
      where t.Tipo=''A''---
    ) z1
    inner join (
      select  m.id_plaza,m.id_emp,tipo from
      (select t.id_plaza,id_emp from
      plazaempleados T inner join
      (select id_plaza, max(fecha) as fecha  from plazaempleados where fecha<=@fecharefINI group by id_plaza)h
      on t.id_plaza=h.id_plaza and t.fecha=h.fecha where id_emp<>0)M
      inner join
      (select t.id_plaza,tipo from
      htabulador_se_cat_puesto T inner join
      (select id_plaza, max(fecha) as fecha  from htabulador_se_cat_puesto where fecha<=@fecharefINI group by id_plaza)h
      on t.id_plaza=h.id_plaza and t.fecha=h.fecha
      inner join
      (select case when tmodelo_se_id_modelo_se in (2,3,9) then ''A'' else ''D'' end as tipo,id_tabulador_se_cat_puesto 
      from ttabulador_se_cat_puesto where tmodelo_se_id_modelo_se in (1,2,3,4,5,6,9))c on
      c.id_tabulador_se_cat_puesto=id_rel
      )n on m.id_plaza=n.id_plaza 
    ) z2 on z1.id_emp=z2.id_emp and z1.tipo=z2.tipo
    where z1.tipo = ''D''
  ) p 
  inner join tccosto t on t.id_ccosto = p.id_rel
) ini  ---------------------------------------------------------------Segundo periodo--------------------------------------------------------
full join (
select * from (
  select distinct id_plaza,z1.id_emp,id_quinquenios_docentes as id_rel,@fecharefFIN as fecha,1 as id_user,@fechamovFIN as movimiento 
  from (
    select * from
      (
        select id_emp,
              --case when actualizado>@fecharef then diferencia-1 else diferencia end as antiguedad,
    	case when diferencia>56 then diferencia-(diferencia-56) else diferencia end as antiguedad, 
              Fecha_Prima_Antiguedad
        from (select t.id_emp,Fecha_Prima_Antiguedad
                      --,datediff(yy,Fecha_Prima_Antiguedad,@fecharef) as diferencia
                      ,dbo.RegresaDiferenciaAños(dateadd(mi,+1,dbo.anioQuincenaToFecha(dbo.fechaToAnioQuincena(fecha_prima_antiguedad), 1)),@fecharefFIN) as diferencia
                      --,dateadd(yy,datediff(yy,Fecha_Prima_Antiguedad,@fecharef) ,Fecha_Prima_Antiguedad) as actualizado
              from 
              HFecha_Prima_Antiguedad T inner join
              (select id_emp, max(fecha) as fecha 
                from HFecha_Prima_Antiguedad 
                where fecha<=@fecharefFIN group by id_emp) h
              on t.id_emp=h.id_emp and t.fecha=h.fecha
              )a --where case when actualizado>@fecharef then diferencia-1 else diferencia end>0
      ) a inner join tquinquenios_docentes t on t.años=a.antiguedad
    where t.Tipo = ''D''-----
    union all
    select * 
    from
    (
      select id_emp,
      --diferencia as antiguedad,
    	case when diferencia>56 then diferencia-(diferencia-56) else diferencia end as antiguedad, 
      Fecha_Prima_Antiguedad
      from
      (
        select t.id_emp,Fecha_Prima_Antiguedad
          ,case when month(Fecha_Prima_Antiguedad) >= 2 and month(Fecha_Prima_Antiguedad) < 9 Then 
                  cast(cast(Year(Fecha_Prima_Antiguedad) as varchar(4)) + ''/09/01'' as datetime)
                Else Case When month(Fecha_Prima_Antiguedad) = 1 Then
                      cast(cast(Year(Fecha_Prima_Antiguedad) as varchar(4)) + ''/02/01'' as datetime)
                    Else
                      cast(cast(Year(Fecha_Prima_Antiguedad)+1 as varchar(4)) + ''/02/01'' as datetime)
                End
            End as FechaCumple
          ,case when month(Fecha_Prima_Antiguedad) >= 2 and month(Fecha_Prima_Antiguedad) < 9 Then 
                  dbo.RegresaDiferenciaAños(cast(cast(Year(Fecha_Prima_Antiguedad) as varchar(4)) + ''/09/01'' as datetime),@fecharefFIN) 
                Else Case When month(Fecha_Prima_Antiguedad) = 1 Then
                      dbo.RegresaDiferenciaAños(cast(cast(Year(Fecha_Prima_Antiguedad) as varchar(4)) + ''/02/01'' as datetime),@fecharefFIN) 
                    Else
                      dbo.RegresaDiferenciaAños(cast(cast(Year(Fecha_Prima_Antiguedad)+1 as varchar(4)) + ''/02/01'' as datetime),@fecharefFIN) 
                End
            End as diferencia
          ,dateadd(yy,case when month(Fecha_Prima_Antiguedad) >= 2 and month(Fecha_Prima_Antiguedad) < 9 Then 
                  dbo.RegresaDiferenciaAños(cast(cast(Year(Fecha_Prima_Antiguedad) as varchar(4)) + ''/09/01'' as datetime),@fecharefFIN) 
                Else Case When month(Fecha_Prima_Antiguedad) = 1 Then
                      dbo.RegresaDiferenciaAños(cast(cast(Year(Fecha_Prima_Antiguedad) as varchar(4)) + ''/02/01'' as datetime),@fecharefFIN) 
                    Else
                      dbo.RegresaDiferenciaAños(cast(cast(Year(Fecha_Prima_Antiguedad)+1 as varchar(4)) + ''/02/01'' as datetime),@fecharefFIN)
                End
            End,case when month(Fecha_Prima_Antiguedad) >= 2 and month(Fecha_Prima_Antiguedad) < 9 Then 
                  cast(cast(Year(Fecha_Prima_Antiguedad) as varchar(4)) + ''/09/01'' as datetime)
                Else Case When month(Fecha_Prima_Antiguedad) = 1 Then
                      cast(cast(Year(Fecha_Prima_Antiguedad) as varchar(4)) + ''/02/01'' as datetime)
                    Else
                      cast(cast(Year(Fecha_Prima_Antiguedad)+1 as varchar(4)) + ''/02/01'' as datetime)
                End
            End) as actualizado
        from 
          HFecha_Prima_Antiguedad T inner join
          (
            select id_emp, max(fecha) as fecha 
            from HFecha_Prima_Antiguedad 
            where fecha<=@fecharefFIN group by id_emp
          ) h
          on t.id_emp=h.id_emp and t.fecha=h.fecha
      ) a 
    ) a 
    inner join tquinquenios_docentes t on t.años=a.antiguedad
    where t.Tipo=''A''---
  ) z1
  inner join (
    select  m.id_plaza,m.id_emp,tipo from
    (select t.id_plaza,id_emp from
    plazaempleados T inner join
    (select id_plaza, max(fecha) as fecha  from plazaempleados where fecha<=@fecharefFIN group by id_plaza)h
    on t.id_plaza=h.id_plaza and t.fecha=h.fecha where id_emp<>0)M
    inner join
    (select t.id_plaza,tipo from
    htabulador_se_cat_puesto T inner join
    (select id_plaza, max(fecha) as fecha  from htabulador_se_cat_puesto where fecha<=@fecharefFIN group by id_plaza)h
    on t.id_plaza=h.id_plaza and t.fecha=h.fecha
    inner join
    (select case when tmodelo_se_id_modelo_se in (2,3,9) then ''A'' else ''D'' end as tipo,id_tabulador_se_cat_puesto 
    from ttabulador_se_cat_puesto where tmodelo_se_id_modelo_se in (1,2,3,4,5,6,9))c on
    c.id_tabulador_se_cat_puesto=id_rel
    )n on m.id_plaza=n.id_plaza 
  ) z2 on z1.id_emp=z2.id_emp and z1.tipo=z2.tipo
  where z1.tipo = ''A''
  union all
  select distinct id_plaza,z1.id_emp,id_quinquenios_docentes as id_rel,@fecharefFIN as fecha,1 as id_user,@fechamovFIN as movimiento 
  from (
    select * from
      (
        select id_emp,
              --case when actualizado>@fecharef then diferencia-1 else diferencia end as antiguedad,
    	case when diferencia>56 then diferencia-(diferencia-56) else diferencia end as antiguedad, 
              Fecha_Prima_Antiguedad
        from (select t.id_emp,Fecha_Prima_Antiguedad
                      --,datediff(yy,Fecha_Prima_Antiguedad,@fecharef) as diferencia
                      ,dbo.RegresaDiferenciaAños(dateadd(mi,+1,dbo.anioQuincenaToFecha(dbo.fechaToAnioQuincena(fecha_prima_antiguedad), 1)),@fecharefFIN) as diferencia
                      --,dateadd(yy,datediff(yy,Fecha_Prima_Antiguedad,@fecharef) ,Fecha_Prima_Antiguedad) as actualizado
              from 
              HFecha_Prima_Antiguedad T inner join
              (select id_emp, max(fecha) as fecha 
                from HFecha_Prima_Antiguedad 
                where fecha<=@fecharefFIN group by id_emp) h
              on t.id_emp=h.id_emp and t.fecha=h.fecha
              )a --where case when actualizado>@fecharef then diferencia-1 else diferencia end>0
      ) a inner join tquinquenios_docentes t on t.años=a.antiguedad
    where t.Tipo = ''D''-----
    union all
    select * 
    from
    (
      select id_emp,
      --diferencia as antiguedad,
    	case when diferencia>56 then diferencia-(diferencia-56) else diferencia end as antiguedad, 
      Fecha_Prima_Antiguedad
      from
      (
        select t.id_emp,Fecha_Prima_Antiguedad
          ,case when month(Fecha_Prima_Antiguedad) >= 2 and month(Fecha_Prima_Antiguedad) < 9 Then 
                  cast(cast(Year(Fecha_Prima_Antiguedad) as varchar(4)) + ''/09/01'' as datetime)
                Else Case When month(Fecha_Prima_Antiguedad) = 1 Then
                      cast(cast(Year(Fecha_Prima_Antiguedad) as varchar(4)) + ''/02/01'' as datetime)
                    Else
                      cast(cast(Year(Fecha_Prima_Antiguedad)+1 as varchar(4)) + ''/02/01'' as datetime)
                End
            End as FechaCumple
          ,case when month(Fecha_Prima_Antiguedad) >= 2 and month(Fecha_Prima_Antiguedad) < 9 Then 
                  dbo.RegresaDiferenciaAños(cast(cast(Year(Fecha_Prima_Antiguedad) as varchar(4)) + ''/09/01'' as datetime),@fecharefFIN) 
                Else Case When month(Fecha_Prima_Antiguedad) = 1 Then
                      dbo.RegresaDiferenciaAños(cast(cast(Year(Fecha_Prima_Antiguedad) as varchar(4)) + ''/02/01'' as datetime),@fecharefFIN) 
                    Else
                      dbo.RegresaDiferenciaAños(cast(cast(Year(Fecha_Prima_Antiguedad)+1 as varchar(4)) + ''/02/01'' as datetime),@fecharefFIN) 
                End
            End as diferencia
          ,dateadd(yy,case when month(Fecha_Prima_Antiguedad) >= 2 and month(Fecha_Prima_Antiguedad) < 9 Then 
                  dbo.RegresaDiferenciaAños(cast(cast(Year(Fecha_Prima_Antiguedad) as varchar(4)) + ''/09/01'' as datetime),@fecharefFIN) 
                Else Case When month(Fecha_Prima_Antiguedad) = 1 Then
                      dbo.RegresaDiferenciaAños(cast(cast(Year(Fecha_Prima_Antiguedad) as varchar(4)) + ''/02/01'' as datetime),@fecharefFIN) 
                    Else
                      dbo.RegresaDiferenciaAños(cast(cast(Year(Fecha_Prima_Antiguedad)+1 as varchar(4)) + ''/02/01'' as datetime),@fecharefFIN)
                End
            End,case when month(Fecha_Prima_Antiguedad) >= 2 and month(Fecha_Prima_Antiguedad) < 9 Then 
                  cast(cast(Year(Fecha_Prima_Antiguedad) as varchar(4)) + ''/09/01'' as datetime)
                Else Case When month(Fecha_Prima_Antiguedad) = 1 Then
                      cast(cast(Year(Fecha_Prima_Antiguedad) as varchar(4)) + ''/02/01'' as datetime)
                    Else
                      cast(cast(Year(Fecha_Prima_Antiguedad)+1 as varchar(4)) + ''/02/01'' as datetime)
                End
            End) as actualizado
        from 
          HFecha_Prima_Antiguedad T inner join
          (
            select id_emp, max(fecha) as fecha 
            from HFecha_Prima_Antiguedad 
            where fecha<=@fecharefFIN group by id_emp
          ) h
          on t.id_emp=h.id_emp and t.fecha=h.fecha
      ) a 
    ) a 
    inner join tquinquenios_docentes t on t.años=a.antiguedad
    where t.Tipo=''A''---
  ) z1
  inner join (
    select  m.id_plaza,m.id_emp,tipo from
    (select t.id_plaza,id_emp from
    plazaempleados T inner join
    (select id_plaza, max(fecha) as fecha  from plazaempleados where fecha<=@fecharefFIN group by id_plaza)h
    on t.id_plaza=h.id_plaza and t.fecha=h.fecha where id_emp<>0)M
    inner join
    (select t.id_plaza,tipo from
    htabulador_se_cat_puesto T inner join
    (select id_plaza, max(fecha) as fecha  from htabulador_se_cat_puesto where fecha<=@fecharefFIN group by id_plaza)h
    on t.id_plaza=h.id_plaza and t.fecha=h.fecha
    inner join
    (select case when tmodelo_se_id_modelo_se in (2,3,9) then ''A'' else ''D'' end as tipo,id_tabulador_se_cat_puesto 
    from ttabulador_se_cat_puesto where tmodelo_se_id_modelo_se in (1,2,3,4,5,6,9))c on
    c.id_tabulador_se_cat_puesto=id_rel
    )n on m.id_plaza=n.id_plaza 
  ) z2 on z1.id_emp=z2.id_emp and z1.tipo=z2.tipo
  where z1.tipo = ''D''
) p 
inner join tccosto t on t.id_ccosto = p.id_rel
) fin on ini.id_plaza = fin.id_plaza
inner join Empleados e on e.id_emp = isnull(ini.id_emp,fin.id_emp)
inner join Plazaieepo p on p.id_plaza = isnull(ini.id_plaza,fin.id_plaza)
order by case when ini.ccosto <> fin.ccosto then ''C'' else '''' end desc, ini.ccosto

    
    
    
END'
GO

GO
PRINT N'Creating [dbo].[SP_GenDeta]'
GO
IF OBJECT_ID(N'[dbo].[SP_GenDeta]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[SP_GenDeta]
	-- Add the parameters for the stored procedure here
	@IDPERIODO INT = 0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	--select a2.Folio  as cheque, b.resultado as concepto,a.Pesos, b.tipo as perded,  a.Desde, a.Hasta, d.plazaieepo, e.leyenda4 as tippag,
	--a.Id_Emp, a.id_plaza, a.Id_Periodo, a.Id_ProcesoNomina, a.id_AgrupPeriodos, a.id_concepto  from histpagos_Agrupadores a  
 --           inner join conceptos b on a.id_concepto=b.id_concepto inner join plazaieepo d 
 --           on a.id_plaza=d.id_plaza inner join calennomina e on a.id_periodo=e.id_periodo 
 --           inner join folio_recibos a2 on a.id_emp = a2.Id_Emp 
 --           and a.id_plaza =a2.Id_Plaza and a.Id_Periodo = a2.Id_Periodo and a2.Id_Recibo = 14         
 --           where a.id_agrupperiodos=@IDPERIODO  
 --           and a.id_concepto in (1510,1518,1520,1521,1565,1566,1568,1578,1579,1580,1581,1582,1583,1584,2314,2315,2316,2404,2408,2409,2419,2448,2458,2465,2475,2478,2480,2482,2484) 
 --           order by a.id_plaza, a.Id_Emp, a.Id_Periodo, b.resultado  
 
 select a2.Folio  as cheque, b.resultado as concepto,a.Pesos, b.tipo as perded,  a.Desde, a.Hasta, d.plazaieepo, e.leyenda4 as tippag,
 a.Id_Emp, a.id_plaza, a.Id_Periodo, a.Id_ProcesoNomina, a.id_AgrupPeriodos, a.id_concepto, f.id_nodo, nect.Programa, snect.Subprograma
from histpagos_Agrupadores a  
     inner join conceptos b on a.id_concepto=b.id_concepto inner join plazaieepo d 
           on a.id_plaza=d.id_plaza inner join calennomina e on a.id_periodo=e.id_periodo 
     inner join folio_recibos a2 on a.id_emp = a2.Id_Emp and a.id_plaza =a2.Id_Plaza and a.Id_Periodo = a2.Id_Periodo and a2.Id_Recibo = 14 
     inner join (select p.id_plaza,p.id_nodo from plazaempleados p 
     inner join  (select id_plaza,Max(Fecha) as FechaMax, Max(Movimiento) as MovMax   
                   from plazaEmpleados  where fecha <= getdate()  group by id_plaza ) hp  
                  on p.id_plaza = hp.id_plaza and hp.MovMax = p.Movimiento and hp.FechaMax = p.Fecha) f on a.id_plaza=f.id_plaza             
     inner join (select rct.id_nodo, rct.id_rel, tct.Programa from RCT_Programa rct
     inner join TCT_Programa tct on rct.id_rel  = tct.id_CT_Programa 
       where rct.id_nodo in (select p.id_nodo  from plazaempleados p inner join  (select id_plaza,Max(Fecha) as FechaMax, Max(Movimiento) as MovMax   
    from plazaEmpleados  where fecha <= getdate()  group by id_plaza ) hp  
    on p.id_plaza = hp.id_plaza and hp.MovMax = p.Movimiento and hp.FechaMax = p.Fecha)) nect on f.Id_Nodo = nect.id_nodo               
    inner join (select srct.id_nodo, srct.id_rel, stct.Subprograma  from RCT_subPrograma srct
    inner join TCT_subPrograma stct on srct.id_rel  = stct.id_CT_Subprograma 
       where srct.id_nodo in (select p.id_nodo  from plazaempleados p inner join  (select id_plaza,Max(Fecha) as FechaMax, Max(Movimiento) as MovMax   
    from plazaEmpleados  where fecha <= getdate()  group by id_plaza ) hp  
    on p.id_plaza = hp.id_plaza and hp.MovMax = p.Movimiento and hp.FechaMax = p.Fecha)) snect on f.Id_Nodo = snect.id_nodo               
    where a.id_agrupperiodos=@IDPERIODO  
            and a.id_concepto in (1510,1518,1520,1521,1565,1566,1568,1578,1579,1580,1581,1582,1583,1584,2314,2315,2316,2404,2408,2409,2419,2448,2458,2465,2475,2478,2480,2482,2484) 
            order by a.id_plaza, a.Id_Emp, a.Id_Periodo, b.resultado               

END
'
GO

GO
PRINT N'Creating [dbo].[SP_Movimientos_plaza]'
GO
IF OBJECT_ID(N'[dbo].[SP_Movimientos_plaza]', 'P') IS NULL
EXEC sp_executesql N'CREATE procedure [dbo].[SP_Movimientos_plaza]
as
select fd.Folio,e.RFC,(rtrim(e.Nombre)) +'' ''+ (rtrim(e.ApPaterno)) +'' '' + (rtrim(e.ApMaterno)) as Nombre,
pi.PlazaIEEPO,ftm.Clave as Tipo,fmm.Clave as Motivo,dbo.fechaToAnioQuincena(fdd.fechaini) as Desde, 
Hasta=case when dbo.fechaToAnioQuincena(fdd.fechaini)=dbo.fechaToAnioQuincena(fdd.fechafin) then ''999924'' else 
dbo.fechaToAnioQuincena(fdd.fechafin) end,tn.Descripcion as Nivel_Educativo,fid.Centro_Trabajo,fid.No_Relacion
from fup_documentos fd
inner join empleados e on fd.Id_Emp = e.Id_Emp
inner join fup_documento_detalle fdd on fd.Id_Documento = fdd.Id_Documento
inner join plazas p on fdd.Id_Plaza = p.Id_plaza
inner join plazaieepo pi on fdd.Id_Plaza = pi.Id_plaza
inner join usuarios u on fd.Id_Usuario = u.Id_Usuario
inner join FUP_Informacion_Documentos fid on fd.Id_Documento = fid.Id_Documento
inner join CalenNomina c on fid.Id_Periodo = c.Id_Periodo
inner join FUP_MotivoMovimiento fmm on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
inner join tniveleducativo tn on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
where e.id_cia=2 and fd.Id_Estatus in (2) and fmm.Id_MotivoMovimiento=5 and c.año=2015 and c.numero>=1
and pi.categoria=''A01806''
order by tn.Descripcion '
GO

GO
PRINT N'Creating [dbo].[spGuardaRelUsuarioRecalculo]'
GO
IF OBJECT_ID(N'[dbo].[spGuardaRelUsuarioRecalculo]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		Nramirez
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spGuardaRelUsuarioRecalculo]
	-- Add the parameters for the stored procedure here
	 @idUsuario int, @idEmp int, @idPlaza int,@idPeriodo int,@idRecalculo int
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	
	if  not exists (select 1 from RelAjusteRetroUsuario where id_usuario = @idUsuario and id_plaza = @idPlaza and id_emp = @idEmp and id_periodo = @idPeriodo and id_referencia = @idRecalculo)
		begin 
			insert into RelAjusteRetroUsuario (id_usuario,Id_Emp,Id_plaza,Id_periodo,Id_referencia,fecha)
			values(@idUsuario,@idEmp,@idPlaza,@idPeriodo,@idRecalculo,getdate())
			select ''correcto'' as resultado
		end
	else
		select ''Ya existe la relacion'' as resultado
	
END'
GO

GO
PRINT N'Creating [dbo].[asf_licencias_eleccion_popular]'
GO
IF OBJECT_ID(N'[dbo].[asf_licencias_eleccion_popular]', 'P') IS NULL
EXEC sp_executesql N'--Procedimiento que permite obtener los casos de licencias por comisión sindical
--mismas están confrontadas entre SIA y MDP

CREATE procedure [dbo].[asf_licencias_eleccion_popular] as
select ''R20'' AS CV_UR,''OAXACA'' AS ENTIDAD,1013 AS CPP,''FONE'' AS NOM_FONDO,e.RFC,e.CURP,e.NOMBRE AS NOM_EMP,e.Appaterno AS AP1_EMP,
e.ApMaterno AS AP2_EMP,replace(t.categoria,'' '','''') AS CAT_PUESTO,PI.PLAZAIEEPO AS PLAZA,PI.DIAGONAL AS CON_PLAZA,'''' AS CVE_MUN
,'''' AS MUNCIPIO,'''' INSTANCIA,'''' AS CARGO_ELEC,CONVERT(VARCHAR(10),fdd.FechaIni,103) AS INICIO_ELEC,
CONVERT(VARCHAR(10),fdd.FechaFIN,103) AS FIN_ELEC,'''' AS COMENTARIO
from fup_documentos fd with (nolock)           
inner join empleados e with (nolock) on fd.Id_Emp = e.Id_Emp
inner join fup_documento_detalle fdd with (nolock) on fd.Id_Documento = fdd.Id_Documento
inner join plazas p with (nolock) on fdd.Id_Plaza = p.Id_plaza
inner join plazaieepo pi with (nolock) on fdd.Id_Plaza = pi.Id_plaza
inner join FUP_Informacion_Documentos fid with (nolock) on fd.Id_Documento = fid.Id_Documento
inner join CalenNomina c with (nolock) on fid.Id_Periodo = c.Id_Periodo
inner join TNivelEducativo tn with (nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
inner join FUP_MotivoMovimiento fmm with (nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
inner join FUP_TipoMovimiento ftm with (nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
inner join HTabulador_SE_Cat_Puesto h with (nolock) on fdd.id_plaza=h.id_plaza
inner join TTabulador_SE_Cat_Puesto t with (nolock) on h.id_rel=t.id_Tabulador_SE_Cat_Puesto
inner join anexos_nombramientos an with (nolock) on e.curp=an.curp and REPLACE(pi.plazaieepo,'' '','''')=an.clave
inner join (
select max(CONVERT(datetime,FECHA_INICIAL,103)) as fecha_inicial,CLAVE,curp from anexos_nombramientos 
where CONVERT(datetime,FECHA_INICIAL,103)>=dbo.anioQuincenaToFecha(cast(YEAR(getdate())-1 as varchar(4))+CAST(''01'' as varchar(2)),0) 
and operacion in (''11-43'',''11-53'') 
and CONVERT(datetime,FECHA_INICIAL,103)<dbo.anioQuincenaToFecha(cast(YEAR(getdate()) as varchar(4))+CAST(''01'' as varchar(2)),0)
group by CLAVE,curp
) x on an.curp=x.CURP and an.clave=x.CLAVE and CONVERT(datetime,an.FECHA_INICIAL,103)=x.fecha_inicial
where fmm.clave in (''43'',''53'') 
and fdd.FechaIni>=dbo.anioQuincenaToFecha(cast(YEAR(getdate())-1 as varchar(4))+CAST(''01'' as varchar(2)),0)
and fdd.FechaFin<=convert(date,(dbo.anioQuincenaToFecha(cast(YEAR(getdate())-1 as varchar(4))+CAST(''24'' as varchar(2)),1)))
and fd.Id_Estatus=2
'
GO

GO
PRINT N'Creating [dbo].[SP_ObtieneConceptosDosPeriodosTablas]'
GO
IF OBJECT_ID(N'[dbo].[SP_ObtieneConceptosDosPeriodosTablas]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[SP_ObtieneConceptosDosPeriodosTablas]
@IdPeriodoActual int, @IdPeriodoAnterior int, @TipoPago int, @IdReferenciaAct int, @IdReferenciaAnte int, @IdEmp int, @IdPlaza int
WITH EXEC AS CALLER
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	-- @Tipo = 0 muestra todos
	--			1 muestra las diferencias de liquidos
	--			2 muestra los que no cambiaron de liquido
	
	SET NOCOUNT ON;
	declare @TableAct varchar(20) = (select case when actualizado = 1 then ''Nom_histpagos'' else ''Histpagos'' end from calennomina where Id_Periodo = @IdPeriodoActual)
	declare @TableAnte varchar(20) = (select case when actualizado = 1 then ''Nom_histpagos'' else ''Histpagos'' end from calennomina where Id_Periodo = @IdPeriodoAnterior)
   if(@TableAct is null)
      set @TableAct = ''Histpagos''
   if(@TableAnte is null)
    set @TableAnte = ''Histpagos''
   
    declare @sql varchar(max)
    set @sql = ''select
isnull(ac.Id_Periodo, 0) Id_Periodo_Actual,
isnull(an.Id_Periodo, 0) Id_Periodo_Anterior,
isnull(ac.id_referencia,0) id_referencia_Actual,
isnull(an.id_referencia,0) id_referencia_Anterior,
isnull(ac.id_emp, an.id_emp) id_emp,
isnull(ac.id_plaza, an.id_plaza) id_plaza,
isnull(ac.id_concepto, an.id_concepto) Id_Concepto,
co.resultado Concepto, co.nombre Descripcion,
round(isnull(ac.ImporteAct, 0),2) ImporteAct,
round(isnull(an.ImporteAnte,0),2) ImporteAnte,
round( isnull(ac.ImporteAct, 0)- isnull(an.ImporteAnte,0) , 2) Diferencia
from (
  select  h.Id_ProcesoNomina,h.Id_Periodo,h.id_referencia,h.id_concepto, h.id_emp, h.id_plaza, sum(case when c.tipo = ''+cast(@TipoPago as varchar)+'' then pesos+pesosexcento else 0 end) as ImporteAct
  from ''+@TableAct+'' h inner join Conceptos C on  h.id_concepto = c.id_concepto and C.Tipo in (''+cast(@TipoPago as varchar)+'')
  where h.id_periodo in (''+cast(@IdPeriodoActual as varchar)+'') and h.Id_Emp = ''+cast(@IdEmp as varchar)+'' and h.id_plaza = ''+cast(@IdPlaza as varchar)+'' and h.Id_Referencia = ''+cast(@IdReferenciaAct as varchar)+''
  group by h.Id_ProcesoNomina,h.id_emp, h.id_plaza,h.Id_Periodo,h.id_referencia,h.id_concepto
) ac
full join (
  select  h.Id_ProcesoNomina,h.Id_Periodo,h.id_referencia,h.id_concepto, h.id_emp, h.id_plaza, sum(case when c.tipo = ''+cast(@TipoPago as varchar)+'' then pesos+pesosexcento else 0 end) as ImporteAnte
  from ''+@TableAnte+'' h inner join Conceptos C on  h.id_concepto = c.id_concepto and C.Tipo in (''+cast(@TipoPago as varchar)+'')
  where h.id_periodo in (''+cast(@IdPeriodoAnterior as varchar)+'') and h.Id_Emp = ''+cast(@IdEmp as varchar)+'' and h.id_plaza = ''+cast(@IdPlaza as varchar)+'' and h.Id_Referencia = ''+cast(@IdReferenciaAnte as varchar)+''
  group by h.Id_ProcesoNomina,h.id_emp, h.id_plaza,h.Id_Periodo,h.id_referencia,h.id_concepto
) an on ac.id_emp = an.Id_Emp and ac.id_plaza = an.id_plaza and ac.id_concepto = an.id_concepto
inner join Empleados e on e.id_emp = isnull(ac.id_emp, an.id_emp)
inner join PlazaIEEPO pi on pi.id_plaza = isnull(ac.id_plaza, an.id_plaza)
inner join conceptos co on co.id_concepto = isnull(ac.id_concepto, an.id_concepto)''

    
    -- Insert statements for procedure here
	exec(@sql)
END'
GO

GO
PRINT N'Creating [dbo].[asf_bajas_definitivas]'
GO
IF OBJECT_ID(N'[dbo].[asf_bajas_definitivas]', 'P') IS NULL
EXEC sp_executesql N'----generar el concentrado de bajas definitivas del mdp
--select * --into ut..bajas_2019_mdp 
--from anexos_nombramientos where fecha_final<>''00/00/0000'' 
--and CONVERT(datetime,FECHA_final,103)>=''20190101''
--and CONVERT(datetime,FECHA_final,103)<''20200101'' and Operacion in (
--''06-31'',''06-32'',''06-33'',''06-34'',''06-35'',''06-37'',''06-75'',''07-32'',''07-35'')
--order by CONVERT(datetime,FECHA_final,103)

----ctualizar el caso erróneo por curp
--update ut..bajas_2019_mdp set rfc=''BALI890310FZA'' ,curp=''BALI890310HOCNPR08'' where clave=''072007E2405000200419''

----eliminar los casos que no se ve el registro en sia
--delete from ut..bajas_2019_mdp where CLAVE in (
--''072003E2405000200186''
--,''072048E0463030201267''
--,''072048E0463030201509''
--,''072048E0463090000017''
--,''072048E0463100000358''
--)

----agregar el campo de fecha a tabla de control
--alter table ut..bajas_2019_mdp
--add fecha datetime

----actualizar la fecha de alta en los casos
--update x set x.fecha=pe.fecha
--from fup_documentos fd            
--inner join empleados e on fd.Id_Emp = e.Id_Emp
--inner join fup_documento_detalle fdd on fd.Id_Documento = fdd.Id_Documento
--inner join plazas p on fdd.Id_Plaza = p.Id_plaza
--inner join plazaieepo pi on fdd.Id_Plaza = pi.Id_plaza
--inner join FUP_Informacion_Documentos fid on fd.Id_Documento = fid.Id_Documento
--inner join CalenNomina c on fid.Id_Periodo = c.Id_Periodo
--inner join TNivelEducativo tn on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
--inner join FUP_MotivoMovimiento fmm on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
--inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
--inner join HTabulador_SE_Cat_Puesto h on fdd.id_plaza=h.id_plaza
--inner join TTabulador_SE_Cat_Puesto t on h.id_rel=t.id_Tabulador_SE_Cat_Puesto
--inner join ut..bajas_2019_mdp x on x.curp=e.curp and replace(pi.plazaieepo,'' '','''')=x.clave
--inner join plazaempleados pe on pe.id_emp=fd.id_emp and pe.id_plaza=fdd.id_plaza
--inner join (
--select MAX(Fecha) as fecha,id_plaza from plazaempleados
--where Id_Emp<>0
--group by id_plaza
--) y on pe.id_plaza=y.id_plaza and pe.fecha=y.fecha
--inner join VistaTablaLongitud v on fid.Centro_Trabajo=v.clave
--inner join TablaLongitudProp_28 tl on v.Id_Nodo=tl.id_nodo
--where ftm.Id_TipoMovimiento in (6,7,4,8) and fmm.Clave not in (''95'',''10'')
--and fdd.FechaIni>=''20190101'' and fdd.Fechaini<=''20200101'' and fd.Id_Estatus=2

--update x set x.fecha=pe.fecha
--from fup_documentos fd            
--inner join empleados e on fd.Id_Emp = e.Id_Emp
--inner join fup_documento_detalle fdd on fd.Id_Documento = fdd.Id_Documento
--inner join plazas p on fdd.Id_Plaza = p.Id_plaza
--inner join plazaieepo pi on fdd.Id_Plaza = pi.Id_plaza
--inner join FUP_Informacion_Documentos fid on fd.Id_Documento = fid.Id_Documento
--inner join CalenNomina c on fid.Id_Periodo = c.Id_Periodo
--inner join TNivelEducativo tn on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
--inner join FUP_MotivoMovimiento fmm on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
--inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
--inner join HTabulador_SE_Cat_Puesto h on fdd.id_plaza=h.id_plaza
--inner join TTabulador_SE_Cat_Puesto t on h.id_rel=t.id_Tabulador_SE_Cat_Puesto
--inner join ut..bajas_2019_mdp x on x.curp=e.curp and replace(pi.plazaieepo,'' '','''')=x.clave
--inner join plazaempleados pe on pe.id_emp=fd.id_emp and pe.id_plaza=fdd.id_plaza
--inner join (
--select MAX(Fecha) as fecha,id_plaza,id_emp from plazaempleados
--where Id_Emp<>0
--group by id_plaza,id_emp
--) y on pe.id_plaza=y.id_plaza and pe.fecha=y.fecha
--inner join VistaTablaLongitud v on fid.Centro_Trabajo=v.clave
--inner join TablaLongitudProp_28 tl on v.Id_Nodo=tl.id_nodo
--where ftm.Id_TipoMovimiento in (6,7,4,8) and fmm.Clave not in (''95'',''10'')
--and fdd.FechaIni>=''20190101'' and fdd.Fechaini<=''20200101'' and fd.Id_Estatus=2
--and x.fecha is null

--update x set x.fecha=pe.fecha
--from fup_documentos fd            
--inner join empleados e on fd.Id_Emp = e.Id_Emp
--inner join fup_documento_detalle fdd on fd.Id_Documento = fdd.Id_Documento
--inner join plazas p on fdd.Id_Plaza = p.Id_plaza
--inner join plazaieepo pi on fdd.Id_Plaza = pi.Id_plaza
--inner join FUP_Informacion_Documentos fid on fd.Id_Documento = fid.Id_Documento
--inner join CalenNomina c on fid.Id_Periodo = c.Id_Periodo
--inner join TNivelEducativo tn on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
--inner join FUP_MotivoMovimiento fmm on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
--inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
--inner join HTabulador_SE_Cat_Puesto h on fdd.id_plaza=h.id_plaza
--inner join TTabulador_SE_Cat_Puesto t on h.id_rel=t.id_Tabulador_SE_Cat_Puesto
--inner join ut..bajas_2019_mdp x on x.curp=e.curp and replace(pi.plazaieepo,'' '','''')=x.clave
--inner join empalme_plazaempleados pe on pe.id_emp=fd.id_emp and pe.id_plaza=fdd.id_plaza
--inner join (
--select MAX(Fecha) as fecha,id_plaza,id_emp from empalme_plazaempleados
--where Id_Emp<>0
--group by id_plaza,id_emp
--) y on pe.id_plaza=y.id_plaza and pe.fecha=y.fecha
--inner join VistaTablaLongitud v on fid.Centro_Trabajo=v.clave
--inner join TablaLongitudProp_28 tl on v.Id_Nodo=tl.id_nodo
--where ftm.Id_TipoMovimiento in (6,7,4,8) and fmm.Clave not in (''95'',''10'')
--and fdd.FechaIni>=''20190101'' and fdd.Fechaini<=''20200101'' and fd.Id_Estatus=2
--and x.fecha is null


--Procedimiento para obtener las bajas definitivas 
CREATE procedure [dbo].[asf_bajas_definitivas] as
IF OBJECT_ID (''ut..mb_bajas_def_2019_mdp'', N''U'') IS not NULL 
   begin 
		select * from ut..mb_bajas_def_2019_mdp
   end
else 
   begin 
        --crear tabla de control y generar reporte
		select 
		distinct 
		''R20'' AS CV_UR,''OAXACA'' AS ENTIDAD,1013 AS CPP,''FONE'' AS NOM_FONDO,e.RFC,e.CURP,e.NOMBRE AS NOM_EMP,e.Appaterno AS AP1_EMP,
		e.ApMaterno AS AP2_EMP,PI.PLAZAIEEPO AS PLAZA,PI.DIAGONAL AS CON_PLAZA,replace(t.categoria,'' '','''') AS CAT_PUESTO,
		dbo.fechaToAnioQuincena(pe.fecha) as EFEC_ALTA,
		dbo.fechaToAnioQuincena(CONVERT(datetime,FECHA_final,103)) as EFEC_BAJA,
		fmm.CLAVE AS MOT,fmm.Descripcion AS MOTIVO,
		fid.Centro_Trabajo AS CCT,tl.UDP as UD,''BAJA'' AS ESTATUS 
		into ut..mb_bajas_def_2019_mdp
		from fup_documentos fd with(nolock)           
		inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
		inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
		inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
		inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
		inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
		inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
		inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
		inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
		inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
		inner join HTabulador_SE_Cat_Puesto h with(nolock) on fdd.id_plaza=h.id_plaza
		inner join TTabulador_SE_Cat_Puesto t with(nolock) on h.id_rel=t.id_Tabulador_SE_Cat_Puesto
		inner join ut..bajas_2019_mdp pe with(nolock) on pe.curp=e.curp and replace(pi.plazaieepo,'' '','''')=pe.clave
		inner join VistaTablaLongitud v with(nolock) on fid.Centro_Trabajo=v.clave
		inner join TablaLongitudProp_28 tl with(nolock) on v.Id_Nodo=tl.id_nodo
		where ftm.Id_TipoMovimiento in (6,7,4,8) and fmm.Clave not in (''95'',''10'')
		and fdd.FechaIni>=''20190101'' and fdd.Fechaini<=''20200101'' and fd.Id_Estatus=2

		delete from ut..mb_bajas_def_2019_mdp where CURP=''BUAJ650222MOCRLV08'' and MOT=''33''

		select * from ut..mb_bajas_def_2019_mdp
   end



'
GO

GO
PRINT N'Creating [dbo].[C4PXQU1NC]'
GO
IF OBJECT_ID(N'[dbo].[C4PXQU1NC]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROC [dbo].[C4PXQU1NC]

@qna varchar(6),
@fechaini date,
@fechafin date,
@concep varchar(2),
@tiponom varchar(3),
@idcia int 
AS

set @idcia = case 
                when @tiponom = ''BAS'' then 2
                when @tiponom = ''UPN'' then 1
              end
set @fechaini = (select FechaInicioMovimientos from CalenNomina where Año = cast(SUBSTRING(@qna, 1, 4) as int) and Numero = cast(SUBSTRING(@qna, 5, 2) as int) and Parcial = 0 and Id_cia = @idcia)
set @fechafin = (select FechaCorteMov from CalenNomina where Año = cast(SUBSTRING(@qna, 1, 4) as int) and Numero = cast(SUBSTRING(@qna, 5, 2) as int) and Parcial = 0 and Id_cia = @idcia)
select tt.NoPlaza, plai.Id_plaza, tt.Id_Emp, e.RFC, plai.PlazaIEEPO, tt.NoConcepto, tt.descripcion, tt.Monto, tt.Fecha, tt.FechaFin, tt.Movimiento, tt.Tvigencia_id_vigencia, tt.usuario, u.Usuario
from TTEmpleado_Plaza_Conc tt 
inner join Plazas pla on pla.Num_Plaza = tt.NoPlaza
inner join PlazaIEEPO plai on plai.id_plaza = pla.Id_plaza
inner join Empleados e on e.id_emp = tt.Id_Emp
inner join Usuarios u on u.id_usuario = tt.usuario
where tt.Movimiento between @fechaini and @fechafin and tt.descripcion = @concep and e.Id_Cia = @idcia
order by tt.descripcion, e.rfc
'
GO

GO
PRINT N'Creating [dbo].[SP_LlenaPlazaIEEPO]'
GO
IF OBJECT_ID(N'[dbo].[SP_LlenaPlazaIEEPO]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[SP_LlenaPlazaIEEPO]
WITH EXEC AS CALLER
AS
SET NOCOUNT ON  
          
       
 DELETE FROM [PlazaIEEPO]  
   
 INSERT INTO [PlazaIEEPO](Id_plaza,Partida,Unidad,SubUnidad,Categoria,Horas,Diagonal,PlazaIEEPO)  
   
 SELECT     dbo.Plazas.Id_plaza, RIGHT(''00'' + CAST(A.Partida AS varchar), 2) AS partida, CAST(B.Unidad AS varchar) AS unidad,     
                       RIGHT(''00'' + CAST(C.Subunidad AS varchar), 2) AS subunidad, CAST(RIGHT(d.categoria, 6) AS varchar) AS categoria, CAST(dbo.FormatNum(E.Horas * 10, N''000'') AS varchar) AS horas,     
                       RIGHT(''000000'' + CAST(F.Diagonal AS varchar), 6) AS Diagonal, RIGHT(''00'' + CAST(A.Partida AS varchar), 2)     
                       + RIGHT(''00'' + CAST(B.Unidad AS varchar), 2) + RIGHT(''00'' + CAST(C.Subunidad AS varchar), 2) + CAST(RIGHT(d.categoria, 6) AS varchar)     
                       + CAST(dbo.FormatNum(E.Horas * 10, N''000'') AS varchar) + RIGHT(''000000'' + CAST(F.Diagonal AS varchar), 6) AS PlazaIEEPO    
 FROM         dbo.Plazas LEFT OUTER JOIN    
                           (SELECT     dbo.HPartida.id_plaza, dbo.HPartida.Partida    
                             FROM          dbo.HPartida INNER JOIN    
                                                        (SELECT     id_plaza, MAX(fecha) AS Maximo    
                                                          FROM          dbo.HPartida AS HPartida_1    
                                                          --WHERE      (fecha <= GETDATE())    
                                                          GROUP BY id_plaza) AS Z ON Z.id_plaza = dbo.HPartida.id_plaza AND Z.Maximo = dbo.HPartida.fecha) AS A ON     
                       A.id_plaza = dbo.Plazas.Id_plaza LEFT OUTER JOIN    
                           (SELECT     dbo.HUnidad.id_plaza, dbo.HUnidad.Unidad    
                             FROM          dbo.HUnidad INNER JOIN    
                                                        (SELECT     id_plaza, MAX(fecha) AS Maximo    
                                                          FROM          dbo.HUnidad AS HUnidad_1    
                                                          --WHERE      (fecha <= GETDATE())    
                                                          GROUP BY id_plaza) AS AB ON AB.id_plaza = dbo.HUnidad.id_plaza AND AB.Maximo = dbo.HUnidad.fecha) AS B ON     
                       B.id_plaza = dbo.Plazas.Id_plaza LEFT OUTER JOIN    
                           (SELECT     dbo.HSubunidad.id_plaza, dbo.HSubunidad.Subunidad    
                             FROM          dbo.HSubunidad INNER JOIN    
                                                        (SELECT     id_plaza, MAX(fecha) AS Maximo    
                                                          FROM          dbo.HSubunidad AS HSubunidad_1    
                                                          --WHERE      (fecha <= GETDATE())    
                                                          GROUP BY id_plaza) AS AD ON AD.id_plaza = dbo.HSubunidad.id_plaza AND AD.Maximo = dbo.HSubunidad.fecha) AS C ON     
                       C.id_plaza = dbo.Plazas.Id_plaza LEFT OUTER JOIN    
                           (SELECT     k.id_plaza, j.categoria    
                             FROM          dbo.TTabulador_SE_Cat_Puesto AS j INNER JOIN    
                                                        (SELECT     h.id_plaza, h.id_rel    
                                                          FROM          dbo.HTabulador_SE_Cat_Puesto AS h INNER JOIN    
                                                                                     (SELECT     id_plaza, MAX(fecha) AS maximo    
                                                                                       FROM          dbo.HTabulador_SE_Cat_Puesto    
                                                                                       --WHERE      (fecha <= GETDATE())    
                                                                                       GROUP BY id_plaza) AS i ON h.id_plaza = i.id_plaza AND h.fecha = i.maximo) AS k ON j.id_Tabulador_SE_Cat_Puesto = k.id_rel) AS d ON    
                        d.id_plaza = dbo.Plazas.Id_plaza LEFT OUTER JOIN    
                           (SELECT     dbo.HHoras.id_plaza, dbo.HHoras.Horas    
                             FROM          dbo.HHoras INNER JOIN    
                                                        (SELECT     id_plaza, MAX(fecha) AS Maximo    
                                                          FROM          dbo.HHoras AS HHoras_1    
                                                          --WHERE      (fecha <= GETDATE())    
                                                          GROUP BY id_plaza) AS AF ON AF.id_plaza = dbo.HHoras.id_plaza AND AF.Maximo = dbo.HHoras.fecha) AS E ON     
                       E.id_plaza = dbo.Plazas.Id_plaza LEFT OUTER JOIN    
                           (SELECT     dbo.HDiagonal.id_plaza, dbo.HDiagonal.Diagonal    
                             FROM          dbo.HDiagonal INNER JOIN    
                                                        (SELECT     id_plaza, MAX(fecha) AS Maximo    
                                                          FROM          dbo.HDiagonal AS HDiagonal_1    
                                                          --WHERE      (fecha <= GETDATE())    
                                                          GROUP BY id_plaza) AS AH ON AH.id_plaza = dbo.HDiagonal.id_plaza AND AH.Maximo = dbo.HDiagonal.fecha) AS F ON     
                       F.id_plaza = dbo.Plazas.Id_plaza
                       

update a set a.PC = case when b.CODIGO_PLAZA is null then 0 else 1 end
from plazaieepo a
left join hplazas_concifed_230217 b on
replace(case when a.plazaieepo like ''14%'' or a.plazaieepo like ''15%'' then ''07''+substring(a.plazaieepo,3, len(a.plazaieepo)) else a.plazaieepo end,'' '','''') = b.CODIGO_PLAZA
and b.ESTATUS <> ''C''
                       
SET NOCOUNT OFF  
  
----  
----'
GO

GO
PRINT N'Creating [dbo].[sp_movs_altas]'
GO
IF OBJECT_ID(N'[dbo].[sp_movs_altas]', 'P') IS NULL
EXEC sp_executesql N'----------------------------------
--- altas
----------------------------------
----------------------------------
----------------------------------
--- QUINCENA DE LA QUE SE DESEA EL REPORTE---
create procedure [dbo].[sp_movs_altas]
 (
 @Quincena as int,
 @id_cia as int
 )
 with encryption 
 as begin
----------------------------------
--- altas
----------------------------------
----------------------------------
----------------------------------
------------------------------------------------------------------
------------------------------------------------------------------
declare @año as int
set @quincena=Case when @Quincena=1 then 24 else @Quincena-1 end
set @año= Case when @quincena=24 then year(GETDATE())-1 else YEAR(GETDATE()) end

--- empezando con honorarios
select --row_number() OVER (ORDER BY ftm.clave,fmm.clave)---altas de honorarios
'''' as ID_OPERACION,
OPERACION= Case when fmm.Id_MotivoMovimiento in (103,117,309,310) then ''06-20'' else ftm.Clave +''-'' +fmm.clave end,
e.curp AS CURP,
replace(pi.PlazaIEEPO,'' '','''') AS CPZA,
ttcm.id_Tabulador_SE_CM  AS NIVEL_SALARIAL,
''R20'' AS UR,
''PERIODO''= CASE WHEN C.NUMERO=24 THEN cast (right(''00'' + cast(01 as varchar(max)),2) + cast(''/'' as varchar(max)) + cast (year(getdate()) as varchar (max)) as varchar(max)) ELSE 
cast (right(''00'' + cast((cast (c.Numero as int)+1) as varchar(max)),2) + cast(''/'' as varchar(max)) + cast(c.año as varchar(max)) as varchar(max)) END,
''O'' AS TIPO_NOMINA,convert(char(12),c.fechaini,103) as FECHA,
fid.Centro_Trabajo AS CCT,
e.RFC, e.ApPaterno AS PRIMER_APELLIDO,
e.ApMaterno AS SEGUNDO_APELLIDO,
e.Nombre AS ''NOMBRE(S)'',
right(''00'' + cast(tnac.Id_Nacionalidad as varchar(max)),3) AS NACIONALIDAD,
PAIS_NAC=Case when tp.Descr=''MEXICO'' then 141 else 0 end,         
ENTIDAD_NAC=Case  substring(e.curp,12,2)
            when ''AS'' then 1 
            when ''BC'' then 2 
            when ''BS'' then 3 
            when ''CC'' then 4 
            when ''CS'' then 5
            when ''CM'' then 6 
            when ''CL'' then 7 
            when ''CH'' then 8 
            when ''DF'' then 9
            when ''DG'' then 10
            when ''GT'' then 11
            when ''GR'' then 12
            when ''HG'' then 13
            when ''JC'' then 14 
            when ''MC'' then 15 
            when ''MN'' then 16
            when ''MS'' then 17 
            when ''NT'' then 18 
            when ''NL'' then 19
            when ''OC'' then 20
            when ''PL'' then 21 
            when ''QT'' then 22
            when ''QR'' then 23 
            when ''SP'' then 24 
            when ''SL'' then 25
            when ''SR'' then 26
            when ''TC'' then 27
            when ''TS'' then 28
            when ''TL'' then 29
            when ''VZ'' then 30
            when ''YN'' then 31
            when ''ZS'' then 32
            else 0 end,         
MUNICIPIO_NAC= Case when e.Id_MunicipioNac is null then 0 else tc.Id_Ciudad end,
e.SEXO,
EDO_CIVIL= Case when e.edocivil=''C'' then ''02'' else 
		   Case when e.edocivil=''S'' then ''01'' else ''01'' end end,
CALLE_Y_NUM= Case when hd.Calle is null then '''' else cast(hd.calle as varchar(max))+ '' ''+ CAST(hd.numext as varchar (10)) end,
CP= Case when hd.CodPostal is null then '''' else hd.CodPostal end,
COLONIA= Case when hd.Id_Colonia = 0 or hd.Id_Colonia is null then '''' else tcol.DESCR end,
ENTIDAD=Case when e.Id_EstadoNac is null then ''S/A'' else case when e.Id_EstadoNac<=32 then substring(te.descr,4,50) else te.descr end end,
MUNICIPIO= Case when e.Id_MunicipioNac is null then '''' else upper(tc.Descr) end,
LOCALIDAD=Case when hd.Id_Localidad = 0 or hd.Id_Colonia is null then '''' else tloc.Descr end,
'''' AS NIV_MAX_ESTUD,
ING_GOB_FED= case when hfagf.fecha is null then '''' else SUBSTRING(dbo.fechatoanioquincena(hfagf.fecha),1,4)+'' '' +SUBSTRING(dbo.fechatoanioquincena(hfagf.fecha),5,2) end,
ING_SEP= case when hfas.fecha is null then '''' else SUBSTRING(dbo.fechatoanioquincena(hfas.fecha),1,4)+'' '' +SUBSTRING(dbo.fechatoanioquincena(hfas.fecha),5,2) end,
ING_RAMA= case when hfar.fecha is null then '''' else SUBSTRING(dbo.fechatoanioquincena(hfar.fecha),1,4)+'' '' + SUBSTRING(dbo.fechatoanioquincena(hfar.fecha),5,2)end,
'''' as TIPO_LIC,	
'''' as QUINQ_DOC,	
'''' as QUINQ_ADM	,
'''' as GRADO_LIC,	
'''' as TITULACIÓN,
HORARIO=Case when rt.id_nodo is null then '''' else tt.descripcion end,
ftm.Clave as MOVIMIENTO,	
ftm.Descripcion as DESC_MOVIMIENTO,	
fmm.Clave as MOTIVO,	
fmm.Descripcion as DESC_MOTIVO,
Convert(varchar(10), fdd.Fechaini, 103) as FECHA_INI, 
FECHA_FIN= case when dbo.fechaToAnioQuincena(fdd.fechaini)=dbo.fechaToAnioQuincena(fdd.fechafin) then Convert(varchar(10), ''00/00/0000'', 103)  else Convert(varchar(10), fdd.FechaFin, 103) end,
'''' as CONCEPTOS_PAGO,
REGIMEN= Case when di.regimen_pensionario is null then 2 else Case when di.regimen_pensionario='''' then 2 else Case when di.regimen_pensionario=''DECIMO TRANSITORIO'' then 1 else Case when di.regimen_pensionario=''CUENTAS INDIVIDUALES'' then 2 end end end end
from fup_documentos fd
inner join empleados e on fd.Id_Emp = e.Id_Emp
inner join fup_documento_detalle fdd on fd.Id_Documento = fdd.Id_Documento
inner join plazas p on fdd.Id_Plaza = p.Id_plaza
inner join plazaieepo pi on fdd.Id_Plaza = pi.Id_plaza
inner join (select id_plaza,MAX(fecha) fecha
from HTabulador_SE_cm htcm
group by id_plaza
) nc on pi.Id_plaza=nc.id_plaza
inner join HTabulador_SE_CM htcm on htcm.id_plaza=nc.id_plaza and htcm.fecha=nc.fecha
inner join TTabulador_SE_CM ttcm on htcm.id_rel=ttcm.id_Tabulador_SE_CM
inner join usuarios u on fd.Id_Usuario = u.Id_Usuario
inner join FUP_Informacion_Documentos fid on fd.Id_Documento = fid.Id_Documento
inner join CalenNomina c on fid.Id_Periodo = c.Id_Periodo
inner join FUP_MotivoMovimiento fmm on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
inner join tniveleducativo tn on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
inner join TNacionalidad tnac on e.Id_Nacionalidad=tnac.Id_Nacionalidad
inner join TPais tp on tnac.Id_Nacionalidad=tp.Id_Pais
left join TEstados te on e.Id_EstadoNac = te.Id_Estado
left join tciudad tc on e.Id_EstadoNac=te.Id_Estado and tc.Id_Ciudad=e.Id_MunicipioNac
left join (select id_emp,MAX(movimiento) fecha
from hdomicilio 
group by id_emp
) hdoc on e.Id_emp=hdoc.id_emp
left join HDomicilio hd on hd.id_emp=hdoc.id_emp and hdoc.fecha=hd.Movimiento
left join tcolonia tcol on hd.Id_Colonia=tcol.Id_Colonia
left join TLocalidad tloc on hd.Id_Localidad=tloc.id_Localidad
left join (select id_emp,MAX(fecha_alta_gob_fed) fecha
from HFecha_Alta_Gob_Fed group by id_emp
) hfagf on e.Id_Emp=hfagf.id_emp
left join (select id_emp,MAX(fecha_alta_sep) fecha
from HFecha_Alta_sep group by id_emp
) hfas on e.Id_Emp=hfas.id_emp
left join (select id_emp,MAX(fecha_alta_rama) fecha
from HFecha_Alta_rama group by id_emp
) hfar on e.Id_Emp=hfar.id_emp
inner join VistaTablaLongitud vt on fid.Centro_Trabajo=vt.clave
inner join RCT_Turno rt on vt.Id_Nodo=rt.id_nodo
inner join TCT_Turno tt on rt.id_rel=tt.id_CT_Turno
left join DatosISSSTE di on e.curp=di.curp
where fid.Id_Periodo in (select id_periodo from calennomina where Numero in (@quincena)
and Id_cia=@id_cia --and Leyenda10=''CFUP'' 
and Año=@año and parcial<> 0
union all 
select id_periodo from calennomina where Numero in (@quincena+1)
and Id_cia=@id_cia --and Leyenda10=''CFUP'' 
and Año=@año and parcial= 0)
and e.id_cia=@id_cia and fd.Id_Estatus =2 and fd.folio not in (select folio_n from HFolio_verificado)
and ftm.Id_TipoMovimiento in (2,3,30,37) and fmm.Id_MotivoMovimiento not in (2,3,4,7,8,9)
and fd.observaciones not like ''%verificado%'' and fd.observaciones not like ''%procesado%''
and fdd.FechaFin >=(
select TOp 1 fechafin from calennomina where Id_cia=@id_cia and Año=YEAR(GETDATE()) and Actualizado=1 order by Numero desc
)
union all
(
--- se sigue con los 95
select --row_number() OVER (ORDER BY ftm.clave,fmm.clave)--altas con efectos abiertos
'''' as ID_OPERACION,
OPERACION= Case when fmm.Id_MotivoMovimiento in (103,117,309,310) then ''06-20'' else ftm.Clave +''-'' +fmm.clave end,
e.curp AS CURP,
replace(pi.PlazaIEEPO,'' '','''') AS CLAVE_PLAZA,
ttcm.id_Tabulador_SE_CM  AS NIVEL_SALARIAL,
''R20'' AS UR,
''PERIODO''= CASE WHEN C.NUMERO=24 THEN cast (right(''00'' + cast(01 as varchar(max)),2) + cast(''/'' as varchar(max)) + cast (year(getdate()) as varchar (max)) as varchar(max)) ELSE 
cast (right(''00'' + cast((cast (c.Numero as int)+1) as varchar(max)),2) + cast(''/'' as varchar(max)) + cast(c.año as varchar(max)) as varchar(max)) END,
''O'' AS TIPO_NOMINA,convert(char(12),c.fechaini,103) as FECHA,
fid.Centro_Trabajo AS CCT,
e.RFC, e.ApPaterno AS PRIMER_APELLIDO,
e.ApMaterno AS SEGUNDO_APELLIDO,
e.Nombre AS ''NOMBRE(S)'',
right(''00'' + cast(tnac.Id_Nacionalidad as varchar(max)),3) AS NACIONALIDAD,
PAIS_NAC=Case when tp.Descr=''MEXICO'' then 141 else 0 end,
ENTIDAD_NAC=Case  substring(e.curp,12,2)
            when ''AS'' then 1 
            when ''BC'' then 2 
            when ''BS'' then 3 
            when ''CC'' then 4 
            when ''CS'' then 5
            when ''CM'' then 6 
            when ''CL'' then 7 
            when ''CH'' then 8 
            when ''DF'' then 9
            when ''DG'' then 10
            when ''GT'' then 11
            when ''GR'' then 12
            when ''HG'' then 13
            when ''JC'' then 14 
            when ''MC'' then 15 
            when ''MN'' then 16
            when ''MS'' then 17 
            when ''NT'' then 18 
            when ''NL'' then 19
            when ''OC'' then 20
            when ''PL'' then 21 
            when ''QT'' then 22
            when ''QR'' then 23 
            when ''SP'' then 24 
            when ''SL'' then 25
            when ''SR'' then 26
            when ''TC'' then 27
            when ''TS'' then 28
            when ''TL'' then 29
            when ''VZ'' then 30
            when ''YN'' then 31
            when ''ZS'' then 32
            else 0 end,         
MUNICIPIO_NAC= Case when e.Id_MunicipioNac is null then 0 else tc.Id_Ciudad end,
e.SEXO,
EDO_CIVIL= Case when e.edocivil=''C'' then ''02'' else 
		   Case when e.edocivil=''S'' then ''01'' else ''01'' end end,
CALLE_Y_NUM= Case when hd.Calle is null then '''' else cast(hd.calle as varchar(max))+ '' ''+ CAST(hd.numext as varchar (10)) end,
CP= Case when hd.CodPostal is null then '''' else hd.CodPostal end,
COLONIA= Case when hd.Id_Colonia = 0 or hd.Id_Colonia is null then '''' else tcol.DESCR end,
ENTIDAD=Case when e.Id_EstadoNac is null then ''S/A'' else case when e.Id_EstadoNac<=32 then substring(te.descr,4,50) else te.descr end end,
MUNICIPIO= Case when e.Id_MunicipioNac is null then '''' else upper(tc.Descr) end,
LOCALIDAD=Case when hd.Id_Localidad = 0 or hd.Id_Colonia is null then '''' else tloc.Descr end,
'''' AS NIV_MAX_ESTUD,
ING_GOB_FED= case when hfagf.fecha is null then '''' else SUBSTRING(dbo.fechatoanioquincena(hfagf.fecha),1,4)+'' '' +SUBSTRING(dbo.fechatoanioquincena(hfagf.fecha),5,2) end,
ING_SEP= case when hfas.fecha is null then '''' else SUBSTRING(dbo.fechatoanioquincena(hfas.fecha),1,4)+'' '' +SUBSTRING(dbo.fechatoanioquincena(hfas.fecha),5,2) end,
ING_RAMA= case when hfar.fecha is null then '''' else SUBSTRING(dbo.fechatoanioquincena(hfar.fecha),1,4)+'' '' + SUBSTRING(dbo.fechatoanioquincena(hfar.fecha),5,2)end,
'''' as TIPO_LIC,	
'''' as QUINQ_DOC,	
'''' as QUINQ_ADM	,
'''' as GRADO_LIC,	
'''' as TITULACIÓN,
HORARIO=Case when rt.id_nodo is null then '''' else tt.descripcion end,
ftm.Clave as MOVIMIENTO,	
ftm.Descripcion as DESC_MOVIMIENTO,	
fmm.Clave as MOTIVO,	
fmm.Descripcion as DESC_MOTIVO,
Convert(varchar(10), fdd.Fechaini, 103) as FECHA_INI, 
FECHA_FIN= case when dbo.fechaToAnioQuincena(fdd.fechaini)=dbo.fechaToAnioQuincena(fdd.fechafin) then Convert(varchar(10), ''00/00/0000'', 103)  else Convert(varchar(10), fdd.FechaFin, 103) end,
'''' as CONCEPTOS_PAGO,
REGIMEN= Case when di.regimen_pensionario is null then 2 else Case when di.regimen_pensionario='''' then 2 else Case when di.regimen_pensionario=''DECIMO TRANSITORIO'' then 1 else Case when di.regimen_pensionario=''CUENTAS INDIVIDUALES'' then 2 end end end end
from fup_documentos fd
inner join empleados e on fd.Id_Emp = e.Id_Emp
inner join fup_documento_detalle fdd on fd.Id_Documento = fdd.Id_Documento
inner join plazas p on fdd.Id_Plaza = p.Id_plaza
inner join plazaieepo pi on fdd.Id_Plaza = pi.Id_plaza
inner join (select id_plaza,MAX(fecha) fecha
from HTabulador_SE_cm htcm
group by id_plaza
) nc on pi.Id_plaza=nc.id_plaza
inner join HTabulador_SE_CM htcm on htcm.id_plaza=nc.id_plaza and htcm.fecha=nc.fecha
inner join TTabulador_SE_CM ttcm on htcm.id_rel=ttcm.id_Tabulador_SE_CM
inner join usuarios u on fd.Id_Usuario = u.Id_Usuario
inner join FUP_Informacion_Documentos fid on fd.Id_Documento = fid.Id_Documento
inner join CalenNomina c on fid.Id_Periodo = c.Id_Periodo
inner join FUP_MotivoMovimiento fmm on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
inner join tniveleducativo tn on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
inner join TNacionalidad tnac on e.Id_Nacionalidad=tnac.Id_Nacionalidad
inner join TPais tp on tnac.Id_Nacionalidad=tp.Id_Pais
left join TEstados te on e.Id_EstadoNac = te.Id_Estado
left join tciudad tc on e.Id_EstadoNac=te.Id_Estado and tc.Id_Ciudad=e.Id_MunicipioNac
left join (select id_emp,MAX(movimiento) fecha
from hdomicilio 
group by id_emp
) hdoc on e.Id_emp=hdoc.id_emp
left join HDomicilio hd on hd.id_emp=hdoc.id_emp and hdoc.fecha=hd.Movimiento
left join tcolonia tcol on hd.Id_Colonia=tcol.Id_Colonia
left join TLocalidad tloc on hd.Id_Localidad=tloc.id_Localidad
left join (select id_emp,MAX(fecha_alta_gob_fed) fecha
from HFecha_Alta_Gob_Fed group by id_emp
) hfagf on e.Id_Emp=hfagf.id_emp
left join (select id_emp,MAX(fecha_alta_sep) fecha
from HFecha_Alta_sep group by id_emp
) hfas on e.Id_Emp=hfas.id_emp
left join (select id_emp,MAX(fecha_alta_rama) fecha
from HFecha_Alta_rama group by id_emp
) hfar on e.Id_Emp=hfar.id_emp
inner join VistaTablaLongitud vt on fid.Centro_Trabajo=vt.clave
inner join RCT_Turno rt on vt.Id_Nodo=rt.id_nodo
inner join TCT_Turno tt on rt.id_rel=tt.id_CT_Turno
left join DatosISSSTE di on e.curp=di.curp
where fid.Id_Periodo in (
select id_periodo from calennomina where Numero in (@quincena)
and Id_cia=@id_cia --and Leyenda10=''CFUP'' 
and Año=@año and parcial<> 0
union all 
select id_periodo from calennomina where Numero in (@quincena+1)
and Id_cia=@id_cia --and Leyenda10=''CFUP'' 
and Año=@año and parcial= 0
) and e.id_cia=@id_cia and fd.Id_Estatus =2 and fd.folio not in (select folio_n from HFolio_verificado)
and ftm.Id_TipoMovimiento in (2,3,30) and fmm.Id_MotivoMovimiento not in (2,3,4,7,8,9)
and fd.observaciones not like ''%verificado%'' and fd.observaciones not like ''%procesado%''
and fdd.FechaIni=fdd.FechaFin
)
union all 
----- se sigue con los 01 20
(select --row_number() OVER (ORDER BY ftm.clave,fmm.clave)-- interinatos sobre plaza padre
'''' as ID_OPERACION,
OPERACION= Case when fmm.Id_MotivoMovimiento in (2,7) then ''06-20'' else ftm.Clave +''-'' +fmm.clave end,
e.curp AS CURP,
replace(pi.PlazaIEEPO,'' '','''') AS CLAVE_PLAZA,
ttcm.id_Tabulador_SE_CM  AS NIVEL_SALARIAL,
''R20'' AS UR,
''PERIODO''= CASE WHEN C.NUMERO=24 THEN cast (right(''00'' + cast(01 as varchar(max)),2) + cast(''/'' as varchar(max)) + cast (year(getdate()) as varchar (max)) as varchar(max)) ELSE 
cast (right(''00'' + cast((cast (c.Numero as int)+1) as varchar(max)),2) + cast(''/'' as varchar(max)) + cast(c.año as varchar(max)) as varchar(max)) END,
''O'' AS TIPO_NOMINA,convert(char(12),c.fechaini,103) as FECHA,
fid.Centro_Trabajo AS CCT,
e.RFC, e.ApPaterno AS PRIMER_APELLIDO,
e.ApMaterno AS SEGUNDO_APELLIDO,
e.Nombre AS ''NOMBRE(S)'',
right(''00'' + cast(tnac.Id_Nacionalidad as varchar(max)),3) AS NACIONALIDAD,
PAIS_NAC=Case when tp.Descr=''MEXICO'' then 141 else 0 end,
ENTIDAD_NAC=Case  substring(e.curp,12,2)
            when ''AS'' then 1 
            when ''BC'' then 2 
            when ''BS'' then 3 
            when ''CC'' then 4 
            when ''CS'' then 5
            when ''CM'' then 6 
            when ''CL'' then 7 
            when ''CH'' then 8 
            when ''DF'' then 9
            when ''DG'' then 10
            when ''GT'' then 11
            when ''GR'' then 12
            when ''HG'' then 13
            when ''JC'' then 14 
            when ''MC'' then 15 
            when ''MN'' then 16
            when ''MS'' then 17 
            when ''NT'' then 18 
            when ''NL'' then 19
            when ''OC'' then 20
            when ''PL'' then 21 
            when ''QT'' then 22
            when ''QR'' then 23 
            when ''SP'' then 24 
            when ''SL'' then 25
            when ''SR'' then 26
            when ''TC'' then 27
            when ''TS'' then 28
            when ''TL'' then 29
            when ''VZ'' then 30
            when ''YN'' then 31
            when ''ZS'' then 32
            else 0 end,
MUNICIPIO_NAC= Case when e.Id_MunicipioNac is null then 0 else tc.Id_Ciudad end,
e.SEXO,
EDO_CIVIL= Case when e.edocivil=''C'' then ''02'' else 
		   Case when e.edocivil=''S'' then ''01'' else ''01'' end end,
CALLE_Y_NUM= Case when hd.Calle is null then '''' else cast(hd.calle as varchar(max))+ '' ''+ CAST(hd.numext as varchar (10)) end,
CP= Case when hd.CodPostal is null then '''' else hd.CodPostal end,
COLONIA= Case when hd.Id_Colonia = 0 or hd.Id_Colonia is null then '''' else tcol.DESCR end,
ENTIDAD=Case when e.Id_EstadoNac is null then ''S/A'' else case when e.Id_EstadoNac<=32 then substring(te.descr,4,50) else te.descr end end,
MUNICIPIO= Case when e.Id_MunicipioNac is null then '''' else upper(tc.Descr) end,
LOCALIDAD=Case when hd.Id_Localidad = 0 or hd.Id_Colonia is null then '''' else tloc.Descr end,
'''' AS NIV_MAX_ESTUD,
ING_GOB_FED= case when hfagf.fecha is null then '''' else SUBSTRING(dbo.fechatoanioquincena(hfagf.fecha),1,4)+'' '' +SUBSTRING(dbo.fechatoanioquincena(hfagf.fecha),5,2) end,
ING_SEP= case when hfas.fecha is null then '''' else SUBSTRING(dbo.fechatoanioquincena(hfas.fecha),1,4)+'' '' +SUBSTRING(dbo.fechatoanioquincena(hfas.fecha),5,2) end,
ING_RAMA= case when hfar.fecha is null then '''' else SUBSTRING(dbo.fechatoanioquincena(hfar.fecha),1,4)+'' '' + SUBSTRING(dbo.fechatoanioquincena(hfar.fecha),5,2)end,
'''' as TIPO_LIC,	
'''' as QUINQ_DOC,	
'''' as QUINQ_ADM	,
'''' as GRADO_LIC,	
'''' as TITULACIÓN,
HORARIO=Case when rt.id_nodo is null then '''' else tt.descripcion end,
ftm.Clave as MOVIMIENTO,	
ftm.Descripcion as DESC_MOVIMIENTO,	
fmm.Clave as MOTIVO,	
fmm.Descripcion as DESC_MOTIVO,
Convert(varchar(10), fdd.Fechaini, 103) as FECHA_INI, 
FECHA_FIN= case when dbo.fechaToAnioQuincena(fdd.fechaini)=dbo.fechaToAnioQuincena(fdd.fechafin) then Convert(varchar(10), ''00/00/0000'', 103)  else Convert(varchar(10), fdd.FechaFin, 103) end,
'''' as CONCEPTOS_PAGO,
REGIMEN= Case when di.regimen_pensionario is null then 2 else Case when di.regimen_pensionario='''' then 2 else Case when di.regimen_pensionario=''DECIMO TRANSITORIO'' then 1 else Case when di.regimen_pensionario=''CUENTAS INDIVIDUALES'' then 2 end end end end
from fup_documentos fd
inner join empleados e on fd.Id_Emp = e.Id_Emp
inner join fup_documento_detalle fdd on fd.Id_Documento = fdd.Id_Documento
inner join plazas p on fdd.Id_Plaza = p.Id_plaza
inner join (select id_plaza,MAX(fecha) fecha
from HTabulador_SE_cm htcm
group by id_plaza
) nc on fdd.Id_plaza=nc.id_plaza
inner join HTabulador_SE_CM htcm on htcm.id_plaza=nc.id_plaza and htcm.fecha=nc.fecha
inner join TTabulador_SE_CM ttcm on htcm.id_rel=ttcm.id_Tabulador_SE_CM
inner join usuarios u on fd.Id_Usuario = u.Id_Usuario
inner join FUP_Informacion_Documentos fid on fd.Id_Documento = fid.Id_Documento
inner join CalenNomina c on fid.Id_Periodo = c.Id_Periodo
inner join FUP_MotivoMovimiento fmm on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
inner join tniveleducativo tn on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
inner join TNacionalidad tnac on e.Id_Nacionalidad=tnac.Id_Nacionalidad
inner join TPais tp on tnac.Id_Nacionalidad=tp.Id_Pais
left join TEstados te on e.Id_EstadoNac = te.Id_Estado
left join tciudad tc on e.Id_EstadoNac=te.Id_Estado and tc.Id_Ciudad=e.Id_MunicipioNac
left join (select id_emp,MAX(movimiento) fecha
from hdomicilio 
group by id_emp
) hdoc on e.Id_emp=hdoc.id_emp
left join HDomicilio hd on hd.id_emp=hdoc.id_emp and hdoc.fecha=hd.Movimiento
left join tcolonia tcol on hd.Id_Colonia=tcol.Id_Colonia
left join TLocalidad tloc on hd.Id_Localidad=tloc.id_Localidad
left join (select id_emp,MAX(fecha_alta_gob_fed) fecha
from HFecha_Alta_Gob_Fed group by id_emp
) hfagf on e.Id_Emp=hfagf.id_emp
left join (select id_emp,MAX(fecha_alta_sep) fecha
from HFecha_Alta_sep group by id_emp
) hfas on e.Id_Emp=hfas.id_emp
left join (select id_emp,MAX(fecha_alta_rama) fecha
from HFecha_Alta_rama group by id_emp
) hfar on e.Id_Emp=hfar.id_emp
inner join ( select distinct fvi.Id_Valor,tf.idFormula,tf.Descripcion,fvi.valor,fvi.id_documento,fdc.Id_MotivoMovimiento from FUP_DetalleCampos fdc
inner join Tformulas tf on fdc.Id_Formula=tf.idFormula
inner join FUP_ValorInteger fvi on fdc.Id_Valor=fvi.Id_Valor
inner join FUP_Documento_Detalle fdocd on fvi.Id_Documento=fdocd.Id_Detalle
where fdc.Id_MotivoMovimiento in (2,7) and tf.Descripcion=''id_plaza''
and fdocd.Id_Plaza=fvi.Valor 
) pip on fdd.Id_Detalle=pip.Id_Documento 
inner join plazaieepo pi on pip.valor = pi.Id_plaza
inner join VistaTablaLongitud vt on fid.Centro_Trabajo=vt.clave
inner join RCT_Turno rt on vt.Id_Nodo=rt.id_nodo
inner join TCT_Turno tt on rt.id_rel=tt.id_CT_Turno
left join DatosISSSTE di on e.curp=di.curp
where --fid.Id_Periodo in (select id_periodo from calennomina where Id_cia=2 and año=YEAR(GETDATE()) and actualizado=0 and Parcial<>0 and Leyenda10=''CFUP'') 
fid.Id_Periodo in (select id_periodo from calennomina where Numero in (@quincena)
and Id_cia=@id_cia --and Leyenda10=''CFUP'' 
and Año=@año and parcial<> 0
union all 
select id_periodo from calennomina where Numero in (@quincena+1)
and Id_cia=@id_cia --and Leyenda10=''CFUP'' 
and Año=@año and parcial= 0)
and e.id_cia=@id_cia and fd.Id_Estatus =2 and fd.folio not in (select folio_n from HFolio_verificado)
and fmm.Id_MotivoMovimiento in (2,7)
and fd.observaciones not like ''%verificado%'' and fd.observaciones not like ''%procesado%''
and fdd.FechaFin >=(
select TOp 1 fechafin from calennomina where Id_cia=@id_cia and Año=YEAR(GETDATE()) and Actualizado=1 order by Numero desc
))
union all
(
select --row_number() OVER (ORDER BY ftm.clave,fmm.clave)---altas de honorarios
'''' as ID_OPERACION,
OPERACION= Case when fmm.Id_MotivoMovimiento in (103,117,309,310) then ''06-20'' else ftm.Clave +''-'' +fmm.clave end,
e.curp AS CURP,
replace(pi.PlazaIEEPO,'' '','''') AS CPZA,
ttcm.id_Tabulador_SE_CM  AS NIVEL_SALARIAL,
''R20'' AS UR,
''PERIODO''= CASE WHEN C.NUMERO=24 THEN cast (right(''00'' + cast(01 as varchar(max)),2) + cast(''/'' as varchar(max)) + cast (year(getdate()) as varchar (max)) as varchar(max)) ELSE 
cast (right(''00'' + cast((cast (c.Numero as int)+1) as varchar(max)),2) + cast(''/'' as varchar(max)) + cast(c.año as varchar(max)) as varchar(max)) END,
''O'' AS TIPO_NOMINA,convert(char(12),c.fechaini,103) as FECHA,
fid.Centro_Trabajo AS CCT,
e.RFC, e.ApPaterno AS PRIMER_APELLIDO,
e.ApMaterno AS SEGUNDO_APELLIDO,
e.Nombre AS ''NOMBRE(S)'',
right(''00'' + cast(tnac.Id_Nacionalidad as varchar(max)),3) AS NACIONALIDAD,
PAIS_NAC=Case when tp.Descr=''MEXICO'' then 141 else 0 end,         
ENTIDAD_NAC=Case  substring(e.curp,12,2)
            when ''AS'' then 1 
            when ''BC'' then 2 
            when ''BS'' then 3 
            when ''CC'' then 4 
            when ''CS'' then 5
            when ''CM'' then 6 
            when ''CL'' then 7 
            when ''CH'' then 8 
            when ''DF'' then 9
            when ''DG'' then 10
            when ''GT'' then 11
            when ''GR'' then 12
            when ''HG'' then 13
            when ''JC'' then 14 
            when ''MC'' then 15 
            when ''MN'' then 16
            when ''MS'' then 17 
            when ''NT'' then 18 
            when ''NL'' then 19
            when ''OC'' then 20
            when ''PL'' then 21 
            when ''QT'' then 22
            when ''QR'' then 23 
            when ''SP'' then 24 
            when ''SL'' then 25
            when ''SR'' then 26
            when ''TC'' then 27
            when ''TS'' then 28
            when ''TL'' then 29
            when ''VZ'' then 30
            when ''YN'' then 31
            when ''ZS'' then 32
            else 0 end,         
MUNICIPIO_NAC= Case when e.Id_MunicipioNac is null then 0 else tc.Id_Ciudad end,
e.SEXO,
EDO_CIVIL= Case when e.edocivil=''C'' then ''02'' else 
		   Case when e.edocivil=''S'' then ''01'' else ''01'' end end,
CALLE_Y_NUM= Case when hd.Calle is null then '''' else cast(hd.calle as varchar(max))+ '' ''+ CAST(hd.numext as varchar (10)) end,
CP= Case when hd.CodPostal is null then '''' else hd.CodPostal end,
COLONIA= Case when hd.Id_Colonia = 0 or hd.Id_Colonia is null then '''' else tcol.DESCR end,
ENTIDAD=Case when e.Id_EstadoNac is null then ''S/A'' else case when e.Id_EstadoNac<=32 then substring(te.descr,4,50) else te.descr end end,
MUNICIPIO= Case when e.Id_MunicipioNac is null then '''' else upper(tc.Descr) end,
LOCALIDAD=Case when hd.Id_Localidad = 0 or hd.Id_Colonia is null then '''' else tloc.Descr end,
'''' AS NIV_MAX_ESTUD,
ING_GOB_FED= case when hfagf.fecha is null then '''' else SUBSTRING(dbo.fechatoanioquincena(hfagf.fecha),1,4)+'' '' +SUBSTRING(dbo.fechatoanioquincena(hfagf.fecha),5,2) end,
ING_SEP= case when hfas.fecha is null then '''' else SUBSTRING(dbo.fechatoanioquincena(hfas.fecha),1,4)+'' '' +SUBSTRING(dbo.fechatoanioquincena(hfas.fecha),5,2) end,
ING_RAMA= case when hfar.fecha is null then '''' else SUBSTRING(dbo.fechatoanioquincena(hfar.fecha),1,4)+'' '' + SUBSTRING(dbo.fechatoanioquincena(hfar.fecha),5,2)end,
'''' as TIPO_LIC,	
'''' as QUINQ_DOC,	
'''' as QUINQ_ADM	,
'''' as GRADO_LIC,	
'''' as TITULACIÓN,
HORARIO=Case when rt.id_nodo is null then '''' else tt.descripcion end,
ftm.Clave as MOVIMIENTO,	
ftm.Descripcion as DESC_MOVIMIENTO,	
fmm.Clave as MOTIVO,	
fmm.Descripcion as DESC_MOTIVO,
Convert(varchar(10), fdd.Fechaini, 103) as FECHA_INI, 
FECHA_FIN= case when dbo.fechaToAnioQuincena(fdd.fechaini)=dbo.fechaToAnioQuincena(fdd.fechafin) then Convert(varchar(10), ''00/00/0000'', 103)  else Convert(varchar(10), fdd.FechaFin, 103) end,
'''' as CONCEPTOS_PAGO,
REGIMEN= Case when di.regimen_pensionario is null then 2 else Case when di.regimen_pensionario='''' then 2 else Case when di.regimen_pensionario=''DECIMO TRANSITORIO'' then 1 else Case when di.regimen_pensionario=''CUENTAS INDIVIDUALES'' then 2 end end end end
--convert(char(12),c.fechaini,103) as FECHA
from fup_documentos fd
inner join empleados e on fd.Id_Emp = e.Id_Emp
inner join fup_documento_detalle fdd on fd.Id_Documento = fdd.Id_Documento
inner join plazas p on fdd.Id_Plaza = p.Id_plaza
inner join plazaieepo pi on fdd.Id_Plaza = pi.Id_plaza
inner join (select id_plaza,MAX(fecha) fecha
from HTabulador_SE_cm htcm
group by id_plaza
) nc on pi.Id_plaza=nc.id_plaza
inner join HTabulador_SE_CM htcm on htcm.id_plaza=nc.id_plaza and htcm.fecha=nc.fecha
inner join TTabulador_SE_CM ttcm on htcm.id_rel=ttcm.id_Tabulador_SE_CM
inner join usuarios u on fd.Id_Usuario = u.Id_Usuario
inner join FUP_Informacion_Documentos fid on fd.Id_Documento = fid.Id_Documento
inner join CalenNomina c on fid.Id_Periodo = c.Id_Periodo
inner join FUP_MotivoMovimiento fmm on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
inner join tniveleducativo tn on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
inner join TNacionalidad tnac on e.Id_Nacionalidad=tnac.Id_Nacionalidad
inner join TPais tp on tnac.Id_Nacionalidad=tp.Id_Pais
left join TEstados te on e.Id_EstadoNac = te.Id_Estado
left join tciudad tc on e.Id_EstadoNac=te.Id_Estado and tc.Id_Ciudad=e.Id_MunicipioNac
left join (select id_emp,MAX(movimiento) fecha
from hdomicilio 
group by id_emp
) hdoc on e.Id_emp=hdoc.id_emp
left join HDomicilio hd on hd.id_emp=hdoc.id_emp and hdoc.fecha=hd.Movimiento
left join tcolonia tcol on hd.Id_Colonia=tcol.Id_Colonia
left join TLocalidad tloc on hd.Id_Localidad=tloc.id_Localidad
left join (select id_emp,MAX(fecha_alta_gob_fed) fecha
from HFecha_Alta_Gob_Fed group by id_emp
) hfagf on e.Id_Emp=hfagf.id_emp
left join (select id_emp,MAX(fecha_alta_sep) fecha
from HFecha_Alta_sep group by id_emp
) hfas on e.Id_Emp=hfas.id_emp
left join (select id_emp,MAX(fecha_alta_rama) fecha
from HFecha_Alta_rama group by id_emp
) hfar on e.Id_Emp=hfar.id_emp
inner join VistaTablaLongitud vt on fid.Centro_Trabajo=vt.clave
inner join RCT_Turno rt on vt.Id_Nodo=rt.id_nodo
inner join TCT_Turno tt on rt.id_rel=tt.id_CT_Turno
inner join Recalculo_Calculo rc on fdd.Id_Detalle=rc.Id_Detalle
left join DatosISSSTE di on e.curp=di.curp
where fid.Id_Periodo in (select id_periodo from calennomina where Numero in (@quincena)
and Id_cia=@id_cia --and Leyenda10=''CFUP'' 
and Año=@año and parcial<> 0
union all 
select id_periodo from calennomina where Numero in (@quincena+1)
and Id_cia=@id_cia --and Leyenda10=''CFUP'' 
and Año=@año and parcial= 0) and e.id_cia=@id_cia and fd.Id_Estatus =2 and fd.folio not in (select folio_n from HFolio_verificado)
and ftm.Id_TipoMovimiento in (12,13) 
and fd.observaciones not like ''%verificado%'' and fd.observaciones not like ''%procesado%''
 --and e.Id_Emp not in (
--select id_emp from fup_documentos where id_documento in (
--select Id_Documento from fup_documento_detalle where Id_MotivoMovimiento in (
--select Id_MotivoMovimiento from FUP_MotivoMovimiento where Id_TipoMovimiento in (6,7,9,10,11,31)
--)and id_documento in (
--select id_periodo from calennomina where Numero=@quincena
--and Id_cia=2 and Leyenda10=''CFUP'' and Año=@año
--)) and Id_Estatus=2)
and rc.Descripcion not like ''Reversa%''
)
order by  ftm.clave,fmm.clave
end'
GO

GO
PRINT N'Creating [dbo].[C4PXUS3RTT3MPL3]'
GO
IF OBJECT_ID(N'[dbo].[C4PXUS3RTT3MPL3]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROC [dbo].[C4PXUS3RTT3MPL3]

@qna varchar(6) ,
@fechaini date,
@fechafin date,
@tiponom varchar(3),
@idcia int 
AS

set @idcia = case 
                when @tiponom = ''BAS'' then 2
                when @tiponom = ''UPN'' then 1
              end
set @fechaini = (select FechaInicioMovimientos from CalenNomina where Año = cast(SUBSTRING(@qna, 1, 4) as int) and Numero = cast(SUBSTRING(@qna, 5, 2) as int) and Parcial = 0 and Id_cia = @idcia)
set @fechafin = (select FechaCorteMov from CalenNomina where Año = cast(SUBSTRING(@qna, 1, 4) as int) and Numero = cast(SUBSTRING(@qna, 5, 2) as int) and Parcial = 0 and Id_cia = @idcia)
select t.usuario,u.Usuario,t.descripcion, count(*) as Cantidad, sum (t.Monto) as total,
stuff(( select '' '' +cast(Monto as varchar (max))+ '' , '' from TTEmpleado_Plaza_Conc where Movimiento between @fechaini 
and @fechafin and Usuario = t.usuario  and descripcion = t.descripcion for xml path('''')),1,1,'''') as Montos
from TTEmpleado_Plaza_Conc t 
inner join usuarios u on t.usuario=u.Id_Usuario
inner join empleados e on t.Id_Emp = e.Id_Emp
where t.Movimiento between @fechaini and @fechafin and e.Id_Cia = @idcia
group by t.usuario, u.Usuario,t.descripcion
'
GO

GO
PRINT N'Creating [dbo].[ASF_MandosMedios]'
GO
IF OBJECT_ID(N'[dbo].[ASF_MandosMedios]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		<Sistemas,Noemi>
-- Create date: <Create Date, 30/01/2020 >
-- Description:	<Nomina de Inicio de Año escolar>
-- =============================================
--exec [ASF_MandosMedios] 2019
CREATE  procedure [dbo].[ASF_MandosMedios]
@año varchar(4)
AS
		--declare @año int; set @año =2019
		----------------------
		SELECT ROW_NUMBER() OVER(ORDER BY CURP,PLAZA) ID,* 
		INTO --DROP TABLE 
		#MM
		FROM(
			SELECT DISTINCT  ID_PLAZA,ID_EMP,CURP,CLAVE_PLAZA PLAZA
			FROM [FEDERACION.IEEPO.GOB.MX].federacion.dbo.DETALLE_NOMINA 
			WHERE CLAVE_PLAZA LIKE ''%AA%'' AND QUINCENA LIKE ''%''+@año+''%'' AND nomina =''ORDINARIA''
		)A

		SELECT  ROW_NUMBER() OVER(PARTITION BY ID_PLAZA ORDER BY ID_PLAZA,FECHA)N, *
		INTO --DROP TABLE
		#DESDE_HASTA
		FROM ( 
			SELECT DISTINCT PE.*
			FROM 
			IEEPO.DBO.PlazaEmpleados PE
			JOIN (
					SELECT PE.ID_EMP,PE.ID_PLAZA,PE.FECHA
					FROM IEEPO.DBO.PlazaEmpleados PE
					JOIN (  SELECT ID_EMP,ID_PLAZA,MIN(FECHA)F 
							FROM IEEPO.DBO.PlazaEmpleados
							WHERE ID_PLAZA IN (SELECT ID_PLAZA FROM #MM)
					AND ID_EMP != 0 GROUP BY ID_EMP,ID_PLAZA)PEM
					ON PEM.Id_Emp=PE.Id_Emp AND PEM.Id_plaza=PE.Id_plaza AND PEM.F=PE.Fecha
					JOIN #MM MM ON MM.id_emp=PE.ID_EMP AND MM.id_plaza=PE.ID_PLAZA --ORDER BY MM.ID_PLAZA
			)PLAZAS ON PE.ID_PLAZA = PLAZAS.ID_PLAZA AND PE.FECHA>=PLAZAS.FECHA
		) aa

		SELECT D1.ID_EMP,D2.ID_PLAZA,D1.FECHA DESDE ,D2.FECHA HASTA,D1.ID_NODO
		INTO --DROP TABLE
		#PLAZAS_DESDE_HASTA
		 FROM #DESDE_HASTA D1
		LEFT JOIN  #DESDE_HASTA D2
		ON D1.N+1=D2.N AND D1.ID_PLAZA=D2.ID_PLAZA 
		WHERE D1.ID_EMP != 0 


		SELECT  DISTINCT ID,DN.ID_EMP,DN.ID_PLAZA,
				''R20''CV_UR,							-- 1
				''OAXACA''ENTIDAD,					-- 2
				''I013''CPP,							-- 3
				''FONE''NOM_FONDO,					-- 4
				E.RFC,								-- 5
				E.CURP,								-- 6
				E.NOMBRE NOM_EMP,					-- 7
				E.APPATERNO AP1_EMP,				-- 8
				E.APMATERNO AP2_EMP,				-- 9
				SUBSTRING(PLAZA,7,6) CAT_PUESTO,	--10
				PLAZA,								--11
				RIGHT(PLAZA,6) CON_PLAZA,			--12
				CASE  WHEN T.DESCRIPCION = ''DIRECTOR GENERAL DE EDUCACION'' THEN ''DIRECTOR GENERAL''
				WHEN T.DESCRIPCION = ''COORDINADOR GENERAL DE ADMINISTRACION EDUCATIVO'' THEN ''COORDINADOR GENERAL''
				WHEN T.DESCRIPCION = ''DIRECTOR  DE AREA Y/O ASESOR EDUCATIVO'' THEN ''DIRECTOR  DE AREA''
				WHEN T.DESCRIPCION = ''SECRETARIO TECNICO DE ADMINISTRACION EDUCATIVO "A"'' THEN ''SECRETARIO TECNICO''
				WHEN T.DESCRIPCION = ''SUBDIRECTOR DE AREA DE ADMINISTRACION EDUCATIVO "C"'' THEN ''SUBDIRECTOR DE AREA''
				WHEN T.DESCRIPCION = ''SECRETARIO TECNICO DE ADMINISTRACION EDUCATIVO "B"'' THEN ''SECRETARIO TECNICO''
				WHEN T.DESCRIPCION = ''JEFE DE DEPARTAMENTO DE ADMINISTRACION EDUCATIVO "A"'' THEN ''JEFE DE DEPARTAMENTO''
				WHEN T.DESCRIPCION = ''JEFE DE DEPARTAMENTO DE ADMINISTRACION EDUCATIVO "B"'' THEN ''JEFE DE DEPARTAMENTO'' END 
				CARGO,				--13
				V.DESCRIPCION AREA_ADSC,			--14
				(CASE WHEN DN23.IMPORTE_PERCEPCIONES IS NULL THEN DN_A.IMPORTE_PERCEPCIONES ELSE DN23.IMPORTE_PERCEPCIONES END)*2 SUELDO_TOT,
				(CASE WHEN DN23.IMPORTE_NETO IS NULL THEN DN_A.IMPORTE_NETO ELSE DN23.IMPORTE_NETO END)*2 SUELDO_NET,
				DESDE,								--17         --CAST(DAY(DESDE) AS VARCHAR(2))+''/''+CAST(MONTH(DESDE)AS VARCHAR(2))+''/''+CAST(YEAR(DESDE)AS VARCHAR(4)) DESDE,
				HASTA								--18         --CAST(DAY(HASTA)AS VARCHAR(2))+''/''+CAST(MONTH(HASTA)AS VARCHAR(2))+''/''+CAST(YEAR(HASTA)AS VARCHAR(4)) HASTA
		FROM #MM MM
		LEFT JOIN (SELECT * FROM [FEDERACION.IEEPO.GOB.MX].federacion.dbo.DETALLE_NOMINA WHERE QUINCENA LIKE @año+''%'')DN
		ON DN.ID_EMP = MM.ID_EMP AND DN.ID_PLAZA = MM.ID_PLAZA
		LEFT JOIN IEEPO.DBO.EMPLEADOS E ON E.ID_EMP = MM.id_emp
		LEFT JOIN (SELECT * FROM #PLAZAS_DESDE_HASTA WHERE @año BETWEEN YEAR(DESDE) AND YEAR(HASTA)) DH ON DH.ID_EMP = MM.ID_EMP AND DH.ID_PLAZA = MM.ID_PLAZA
		LEFT JOIN IEEPO.DBO.TTabulador_SE_Cat_Puesto T ON T.CATEGORIA= SUBSTRING(PLAZA,7,6)
		LEFT JOIN IEEPO.DBO.VistaTablaLongitud28 V ON V.ID_NODO=DH.ID_NODO
		LEFT JOIN (SELECT * FROM [FEDERACION.IEEPO.GOB.MX].federacion.dbo.DETALLE_NOMINA WHERE QUINCENA = @año+''23'' AND nomina=''ORDINARIA'' AND CLAVE_PLAZA LIKE ''%AA%'' )DN23 ON DN23.ID_EMP=MM.ID_EMP AND DN23.ID_PLAZA=MM.id_plaza
		LEFT JOIN (SELECT * FROM [FEDERACION.IEEPO.GOB.MX].federacion.dbo.DETALLE_NOMINA WHERE QUINCENA LIKE @año+''%'' AND nomina=''ORDINARIA'' AND CLAVE_PLAZA LIKE ''%AA%'' )DN_A ON DN_A.ID_EMP=MM.ID_EMP AND DN_A.ID_PLAZA=MM.id_plaza AND DBO.fechaToAnioQuincena(HASTA)=DN_A.QUINCENA
		ORDER BY PLAZA,DESDE


'
GO

GO
PRINT N'Creating [dbo].[sp_SHP3ded]'
GO
IF OBJECT_ID(N'[dbo].[sp_SHP3ded]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		David Santibañez Vargas
-- Create date: 3 de mayo de 2013
-- Description:	percepciones recalculo
-- =============================================
CREATE PROCEDURE [dbo].[sp_SHP3ded]
	@idplaza int,      
@Idemp int,      
@idperiodo int      
with encryption
AS
BEGIN
	SET NOCOUNT ON;
	SELECT      
   a.id_concepto,a.Resultado as Clave,a.descripcion, b.Id_Emp, Cast(g.año as varchar(4)) + ''''+Right(''00''+Cast(g.numero as varchar(2)),2) as Periodo, b.id_plaza,Desde+'' ''+Hasta as Desde_Hasta, convert(varchar(12), cast(b.Pesos as money), 1) AS Importe      
      
 FROM      
   Conceptos a       
   INNER JOIN ConceptoRelEmpresa c      
   ON a.id_concepto = c.id_concepto       
   INNER JOIN      
            (SELECT     Id_Emp, id_concepto, Id_Periodo, id_plaza, Pesos,Desde,Hasta      
            FROM       recalculo_histpagos      
            UNION ALL      
            SELECT     Id_Emp, id_concepto, Id_Periodo, id_plaza, Pesos,Desde,Hasta     
            FROM       histpagos)       
   AS b      
   ON a.id_concepto = b.id_concepto    
   inner join Empleados E    
   on e.id_emp = b.id_emp    
   inner join Plazas F    
   on F.id_plaza = b.id_plaza    
   Inner Join Calennomina G  
   on b.Id_Periodo=G.Id_periodo     
 WHERE      
   e.noempx=@idemp and f.num_plaza=@idplaza AND b.id_periodo=@idperiodo and (c.id_razonsocial = 5) AND (a.Tipo = 2) AND (a.En_ListaRaya = 1)      
 ORDER BY      
   A.descripcion      
         
SET NOCOUNT OFF      

END
'
GO

GO
PRINT N'Creating [dbo].[spf_GuardaCancelacionFup]'
GO
IF OBJECT_ID(N'[dbo].[spf_GuardaCancelacionFup]', 'P') IS NULL
EXEC sp_executesql N'create procedure [dbo].[spf_GuardaCancelacionFup]
(  
@id_documento as int,
@id_usuario as int   
)  
with recompile   
as                                          
begin  
SET NOCOUNT ON;
declare @id_documento_loc as int =@id_documento
declare @id_usuario_loc as int =@id_usuario    
declare @id_periodo as int

set @id_periodo=(select id_periodo from FUP_Informacion_Documentos where id_documento=@id_documento_loc)

if(exists(select * from fup_cancelados where id_documento=@id_documento_loc))
begin 
    insert into hfup_cancelados (id_documento,id_MotivoCancelacion,Observaciones,id_usuario,movimiento,id_periodo) 
	SELECT id_documento,id_MotivoCancelacion,Observaciones,@id_usuario_loc AS id_usuario,getdate() AS movimiento,@id_periodo AS id_periodo
FROM fup_cancelados where id_documento=@id_documento_loc
end

SET NOCOUNT OFF;                    
end
'
GO

GO
PRINT N'Creating [dbo].[Dsv_Traspaso]'
GO
IF OBJECT_ID(N'[dbo].[Dsv_Traspaso]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:      David Santibañez vargas
-- Create date: 14/marzo/2014
-- Description:	Migracion de Datos al Nvo Esquema
-- =============================================
CREATE PROCEDURE [dbo].[Dsv_Traspaso]
(
@periodo varchar(max),
@forma int
)
              	
AS
BEGIN
	
	SET NOCOUNT ON;

	if @forma = 1
	begin
	   delete from  [informatica].dbo.Deta_datos  where id_periodo in (@periodo)
	   delete from  [informatica].dbo.Mtra_datosr where id_periodo in (@periodo)
	end

select a.id_periodo, a.Id_Emp, a.id_plaza, a.id_referencia, 
convert(varchar(12),cast(sum(case when b.tipo = 1 then  a.pesos + a.pesosexcento else 0 end)as money), 1) as Percepciones ,               
	 convert(varchar(12), cast(sum(case when b.tipo = 2 then  a.pesos + a.pesosexcento else 0 end) as money), 1) as Deducciones,              
	 convert(varchar(12), cast(sum ( (case when b.tipo = 1 then  a.pesos + a.pesosexcento else 0 end ) - (case when b.tipo = 2 then  a.pesos + a.pesosexcento else 0 end ) ) as money), 1) as Liquido 
	 into #paso1
	 from HistPagos a inner join dbo.conceptos b              
	 on b.id_concepto   = a.id_concepto  
	 where a.Id_Periodo in ( @periodo  )
group by a.id_periodo,a.id_emp,a.id_plaza, a.id_referencia
----------------------------------------------
--if object_id (N''tempdb..#paso2d'' ) is not null drop table #paso2d;
select a.id_concepto, a.id_periodopago, a.pesos, c_costo as cc, desde, hasta, id_referencia, id_emp, id_plaza, id_periodo 
into #paso2d from HistPagos a inner join dbo.conceptos b              
	 on b.id_concepto   = a.id_concepto    where b.tipo <> 3 and a.Id_Periodo in ( @periodo)
----------------------------------------------
--if object_id (N''tempdb..#dbefectos'' ) is not null drop table #dbefectos;
select  id_periodo, numero, id_cia, 
cast( year(c.FechaIni) as varchar) + ''''+ Right(''00'' + Cast(case when(day(c.FechaIni)>15)then month(c.FechaIni)*2 else (month(c.FechaIni)*2)-1 end as Varchar(2)),2) as desde,  
	 cast( year(c.FechaFin) as varchar) + ''''+ Right(''00'' + Cast(case when(day(c.FechaFin)>15)then month(c.FechaFin)*2 else (month(c.FechaFin)*2)-1 end as Varchar(2)),2) as hasta
	 into #dbefectos from calennomina c  where Id_Periodo in (select distinct Id_Periodo from #paso1 )
----------------------------------------------
ALTER TABLE #paso1 ADD desde INT
ALTER TABLE #paso1 ADD hasta INT
----------------------------------------------
UPDATE #paso1
SET desde = #dbefectos.desde 
from #dbefectos where #dbefectos.Id_Periodo = #paso1.id_periodo;

UPDATE #paso1
SET hasta = #dbefectos.hasta 
from #dbefectos where #dbefectos.Id_Periodo = #paso1.id_periodo;
----------------------------------------------
ALTER TABLE #paso2d ADD Mtra_datos_Id INT

insert into [informatica].dbo.Mtra_datosr (id_periodo, id_emp, id_plaza, id_referencia, percepciones, deducciones, liquido, desde, hasta)
select id_periodo, id_emp, id_plaza, id_referencia, percepciones, deducciones, liquido, desde, hasta from #paso1 

----------------------------------------------
update #paso2d  set Mtra_datos_Id = (select Mtra_datos_id  from [informatica].dbo.Mtra_datosr  b where  #paso2d.id_emp=b.id_emp and 
#paso2d.id_plaza=b.id_plaza and #paso2d.id_periodo=b.id_periodo and #paso2d.id_referencia=b.id_referencia)
----------------------------------------------
--if object_id (N''tempdb..#pruebamil'' ) is not null drop table #pruebamil;
select distinct  a.desde, a.id_periodo, Mtra_datos_id into #pruebamil
 from #paso2d a 
 where 
  a.Id_Periodo in( 
select id_periodo from calennomina where leyenda4 = 2 and (parcial >= 20 and parcial <= 40) )
----------------------------------------------
--if object_id (N''tempdb..#dbretros'' ) is not null drop table #dbretros;
select min(desde) as desde, max(desde) as hasta, id_periodo, Mtra_datos_id into #dbretros
  from #pruebamil group by Id_Periodo,  Mtra_datos_id
----------------------------------------------
UPDATE [informatica].dbo.Mtra_datosr
SET desde = #dbretros.desde 
from #dbretros where #dbretros.Id_Periodo = [informatica].dbo.Mtra_datosr.id_periodo and #dbretros.Mtra_datos_id = [informatica].dbo.Mtra_datosr.Mtra_datos_Id; 

UPDATE [informatica].dbo.Mtra_datosr
SET hasta = #dbretros.hasta 
from #dbretros where #dbretros.Id_Periodo = [informatica].dbo.Mtra_datosr.id_periodo and #dbretros.Mtra_datos_id = [informatica].dbo.Mtra_datosr.Mtra_datos_Id;
----------------------------------------------
insert into [informatica].dbo.Deta_datos 
select id_concepto, id_periodopago, pesos, cc, desde, hasta, id_referencia, id_periodo, Mtra_datos_Id from #paso2d
    
END
'
GO

GO
PRINT N'Creating [dbo].[getCMRprt]'
GO
IF OBJECT_ID(N'[dbo].[getCMRprt]', 'P') IS NULL
EXEC sp_executesql N'create procedure [dbo].[getCMRprt]
@qna int = 0
with encryption
as
begin 

---------------------
--------------------- Plazas para el reporte
---------------------

	IF OBJECT_ID(N''tempdb..#plazas'') IS NOT NULL Drop table #plazas;
	select id_plaza
	into #plazas
	from
		HTabulador_SE_Cat_Puesto a 
		join TTabulador_SE_Cat_Puesto b
		on a.id_rel = b.id_Tabulador_SE_Cat_Puesto
	where
		b.TModelo_SE_id_Modelo_SE in (1,4)
		and b.categoria like ''% E%''


---------------------
---------------------  Plazaempleados
---------------------

	IF OBJECT_ID(N''tempdb..#plazaemp'') IS NOT NULL Drop table #plazaemp;
	select a.id_plaza, a.id_emp, a.id_nodo, a.Fecha desde, 
		IsNull(
			(
				select dateadd(minute,-1,min(fecha)) from plazaempleados 
				where id_plaza = a.id_plaza and fecha > a.Fecha
			)
			,''9999-12-12''
		) hasta
	into #plazaemp
	from 
		plazaempleados a join #plazas b
		on a.Id_plaza = b.id_plaza
	where year(fecha) != 9999 and day(fecha) in (1,16)

	delete from #plazaemp where datediff(day,desde,hasta) < 1

---------------------
--------------------- Hplazas
---------------------

	IF OBJECT_ID(N''tempdb..#stsmot_tmp01'') IS NOT NULL Drop table #stsmot_tmp01;
	select 
		a.id_plaza, b.Valor_IdCampo sts, (
			select Valor_IdCampo 
			from hplazas c 
			where 
				a.id_plaza = c.Id_plaza 
				and b.Fecha = c.Fecha 
				and c.Id_TipoMovPlazas = 1
		) mot,
		b.Fecha
	into #stsmot_tmp01 
	from #plazas a join HPlazas b
	on a.id_plaza = b.Id_plaza
	where b.Id_TipoMovPlazas = 2

	IF OBJECT_ID(N''tempdb..#stsmot'') IS NOT NULL Drop table #stsmot;
	select
		a.id_plaza, a.sts, a.mot, a.fecha desde, 
		IsNull(
			(
				select dateadd(minute,-1,min(fecha))
				from #stsmot_tmp01 
				where id_plaza = a.id_plaza and fecha > a.fecha
			),
			''9999-12-31''
		) hasta
	into #stsmot
	from #stsmot_tmp01 a

	IF OBJECT_ID(N''tempdb..#hist_tmp01'') IS NOT NULL Drop table #hist_tmp01;
	select
		row_number() over (order by a.Id_plaza, a.desde desc, b.desde desc) r,
		a.Id_plaza, a.Id_Emp, a.id_nodo, b.sts, b.mot,
		a.desde d1, a.hasta h1, b.desde d2, b.hasta h2
	into #hist_tmp01
	from 
		#plazaemp a join #stsmot b
		on
			a.Id_plaza = b.id_plaza and (
				a.desde between b.desde and b.hasta or
				b.desde between a.desde and a.hasta
			)

	delete from #stsmot where sts = 3 and mot in (20,24,25) and DATEDIFF(day,desde, hasta ) < 1

	IF OBJECT_ID(N''tempdb..#hist'') IS NOT NULL Drop table #hist;
	select *,
	iif(
		sts = 1 and mot in (10,95) or
		sts = 3 and mot not in (20,24,25),
		(
			select min(d1)
			from #hist_tmp01 b
			where 
				b.id_plaza = a.Id_plaza
				and (
						b.sts = 1 and b.mot in (10,95) or
						b.sts = 3 and b.mot not in(20,24,25)
					)
				and b.d1 > (
					select max(d1) 
					from #hist_tmp01 c
						where
							a.id_plaza = c.Id_plaza  and c.d1 < a.d1 and
							(
								c.id_emp != a.Id_Emp or
								c.sts = 6
							)
				)
		),
		null
	) desde1095
	into #hist
	from #hist_tmp01 a
	order by id_plaza, r 

	IF OBJECT_ID(N''tempdb..#hist_actual'') IS NOT NULL Drop table #hist_actual;
	select 
		id_plaza, id_emp, id_nodo, sts, mot,
		(
			case 
				when desde1095 is not null then desde1095
				when d1 >= d2 then d1 
				when d1 < d2 then d2		
			end
		) desde,
		iif(h1 >= h2, h1 , h2) hasta
	into #hist_actual
	from #hist 
	where 
		dbo.anioquincenatofecha(@qna,1) between d2 and h2
		and dbo.anioquincenatofecha(@qna,1) between d1 and h1
		and (
			sts in (1,6,14,15) or
			(sts in (10,11) and mot in (44,45,46,48,55,56)) or
			(sts = 3 and mot in (20,24,25))
		)	
		and id_emp != 0

	IF OBJECT_ID(N''tempdb..#pre_01'') IS NOT NULL Drop table #pre_01;
	select
		a.Id_plaza, a.Id_Emp,
		b.RFC rfcbdp, c.PlazaIEEPO plabdp, 
		Right(''00'' + Cast(a.sts as varchar(2)), 2) estbdp,
		Right(''00'' + Cast(a.mot as varchar(2)), 2) motbdp, 
		dbo.DateToQNA(a.desde) desbdp,
		dbo.DateToQNA(a.hasta) hasbdp, d.Clave cetbdp,
		e.zecbdp, ''E'' probdp, 
		iif(a.mot = 9,''S'','''') iebbdp,
		ltrim(rtrim(b.ApPaterno)) + '' '' + ltrim(rtrim(b.ApMaterno)) + '' '' + ltrim(rtrim(b.Nombre)) nombdp,
		dbo.DateToQNA(
			(
				select top 1 Fecha_Alta_SEP
				from HFecha_Alta_SEP fas
				where
					id_emp = a.id_emp
					and movimiento < dbo.anioquincenatofecha(@qna,1)
				order by movimiento desc
			)
		) ingbdp
	into #pre_01
	from 
		#hist_actual a join empleados b
		on a.Id_Emp = b.Id_Emp
		join PlazaIEEPO c 
		on a.Id_plaza = c.Id_plaza
		join VistaTablaLongitud d
		on a.id_nodo = d.Id_Nodo
		join (
			select id_nodo, clave zecbdp
			from 
				RCT_Tabulador_SE_Zona ze1
				join TCT_Tabulador_SE_Zona ze2
			on ze1.id_rel = ze2.id_CT_Tabulador_SE_Zona
		) e
		on a.id_nodo = e.id_nodo	

---------------------------------------------------------------------------------------------		
---------------------------------------------------------------------------------------------		

	IF OBJECT_ID(N''tempdb..#emp_plaza'') IS NOT NULL Drop table #emp_plaza;
	select distinct id_emp, id_plaza 
	into #emp_plaza
	from #pre_01

	declare @periodos table (id_periodo int) 
	insert into @periodos
	select Id_Periodo
	from CalenNomina
	where 
		año = substring(cast(@qna as varchar(6)),1,4)
		and Numero = substring(cast(@qna as varchar(6)),5,2)
		and Id_cia = 2

	IF OBJECT_ID(N''tempdb..#pagos_tmp01'') IS NOT NULL Drop table #pagos_tmp01;
	select 
		id_plaza, id_emp, id_periodo, id_concepto, pesos, id_periodoPago
	into #pagos_tmp01
	from Nom_histpagos
	where 0 = 1

	insert into #pagos_tmp01 (id_plaza, id_emp, id_periodo, id_concepto, pesos,id_periodoPago)
	select nhp.id_plaza, nhp.id_emp, nhp.id_periodo, nhp.id_concepto, nhp.pesos, nhp.id_periodoPago
	from 
		Nom_histpagos nhp join #emp_plaza ep
		on nhp.Id_Emp = ep.Id_Emp and nhp.id_plaza = ep.Id_plaza
	where 
		nhp.id_periodo in (select Id_Periodo from @periodos) and
		(nhp.id_periodoPago = nhp.Id_Periodo or id_periodoPago = 0)

	declare @conceptos table (id_concepto int) 
	insert into @conceptos
	select id_concepto
		from Conceptos 
		where
			(
				resultado like ''[AQ][1-5]'' or
				resultado like ''[APQ][A-Z]'' or
				resultado like ''7[A-E]'' or
				resultado in (''07'',''BC'')
			) and descripcion not like ''%(MM)%''
			and tipo in (1,2)

	delete from #pagos_tmp01 where id_concepto not in (select id_concepto from @conceptos)

	create index idx_pagos_tmp01_pemp on #pagos_tmp01(id_emp, id_plaza)
	create index idx_pagos_tmp01_cto  on #pagos_tmp01(id_concepto)
	create index idx_pagos_tmp01_per on #pagos_tmp01(id_periodo)

-----------------------------------------------------------------------------------------------		
-----------------------------------------------------------------------------------------------		

	declare @qnaactual int = (
		select  top 1 cast(cast(año as varchar(4)) + Right(''00'' + Cast(numero as varchar(2)), 2)  as int )
		from CalenNomina where Procesado = 1 order by fechaini desc
	)
	
	IF OBJECT_ID(N''tempdb..#pre_02'') IS NOT NULL Drop table #pre_02;
	select 
		ROW_NUMBER() over (order by id_emp, id_plaza) r,
		*,
		isnull(
			case when @qna < @qnaactual then 
			(
				select cpt.resultado
				from #pagos_tmp01 nhp join conceptos cpt
					on nhp.id_concepto = cpt.id_concepto
				where 
					id_plaza = a.Id_plaza and Id_Emp = a.Id_Emp
					and nhp.id_concepto in (
						select id_concepto
						from Conceptos 
						where
							(
								resultado like ''[AQ][1-5]'' or
								resultado like ''[APQ][A-Z]''
							) and descripcion not like ''%(MM)%''
							and Tipo in (1,2)
					)
			)
			else
			(
				select cpt.resultado
				from histpagos hp join conceptos cpt
					on hp.id_concepto = cpt.id_concepto
				where 
					id_plaza = a.Id_plaza and Id_Emp = a.Id_Emp
					and Id_Periodo in (
						select Id_Periodo
						from CalenNomina
						where 
							año = substring(cast(@qna as varchar(6)),1,4)
							and Numero = substring(cast(@qna as varchar(6)),5,2)
							and Id_cia = 2
					) and
					(id_periodoPago = Id_Periodo or id_periodoPago = 0)
					and hp.id_concepto in (
						select id_concepto
						from Conceptos 
						where
							(
								resultado like ''[AQ][1-5]'' or
								resultado like ''[APQ][A-Z]''
							) and descripcion not like ''%(MM)%''
							and Tipo in (1,2)
					)
			)
		End, '''') guibdp,
		isnull(
			case when @qna < @qnaactual then 
			(
				select cpt.resultado
				from #pagos_tmp01 nhp join conceptos cpt
					on nhp.id_concepto = cpt.id_concepto
				where 
					id_plaza = a.Id_plaza and Id_Emp = a.Id_Emp
					and nhp.id_concepto in (
						select id_concepto
						from Conceptos 
						where
							(
								resultado like ''7[A-E]'' or
								resultado in (''07'',''BC'')
							) and descripcion not like ''%(MM)%''
							and Tipo in (1,2)
					)
			)
			else
			(
				select cpt.resultado
				from histpagos hp join conceptos cpt
					on hp.id_concepto = cpt.id_concepto
				where 
					id_plaza = a.Id_plaza and Id_Emp = a.Id_Emp
					and Id_Periodo in (
						select Id_Periodo
						from CalenNomina
						where 
							año = substring(cast(@qna as varchar(6)),1,4)
							and Numero = substring(cast(@qna as varchar(6)),5,2)
							and Id_cia = 2
					) and
					(id_periodoPago = Id_Periodo or id_periodoPago = 0)
					and hp.id_concepto in (
						select id_concepto
						from Conceptos 
						where
							(
								resultado like ''7[A-E]'' or
								resultado in (''07'',''BC'')
							) and descripcion not like ''%(MM)%''
							and Tipo in (1,2)
					)
			)
		End, '''') ncmbdp,
		isnull(
			case when @qna < @qnaactual then 
			(
				select nhp.Pesos
				from #pagos_tmp01 nhp join conceptos cpt
					on nhp.id_concepto = cpt.id_concepto
				where 
					id_plaza = a.Id_plaza and Id_Emp = a.Id_Emp
					and nhp.id_concepto in (
						select id_concepto
						from Conceptos 
						where
							(
								resultado like ''7[A-E]'' or
								resultado in (''07'',''BC'')
							) and descripcion not like ''%(MM)%''
							and Tipo in (1,2)
					)
			)
			else
			(
				select hp.Pesos
				from histpagos hp join conceptos cpt
					on hp.id_concepto = cpt.id_concepto
				where 
					id_plaza = a.Id_plaza and Id_Emp = a.Id_Emp
					and Id_Periodo in (
						select Id_Periodo
						from CalenNomina
						where 
							año = substring(cast(@qna as varchar(6)),1,4)
							and Numero = substring(cast(@qna as varchar(6)),5,2)
							and Id_cia = 2
					) and
					(id_periodoPago = Id_Periodo or id_periodoPago = 0)
					and hp.id_concepto in (
						select id_concepto
						from Conceptos 
						where
							(
								resultado like ''7[A-E]'' or
								resultado in (''07'',''BC'')
							) and descripcion not like ''%(MM)%''
							and Tipo in (1,2)
					)
			)
		End, 0) impncm
	into #pre_02
	from #pre_01 a

	select * from #pre_02
end'
GO

GO
PRINT N'Creating [dbo].[sp_Inserta_Folio_eliminados]'
GO
IF OBJECT_ID(N'[dbo].[sp_Inserta_Folio_eliminados]', 'P') IS NULL
EXEC sp_executesql N'create procedure [dbo].[sp_Inserta_Folio_eliminados]
(
@folio as varchar (20),
@id_user as int,
@motivo_borrado as varchar(500)
)
as
begin 
declare @id_documento as int
declare @rfc as varchar (13)
declare @id_periodo_borrado as int

set @id_documento =(select id_documento from fup_documentos where folio=@folio)
set @rfc =(select e.rfc from fup_documentos fd
           inner join empleados e on fd.id_emp=e.id_emp where fd.folio=@folio
          )
set @id_periodo_borrado=(select id_periodo from fup_informacion_documentos where id_documento=@id_documento)

insert into hfolio_eliminados values(@id_documento,@folio,@rfc,@motivo_borrado,@id_periodo_borrado,@id_user,GETDATE())
end'
GO

GO
PRINT N'Creating [dbo].[SP_ObtenBeneficiarios]'
GO
IF OBJECT_ID(N'[dbo].[SP_ObtenBeneficiarios]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		Victor Sanchez
-- Create date: 05/06/2017
-- Description:	Obtiene los beneficiarios de pension en base a el id_emp o rfc del empleado
-- Tablas usadas: Empleados, hbeneficiario, tbeneficiario, HmontofijoPensionado, hporcentajePensionado
-- =============================================
CREATE PROCEDURE [dbo].[SP_ObtenBeneficiarios] 
	-- Parametros de inicio siempre debe tener algo el rfc - id_cia o id_emp
	@RFC AS char(13),
	@id_emp AS int,
	@id_cia AS int,
	@id_usuario as int
AS
BEGIN

	SET NOCOUNT ON;
	
 declare @Permiso bit = (select id_usuario from accesosmenus where claveMenu = 1500000196 and id_usuario = @id_usuario);
  if @Permiso is null
     set @Permiso = 0
  else
     set @Permiso = 1

	--Si el parametro enviado es el RFC se obtiene el id_emp en base al rfc y compañia
if @RFC <> ''''
   begin
    set @id_emp = (select id_emp from empleados where RFC = @RFC and id_cia= @id_cia) 
   end
   --Si el parametro es por id_emp u habiendolo obtenido se inicia la busqueda de beneficiarios
if @id_emp <> 0
    --Nos aseguramos que al menos exista un beneficiario
    --if exists(select 1 from hbeneficiario where id_emp = @id_emp)
	--	begin
            --se obtiene el beneficirio y los datos personales 
     	    select dbo.fechaToAnioQuincena(a.fecha) as desde, dbo.fechaToAnioQuincena((
     	          --se obtiene el hasta para poder diferenciar dentro de la historia el beneficiario(s) actual e historia
			      select top 1 fecha  
						 from hbeneficiario 
						 where id_beneficiario = a.id_beneficiario and fecha > a.fecha
                  order by fecha desc
			)) AS hasta, a.id_beneficiario, b.apPaterno , b.apMaterno, b.nombre, b.rfc_ben, curp, b.sexo, b.fechanacimiento, b.Cuenta_Invernomina, c.MontoFijoPensionado, d.PorcentajePensionado
			from hbeneficiario a join tbeneficiario b
			on a.id_Beneficiario = b.id_Beneficiario and a.id_emp = @id_emp
			left join HmontofijoPensionado c
			on a.id_Beneficiario = c.id_Beneficiario 
			left join hporcentajePensionado d
			on a.id_Beneficiario = d.id_Beneficiario 
			where a.id_emp != 0	and  @Permiso = 1	
    --    end   
END
'
GO

GO
PRINT N'Creating [dbo].[SP_ProrrateaRezonificacion]'
GO
IF OBJECT_ID(N'[dbo].[SP_ProrrateaRezonificacion]', 'P') IS NULL
EXEC sp_executesql N'
CREATE Procedure [dbo].[SP_ProrrateaRezonificacion] (      
  @No_empx int,    -- Empleado
  @NumPlaza int ,   --plaza
  @idconcepto int,  --concepto
  @cantidad float,  --cantidad
  @desde int, ---desde
  @hasta int  --- hasta
)      
As        
    
    Declare @noPartes int
    
    set @noPartes = (CAST(@hasta as int) - CAST(@desde as int) ) + 1
    print @nopartes
    
    --Select * from histpagos where id_plaza in (Select id_plaza from plazas where Num_Plaza = @NumPlaza) and 
    --Id_Emp in ( Select Id_Emp from empleados where NOEMPx = @No_empx ) and 
    --Id_Referencia = 44 and 
    --id_concepto = @idconcepto and 
    --cast(desde as int) >= @desde  and 
    --cast(desde as int) <= @hasta
    
    update histpagos set Pesos = @cantidad/@nopartes where id_plaza in (Select id_plaza from plazas where Num_Plaza = @NumPlaza) and 
    Id_Emp in ( Select Id_Emp from empleados where NOEMPx = @No_empx ) and 
    Id_Referencia = 44 and 
    id_concepto = @idconcepto and 
    cast(desde as int) >= @desde  and 
    cast(desde as int) <= @hasta'
GO

GO
PRINT N'Creating [dbo].[sp_NivelPago]'
GO
IF OBJECT_ID(N'[dbo].[sp_NivelPago]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[sp_NivelPago]
    (@PtoReorden int)
AS
BEGIN
	Declare @fecha varchar(12)
	Declare @Archivo varchar(max)
	set @fecha=substring(CONVERT(VARCHAR(10), GETDATE(), 103),1,2)+substring(CONVERT(VARCHAR(10), GETDATE(), 103),4,2)+substring(CONVERT(VARCHAR(10), GETDATE(), 103),7,4)+substring(CONVERT(VARCHAR(15), GETDATE(), 14),1,2)+substring(CONVERT(VARCHAR(15), GETDATE(), 14),4,2)
	set @Archivo=''by_RespaldoHTabulador_SE_Nivel_Pago''+@fecha

	
  If @PtoReorden = 0 
    begin
		IF EXISTS (SELECT * FROM paso..sysobjects WHERE name  = @Archivo)
		BEGIN
			exec(''drop table paso.dbo.''+@archivo)
		END


		exec(''select * 
		into paso.dbo.'' +@Archivo +'' 
		from HTabulador_SE_Nivel_Pago where id_plaza in 
		(select id_plaza from HTabulador_SE_Cat_Puesto where id_rel in 
			(select id_Tabulador_SE_Cat_Puesto t from ValoresMatriz4 where Valor = 0 and 
			id_concepto in (1701,1702,1703,1704,1705,1706,1707,1431,1433) and id_Tabulador_SE_Nivel_Pago = 3
			group by id_Tabulador_SE_Cat_Puesto) and id_plaza >=1000) and id_plaza >=1000 and id_rel = 3'')
	
		update HTabulador_SE_Nivel_Pago set id_rel = 1 where id_plaza in (select id_plaza from HTabulador_SE_Cat_Puesto 
		where id_rel in (select id_Tabulador_SE_Cat_Puesto from ValoresMatriz4 where Valor = 0 
			and id_concepto in (1701,1702,1703,1704,1705,1706,1707) and id_Tabulador_SE_Nivel_Pago = 3
			group by id_Tabulador_SE_Cat_Puesto) and id_plaza >=1000) and id_plaza >=1000 and id_rel = 3    
			
    End
  
END'
GO

GO
PRINT N'Creating [dbo].[sp_Borrar_Folio]'
GO
IF OBJECT_ID(N'[dbo].[sp_Borrar_Folio]', 'P') IS NULL
EXEC sp_executesql N'create procedure [dbo].[sp_Borrar_Folio]
(  
@folio as varchar(max)   
)  
as                                          
begin  
delete from fup_valortext where id_documento in (
select Id_Detalle from fup_documento_detalle where id_documento in (
select id_documento from FUP_Documentos where folio=@folio
))

delete from fup_valorfloat where id_documento in (
select Id_Detalle from fup_documento_detalle where id_documento in (
select id_documento from FUP_Documentos where folio=@folio
))  

delete from fup_valorinteger where id_documento in (
select Id_Detalle from fup_documento_detalle where id_documento in (
select id_documento from FUP_Documentos where folio=@folio
))

delete from fup_valordate where id_documento in (
select Id_Detalle from fup_documento_detalle where id_documento in (
select id_documento from FUP_Documentos where folio=@folio
))

delete from fup_valorlista where id_documento in (
select Id_Detalle from fup_documento_detalle where id_documento in (
select id_documento from FUP_Documentos where folio=@folio
))  

delete from fup_valorsubcatalogo where id_documento in (
select Id_Detalle from fup_documento_detalle where id_documento in (
select id_documento from FUP_Documentos where folio=@folio
)) 

delete from fup_cancelados where id_documento in (
select Id_Detalle from fup_documento_detalle where id_documento in (
select id_documento from FUP_Documentos where folio=@folio
)) 

delete from fup_documento_detalle_mesacontrol where id_documento in (
select id_documento from fup_documentos where folio in (@folio))

delete from fup_informacion_documentos where id_documento in (
select id_documento from fup_documentos where folio in (@folio))

delete from fup_documento_detalle where id_documento in (
select id_documento from fup_documentos where folio in (@folio))

delete from fup_documentos where folio in (@folio)
end
'
GO

GO
PRINT N'Creating [dbo].[SP_distribucionRetroactivo]'
GO
IF OBJECT_ID(N'[dbo].[SP_distribucionRetroactivo]', 'P') IS NULL
EXEC sp_executesql N'
    CREATE procedure [dbo].[SP_distribucionRetroactivo] (
    @No_empx int,    -- Empleado
	@NumPlaza int   --plaza
    )
    as
    
    Select histpagos.id_concepto,Conceptos.resultado,SUM(Pesos + pesosexcento) as Cantidad,min(Desde) as desde,max(hasta) as hasta, 
    case when id_periodo = 899 then ''Recibo 1'' else (case when id_periodo = 900 then ''Recibo 2'' else (case when id_periodo = 901 then ''Recibo 3'' else (case when id_periodo = 902 then ''Recibo 4'' else (case when id_periodo = 903 then ''Recibo 5'' else '''' end )end )end )end )end as Recibo 
    from (histpagos inner join Conceptos on histpagos.id_concepto = Conceptos.id_concepto  ) where id_plaza in (Select id_plaza from plazas where Num_Plaza = @NumPlaza) and 
    Id_Emp in ( Select Id_Emp from empleados where NOEMPx = @No_empx ) and Id_Referencia = 44 and id_procesonomina = 2 and id_periodo >= 899
    group by histpagos.id_concepto,Conceptos.resultado, histpagos.id_periodo
    order by id_periodo, id_concepto'
GO

GO
PRINT N'Creating [dbo].[sp_movs_cambios]'
GO
IF OBJECT_ID(N'[dbo].[sp_movs_cambios]', 'P') IS NULL
EXEC sp_executesql N'----------------------------------
--- cambio de datos
----------------------------------
----------------------------------
----------------------------------
--- QUINCENA DE LA QUE SE DESEA EL REPORTE---
create procedure [dbo].[sp_movs_cambios]
 (
 @Quincena as int,
 @id_cia as int
 )
 with encryption 
 as begin
declare @año as int
set @quincena=Case when @Quincena=1 then 24 else @Quincena-1 end
set @año= Case when @quincena=24 then year(GETDATE())-1 else YEAR(GETDATE()) end

select row_number() OVER (ORDER BY ftm.clave,fmm.clave) as ID_OPERACION,ftm.Clave+''-''+fmm.clave AS OPERACION,
e.curp AS CURP,
replace(pi.PlazaIEEPO,'' '','''') AS CPZA,
ttcm.id_Tabulador_SE_CM  AS NIVEL_SALARIAL,
''R20'' AS UR,
''PERIODO''= CASE WHEN C.NUMERO=24 THEN cast (right(''00'' + cast(01 as varchar(max)),2) + cast(''/'' as varchar(max)) + cast (year(getdate()) as varchar (max)) as varchar(max)) ELSE 
cast (right(''00'' + cast((cast (c.Numero as int)+1) as varchar(max)),2) + cast(''/'' as varchar(max)) + cast(c.año as varchar(max)) as varchar(max)) END,
''O'' AS TIPO_NOMINA,convert(char(12),c.fechaini,103) as FECHA,
fid.Centro_Trabajo AS CCT,
e.RFC, e.ApPaterno AS PRIMER_APELLIDO,
e.ApMaterno AS SEGUNDO_APELLIDO,
e.Nombre AS ''NOMBRE(S)'',
right(''00'' + cast(tnac.Id_Nacionalidad as varchar(max)),3) AS NACIONALIDAD,
PAIS_NAC=Case when tp.Descr=''MEXICO'' then 141 else 0 end, 
ENTIDAD_NAC=Case  substring(e.curp,12,2)
            when ''AS'' then 1 
            when ''BC'' then 2 
            when ''BS'' then 3 
            when ''CC'' then 4 
            when ''CS'' then 5
            when ''CM'' then 6 
            when ''CL'' then 7 
            when ''CH'' then 8 
            when ''DF'' then 9
            when ''DG'' then 10
            when ''GT'' then 11
            when ''GR'' then 12
            when ''HG'' then 13
            when ''JC'' then 14 
            when ''MC'' then 15 
            when ''MN'' then 16
            when ''MS'' then 17 
            when ''NT'' then 18 
            when ''NL'' then 19
            when ''OC'' then 20
            when ''PL'' then 21 
            when ''QT'' then 22
            when ''QR'' then 23 
            when ''SP'' then 24 
            when ''SL'' then 25
            when ''SR'' then 26
            when ''TC'' then 27
            when ''TS'' then 28
            when ''TL'' then 29
            when ''VZ'' then 30
            when ''YN'' then 31
            when ''ZS'' then 32
            else 0 end,         
MUNICIPIO_NAC= Case when e.Id_MunicipioNac is null then 0 else tc.Id_Ciudad end,
e.SEXO,
EDO_CIVIL= Case when e.edocivil=''C'' then ''02'' else 
		   Case when e.edocivil=''S'' then ''01'' else ''01'' end end,
CALLE_Y_NUM= Case when hd.Calle is null then '''' else cast(hd.calle as varchar(max))+ '' ''+ CAST(hd.numext as varchar (10)) end,
CP= Case when hd.CodPostal is null then '''' else hd.CodPostal end,
COLONIA= Case when hd.Id_Colonia = 0 or hd.Id_Colonia is null then '''' else tcol.DESCR end,
ENTIDAD=Case when e.Id_EstadoNac is null then ''S/A'' else case when e.Id_EstadoNac<=32 then substring(te.descr,4,50) else te.descr end end,
MUNICIPIO= Case when e.Id_MunicipioNac is null then '''' else upper(tc.Descr) end,
LOCALIDAD=Case when hd.Id_Localidad = 0 or hd.Id_Colonia is null then '''' else tloc.Descr end,
'''' AS NIV_MAX_ESTUD,
ING_GOB_FED= case when hfagf.fecha is null then '''' else SUBSTRING(dbo.fechatoanioquincena(hfagf.fecha),1,4)+'' '' +SUBSTRING(dbo.fechatoanioquincena(hfagf.fecha),5,2) end,
ING_SEP= case when hfas.fecha is null then '''' else SUBSTRING(dbo.fechatoanioquincena(hfas.fecha),1,4)+'' '' +SUBSTRING(dbo.fechatoanioquincena(hfas.fecha),5,2) end,
ING_RAMA= case when hfar.fecha is null then '''' else SUBSTRING(dbo.fechatoanioquincena(hfar.fecha),1,4)+'' '' + SUBSTRING(dbo.fechatoanioquincena(hfar.fecha),5,2)end,
'''' as TIPO_LIC,	
'''' as QUINQ_DOC,	
'''' as QUINQ_ADM	,
'''' as GRADO_LIC,	
'''' as TITULACIÓN,
HORARIO=Case when rt.id_nodo is null then '''' else tt.descripcion end,
ftm.Clave as MOVIMIENTO,	
ftm.Descripcion as DESC_MOVIMIENTO,	
fmm.Clave as MOTIVO,	
DESC_MOTIVO= CaSe When fdd.Id_MotivoMovimiento=320 then fmm.Descripcion+substring(ttfdp.Descripcion,3,1000) else fmm.Descripcion end,
Convert(varchar(10), fdd.Fechaini, 103) as FECHA_INI, 
FECHA_FIN= case when dbo.fechaToAnioQuincena(fdd.fechaini)=dbo.fechaToAnioQuincena(fdd.fechafin) then Convert(varchar(10), ''00/00/0000'', 103)  else Convert(varchar(10), fdd.FechaFin, 103) end,
'''' as CONCEPTOS_PAGO,
REGIMEN= Case when di.regimen_pensionario is null then 2 else Case when di.regimen_pensionario='''' then 2 else Case when di.regimen_pensionario=''DECIMO TRANSITORIO'' then 1 else Case when di.regimen_pensionario=''CUENTAS INDIVIDUALES'' then 2 end end end end
from fup_documentos fd
inner join empleados e on fd.Id_Emp = e.Id_Emp
inner join fup_documento_detalle fdd on fd.Id_Documento = fdd.Id_Documento
inner join plazas p on fdd.Id_Plaza = p.Id_plaza
inner join plazaieepo pi on fdd.Id_Plaza = pi.Id_plaza
inner join (select id_plaza,MAX(fecha) fecha
from HTabulador_SE_cm htcm
group by id_plaza
) nc on pi.Id_plaza=nc.id_plaza
inner join HTabulador_SE_CM htcm on htcm.id_plaza=nc.id_plaza and htcm.fecha=nc.fecha
inner join TTabulador_SE_CM ttcm on htcm.id_rel=ttcm.id_Tabulador_SE_CM
inner join usuarios u on fd.Id_Usuario = u.Id_Usuario
inner join FUP_Informacion_Documentos fid on fd.Id_Documento = fid.Id_Documento
inner join CalenNomina c on fid.Id_Periodo = c.Id_Periodo
inner join FUP_MotivoMovimiento fmm on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
inner join tniveleducativo tn on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
inner join TNacionalidad tnac on e.Id_Nacionalidad=tnac.Id_Nacionalidad
inner join TPais tp on tnac.Id_Nacionalidad=tp.Id_Pais
left join TEstados te on e.Id_EstadoNac = te.Id_Estado
left join tciudad tc on e.Id_EstadoNac=te.Id_Estado and tc.Id_Ciudad=e.Id_MunicipioNac
left join (select id_emp,MAX(movimiento) fecha
from hdomicilio 
group by id_emp
) hdoc on e.Id_emp=hdoc.id_emp
left join HDomicilio hd on hd.id_emp=hdoc.id_emp and hdoc.fecha=hd.Movimiento
left join tcolonia tcol on hd.Id_Colonia=tcol.Id_Colonia
left join TLocalidad tloc on hd.Id_Localidad=tloc.id_Localidad
left join FUP_ValorSubCatalogo fvs on fdd.Id_Detalle=fvs.Id_Documento
left join TTFup_Cambio_Datos_Personales ttfdp on fvs.Valor=ttfdp.id_TFup_Cambio_Datos_Personales
left join (select id_emp,MAX(fecha_alta_gob_fed) fecha
from HFecha_Alta_Gob_Fed group by id_emp
) hfagf on e.Id_Emp=hfagf.id_emp
left join (select id_emp,MAX(fecha_alta_sep) fecha
from HFecha_Alta_sep group by id_emp
) hfas on e.Id_Emp=hfas.id_emp
left join (select id_emp,MAX(fecha_alta_rama) fecha
from HFecha_Alta_rama group by id_emp
) hfar on e.Id_Emp=hfar.id_emp
inner join VistaTablaLongitud vt on fid.Centro_Trabajo=vt.clave
inner join RCT_Turno rt on vt.Id_Nodo=rt.id_nodo
inner join TCT_Turno tt on rt.id_rel=tt.id_CT_Turno
left join DatosISSSTE di on e.curp=di.curp
where fid.Id_Periodo in (select id_periodo from calennomina where Numero in (@quincena)
and Id_cia=@id_cia --and Leyenda10=''CFUP'' 
and Año=@año and parcial<> 0
union all 
select id_periodo from calennomina where Numero in (@quincena+1)
and Id_cia=@id_cia --and Leyenda10=''CFUP'' 
and Año=@año and parcial= 0) and e.id_cia=@id_cia and fd.Id_Estatus =2 and fd.folio not in (select folio_n from HFolio_verificado)
and ftm.Id_TipoMovimiento in (4,8,17) and fmm.id_motivomovimiento in (11,12,119,120,84)
and fd.observaciones not like ''%verificado%'' and fd.observaciones not like ''%procesado%''
order by  id_operacion,ftm.clave,fmm.clave
end

'
GO

GO
PRINT N'Creating [dbo].[spd_EliminaRecalculo]'
GO
IF OBJECT_ID(N'[dbo].[spd_EliminaRecalculo]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		wcahun
-- Create date: Mar-2014
-- Description:	Procedimiento para eliminarun recalculo completo
-- =============================================
CREATE PROCEDURE [dbo].[spd_EliminaRecalculo]
@id_plaza int, @id_periodo int, @id_emp int, @id_recalculo int
WITH EXEC AS CALLER
AS
BEGIN
	

	delete from histpagosdetalle 
	where ID_PLAZA=@id_plaza AND ID_EMP=@id_emp AND ID_PERIODO=@id_periodo 
		AND ID_REFERENCIA=@id_recalculo 
    
    	delete from histpagos 
	where ID_PLAZA=@id_plaza AND ID_EMP=@id_emp AND ID_PERIODO=@id_periodo 
		AND ID_REFERENCIA=@id_recalculo 
    

	select ''correcto'' as resultado   
END'
GO

GO
PRINT N'Creating [dbo].[spf_inserta_observacion_omitidos]'
GO
IF OBJECT_ID(N'[dbo].[spf_inserta_observacion_omitidos]', 'P') IS NULL
EXEC sp_executesql N'create procedure [dbo].[spf_inserta_observacion_omitidos]                        
(                          
 @id_documento as int,    
 @num_plaza as int,                        
 @accion as bit                          
)     
with recompile    
as    
begin    
declare @id_documento_loc as int=@id_documento
declare @num_plaza_loc as int=@num_plaza      
declare @accion_loc as int=@accion  
      
declare @id_emp as int=(select id_emp from fup_documentos where Id_Documento=@id_documento_loc)  
declare @observaciones as varchar(4000)= (select observaciones from fup_documentos where Id_Documento=@id_documento_loc and id_emp=@id_emp)     
declare @desde as varchar(6)= (select dbo.fechaToAnioQuincena(fechaini) from FUP_Documento_Detalle where Id_Plaza=@num_plaza_loc and id_documento=@id_documento_loc)  

if (@accion_loc=0)    
begin    
    update TEmpleadosPlazaOmitidos set Observaciones=@observaciones where Noemp=@id_emp and
    NumPlaza=@num_plaza_loc and Desde=@desde and TipoPago=7 and Status=''O''
end       
end '
GO

GO
PRINT N'Creating [dbo].[DSV_SacaHistPagosPerc]'
GO
IF OBJECT_ID(N'[dbo].[DSV_SacaHistPagosPerc]', 'P') IS NULL
EXEC sp_executesql N'
CREATE   PROCEDURE [dbo].[DSV_SacaHistPagosPerc]      
(      
@idplaza int,      
@Idemp int,      
@idperiodo int,
@refere int     
)  
with encryption  
AS      
SET NOCOUNT ON      

declare @PDtbltmp table (
Id_Emp int, 
Id_Periodo int, 
id_concepto int, 
Consecutivo int, 
Horas float, 
Pesos float, 
Fecha smalldatetime, 
CC varchar(10), 
PesosExcento float, 
id_plaza int, 
Id_Referencia int,
id_periodoPago int, 
Id_ProcesoNomina int, 
Desde varchar(6), 
Hasta varchar(6), 
esHistoria bit, 
Fix bit)
declare @danio int = (select año from calennomina where Id_Periodo = @idperiodo )

--if @DAnio  = 2012 
--insert into @PDtbltmp 
  --select *  from [dep].dbo.Nom_histpagos_2012 where @idplaza  = id_plaza and @Idemp = id_emp 
--if @Danio = 2013
--insert into @PDtbltmp 
  --select *  from [dep].dbo.Nom_histpagos_2013 where @idplaza = id_plaza and @Idemp = id_emp 

insert into @PDtbltmp 
  select *  from Nom_histpagos where @idplaza = id_plaza and @Idemp = id_emp 

-- creacion de variable tipo tabla


 SELECT      
   a.id_concepto, 
   case   when a.id_concepto=  1328
     then b.c_costo
   else a.Resultado 
   end
   as Clave,convert(varchar(12), cast(b.Pesos as money), 1) AS Importe,a.descripcion, b.Id_Emp,Cast(f.año as varchar(4)) + ''''+Right(''00''+Cast(f.numero as varchar(2)),2) as Periodo, b.id_plaza,Desde+'' ''+Hasta as Desde_Hasta      
      
 FROM      
   Conceptos a       
   INNER JOIN ConceptoRelEmpresa c      
   ON a.id_concepto = c.id_concepto       
   INNER JOIN      
            (SELECT     Id_Emp, id_concepto, Id_Periodo, id_plaza, Pesos,Desde,Hasta, isnull(Id_Referencia,0)  Id_Referencia, c_costo      
            FROM       HistPagos     
            UNION ALL      
            SELECT     Id_Emp, id_concepto, Id_Periodo, id_plaza, Pesos,Desde,Hasta, isnull(Id_Referencia,0) Id_Referencia, cc as c_costo
            FROM       @PDtbltmp)       
   AS b      
   ON a.id_concepto = b.id_concepto      
   inner join Empleados D    
   On D.id_emp = b.id_emp    
   inner join Plazas E    
   on E.id_plaza = b.id_plaza  
   Inner Join Calennomina F  
   on b.Id_Periodo=F.Id_periodo     
     
 WHERE      
   b.id_emp=@idemp and e.id_plaza=@idplaza AND b.id_periodo=@idperiodo and  (c.id_razonsocial = 5) AND (a.Tipo = 1) AND (a.En_ListaRaya = 1)  
   --and b.Id_Referencia = @refere     
 ORDER BY 
   Desde,Hasta,A.descripcion      

select * from   @PDtbltmp       
SET NOCOUNT OFF    

'
GO

GO
PRINT N'Creating [dbo].[spc_ValidacionAnexosNomina]'
GO
IF OBJECT_ID(N'[dbo].[spc_ValidacionAnexosNomina]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[spc_ValidacionAnexosNomina]
@tipo int, @periodos varchar(100), @siresponsabilidad int = 0, @esJMP int = 0, @tabla1 varchar(100) = '''', @tabla2 varchar(100) = '''', @tablaB varchar(100) = '''', @tablaLn varchar(100) = '''', @tablaR varchar(100) = '''', @numero varchar(10) = ''1'', @agrupa int = 0, @capturado int = 0, @procesado int = 0
WITH EXEC AS CALLER
AS
DECLARE @Xml AS XML  
SET @Xml = ''<periodo>'' + REPLACE(@periodos, '','', ''</periodo><periodo>'') + ''</periodo>'';  



declare @query nvarchar(max) = ''''

if @tipo = 1
begin

declare @estatus varchar(10) = ''''
  
if(@capturado = 0 and @procesado = 0)
  set @estatus = ''2''
if(@capturado = 1 and @procesado = 1)
  set @estatus = ''4,2''
if(@capturado = 1 and @procesado = 0)
  set @estatus = ''4,2''
if(@capturado = 0 and @procesado = 1)
  set @estatus = ''2''

DECLARE @XmlEstatus AS XML  
SET @XmlEstatus = ''<estatus>'' + REPLACE(@estatus, '','', ''</estatus><estatus>'') + ''</estatus>''; 

delete from Anexos_Nombramientos where Quincena = (select dbo.fechatoanioquincena(max(fechaini)) from calennomina where id_periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n)))  
and id_periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))

delete from a from Anexos_Nombramientos a
inner join Anexos_LayoutProceso b on a.Id_Documento = b.Id_Documento and a.Id_Emp = b.Id_Emp and a.Id_Plaza = b.Id_Plaza and a.Id_periodo = b.Id_Periodo

delete 
from Anexos_Nombramientos where Quincena = (select dbo.fechatoanioquincena(max(fechaini)) from calennomina where id_periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))) and id_periodo 
not in (select id_periodo from calennomina where año = (select max(año) from calennomina where id_periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n)))
and numero = (select max(numero) from calennomina where id_periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))) and ( parcial between 20 and 39 or parcial = 0)) 




    select a.* into #ArchNombraUltOperacion from Anexos_Nombramientos a inner join (
      select clave, max(fecha_operacion) fecha_operacion from Anexos_Nombramientos where operacion not in (''08-98'',''00-00'')
      and Registro not in (
          select Registro 
          from Anexos_Nombramientos where operacion like ''%20%''
          and convert( datetime , fecha_final,103 ) <= dbo.anioquincenatofecha((select dbo.fechatoanioquincena(max(fechaini)) from calennomina where id_periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))),0)-1
      )
      group by clave
    ) b on a.clave = b.clave and a.fecha_operacion = b.fecha_operacion


  select ''000000000'' Id_Operacion, ftm.Clave +''-''+fmm.Clave AS OPERACION, e.curp AS CURP, replace(case when pi.plazaieepo like ''14%'' or pi.plazaieepo like ''15%'' then ''07''+substring(pi.plazaieepo,3, len(pi.plazaieepo)) else pi.plazaieepo end,'' '','''') AS CLAVE_PLAZA,
  ttcm.id_Tabulador_SE_CM  AS NIVEL_SALARIAL, '''' AS UR, '''' FECHA, '''' CCT, '''' RFC, '''' PRIMER_APELLIDO, '''' SEGUNDO_APELLIDO, '''' [NOMBRE(S)], '''' NACIONALIDAD, '''' PAIS_NAC, '''' ENTIDAD_NAC, '''' MUNICIPIO_NAC, '''' SEXO,'''' EDO_CIVIL,
  '''' CALLE_Y_NUM,'''' CP,'''' COLONIA,'''' ENTIDAD,'''' MUNICIPIO,'''' LOCALIDAD,'''' NIV_MAX_ESTUD,'''' ING_GOB_FED,'''' ING_SEP,'''' ING_RAMA,'''' CED_PROF,'''' TIPO_LIC,	'''' QUINQ_DOC,	'''' QUINQ_ADM	,'''' GRADO_LIC,	'''' TITULACION,
  '''' HORARIO,ftm.Clave as MOVIMIENTO,	ftm.Descripcion as DESC_MOVIMIENTO,	fmm.Clave as MOTIVO,	fmm.Descripcion as DESC_MOTIVO,'''' as FECHA_INI, FECHA_FIN= Convert(varchar(10), fdd.FechaFin-1, 103),cast('''' as varchar(300)) as CONCEPTOS_PAGO,'''' as REGIMEN, fd.Id_Documento, e.Id_Emp, pi.Id_Plaza, 5 TipoAnexo,fid.Id_Periodo, ftm.Id_TipoMovimiento, fmm.Id_MotivoMovimiento
  into #BajasTotalesFUP
  from fup_documentos fd inner join empleados e on fd.Id_Emp = e.Id_Emp inner join fup_documento_detalle fdd on fd.Id_Documento = fdd.Id_Documento inner join plazas p on fdd.Id_Plaza = p.Id_plaza inner join plazaieepo pi on fdd.Id_Plaza = pi.Id_plaza
  inner join (select id_plaza,MAX(fecha) fecha from HTabulador_SE_cm htcm group by id_plaza ) nc on pi.Id_plaza=nc.id_plaza inner join HTabulador_SE_CM htcm on htcm.id_plaza=nc.id_plaza and htcm.fecha=nc.fecha inner join TTabulador_SE_CM ttcm on htcm.id_rel=ttcm.id_Tabulador_SE_CM
  inner join usuarios u on fd.Id_Usuario = u.Id_Usuario inner join FUP_Informacion_Documentos fid on fd.Id_Documento = fid.Id_Documento inner join CalenNomina c on fid.Id_Periodo = c.Id_Periodo inner join FUP_MotivoMovimiento fmm on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
  inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento inner join tniveleducativo tn on fid.Id_Nivel_Educativo=tn.id_NivelEducativo inner join TNacionalidad tnac on e.Id_Nacionalidad=tnac.Id_Nacionalidad inner join TPais tp on tnac.Id_Nacionalidad=tp.Id_Pais
  left join TEstados te on e.Id_EstadoNac = te.Id_Estado left join tciudad tc on e.Id_EstadoNac=te.Id_Estado and tc.Id_Ciudad=e.Id_MunicipioNac left join (select id_emp,MAX(movimiento) fecha from hdomicilio  group by id_emp ) hdoc on e.Id_emp=hdoc.id_emp
  left join HDomicilio hd on hd.id_emp=hdoc.id_emp and hdoc.fecha=hd.Movimiento left join tcolonia tcol on hd.Id_Colonia=tcol.Id_Colonia left join TLocalidad tloc on hd.Id_Localidad=tloc.id_Localidad left join (select id_emp,MAX(fecha_alta_gob_fed) fecha
  from HFecha_Alta_Gob_Fed group by id_emp ) hfagf on e.Id_Emp=hfagf.id_emp left join (select id_emp,MAX(fecha_alta_sep) fecha from HFecha_Alta_sep group by id_emp ) hfas on e.Id_Emp=hfas.id_emp left join (select id_emp,MAX(fecha_alta_rama) fecha
  from HFecha_Alta_rama group by id_emp ) hfar on e.Id_Emp=hfar.id_emp inner join VistaTablaLongitud vt on fid.Centro_Trabajo=vt.clave inner join RCT_Turno rt on vt.Id_Nodo=rt.id_nodo inner join TCT_Turno tt on rt.id_rel=tt.id_CT_Turno
  where e.id_cia in ( 1,2,3 ) and fd.Id_Estatus in (SELECT estatus.n.value(''.'', ''INT'') AS n FROM    @XmlEstatus.nodes(''/estatus'') AS estatus(n)) and fd.folio not in (select folio_n from HFolio_verificado) and (ftm.Id_TipoMovimiento in (6,7) or fmm.Id_MotivoMovimiento in (25,26,32,33))
  and replace(case when pi.plazaieepo like ''14%'' or pi.plazaieepo like ''15%'' then ''07''+substring(pi.plazaieepo,3, len(pi.plazaieepo)) else pi.plazaieepo end,'' '','''') in (select clave_plaza from Anexos_LayoutProceso where tipoanexo = 1)


  select ''000000000'' Id_Operacion, ftm.Clave+''-''+fmm.clave AS OPERACION,e.curp AS CURP,replace(case when pi.plazaieepo like ''14%'' or pi.plazaieepo like ''15%'' then ''07''+substring(pi.plazaieepo,3, len(pi.plazaieepo)) else pi.plazaieepo end,'' '','''') AS CLAVE_PLAZA,
  ttcm.id_Tabulador_SE_CM  AS NIVEL_SALARIAL,'''' AS UR,'''' as FECHA,'''' AS CCT,'''' RFC, '''' PRIMER_APELLIDO,'''' SEGUNDO_APELLIDO,'''' [NOMBRE(S)],'''' NACIONALIDAD,'''' PAIS_NAC,'''' ENTIDAD_NAC,'''' MUNICIPIO_NAC,'''' SEXO,'''' EDO_CIVIL,
  '''' CALLE_Y_NUM,'''' CP,'''' COLONIA,'''' ENTIDAD,'''' MUNICIPIO,'''' LOCALIDAD,'''' NIV_MAX_ESTUD,'''' ING_GOB_FED,'''' ING_SEP,'''' ING_RAMA,'''' CED_PROF,'''' TIPO_LIC,	'''' QUINQ_DOC,	'''' QUINQ_ADM,'''' GRADO_LIC,	'''' TITULACION,
  '''' HORARIO,ftm.Clave as MOVIMIENTO,	ftm.Descripcion as DESC_MOVIMIENTO,	fmm.Clave as MOTIVO,	fmm.Descripcion as DESC_MOTIVO,Convert(varchar(10), fdd.Fechaini, 103) as FECHA_INI, FECHA_FIN= case when dbo.fechaToAnioQuincena(fdd.fechaini)=dbo.fechaToAnioQuincena(fdd.fechafin) then Convert(varchar(10), dbo.anioQuincenaToFecha(''999924'',1), 103)  else Convert(varchar(10), fdd.FechaFin, 103) end,
  cast('''' as varchar(300)) as CONCEPTOS_PAGO,'''' as REGIMEN, fd.Id_Documento, e.Id_Emp, pi.Id_Plaza, 4 TipoAnexo,fid.Id_Periodo, ftm.Id_TipoMovimiento, fmm.Id_MotivoMovimiento
  into #LicenciasTotalesFup
  from fup_documentos fd inner join empleados e on fd.Id_Emp = e.Id_Emp inner join fup_documento_detalle fdd on fd.Id_Documento = fdd.Id_Documento inner join plazas p on fdd.Id_Plaza = p.Id_plaza inner join plazaieepo pi on fdd.Id_Plaza = pi.Id_plaza
  inner join (select id_plaza,MAX(fecha) fecha from HTabulador_SE_cm htcm group by id_plaza ) nc on pi.Id_plaza=nc.id_plaza inner join HTabulador_SE_CM htcm on htcm.id_plaza=nc.id_plaza and htcm.fecha=nc.fecha inner join TTabulador_SE_CM ttcm on htcm.id_rel=ttcm.id_Tabulador_SE_CM
  inner join usuarios u on fd.Id_Usuario = u.Id_Usuario inner join FUP_Informacion_Documentos fid on fd.Id_Documento = fid.Id_Documento inner join CalenNomina c on fid.Id_Periodo = c.Id_Periodo inner join FUP_MotivoMovimiento fmm on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
  inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento inner join tniveleducativo tn on fid.Id_Nivel_Educativo=tn.id_NivelEducativo inner join TNacionalidad tnac on e.Id_Nacionalidad=tnac.Id_Nacionalidad inner join TPais tp on tnac.Id_Nacionalidad=tp.Id_Pais
  left join TEstados te on e.Id_EstadoNac = te.Id_Estado left join tciudad tc on e.Id_EstadoNac=te.Id_Estado and tc.Id_Ciudad=e.Id_MunicipioNac left join (select id_emp,MAX(movimiento) fecha from hdomicilio group by id_emp ) hdoc on e.Id_emp=hdoc.id_emp
  left join HDomicilio hd on hd.id_emp=hdoc.id_emp and hdoc.fecha=hd.Movimiento left join tcolonia tcol on hd.Id_Colonia=tcol.Id_Colonia left join TLocalidad tloc on hd.Id_Localidad=tloc.id_Localidad left join (select id_emp,MAX(fecha_alta_gob_fed) fecha
  from HFecha_Alta_Gob_Fed group by id_emp ) hfagf on e.Id_Emp=hfagf.id_emp left join (select id_emp,MAX(fecha_alta_sep) fecha from HFecha_Alta_sep group by id_emp ) hfas on e.Id_Emp=hfas.id_emp left join (select id_emp,MAX(fecha_alta_rama) fecha
  from HFecha_Alta_rama group by id_emp ) hfar on e.Id_Emp=hfar.id_emp inner join VistaTablaLongitud vt on fid.Centro_Trabajo=vt.clave inner join RCT_Turno rt on vt.Id_Nodo=rt.id_nodo inner join TCT_Turno tt on rt.id_rel=tt.id_CT_Turno
  where e.id_cia in ( 1,2,3 ) and fd.Id_Estatus in (SELECT estatus.n.value(''.'', ''INT'') AS n FROM    @XmlEstatus.nodes(''/estatus'') AS estatus(n)) and fd.folio not in (select folio_n from HFolio_verificado) and ftm.Id_TipoMovimiento in (9,10,11,31)
  and replace(case when pi.plazaieepo like ''14%'' or pi.plazaieepo like ''15%'' then ''07''+substring(pi.plazaieepo,3, len(pi.plazaieepo)) else pi.plazaieepo end,'' '','''')  in (select clave_plaza from Anexos_LayoutProceso where tipoanexo = 1)


  select ''000000000'' Id_Operacion, ftm.Clave+''-''+fmm.clave AS OPERACION,e.curp AS CURP,replace(case when pi.plazaieepo like ''14%'' or pi.plazaieepo like ''15%'' then ''07''+substring(pi.plazaieepo,3, len(pi.plazaieepo)) else pi.plazaieepo end,'' '','''') AS CLAVE_PLAZA,
  ttcm.id_Tabulador_SE_CM  AS NIVEL_SALARIAL,'''' AS UR,'''' as FECHA,'''' AS CCT,'''' RFC, '''' PRIMER_APELLIDO,'''' SEGUNDO_APELLIDO,'''' [NOMBRE(S)],'''' NACIONALIDAD,'''' PAIS_NAC,'''' ENTIDAD_NAC,'''' MUNICIPIO_NAC,'''' SEXO,'''' EDO_CIVIL,
  '''' CALLE_Y_NUM,'''' CP,'''' COLONIA,'''' ENTIDAD,'''' MUNICIPIO,'''' LOCALIDAD,'''' NIV_MAX_ESTUD,'''' ING_GOB_FED,'''' ING_SEP,'''' ING_RAMA,'''' CED_PROF,'''' TIPO_LIC,	'''' QUINQ_DOC,	'''' QUINQ_ADM,'''' GRADO_LIC,	'''' TITULACION,
  '''' HORARIO,ftm.Clave as MOVIMIENTO,	ftm.Descripcion as DESC_MOVIMIENTO,	fmm.Clave as MOTIVO,	fmm.Descripcion as DESC_MOTIVO,Convert(varchar(10), fdd.Fechaini, 103) as FECHA_INI, FECHA_FIN= case when dbo.fechaToAnioQuincena(fdd.fechaini)=dbo.fechaToAnioQuincena(fdd.fechafin) then Convert(varchar(10), dbo.anioQuincenaToFecha(''999924'',1), 103)  else Convert(varchar(10), fdd.FechaFin, 103) end,
  cast('''' as varchar(300)) as CONCEPTOS_PAGO,'''' as REGIMEN, fd.Id_Documento, e.Id_Emp, pi.Id_Plaza, 4 TipoAnexo ,fid.Id_Periodo, ftm.Id_TipoMovimiento, fmm.Id_MotivoMovimiento
  into #LicenciasTotalesFupLicC
  from fup_documentos fd inner join empleados e on fd.Id_Emp = e.Id_Emp inner join fup_documento_detalle fdd on fd.Id_Documento = fdd.Id_Documento inner join plazas p on fdd.Id_Plaza = p.Id_plaza inner join plazaieepo pi on fdd.Id_Plaza = pi.Id_plaza
  inner join (select id_plaza,MAX(fecha) fecha from HTabulador_SE_cm htcm group by id_plaza ) nc on pi.Id_plaza=nc.id_plaza inner join HTabulador_SE_CM htcm on htcm.id_plaza=nc.id_plaza and htcm.fecha=nc.fecha inner join TTabulador_SE_CM ttcm on htcm.id_rel=ttcm.id_Tabulador_SE_CM
  inner join usuarios u on fd.Id_Usuario = u.Id_Usuario inner join FUP_Informacion_Documentos fid on fd.Id_Documento = fid.Id_Documento inner join CalenNomina c on fid.Id_Periodo = c.Id_Periodo inner join FUP_MotivoMovimiento fmm on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
  inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento inner join tniveleducativo tn on fid.Id_Nivel_Educativo=tn.id_NivelEducativo inner join TNacionalidad tnac on e.Id_Nacionalidad=tnac.Id_Nacionalidad inner join TPais tp on tnac.Id_Nacionalidad=tp.Id_Pais
  left join TEstados te on e.Id_EstadoNac = te.Id_Estado left join tciudad tc on e.Id_EstadoNac=te.Id_Estado and tc.Id_Ciudad=e.Id_MunicipioNac left join (select id_emp,MAX(movimiento) fecha from hdomicilio group by id_emp ) hdoc on e.Id_emp=hdoc.id_emp
  left join HDomicilio hd on hd.id_emp=hdoc.id_emp and hdoc.fecha=hd.Movimiento left join tcolonia tcol on hd.Id_Colonia=tcol.Id_Colonia left join TLocalidad tloc on hd.Id_Localidad=tloc.id_Localidad left join (select id_emp,MAX(fecha_alta_gob_fed) fecha
  from HFecha_Alta_Gob_Fed group by id_emp ) hfagf on e.Id_Emp=hfagf.id_emp left join (select id_emp,MAX(fecha_alta_sep) fecha from HFecha_Alta_sep group by id_emp ) hfas on e.Id_Emp=hfas.id_emp left join (select id_emp,MAX(fecha_alta_rama) fecha
  from HFecha_Alta_rama group by id_emp ) hfar on e.Id_Emp=hfar.id_emp inner join VistaTablaLongitud vt on fid.Centro_Trabajo=vt.clave inner join RCT_Turno rt on vt.Id_Nodo=rt.id_nodo inner join TCT_Turno tt on rt.id_rel=tt.id_CT_Turno
  where e.id_cia in ( 1,2,3 ) and fd.Id_Estatus in (SELECT estatus.n.value(''.'', ''INT'') AS n FROM    @XmlEstatus.nodes(''/estatus'') AS estatus(n)) and fd.folio not in (select folio_n from HFolio_verificado) and ftm.Id_TipoMovimiento in (9,10,11,31)
  and replace(case when pi.plazaieepo like ''14%'' or pi.plazaieepo like ''15%'' then ''07''+substring(pi.plazaieepo,3, len(pi.plazaieepo)) else pi.plazaieepo end,'' '','''')  in (select clave_plaza from Anexos_LayoutProceso where tipoanexo = 2)


CREATE TABLE #rechazosMovimientos (Id_Operacion varchar(9),OPERACION varchar(11),CURP varchar(18),CLAVE_PLAZA varchar(72),NIVEL_SALARIAL int NOT NULL,UR varchar(3),FECHA char(12),CCT varchar(10),RFC varchar(15),PRIMER_APELLIDO varchar(30),SEGUNDO_APELLIDO varchar(30),[NOMBRE(S)] varchar(50),NACIONALIDAD varchar(10),PAIS_NAC varchar(6),
ENTIDAD_NAC varchar(4),MUNICIPIO_NAC varchar(3),SEXO char(1),EDO_CIVIL varchar(2),CALLE_Y_NUM varchar(MAX),CP varchar(10),COLONIA varchar(50),ENTIDAD varchar(10),MUNICIPIO varchar(3),LOCALIDAD varchar(3),NIV_MAX_ESTUD varchar(1),ING_GOB_FED varchar(7),ING_SEP varchar(7),ING_RAMA varchar(7),CED_PROF varchar(1),TIPO_LIC varchar(1),QUINQ_DOC varchar(10),
QUINQ_ADM varchar(10),GRADO_LIC varchar(1),TITULACION varchar(1),HORARIO varchar(60),MOVIMIENTO varchar(5),DESC_MOVIMIENTO varchar(60),MOTIVO varchar(5),DESC_MOTIVO varchar(500),FECHA_INI varchar(10),FECHA_FIN varchar(10),CONCEPTOS_PAGO varchar(300),REGIMEN varchar(1),Id_Documento int NOT NULL,Id_Emp int NOT NULL,Id_Plaza int NOT NULL,TipoAnexo int NOT NULL,
Id_Periodo int, Id int,Id_TipoMovimiento int, Id_MotivoMovimiento int, Razon varchar(500))

insert into #rechazosMovimientos
select *, cast(case when TipoAnexo = 1 or TipoAnexo = 2 then ''Alta: ''
               when TipoAnexo = 3 then ''Basificacion: ''
               when TipoAnexo = 4 then ''Licencia: ''
               when TipoAnexo = 5 then ''Baja: ''
               when TipoAnexo = 6 then ''Reanudacion: '' end +'' ''+''Plaza no autorizada.'' as varchar(500)) Rechazo
from Anexos_LayoutProceso where CLAVE_PLAZA  not in (select codigo_plaza from hplazas_concifed where ESTATUS <> ''C'')

delete from Anexos_LayoutProceso where id in ( select id from #rechazosMovimientos)


  -- bajas
insert into #rechazosMovimientos
select distinct al.*, cast(''La operación ya existe en el archivo de nombramientos.'' as varchar(500)) Observacion  
from Anexos_LayoutProceso al
inner join #ArchNombraUltOperacion b on al.CURP = b.CURP and al.CLAVE_PLAZA = b.CLAVE and al.OPERACION = b.OPERACION
where al.FECHA_INI = b.FECHA_INICIAL and al.fecha_fin = case when b.FECHA_FINAL = ''00/00/0000'' then ''31/12/9999'' else b.FECHA_FINAL end
and al.operacion in (''06-31'',''06-32'',''06-33'',''06-34'',''06-36'',''06-37'',''06-73'',''06-74'',''06-75'',''07-32'',''07-35'',''07-36'',''07-37'',''07-38'')
and al.TipoAnexo = 5
  
  
delete from Anexos_LayoutProceso where id in ( select id from #rechazosMovimientos)

  
insert into #rechazosMovimientos
select *, ''Baja a aplicar en quincena posterior a la de proceso.'' Razon 
from Anexos_LayoutProceso where TipoAnexo = 5
and dbo.fechatoanioquincena(convert( datetime , fecha_fin,103 )+1) > (select dbo.fechatoanioquincena(max(fechaini)) from calennomina where id_periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n)))

delete from Anexos_LayoutProceso where TipoAnexo = 5
and dbo.fechatoanioquincena(convert( datetime , fecha_fin,103 )+1) > (select dbo.fechatoanioquincena(max(fechaini)) from calennomina where id_periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n)))


--select a.Id_Operacion, a.id_emp, a.id_plaza, max(b.quincena) quincena 
--into #ultimoPagoBajas
--from Anexos_LayoutProceso a 
--inner join view_fup_pagos b on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
--where a.tipoanexo = 5
--group by a.Id_Operacion,a.id_emp, a.id_plaza

--insert into #rechazosMovimientos
--select a.*, ''Baja con pago posterior al movimiento de baja'' Rechazo
--from Anexos_LayoutProceso a 
--inner join #ultimoPagoBajas b on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza and a.Id_Operacion = b.id_operacion
--where a.tipoanexo = 5
--and b.quincena > dbo.fechatoanioquincena(convert( datetime , a.fecha_fin,103 ))

--delete from Anexos_LayoutProceso where id in ( select id from #rechazosMovimientos)



  --- 95-96-10
  
  insert into #rechazosMovimientos
  select *, cast(''La operación ya existe en el archivo de nombramientos.'' as varchar(500)) Observacion from Anexos_LayoutProceso al
  where (al.operacion like ''%95%'' or al.operacion like ''%96%'' or al.operacion like ''%10%'')
  and exists (
    select 1 from #ArchNombraUltOperacion a
      where (a.operacion like ''%95%'' or a.operacion like ''%96%'' or a.operacion like ''%10%'')
    and a.rfc = al.rfc and a.clave = al.clave_plaza and a.operacion = al.operacion
  ) and al.tipoanexo = 1

delete from Anexos_LayoutProceso where id in ( select id from #rechazosMovimientos)


    select distinct al.*, a.CURP CURP_Nom, a.RFC RFC_Nom into #AltasBuscarSuBaja
    from Anexos_LayoutProceso al
    inner join #ArchNombraUltOperacion a on a.clave = al.clave_plaza and a.rfc <> al.rfc
    where (al.operacion like ''%95%'' or al.operacion like ''%96%'' or al.operacion like ''%10%'')
    and a.operacion in (''01-01'',''01-02'',''01-03'',''01-09'',''01-10'',''01-20'',''01-22'',''01-24'',''01-25'',''01-95'',''01-96'',''01-97'',''02-20'',''02-95'',''12-60'',''12-61'',''12-62'',''12-63'',''12-64'',''12-65'',''12-66'',''12-67'',''12-70'',''12-71'',''10-10'',''16-10'')
    and not exists (
      select 1 from Anexos_LayoutProceso ba where ba.clave_plaza = al.clave_plaza and ( ba.RFC = a.rfc or ba.curp = a.curp) and ba.TipoAnexo = 5
    ) and al.tipoanexo = 1


  select c.* into #BajasAgregarAnexos 
  from #BajasTotalesFUP c inner join (
  select a.clave_plaza, max(convert( datetime , a.fecha_fin,103 )) fecha_fin from #BajasTotalesFUP a 
  inner join #AltasBuscarSuBaja b on a.CLAVE_PLAZA = b.CLAVE_PLAZA and b.curp_nom = a.CURP
  where convert( datetime , a.fecha_fin,103 ) <= convert(datetime, b.FECHA_INI,103)
  group by a.clave_plaza
  ) d on d.clave_plaza = c.clave_plaza and d.fecha_fin = convert( datetime , c.fecha_fin,103 )
  inner join #AltasBuscarSuBaja a2 on a2.clave_plaza = c.clave_plaza and a2.CURP_Nom = c.CURP
  
  
  delete from #AltasBuscarSuBaja where CLAVE_PLAZA in (
    select clave_plaza from #BajasAgregarAnexos
  )

  insert into #rechazosMovimientos
  select b.*, ''No existe un abaja en el archivo de nombramientos, Anexo de bajas y en FUP'' obs from #AltasBuscarSuBaja a
  inner join Anexos_LayoutProceso b on a.ID_OPERACION = b.ID_OPERACION and b.CURP = a.CURP and b.CLAVE_PLAZA = a.CLAVE_PLAZA and b.OPERACION = a.OPERACION
  where b.tipoanexo = 1
  
delete from Anexos_LayoutProceso where id in ( select id from #rechazosMovimientos)


  insert into Anexos_LayoutProceso
  select * from #BajasAgregarAnexos


  --- 20


  insert into #rechazosMovimientos
  select distinct al.*, cast(''La operación ya existe en el archivo de nombramientos.'' as varchar(500)) Observacion  
  from Anexos_LayoutProceso al
  inner join #ArchNombraUltOperacion b on al.CURP = b.CURP and al.CLAVE_PLAZA = b.CLAVE and al.OPERACION = b.OPERACION
  where al.FECHA_INI = b.FECHA_INICIAL and al.fecha_fin = case when b.FECHA_FINAL = ''00/00/0000'' then ''31/12/9999'' else b.FECHA_FINAL end
  and al.operacion in (''01-20'',''02-20'')
  and al.TipoAnexo = 1
  
  
delete from Anexos_LayoutProceso where id in ( select id from #rechazosMovimientos)


   select al.*, a.CURP CURP_Nom, a.RFC RFC_Nom into #Alt20BuscarBajaLic 
   from Anexos_LayoutProceso al
   inner join #ArchNombraUltOperacion a on  a.clave = al.clave_plaza and a.rfc <> al.rfc
   where al.OPERACION in (''01-20'',''02-20'')
   and a.operacion in (''01-01'',''01-02'',''01-03'',''01-09'',''01-10'',''01-20'',''01-22'',''01-24'',''01-25'',''01-95'',''01-96'',''01-97'',''02-20'',''02-95'',''12-60'',''12-61'',''12-62'',''12-63'',''12-64'',''12-65'',''12-66'',''12-67'',''12-70'',''12-71'',''10-10'',''16-10'')
   and convert( datetime , al.fecha_ini,103 ) <= convert( datetime , case when a.FECHA_FINAL = ''00/00/0000'' then ''31/12/9999'' else a.FECHA_FINAL end, 103 )
  and al.TipoAnexo = 1


  delete from a 
  from #Alt20BuscarBajaLic a
  inner join Anexos_LayoutProceso b on a.CLAVE_PLAZA = b.CLAVE_PLAZA and convert( datetime , a.fecha_ini ,103 ) >= convert( datetime , b.FECHA_FIN ,103 ) 
  and b.curp = a.curp_nom
  and b.TipoAnexo = 5
  

  select c.*  into #Bajas20Agregar
  from #BajasTotalesFUP c inner join (
  select a.clave_plaza, max(convert( datetime , a.fecha_fin,103 )) fecha_fin from #BajasTotalesFUP a 
  inner join #Alt20BuscarBajaLic b on a.CLAVE_PLAZA = b.CLAVE_PLAZA and b.CURP_Nom = a.CURP
  where convert( datetime , a.fecha_fin,103 ) <= convert(datetime, b.FECHA_INI,103)
  group by a.clave_plaza
  ) d on d.clave_plaza = c.clave_plaza and d.fecha_fin = convert( datetime , c.fecha_fin,103 )
  inner join #Alt20BuscarBajaLic a2 on a2.clave_plaza = c.clave_plaza and a2.CURP_Nom = c.CURP

  delete from b from #Bajas20Agregar a 
  inner join #Alt20BuscarBajaLic b on a.CLAVE_PLAZA = b.CLAVE_PLAZA

  delete from a 
  from #Alt20BuscarBajaLic a
  inner join Anexos_LayoutProceso b on b.CLAVE_PLAZA = a.CLAVE_PLAZA and b.curp = a.CURP_Nom and 
  convert( datetime , a.fecha_ini ,103 ) >= convert( datetime , b.fecha_ini ,103 ) and 
  convert( datetime , a.fecha_fin ,103 ) <= convert( datetime , b.fecha_fin ,103 )
  where b.tipoanexo = 4


  insert into Anexos_LayoutProceso 
  select distinct *
  from #Bajas20Agregar


  insert into Anexos_LayoutProceso 
  select distinct b.*
  from #Alt20BuscarBajaLic a
  inner join #LicenciasTotalesFup b on b.CLAVE_PLAZA = a.CLAVE_PLAZA and  b.curp = a.CURP_Nom and
  convert( datetime , a.fecha_ini ,103 ) >= convert( datetime , b.fecha_ini ,103 ) and 
  convert( datetime , a.fecha_fin ,103 ) <= convert( datetime , b.fecha_fin ,103 )
  
  

  delete from a
  from #Alt20BuscarBajaLic a
  inner join #LicenciasTotalesFup b on b.CLAVE_PLAZA = a.CLAVE_PLAZA and b.curp = a.CURP_Nom and
  convert( datetime , a.fecha_ini ,103 ) >= convert( datetime , b.fecha_ini ,103 ) and 
  convert( datetime , a.fecha_fin ,103 ) <= convert( datetime , b.fecha_fin ,103 )



  insert into #rechazosMovimientos
  select distinct b.*, ''No existe un abaja o licencia en el archivo de nombramientos, Anexo IV y en FUP.'' Razon 
  from #Alt20BuscarBajaLic a
  inner join Anexos_LayoutProceso b on a.ID_OPERACION = b.ID_OPERACION
  where b.TipoAnexo = 1

delete from Anexos_LayoutProceso where id in ( select id from #rechazosMovimientos)


  -- lc mov 20

insert into #rechazosMovimientos
  select distinct al.*, cast(''La operación ya existe en el archivo de nombramientos.'' as varchar(500)) Observacion 
  from Anexos_LayoutProceso al
  inner join #ArchNombraUltOperacion b on al.CURP = b.CURP and al.CLAVE_PLAZA = b.CLAVE and al.OPERACION = b.OPERACION
  where al.FECHA_INI = b.FECHA_INICIAL and al.fecha_fin = case when b.FECHA_FINAL = ''00/00/0000'' then ''31/12/9999'' else b.FECHA_FINAL end
  and al.operacion in (''01-20'',''02-20'')
  and al.TipoAnexo = 2
  
  
delete from Anexos_LayoutProceso where id in ( select id from #rechazosMovimientos)
  


  select al.*, a.CURP CURP_Nom, a.RFC RFC_Nom into #LicC20BuscarBajaLic  
  from Anexos_LayoutProceso al
  inner join #ArchNombraUltOperacion a on a.rfc <> al.rfc and a.clave = al.clave_plaza
  where al.OPERACION in (''01-20'',''02-20'')
  and a.operacion in (''01-01'',''01-02'',''01-03'',''01-09'',''01-10'',''01-20'',''01-22'',''01-24'',''01-25'',''01-95'',''01-96'',''01-97'',''02-20'',''02-95'',''12-60'',''12-61'',''12-62'',''12-63'',''12-64'',''12-65'',''12-66'',''12-67'',''12-70'',''12-71'',''10-10'',''16-10'')
  and convert( datetime , al.fecha_ini,103 ) <= convert( datetime , case when a.FECHA_FINAL = ''00/00/0000'' then ''31/12/9999'' else a.FECHA_FINAL end, 103 )
  and al.TipoAnexo = 2



  delete from a from #LicC20BuscarBajaLic a
  inner join Anexos_LayoutProceso b on b.CLAVE_PLAZA = a.CLAVE_PLAZA and b.curp = a.CURP_Nom and 
  convert( datetime , a.fecha_ini ,103 ) >= convert( datetime , b.fecha_ini ,103 ) and 
  convert( datetime , a.fecha_fin ,103 ) <= convert( datetime , b.fecha_fin ,103 )
  where b.tipoanexo = 4


  insert into Anexos_LayoutProceso 
  select distinct b.*
  from #LicC20BuscarBajaLic a
  inner join #LicenciasTotalesFupLicC b on b.CLAVE_PLAZA = a.CLAVE_PLAZA and b.curp = a.CURP_Nom and
  convert( datetime , a.fecha_ini ,103 ) >= convert( datetime , b.fecha_ini ,103 ) and 
  convert( datetime , a.fecha_fin ,103 ) <= convert( datetime , b.fecha_fin ,103 )

  delete from a
  from #LicC20BuscarBajaLic a
  inner join #LicenciasTotalesFupLicC b on b.CLAVE_PLAZA = a.CLAVE_PLAZA and b.curp = a.CURP_Nom and
  convert( datetime , a.fecha_ini ,103 ) >= convert( datetime , b.fecha_ini ,103 ) and 
  convert( datetime , a.fecha_fin ,103 ) <= convert( datetime , b.fecha_fin ,103 )


  delete from a from #LicC20BuscarBajaLic a
  inner join Anexos_LayoutProceso b on a.CLAVE_PLAZA = b.CLAVE_PLAZA and b.CURP = a.CURP_Nom and 
  convert( datetime , a.fecha_ini ,103 ) >= convert( datetime , b.FECHA_FIN ,103 )
  where b.tipoanexo = 5


  insert into #rechazosMovimientos
  select distinct b.*, ''No existe un abaja o licencia en el archivo de nombramientos, Anexo IV y en FUP.'' Razon
  from #LicC20BuscarBajaLic a
  inner join Anexos_LayoutProceso b on a.ID_OPERACION = b.ID_OPERACION
  where b.TipoAnexo = 2
  
  
  delete from b
  from #LicC20BuscarBajaLic a
  inner join Anexos_LayoutProceso b on a.ID_OPERACION = b.ID_OPERACION
  where b.TipoAnexo = 2
  

  -- lc mov 24



  insert into #rechazosMovimientos
  select distinct al.*, cast(''La operación ya existe en el archivo de nombramientos.'' as varchar(500)) Observacion  
  from Anexos_LayoutProceso al
  inner join #ArchNombraUltOperacion b on al.CURP = b.CURP and al.CLAVE_PLAZA = b.CLAVE and al.OPERACION = b.OPERACION
  where al.FECHA_INI = b.FECHA_INICIAL and al.fecha_fin = case when b.FECHA_FINAL = ''00/00/0000'' then ''31/12/9999'' else b.FECHA_FINAL end
  and al.operacion like ''%24''
  and al.TipoAnexo = 2
  

delete from Anexos_LayoutProceso where id in ( select id from #rechazosMovimientos)


  select al.*, a.CURP CURP_Nom, a.RFC RFC_Nom into #LicC24BuscarBajaLic 
  from Anexos_LayoutProceso al
  inner join #ArchNombraUltOperacion a on a.rfc <> al.rfc and a.clave = al.clave_plaza
  where al.OPERACION like ''%24''
  and a.operacion in (''01-01'',''01-02'',''01-03'',''01-09'',''01-10'',''01-20'',''01-22'',''01-24'',''01-25'',''01-95'',''01-96'',''01-97'',''02-20'',''02-95'',''12-60'',''12-61'',''12-62'',''12-63'',''12-64'',''12-65'',''12-66'',''12-67'',''12-70'',''12-71'',''10-10'',''16-10'')
  and convert( datetime , al.fecha_ini,103 ) <= convert( datetime , case when a.FECHA_FINAL = ''00/00/0000'' then ''31/12/9999'' else a.FECHA_FINAL end, 103 )
  and al.TipoAnexo = 2



  delete from a 
  from #LicC24BuscarBajaLic a
  inner join Anexos_LayoutProceso b on b.CLAVE_PLAZA = a.CLAVE_PLAZA and b.curp = a.CURP_Nom and
  convert( datetime , a.fecha_ini ,103 ) >= convert( datetime , b.fecha_ini ,103 ) and 
  convert( datetime , a.fecha_fin ,103 ) <= convert( datetime , b.fecha_fin ,103 )
  and b.TipoAnexo = 4
  


  insert into Anexos_LayoutProceso
  select distinct b.*
  from #LicC24BuscarBajaLic a
  inner join #LicenciasTotalesFupLicC b on b.CLAVE_PLAZA = a.CLAVE_PLAZA and b.curp = a.CURP_Nom and
  convert( datetime , a.fecha_ini ,103 ) >= convert( datetime , b.fecha_ini ,103 ) and 
  convert( datetime , a.fecha_fin ,103 ) <= convert( datetime , b.fecha_fin ,103 )
  
  

  delete from a from #LicC24BuscarBajaLic a
  inner join #LicenciasTotalesFupLicC b on b.CLAVE_PLAZA = a.CLAVE_PLAZA and b.curp = a.CURP_Nom and
  convert( datetime , a.fecha_ini ,103 ) >= convert( datetime , b.fecha_ini ,103 ) and 
  convert( datetime , a.fecha_fin ,103 ) <= convert( datetime , b.fecha_fin ,103 )



  insert into #rechazosMovimientos
  select distinct b.*, ''No existe una licencia en el archivo de nombramientos, Anexo IV y en FUP.'' Razon
  from #LicC24BuscarBajaLic a
  inner join Anexos_LayoutProceso b on a.ID_OPERACION = b.ID_OPERACION
  and b.TipoAnexo = 2


delete from Anexos_LayoutProceso where id in ( select id from #rechazosMovimientos)

-- licencias

insert into #rechazosMovimientos
select *, ''Baja antes del 01/01/2015'' razon from Anexos_LayoutProceso where TipoAnexo = 5
and convert( datetime , fecha_fin,103 ) < ''2015/01/01''

delete from Anexos_LayoutProceso where TipoAnexo = 5
and convert( datetime , fecha_fin,103 ) < ''2015/01/01''


insert into #rechazosMovimientos
select *, ''Licencia antes del 01/01/2015'' razon from Anexos_LayoutProceso where TipoAnexo = 4
and convert( datetime , fecha_fin,103 ) < ''2015/01/01''

delete from Anexos_LayoutProceso where TipoAnexo = 4
and convert( datetime , fecha_fin,103 ) < ''2015/01/01''

insert into #rechazosMovimientos
select *, ''Alta antes del 01/01/2015'' razon from Anexos_LayoutProceso where TipoAnexo in (1,2)
and convert( datetime , fecha_fin,103 ) < ''2015/01/01''

delete from Anexos_LayoutProceso where TipoAnexo in (1,2)
and convert( datetime , fecha_fin,103 ) < ''2015/01/01''

-- reanudaciones

select a.Id_Operacion, a.OPERACION, a.CURP, a.CLAVE_PLAZA, a.NIVEL_SALARIAL, a.UR, a.FECHA, a.CCT, a.RFC, a.PRIMER_APELLIDO, a.SEGUNDO_APELLIDO, a.[NOMBRE(S)], a.NACIONALIDAD, a.PAIS_NAC, a.ENTIDAD_NAC, a.MUNICIPIO_NAC, a.SEXO, a.EDO_CIVIL, a.CALLE_Y_NUM, a.CP, a.COLONIA, a.ENTIDAD, a.MUNICIPIO, a.LOCALIDAD, a.NIV_MAX_ESTUD, a.ING_GOB_FED, a.ING_SEP, a.ING_RAMA, a.CED_PROF, a.TIPO_LIC, a.QUINQ_DOC, a.QUINQ_ADM, a.GRADO_LIC, a.TITULACION, a.HORARIO, a.MOVIMIENTO, a.DESC_MOVIMIENTO, a.MOTIVO, a.DESC_MOTIVO, a.FECHA_INI, a.FECHA_FIN, a.CONCEPTOS_PAGO, a.REGIMEN, a.Id_Documento, a.Id_Emp, a.Id_Plaza, a.TipoAnexo, a.id_periodo, a.id_TipoMovimiento, a.id_MotivoMovimiento
into #ReanudasValidas
from Anexos_LayoutProceso a 
inner join #ArchNombraUltOperacion b on a.CLAVE_PLAZA = b.CLAVE and a.CURP = b.CURP
where b.operacion in (''11-40'',''11-41'',''11-42'',''11-43'',''11-44'',''11-45'',''11-46'',''11-47'',''11-48'',''11-51'',''11-52'',''11-53'',''11-55'',''11-56'',''11-57'')
and a.TipoAnexo = 6
and convert( datetime , a.fecha_ini,103 ) > convert( datetime , case when b.FECHA_FINAL = ''00/00/0000'' then ''31/12/9999'' else b.FECHA_FINAL end,103 )

delete from Anexos_LayoutProceso where TipoAnexo = 6

insert into Anexos_LayoutProceso
select * from #ReanudasValidas

insert into #rechazosMovimientos
select distinct al.*, cast(''La operación ya existe en el archivo de nombramientos.'' as varchar(500)) Observacion 
from Anexos_LayoutProceso al
inner join #ArchNombraUltOperacion b on al.CURP = b.CURP and al.CLAVE_PLAZA = b.CLAVE and al.OPERACION = b.OPERACION
where al.FECHA_INI = b.FECHA_INICIAL and al.fecha_fin = case when b.FECHA_FINAL = ''00/00/0000'' then ''31/12/9999'' else b.FECHA_FINAL end
and al.operacion in (''12-61'',''12-67'',''12-63'',''12-60'',''12-65'',''12-66'',''12-62'')
and al.TipoAnexo = 6

delete from Anexos_LayoutProceso where id in ( select id from #rechazosMovimientos)

-- basificas


select a.id_plaza, p.TModelo_SE_id_Modelo_SE into #modeloplaza from HTabulador_SE_Cat_Puesto a inner join (
select id_plaza, max(fecha) fecha from HTabulador_SE_Cat_Puesto where fecha <= GETDATE() and movimiento <= GETDATE() group by id_plaza
) b on b.id_plaza = a.id_plaza and a.fecha = b.fecha
inner join TTabulador_SE_Cat_Puesto p on p.id_Tabulador_SE_Cat_Puesto = a.id_rel

insert into #rechazosMovimientos
select a.*, ''Basificacion de plaza con modelo 2'' Razon from Anexos_LayoutProceso a 
inner join #modeloplaza b on a.Id_Plaza = b.id_plaza
where a.TipoAnexo = 3 and b.TModelo_SE_id_Modelo_SE in (2)

delete from Anexos_LayoutProceso where id in ( select id from #rechazosMovimientos)

insert into #rechazosMovimientos
select distinct al.*, cast(''La operación ya existe en el archivo de nombramientos.'' as varchar(500)) Observacion 
from Anexos_LayoutProceso al
inner join #ArchNombraUltOperacion b on al.CURP = b.CURP and al.CLAVE_PLAZA = b.CLAVE and al.OPERACION = b.OPERACION
where al.FECHA_INI = b.FECHA_INICIAL and al.fecha_fin = case when b.FECHA_FINAL = ''00/00/0000'' then ''31/12/9999'' else b.FECHA_FINAL end
and al.operacion in (''16-10'')
and al.TipoAnexo = 3

delete from Anexos_LayoutProceso where id in ( select id from #rechazosMovimientos)
  
-- licencias

insert into #rechazosMovimientos
select distinct al.*, cast(''La operación ya existe en el archivo de nombramientos.'' as varchar(500)) Observacion 
from Anexos_LayoutProceso al
inner join #ArchNombraUltOperacion b on al.CURP = b.CURP and al.CLAVE_PLAZA = b.CLAVE and al.OPERACION = b.OPERACION
where al.FECHA_INI = b.FECHA_INICIAL and al.fecha_fin = case when b.FECHA_FINAL = ''00/00/0000'' then ''31/12/9999'' else b.FECHA_FINAL end
and al.operacion in (''11-41'',''11-47'',''11-43'',''11-40'',''11-44'',''11-45'',''11-46'',''11-42'',''11-48'',''11-51'',''11-57'',''11-53'',''11-55'',''11-56'',''11-52'')
and al.TipoAnexo = 4

delete from Anexos_LayoutProceso where id in ( select id from #rechazosMovimientos)

--select a.Id_Operacion, a.id_emp, a.id_plaza, max(b.quincena) quincena 
--into #ultimoPagoLic
--from Anexos_LayoutProceso a 
--inner join view_fup_pagos b on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
--where a.tipoanexo = 4 and a.OPERACION not in (''11-44'',''11-48'')
--group by a.Id_Operacion,a.id_emp, a.id_plaza

--insert into #rechazosMovimientos
--select a.*, ''Licencia con pago posterior a la quincena de inicio.'' Rechazo
--from Anexos_LayoutProceso a 
--inner join #ultimoPagoLic b on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza and a.Id_Operacion = b.id_operacion
--where a.tipoanexo = 4 and a.OPERACION not in (''11-44'',''11-48'')
--and b.quincena > dbo.fechatoanioquincena(convert( datetime , a.FECHA_INI,103 ))

--delete from Anexos_LayoutProceso where id in ( select id from #rechazosMovimientos)

----

--update a set a.operacion = b.operacion, a.movimiento = left(b.operacion,2), a.motivo = right(b.operacion,2) 
--from Anexos_LayoutProceso a
--inner join Anexos_CompatibilidadOperacion b on a.operacion = b.tipo+''-''+b.motivo and a.DESC_MOVIMIENTO = b.desctipo  
--and a.DESC_MOTIVO = b.descmotivo
--where a.id_operacion = ''000000000''

update a set a.operacion = b.operacion, a.movimiento = left(b.operacion,2), a.motivo = right(b.operacion,2),
a.DESC_MOVIMIENTO = b.desctipo, a.DESC_MOTIVO = b.descmotivo
from Anexos_LayoutProceso a
inner join Anexos_CompatibilidadOperacion b on a.Id_TipoMovimiento = b.Id_TipoMovimiento and a.Id_MotivoMovimiento = b.Id_MotivoMovimiento
where a.id_operacion = ''000000000''


--declare @numero varchar(10)= ''1000''

select right(''0000000000''+cast(row_number() OVER (ORDER BY tipoanexo,operacion, rfc,	CLAVE_PLAZA) + @numero -1 as varchar),9) as ID_OPERACION,
id, tipoanexo,operacion
into #numeroIdOpercacion
from Anexos_LayoutProceso

update a set a.id_operacion = b.id_operacion
from Anexos_LayoutProceso a
inner join #numeroIdOpercacion b on a.id = b.id


update Anexos_LayoutProceso set FECHA_FIN = ''00/00/0000'' where FECHA_FIN = ''31/12/9999''

declare @QuincenaPro varchar(10) = (select dbo.fechatoanioquincena(max(fechaini)) from calennomina where id_periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n)))


  declare @anexAl varchar(100) = ''Anexo_IV_Altas''+''_''+@QuincenaPro+''_''+convert(varchar,getdate(),112)+''''+replace(convert(varchar,getdate(),114),'':'','''')
  declare @anexBasi varchar(100) = ''Anexo_IV_Basificas''+''_''+@QuincenaPro+''_''+convert(varchar,getdate(),112)+''''+replace(convert(varchar,getdate(),114),'':'','''')
  declare @anexLn varchar(100) = ''Anexo_IV_Licencias''+''_''+@QuincenaPro+''_''+convert(varchar,getdate(),112)+''''+replace(convert(varchar,getdate(),114),'':'','''')
  declare @anexBaja varchar(100) = ''Anexo_IV_Bajas''+''_''+@QuincenaPro+''_''+convert(varchar,getdate(),112)+''''+replace(convert(varchar,getdate(),114),'':'','''')
  declare @anexRE varchar(100) = ''Anexo_IV_Reanudas''+''_''+@QuincenaPro+''_''+convert(varchar,getdate(),112)+''''+replace(convert(varchar,getdate(),114),'':'','''')
  declare @anexRech varchar(100) = ''Anexo_IV_Rechazos''+''_''+@QuincenaPro+''_''+convert(varchar,getdate(),112)+''''+replace(convert(varchar,getdate(),114),'':'','''')
  

set @query = ''
  select ID_OPERACION,
  OPERACION,	CURP,	CLAVE_PLAZA,	NIVEL_SALARIAL,	UR,	FECHA,	CCT,	RFC,	PRIMER_APELLIDO,	SEGUNDO_APELLIDO,	[NOMBRE(S)],	
  NACIONALIDAD,	PAIS_NAC,	ENTIDAD_NAC,	MUNICIPIO_NAC,	SEXO,	EDO_CIVIL,	CALLE_Y_NUM,	CP,	COLONIA,	ENTIDAD,	MUNICIPIO,	LOCALIDAD,
  NIV_MAX_ESTUD,	ING_GOB_FED,	ING_SEP,	ING_RAMA,	CED_PROF,	TIPO_LIC,	QUINQ_DOC,	QUINQ_ADM,	GRADO_LIC,	TITULACION,	'''''''' HORARIO,	MOVIMIENTO,
  DESC_MOVIMIENTO,	MOTIVO,	DESC_MOTIVO,	FECHA_INI,	FECHA_FIN,	CONCEPTOS_PAGO,	REGIMEN
  into ''+@anexAl+'' 
  from Anexos_LayoutProceso
  where TipoAnexo in (1,2)''
  exec sp_executesql @query

set @query = ''
  select ID_OPERACION,
  OPERACION,	CURP,	CLAVE_PLAZA,	NIVEL_SALARIAL,	UR,	FECHA,	CCT,	RFC,	PRIMER_APELLIDO,	SEGUNDO_APELLIDO,	[NOMBRE(S)],	
  NACIONALIDAD,	PAIS_NAC,	ENTIDAD_NAC,	MUNICIPIO_NAC,	SEXO,	EDO_CIVIL,	CALLE_Y_NUM,	CP,	COLONIA,	ENTIDAD,	MUNICIPIO,	LOCALIDAD,
  NIV_MAX_ESTUD,	ING_GOB_FED,	ING_SEP,	ING_RAMA,	CED_PROF,	TIPO_LIC,	QUINQ_DOC,	QUINQ_ADM,	GRADO_LIC,	TITULACION,	'''''''' HORARIO,	MOVIMIENTO,
  DESC_MOVIMIENTO,	MOTIVO,	DESC_MOTIVO,	FECHA_INI,	FECHA_FIN,	CONCEPTOS_PAGO,	REGIMEN
  into ''+@anexBasi+'' 
  from Anexos_LayoutProceso
  where TipoAnexo in (3)''
  exec sp_executesql @query
  
  set @query = ''
  select ID_OPERACION,
  OPERACION,	CURP,	CLAVE_PLAZA,	NIVEL_SALARIAL,	UR,	FECHA,	CCT,	RFC,	PRIMER_APELLIDO,	SEGUNDO_APELLIDO,	[NOMBRE(S)],	
  NACIONALIDAD,	PAIS_NAC,	ENTIDAD_NAC,	MUNICIPIO_NAC,	SEXO,	EDO_CIVIL,	CALLE_Y_NUM,	CP,	COLONIA,	ENTIDAD,	MUNICIPIO,	LOCALIDAD,
  NIV_MAX_ESTUD,	ING_GOB_FED,	ING_SEP,	ING_RAMA,	CED_PROF,	TIPO_LIC,	QUINQ_DOC,	QUINQ_ADM,	GRADO_LIC,	TITULACION,	'''''''' HORARIO,	MOVIMIENTO,
  DESC_MOVIMIENTO,	MOTIVO,	DESC_MOTIVO,	FECHA_INI,	FECHA_FIN,	CONCEPTOS_PAGO,	REGIMEN
  into ''+@anexLn+'' 
  from Anexos_LayoutProceso
  where TipoAnexo in (4)''
  exec sp_executesql @query
  
  set @query = ''
  select ID_OPERACION,
  OPERACION,	CURP,	CLAVE_PLAZA,	NIVEL_SALARIAL,	UR,	FECHA,	CCT,	RFC,	PRIMER_APELLIDO,	SEGUNDO_APELLIDO,	[NOMBRE(S)],	
  NACIONALIDAD,	PAIS_NAC,	ENTIDAD_NAC,	MUNICIPIO_NAC,	SEXO,	EDO_CIVIL,	CALLE_Y_NUM,	CP,	COLONIA,	ENTIDAD,	MUNICIPIO,	LOCALIDAD,
  NIV_MAX_ESTUD,	ING_GOB_FED,	ING_SEP,	ING_RAMA,	CED_PROF,	TIPO_LIC,	QUINQ_DOC,	QUINQ_ADM,	GRADO_LIC,	TITULACION,	'''''''' HORARIO,	MOVIMIENTO,
  DESC_MOVIMIENTO,	MOTIVO,	DESC_MOTIVO,	FECHA_INI,	FECHA_FIN,	CONCEPTOS_PAGO,	REGIMEN
  into ''+@anexBaja+'' 
  from Anexos_LayoutProceso
  where TipoAnexo in (5)''
  exec sp_executesql @query
  
  set @query = ''
  select ID_OPERACION,
  OPERACION,	CURP,	CLAVE_PLAZA,	NIVEL_SALARIAL,	UR,	FECHA,	CCT,	RFC,	PRIMER_APELLIDO,	SEGUNDO_APELLIDO,	[NOMBRE(S)],	
  NACIONALIDAD,	PAIS_NAC,	ENTIDAD_NAC,	MUNICIPIO_NAC,	SEXO,	EDO_CIVIL,	CALLE_Y_NUM,	CP,	COLONIA,	ENTIDAD,	MUNICIPIO,	LOCALIDAD,
  NIV_MAX_ESTUD,	ING_GOB_FED,	ING_SEP,	ING_RAMA,	CED_PROF,	TIPO_LIC,	QUINQ_DOC,	QUINQ_ADM,	GRADO_LIC,	TITULACION,	'''''''' HORARIO,	MOVIMIENTO,
  DESC_MOVIMIENTO,	MOTIVO,	DESC_MOTIVO,	FECHA_INI,	FECHA_FIN,	CONCEPTOS_PAGO,	REGIMEN
  into ''+@anexRE+'' 
  from Anexos_LayoutProceso
  where TipoAnexo in (6)''
  exec sp_executesql @query
  
  set @query = ''
  select ID_OPERACION,
  OPERACION,	CURP,	CLAVE_PLAZA,	NIVEL_SALARIAL,	UR,	FECHA,	CCT,	RFC,	PRIMER_APELLIDO,	SEGUNDO_APELLIDO,	[NOMBRE(S)],	
  NACIONALIDAD,	PAIS_NAC,	ENTIDAD_NAC,	MUNICIPIO_NAC,	SEXO,	EDO_CIVIL,	CALLE_Y_NUM,	CP,	COLONIA,	ENTIDAD,	MUNICIPIO,	LOCALIDAD,
  NIV_MAX_ESTUD,	ING_GOB_FED,	ING_SEP,	ING_RAMA,	CED_PROF,	TIPO_LIC,	QUINQ_DOC,	QUINQ_ADM,	GRADO_LIC,	TITULACION,	'''''''' HORARIO,	MOVIMIENTO,
  DESC_MOVIMIENTO,	MOTIVO,	DESC_MOTIVO,	FECHA_INI,	FECHA_FIN,	CONCEPTOS_PAGO,	REGIMEN, RAZON RAZON_RECHAZO
  into ''+@anexRech+'' 
  from #rechazosMovimientos''
  exec sp_executesql @query


--insert into Anexos_Nombramientos (UR, CURP, CLAVE, ESTATUS_PLAZA_MAP, RFC, PRIMER_APELLIDO, SEGUNDO_APELLIDO, NOMBRES, SEXO, REGIMEN, 
--OPERACION, ESTATUS_NOMBRAMIENTO, ESTATUS_OPERACION, FECHA_INICIAL, FECHA_FINAL, INDICADOR_PAGO, FECHA_OPERACION, Quincena, Id_periodo,Id_Documento, Id_Emp, Id_Plaza)
--select UR, a.CURP, CLAVE_plaza,'''' ESTATUS_PLAZA_MAP,e.rfc RFC,e.ApPaterno PRIMER_APELLIDO,e.ApMaterno SEGUNDO_APELLIDO, e.Nombre [NOMBRE(S)], e.SEXO, REGIMEN, 
--OPERACION,'''' ESTATUS_NOMBRAMIENTO,'''' ESTATUS_OPERACION, FECHA_INI, case when fecha_fin = ''31/12/9999'' then ''00/00/0000'' else FECHA_FIN end FECHA_FIN,'''' INDICADOR_PAGO,getdate() FECHA_OPERACION, @QuincenaPro Quincena, Id_periodo,Id_Documento, a.Id_Emp, Id_Plaza
--from Anexos_LayoutProceso a
--inner join empleados e on e.id_emp = a.id_emp
--where a.TipoAnexo = 5

--insert into Anexos_Nombramientos (UR, CURP, CLAVE, ESTATUS_PLAZA_MAP, RFC, PRIMER_APELLIDO, SEGUNDO_APELLIDO, NOMBRES, SEXO, REGIMEN, 
--OPERACION, ESTATUS_NOMBRAMIENTO, ESTATUS_OPERACION, FECHA_INICIAL, FECHA_FINAL, INDICADOR_PAGO, FECHA_OPERACION, Quincena, Id_periodo,Id_Documento, Id_Emp, Id_Plaza)
--select UR, a.CURP, CLAVE_plaza,'''' ESTATUS_PLAZA_MAP,e.rfc RFC,e.ApPaterno PRIMER_APELLIDO,e.ApMaterno SEGUNDO_APELLIDO, e.Nombre [NOMBRE(S)], e.SEXO, REGIMEN, 
--OPERACION,'''' ESTATUS_NOMBRAMIENTO,'''' ESTATUS_OPERACION, FECHA_INI, case when fecha_fin = ''31/12/9999'' then ''00/00/0000'' else FECHA_FIN end FECHA_FIN,'''' INDICADOR_PAGO, dateadd(ss,10,getdate()) FECHA_OPERACION, @QuincenaPro Quincena, Id_periodo,Id_Documento, a.Id_Emp, Id_Plaza
--from Anexos_LayoutProceso a
--inner join empleados e on e.id_emp = a.id_emp
--where a.TipoAnexo = 1

--insert into Anexos_Nombramientos (UR, CURP, CLAVE, ESTATUS_PLAZA_MAP, RFC, PRIMER_APELLIDO, SEGUNDO_APELLIDO, NOMBRES, SEXO, REGIMEN, 
--OPERACION, ESTATUS_NOMBRAMIENTO, ESTATUS_OPERACION, FECHA_INICIAL, FECHA_FINAL, INDICADOR_PAGO, FECHA_OPERACION, Quincena, Id_periodo,Id_Documento, Id_Emp, Id_Plaza)
--select UR, a.CURP, CLAVE_plaza,'''' ESTATUS_PLAZA_MAP,e.rfc RFC,e.ApPaterno PRIMER_APELLIDO,e.ApMaterno SEGUNDO_APELLIDO, e.Nombre [NOMBRE(S)], e.SEXO, REGIMEN, 
--OPERACION,'''' ESTATUS_NOMBRAMIENTO,'''' ESTATUS_OPERACION, FECHA_INI, case when fecha_fin = ''31/12/9999'' then ''00/00/0000'' else FECHA_FIN end FECHA_FIN,'''' INDICADOR_PAGO,dateadd(ss,20,getdate()) FECHA_OPERACION, @QuincenaPro Quincena, Id_periodo,Id_Documento, a.Id_Emp, Id_Plaza
--from Anexos_LayoutProceso a
--inner join empleados e on e.id_emp = a.id_emp
--where a.TipoAnexo = 3

--insert into Anexos_Nombramientos (UR, CURP, CLAVE, ESTATUS_PLAZA_MAP, RFC, PRIMER_APELLIDO, SEGUNDO_APELLIDO, NOMBRES, SEXO, REGIMEN, 
--OPERACION, ESTATUS_NOMBRAMIENTO, ESTATUS_OPERACION, FECHA_INICIAL, FECHA_FINAL, INDICADOR_PAGO, FECHA_OPERACION, Quincena, Id_periodo,Id_Documento, Id_Emp, Id_Plaza)
--select UR, a.CURP, CLAVE_plaza,'''' ESTATUS_PLAZA_MAP,e.rfc RFC,e.ApPaterno PRIMER_APELLIDO,e.ApMaterno SEGUNDO_APELLIDO, e.Nombre [NOMBRE(S)], e.SEXO, REGIMEN, 
--OPERACION,'''' ESTATUS_NOMBRAMIENTO,'''' ESTATUS_OPERACION, FECHA_INI, case when fecha_fin = ''31/12/9999'' then ''00/00/0000'' else FECHA_FIN end FECHA_FIN,'''' INDICADOR_PAGO,dateadd(ss,30,getdate()) FECHA_OPERACION, @QuincenaPro Quincena, Id_periodo,Id_Documento, a.Id_Emp, Id_Plaza
--from Anexos_LayoutProceso a
--inner join empleados e on e.id_emp = a.id_emp
--where a.TipoAnexo = 4

--insert into Anexos_Nombramientos (UR, CURP, CLAVE, ESTATUS_PLAZA_MAP, RFC, PRIMER_APELLIDO, SEGUNDO_APELLIDO, NOMBRES, SEXO, REGIMEN, 
--OPERACION, ESTATUS_NOMBRAMIENTO, ESTATUS_OPERACION, FECHA_INICIAL, FECHA_FINAL, INDICADOR_PAGO, FECHA_OPERACION, Quincena, Id_periodo,Id_Documento, Id_Emp, Id_Plaza)
--select UR, a.CURP, CLAVE_plaza,'''' ESTATUS_PLAZA_MAP,e.rfc RFC,e.ApPaterno PRIMER_APELLIDO,e.ApMaterno SEGUNDO_APELLIDO, e.Nombre [NOMBRE(S)], e.SEXO, REGIMEN, 
--OPERACION,'''' ESTATUS_NOMBRAMIENTO,'''' ESTATUS_OPERACION, FECHA_INI, case when fecha_fin = ''31/12/9999'' then ''00/00/0000'' else FECHA_FIN end FECHA_FIN,'''' INDICADOR_PAGO,dateadd(ss,40,getdate()) FECHA_OPERACION, @QuincenaPro Quincena, Id_periodo,Id_Documento, a.Id_Emp, Id_Plaza
--from Anexos_LayoutProceso a
--inner join empleados e on e.id_emp = a.id_emp
--where a.TipoAnexo = 2

--insert into Anexos_Nombramientos (UR, CURP, CLAVE, ESTATUS_PLAZA_MAP, RFC, PRIMER_APELLIDO, SEGUNDO_APELLIDO, NOMBRES, SEXO, REGIMEN, 
--OPERACION, ESTATUS_NOMBRAMIENTO, ESTATUS_OPERACION, FECHA_INICIAL, FECHA_FINAL, INDICADOR_PAGO, FECHA_OPERACION, Quincena, Id_periodo,Id_Documento, Id_Emp, Id_Plaza)
--select UR, a.CURP, CLAVE_plaza,'''' ESTATUS_PLAZA_MAP,e.rfc RFC,e.ApPaterno PRIMER_APELLIDO,e.ApMaterno SEGUNDO_APELLIDO, e.Nombre [NOMBRE(S)], e.SEXO, REGIMEN, 
--OPERACION,'''' ESTATUS_NOMBRAMIENTO,'''' ESTATUS_OPERACION, FECHA_INI, case when fecha_fin = ''31/12/9999'' then ''00/00/0000'' else FECHA_FIN end FECHA_FIN,'''' INDICADOR_PAGO,dateadd(ss,50,getdate()) FECHA_OPERACION, @QuincenaPro Quincena, Id_periodo,Id_Documento, a.Id_Emp, Id_Plaza
--from Anexos_LayoutProceso a
--inner join empleados e on e.id_emp = a.id_emp
--where a.TipoAnexo = 6

  select @anexAl+'';''+@anexBasi+'';''+@anexLn+'';''+@anexBaja+'';''+@anexRE+'';''+@anexRech


end

if @tipo = 2
begin

  if exists(select * from sysobjects where name like ''validacionuno'')
    drop table validacionuno
  if exists(select * from sysobjects where name like ''comprobantesVnovalidos'')
    drop table comprobantesVnovalidos
  if exists(select * from sysobjects where name like ''comprobantesVInovalidos'')
    drop table comprobantesVInovalidos
  if exists(select * from sysobjects where name like ''comprobantesVDiferentes'')
    drop table comprobantesVDiferentes
  if exists(select * from sysobjects where name like ''comprobantesVIdiferentes'')
    drop table comprobantesVIdiferentes
  
  set @query = ''select no_comprobante, sum(case when TIPO_CONCEPTO = ''''P'''' then importe else 0 end) percepcion,
  sum(case when TIPO_CONCEPTO = ''''D'''' then importe else 0 end) deduccion,
  round(sum(case when TIPO_CONCEPTO = ''''P'''' then importe else 0 end) - sum(case when TIPO_CONCEPTO = ''''D'''' then importe else 0 end),2) neto
  into validacionuno 
  from '' + @tabla2 + '' WITH(NOLOCK)
  group by no_comprobante''
  exec sp_executesql @query
  set @query = ''select distinct b.* into comprobantesVnovalidos from validacionuno a
  inner join '' + @tabla1 + '' b WITH(NOLOCK) on a.no_comprobante = b.NO_COMPROBANTE
  where a.neto <= 0''
  exec sp_executesql @query
  set @query = ''delete from b from validacionuno a
  inner join '' + @tabla1 + '' b on a.no_comprobante = b.NO_COMPROBANTE
  where a.neto <= 0''
  exec sp_executesql @query
  set @query = ''select b.* into comprobantesVInovalidos  from validacionuno a WITH(NOLOCK)
  inner join '' + @tabla2 + '' b WITH(NOLOCK) on a.no_comprobante = b.NO_COMPROBANTE
  where a.neto <= 0''
  exec sp_executesql @query
  set @query = ''delete from b from validacionuno a
  inner join '' + @tabla2 + '' b on a.no_comprobante = b.NO_COMPROBANTE
  where a.neto <= 0''
  exec sp_executesql @query
  delete from validacionuno where neto <= 0
  set @query = ''select distinct b.* into comprobantesVDiferentes from validacionuno a WITH(NOLOCK)
  inner join '' + @tabla1 + '' b WITH(NOLOCK) on a.no_comprobante = b.NO_COMPROBANTE
  where a.neto <> b.NETO''
  exec sp_executesql @query
  set @query = ''delete from b from validacionuno a
  inner join '' + @tabla1 + '' b on a.no_comprobante = b.NO_COMPROBANTE
  where a.neto <> b.NETO''
  exec sp_executesql @query
  delete from a from validacionuno a inner join comprobantesVDiferentes b on a.no_comprobante = b.NO_COMPROBANTE where a.neto <> b.NETO
  set @query = ''select b.* into comprobantesVIdiferentes from comprobantesVDiferentes a WITH(NOLOCK)
  inner join '' + @tabla2 + '' b WITH(NOLOCK) on a.no_comprobante = b.NO_COMPROBANTE''
  exec sp_executesql @query
  set @query = ''delete from b from comprobantesVDiferentes a
  inner join '' + @tabla2 + '' b on a.no_comprobante = b.NO_COMPROBANTE''
  exec sp_executesql @query
  declare @tabla1NV varchar(50) = ''Anexo_V_NA_''
  set @tabla1NV = @tabla1NV +''''+convert(varchar,getdate(),112)+''''+replace(convert(varchar,getdate(),114),'':'','''')
  declare @tabla2NV varchar(50) = ''Anexo_VI_NA_''
  set @tabla2NV = @tabla2NV +''''+convert(varchar,getdate(),112)+''''+replace(convert(varchar,getdate(),114),'':'','''')
  set @query = ''select * into '' + @tabla1NV + '' from comprobantesVnovalidos
  union all select * from comprobantesVDiferentes''
  exec sp_executesql @query
  set @query = ''select * into '' + @tabla2NV + '' from comprobantesVInovalidos
  union all select * from comprobantesVIdiferentes''
  exec sp_executesql @query
  declare @pref varchar(100) = convert(varchar,getdate(),112)+''''+replace(convert(varchar,getdate(),114),'':'','''')
  declare @query3 nvarchar(1000) = ''select top 1000000 no_comprobante into ''+@tabla2+''_''+@pref+'' from ''+@tabla2+'' order by no_comprobante''
  exec sp_executesql @query3
  declare @query4 nvarchar(1000) = ''select * into ''+@tabla2+''_1_''+@pref+'' from ''+@tabla2+'' a where exists (select 1 from ''+@tabla2+''_''+@pref+'' b where a.no_comprobante = b.no_comprobante)''
  exec sp_executesql @query4
  declare @query5 nvarchar(1000) = ''select * into ''+@tabla2+''_2_''+@pref+'' from ''+@tabla2+'' a where not exists (select 1 from ''+@tabla2+''_''+@pref+'' b where a.no_comprobante = b.no_comprobante)''
  exec sp_executesql @query5
  
    ---
  
if exists(select * from ut..sysobjects where name like ''AnexoVProcesado'')
    drop table ut..AnexoVProcesado
if exists(select * from ut..sysobjects where name like ''AnexoVIProcesado'')
    drop table ut..AnexoVIProcesado
if exists(select * from ut..sysobjects where name like ''AnexoVProcesado_NA'')
    drop table ut..AnexoVProcesado_NA
if exists(select * from ut..sysobjects where name like ''AnexoVIProcesado_NA'')
    drop table ut..AnexoVIProcesado_NA
    
set @query = ''select a.id_periodo, a.id_emp, a.id_plaza, a.Id_PeriodoPago, a.Id_Referencia, b.* 
into ut..AnexoVProcesado
from LayoutNomina_NoComprobantes a
inner join '' + @tabla1 + '' b on a.NO_COMPROBANTE = b.no_comprobante and a.rfc = b.rfc and a.curp = b.curp and 
replace(case when a.CLAVE_PLAZA like ''''14%'''' or a.CLAVE_PLAZA like ''''15%'''' then ''''07''''+substring(a.CLAVE_PLAZA,3, len(a.CLAVE_PLAZA)) else a.CLAVE_PLAZA end,'''' '''','''''''') = b.clave_plaza''
exec sp_executesql @query

set @query = ''select * into ut..AnexoVIProcesado from '' + @tabla2 + ''''
exec sp_executesql @query

set @query = ''select a.id_periodo, a.id_emp, a.id_plaza, a.Id_PeriodoPago, a.Id_Referencia, b.* 
into ut..AnexoVProcesado_NA
from LayoutNomina_NoComprobantes a
inner join '' + @tabla1NV + '' b on a.NO_COMPROBANTE = b.no_comprobante and a.rfc = b.rfc and a.curp = b.curp and 
replace(case when a.CLAVE_PLAZA like ''''14%'''' or a.CLAVE_PLAZA like ''''15%'''' then ''''07''''+substring(a.CLAVE_PLAZA,3, len(a.CLAVE_PLAZA)) else a.CLAVE_PLAZA end,'''' '''','''''''') = b.clave_plaza''
exec sp_executesql @query

set @query = ''select * into ut..AnexoVIProcesado_NA from '' + @tabla2NV + ''''
exec sp_executesql @query

 ------


  if exists(select * from sysobjects where name like ''''+@tabla2+''_''+@pref+'''' )
    begin 
      set @query = ''drop table ''+@tabla2+''_''+@pref+''''
      exec sp_executesql @query
    end
  if exists(select * from sysobjects where name like ''''+@tabla2+'''' )
    begin 
      set @query = ''drop table ''+@tabla2+''''
      exec sp_executesql @query
    end
  if exists(select * from sysobjects where name like ''validacionuno'')
    drop table validacionuno
  if exists(select * from sysobjects where name like ''comprobantesVnovalidos'')
    drop table comprobantesVnovalidos
  if exists(select * from sysobjects where name like ''comprobantesVInovalidos'')
    drop table comprobantesVInovalidos
  if exists(select * from sysobjects where name like ''comprobantesVDiferentes'')
    drop table comprobantesVDiferentes
  if exists(select * from sysobjects where name like ''comprobantesVIdiferentes'')
    drop table comprobantesVIdiferentes
  select @tabla1 +'';''+@tabla2+''_1_''+@pref+'';''+@tabla2+''_2_''+@pref+'';''+@tabla1NV+'';''+@tabla2NV

end

if @tipo = 3
begin

  
  declare @tablaNA varchar(100)
  declare @tablaBuenos varchar(100)
  
  if exists(select * from sysobjects where name like ''totalespensionado'')
      drop table totalespensionado
  if exists(select * from sysobjects where name like ''pensionNA'')
      drop table pensionNA

   select Id_Periodo, id_referencia, id_emp, id_plaza, sum(pesos) Pesos
  into #pensionotaleshist 
  from (
    select Id_Emp,case when @agrupa = 1 then 0 else Id_Periodo end Id_Periodo,id_concepto,Consecutivo,Horas,Pesos,Id_categ,Fecha,PesosExcento,C_costo,id_plaza,
    case when @agrupa = 1 then 0 else Id_Referencia end Id_Referencia,id_periodoPago, Id_ProcesoNomina,Desde,Hasta
    from HistPagos where Id_Periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))
    union all
    select Id_Emp,case when @agrupa = 1 then 0 else Id_Periodo end Id_Periodo,id_concepto,Consecutivo,Horas,Pesos,0 Id_categ,Fecha,PesosExcento,cc,id_plaza,
    case when @agrupa = 1 then 0 else Id_Referencia end Id_Referencia,id_periodoPago,Id_ProcesoNomina,Desde,Hasta
    from nom_HistPagos where Id_Periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))
  ) a  where id_concepto in (2474,2475,2484,2485,2493,2494,2523,2524,2525,2526,2527,2528,2529,2536,2537,2538,2539,2540,2541,2542,2547,2548,2549,2550,2551,2552,2553,2554,2602,2603,2604,2605,2606,2607,2608,2612,2613,2614,2615,2616,2617,2618,2619,2620,2621,3061,3062,3075,3076,3077,4240,4241,4242,4243,4530,2486,2487,2532,2530,2609,2531,4550,4551,4552,4244,2556,2555,2543,2544,2545,4550,4551,4552,4290)
  group by id_periodo,id_referencia, id_emp, id_plaza


  set @query = ''select id_periodo,id_referencia, id_emp, id_plaza, sum(importe) importe 
  into totalespensionado
  from '' + @tabla1 + '' WITH(NOLOCK)
  where esrespom in ( 0, 1) group by id_periodo,id_referencia, id_emp, id_plaza''
  exec sp_executesql @query


  select b.* into pensionNA 
  from #pensionotaleshist a WITH(NOLOCK)
  inner join totalespensionado b WITH(NOLOCK) on a.Id_Periodo = b.id_periodo and a.id_emp = b.id_emp and a.id_plaza = b.id_plaza and a.id_referencia = b.id_referencia
  where round(a.Pesos,2) <> round(b.importe,2)
  
  set @query = ''update '' + @tabla1 + '' set esrespom = 0 where esrespom in (0,2)''
  exec sp_executesql @query

  set @tablaNA = ''Anexo_VII_NA_''+''''+convert(varchar,getdate(),112)+''''+replace(convert(varchar,getdate(),114),'':'','''')

  set @query = ''select a.NO_COMPROBANTE, a.UR, a.PERIODO, a.TIPO_NOMINA, a.CURP_TRABAJADOR, a.CLAVE_PLAZA, a.UNIDAD_PAGADORA, a.PRIMER_APELLIDO, a.SEGUNDO_APELLIDO, a.NOMBRE, a.RFC_PENSIONADO, a.COD_CONCEPTO, a.DESC_CONCEPTO, a.FORMA_PAGO, a.CVE_BANCO, a.CLABE, sum(a.IMPORTE) IMPORTE, ''''Diferencias de pension.'''' OBSERVACION
  into '' + @tablaNA + ''
  from '' + @tabla1 + '' a WITH(NOLOCK)
  inner join (select distinct id_periodo,id_referencia, id_emp from pensionNA WITH(NOLOCK)) b on b.id_periodo = a.id_periodo and a.id_emp = b.id_emp and a.id_referencia = b.id_referencia
  group by a.NO_COMPROBANTE, a.UR, a.PERIODO, a.TIPO_NOMINA, a.CURP_TRABAJADOR, a.CLAVE_PLAZA, a.UNIDAD_PAGADORA, a.PRIMER_APELLIDO, a.SEGUNDO_APELLIDO, a.NOMBRE, a.RFC_PENSIONADO, a.COD_CONCEPTO, a.DESC_CONCEPTO, a.FORMA_PAGO, a.CVE_BANCO, a.CLABE, a.esrespom''
  exec sp_executesql @query

  -----
   if exists(select * from ut..sysobjects where name like ''AnexoVIIprocesado_NA'')
    drop table ut..AnexoVIIprocesado_NA
    
  set @query = ''select a.Id_periodo,a.Id_referencia, a.Id_emp, a.Id_plaza,a.Id_beneficiario,a.NO_COMPROBANTE, a.UR, a.PERIODO, a.TIPO_NOMINA, a.CURP_TRABAJADOR, a.CLAVE_PLAZA, a.UNIDAD_PAGADORA, a.PRIMER_APELLIDO, a.SEGUNDO_APELLIDO, a.NOMBRE, a.RFC_PENSIONADO, a.COD_CONCEPTO, a.DESC_CONCEPTO, a.FORMA_PAGO, a.CVE_BANCO, a.CLABE, sum(a.IMPORTE) IMPORTE, ''''Diferencias de pension.'''' OBSERVACION 
  into ut..AnexoVIIprocesado_NA
  from '' + @tabla1 + '' a WITH(NOLOCK)
  inner join (select distinct id_periodo,id_referencia, id_emp from pensionNA WITH(NOLOCK)) b on b.id_periodo = a.id_periodo and a.id_emp = b.id_emp and a.id_referencia = b.id_referencia
  group by a.NO_COMPROBANTE, a.UR, a.PERIODO, a.TIPO_NOMINA, a.CURP_TRABAJADOR, a.CLAVE_PLAZA, a.UNIDAD_PAGADORA, a.PRIMER_APELLIDO, a.SEGUNDO_APELLIDO, a.NOMBRE, a.RFC_PENSIONADO, a.COD_CONCEPTO, a.DESC_CONCEPTO, a.FORMA_PAGO, a.CVE_BANCO, a.CLABE, a.esrespom, a.id_periodo,a.id_referencia, a.id_emp, a.id_plaza,a.id_beneficiario''
  exec sp_executesql @query
  -----
  
  set @query = ''delete from a
  from '' + @tabla1 + '' a
  inner join (select distinct id_periodo,id_referencia, id_emp from pensionNA) b on b.id_periodo = a.id_periodo and a.id_emp = b.id_emp and b.id_referencia = a.id_referencia''
  exec sp_executesql @query


declare @tablaFaltan varchar(100) = ''Anexo_VII_Faltan''+''''+convert(varchar,getdate(),112)+''''+replace(convert(varchar,getdate(),114),'':'','''')

set @query = ''
select distinct a.ID_PERIODO, a.ID_REFERENCIA, a.ID_EMP, a.ID_PLAZA, e.CURP CURP_TRABAJADOR, replace(case when p.plazaieepo like ''''14%'''' or p.plazaieepo like ''''15%'''' then ''''07''''+substring(p.plazaieepo,3, len(p.plazaieepo)) else p.plazaieepo end,'''' '''','''''''') CLAVE_PLAZA, 
e.ApPaterno PROMER_APELLIDO, e.ApMaterno SEGUNDO_APELLIDO, e.NOMBRE, e.RFC, a.Pesos DESC_CONCEPTO, ''''Decuentos de pension del anexo VI que faltan en el anexo VII.'''' OBSERVACION
into '' + @tablaFaltan + ''
from #pensionotaleshist a
left join totalespensionado b on a.Id_Periodo = b.id_periodo and a.id_referencia = b.id_referencia and a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
left join empleados e on e.id_emp = a.id_emp
left join PlazaIEEPO p on p.Id_plaza = a.id_plaza
where b.id_emp is null
and exists ( select 1 from hplazas_concifed pc where pc.CODIGO_PLAZA = replace(case when p.plazaieepo like ''''14%'''' or p.plazaieepo like ''''15%'''' then ''''07''''+substring(p.plazaieepo,3, len(p.plazaieepo)) else p.plazaieepo end,'''' '''','''''''') and pc.ESTATUS <> ''''C'''' )''
  exec sp_executesql @query


  set @tablaBuenos = ''Anexo_VII_''+''''+convert(varchar,getdate(),112)+''''+replace(convert(varchar,getdate(),114),'':'','''')
  
  set @query = ''select a.NO_COMPROBANTE, a.UR, a.PERIODO, a.TIPO_NOMINA, a.CURP_TRABAJADOR, a.CLAVE_PLAZA, a.UNIDAD_PAGADORA, a.PRIMER_APELLIDO, a.SEGUNDO_APELLIDO, a.NOMBRE, a.RFC_PENSIONADO, a.COD_CONCEPTO, a.DESC_CONCEPTO, a.FORMA_PAGO, a.CVE_BANCO, a.CLABE, sum(a.IMPORTE) IMPORTE
  into ''+ @tablaBuenos +''
  from '' + @tabla1 + '' a WITH(NOLOCK)
  group by a.NO_COMPROBANTE, a.UR, a.PERIODO, a.TIPO_NOMINA, a.CURP_TRABAJADOR, a.CLAVE_PLAZA, a.UNIDAD_PAGADORA, a.PRIMER_APELLIDO, a.SEGUNDO_APELLIDO, a.NOMBRE, a.RFC_PENSIONADO, a.COD_CONCEPTO, a.DESC_CONCEPTO, a.FORMA_PAGO, a.CVE_BANCO, a.CLABE, a.esrespom''
  exec sp_executesql @query
  
  --------
    if exists(select * from ut..sysobjects where name like ''AnexoVIIProcesado'')
    drop table ut..AnexoVIIProcesado
    
  set @query = ''select a.Id_periodo,a.Id_referencia, a.Id_emp, a.Id_plaza,a.Id_beneficiario,a.NO_COMPROBANTE, a.UR, a.PERIODO, a.TIPO_NOMINA, a.CURP_TRABAJADOR, a.CLAVE_PLAZA, a.UNIDAD_PAGADORA, a.PRIMER_APELLIDO, a.SEGUNDO_APELLIDO, a.NOMBRE, a.RFC_PENSIONADO, a.COD_CONCEPTO, a.DESC_CONCEPTO, a.FORMA_PAGO, a.CVE_BANCO, a.CLABE, sum(a.IMPORTE) IMPORTE 
  into ut..AnexoVIIProcesado
  from '' + @tabla1 + '' a WITH(NOLOCK)
  group by a.NO_COMPROBANTE, a.UR, a.PERIODO, a.TIPO_NOMINA, a.CURP_TRABAJADOR, a.CLAVE_PLAZA, a.UNIDAD_PAGADORA, a.PRIMER_APELLIDO, a.SEGUNDO_APELLIDO, a.NOMBRE, a.RFC_PENSIONADO, a.COD_CONCEPTO, a.DESC_CONCEPTO, a.FORMA_PAGO, a.CVE_BANCO, a.CLABE, a.esrespom, a.Id_periodo,a.Id_referencia, a.Id_emp, a.Id_plaza,a.Id_beneficiario''
  exec sp_executesql @query
  -----
  

  if exists(select * from sysobjects where name like ''''+@tabla1+'''' )
      begin 
        set @query = ''drop table ''+@tabla1+''''
        exec sp_executesql @query
      end
  if exists(select * from sysobjects where name like ''totalespensionado'')
      drop table totalespensionado
  if exists(select * from sysobjects where name like ''pensionNA'')
      drop table pensionNA
      
  select @tablaBuenos+'';''+ @tablaNA

end'
GO

GO
PRINT N'Creating [dbo].[spI_VectoresEmpleado]'
GO
IF OBJECT_ID(N'[dbo].[spI_VectoresEmpleado]', 'P') IS NULL
EXEC sp_executesql N'-- sp_helptext spI_VectoresEmpleado            
            
              
-- CREO: Ramón Olivares                
-- Fecha Creación: 13/09/2012            
-- Fecha Última Modificación: 05/09/2013            
-- Descripcion: Agregar los Vectores del empleado a la tabla: HVectores            
-- Modificación: 20130905 - Se añadio nuevo campo: id_periodo_pago y se obtiene de acuerdo al tipo de nómina que sea: normal,recalculo,saycop.            
                
      
CREATE PROCEDURE [dbo].[spI_VectoresEmpleado]                   
(                  
 @IdEmpleado int,                  
 @IdPlaza int,                  
 @IdVector smallint,                  
 @FechaVector datetime,                  
 @IdUsuario int,                
 @IdDocumento int,                
 @Observaciones varchar(500),                
 @Accion as bit                
)                  
                  
AS                   
 Declare @Año Int                
 declare @parcial int              
 declare @tablaTemporal varchar(40)              
 declare @sSql varchar(3000)      
 declare @id_periodo int = (select id_periodo from fup_informacion_documentos where id_documento = @idDocumento)
                
 select @parcial = case when parcial >= 40 then 40 else case when parcial >= 20 and parcial < 40 then 20 else 0 end end from calennomina where id_periodo in (select id_periodo from fup_informacion_documentos where id_documento = @idDocumento)             
 
                 
 set @Año = Year(@FechaVector)              
 set @tablaTemporal = ''ZTablaTemporalHVectores'' + cast(@IdDocumento as varchar(20))              
 set @sSql = ''''              
                 
 If @Accion = 0                
  Begin              
                
   set @sSql = @sSql + '' Select c.Id_Periodo as id_periodo,c.numero as numero, '' + cast(@id_periodo as varchar(20)) + '' as id_periodo_aplicacion into '' + @tablaTemporal              
   set @sSql = @sSql + '' From CalenNomina c Where id_cia=(select id_rel from hcia h where Id_emp=''+cast(@IdEmpleado as varchar(10))+'' And Fecha = (Select max(fecha) From Hcia Where Id_emp=h.Id_Emp And Fecha<=''''''+convert(varchar,@FechaVector,111)+''''''))''   
  
    
    
      
   set @sSql = @sSql + '' and parcial=0 ''+'' and Fechaini>=''''''+convert(varchar,@FechaVector,111)+'''''' and actualizado = 1 ''              
                 
   -- print @sSql              
                 
   execute (@sSql)              
                 
   set @sSql = ''''              
                 
   set @sSql = @sSql + '' Insert Into HVectores(Id_Emp,Id_Plaza,Id_Periodo,Id_Vector,Fecha,Id_User,Id_Documento,Observaciones,id_periodo_aplicacion, id_referencia) ''               
   set @sSql = @sSql + '' Select ''+cast(@IdEmpleado as varchar(10))+'',''+cast(@IdPlaza as varchar(10))+'',Id_Periodo,''+cast(@IdVector as varchar(1))+'',GetDate(),''+cast(@IdUsuario as varchar(3))+'',''+cast(@IdDocumento as varchar(20))+'',''''''+@Observaciones+'''''',id_periodo_aplicacion, 0 id_referencia from ''+@tablaTemporal              
                 
    -- print @sSql            
   -- print @idusuario            
   -- print cast(@idusuario as varchar(2))            
                 
   exec (@sSql)              
                 
   exec (''drop table '' + @tablaTemporal)              
                 
  End                
 Else                
  Begin                
   Delete HVectores Where Id_Emp = @IdEmpleado and Id_Plaza = @IdPlaza and Id_Vector = @IdVector and Id_Documento = @IdDocumento                
   And Id_Periodo In (Select Id_Periodo From CalenNomina                 
   Where id_cia=dbo.fc_hcia_int(@IdEmpleado,Cast(@FechaVector as datetime),GetDate(),''id_rel'')                  
   and parcial=0 and Fechaini>=Cast(@FechaVector as datetime) and actualizado = 1)                
  End
    
    
    
    
    

    


'
GO

GO
PRINT N'Creating [dbo].[spc_LayoutsNomina]'
GO
IF OBJECT_ID(N'[dbo].[spc_LayoutsNomina]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[spc_LayoutsNomina]
@tipo int, @periodos varchar(100), @siresponsabilidad int = 0, @esJMP int = 0, @numero varchar(10) = ''1'', @agrupa int = 0, @definitivo int = 0, @capturado int = 0, @procesado int = 0
WITH EXEC AS CALLER
AS
DECLARE @Xml AS XML  
SET @Xml = ''<periodo>'' + REPLACE(@periodos, '','', ''</periodo><periodo>'') + ''</periodo>'';  

if @tipo = 1
begin

declare @estatus varchar(10) = ''''
  
if(@capturado = 0 and @procesado = 0)
  set @estatus = ''2''
if(@capturado = 1 and @procesado = 1)
  set @estatus = ''4,2''
if(@capturado = 1 and @procesado = 0)
  set @estatus = ''4''
if(@capturado = 0 and @procesado = 1)
  set @estatus = ''2''

DECLARE @XmlEstatus AS XML  
SET @XmlEstatus = ''<estatus>'' + REPLACE(@estatus, '','', ''</estatus><estatus>'') + ''</estatus>''; 


declare @quincena int = cast(right((select dbo.fechatoanioquincena(max(fechaini)) from calennomina where id_periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))),2 ) as int)
declare @año as int
set @quincena=Case when @Quincena=1 then 24 else @Quincena-1 end
set @año =  cast(left((select dbo.fechatoanioquincena(max(fechaini)) from calennomina where id_periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))),4 ) as int) --Case when @quincena4 then year(GETDATE())-1 else YEAR(GETDATE()) end

declare @queryMov nvarchar(max) = ''''
------------------------

delete from Anexos_LayoutProceso

---altas

insert into Anexos_LayoutProceso
select ''000000000'' Id_Operacion,
OPERACION= Case when fmm.Id_MotivoMovimiento in (103,117,309,310) then ''06-20'' else ftm.Clave + ''-'' +fmm.clave end,
e.curp AS CURP,
pi.PlazaIEEPO AS CLAVE_PLAZA,
ttcm.id_Tabulador_SE_CM  AS NIVEL_SALARIAL,
''R20'' AS UR,
convert(char(12),c.fechaini,103) as FECHA,
fid.Centro_Trabajo AS CCT,
e.RFC, e.ApPaterno AS PRIMER_APELLIDO,
e.ApMaterno AS SEGUNDO_APELLIDO,
e.Nombre AS [NOMBRE(S)],
right(''00'' + cast(tnac.Id_Nacionalidad as varchar(max)),3) AS NACIONALIDAD,
141 AS PAIS_NAC,
ENTIDAD_NAC= Case when e.Id_EstadoNac is null then (select right(''00''+ cast(max(id_estado) as varchar),2) from Empleados em inner join testados te on substring(CURP,12,2) = te.Estado where te.Id_Estado <= 32 and em.Id_Emp = e.id_emp) else right(''00''+ cast(te.id_estado as varchar),2) end,
MUNICIPIO_NAC = Case when e.Id_MunicipioNac is null then ''000'' else right(''000''+cast(tc.Id_Ciudad as varchar),3) end,
e.SEXO,
EDO_CIVIL= case when e.edocivil = ''C'' then ''02'' else ''01'' end,
CALLE_Y_NUM= Case when hd.Calle is null then '''' else cast(hd.calle as varchar(max))+ '' ''+ CAST(hd.numext as varchar (10)) end,
CP= Case when hd.CodPostal is null then '''' else hd.CodPostal end,
COLONIA= Case when hd.Id_Colonia = 0 or hd.Id_Colonia is null then '''' else tcol.DESCR end,
ENTIDAD= 20,
MUNICIPIO = right(''000''+cast(isnull(ctml.cve_mun_ct, 0) as varchar),3),
LOCALIDAD = right(''000''+cast(isnull(ctml.cve_loc_ct, 0) as varchar),3),
'''' AS NIV_MAX_ESTUD,
ING_GOB_FED= case when hfagf.fecha is null then left(dbo.fechatoanioquincena(hfas.fecha),4)+'' ''+right(dbo.fechatoanioquincena(hfas.fecha),2) else left(dbo.fechatoanioquincena(hfagf.fecha),4)+'' ''+right(dbo.fechatoanioquincena(hfagf.fecha),2) end,
ING_SEP= case when hfas.fecha is null then '''' else left(dbo.fechatoanioquincena(hfas.fecha),4)+'' ''+right(dbo.fechatoanioquincena(hfas.fecha),2) end,
ING_RAMA= case when hfar.fecha is null then '''' else left(dbo.fechatoanioquincena(hfar.fecha),4)+'' ''+right(dbo.fechatoanioquincena(hfar.fecha),2) end,
'''' as CED_PROF,
'''' as TIPO_LIC,	
cast('''' as varchar(10)) as QUINQ_DOC,	
cast('''' as varchar(10)) as QUINQ_ADM	,
'''' as GRADO_LIC,	
'''' as TITULACION,
HORARIO=Case when rt.id_nodo is null then '''' else tt.descripcion end,
ftm.Clave as MOVIMIENTO,	
ftm.Descripcion as DESC_MOVIMIENTO,	
fmm.Clave as MOTIVO,	
fmm.Descripcion as DESC_MOTIVO,
Convert(varchar(10), fdd.Fechaini, 103) as FECHA_INI, 
FECHA_FIN= case when dbo.fechaToAnioQuincena(fdd.fechaini)=dbo.fechaToAnioQuincena(fdd.fechafin) then Convert(varchar(10), dbo.anioQuincenaToFecha(''999924'',1), 103)  else Convert(varchar(10), fdd.FechaFin, 103) end,
cast('''' as varchar(300)) as CONCEPTOS_PAGO,
''1'' as REGIMEN, fd.Id_Documento, e.Id_Emp, pi.Id_Plaza, 1 TipoAnexo,fid.Id_Periodo, ftm.Id_TipoMovimiento, fmm.Id_MotivoMovimiento
from fup_documentos fd
inner join empleados e on fd.Id_Emp = e.Id_Emp
inner join fup_documento_detalle fdd on fd.Id_Documento = fdd.Id_Documento
inner join plazas p on fdd.Id_Plaza = p.Id_plaza
inner join plazaieepo pi on fdd.Id_Plaza = pi.Id_plaza
inner join (select id_plaza,MAX(fecha) fecha
from HTabulador_SE_cm htcm
group by id_plaza
) nc on pi.Id_plaza=nc.id_plaza
inner join HTabulador_SE_CM htcm on htcm.id_plaza=nc.id_plaza and htcm.fecha=nc.fecha
inner join TTabulador_SE_CM ttcm on htcm.id_rel=ttcm.id_Tabulador_SE_CM
inner join usuarios u on fd.Id_Usuario = u.Id_Usuario
inner join FUP_Informacion_Documentos fid on fd.Id_Documento = fid.Id_Documento
inner join CalenNomina c on fid.Id_Periodo = c.Id_Periodo
inner join FUP_MotivoMovimiento fmm on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
inner join tniveleducativo tn on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
inner join TNacionalidad tnac on e.Id_Nacionalidad=tnac.Id_Nacionalidad
inner join TPais tp on tnac.Id_Nacionalidad=tp.Id_Pais
left join TEstados te on e.Id_EstadoNac = te.Id_Estado
left join tciudad tc on e.Id_EstadoNac=te.Id_Estado and tc.Id_Ciudad=e.Id_MunicipioNac
left join (select id_emp,MAX(movimiento) fecha
from hdomicilio 
group by id_emp
) hdoc on e.Id_emp=hdoc.id_emp
left join HDomicilio hd on hd.id_emp=hdoc.id_emp and hdoc.fecha=hd.Movimiento
left join tcolonia tcol on hd.Id_Colonia=tcol.Id_Colonia
left join TLocalidad tloc on hd.Id_Localidad=tloc.id_Localidad
left join (select id_emp,MAX(fecha_alta_gob_fed) fecha
from HFecha_Alta_Gob_Fed group by id_emp
) hfagf on e.Id_Emp=hfagf.id_emp
left join (select id_emp,MAX(fecha_alta_sep) fecha
from HFecha_Alta_sep group by id_emp
) hfas on e.Id_Emp=hfas.id_emp
left join (select id_emp,MAX(fecha_alta_rama) fecha
from HFecha_Alta_rama group by id_emp
) hfar on e.Id_Emp=hfar.id_emp
inner join VistaTablaLongitud vt on fid.Centro_Trabajo=vt.clave
inner join RCT_Turno rt on vt.Id_Nodo=rt.id_nodo
inner join TCT_Turno tt on rt.id_rel=tt.id_CT_Turno
left join (
  select rcl.Id_Nodo, tmc.Cve_mun_ct, tcl.Cve_loc_ct 
  from RCT_Localidad rcl 
  inner join TCT_Localidad tcl on tcl.id_CT_Localidad = rcl.id_rel
  inner join RCT_Municipios_ct rct on rcl.Id_Nodo = rct.id_nodo
  inner join TCT_Municipios_ct tmc on tmc.id_CT_Municipios_ct = rct.id_rel
) ctml on ctml.id_nodo = vt.Id_Nodo
where fid.Id_Periodo in (
SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n)
)
and e.id_cia in ( 1,2,3 ) and fd.Id_Estatus in (SELECT estatus.n.value(''.'', ''INT'') AS n FROM    @XmlEstatus.nodes(''/estatus'') AS estatus(n)) and fd.folio not in (select folio_n from HFolio_verificado)
and ftm.Id_TipoMovimiento in (2,3,30) and fmm.Id_MotivoMovimiento not in (2,3,4,7,8,9)


insert into Anexos_LayoutProceso
select  ''000000000'' Id_Operacion,
OPERACION= Case when fmm.Id_MotivoMovimiento in (2,7) then ''06-20'' else ftm.Clave + ''-'' +fmm.clave end,
e.curp AS CURP,
pi.PlazaIEEPO AS CLAVE_PLAZA,
ttcm.id_Tabulador_SE_CM  AS NIVEL_SALARIAL,
''R20'' AS UR,
convert(char(12),c.fechaini,103) as FECHA,
fid.Centro_Trabajo AS CCT,
e.RFC, e.ApPaterno AS PRIMER_APELLIDO,
e.ApMaterno AS SEGUNDO_APELLIDO,
e.Nombre AS [NOMBRE(S)],
right(''00'' + cast(tnac.Id_Nacionalidad as varchar(max)),3) AS NACIONALIDAD,
141 AS PAIS_NAC,
ENTIDAD_NAC= Case when e.Id_EstadoNac is null then (select right(''00''+ cast(max(id_estado) as varchar),2) from Empleados em inner join testados te on substring(CURP,12,2) = te.Estado where te.Id_Estado <= 32 and em.Id_Emp = e.id_emp) else right(''00''+ cast(te.id_estado as varchar),2) end,
MUNICIPIO_NAC = Case when e.Id_MunicipioNac is null then ''000'' else right(''000''+cast(tc.Id_Ciudad as varchar),3) end,
e.SEXO,
EDO_CIVIL= case when e.edocivil = ''C'' then ''02'' else ''01'' end,
CALLE_Y_NUM= Case when hd.Calle is null then '''' else cast(hd.calle as varchar(max))+ '' ''+ CAST(hd.numext as varchar (10)) end,
CP= Case when hd.CodPostal is null then '''' else hd.CodPostal end,
COLONIA= Case when hd.Id_Colonia = 0 or hd.Id_Colonia is null then '''' else tcol.DESCR end,
ENTIDAD= 20,
MUNICIPIO = right(''000''+cast(isnull(ctml.cve_mun_ct, 0) as varchar),3),
LOCALIDAD = right(''000''+cast(isnull(ctml.cve_loc_ct, 0) as varchar),3),
'''' AS NIV_MAX_ESTUD,
ING_GOB_FED= case when hfagf.fecha is null then left(dbo.fechatoanioquincena(hfas.fecha),4)+'' ''+right(dbo.fechatoanioquincena(hfas.fecha),2) else left(dbo.fechatoanioquincena(hfagf.fecha),4)+'' ''+right(dbo.fechatoanioquincena(hfagf.fecha),2) end,
ING_SEP= case when hfas.fecha is null then '''' else left(dbo.fechatoanioquincena(hfas.fecha),4)+'' ''+right(dbo.fechatoanioquincena(hfas.fecha),2) end,
ING_RAMA= case when hfar.fecha is null then '''' else left(dbo.fechatoanioquincena(hfar.fecha),4)+'' ''+right(dbo.fechatoanioquincena(hfar.fecha),2) end,
'''' as CED_PROF,
'''' as TIPO_LIC,	
cast('''' as varchar(10)) as QUINQ_DOC,	
cast('''' as varchar(10)) as QUINQ_ADM	,
'''' as GRADO_LIC,	
'''' as TITULACION,
HORARIO=Case when rt.id_nodo is null then '''' else tt.descripcion end,
ftm.Clave as MOVIMIENTO,	
ftm.Descripcion as DESC_MOVIMIENTO,	
fmm.Clave as MOTIVO,	
fmm.Descripcion as DESC_MOTIVO,
Convert(varchar(10), fdd.Fechaini, 103) as FECHA_INI, 
FECHA_FIN= case when dbo.fechaToAnioQuincena(fdd.fechaini)=dbo.fechaToAnioQuincena(fdd.fechafin) then Convert(varchar(10), dbo.anioQuincenaToFecha(''999924'',1), 103)  else Convert(varchar(10), fdd.FechaFin, 103) end,
cast('''' as varchar(300)) as CONCEPTOS_PAGO,
''1'' as REGIMEN, fd.Id_Documento, e.Id_Emp, pi.Id_Plaza, 1 TipoAnexo,fid.Id_Periodo, ftm.Id_TipoMovimiento, fmm.Id_MotivoMovimiento
from fup_documentos fd
inner join empleados e on fd.Id_Emp = e.Id_Emp
inner join fup_documento_detalle fdd on fd.Id_Documento = fdd.Id_Documento
inner join plazas p on fdd.Id_Plaza = p.Id_plaza
inner join (select id_plaza,MAX(fecha) fecha
from HTabulador_SE_cm htcm
group by id_plaza
) nc on fdd.Id_plaza=nc.id_plaza
inner join HTabulador_SE_CM htcm on htcm.id_plaza=nc.id_plaza and htcm.fecha=nc.fecha
inner join TTabulador_SE_CM ttcm on htcm.id_rel=ttcm.id_Tabulador_SE_CM
inner join usuarios u on fd.Id_Usuario = u.Id_Usuario
inner join FUP_Informacion_Documentos fid on fd.Id_Documento = fid.Id_Documento
inner join CalenNomina c on fid.Id_Periodo = c.Id_Periodo
inner join FUP_MotivoMovimiento fmm on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
inner join tniveleducativo tn on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
inner join TNacionalidad tnac on e.Id_Nacionalidad=tnac.Id_Nacionalidad
inner join TPais tp on tnac.Id_Nacionalidad=tp.Id_Pais
left join TEstados te on e.Id_EstadoNac = te.Id_Estado
left join tciudad tc on e.Id_EstadoNac=te.Id_Estado and tc.Id_Ciudad=e.Id_MunicipioNac
left join (select id_emp,MAX(movimiento) fecha
from hdomicilio 
group by id_emp
) hdoc on e.Id_emp=hdoc.id_emp
left join HDomicilio hd on hd.id_emp=hdoc.id_emp and hdoc.fecha=hd.Movimiento
left join tcolonia tcol on hd.Id_Colonia=tcol.Id_Colonia
left join TLocalidad tloc on hd.Id_Localidad=tloc.id_Localidad
left join (select id_emp,MAX(fecha_alta_gob_fed) fecha
from HFecha_Alta_Gob_Fed group by id_emp
) hfagf on e.Id_Emp=hfagf.id_emp
left join (select id_emp,MAX(fecha_alta_sep) fecha
from HFecha_Alta_sep group by id_emp
) hfas on e.Id_Emp=hfas.id_emp
left join (select id_emp,MAX(fecha_alta_rama) fecha
from HFecha_Alta_rama group by id_emp
) hfar on e.Id_Emp=hfar.id_emp
inner join ( select distinct fvi.Id_Valor,tf.idFormula,tf.Descripcion,fvi.valor,fvi.id_documento,fdc.Id_MotivoMovimiento from FUP_DetalleCampos fdc
inner join Tformulas tf on fdc.Id_Formula=tf.idFormula
inner join FUP_ValorInteger fvi on fdc.Id_Valor=fvi.Id_Valor
inner join FUP_Documento_Detalle fdocd on fvi.Id_Documento=fdocd.Id_Detalle
where fdc.Id_MotivoMovimiento in (2,7) and tf.Descripcion= ''id_plaza''
and fdocd.Id_Plaza=fvi.Valor 
) pip on fdd.Id_Detalle=pip.Id_Documento 
inner join plazaieepo pi on pip.valor = pi.Id_plaza
inner join VistaTablaLongitud vt on fid.Centro_Trabajo=vt.clave 
inner join RCT_Turno rt on vt.Id_Nodo=rt.id_nodo 
inner join TCT_Turno tt on rt.id_rel=tt.id_CT_Turno 
left join (
  select rcl.Id_Nodo, tmc.Cve_mun_ct, tcl.Cve_loc_ct 
  from RCT_Localidad rcl 
  inner join TCT_Localidad tcl on tcl.id_CT_Localidad = rcl.id_rel
  inner join RCT_Municipios_ct rct on rcl.Id_Nodo = rct.id_nodo
  inner join TCT_Municipios_ct tmc on tmc.id_CT_Municipios_ct = rct.id_rel
) ctml on ctml.id_nodo = vt.Id_Nodo 
where 
fid.Id_Periodo in (
SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n)
)
and e.id_cia in ( 1,2,3 ) and fd.Id_Estatus in (SELECT estatus.n.value(''.'', ''INT'') AS n FROM    @XmlEstatus.nodes(''/estatus'') AS estatus(n)) and fd.folio not in (select folio_n from HFolio_verificado)
and fmm.Id_MotivoMovimiento in (2,7)

insert into Anexos_LayoutProceso
select ''000000000'' Id_Operacion,
OPERACION= Case when fmm.Id_MotivoMovimiento in (103,117,309,310) then ''06-20'' else ftm.Clave + ''-'' +fmm.clave end,
e.curp AS CURP,
pi.PlazaIEEPO AS CLAVE_PLAZA,
ttcm.id_Tabulador_SE_CM  AS NIVEL_SALARIAL,
''R20'' AS UR,
convert(char(12),c.fechaini,103) as FECHA,
fid.Centro_Trabajo AS CCT,
e.RFC, e.ApPaterno AS PRIMER_APELLIDO,
e.ApMaterno AS SEGUNDO_APELLIDO,
e.Nombre AS [NOMBRE(S)],
right(''00'' + cast(tnac.Id_Nacionalidad as varchar(max)),3) AS NACIONALIDAD,
141 AS PAIS_NAC,
ENTIDAD_NAC= Case when e.Id_EstadoNac is null then 
(select right(''00''+ cast(max(id_estado) as varchar),2) from Empleados em inner join testados te on substring(CURP,12,2) = te.Estado where te.Id_Estado <= 32 and em.Id_Emp = e.id_emp) 
else right(''00''+ cast(te.id_estado as varchar),2) end,
MUNICIPIO_NAC= Case when e.Id_MunicipioNac is null then ''000'' else right(''000''+cast(tc.Id_Ciudad as varchar),3) end,
e.SEXO,
EDO_CIVIL= case when e.edocivil = ''C'' then ''02'' else ''01'' end,
CALLE_Y_NUM= Case when hd.Calle is null then '''' else cast(hd.calle as varchar(max))+ '' ''+ CAST(hd.numext as varchar (10)) end,
CP= Case when hd.CodPostal is null then '''' else hd.CodPostal end,
COLONIA= Case when hd.Id_Colonia = 0 or hd.Id_Colonia is null then '''' else tcol.DESCR end,
ENTIDAD= 20,
MUNICIPIO = right(''000''+cast(isnull(ctml.cve_mun_ct, 0) as varchar),3),
LOCALIDAD = right(''000''+cast(isnull(ctml.cve_loc_ct, 0) as varchar),3),
'''' AS NIV_MAX_ESTUD,
ING_GOB_FED= case when hfagf.fecha is null then left(dbo.fechatoanioquincena(hfas.fecha),4)+'' ''+right(dbo.fechatoanioquincena(hfas.fecha),2) else left(dbo.fechatoanioquincena(hfagf.fecha),4)+'' ''+right(dbo.fechatoanioquincena(hfagf.fecha),2) end,
ING_SEP= case when hfas.fecha is null then '''' else left(dbo.fechatoanioquincena(hfas.fecha),4)+'' ''+right(dbo.fechatoanioquincena(hfas.fecha),2) end,
ING_RAMA= case when hfar.fecha is null then '''' else left(dbo.fechatoanioquincena(hfar.fecha),4)+'' ''+right(dbo.fechatoanioquincena(hfar.fecha),2) end,
'''' as CED_PROF,
'''' as TIPO_LIC,	
cast('''' as varchar(10)) as QUINQ_DOC,	
cast('''' as varchar(10)) as QUINQ_ADM	,
'''' as GRADO_LIC,	
'''' as TITULACION,
HORARIO=Case when rt.id_nodo is null then '''' else tt.descripcion end,
ftm.Clave as MOVIMIENTO,	
ftm.Descripcion as DESC_MOVIMIENTO,	
fmm.Clave as MOTIVO,	
fmm.Descripcion as DESC_MOTIVO,
Convert(varchar(10), fdd.Fechaini, 103) as FECHA_INI, 
FECHA_FIN= case when dbo.fechaToAnioQuincena(fdd.fechaini)=dbo.fechaToAnioQuincena(fdd.fechafin) then Convert(varchar(10), dbo.anioQuincenaToFecha(''999924'',1), 103)  else Convert(varchar(10), fdd.FechaFin, 103) end,
cast('''' as varchar(300)) as CONCEPTOS_PAGO,
''1'' as REGIMEN, fd.Id_Documento, e.Id_Emp, pi.Id_Plaza, 1 TipoAnexo,fid.Id_Periodo, ftm.Id_TipoMovimiento, fmm.Id_MotivoMovimiento
from fup_documentos fd
inner join empleados e on fd.Id_Emp = e.Id_Emp
inner join fup_documento_detalle fdd on fd.Id_Documento = fdd.Id_Documento
inner join plazas p on fdd.Id_Plaza = p.Id_plaza
inner join plazaieepo pi on fdd.Id_Plaza = pi.Id_plaza
inner join (select id_plaza,MAX(fecha) fecha
from HTabulador_SE_cm htcm
group by id_plaza
) nc on pi.Id_plaza=nc.id_plaza
inner join HTabulador_SE_CM htcm on htcm.id_plaza=nc.id_plaza and htcm.fecha=nc.fecha
inner join TTabulador_SE_CM ttcm on htcm.id_rel=ttcm.id_Tabulador_SE_CM
inner join usuarios u on fd.Id_Usuario = u.Id_Usuario
inner join FUP_Informacion_Documentos fid on fd.Id_Documento = fid.Id_Documento
inner join CalenNomina c on fid.Id_Periodo = c.Id_Periodo
inner join FUP_MotivoMovimiento fmm on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
inner join tniveleducativo tn on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
inner join TNacionalidad tnac on e.Id_Nacionalidad=tnac.Id_Nacionalidad
inner join TPais tp on tnac.Id_Nacionalidad=tp.Id_Pais
left join TEstados te on e.Id_EstadoNac = te.Id_Estado
left join tciudad tc on e.Id_EstadoNac=te.Id_Estado and tc.Id_Ciudad=e.Id_MunicipioNac
left join (select id_emp,MAX(movimiento) fecha
from hdomicilio 
group by id_emp
) hdoc on e.Id_emp=hdoc.id_emp
left join HDomicilio hd on hd.id_emp=hdoc.id_emp and hdoc.fecha=hd.Movimiento
left join tcolonia tcol on hd.Id_Colonia=tcol.Id_Colonia
left join TLocalidad tloc on hd.Id_Localidad=tloc.id_Localidad
left join (select id_emp,MAX(fecha_alta_gob_fed) fecha
from HFecha_Alta_Gob_Fed group by id_emp
) hfagf on e.Id_Emp=hfagf.id_emp
left join (select id_emp,MAX(fecha_alta_sep) fecha
from HFecha_Alta_sep group by id_emp
) hfas on e.Id_Emp=hfas.id_emp
left join (select id_emp,MAX(fecha_alta_rama) fecha
from HFecha_Alta_rama group by id_emp
) hfar on e.Id_Emp=hfar.id_emp
inner join VistaTablaLongitud vt on fid.Centro_Trabajo=vt.clave
inner join RCT_Turno rt on vt.Id_Nodo=rt.id_nodo
inner join TCT_Turno tt on rt.id_rel=tt.id_CT_Turno
left join (
  select rcl.Id_Nodo, tmc.Cve_mun_ct, tcl.Cve_loc_ct 
  from RCT_Localidad rcl 
  inner join TCT_Localidad tcl on tcl.id_CT_Localidad = rcl.id_rel
  inner join RCT_Municipios_ct rct on rcl.Id_Nodo = rct.id_nodo
  inner join TCT_Municipios_ct tmc on tmc.id_CT_Municipios_ct = rct.id_rel
) ctml on ctml.id_nodo = vt.Id_Nodo 
where fid.Id_Periodo in (
SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n)
)
and e.id_cia in ( 1,2,3 ) and fd.Id_Estatus in (SELECT estatus.n.value(''.'', ''INT'') AS n FROM    @XmlEstatus.nodes(''/estatus'') AS estatus(n)) and fd.folio not in (select folio_n from HFolio_verificado)
and ftm.Id_TipoMovimiento in (4,8) and fmm.Id_MotivoMovimiento in (11,12,119,120)

--- licencias cubren
insert into Anexos_LayoutProceso
select  ''000000000'' Id_Operacion,
OPERACION = Case when fmm.Id_MotivoMovimiento in (3,8) then ''06-24'' else ftm.Clave + ''-'' + fmm.clave end, 
e.curp AS CURP, 
pi.PlazaIEEPO AS CLAVE_PLAZA, 
ttcm.id_Tabulador_SE_CM  AS NIVEL_SALARIAL, 
''R20'' AS UR, 
convert(char(12),c.fechaini,103) as FECHA, 
fid.Centro_Trabajo AS CCT, 
e.RFC, e.ApPaterno AS PRIMER_APELLIDO, 
e.ApMaterno AS SEGUNDO_APELLIDO, 
e.Nombre AS [NOMBRE(S)], 
right(''00'' + cast(tnac.Id_Nacionalidad as varchar(max)),3) AS NACIONALIDAD, 
141 AS PAIS_NAC,
ENTIDAD_NAC= Case when e.Id_EstadoNac is null then 
(select right(''00''+ cast(max(id_estado) as varchar),2) from Empleados em inner join testados te on substring(CURP,12,2) = te.Estado where te.Id_Estado <= 32 and em.Id_Emp = e.id_emp) 
else right(''00''+ cast(te.id_estado as varchar),2) end,
MUNICIPIO_NAC= Case when e.Id_MunicipioNac is null then ''000'' else right(''000''+cast(tc.Id_Ciudad as varchar),3) end,
e.SEXO, 
EDO_CIVIL= case when e.edocivil = ''C'' then ''02'' else ''01'' end, 
CALLE_Y_NUM = Case when hd.Calle is null then '''' else cast(hd.calle as varchar(max))+ '' '' + CAST(hd.numext as varchar (10)) end, 
CP = Case when hd.CodPostal is null then '''' else hd.CodPostal end, 
COLONIA = Case when hd.Id_Colonia = 0 or hd.Id_Colonia is null then '''' else tcol.DESCR end, 
ENTIDAD= 20,
MUNICIPIO = right(''000''+cast(isnull(ctml.cve_mun_ct, 0) as varchar),3),
LOCALIDAD = right(''000''+cast(isnull(ctml.cve_loc_ct, 0) as varchar),3), 
'''' AS NIV_MAX_ESTUD, 
ING_GOB_FED= case when hfagf.fecha is null then left(dbo.fechatoanioquincena(hfas.fecha),4)+'' ''+right(dbo.fechatoanioquincena(hfas.fecha),2) else left(dbo.fechatoanioquincena(hfagf.fecha),4)+'' ''+right(dbo.fechatoanioquincena(hfagf.fecha),2) end,
ING_SEP= case when hfas.fecha is null then '''' else left(dbo.fechatoanioquincena(hfas.fecha),4)+'' ''+right(dbo.fechatoanioquincena(hfas.fecha),2) end,
ING_RAMA= case when hfar.fecha is null then '''' else left(dbo.fechatoanioquincena(hfar.fecha),4)+'' ''+right(dbo.fechatoanioquincena(hfar.fecha),2) end, 
'''' as CED_PROF, 
'''' as TIPO_LIC,	
cast('''' as varchar(10)) as QUINQ_DOC, 
cast('''' as varchar(10)) as QUINQ_ADM, 
'''' as GRADO_LIC,	
'''' as TITULACION, 
HORARIO = Case when rt.id_nodo is null then '''' else tt.descripcion end, 
ftm.Clave as MOVIMIENTO, 
ftm.Descripcion as DESC_MOVIMIENTO, 
fmm.Clave as MOTIVO, 
fmm.Descripcion as DESC_MOTIVO, 
Convert(varchar(10), fdd.Fechaini, 103) as FECHA_INI, 
FECHA_FIN = case when dbo.fechaToAnioQuincena(fdd.fechaini)=dbo.fechaToAnioQuincena(fdd.fechafin) then Convert(varchar(10), dbo.anioQuincenaToFecha( ''999924'' ,1), 103)  else Convert(varchar(10), fdd.FechaFin, 103) end, 
cast('''' as varchar(300)) as CONCEPTOS_PAGO, 
''1'' as REGIMEN, fd.Id_Documento, e.Id_Emp, pi.Id_Plaza, 2 TipoAnexo,fid.Id_Periodo, ftm.Id_TipoMovimiento, fmm.Id_MotivoMovimiento
from fup_documentos fd 
inner join empleados e on fd.Id_Emp = e.Id_Emp 
inner join fup_documento_detalle fdd on fd.Id_Documento = fdd.Id_Documento 
inner join plazas p on fdd.Id_Plaza = p.Id_plaza 
inner join (select id_plaza,MAX(fecha) fecha 
from HTabulador_SE_cm htcm 
group by id_plaza 
) nc on fdd.Id_plaza = nc.id_plaza 
inner join HTabulador_SE_CM htcm on htcm.id_plaza = nc.id_plaza and htcm.fecha = nc.fecha 
inner join TTabulador_SE_CM ttcm on htcm.id_rel = ttcm.id_Tabulador_SE_CM 
inner join usuarios u on fd.Id_Usuario = u.Id_Usuario 
inner join FUP_Informacion_Documentos fid on fd.Id_Documento = fid.Id_Documento 
inner join CalenNomina c on fid.Id_Periodo = c.Id_Periodo 
inner join FUP_MotivoMovimiento fmm on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento 
inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento 
inner join tniveleducativo tn on fid.Id_Nivel_Educativo = tn.id_NivelEducativo 
inner join TNacionalidad tnac on e.Id_Nacionalidad = tnac.Id_Nacionalidad 
inner join TPais tp on tnac.Id_Nacionalidad = tp.Id_Pais 
left join TEstados te on e.Id_EstadoNac = te.Id_Estado 
left join tciudad tc on e.Id_EstadoNac = te.Id_Estado and tc.Id_Ciudad = e.Id_MunicipioNac 
left join (select id_emp,MAX(movimiento) fecha 
from hdomicilio 
group by id_emp 
) hdoc on e.Id_emp = hdoc.id_emp 
left join HDomicilio hd on hd.id_emp = hdoc.id_emp and hdoc.fecha = hd.Movimiento 
left join tcolonia tcol on hd.Id_Colonia = tcol.Id_Colonia 
left join TLocalidad tloc on hd.Id_Localidad = tloc.id_Localidad 
left join (select id_emp,MAX(fecha_alta_gob_fed) fecha 
from HFecha_Alta_Gob_Fed group by id_emp 
) hfagf on e.Id_Emp = hfagf.id_emp 
left join (select id_emp,MAX(fecha_alta_sep) fecha 
from HFecha_Alta_sep group by id_emp 
) hfas on e.Id_Emp = hfas.id_emp 
left join (select id_emp,MAX(fecha_alta_rama) fecha 
from HFecha_Alta_rama group by id_emp 
) hfar on e.Id_Emp = hfar.id_emp 
inner join ( select distinct fvi.Id_Valor,tf.idFormula,tf.Descripcion,fvi.valor,fvi.id_documento,fdc.Id_MotivoMovimiento from FUP_DetalleCampos fdc 
inner join Tformulas tf on fdc.Id_Formula = tf.idFormula 
inner join FUP_ValorInteger fvi on fdc.Id_Valor = fvi.Id_Valor 
inner join FUP_Documento_Detalle fdocd on fvi.Id_Documento = fdocd.Id_Detalle 
where fdc.Id_MotivoMovimiento in (3,8) and tf.Descripcion = ''id_plaza'' 
and fdocd.Id_Plaza <> fvi.Valor 
) pip on fdd.Id_Detalle = pip.Id_Documento 
inner join plazaieepo pi on pip.valor = pi.Id_plaza 
inner join VistaTablaLongitud vt on fid.Centro_Trabajo = vt.clave 
inner join RCT_Turno rt on vt.Id_Nodo = rt.id_nodo 
inner join TCT_Turno tt on rt.id_rel = tt.id_CT_Turno 
left join (
  select rcl.Id_Nodo, tmc.Cve_mun_ct, tcl.Cve_loc_ct 
  from RCT_Localidad rcl 
  inner join TCT_Localidad tcl on tcl.id_CT_Localidad = rcl.id_rel
  inner join RCT_Municipios_ct rct on rcl.Id_Nodo = rct.id_nodo
  inner join TCT_Municipios_ct tmc on tmc.id_CT_Municipios_ct = rct.id_rel
) ctml on ctml.id_nodo = vt.Id_Nodo 
where 
fid.Id_Periodo in (
SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n)
) 
and e.id_cia in ( 1,2,3 ) and fd.Id_Estatus in (SELECT estatus.n.value(''.'', ''INT'') AS n FROM    @XmlEstatus.nodes(''/estatus'') AS estatus(n)) and fd.folio not in (select folio_n from HFolio_verificado) 
and fmm.Id_MotivoMovimiento in (3,8)

insert into Anexos_LayoutProceso
select  ''000000000'' Id_Operacion,
OPERACION = Case when fmm.Id_MotivoMovimiento in (4,9) then ''06-25'' else ftm.Clave + ''-'' + fmm.clave end, 
e.curp AS CURP, 
pi.PlazaIEEPO AS CLAVE_PLAZA, 
ttcm.id_Tabulador_SE_CM  AS NIVEL_SALARIAL, 
''R20'' AS UR, 
convert(char(12),c.fechaini,103) as FECHA, 
fid.Centro_Trabajo AS CCT, 
e.RFC, e.ApPaterno AS PRIMER_APELLIDO, 
e.ApMaterno AS SEGUNDO_APELLIDO, 
e.Nombre AS [NOMBRE(S)], 
right(''00'' + cast(tnac.Id_Nacionalidad as varchar(max)),3) AS NACIONALIDAD, 
141 AS PAIS_NAC,
ENTIDAD_NAC= Case when e.Id_EstadoNac is null then 
(select right(''00''+ cast(max(id_estado) as varchar),2) from Empleados em inner join testados te on substring(CURP,12,2) = te.Estado where te.Id_Estado <= 32 and em.Id_Emp = e.id_emp) 
else right(''00''+ cast(te.id_estado as varchar),2) end,
MUNICIPIO_NAC= Case when e.Id_MunicipioNac is null then ''000'' else right(''000''+cast(tc.Id_Ciudad as varchar),3) end, 
e.SEXO, 
EDO_CIVIL = case when e.edocivil = ''C'' then ''02'' else ''01'' end, 
CALLE_Y_NUM = Case when hd.Calle is null then '''' else cast(hd.calle as varchar(max))+ '' ''+ CAST(hd.numext as varchar (10)) end, 
CP = Case when hd.CodPostal is null then '''' else hd.CodPostal end, 
COLONIA = Case when hd.Id_Colonia = 0 or hd.Id_Colonia is null then '''' else tcol.DESCR end, 
ENTIDAD= 20,
MUNICIPIO = right(''000''+cast(isnull(ctml.cve_mun_ct, 0) as varchar),3),
LOCALIDAD = right(''000''+cast(isnull(ctml.cve_loc_ct, 0) as varchar),3),
'''' AS NIV_MAX_ESTUD, 
ING_GOB_FED= case when hfagf.fecha is null then left(dbo.fechatoanioquincena(hfas.fecha),4)+'' ''+right(dbo.fechatoanioquincena(hfas.fecha),2) else left(dbo.fechatoanioquincena(hfagf.fecha),4)+'' ''+right(dbo.fechatoanioquincena(hfagf.fecha),2) end,
ING_SEP= case when hfas.fecha is null then '''' else left(dbo.fechatoanioquincena(hfas.fecha),4)+'' ''+right(dbo.fechatoanioquincena(hfas.fecha),2) end,
ING_RAMA= case when hfar.fecha is null then '''' else left(dbo.fechatoanioquincena(hfar.fecha),4)+'' ''+right(dbo.fechatoanioquincena(hfar.fecha),2) end, 
'''' as CED_PROF, 
'''' as TIPO_LIC,	
cast('''' as varchar(10)) as QUINQ_DOC, 
cast('''' as varchar(10)) as QUINQ_ADM, 
'''' as GRADO_LIC,	
'''' as TITULACION, 
HORARIO = Case when rt.id_nodo is null then '''' else tt.descripcion end, 
ftm.Clave as MOVIMIENTO, 
ftm.Descripcion as DESC_MOVIMIENTO,	
fmm.Clave as MOTIVO, 
fmm.Descripcion as DESC_MOTIVO, 
Convert(varchar(10), fdd.Fechaini, 103) as FECHA_INI, 
FECHA_FIN = case when dbo.fechaToAnioQuincena(fdd.fechaini) = dbo.fechaToAnioQuincena(fdd.fechafin) then Convert(varchar(10), dbo.anioQuincenaToFecha(''999924'',1), 103)  else Convert(varchar(10), fdd.FechaFin, 103) end, 
cast('''' as varchar(300)) as CONCEPTOS_PAGO, 
''1'' as REGIMEN, fd.Id_Documento, e.Id_Emp, pi.Id_Plaza, 2 TipoAnexo,fid.Id_Periodo, ftm.Id_TipoMovimiento, fmm.Id_MotivoMovimiento
from fup_documentos fd 
inner join empleados e on fd.Id_Emp = e.Id_Emp 
inner join fup_documento_detalle fdd on fd.Id_Documento = fdd.Id_Documento 
inner join plazas p on fdd.Id_Plaza = p.Id_plaza 
inner join (select id_plaza,MAX(fecha) fecha 
from HTabulador_SE_cm htcm 
group by id_plaza 
) nc on fdd.Id_plaza = nc.id_plaza 
inner join HTabulador_SE_CM htcm on htcm.id_plaza = nc.id_plaza and htcm.fecha = nc.fecha 
inner join TTabulador_SE_CM ttcm on htcm.id_rel = ttcm.id_Tabulador_SE_CM 
inner join usuarios u on fd.Id_Usuario = u.Id_Usuario 
inner join FUP_Informacion_Documentos fid on fd.Id_Documento = fid.Id_Documento 
inner join CalenNomina c on fid.Id_Periodo = c.Id_Periodo 
inner join FUP_MotivoMovimiento fmm on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento 
inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento 
inner join tniveleducativo tn on fid.Id_Nivel_Educativo=tn.id_NivelEducativo 
inner join TNacionalidad tnac on e.Id_Nacionalidad = tnac.Id_Nacionalidad 
inner join TPais tp on tnac.Id_Nacionalidad = tp.Id_Pais 
left join TEstados te on e.Id_EstadoNac = te.Id_Estado 
left join tciudad tc on e.Id_EstadoNac=te.Id_Estado and tc.Id_Ciudad=e.Id_MunicipioNac 
left join (select id_emp,MAX(movimiento) fecha 
from hdomicilio 
group by id_emp 
) hdoc on e.Id_emp = hdoc.id_emp 
left join HDomicilio hd on hd.id_emp = hdoc.id_emp and hdoc.fecha = hd.Movimiento 
left join tcolonia tcol on hd.Id_Colonia = tcol.Id_Colonia 
left join TLocalidad tloc on hd.Id_Localidad = tloc.id_Localidad 
left join (select id_emp,MAX(fecha_alta_gob_fed) fecha 
from HFecha_Alta_Gob_Fed group by id_emp 
) hfagf on e.Id_Emp = hfagf.id_emp 
left join (select id_emp,MAX(fecha_alta_sep) fecha 
from HFecha_Alta_sep group by id_emp 
) hfas on e.Id_Emp = hfas.id_emp 
left join (select id_emp,MAX(fecha_alta_rama) fecha 
from HFecha_Alta_rama group by id_emp 
) hfar on e.Id_Emp = hfar.id_emp 
inner join ( select distinct fvi.Id_Valor,tf.idFormula,tf.Descripcion,fvi.valor,fvi.id_documento,fdc.Id_MotivoMovimiento from FUP_DetalleCampos fdc 
inner join Tformulas tf on fdc.Id_Formula = tf.idFormula 
inner join FUP_ValorInteger fvi on fdc.Id_Valor = fvi.Id_Valor 
inner join FUP_Documento_Detalle fdocd on fvi.Id_Documento = fdocd.Id_Detalle 
where fdc.Id_MotivoMovimiento in (4,9) and tf.Descripcion = ''id_plaza''
and fdocd.Id_Plaza <> fvi.Valor 
) pip on fdd.Id_Detalle = pip.Id_Documento 
inner join plazaieepo pi on pip.valor = pi.Id_plaza 
inner join VistaTablaLongitud vt on fid.Centro_Trabajo=vt.clave 
inner join RCT_Turno rt on vt.Id_Nodo = rt.id_nodo 
inner join TCT_Turno tt on rt.id_rel = tt.id_CT_Turno 
left join (
  select rcl.Id_Nodo, tmc.Cve_mun_ct, tcl.Cve_loc_ct 
  from RCT_Localidad rcl 
  inner join TCT_Localidad tcl on tcl.id_CT_Localidad = rcl.id_rel
  inner join RCT_Municipios_ct rct on rcl.Id_Nodo = rct.id_nodo
  inner join TCT_Municipios_ct tmc on tmc.id_CT_Municipios_ct = rct.id_rel
) ctml on ctml.id_nodo = vt.Id_Nodo 
where 
fid.Id_Periodo in ( 
SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n)
)
and e.id_cia in ( 1,2,3 ) and fd.Id_Estatus in (SELECT estatus.n.value(''.'', ''INT'') AS n FROM    @XmlEstatus.nodes(''/estatus'') AS estatus(n)) and fd.folio not in (select folio_n from HFolio_verificado)
and fmm.Id_MotivoMovimiento in (4,9)

insert into Anexos_LayoutProceso
select  ''000000000'' Id_Operacion,
OPERACION= Case when fmm.Id_MotivoMovimiento in (2,7) then ''06-20'' else ftm.Clave + ''-'' + fmm.clave end,
e.curp AS CURP,
pi.PlazaIEEPO AS CLAVE_PLAZA,
ttcm.id_Tabulador_SE_CM  AS NIVEL_SALARIAL,
''R20'' AS UR,
convert(char(12),c.fechaini,103) as FECHA,
fid.Centro_Trabajo AS CCT,
e.RFC, e.ApPaterno AS PRIMER_APELLIDO,
e.ApMaterno AS SEGUNDO_APELLIDO,
e.Nombre AS [NOMBRE(S)], 
right(''00'' + cast(tnac.Id_Nacionalidad as varchar(max)),3) AS NACIONALIDAD, 
141 AS PAIS_NAC,
ENTIDAD_NAC= Case when e.Id_EstadoNac is null then 
(select right(''00''+ cast(max(id_estado) as varchar),2) from Empleados em inner join testados te on substring(CURP,12,2) = te.Estado where te.Id_Estado <= 32 and em.Id_Emp = e.id_emp) 
else right(''00''+ cast(te.id_estado as varchar),2) end,
MUNICIPIO_NAC= Case when e.Id_MunicipioNac is null then ''000'' else right(''000''+cast(tc.Id_Ciudad as varchar),3) end,
e.SEXO,
EDO_CIVIL= case when e.edocivil = ''C'' then ''02'' else ''01'' end,
CALLE_Y_NUM= Case when hd.Calle is null then '''' else cast(hd.calle as varchar(max))+ '' ''+ CAST(hd.numext as varchar (10)) end,
CP = Case when hd.CodPostal is null then '''' else hd.CodPostal end,
COLONIA= Case when hd.Id_Colonia = 0 or hd.Id_Colonia is null then '''' else tcol.DESCR end,
ENTIDAD= 20,
MUNICIPIO = right(''000''+cast(isnull(ctml.cve_mun_ct, 0) as varchar),3),
LOCALIDAD = right(''000''+cast(isnull(ctml.cve_loc_ct, 0) as varchar),3),
'''' AS NIV_MAX_ESTUD,
ING_GOB_FED= case when hfagf.fecha is null then left(dbo.fechatoanioquincena(hfas.fecha),4)+'' ''+right(dbo.fechatoanioquincena(hfas.fecha),2) else left(dbo.fechatoanioquincena(hfagf.fecha),4)+'' ''+right(dbo.fechatoanioquincena(hfagf.fecha),2) end,
ING_SEP= case when hfas.fecha is null then '''' else left(dbo.fechatoanioquincena(hfas.fecha),4)+'' ''+right(dbo.fechatoanioquincena(hfas.fecha),2) end,
ING_RAMA= case when hfar.fecha is null then '''' else left(dbo.fechatoanioquincena(hfar.fecha),4)+'' ''+right(dbo.fechatoanioquincena(hfar.fecha),2) end,
'''' as CED_PROF,
'''' as TIPO_LIC,	
cast('''' as varchar(10)) as QUINQ_DOC,	
cast('''' as varchar(10)) as QUINQ_ADM	,
'''' as GRADO_LIC,	
'''' as TITULACION,
HORARIO=Case when rt.id_nodo is null then '''' else tt.descripcion end,
ftm.Clave as MOVIMIENTO,	
ftm.Descripcion as DESC_MOVIMIENTO,	
fmm.Clave as MOTIVO,	
fmm.Descripcion as DESC_MOTIVO,
Convert(varchar(10), fdd.Fechaini, 103) as FECHA_INI, 
FECHA_FIN= case when dbo.fechaToAnioQuincena(fdd.fechaini)=dbo.fechaToAnioQuincena(fdd.fechafin) then Convert(varchar(10), dbo.anioQuincenaToFecha(''999924'',1), 103)  else Convert(varchar(10), fdd.FechaFin, 103) end,
cast('''' as varchar(300)) as CONCEPTOS_PAGO,
''1'' as REGIMEN, fd.Id_Documento, e.Id_Emp, pi.Id_Plaza, 2 TipoAnexo,fid.Id_Periodo, ftm.Id_TipoMovimiento, fmm.Id_MotivoMovimiento  
from fup_documentos fd
inner join empleados e on fd.Id_Emp = e.Id_Emp
inner join fup_documento_detalle fdd on fd.Id_Documento = fdd.Id_Documento
inner join plazas p on fdd.Id_Plaza = p.Id_plaza
inner join (select id_plaza,MAX(fecha) fecha
from HTabulador_SE_cm htcm
group by id_plaza
) nc on fdd.Id_plaza=nc.id_plaza
inner join HTabulador_SE_CM htcm on htcm.id_plaza=nc.id_plaza and htcm.fecha=nc.fecha
inner join TTabulador_SE_CM ttcm on htcm.id_rel=ttcm.id_Tabulador_SE_CM
inner join usuarios u on fd.Id_Usuario = u.Id_Usuario
inner join FUP_Informacion_Documentos fid on fd.Id_Documento = fid.Id_Documento
inner join CalenNomina c on fid.Id_Periodo = c.Id_Periodo
inner join FUP_MotivoMovimiento fmm on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
inner join tniveleducativo tn on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
inner join TNacionalidad tnac on e.Id_Nacionalidad=tnac.Id_Nacionalidad
inner join TPais tp on tnac.Id_Nacionalidad=tp.Id_Pais
left join TEstados te on e.Id_EstadoNac = te.Id_Estado
left join tciudad tc on e.Id_EstadoNac=te.Id_Estado and tc.Id_Ciudad=e.Id_MunicipioNac
left join (select id_emp,MAX(movimiento) fecha
from hdomicilio 
group by id_emp
) hdoc on e.Id_emp=hdoc.id_emp
left join HDomicilio hd on hd.id_emp=hdoc.id_emp and hdoc.fecha=hd.Movimiento
left join tcolonia tcol on hd.Id_Colonia=tcol.Id_Colonia
left join TLocalidad tloc on hd.Id_Localidad=tloc.id_Localidad
left join (select id_emp,MAX(fecha_alta_gob_fed) fecha
from HFecha_Alta_Gob_Fed group by id_emp
) hfagf on e.Id_Emp=hfagf.id_emp
left join (select id_emp,MAX(fecha_alta_sep) fecha
from HFecha_Alta_sep group by id_emp
) hfas on e.Id_Emp=hfas.id_emp
left join (select id_emp,MAX(fecha_alta_rama) fecha
from HFecha_Alta_rama group by id_emp
) hfar on e.Id_Emp=hfar.id_emp
inner join ( select distinct fvi.Id_Valor,tf.idFormula,tf.Descripcion,fvi.valor,fvi.id_documento,fdc.Id_MotivoMovimiento from FUP_DetalleCampos fdc
inner join Tformulas tf on fdc.Id_Formula=tf.idFormula
inner join FUP_ValorInteger fvi on fdc.Id_Valor=fvi.Id_Valor
inner join FUP_Documento_Detalle fdocd on fvi.Id_Documento=fdocd.Id_Detalle
where fdc.Id_MotivoMovimiento in (2,7) and tf.Descripcion= ''id_plaza''
and fdocd.Id_Plaza<>fvi.Valor 
) pip on fdd.Id_Detalle=pip.Id_Documento 
inner join plazaieepo pi on pip.valor = pi.Id_plaza
inner join VistaTablaLongitud vt on fid.Centro_Trabajo=vt.clave
inner join RCT_Turno rt on vt.Id_Nodo=rt.id_nodo
inner join TCT_Turno tt on rt.id_rel=tt.id_CT_Turno
left join (
  select rcl.Id_Nodo, tmc.Cve_mun_ct, tcl.Cve_loc_ct 
  from RCT_Localidad rcl 
  inner join TCT_Localidad tcl on tcl.id_CT_Localidad = rcl.id_rel
  inner join RCT_Municipios_ct rct on rcl.Id_Nodo = rct.id_nodo
  inner join TCT_Municipios_ct tmc on tmc.id_CT_Municipios_ct = rct.id_rel
) ctml on ctml.id_nodo = vt.Id_Nodo 
where 
fid.Id_Periodo in (
SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n)
)
and e.id_cia in ( 1,2,3 ) and fd.Id_Estatus in (SELECT estatus.n.value(''.'', ''INT'') AS n FROM    @XmlEstatus.nodes(''/estatus'') AS estatus(n)) and fd.folio not in (select folio_n from HFolio_verificado)
and fmm.Id_MotivoMovimiento in (2,7)

-- basificaciones
insert into Anexos_LayoutProceso
select ''000000000'' ID_OPERACION,ftm.Clave+''-''+fmm.clave AS OPERACION,
e.curp AS CURP,
pi.PlazaIEEPO AS CLAVE_PLAZA,
ttcm.id_Tabulador_SE_CM  AS NIVEL_SALARIAL,
''R20'' AS UR,
convert(char(12),c.fechaini,103) as FECHA,
fid.Centro_Trabajo AS CCT,
e.RFC, e.ApPaterno AS PRIMER_APELLIDO,
e.ApMaterno AS SEGUNDO_APELLIDO,
e.Nombre AS ''NOMBRE(S)'',
right(''00'' + cast(tnac.Id_Nacionalidad as varchar(max)),3) AS NACIONALIDAD,
141 AS PAIS_NAC,
ENTIDAD_NAC= Case when e.Id_EstadoNac is null then (select right(''00''+ cast(max(id_estado) as varchar),2) from Empleados em inner join testados te on substring(CURP,12,2) = te.Estado where te.Id_Estado <= 32 and em.Id_Emp = e.id_emp) else right(''00''+ cast(te.id_estado as varchar),2) end,
MUNICIPIO_NAC= Case when e.Id_MunicipioNac is null then ''000'' else right(''000''+cast(tc.Id_Ciudad as varchar),3) end, 
e.SEXO,
EDO_CIVIL= case when e.edocivil = ''C'' then ''02'' else ''01'' end, 
CALLE_Y_NUM= Case when hd.Calle is null then '''' else cast(hd.calle as varchar(max))+ '' ''+ CAST(hd.numext as varchar (10)) end,
CP= Case when hd.CodPostal is null then '''' else hd.CodPostal end,
COLONIA= Case when hd.Id_Colonia = 0 or hd.Id_Colonia is null then '''' else tcol.DESCR end,
ENTIDAD= 20,
MUNICIPIO= right(''000''+cast(isnull(ctml.cve_mun_ct, 0) as varchar),3),
LOCALIDAD= right(''000''+cast(isnull(ctml.cve_loc_ct, 0) as varchar),3),
'''' AS NIV_MAX_ESTUD,
ING_GOB_FED= case when hfagf.fecha is null then left(dbo.fechatoanioquincena(hfas.fecha),4)+'' ''+right(dbo.fechatoanioquincena(hfas.fecha),2) else left(dbo.fechatoanioquincena(hfagf.fecha),4)+'' ''+right(dbo.fechatoanioquincena(hfagf.fecha),2) end,
ING_SEP= case when hfas.fecha is null then '''' else left(dbo.fechatoanioquincena(hfas.fecha),4)+'' ''+right(dbo.fechatoanioquincena(hfas.fecha),2) end,
ING_RAMA= case when hfar.fecha is null then '''' else left(dbo.fechatoanioquincena(hfar.fecha),4)+'' ''+right(dbo.fechatoanioquincena(hfar.fecha),2) end, 
'''' as CED_PROF, 
'''' as TIPO_LIC,	
cast('''' as varchar(10)) as QUINQ_DOC, 
cast('''' as varchar(10)) as QUINQ_ADM,
'''' as GRADO_LIC,	
'''' as TITULACIÓN,
HORARIO=Case when rt.id_nodo is null then '''' else tt.descripcion end,
ftm.Clave as MOVIMIENTO,	
ftm.Descripcion as DESC_MOVIMIENTO,	
fmm.Clave as MOTIVO,	
DESC_MOTIVO= fmm.Descripcion,
Convert(varchar(10), fdd.Fechaini, 103) as FECHA_INI, 
FECHA_FIN= case when dbo.fechaToAnioQuincena(fdd.fechaini)=dbo.fechaToAnioQuincena(fdd.fechafin) then Convert(varchar(10), dbo.anioQuincenaToFecha(''999924'',1), 103)  else Convert(varchar(10), fdd.FechaFin, 103) end,
cast('''' as varchar(300))  as CONCEPTOS_PAGO,
''1'' REGIMEN, fd.Id_Documento, e.Id_Emp, pi.Id_Plaza, 3 TipoAnexo,fid.Id_Periodo, ftm.Id_TipoMovimiento, fmm.Id_MotivoMovimiento 
from fup_documentos fd
inner join empleados e on fd.Id_Emp = e.Id_Emp
inner join fup_documento_detalle fdd on fd.Id_Documento = fdd.Id_Documento
inner join plazas p on fdd.Id_Plaza = p.Id_plaza
inner join plazaieepo pi on fdd.Id_Plaza = pi.Id_plaza
inner join (select id_plaza,MAX(fecha) fecha
from HTabulador_SE_cm htcm
group by id_plaza
) nc on pi.Id_plaza=nc.id_plaza
inner join HTabulador_SE_CM htcm on htcm.id_plaza=nc.id_plaza and htcm.fecha=nc.fecha
inner join TTabulador_SE_CM ttcm on htcm.id_rel=ttcm.id_Tabulador_SE_CM
inner join usuarios u on fd.Id_Usuario = u.Id_Usuario
inner join FUP_Informacion_Documentos fid on fd.Id_Documento = fid.Id_Documento
inner join CalenNomina c on fid.Id_Periodo = c.Id_Periodo
inner join FUP_MotivoMovimiento fmm on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
inner join tniveleducativo tn on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
inner join TNacionalidad tnac on e.Id_Nacionalidad=tnac.Id_Nacionalidad
inner join TPais tp on tnac.Id_Nacionalidad=tp.Id_Pais
left join TEstados te on e.Id_EstadoNac = te.Id_Estado
left join tciudad tc on e.Id_EstadoNac=te.Id_Estado and tc.Id_Ciudad=e.Id_MunicipioNac
left join (select id_emp,MAX(movimiento) fecha
from hdomicilio 
group by id_emp
) hdoc on e.Id_emp=hdoc.id_emp
left join HDomicilio hd on hd.id_emp=hdoc.id_emp and hdoc.fecha=hd.Movimiento
left join tcolonia tcol on hd.Id_Colonia=tcol.Id_Colonia
left join TLocalidad tloc on hd.Id_Localidad=tloc.id_Localidad
left join FUP_ValorSubCatalogo fvs on fdd.Id_Detalle=fvs.Id_Documento
left join TTFup_Cambio_Datos_Personales ttfdp on fvs.Valor=ttfdp.id_TFup_Cambio_Datos_Personales
left join (select id_emp,MAX(fecha_alta_gob_fed) fecha
from HFecha_Alta_Gob_Fed group by id_emp
) hfagf on e.Id_Emp=hfagf.id_emp
left join (select id_emp,MAX(fecha_alta_sep) fecha
from HFecha_Alta_sep group by id_emp
) hfas on e.Id_Emp=hfas.id_emp
left join (select id_emp,MAX(fecha_alta_rama) fecha
from HFecha_Alta_rama group by id_emp
) hfar on e.Id_Emp=hfar.id_emp
inner join VistaTablaLongitud vt on fid.Centro_Trabajo=vt.clave
inner join RCT_Turno rt on vt.Id_Nodo=rt.id_nodo
inner join TCT_Turno tt on rt.id_rel=tt.id_CT_Turno
left join (
  select rcl.Id_Nodo, tmc.Cve_mun_ct, tcl.Cve_loc_ct 
  from RCT_Localidad rcl 
  inner join TCT_Localidad tcl on tcl.id_CT_Localidad = rcl.id_rel
  inner join RCT_Municipios_ct rct on rcl.Id_Nodo = rct.id_nodo
  inner join TCT_Municipios_ct tmc on tmc.id_CT_Municipios_ct = rct.id_rel
) ctml on ctml.id_nodo = vt.Id_Nodo 
where fid.Id_Periodo in (
SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n)
)
and e.id_cia in ( 1,2,3 ) and fd.Id_Estatus in (SELECT estatus.n.value(''.'', ''INT'') AS n FROM    @XmlEstatus.nodes(''/estatus'') AS estatus(n)) and fd.folio not in (select folio_n from HFolio_verificado)
and ftm.Id_TipoMovimiento in (17) and fmm.id_motivomovimiento in (11,120,84)
order by  id_operacion,ftm.clave,fmm.clave


-- licencias
insert into Anexos_LayoutProceso
select  ''000000000'' Id_Operacion,
ftm.Clave+''-''+fmm.clave AS OPERACION,
e.curp AS CURP,
pi.PlazaIEEPO AS CLAVE_PLAZA,
ttcm.id_Tabulador_SE_CM  AS NIVEL_SALARIAL,
'''' AS UR,
'''' as FECHA,
'''' AS CCT,
'''' RFC, '''' PRIMER_APELLIDO,
'''' SEGUNDO_APELLIDO,
'''' [NOMBRE(S)],
'''' NACIONALIDAD,
'''' PAIS_NAC,
'''' ENTIDAD_NAC,
'''' MUNICIPIO_NAC,
'''' SEXO,
'''' EDO_CIVIL,
'''' CALLE_Y_NUM,
'''' CP,
'''' COLONIA,
'''' ENTIDAD,
'''' MUNICIPIO,
'''' LOCALIDAD,
'''' NIV_MAX_ESTUD,
'''' ING_GOB_FED,
'''' ING_SEP,
'''' ING_RAMA,
'''' CED_PROF,
'''' TIPO_LIC,	
'''' QUINQ_DOC,	
'''' QUINQ_ADM,
'''' GRADO_LIC,	
'''' TITULACION,
'''' HORARIO,
ftm.Clave as MOVIMIENTO,	
ftm.Descripcion as DESC_MOVIMIENTO,	
fmm.Clave as MOTIVO,	
fmm.Descripcion as DESC_MOTIVO,
Convert(varchar(10), fdd.Fechaini, 103) as FECHA_INI, 
FECHA_FIN= case when dbo.fechaToAnioQuincena(fdd.fechaini)=dbo.fechaToAnioQuincena(fdd.fechafin) then Convert(varchar(10), dbo.anioQuincenaToFecha(''999924'',1), 103)  else Convert(varchar(10), fdd.FechaFin, 103) end,
cast('''' as varchar(300)) as CONCEPTOS_PAGO,
'''' as REGIMEN, fd.Id_Documento, e.Id_Emp, pi.Id_Plaza, 4 TipoAnexo,fid.Id_Periodo, ftm.Id_TipoMovimiento, fmm.Id_MotivoMovimiento 
from fup_documentos fd
inner join empleados e on fd.Id_Emp = e.Id_Emp
inner join fup_documento_detalle fdd on fd.Id_Documento = fdd.Id_Documento
inner join plazas p on fdd.Id_Plaza = p.Id_plaza
inner join plazaieepo pi on fdd.Id_Plaza = pi.Id_plaza
inner join (select id_plaza,MAX(fecha) fecha
from HTabulador_SE_cm htcm
group by id_plaza
) nc on pi.Id_plaza=nc.id_plaza
inner join HTabulador_SE_CM htcm on htcm.id_plaza=nc.id_plaza and htcm.fecha=nc.fecha
inner join TTabulador_SE_CM ttcm on htcm.id_rel=ttcm.id_Tabulador_SE_CM
inner join usuarios u on fd.Id_Usuario = u.Id_Usuario
inner join FUP_Informacion_Documentos fid on fd.Id_Documento = fid.Id_Documento
inner join CalenNomina c on fid.Id_Periodo = c.Id_Periodo
inner join FUP_MotivoMovimiento fmm on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
inner join tniveleducativo tn on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
inner join TNacionalidad tnac on e.Id_Nacionalidad=tnac.Id_Nacionalidad
inner join TPais tp on tnac.Id_Nacionalidad=tp.Id_Pais
left join TEstados te on e.Id_EstadoNac = te.Id_Estado
left join tciudad tc on e.Id_EstadoNac=te.Id_Estado and tc.Id_Ciudad=e.Id_MunicipioNac
left join (select id_emp,MAX(movimiento) fecha
from hdomicilio 
group by id_emp
) hdoc on e.Id_emp=hdoc.id_emp
left join HDomicilio hd on hd.id_emp=hdoc.id_emp and hdoc.fecha=hd.Movimiento
left join tcolonia tcol on hd.Id_Colonia=tcol.Id_Colonia
left join TLocalidad tloc on hd.Id_Localidad=tloc.id_Localidad
left join (select id_emp,MAX(fecha_alta_gob_fed) fecha
from HFecha_Alta_Gob_Fed group by id_emp
) hfagf on e.Id_Emp=hfagf.id_emp
left join (select id_emp,MAX(fecha_alta_sep) fecha
from HFecha_Alta_sep group by id_emp
) hfas on e.Id_Emp=hfas.id_emp
left join (select id_emp,MAX(fecha_alta_rama) fecha
from HFecha_Alta_rama group by id_emp
) hfar on e.Id_Emp=hfar.id_emp
inner join VistaTablaLongitud vt on fid.Centro_Trabajo=vt.clave
inner join RCT_Turno rt on vt.Id_Nodo=rt.id_nodo
inner join TCT_Turno tt on rt.id_rel=tt.id_CT_Turno
where fid.Id_Periodo in (
SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n)
) and e.id_cia in ( 1,2,3 ) and fd.Id_Estatus in (SELECT estatus.n.value(''.'', ''INT'') AS n FROM    @XmlEstatus.nodes(''/estatus'') AS estatus(n)) and fd.folio not in (select folio_n from HFolio_verificado)
and ftm.Id_TipoMovimiento in (9,10,11,31)

--select * from Anexos_LayoutProceso where TipoAnexo = 5
--delete from Anexos_LayoutProceso where TipoAnexo = 5

-- bajas
insert into Anexos_LayoutProceso
select  ''000000000'' Id_Operacion,
ftm.Clave +''-''+fmm.Clave AS OPERACION,
e.curp AS CURP,
pi.PlazaIEEPO AS CLAVE_PLAZA,
ttcm.id_Tabulador_SE_CM  AS NIVEL_SALARIAL,
'''' AS UR,
'''' FECHA,
'''' CCT,
'''' RFC, '''' PRIMER_APELLIDO,
'''' SEGUNDO_APELLIDO,
'''' [NOMBRE(S)],
'''' NACIONALIDAD,
'''' PAIS_NAC,
'''' ENTIDAD_NAC,
'''' MUNICIPIO_NAC,
'''' SEXO,
'''' EDO_CIVIL,
'''' CALLE_Y_NUM,
'''' CP,
'''' COLONIA,
'''' ENTIDAD,
'''' MUNICIPIO,
'''' LOCALIDAD,
'''' NIV_MAX_ESTUD,
'''' ING_GOB_FED,
'''' ING_SEP,
'''' ING_RAMA,
'''' CED_PROF,
'''' TIPO_LIC,	
'''' QUINQ_DOC,	
'''' QUINQ_ADM	,
'''' GRADO_LIC,	
'''' TITULACION,
'''' HORARIO,
ftm.Clave as MOVIMIENTO,	
ftm.Descripcion as DESC_MOVIMIENTO,	
fmm.Clave as MOTIVO,	
fmm.Descripcion as DESC_MOTIVO,
'''' as FECHA_INI, 
FECHA_FIN= Convert(varchar(10), fdd.FechaFin-1, 103),
cast('''' as varchar(300)) as CONCEPTOS_PAGO,
'''' as REGIMEN, fd.Id_Documento, e.Id_Emp, pi.Id_Plaza, 5 TipoAnexo,fid.Id_Periodo, ftm.Id_TipoMovimiento, fmm.Id_MotivoMovimiento 
from fup_documentos fd
inner join empleados e on fd.Id_Emp = e.Id_Emp
inner join fup_documento_detalle fdd on fd.Id_Documento = fdd.Id_Documento
inner join plazas p on fdd.Id_Plaza = p.Id_plaza
inner join plazaieepo pi on fdd.Id_Plaza = pi.Id_plaza
inner join (select id_plaza,MAX(fecha) fecha
from HTabulador_SE_cm htcm
group by id_plaza
) nc on pi.Id_plaza=nc.id_plaza
inner join HTabulador_SE_CM htcm on htcm.id_plaza=nc.id_plaza and htcm.fecha=nc.fecha
inner join TTabulador_SE_CM ttcm on htcm.id_rel=ttcm.id_Tabulador_SE_CM
inner join usuarios u on fd.Id_Usuario = u.Id_Usuario
inner join FUP_Informacion_Documentos fid on fd.Id_Documento = fid.Id_Documento
inner join CalenNomina c on fid.Id_Periodo = c.Id_Periodo
inner join FUP_MotivoMovimiento fmm on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
inner join tniveleducativo tn on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
inner join TNacionalidad tnac on e.Id_Nacionalidad=tnac.Id_Nacionalidad
inner join TPais tp on tnac.Id_Nacionalidad=tp.Id_Pais
left join TEstados te on e.Id_EstadoNac = te.Id_Estado
left join tciudad tc on e.Id_EstadoNac=te.Id_Estado and tc.Id_Ciudad=e.Id_MunicipioNac
left join (select id_emp,MAX(movimiento) fecha
from hdomicilio 
group by id_emp
) hdoc on e.Id_emp=hdoc.id_emp
left join HDomicilio hd on hd.id_emp=hdoc.id_emp and hdoc.fecha=hd.Movimiento
left join tcolonia tcol on hd.Id_Colonia=tcol.Id_Colonia
left join TLocalidad tloc on hd.Id_Localidad=tloc.id_Localidad
left join (select id_emp,MAX(fecha_alta_gob_fed) fecha
from HFecha_Alta_Gob_Fed group by id_emp
) hfagf on e.Id_Emp=hfagf.id_emp
left join (select id_emp,MAX(fecha_alta_sep) fecha
from HFecha_Alta_sep group by id_emp
) hfas on e.Id_Emp=hfas.id_emp
left join (select id_emp,MAX(fecha_alta_rama) fecha
from HFecha_Alta_rama group by id_emp
) hfar on e.Id_Emp=hfar.id_emp
inner join VistaTablaLongitud vt on fid.Centro_Trabajo=vt.clave
inner join RCT_Turno rt on vt.Id_Nodo=rt.id_nodo
inner join TCT_Turno tt on rt.id_rel=tt.id_CT_Turno
where fid.Id_Periodo in (
SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n)
) and e.id_cia in ( 1,2,3 ) and fd.Id_Estatus in (SELECT estatus.n.value(''.'', ''INT'') AS n FROM    @XmlEstatus.nodes(''/estatus'') AS estatus(n)) and fd.folio not in (select folio_n from HFolio_verificado)
and (ftm.Id_TipoMovimiento in (6,7) or fmm.Id_MotivoMovimiento in (25,26,32,33))


if exists(select top 1 parcial from CalenNomina c   where c.Parcial = 0 and c.id_periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n)))
begin
  insert into Anexos_LayoutProceso
  select  ''000000000'' Id_Operacion, ftm.Clave +''-''+fmm.Clave AS OPERACION, e.curp AS CURP, pi.plazaieepo AS CLAVE_PLAZA,
  ttcm.id_Tabulador_SE_CM  AS NIVEL_SALARIAL, '''' AS UR, '''' FECHA, '''' CCT, '''' RFC, '''' PRIMER_APELLIDO, '''' SEGUNDO_APELLIDO, '''' [NOMBRE(S)], '''' NACIONALIDAD, '''' PAIS_NAC, '''' ENTIDAD_NAC, '''' MUNICIPIO_NAC, '''' SEXO,'''' EDO_CIVIL,
  '''' CALLE_Y_NUM,'''' CP,'''' COLONIA,'''' ENTIDAD,'''' MUNICIPIO,'''' LOCALIDAD,'''' NIV_MAX_ESTUD,'''' ING_GOB_FED,'''' ING_SEP,'''' ING_RAMA,'''' CED_PROF,'''' TIPO_LIC,	'''' QUINQ_DOC,	'''' QUINQ_ADM	,'''' GRADO_LIC,	'''' TITULACION,
  '''' HORARIO,ftm.Clave as MOVIMIENTO,	ftm.Descripcion as DESC_MOVIMIENTO,	fmm.Clave as MOTIVO,	fmm.Descripcion as DESC_MOTIVO,'''' as FECHA_INI, FECHA_FIN= Convert(varchar(10), fdd.FechaFin-1, 103),cast('''' as varchar(300)) as CONCEPTOS_PAGO,'''' as REGIMEN, fd.Id_Documento, e.Id_Emp, pi.Id_Plaza, 5 TipoAnexo,fid.Id_Periodo, ftm.Id_TipoMovimiento, fmm.Id_MotivoMovimiento  
  from fup_documentos fd inner join empleados e on fd.Id_Emp = e.Id_Emp inner join fup_documento_detalle fdd on fd.Id_Documento = fdd.Id_Documento inner join plazas p on fdd.Id_Plaza = p.Id_plaza inner join plazaieepo pi on fdd.Id_Plaza = pi.Id_plaza
  inner join (select id_plaza,MAX(fecha) fecha from HTabulador_SE_cm htcm group by id_plaza ) nc on pi.Id_plaza=nc.id_plaza inner join HTabulador_SE_CM htcm on htcm.id_plaza=nc.id_plaza and htcm.fecha=nc.fecha inner join TTabulador_SE_CM ttcm on htcm.id_rel=ttcm.id_Tabulador_SE_CM
  inner join usuarios u on fd.Id_Usuario = u.Id_Usuario inner join FUP_Informacion_Documentos fid on fd.Id_Documento = fid.Id_Documento inner join CalenNomina c on fid.Id_Periodo = c.Id_Periodo inner join FUP_MotivoMovimiento fmm on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
  inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento inner join tniveleducativo tn on fid.Id_Nivel_Educativo=tn.id_NivelEducativo inner join TNacionalidad tnac on e.Id_Nacionalidad=tnac.Id_Nacionalidad inner join TPais tp on tnac.Id_Nacionalidad=tp.Id_Pais
  left join TEstados te on e.Id_EstadoNac = te.Id_Estado left join tciudad tc on e.Id_EstadoNac=te.Id_Estado and tc.Id_Ciudad=e.Id_MunicipioNac left join (select id_emp,MAX(movimiento) fecha from hdomicilio  group by id_emp ) hdoc on e.Id_emp=hdoc.id_emp
  left join HDomicilio hd on hd.id_emp=hdoc.id_emp and hdoc.fecha=hd.Movimiento left join tcolonia tcol on hd.Id_Colonia=tcol.Id_Colonia left join TLocalidad tloc on hd.Id_Localidad=tloc.id_Localidad left join (select id_emp,MAX(fecha_alta_gob_fed) fecha
  from HFecha_Alta_Gob_Fed group by id_emp ) hfagf on e.Id_Emp=hfagf.id_emp left join (select id_emp,MAX(fecha_alta_sep) fecha from HFecha_Alta_sep group by id_emp ) hfas on e.Id_Emp=hfas.id_emp left join (select id_emp,MAX(fecha_alta_rama) fecha
  from HFecha_Alta_rama group by id_emp ) hfar on e.Id_Emp=hfar.id_emp inner join VistaTablaLongitud vt on fid.Centro_Trabajo=vt.clave inner join RCT_Turno rt on vt.Id_Nodo=rt.id_nodo inner join TCT_Turno tt on rt.id_rel=tt.id_CT_Turno
  where e.id_cia in ( 1,2,3 ) and fd.Id_Estatus in (SELECT estatus.n.value(''.'', ''INT'') AS n FROM    @XmlEstatus.nodes(''/estatus'') AS estatus(n)) and fd.folio not in (select folio_n from HFolio_verificado) 
  and (ftm.Id_TipoMovimiento in (6,7) or fmm.Id_MotivoMovimiento in (25,26,32,33))
  and fid.Id_Periodo not in (
  select id_periodo from calennomina where año = (select max(año) from calennomina where id_periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))) and 
  numero = (select max(numero) from calennomina where id_periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))) and ( parcial between 20 and 39 or parcial = 0)
  )
  and fdd.FechaFin-1 = dbo.anioquincenatofecha(dbo.fechatoanioquincena((select max(fechaini) fecha from calennomina where id_periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n)))),0)-1
  and fid.id_periodo in (select id_periodo from CalenNomina where FechaIni <= dbo.anioquincenatofecha(dbo.fechatoanioquincena((select max(fechaini) fecha from calennomina where id_periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n)))),0))
end



-- reanudaciones
insert into Anexos_LayoutProceso
select  ''000000000'' Id_Operacion,
OPERACION= ftm.clave+''-''+fmm.clave,
e.curp AS CURP,
pi.PlazaIEEPO AS CLAVE_PLAZA,
ttcm.id_Tabulador_SE_CM  AS NIVEL_SALARIAL,
'''' AS UR,
'''' FECHA,
'''' CCT,
'''' RFC, '''' PRIMER_APELLIDO,
'''' SEGUNDO_APELLIDO,
'''' [NOMBRE(S)],
'''' NACIONALIDAD,
'''' PAIS_NAC,
'''' ENTIDAD_NAC,
'''' MUNICIPIO_NAC,
'''' SEXO,
'''' EDO_CIVIL,
'''' CALLE_Y_NUM,
'''' CP,
'''' COLONIA,
'''' ENTIDAD,
'''' MUNICIPIO,
'''' LOCALIDAD,
'''' NIV_MAX_ESTUD,
'''' ING_GOB_FED,
'''' ING_SEP,
'''' ING_RAMA,
'''' CED_PROF,
'''' TIPO_LIC,	
'''' QUINQ_DOC,	
'''' QUINQ_ADM	,
'''' GRADO_LIC,	
'''' TITULACION,
'''' HORARIO,
ftm.Clave as MOVIMIENTO,	
ftm.Descripcion as DESC_MOVIMIENTO,	
fmm.Clave as MOTIVO,	
fmm.Descripcion as DESC_MOTIVO,
Convert(varchar(10), fdd.Fechaini, 103) as FECHA_INI, 
FECHA_FIN= case when dbo.fechaToAnioQuincena(fdd.fechaini)=dbo.fechaToAnioQuincena(fdd.fechafin) then Convert(varchar(10), dbo.anioQuincenaToFecha(''999924'',1), 103)  else Convert(varchar(10), fdd.FechaFin, 103) end,
cast('''' as varchar(300)) as CONCEPTOS_PAGO,
'''' as REGIMEN, fd.Id_Documento, e.Id_Emp, pi.Id_Plaza, 6 TipoAnexo,fid.Id_Periodo, ftm.Id_TipoMovimiento, fmm.Id_MotivoMovimiento  
from fup_documentos fd
inner join empleados e on fd.Id_Emp = e.Id_Emp
inner join fup_documento_detalle fdd on fd.Id_Documento = fdd.Id_Documento
inner join plazas p on fdd.Id_Plaza = p.Id_plaza
inner join plazaieepo pi on fdd.Id_Plaza = pi.Id_plaza
inner join (select id_plaza,MAX(fecha) fecha
from HTabulador_SE_cm htcm
group by id_plaza
) nc on pi.Id_plaza=nc.id_plaza
inner join HTabulador_SE_CM htcm on htcm.id_plaza=nc.id_plaza and htcm.fecha=nc.fecha
inner join TTabulador_SE_CM ttcm on htcm.id_rel=ttcm.id_Tabulador_SE_CM
inner join usuarios u on fd.Id_Usuario = u.Id_Usuario
inner join FUP_Informacion_Documentos fid on fd.Id_Documento = fid.Id_Documento
inner join CalenNomina c on fid.Id_Periodo = c.Id_Periodo
inner join FUP_MotivoMovimiento fmm on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
inner join tniveleducativo tn on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
inner join TNacionalidad tnac on e.Id_Nacionalidad=tnac.Id_Nacionalidad
inner join TPais tp on tnac.Id_Nacionalidad=tp.Id_Pais
left join TEstados te on e.Id_EstadoNac = te.Id_Estado
left join tciudad tc on e.Id_EstadoNac=te.Id_Estado and tc.Id_Ciudad=e.Id_MunicipioNac
left join (select id_emp,MAX(movimiento) fecha
from hdomicilio 
group by id_emp
) hdoc on e.Id_emp=hdoc.id_emp
left join HDomicilio hd on hd.id_emp=hdoc.id_emp and hdoc.fecha=hd.Movimiento
left join tcolonia tcol on hd.Id_Colonia=tcol.Id_Colonia
left join TLocalidad tloc on hd.Id_Localidad=tloc.id_Localidad
left join (select id_emp,MAX(fecha_alta_gob_fed) fecha
from HFecha_Alta_Gob_Fed group by id_emp
) hfagf on e.Id_Emp=hfagf.id_emp
left join (select id_emp,MAX(fecha_alta_sep) fecha
from HFecha_Alta_sep group by id_emp
) hfas on e.Id_Emp=hfas.id_emp
left join (select id_emp,MAX(fecha_alta_rama) fecha
from HFecha_Alta_rama group by id_emp
) hfar on e.Id_Emp=hfar.id_emp
inner join VistaTablaLongitud vt on fid.Centro_Trabajo=vt.clave
inner join RCT_Turno rt on vt.Id_Nodo=rt.id_nodo
inner join TCT_Turno tt on rt.id_rel=tt.id_CT_Turno
--inner join Recalculo_Calculo rc on fdd.Id_Detalle=rc.Id_Detalle
where fid.Id_Periodo in (
SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n)
) and e.id_cia in ( 1,2,3 ) and fd.Id_Estatus in (SELECT estatus.n.value(''.'', ''INT'') AS n FROM    @XmlEstatus.nodes(''/estatus'') AS estatus(n)) and fd.folio not in (select folio_n from HFolio_verificado)
and ftm.Id_TipoMovimiento in (12,13)

--select a.id_emp, a.id_plaza, max(b.quincena) quincena 
--into #ultimoPagoBajas
--from Anexos_LayoutProceso a 
--inner join view_fup_pagos b on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
--where a.tipoanexo = 5
--group by a.id_emp, a.id_plaza

--update a set a.fecha_fin = convert(varchar(10),dbo.anioquincenatofecha(b.quincena,1),103)
--from Anexos_LayoutProceso a 
--inner join #ultimoPagoBajas b on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
--where a.tipoanexo = 5
--and b.quincena > dbo.fechatoanioquincena(convert( datetime , a.fecha_fin,103 ))

update a set a.regimen = b.clave
from Anexos_LayoutProceso a
inner join Anexos_RegimenISSSTE b on b.rfc = left(a.rfc, 10)
where b.regimen <> ''''


select h.id_emp, h.id_plaza,e.CURP, pi.PlazaIEEPO, case when h.id_concepto in (1518,1328) then h.C_costo else c.resultado end concepto
into #conceptosQuinquenios
from (
  select Id_Emp,Id_Periodo,id_concepto,Consecutivo,Horas,Pesos,Id_categ,Fecha,PesosExcento,C_costo,id_plaza,Id_Referencia,id_periodoPago,
  Id_ProcesoNomina,Desde,Hasta
  from HistPagos
  union all
  select Id_Emp,Id_Periodo,id_concepto,Consecutivo,Horas,Pesos,0 Id_categ,Fecha,PesosExcento,cc,id_plaza,Id_Referencia,id_periodoPago,
  Id_ProcesoNomina,Desde,Hasta
  from nom_HistPagos
) h 
inner join conceptos c on c.id_concepto = h.id_concepto
inner join empleados e on e.Id_Emp = h.Id_Emp
inner join plazaieepo pi on pi.Id_plaza = h.id_plaza
where h.id_periodo in (select id_periodo from calennomina where año = (select max(año) from calennomina where id_periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n)))  
and Numero = (select max(numero) from calennomina where id_periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))) and procesado = 1)
and h.id_concepto in (1323,4006,1324,4007,1325,4008,1326,4009,1327,4010,1400,1401,1402,1403,1404,1518,1328)
group by h.id_emp, h.id_plaza, h.id_concepto, c.resultado,h.C_costo,e.CURP, pi.PlazaIEEPO


update a set a.quinq_doc = case when a.clave_plaza like ''%E%'' then b.concepto else '''' end, a.quinq_adm = case when a.clave_plaza not like ''%E%'' then b.concepto else '''' end
from Anexos_LayoutProceso a
inner join #conceptosQuinquenios b on b.CURP = a.curp and b.plazaieepo = a.clave_plaza
where a.tipoanexo in (1,2)


--update a set a.operacion = b.operacion, a.movimiento = left(b.operacion,2), a.motivo = right(b.operacion,2) 
--from Anexos_LayoutProceso a
--inner join Anexos_CompatibilidadOperacion b on a.operacion = b.tipo+''-''+b.motivo and a.DESC_MOVIMIENTO = b.desctipo 
--and a.DESC_MOTIVO = b.descmotivo

update a set a.operacion = b.operacion, a.movimiento = left(b.operacion,2), a.motivo = right(b.operacion,2),
a.DESC_MOVIMIENTO = b.desctipo, a.DESC_MOTIVO = b.descmotivo
from Anexos_LayoutProceso a
inner join Anexos_CompatibilidadOperacion b on a.Id_TipoMovimiento = b.Id_TipoMovimiento and a.Id_MotivoMovimiento = b.Id_MotivoMovimiento


--declare @numero varchar(10) = ''1000''

select right(''0000000000''+cast(row_number() OVER (ORDER BY tipoanexo,operacion, rfc,	CLAVE_PLAZA) + @numero -1 as varchar),9) as ID_OPERACION,
id, tipoanexo,operacion
into #numeroIdOpercacion
from Anexos_LayoutProceso

update a set a.id_operacion = b.id_operacion
from Anexos_LayoutProceso a
inner join #numeroIdOpercacion b on a.id = b.id

update Anexos_LayoutProceso set entidad_nac = '''' where entidad_nac = ''00'' and tipoanexo in (1,2,3)

update Anexos_LayoutProceso set municipio_nac = '''' where (municipio_nac = ''000'' or municipio_nac > 570) and tipoanexo in (1,2,3)

update Anexos_LayoutProceso set cp = '''' where tipoanexo in (1,2,3) and cp = 0

update Anexos_LayoutProceso set clave_plaza = replace(case when clave_plaza like ''14%'' or clave_plaza like ''15%'' then ''07''+substring(clave_plaza,3, len(clave_plaza)) else clave_plaza end,'' '','''')

select ''altas''+'';''+''bajas''+'';''+''licenciasnormales''+'';''+''licenciascubren''+'';''+''reanudas''

end

if @tipo = 2
begin

  if @siresponsabilidad = 0 
  begin
  
    select h.id_periodo,h.id_referencia, h.id_emp, h.id_plaza,''R20'' UR,''O'' TIPO_NOMINA, replace(ltrim(rtrim(e.ApPaterno)),''.'', '''') PRIMER_APELLIDO, replace(ltrim(rtrim(e.apmaterno)),''.'', '''') SEGUNDO_APELLIDO, replace(ltrim(rtrim(e.nombre)), ''.'', '''') [NOMBRE(S)], pi.PlazaIEEPO, e.CURP, e.RFC, case when len(e.Cuenta_Tarjeta) >= 18 then  concat(''40'',substring(e.Cuenta_Tarjeta,1,3)) else '''' end CVE_BANCO,
    case when len(e.Cuenta_Tarjeta) >= 18 then e.Cuenta_Tarjeta else '''' end CLABE, case when e.id_cod = 2 then 1 else 2 end FORMA_PAGO
    into #Layotempprimera
    from (
      select Id_Emp,case when @agrupa = 1 then 0 else id_periodo end Id_Periodo,id_concepto,Consecutivo,Horas,Pesos,Id_categ,Fecha,PesosExcento,C_costo,id_plaza,
      case when @agrupa = 1 then 0 else Id_Referencia end Id_Referencia, id_periodoPago,
      Id_ProcesoNomina,Desde,Hasta
      from HistPagos where Id_Periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))
      union all
      select Id_Emp,case when @agrupa = 1 then 0 else id_periodo end Id_Periodo,id_concepto,Consecutivo,Horas,Pesos,0 Id_categ,Fecha,PesosExcento,cc,id_plaza,
      case when @agrupa = 1 then 0 else Id_Referencia end Id_Referencia,id_periodoPago,
      Id_ProcesoNomina,Desde,Hasta
      from nom_HistPagos where Id_Periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))
    ) h
    inner join PlazaIEEPO pi  on pi.Id_plaza = h.id_plaza
    inner join empleados e on h.Id_Emp = e.Id_Emp
    where --h.Id_Periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n)) and 
    h.id_concepto in (select id_concepto from conceptos where tipo in (1,2))
     and exists ( select 1 from hplazas_concifed_230217 pc where pc.CODIGO_PLAZA = replace(case when pi.plazaieepo like ''14%'' or pi.plazaieepo like ''15%'' then ''07''+substring(pi.plazaieepo,3, len(pi.plazaieepo)) else pi.plazaieepo end,'' '','''') ) -- and pc.ESTATUS <> ''C''--replace(pi.plazaieepo, '' '','''') in (select CODIGO_PLAZA from hplazas_concifed where ESTATUS <> ''C'')
    group by h.id_periodo,h.id_referencia, h.id_emp, h.id_plaza, e.ApPaterno, e.ApMaterno, e.Nombre, pi.PlazaIEEPO, e.CURP, e.RFC, e.Cuenta_Invernomina, e.Id_Banco
    ,e.id_cod, e.Cuenta_Tarjeta
    
 
  
    select a.*, isnull(b.nss, '''') nss
    into #Layotempsegunda
    from #Layotempprimera a left join (
      select a.* from HNSS a inner join (
      select id_emp, max(fecha) fecha from HNSS where fecha <= (select max(fechaini) fechaini from calennomina where id_periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n)) ) group by id_emp
      ) b on a.id_emp = b.id_emp and a.fecha = b.fecha
    ) b on a.id_emp = b.id_emp
    

    select top 0 n.*, right(''00''+CAST(c.numero as varchar) +''/''+ cast(c.año as varchar),7) PERIODO,convert(varchar, c.fechapago, 103) FECHA_PAGO
    into #LayoTemptres
    from #Layotempsegunda n 
    inner join calennomina c on c.id_periodo = 0
    
    CREATE NONCLUSTERED INDEX idxLayoTemptres1 ON #LayoTemptres (id_periodo) INCLUDE (id_emp,id_plaza)
    
    CREATE NONCLUSTERED INDEX idxLayoTemptres2 ON #LayoTemptres ([id_periodo],[id_emp],[id_plaza]) INCLUDE ([UR],[TIPO_NOMINA],[PRIMER_APELLIDO],[SEGUNDO_APELLIDO],[NOMBRE(S)],[PlazaIEEPO],[CURP],[RFC],[CVE_BANCO],[CLABE],[FORMA_PAGO],[nss],[PERIODO],[FECHA_PAGO])


    if @agrupa = 1
    begin
      select 0 id_periodo,0 Id_Referencia, max(right(''00''+CAST(numero as varchar) +''/''+ cast(año as varchar),7)) PERIODO,max(convert(varchar, fechapago, 103)) FECHA_PAGO
      into #periodoFechapago
      from calennomina 
      where Id_Periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))
    
      insert into #LayoTemptres
      select n.*, PERIODO,FECHA_PAGO
      from #Layotempsegunda n 
      inner join #periodoFechapago c on c.id_periodo = n.id_periodo and c.Id_Referencia = n.id_referencia
      
      
    end
    else
    begin
      insert into #LayoTemptres
      select n.*, right(''00''+CAST(c.numero as varchar) +''/''+ cast(c.año as varchar),7) PERIODO,convert(varchar, c.fechapago, 103) FECHA_PAGO
      from #Layotempsegunda n 
      inner join calennomina c on c.id_periodo = n.id_periodo
      
    end

    create table #layoperiodos ( id_periodo int, id_referencia int,	id_procesonomina int,	id_emp int,	id_plaza int,	periodo int,	qna varchar(6))

    if @agrupa = 1
    begin
    
     select 0 id_periodo, max(dbo.fechaToAnioQuincena(fechaini)) qna
      into #qnaCalePeriodo
      from calennomina 
      where Id_Periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))
      
      insert into #layoperiodos
      select p.id_periodo, p.id_referencia,0	id_procesonomina, p.id_emp, p.id_plaza, case when p.id_periodopago = 0 then p.id_periodo else p.id_periodopago end periodo, dbo.fechatoanioquincena(c.fechaini) qna 
      from (
        select Id_Emp,case when @agrupa = 1 then 0 else Id_Periodo end Id_Periodo, id_concepto,Fecha,PesosExcento,id_plaza,
        case when @agrupa = 1 then 0 else Id_Referencia end Id_Referencia,case when id_periodoPago = 0 then id_periodo else id_periodoPago end id_periodoPago,Desde,Hasta
        from HistPagos where id_periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))
        union all
        select Id_Emp,case when @agrupa = 1 then 0 else Id_Periodo end Id_Periodo,id_concepto,Fecha,PesosExcento,id_plaza,
        case when @agrupa = 1 then 0 else Id_Referencia end Id_Referencia,case when id_periodoPago = 0 then id_periodo else id_periodoPago end id_periodoPago,Desde,Hasta
        from nom_HistPagos where id_periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))
      ) p 
      inner join calennomina c on c.id_periodo = p.id_periodopago 
      where p.id_concepto in (select id_concepto from conceptos where tipo in (1,2))
      group by p.id_periodo, p.id_referencia, p.id_emp, p.id_plaza, p.id_periodopago,c.fechaini 
    
    end
    else
    begin
      insert into #layoperiodos
      select p.id_periodo, p.id_referencia,p.id_procesonomina, p.id_emp, p.id_plaza, case when p.id_periodopago = 0 then p.id_periodo else p.id_periodopago end periodo, dbo.fechatoanioquincena(c.fechaini) qna 
      from (
        select Id_Emp,Id_Periodo,id_concepto,Consecutivo,Horas,Pesos,Id_categ,Fecha,PesosExcento,C_costo,id_plaza,Id_Referencia,id_periodoPago,
        Id_ProcesoNomina,Desde,Hasta
        from HistPagos
        union all
        select Id_Emp,Id_Periodo,id_concepto,Consecutivo,Horas,Pesos,0 Id_categ,Fecha,PesosExcento,cc,id_plaza,Id_Referencia,id_periodoPago,
        Id_ProcesoNomina,Desde,Hasta
        from nom_HistPagos
      ) p 
      inner join calennomina c on c.id_periodo = case when p.id_periodopago = 0 then p.id_periodo else p.id_periodopago end 
      where p.id_concepto in (select id_concepto from conceptos where tipo in (1,2)) and p.Id_Periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))
      group by p.id_periodo, p.id_referencia, p.id_emp, p.id_plaza, p.id_periodopago,c.fechaini,p.id_procesonomina 
      
    end


    select id_periodo, id_referencia,id_procesonomina,id_emp,id_plaza, min(qna) desde, max(qna) hasta 
    into #layoperiodos2
    from #layoperiodos group by id_periodo, id_referencia,id_emp,id_plaza,id_procesonomina


    select a.*, 
    convert(varchar, dbo.anioquincenatofecha(case when right(b.desde,2) = ''99'' then left(b.desde,4)+''24'' else b.desde end, 0), 103) FECHA_INICIO,
    convert(varchar,  dbo.anioquincenatofecha(case when right(b.hasta,2) = ''99'' then left(b.hasta,4)+''24'' else b.hasta end, 1), 103) FECHA_TERMINO
    into #LayoTempcuatro
    from #LayoTemptres a
    inner join #layoperiodos2 b on a.id_periodo = b.id_periodo and a.id_emp = b.id_emp and a.id_plaza = b.id_plaza and a.id_referencia = b.id_referencia

    
    select a.*,  m.nivel NIVEL_CM
    into #LayoTempcinco
    from #LayoTempcuatro a inner join ( 
    select a.id_plaza, t.nivel from HTabulador_SE_CM a 
    inner join ( 
    select id_plaza, max(fecha) fecha from HTabulador_SE_CM where fecha <= (select max(fechaini) from calennomina where Id_Periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))) 
    group by id_plaza ) b on a.id_plaza = b.id_plaza and a.fecha = b.fecha 
    inner join TTabulador_SE_CM t on t.id_tabulador_se_cm = a.id_rel ) m on a.id_plaza = m.id_plaza


    select a.*,b.clave ct, b.id_nodo, b.udp 
    into #LayoTempseis
    from #LayoTempcinco a inner join (
    Select c.id_plaza,c.id_nodo,e.udp, v.Clave from 
    ( plazaempleados c inner join (Select id_plaza,max(fecha) as maximo from plazaempleados where fecha <= (select max(fechafin) from calennomina where id_periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n)))
    group by id_plaza ) d on c.id_plaza = d.id_plaza and c.fecha = d.maximo )  inner join TablaLongitudProp_28 e on e.id_nodo = c.id_nodo inner join VistaTablaLongitud v on v.id_nodo = c.id_nodo
    ) b on b.id_plaza = a.id_plaza


    select top 0 Id_Emp, Id_Periodo,id_concepto,Consecutivo,Horas,Pesos,Id_categ,Fecha,PesosExcento,C_costo,id_plaza,Id_Referencia,id_periodoPago,
    Id_ProcesoNomina,Desde,Hasta into #PeriodoPagos
    from HistPagos

    CREATE NONCLUSTERED INDEX idxPeriodoPagos1 ON #PeriodoPagos ([id_concepto])

    if @agrupa = 1  
    begin
      insert into #PeriodoPagos
      select * from (
        select Id_Emp,case when @agrupa = 1 then 0 else Id_Periodo end Id_Periodo,id_concepto,Consecutivo,Horas,Pesos,Id_categ,Fecha,PesosExcento,C_costo,id_plaza,
        case when @agrupa = 1 then 0 else Id_Referencia end Id_Referencia,id_periodoPago,
        Id_ProcesoNomina,Desde,Hasta
        from HistPagos where Id_Periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))
        union all
        select Id_Emp, case when @agrupa = 1 then 0 else Id_Periodo end Id_Periodo,id_concepto,Consecutivo,Horas,Pesos,0 Id_categ,Fecha,PesosExcento,cc,id_plaza,
        case when @agrupa = 1 then 0 else Id_Referencia end Id_Referencia,id_periodoPago,
        Id_ProcesoNomina,Desde,Hasta
        from nom_HistPagos where Id_Periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))
      ) h
          
      delete from #PeriodoPagos where id_concepto in (2601,4214)

      select h.id_periodo,h.Id_Referencia, h.id_emp, h.id_plaza, round(sum( case when c.tipo = 1 then h.pesos else 0 end ),2) percepciones,
      round(sum( case when c.tipo = 2 then h.pesos else 0 end ),2) deducciones,
      round(sum( case when c.tipo = 1 then h.pesos else 0 end ) - sum( case when c.tipo = 2 then h.pesos else 0 end ),2) NetoReal
      into #netospara26
      from #PeriodoPagos h
      inner join conceptos c on c.id_concepto = h.id_concepto
      where --h.Id_Periodo in (select id_periodo from calennomina where id_cia in (2,3) and id_periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))) and 
      h.id_concepto in (select id_concepto from conceptos where tipo in (1,2))
      group by h.id_periodo,h.Id_Referencia,h.id_emp, h.id_plaza
     
      
      select *, cast(netoreal as int) truncado, netoreal - cast(netoreal as int) cp26 into #cpto26insertar from #netospara26

      CREATE NONCLUSTERED INDEX idxcpto26insertar1 ON #cpto26insertar ([id_emp]) INCLUDE ([id_periodo],[id_plaza],[cp26])

      insert into #PeriodoPagos (Id_Emp,Id_Periodo,id_concepto,Consecutivo,Horas,Pesos,Id_categ,Fecha,PesosExcento,C_costo,id_plaza,Id_Referencia,
      id_periodoPago,Id_ProcesoNomina,Desde,Hasta)
      select a.id_emp, a.id_periodo,2601 id_concepto, 0, 0, cp26, 0,getdate(), 0,'''',id_plaza,a.id_referencia,0,0,qna,qna 
      from #cpto26insertar a inner join #qnaCalePeriodo b on b.id_periodo = a.id_periodo
      where round(a.cp26,2) <> 0 and a.id_emp in (select id_emp from empleados where id_cia = 2)

      insert into #PeriodoPagos (Id_Emp,Id_Periodo,id_concepto,Consecutivo,Horas,Pesos,Id_categ,Fecha,PesosExcento,C_costo,id_plaza,Id_Referencia,
      id_periodoPago,Id_ProcesoNomina,Desde,Hasta)
      select a.id_emp, a.id_periodo,4214 id_concepto, 0, 0, cp26, 0,getdate(), 0,'''',id_plaza,a.id_referencia,0,0,qna,qna 
      from #cpto26insertar a inner join #qnaCalePeriodo b on b.id_periodo = a.id_periodo
      where round(a.cp26,2) <> 0 and a.id_emp in (select id_emp from empleados where id_cia = 3)

    end
    else
    begin
      insert into #PeriodoPagos
      select * from (
        select Id_Emp, Id_Periodo,id_concepto,Consecutivo,Horas,Pesos,Id_categ,Fecha,PesosExcento,C_costo,id_plaza,Id_Referencia,id_periodoPago,
        Id_ProcesoNomina,Desde,Hasta
        from HistPagos where Id_Periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))
        union all
        select Id_Emp, Id_Periodo,id_concepto,Consecutivo,Horas,Pesos,0 Id_categ,Fecha,PesosExcento,cc,id_plaza,Id_Referencia,id_periodoPago,
        Id_ProcesoNomina,Desde,Hasta
        from nom_HistPagos where Id_Periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))
      ) h
    end

    select a.*, b.percepciones, b.deducciones, b.neto 
    into #LayoTempsiete
    from #LayoTempseis a inner join (
      select h.id_periodo,h.id_referencia, h.id_emp, h.id_plaza, round(sum( case when c.tipo = 1 then h.pesos else 0 end ),2) percepciones,
      round(sum( case when c.tipo = 2 then h.pesos else 0 end ),2) deducciones,
      round(sum( case when c.tipo = 1 then h.pesos else 0 end ) - sum( case when c.tipo = 2 then h.pesos else 0 end ),2) Neto
      from (
        select Id_Emp,case when @agrupa = 1 then 0 else id_periodo end Id_Periodo,id_concepto,Consecutivo,Horas,Pesos,Id_categ,Fecha,PesosExcento,C_costo,id_plaza,
        case when @agrupa = 1 then 0 else Id_Referencia end Id_Referencia,id_periodoPago,
        Id_ProcesoNomina,Desde,Hasta
        from #PeriodoPagos 
      ) h
      inner join conceptos c on c.id_concepto = h.id_concepto
      where h.id_concepto in (select id_concepto from conceptos where tipo in (1,2))
      group by h.id_periodo, h.id_emp, h.id_plaza, h.id_referencia
    ) b on a.id_periodo = b.id_periodo and a.id_emp = b.id_emp and a.id_plaza = b.id_plaza and a.id_referencia = b.id_referencia
  

    select a.*, isnull(s.sede,'''') sede, isnull(s.mun,'''') mun, isnull(ss.SECCION,'''') seccion 
    into #LayoTempocho
    from #LayoTempsiete a
    left join (select max(sede) sede, mun, ct from layo_cts_sede group by mun, ct ) s on s.ct = a.ct
    left join Hseccion_sr20 ss on ss.id_emp = a.id_emp and ss.id_plaza = a.id_plaza


    select right(''000000000''+CAST (ROW_NUMBER() OVER (ORDER BY sede, mun,rfc ) + (cast(@numero as bigint)) -1 AS VARCHAR(20)),9) as NO_COMPROBANTE, *
    into #LayoTempnueve
    from #LayoTempocho


    delete from LayoutNomina_NoComprobantes
   
    insert into LayoutNomina_NoComprobantes (id_periodo, id_emp, id_plaza, NO_COMPROBANTE,PERIODO,CLAVE_PLAZA,CURP,RFC,Id_Referencia)
    select distinct id_periodo, id_emp, id_plaza,NO_COMPROBANTE,PERIODO,plazaieepo CLAVE_PLAZA,CURP,RFC,Id_Referencia from #LayoTempnueve  
  
    declare @pagoTut int = (  select isnull(max(id_periodo),0) from calennomina where Id_Periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n)) and leyenda2 = ''PAT'')
    if @pagoTut > 0
    begin
    
      update a set a.fecha_inicio = convert(varchar,dbo.anioquincenatofecha(x.desde,0),103), fecha_termino = convert(varchar,dbo.anioquincenatofecha(x.hasta,1),103)
      from #LayoTempnueve a
      inner join excepciones x on x.id_periodo = a.id_periodo and x.id_emp = a.id_emp and x.id_plaza = a.id_plaza and a.id_referencia = x.Id_Referencia
      where x.id_clave in (291)
   
    end 
 

  declare @aguinaldo int =  (select isnull(max(id_periodo),0) from calennomina where id_periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n)) and Id_ClasifNomina = 55)

  if @aguinaldo > 0
  begin
  
    alter table #LayoTempnueve add Dias_Aguinaldo float, Faltas_Aguinaldo float
  
    update a set a.fecha_inicio = convert(varchar,dbo.anioquincenatofecha(x.desde,0),103), fecha_termino = convert(varchar,dbo.anioquincenatofecha(x.hasta,1),103), dias_aguinaldo = cantidad
    from #LayoTempnueve a
    inner join Excepciones x on x.id_periodo = a.id_periodo and x.id_emp = a.id_emp and x.id_plaza = a.id_plaza
    where x.id_clave in (1790,1519)
    
    update a set a.faltas_aguinaldo = x.cantidad
    from #LayoTempnueve a
    inner join (select id_periodo, id_emp, id_plaza, id_clave, sum(cantidad) cantidad 
    from Excepciones x group by id_periodo, id_emp, id_plaza, id_clave) x on x.id_periodo = a.id_periodo and x.id_emp = a.id_emp and x.id_plaza = a.id_plaza
    where x.id_clave in (1793,4209)
    
    update #LayoTempnueve set Faltas_Aguinaldo = 0 where Faltas_Aguinaldo is null
  
     declare @tabla3 varchar(50) = ''Anexo_V_''
    set @tabla3 = @tabla3 +''''+convert(varchar,getdate(),112)+''''+replace(convert(varchar,getdate(),114),'':'','''')
    declare @query3 nvarchar(2000) = ''select NO_COMPROBANTE,	UR,	PERIODO,	TIPO_NOMINA,	
    case when PRIMER_APELLIDO = '''''''' then SEGUNDO_APELLIDO else PRIMER_APELLIDO end PRIMER_APELLIDO,
    case when PRIMER_APELLIDO = '''''''' then '''''''' else SEGUNDO_APELLIDO end SEGUNDO_APELLIDO,	[NOMBRE(S)],replace(case when plazaieepo like ''''14%'''' or plazaieepo like ''''15%'''' then ''''07''''+substring(plazaieepo,3, len(plazaieepo)) else plazaieepo end,'''' '''','''''''')	CLAVE_PLAZA ,case when len(rtrim(curp)) < 18 then left(rtrim(rfc)+''''11111111'''',18) else curp end	CURP,	RFC,	FECHA_PAGO,	FECHA_INICIO,	FECHA_TERMINO,	
    PERCEPCIONES,	DEDUCCIONES,	NETO,NSS, ct	CCT,	FORMA_PAGO,	
    case when FORMA_PAGO = 1 then CVE_BANCO else '''''''' end CVE_BANCO,	
    case when FORMA_PAGO = 1 then CLABE else '''''''' end CLABE
    ,case when plazaieepo like ''''%E0%'''' or plazaieepo like ''''%E1%'''' or plazaieepo like ''''%E2%'''' or plazaieepo like ''''%E3%'''' then NIVEL_CM else  '''''''' end	NIVEL_CM, SEDE,	MUN,	SECCION , '''''''' DOMINGOS_TRABAJADOS , '''''''' DIAS_HORAS_EXTRA, '''''''' TIPO_HORAS_EXTRA, '''''''' SEMANAS_HORAS_EXTRA, '''''''' HORAS_EXTRAS, DIAS_AGUINALDO, FALTAS_AGUINALDO
    into '' + @tabla3+ '' from #LayoTempnueve''
    exec sp_executesql @query3
    select @tabla3 tabla
  end
  else
  begin
    declare @tabla1 varchar(50) = ''Anexo_V_''
    set @tabla1 = @tabla1 +''''+convert(varchar,getdate(),112)+''''+replace(convert(varchar,getdate(),114),'':'','''')
    declare @query1 nvarchar(2000) = ''select NO_COMPROBANTE,	UR,	PERIODO,	TIPO_NOMINA,	
    case when PRIMER_APELLIDO = '''''''' then SEGUNDO_APELLIDO else PRIMER_APELLIDO end PRIMER_APELLIDO,
    case when PRIMER_APELLIDO = '''''''' then '''''''' else SEGUNDO_APELLIDO end SEGUNDO_APELLIDO,	[NOMBRE(S)],replace(case when plazaieepo like ''''14%'''' or plazaieepo like ''''15%'''' then ''''07''''+substring(plazaieepo,3, len(plazaieepo)) else plazaieepo end,'''' '''','''''''')	CLAVE_PLAZA ,case when len(rtrim(curp)) < 18 then left(rtrim(rfc)+''''11111111'''',18) else curp end	CURP,	RFC,	FECHA_PAGO,	FECHA_INICIO,	FECHA_TERMINO,	
    PERCEPCIONES,	DEDUCCIONES,	NETO,NSS, ct	CCT,	FORMA_PAGO,	
    case when FORMA_PAGO = 1 then CVE_BANCO else '''''''' end CVE_BANCO,	
    case when FORMA_PAGO = 1 then CLABE else '''''''' end CLABE
    ,case when plazaieepo like ''''%E0%'''' or plazaieepo like ''''%E1%'''' or plazaieepo like ''''%E2%'''' or plazaieepo like ''''%E3%'''' then NIVEL_CM else  '''''''' end	NIVEL_CM, SEDE,	MUN,	SECCION , '''''''' DOMINGOS_TRABAJADOS , '''''''' DIAS_HORAS_EXTRA, '''''''' TIPO_HORAS_EXTRA, '''''''' SEMANAS_HORAS_EXTRA, '''''''' HORAS_EXTRAS
    into '' + @tabla1+ '' from #LayoTempnueve''
    exec sp_executesql @query1
    select @tabla1 tabla
  end
  

  
  end
  else
  begin
  
    select top 0 Id_Emp, Id_Periodo,id_concepto,Consecutivo,Horas,Pesos,Id_categ,Fecha,PesosExcento,C_costo,id_plaza,Id_Referencia,id_periodoPago,
    Id_ProcesoNomina,Desde,Hasta into #PeriodoPagos2
    from HistPagos
  
    --CREATE NONCLUSTERED INDEX idxPeriodoPagos21 ON #PeriodoPagos2 ([id_concepto])
  
    if @agrupa = 1  
    begin

      select 0 id_periodo,0 id_referencia, max(dbo.fechaToAnioQuincena(fechaini)) qna
      into #qnaCalePeriodo2
      from calennomina 
      where Id_Periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))
       
      insert into #PeriodoPagos2
      select * from (
        select Id_Emp,case when @agrupa = 1 then 0 else Id_Periodo end Id_Periodo,id_concepto,Consecutivo,Horas,Pesos,Id_categ,Fecha,PesosExcento,C_costo,id_plaza,
        case when @agrupa = 1 then 0 else Id_Referencia end Id_Referencia,id_periodoPago,
        Id_ProcesoNomina,Desde,Hasta
        from HistPagos where Id_Periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))
        union all
        select Id_Emp, case when @agrupa = 1 then 0 else Id_Periodo end Id_Periodo,id_concepto,Consecutivo,Horas,Pesos,0 Id_categ,Fecha,PesosExcento,cc,id_plaza,
        case when @agrupa = 1 then 0 else Id_Referencia end Id_Referencia,id_periodoPago,
        Id_ProcesoNomina,Desde,Hasta
        from nom_HistPagos where Id_Periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))
      ) h
      
      delete from #PeriodoPagos2 where id_concepto in (2601,4214)

      select h.id_periodo,h.id_referencia, h.id_emp, h.id_plaza, round(sum( case when c.tipo = 1 then h.pesos else 0 end ),2) percepciones,
      round(sum( case when c.tipo = 2 then h.pesos else 0 end ),2) deducciones,
      round(sum( case when c.tipo = 1 then h.pesos else 0 end ) - sum( case when c.tipo = 2 then h.pesos else 0 end ),2) NetoReal
      into #netospara262
      from #PeriodoPagos2 h
      inner join conceptos c on c.id_concepto = h.id_concepto
      where --h.Id_Periodo in (select id_periodo from calennomina where id_cia in (2,3) and id_periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))) and 
      h.id_concepto in (select id_concepto from conceptos where tipo in (1,2))
      group by h.id_periodo,h.id_referencia,h.id_emp, h.id_plaza
      
      select *, cast(netoreal as int) truncado, netoreal - cast(netoreal as int) cp26 into #cpto26insertar2 from #netospara262

      --CREATE NONCLUSTERED INDEX idxcpto26insertar21 ON #cpto26insertar2 ([id_emp]) INCLUDE ([id_periodo],[id_plaza],[cp26])

      insert into #PeriodoPagos2 (Id_Emp,Id_Periodo,id_concepto,Consecutivo,Horas,Pesos,Id_categ,Fecha,PesosExcento,C_costo,id_plaza,Id_Referencia,
      id_periodoPago,Id_ProcesoNomina,Desde,Hasta)
      select a.id_emp, a.id_periodo,2601 id_concepto, 0, 0, cp26, 0,getdate(), 0,'''',id_plaza,a.id_referencia,0,0,qna,qna 
      from #cpto26insertar2 a inner join #qnaCalePeriodo2 b on b.id_periodo = a.id_periodo
      where round(a.cp26,2) <> 0 and a.id_emp in (select id_emp from empleados where id_cia = 2)

      insert into #PeriodoPagos2 (Id_Emp,Id_Periodo,id_concepto,Consecutivo,Horas,Pesos,Id_categ,Fecha,PesosExcento,C_costo,id_plaza,Id_Referencia,
      id_periodoPago,Id_ProcesoNomina,Desde,Hasta)
      select a.id_emp, a.id_periodo,4214 id_concepto, 0, 0, cp26, 0,getdate(), 0,'''',id_plaza,a.id_referencia,0,0,qna,qna 
      from #cpto26insertar2 a inner join #qnaCalePeriodo2 b on b.id_periodo = a.id_periodo
      where round(a.cp26,2) <> 0 and a.id_emp in (select id_emp from empleados where id_cia = 3)

  end
  else
    begin
      insert into #PeriodoPagos2
      select * from (
        select Id_Emp, Id_Periodo,id_concepto,Consecutivo,Horas,Pesos,Id_categ,Fecha,PesosExcento,C_costo,id_plaza,Id_Referencia,id_periodoPago,
        Id_ProcesoNomina,Desde,Hasta
        from HistPagos where Id_Periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))
        union all
        select Id_Emp, Id_Periodo,id_concepto,Consecutivo,Horas,Pesos,0 Id_categ,Fecha,PesosExcento,cc,id_plaza,Id_Referencia,id_periodoPago,
        Id_ProcesoNomina,Desde,Hasta
        from nom_HistPagos where Id_Periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))
      ) h
    end
    
    ---
    --- Para convertir de carrera a sueldo vace cuando en la historia traer carrera y el actual no
    
    select b.*, a.id_concepto concepNuevo into #RemplazarCptoCM
    from #PeriodoPagos2 a 
    inner join #PeriodoPagos2 b on a.Id_Emp = b.Id_Emp and a.id_plaza = b.id_plaza and a.Id_Periodo = b.Id_Periodo and a.id_periodoPago = b.id_periodoPago
    where a.id_concepto in (1300,1318,1319,1320,1321,1322,1354) and a.pesos >= 0
    and b.id_concepto in (1300,1318,1319,1320,1321,1322,1354) and b.pesos < 0 and a.id_concepto <> b.id_concepto
    
    update a set a.id_concepto = b.concepNuevo
    from #PeriodoPagos2 a
    inner join #RemplazarCptoCM b on a.Id_Emp = b.Id_Emp and a.id_plaza = b.id_plaza and a.Id_Periodo = b.Id_Periodo and a.id_periodoPago = b.id_periodoPago and a.id_concepto = b.id_concepto
    where a.pesos < 0
    
    select b.*, a.id_concepto concepNuevo into #RemplazarCptoE9
    from #PeriodoPagos2 a 
    inner join #PeriodoPagos2 b on a.Id_Emp = b.Id_Emp and a.id_plaza = b.id_plaza and a.Id_Periodo = b.Id_Periodo and a.id_periodoPago = b.id_periodoPago
    where a.id_concepto in (1454,1359,1360,1361,1362,1363,1364) and a.pesos >= 0
    and b.id_concepto in (1454,1359,1360,1361,1362,1363,1364) and b.pesos < 0 and a.id_concepto <> b.id_concepto
    
    update a set a.id_concepto = b.concepNuevo
    from #PeriodoPagos2 a
    inner join #RemplazarCptoE9 b on a.Id_Emp = b.Id_Emp and a.id_plaza = b.id_plaza and a.Id_Periodo = b.Id_Periodo and a.id_periodoPago = b.id_periodoPago and a.id_concepto = b.id_concepto
    where a.pesos < 0
    
    ---
    
   select h.id_periodo,h.id_referencia, h.Id_Emp, h.id_plaza, h.id_concepto, sum(h.Pesos) IMPORTE, 
    case when h.id_concepto in (1328, 1518) then h.c_costo else c.resultado end COD_CONCEPTO,
    case when h.id_concepto in (1328, 1518) then h.c_costo else c.resultado end COD_CONCEPTO_, upper(isnull(c.nombre,'''')) DESC_CONCEPTO,
    case when d.AcumulaISPT = 1 then 1 else 0 end BASE_CALCULO_ISR, case when c.tipo = 1 then ''P'' when c.tipo = 2 then ''D'' end TIPO_CONCEPTO
    into #LayoTempDiez
    from (
        select Id_Emp,case when @agrupa = 1 then 0 else id_periodo end Id_Periodo,id_concepto,Consecutivo,Horas,Pesos,Id_categ,Fecha,PesosExcento,C_costo,id_plaza,
        case when @agrupa = 1 then 0 else Id_Referencia end Id_Referencia, id_periodoPago,
        Id_ProcesoNomina,Desde,Hasta
        from #PeriodoPagos2 
    ) h  
    inner join conceptos c   on c.id_concepto = h.id_concepto and c.tipo in (1,2)
    left join (select distinct id_concepto, AcumulaISPT from Conceptos_RelSAT   where AcumulaISPT = 1) d on d.id_concepto = c.id_concepto 
    group by h.id_periodo, h.Id_Emp, h.id_plaza, h.id_concepto, c.resultado, c.nombre,d.AcumulaISPT,c.tipo,h.c_costo,h.id_referencia

    --CREATE NONCLUSTERED INDEX idxLayoTempDiez1 ON #LayoTempDiez ([id_concepto]) INCLUDE ([COD_CONCEPTO])
    --CREATE NONCLUSTERED INDEX idxLayoTempDiez2 ON #LayoTempDiez ([COD_CONCEPTO])
    --CREATE NONCLUSTERED INDEX idxLayoTempDiez3 ON #LayoTempDiez ([COD_CONCEPTO_])
    
    update a set a.DESC_CONCEPTO = b.descripcion
    from #LayoTempDiez a
    inner join Anexos_RelDescPrimaAntiguedad b on a.COD_CONCEPTO = b.Clave and b.id_concepto = a.id_concepto
    where a.id_concepto in (1328, 1518)


    CREATE NONCLUSTERED INDEX indextem10 ON [dbo].[#LayoTempDiez] ([Id_Periodo],[Id_Emp],[id_plaza]) INCLUDE ([IMPORTE],[COD_CONCEPTO],[DESC_CONCEPTO],[BASE_CALCULO_ISR],[TIPO_CONCEPTO])
    
    update #LayoTempDiez set COD_CONCEPTO = ''07'' where COD_CONCEPTO in (''7A'',''7B'',''7C'',''7D'',''7E'',''BC'')
    
    update #LayoTempDiez set DESC_CONCEPTO = (select top 1 DESC_CONCEPTO from #LayoTempDiez where COD_CONCEPTO_ = ''07'') where COD_CONCEPTO_ in (''7A'',''7B'',''7C'',''7D'',''7E'',''BC'')
  
    update #LayoTempDiez set COD_CONCEPTO = ''E9'' where COD_CONCEPTO in (''EA'',''EB'',''EC'',''ED'',''EE'',''CB'')
   
    update #LayoTempDiez set COD_CONCEPTO = ''51U'', DESC_CONCEPTO = ''PENSION (QUINCENAL) UPN''  where COD_CONCEPTO =''50''
   
    alter table #LayoTempDiez add Formula varchar(400) default '''' with values
    
    select a.*, t.TModelo_SE_id_Modelo_SE modelo, case when pi.categoria like ''%E%'' then ''D'' else ''A'' end tipo, pi.Categoria
    into #Tabulador_se
    from HTabulador_SE_Cat_Puesto a inner join (
    select id_plaza, max(fecha) fecha from HTabulador_SE_Cat_Puesto where fecha <= (select max(fechaini) from calennomina where Id_Periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))) 
    group by id_plaza
    ) b on a.id_plaza = b.id_plaza and a.fecha = b.fecha
    inner join TTabulador_SE_Cat_Puesto t on t.id_Tabulador_SE_Cat_Puesto = a.id_rel
    inner join plazaieepo pi on pi.id_plaza = a.id_plaza
    
    select l.*, h.Modelo, h.Tipo into #LayoTempDiez_A from #LayoTempDiez l inner join #Tabulador_se h on h.id_plaza = l.id_plaza
    
    update a set a.Formula = b.Formula
    from #LayoTempDiez_A a
    inner join Conceptos_Formulas b on a.id_concepto = b.id_concepto and a.COD_CONCEPTO = b.clave
    where b.modelo = 0 and b.tipo = '''' and a.id_concepto in (1328, 1518)
  
    update a set a.Formula = b.Formula from #LayoTempDiez_A a
    inner join Conceptos_Formulas b on a.id_concepto = b.id_concepto and a.COD_CONCEPTO = b.clave and a.modelo = b.modelo
    where b.tipo = '''' and a.id_concepto in (1304,4003,1590,1332,4015)

    update a set a.Formula = b.Formula from #LayoTempDiez_A a
    inner join Conceptos_Formulas b on a.id_concepto = b.id_concepto and a.COD_CONCEPTO = b.clave and a.modelo = b.modelo and a.tipo = b.tipo
    where a.id_concepto in (1517)
    
    declare @tabla2 varchar(50) = ''Anexo_VI_''
    set @tabla2 = @tabla2 +''''+convert(varchar,getdate(),112)+''''+replace(convert(varchar,getdate(),114),'':'','''')

    declare @query2 nvarchar(1000) = ''select a.NO_COMPROBANTE, ''''R20'''' UR, a.PERIODO, ''''O'''' TIPO_NOMINA, replace(case when a.CLAVE_PLAZA like ''''14%'''' or a.CLAVE_PLAZA like ''''15%'''' then ''''07''''+substring(a.CLAVE_PLAZA,3, len(a.CLAVE_PLAZA)) else a.CLAVE_PLAZA end,'''' '''','''''''') CLAVE_PLAZA ,
    case when len(rtrim(a.CURP)) < 18 then left(rtrim(a.rfc)+''''11111111'''',18) else a.CURP end CURP, b.TIPO_CONCEPTO, b.COD_CONCEPTO_ COD_CONCEPTO, b.COD_CONCEPTO COD_CONCEPTO_, b.DESC_CONCEPTO, round(sum(b.IMPORTE),2) IMPORTE, b.BASE_CALCULO_ISR, min(FORMULA) FORMULA
    into '' + @tabla2+ ''
    from LayoutNomina_NoComprobantes a 
    inner join #LayoTempDiez_A b   on a.id_periodo = b.Id_Periodo and a.id_plaza = b.id_plaza and a.id_emp = b.Id_Emp and a.id_referencia = b.id_referencia
    group by a.NO_COMPROBANTE, a.PERIODO,a.CLAVE_PLAZA,a.CURP, b.TIPO_CONCEPTO, b.COD_CONCEPTO, b.COD_CONCEPTO_, b.DESC_CONCEPTO, b.BASE_CALCULO_ISR,a.RFC''
    exec sp_executesql @query2
    select @tabla2
    
  end
end

if @tipo = 3
begin

  if @esJMP = 0
  begin

    select b.id_emp, a.id_Beneficiario, a.Id_concepto, a.Parentesco,replace(ltrim(rtrim(a.Nombre)),''.'', '''') Nombre,replace(ltrim(rtrim(a.ApPaterno)),''.'', '''') ApPaterno,replace(ltrim(rtrim(a.ApMaterno)),''.'', '''') ApMaterno, a.Pagaduria, a.subPagaduria, a.TipodePago, a.Cuenta_Invernomina, a.Id_Banco, a.RFC_Ben, a.id_conceptopago, a.RFC, a.CURP, a.Sexo, a.FechaNacimiento, a.Id_BeneficiarioRelacionado, a.PrioridadPensionado, a.id_plazaBen
    into #layoBeneficiarios
    from view_tbeneficiarios a  
    inner join rbeneficiario b   on b.id_beneficiario = a.id_beneficiario

    if exists(select top 1 parcial from CalenNomina c   where c.Parcial = 0 and c.id_periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n)))
    begin
     update ben set ben.id_emp = deduc.id_emp from #layoBeneficiarios ben 
     inner join deducsfijas deduc on deduc.id_beneficiario = ben.id_beneficiario 
     inner join empleados e on e.id_emp = deduc.Id_Emp 
     where deduc.status <> ''B'' and e.Id_Cia in ( select distinct c.Id_cia from CalenNomina c where id_periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n)) )
     and ben.id_emp <> deduc.id_emp and ben.id_emp = 0
    end
     
    Select a.Id_beneficiario,a.id_plazaben,a.id_emp,b.id_concepto,a.PrioridadPensionado,a.appaterno,a.apmaterno,a.nombre,a.rfc,a.rfc_ben 
    into #layoBeneficiariosdos
    from #layoBeneficiarios A   inner join ( Select tprioridadpensionado.*,conceptos.id_concepto from tprioridadpensionado   , conceptos   where Charindex('',''+Ltrim(Rtrim(Cast(conceptos.id_concepto as varchar)))+'','','',''+Ltrim(Rtrim(tprioridadpensionado.conceptos))+'','')<>0 ) B on a.prioridadpensionado = b.id_prioridadpensionado

    delete from a
    from #layoBeneficiariosdos a
    inner join rbeneficiario b on a.Id_beneficiario = b.id_beneficiario
    where b.id_emp =0 and a.id_concepto in (select espejo from RelConceptoEspejo where id_concepto in (select conceptopago from PrioridadesPension))
    and a.id_emp <> 0



    Select a.*,C.Clave as CT, t.UDP, t.id_nodo, sB.Descr_prog as pro, ssb.Descr_subprog as Spr 
    into #layoCTpension
    from (HCentroTrabajoPensionados A   
    inner join (Select id_beneficiario,max(fecha) as maximofecha from HCentroTrabajoPensionados   --where fecha <= (select max(fechafin) from calennomina   where id_periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n)))
    group by id_beneficiario ) B on a.id_beneficiario = b.id_beneficiario and a.fecha= b.maximofecha ) 
    inner join tnivel3se C   on c.id_nivel3se = a.id_rel
    inner join tablaconfigorgan y   on a.id_rel = y.ValorCampoLLave
    inner join TablaLongitudProp_28 t   on t.id_nodo = y.Id_Nodo
    left join (Select c.id_nodo , d.Descr_prog from RCT_Programa C   inner join TCT_Programa  D   on c.id_rel = d.id_CT_Programa  ) sB on sb.id_nodo = t.id_nodo 
    left join (Select c.id_nodo , d.Descr_subprog from rCT_Subprograma C   inner join TCT_Subprograma  D    on c.id_rel = d.id_CT_SubPrograma  ) ssB on ssb.id_nodo = t.id_nodo 

    if exists(select top 1 parcial from CalenNomina c   where c.Parcial = 0 and c.id_periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n)))
    begin
      select t.id_beneficiario,   t.id_plazaben,  ben.id_emp, t.id_concepto,  t.prioridadpensionado,  t.appaterno,    t.apmaterno,    t.nombre,   t.rfc,  t.rfc_ben 
      into #pensionadosBaja1
      from #layoBeneficiariosdos t   
      inner join ( select a.* from hbeneficiario a   inner join ( select id_beneficiario, max(fecha) fecha from hbeneficiario   where id_emp <> 0 group by id_beneficiario ) b on b.id_beneficiario = a.id_beneficiario and b.Fecha = a.Fecha ) ben on ben.id_beneficiario = t.id_beneficiario where t.id_emp = 0 and t.id_concepto in (3081,3082,3083,3084,3085)

      insert into #layoBeneficiariosdos (id_beneficiario,  id_plazaben,    id_emp, id_concepto,    prioridadpensionado,    appaterno,  apmaterno, nombre,  rfc,    rfc_ben) 
      select id_beneficiario,    id_plazaben,    id_emp, id_concepto,    prioridadpensionado,    appaterno,  apmaterno, nombre,  rfc,    rfc_ben 
      from #pensionadosBaja1 a   where not exists ( select 1 from #layoBeneficiariosdos b   where b.id_emp = a.id_emp and b.id_concepto = a.id_concepto )

      update #layoBeneficiariosdos  set id_concepto = 3082 where id_beneficiario = 9516 and id_concepto = 3083

      select distinct v.id_Beneficiario,0 id_plazaben, d.id_emp,p.conceptoresponsabilidad,p.id_prioridad,  v.ApPaterno, v.ApMaterno, v.Nombre, v.RFC, v.RFC_Ben 
      into #layodesDeduc
      from view_tbeneficiarios v   inner join rbeneficiario r   on r.id_beneficiario = v.id_beneficiario 
      inner join deducsfijas d   on d.id_beneficiario = v.id_Beneficiario and d.Status in (''A'',''C'') 
      inner join PrioridadesPension p    on p.conceptoespejo = d.id_concepto

      delete from a from  #layoBeneficiariosdos  a 
      inner join #layodesDeduc b on b.id_emp = a.id_emp and b.conceptoresponsabilidad = a.id_concepto

      insert into #layoBeneficiariosdos (id_beneficiario,  id_plazaben,    id_emp, id_concepto,    prioridadpensionado,    appaterno,  apmaterno,  nombre, rfc,    rfc_ben) 
      select distinct v.id_Beneficiario,0 id_plazaben, d.id_emp,p.conceptoresponsabilidad,p.id_prioridad,  v.ApPaterno, v.ApMaterno, v.Nombre, v.RFC, v.RFC_Ben 
      from view_tbeneficiarios v   
      inner join rbeneficiario r   on r.id_beneficiario = v.id_beneficiario 
      inner join deducsfijas d   on d.id_beneficiario = v.id_Beneficiario and d.Status in (''A'',''C'') 
      inner join PrioridadesPension p    on p.conceptoespejo = d.id_concepto 
      where  not exists( select 1 from #layoBeneficiariosdos b   
      where b.id_beneficiario = v.id_Beneficiario and b.id_emp = d.id_emp and b.id_concepto =p.conceptoresponsabilidad )
    end


-- aqui empezamos a agrupar
    
    select h.id_periodo,h.id_referencia, h.id_plaza, h.id_emp,h.id_concepto,min(fecha) as fecha,min(isnull(c_costo,'''')) as cc,sum(horas) as horas,
    sum(pesos) as pesos, sum(pesosexcento) as pesosexcento, min(Consecutivo) as Consecutivo,min(desde) as desde,max(hasta) as hasta, 
    c.resultado, 1 as perded,''0'' as qmasapli,''0'' as qnastpt,case when sum(pesos+pesosexcento) < 0 then 1 else 0 End as signo 
    into #layobenPagos
    from (
      select Id_Emp, case when @agrupa = 1 then 0 else id_periodo end Id_Periodo,id_concepto,Consecutivo,Horas,Pesos,Id_categ,Fecha,PesosExcento,C_costo,id_plaza,
      case when @agrupa = 1 then 0 else Id_Referencia end Id_Referencia,id_periodoPago,
      Id_ProcesoNomina,Desde,Hasta
      from HistPagos  where id_periodo in ( SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))
      union all
      select Id_Emp, case when @agrupa = 1 then 0 else id_periodo end Id_Periodo,id_concepto,Consecutivo,Horas,Pesos,0 Id_categ,Fecha,PesosExcento,cc,id_plaza,
      case when @agrupa = 1 then 0 else Id_Referencia end Id_Referencia,id_periodoPago,
      Id_ProcesoNomina,Desde,Hasta
      from nom_HistPagos where id_periodo in ( SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))
    ) h  
    inner join conceptos c WITH(NOLOCK) on c.id_concepto = h.id_concepto and c.tipo = 3
    where  
    h.id_concepto in ( select distinct id_concepto from #layoBeneficiariosdos WITH(NOLOCK) )
    group by h.id_periodo,h.id_referencia, h.id_emp, h.id_concepto, h.id_plaza, c.resultado
    
    
    
    CREATE TABLE #layopagospension (Id_beneficiario int,id_emp int,id_plaza int,id_periodo int,id_referencia int,id_concepto int,UR varchar(5),
    TIPO_NOMINA varchar(5), PERIODO varchar(10),CURP_TRABAJADOR varchar(20),CLAVE_PLAZA varchar(30),ud smallint,PRIMER_APELLIDO varchar(500),
    SEGUNDO_APELLIDO varchar(500),NOMBRE varchar(500),RFC_PENSIONADO varchar(20),COD_CONCEPTO varchar(5),DESC_CONCEPTO varchar(100),
    FORMA_PAGO int,CVE_BANCO varchar(10),CLABE varchar(30),IMPORTE numeric(10, 2), esrespom int)


    if @agrupa = 1  
    begin
       select 0 id_periodo, max(cast(Numero as varchar) + ''/'' + cast(año as varchar)) PERIODO 
        into #periodopagopensiones
        from calennomina where id_periodo in ( SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))

        insert into #layopagospension
        select w.Id_beneficiario,a.id_emp,a.id_plaza, a.id_periodo, a.id_referencia,a.id_concepto,
        ''R20'' UR, ''O'' TIPO_NOMINA, b.PERIODO,s.CURP CURP_TRABAJADOR,replace(case when pi.plazaieepo like ''14%'' or pi.plazaieepo like ''15%'' then ''07''+substring(pi.plazaieepo,3, len(pi.plazaieepo)) else pi.plazaieepo end,'' '','''') CLAVE_PLAZA,v.udp as ud, 
        upper(w.appaterno) PRIMER_APELLIDO, upper(w.apmaterno) SEGUNDO_APELLIDO,upper(w.nombre) NOMBRE,w.rfc AS RFC_PENSIONADO, co.resultado COD_CONCEPTO, ''PENSIÓN ALIMENTICIA'' DESC_CONCEPTO, case when tb.TipodePago = 2 then 1 else 2 end FORMA_PAGO,
        case when len(tb.cuenta_invernomina) >= 18 then concat(''40'',substring(tb.cuenta_invernomina,1,3)) else '''' end CVE_BANCO, case when len(tb.cuenta_invernomina) >= 18 then tb.cuenta_invernomina else '''' end CLABE, cast(a.pesos as numeric(10,2)) as IMPORTE, 0 esrespom
        from #layobenPagos a
        inner join #periodopagopensiones b on a.id_periodo = b.id_periodo
        inner join empleados S on S.id_emp = a.id_emp
        inner join #layoBeneficiariosdos w on w.id_emp = a.id_emp and w.id_concepto = a.id_concepto and a.id_plaza = case when w.id_plazaben = 0 then a.id_plaza else w.id_plazaben end 
        left join #layoCTpension v on v.Id_beneficiario = w.Id_beneficiario
        left join tbeneficiario tb on tb.id_beneficiario = w.id_beneficiario 
        left join plazaieepo pi on pi.id_plaza = a.id_plaza
        left join conceptos co on co.id_concepto = a.id_concepto
        where exists ( select 1 from hplazas_concifed_230217 pc where pc.CODIGO_PLAZA = replace(case when pi.plazaieepo like ''14%'' or pi.plazaieepo like ''15%'' then ''07''+substring(pi.plazaieepo,3, len(pi.plazaieepo)) else pi.plazaieepo end,'' '','''') )-- and pc.ESTATUS <> ''C''
      end
    else
    begin
        insert into #layopagospension
        select w.Id_beneficiario,a.id_emp,a.id_plaza, a.id_periodo, a.id_referencia,a.id_concepto,
        ''R20'' UR, ''O'' TIPO_NOMINA, cast(b.Numero as varchar) + ''/'' + cast(b.año as varchar) PERIODO,s.CURP CURP_TRABAJADOR,replace(case when pi.plazaieepo like ''14%'' or pi.plazaieepo like ''15%'' then ''07''+substring(pi.plazaieepo,3, len(pi.plazaieepo)) else pi.plazaieepo end,'' '','''') CLAVE_PLAZA,v.udp as ud, 
        upper(w.appaterno) PRIMER_APELLIDO, upper(w.apmaterno) SEGUNDO_APELLIDO,upper(w.nombre) NOMBRE,w.rfc AS RFC_PENSIONADO, co.resultado COD_CONCEPTO, ''PENSIÓN ALIMENTICIA'' DESC_CONCEPTO, case when tb.TipodePago = 2 then 1 else 2 end FORMA_PAGO,
        case when len(tb.cuenta_invernomina) >= 18 then concat(''40'',substring(tb.cuenta_invernomina,1,3)) else '''' end CVE_BANCO, case when len(tb.cuenta_invernomina) >= 18 then tb.cuenta_invernomina else '''' end CLABE, cast(a.pesos as numeric(10,2)) as IMPORTE, 0 esrespom
        from #layobenPagos a  WITH(NOLOCK)
        inner join Calennomina b WITH(NOLOCK) on a.id_periodo = b.id_periodo
        inner join empleados S WITH(NOLOCK) on S.id_emp = a.id_emp
        inner join #layoBeneficiariosdos w WITH(NOLOCK) on w.id_emp = a.id_emp and w.id_concepto = a.id_concepto and a.id_plaza = case when w.id_plazaben = 0 then a.id_plaza else w.id_plazaben end 
        left join #layoCTpension v WITH(NOLOCK) on v.Id_beneficiario = w.Id_beneficiario
        left join tbeneficiario tb WITH(NOLOCK) on tb.id_beneficiario = w.id_beneficiario 
        left join plazaieepo pi WITH(NOLOCK) on pi.id_plaza = a.id_plaza
        left join conceptos co WITH(NOLOCK) on co.id_concepto = a.id_concepto
       where exists ( select 1 from hplazas_concifed_230217 pc where pc.CODIGO_PLAZA = replace(case when pi.plazaieepo like ''14%'' or pi.plazaieepo like ''15%'' then ''07''+substring(pi.plazaieepo,3, len(pi.plazaieepo)) else pi.plazaieepo end,'' '','''')  )--and pc.ESTATUS <> ''C''
     end

    update #layopagospension set esrespom = 1 where id_concepto in (select conceptoresponsabilidad from PrioridadesPension)

    if @siresponsabilidad = 1
    begin
    
      Select cve as Id_beneficiario,descuento,desde,hasta,id_responsa_pensionada,plazo,numperiodos,numpagos,id_periodoini,id_periodoproceso,saldo,estatus 
      into #responsabilidadesuno
      From TResponsa_Pensionada   Where descuento <> 0 and desde <= (select min(fechaini) from calennomina where id_periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))) and hasta >= (select max(fechafin) from calennomina where id_periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))) and estatus <> ''B''

      
      select h.id_periodo,h.id_referencia, h.id_emp, h.id_plaza, sum(h.pesos) pesosPlaza, cast(0 as float) total,  cast(0 as float) porcenPlaza 
      into #plazasrepartir
      from (
            select Id_Emp, case when @agrupa = 1 then 0 else id_periodo end Id_Periodo,id_concepto,Consecutivo,Horas,Pesos,Id_categ,Fecha,PesosExcento,C_costo,id_plaza,
            case when @agrupa = 1 then 0 else Id_Referencia end Id_Referencia,id_periodoPago,
            Id_ProcesoNomina,Desde,Hasta
            from HistPagos where id_periodo in (select id_periodo from calennomina where id_periodo in ( SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n)) and parcial = 0) and id_concepto in (select id_concepto from conceptos where tipo = 1)
            union all
            select Id_Emp, case when @agrupa = 1 then 0 else id_periodo end Id_Periodo,id_concepto,Consecutivo,Horas,Pesos,0 Id_categ,Fecha,PesosExcento,cc,id_plaza,
            case when @agrupa = 1 then 0 else Id_Referencia end Id_Referencia,id_periodoPago,
            Id_ProcesoNomina,Desde,Hasta
            from nom_HistPagos where id_periodo in (select id_periodo from calennomina where id_periodo in ( SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n)) and parcial = 0)  and id_concepto in (select id_concepto from conceptos where tipo = 1)
      ) h  
      inner join (select id_periodo, id_emp, id_plaza from #layopagospension where Id_beneficiario in (select id_beneficiario from #responsabilidadesuno) group by id_periodo, id_emp, id_plaza) l on l.id_periodo = h.id_periodo and l.id_emp = h.id_emp and l.id_plaza = h.id_plaza
      group by h.id_periodo, h.id_emp, h.id_plaza,h.id_referencia
      
      update a set a.total = b.pesos
      from #plazasrepartir a inner join (
      select id_periodo,id_referencia, id_emp, sum(pesosplaza) pesos from #plazasrepartir group by id_periodo, id_emp,id_referencia
      ) b on a.id_periodo = b.id_periodo and a.id_emp = b.id_emp and a.id_referencia = b.id_referencia

      update #plazasrepartir set porcenPlaza = round((pesosPlaza*100)/total,4)

      select distinct a.* into #plazarepartirMinPeriodo 
      from #plazasrepartir a inner join (
      select id_beneficiario, id_emp, id_plaza, min(id_periodo) id_periodo from #layopagospension group by id_beneficiario, id_emp, id_plaza
      ) b on a.id_periodo = b.id_periodo and a.id_emp = b.id_emp and a.id_plaza = b.id_plaza

      select a.*, c.*  into #responinsertar
      from #responsabilidadesuno a 
      inner join (select distinct id_periodo, Id_beneficiario, id_emp, id_plaza from #layopagospension) b on b.id_beneficiario = a.Id_beneficiario
      inner join #plazarepartirMinPeriodo c on c.id_periodo = b.id_periodo and c.id_emp = b.id_emp and c.id_plaza = b.id_plaza

      select top 0 * into #estructurapension from #layopagospension

     insert into #estructurapension (Id_beneficiario, id_emp, id_plaza, id_periodo,id_referencia, id_concepto, UR, TIPO_NOMINA, PERIODO, CURP_TRABAJADOR, 
            CLAVE_PLAZA, ud, PRIMER_APELLIDO, SEGUNDO_APELLIDO, NOMBRE, RFC_PENSIONADO, COD_CONCEPTO, DESC_CONCEPTO, FORMA_PAGO, CVE_BANCO, CLABE, IMPORTE,esrespom)
      select a.Id_beneficiario, a.id_emp, a.id_plaza, a.id_periodo,a.id_referencia, 0 id_concepto, UR, TIPO_NOMINA, PERIODO, CURP_TRABAJADOR, 
            CLAVE_PLAZA, ud, PRIMER_APELLIDO, SEGUNDO_APELLIDO, NOMBRE, RFC_PENSIONADO, COD_CONCEPTO, DESC_CONCEPTO, FORMA_PAGO, CVE_BANCO, CLABE,(round(((a.descuento * -1) * a.porcenplaza)/100 ,2))*-1 IMPORTE,2 esrespom
      from #responinsertar a
      inner join (select distinct Id_beneficiario, id_emp, id_plaza, id_periodo, id_referencia, UR, TIPO_NOMINA, PERIODO, CURP_TRABAJADOR, CLAVE_PLAZA, ud, PRIMER_APELLIDO, SEGUNDO_APELLIDO, NOMBRE, RFC_PENSIONADO, COD_CONCEPTO, DESC_CONCEPTO, FORMA_PAGO, CVE_BANCO, CLABE 
      from #layopagospension ) b on b.id_beneficiario = a.Id_beneficiario and a.id_emp = b.id_emp and a.id_plaza = b.id_plaza and a.id_periodo = b.id_periodo and b.id_referencia = a.id_referencia


      insert into #estructurapension (Id_beneficiario, id_emp, id_plaza, id_periodo,id_referencia, id_concepto, UR, TIPO_NOMINA, PERIODO, CURP_TRABAJADOR, 
      CLAVE_PLAZA, ud,  PRIMER_APELLIDO,  SEGUNDO_APELLIDO, NOMBRE, RFC_PENSIONADO, COD_CONCEPTO, DESC_CONCEPTO, FORMA_PAGO, CVE_BANCO, CLABE, IMPORTE,esrespom)
       select a.Id_beneficiario, a.id_emp, a.id_plaza, a.id_periodo,a.id_referencia, 0 id_concepto, UR, TIPO_NOMINA, PERIODO, CURP_TRABAJADOR, 
            CLAVE_PLAZA,  ud, e.ApPaterno PRIMER_APELLIDO,e.ApMaterno SEGUNDO_APELLIDO,e.Nombre NOMBRE,e.rfc RFC_PENSIONADO, COD_CONCEPTO, DESC_CONCEPTO,2 FORMA_PAGO,
            '''' CVE_BANCO,'''' CLABE,(round(((a.descuento * -1) * a.porcenplaza)/100 ,2)) IMPORTE,2 esrespom
      from #responinsertar a
      inner join (select distinct Id_beneficiario, id_emp, id_plaza, id_periodo, id_referencia, UR, TIPO_NOMINA, PERIODO, CURP_TRABAJADOR, CLAVE_PLAZA, ud, PRIMER_APELLIDO, SEGUNDO_APELLIDO, NOMBRE, RFC_PENSIONADO, COD_CONCEPTO, DESC_CONCEPTO, FORMA_PAGO, CVE_BANCO, CLABE 
      from #layopagospension ) b on b.id_beneficiario = a.Id_beneficiario and a.id_emp = b.id_emp and a.id_plaza = b.id_plaza and a.id_periodo = b.id_periodo and a.id_referencia = b.id_referencia
      inner join empleados e on e.Id_Emp = a.id_emp
      inner join (
        select a.id_emp, a.id_plaza, a.id_nodo, t.udp from plazaempleados a WITH(NOLOCK) inner join (
        select id_plaza, max(fecha) fecha from plazaempleados WITH(NOLOCK) where fecha <= (select max(fechafin) from calennomina WITH(NOLOCK) where id_periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))) group by id_plaza
        ) b on a.id_plaza = b.id_plaza and a.fecha = b.fecha
        inner join TablaLongitudProp_28 t WITH(NOLOCK) on t.id_nodo = a.id_nodo
      ) u on u.id_plaza = a.id_plaza

      insert into #layopagospension
      select * from #estructurapension

    end

     select isnull(b.NO_COMPROBANTE,''000000000'') NO_COMPROBANTE, UR, a.PERIODO, TIPO_NOMINA, CURP_TRABAJADOR, 
    a.CLAVE_PLAZA, cast(ud as varchar) UNIDAD_PAGADORA,  PRIMER_APELLIDO,  SEGUNDO_APELLIDO, NOMBRE, RFC_PENSIONADO, COD_CONCEPTO, DESC_CONCEPTO, FORMA_PAGO, CVE_BANCO, CLABE, sum(IMPORTE) IMPORTE
    ,a.id_periodo,a.id_referencia, a.id_emp, a.id_plaza,a.esrespom, a.Id_beneficiario
    into #layopagospension2
    from #layopagospension a
    left join LayoutNomina_NoComprobantes b   on a.id_periodo = b.id_periodo and a.id_emp = b.id_emp and a.id_plaza = b.id_plaza and a.id_referencia = b.Id_Referencia
    group by b.NO_COMPROBANTE,UR, TIPO_NOMINA, a.PERIODO, CURP_TRABAJADOR, 
    a.CLAVE_PLAZA, ud,  PRIMER_APELLIDO,  SEGUNDO_APELLIDO, NOMBRE, RFC_PENSIONADO, COD_CONCEPTO, DESC_CONCEPTO, FORMA_PAGO, CVE_BANCO, CLABE
    ,a.id_periodo,a.id_referencia, a.id_emp, a.id_plaza,a.esrespom, a.Id_beneficiario
    
    update a set a.unidad_pagadora = b.udp_fed from #layopagospension2 a
    inner join UDP_PensionFederal b on b.UDP_Edo = A.UNIDAD_PAGADORA
    
     update #layopagospension2 set COD_CONCEPTO = ''51U'' where COD_CONCEPTO = ''50''

    declare @tabpension varchar(50) = ''Anexo_VII_''
    set @tabpension = @tabpension +''''+convert(varchar,getdate(),112)+''''+replace(convert(varchar,getdate(),114),'':'','''')

    declare @queryp nvarchar(1000) = ''select NO_COMPROBANTE, UR, PERIODO, TIPO_NOMINA, CURP_TRABAJADOR, 
    CLAVE_PLAZA, UNIDAD_PAGADORA,case when PRIMER_APELLIDO = '''''''' then SEGUNDO_APELLIDO else PRIMER_APELLIDO end  PRIMER_APELLIDO, case when PRIMER_APELLIDO = '''''''' then '''''''' else SEGUNDO_APELLIDO end SEGUNDO_APELLIDO, NOMBRE, RFC_PENSIONADO, COD_CONCEPTO, DESC_CONCEPTO, FORMA_PAGO,case when FORMA_PAGO = 1 then CVE_BANCO else '''''''' end CVE_BANCO,case when FORMA_PAGO = 1 then CLABE else '''''''' end CLABE, sum(IMPORTE) IMPORTE, id_periodo, id_emp, id_plaza, esrespom, id_referencia, Id_beneficiario
    into '' + @tabpension + ''
    from #layopagospension2  
    group by NO_COMPROBANTE,UR, TIPO_NOMINA, PERIODO, CURP_TRABAJADOR, 
    CLAVE_PLAZA, UNIDAD_PAGADORA,  PRIMER_APELLIDO,  SEGUNDO_APELLIDO, NOMBRE, RFC_PENSIONADO, COD_CONCEPTO, DESC_CONCEPTO, FORMA_PAGO, 
     CVE_BANCO,  CLABE, id_periodo, id_emp, id_plaza, esrespom, id_referencia, Id_beneficiario''

    exec sp_executesql @queryp
    select @tabpension tabla

  end
  else
  begin

    Select a.*,C.Clave as CT, t.UDP, t.id_nodo, sB.Descr_prog as pro, ssb.Descr_subprog as Spr 
    into #layoCTpensionj
    from (HCentroTrabajoPensionados A   
    inner join (Select id_beneficiario,max(fecha) as maximofecha from HCentroTrabajoPensionados   where fecha <= (select max(fechafin) from calennomina   where id_periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))) 
    group by id_beneficiario ) B on a.id_beneficiario = b.id_beneficiario and a.fecha= b.maximofecha ) 
    inner join tnivel3se C   on c.id_nivel3se = a.id_rel
    inner join tablaconfigorgan y   on a.id_rel = y.ValorCampoLLave
    inner join TablaLongitudProp_28 t   on t.id_nodo = y.Id_Nodo
    left join (Select c.id_nodo , d.Descr_prog from RCT_Programa C   inner join TCT_Programa  D   on c.id_rel = d.id_CT_Programa  ) sB on sb.id_nodo = t.id_nodo 
    left join (Select c.id_nodo , d.Descr_subprog from rCT_Subprograma C   inner join TCT_Subprograma  D   on c.id_rel = d.id_CT_SubPrograma  ) ssB on ssb.id_nodo = t.id_nodo 


    select h.Id_Emp, h.id_plaza, case when @agrupa = 1 then 0 else h.id_periodo end Id_Periodo, ''R20'' UR, cast(ca.Numero as varchar) + ''/'' + cast(ca.año as varchar) PERIODO, ''O'' TIPO_NOMINA,e.CURP CURP_TRABAJADOR,
    replace(case when pi.plazaieepo like ''14%'' or pi.plazaieepo like ''15%'' then ''07''+substring(pi.plazaieepo,3, len(pi.plazaieepo)) else pi.plazaieepo end,'' '','''') CLAVE_PLAZA, cast(ct.UDP as varchar)  UNIDAD_PAGADORA, upper(b.appaterno) PRIMER_APELLIDO, upper(b.apmaterno) SEGUNDO_APELLIDO,upper(b.nombre) NOMBRE,
    b.RFC RFC_PENSIONADO, c.resultado COD_CONCEPTO, c.descripcion DESC_CONCEPTO,case when b.TipodePago = 2 then 1 else 2 end FORMA_PAGO,
    case when len(b.cuenta_invernomina) >= 18 then concat(''40'',substring(b.cuenta_invernomina,1,3)) else '''' end CVE_BANCO, case when len(b.cuenta_invernomina) >= 18 then b.cuenta_invernomina else '''' end CLABE,
    cast(h.pesos as numeric(10,2)) as IMPORTE
    into #layoJM
    from (
      select Id_Emp,Id_Periodo,id_concepto,Consecutivo,Horas,Pesos,Id_categ,Fecha,PesosExcento,C_costo,id_plaza,Id_Referencia,id_periodoPago,
      Id_ProcesoNomina,Desde,Hasta
      from HistPagos
      union all
      select Id_Emp,Id_Periodo,id_concepto,Consecutivo,Horas,Pesos,0 Id_categ,Fecha,PesosExcento,cc,id_plaza,Id_Referencia,id_periodoPago,
      Id_ProcesoNomina,Desde,Hasta
      from nom_HistPagos
    ) h  
    inner join empleados e   on h.Id_Emp = e.Id_Emp
    inner join plazaieepo pi   on pi.id_plaza = h.id_plaza
    inner join calennomina ca   on ca.Id_Periodo = case when @agrupa = 1 then (select max(id_periodo) from calennomina where id_periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n)) ) else h.id_periodo end
    --inner join deducsfijas d   on d.id_prestamo = h.Consecutivo
    inner join (select distinct id_emp, id_plaza,id_concepto, id_beneficiario, id_prestamo from deducsfijas) d   on d.id_emp = h.id_emp and d.id_plaza = h.id_plaza and d.id_concepto = h.id_concepto and d.id_prestamo = h.consecutivo
    inner join tbeneficiario b   on b.id_beneficiario = d.id_beneficiario
    inner join conceptos c   on c.id_concepto = d.id_concepto
    inner join #layoCTpensionj ct   on b.id_Beneficiario = ct.Id_Beneficiario
    where h.id_periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n)) and h.id_concepto in (2325)


    update a set a.unidad_pagadora = b.udp_fed from #layoJM a
    inner join UDP_PensionFederal b on b.UDP_Edo = A.UNIDAD_PAGADORA

    select  isnull(b.NO_COMPROBANTE,''000000000'') NO_COMPROBANTE, UR, a.PERIODO, TIPO_NOMINA, CURP_TRABAJADOR, 
    a.CLAVE_PLAZA, UNIDAD_PAGADORA,case when PRIMER_APELLIDO = '''' then SEGUNDO_APELLIDO else PRIMER_APELLIDO end  PRIMER_APELLIDO, case when PRIMER_APELLIDO = '''' then '''' else SEGUNDO_APELLIDO end SEGUNDO_APELLIDO, NOMBRE, RFC_PENSIONADO, COD_CONCEPTO, DESC_CONCEPTO, FORMA_PAGO,case when FORMA_PAGO = 1 then CVE_BANCO else '''' end CVE_BANCO,case when FORMA_PAGO = 1 then CLABE else '''' end CLABE, sum(IMPORTE) IMPORTE
    from #layoJM a  
    left join LayoutNomina_NoComprobantes b   on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza and a.Id_Periodo = b.id_periodo
    group by b.NO_COMPROBANTE,UR, TIPO_NOMINA, a.PERIODO, CURP_TRABAJADOR, 
    a.CLAVE_PLAZA, UNIDAD_PAGADORA,  PRIMER_APELLIDO,  SEGUNDO_APELLIDO, NOMBRE, RFC_PENSIONADO, COD_CONCEPTO, DESC_CONCEPTO, FORMA_PAGO, 
    CVE_BANCO,  CLABE
  end

end'
GO

GO
PRINT N'Creating [dbo].[spf_folio_id_documento]'
GO
IF OBJECT_ID(N'[dbo].[spf_folio_id_documento]', 'P') IS NULL
EXEC sp_executesql N'
create procedure [dbo].[spf_folio_id_documento]
 @id_documento int
as begin

delete from fup_valortext where id_documento in (
select Id_Detalle from fup_documento_detalle where id_documento in (
select id_documento from FUP_Documentos where id_documento=@id_documento
))

delete from fup_valorfloat where id_documento in (
select Id_Detalle from fup_documento_detalle where id_documento in (
select id_documento from FUP_Documentos where id_documento=@id_documento
))  

delete from fup_valorinteger where id_documento in (
select Id_Detalle from fup_documento_detalle where id_documento in (
select id_documento from FUP_Documentos where id_documento=@id_documento
))

delete from fup_valordate where id_documento in (
select Id_Detalle from fup_documento_detalle where id_documento in (
select id_documento from FUP_Documentos where id_documento=@id_documento
))

delete from fup_valorlista where id_documento in (
select Id_Detalle from fup_documento_detalle where id_documento in (
select id_documento from FUP_Documentos where id_documento=@id_documento
))  

delete from fup_valorsubcatalogo where id_documento in (
select Id_Detalle from fup_documento_detalle where id_documento in (
select id_documento from FUP_Documentos where id_documento=@id_documento
))

delete from fup_documento_detalle_mesacontrol where id_documento in (
select id_documento from fup_documentos where id_documento in (@id_documento))

delete from fup_informacion_documentos where id_documento in (
select id_documento from fup_documentos where id_documento in (@id_documento))

delete from fup_cancelados where id_documento =@id_documento

delete from fup_documento_detalle where id_documento in (
select id_documento from fup_documentos where id_documento in (@id_documento))

delete from fup_documentos where id_documento in (@id_documento)
end'
GO

GO
PRINT N'Creating [dbo].[spc_CosteoPorAnios]'
GO
IF OBJECT_ID(N'[dbo].[spc_CosteoPorAnios]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[spc_CosteoPorAnios]
@tipo int, @Anio varchar(4), @TablaConceptos varchar(200), @tPlaza varchar(200) = ''''
WITH EXEC AS CALLER
AS
BEGIN

declare @año varchar(4) = @Anio
declare @qna varchar(10)

--if(@año = year(getdate()))
 -- set @qna = (select right(''00''+cast(max(numero) as varchar),2) qna from calennomina where Actualizado = 0 and Procesado = 1 and parcial = 0)
--else
  set @qna = ''24''
  
select  num,rfc,plaza,horas,categoria,desde,hasta,funcion,id_puesto,id_cm,id_npago,id_zona,modelo,tipo_mov, id_emp,id_plaza, ''      '' desde_,''      '' hasta_,
cast(0 as float) sueldo,cast(0 as float) aguinaldo, cast(0 as float) prima,cast(0 as float) DM,cast(0 as float) Cn,cast(0 as float) ap,cast(0 as float) bo,cast(0 as float) di,cast(0 as float) c88, cast(0 as float) qnas 
into #tablaAño  
from C_costeoMindDatos

update #tablaAño set desde_ = case when desde <= @año+''01'' then @año+''01'' else desde end, hasta_ = case when hasta >= @año+''''+@qna then @año+''''+@qna else hasta end
update #tablaAño set desde_ = '''' where desde_ > @año+''''+@qna
update #tablaAño set hasta_ = '''' where desde_ = ''''
update #tablaAño set desde_ = '''', hasta_ = '''' where hasta_ < desde_ and desde_ <> ''''
update #tablaAño set qnas = dbo.PlazosDesdeHasta(desde_, hasta_) where desde_ <> ''''

if(@tPlaza = ''AD'')
begin

select a.*, isnull(e.id_cia,0) id_cia, isnull(c.id_periodo,0) id_periodo into #EmpleadoPeriodo_ad
from #tablaAño a
left join empleados e on e.id_emp = a.id_emp
left join calennomina c on dbo.fechatoanioquincena(c.fechaini) = a.hasta_ and c.id_cia = e.id_cia and c.parcial = 0 and c.numero <= 24 and a.hasta_ <> '''' and a.id_emp <> 0

select distinct a.*, h.id_plaza idplaza into #Empleadoplazaperiodo 
from #EmpleadoPeriodo_ad a
inner join (
select Id_Emp, case when id_periodopago = 0 then Id_Periodo else id_periodopago end id_periodo, id_concepto, Pesos, id_plaza, Id_Referencia, id_periodoPago, Id_ProcesoNomina, Desde, Hasta from nom_histpagos where id_concepto in (select id_concepto from conceptos where tipo = 1)
union all
select Id_Emp, case when id_periodopago = 0 then Id_Periodo else id_periodopago end id_periodo, id_concepto, Pesos, id_plaza, Id_Referencia, id_periodoPago, Id_ProcesoNomina, Desde, Hasta from nom_pagos_hist where id_concepto in (select id_concepto from conceptos where tipo = 1)
) h on h.id_emp = a.id_emp and h.id_periodo = a.id_periodo 

select distinct
isnull(a.num,b.num) num, isnull(a.rfc,b.rfc) rfc, isnull(a.plaza,b.plaza) plaza, isnull(a.horas,b.horas) horas, isnull(a.categoria,b.categoria) categoria, isnull(a.desde,b.desde) desde, isnull(a.hasta,b.hasta) hasta, isnull(a.funcion, b.funcion) funcion, 
isnull(a.id_puesto,b.id_puesto) id_puesto, isnull(a.id_cm,b.id_cm) id_cm, 
isnull(a.id_npago,b.id_npago) id_npago, isnull(a.id_zona,b.id_zona) id_zona, isnull(a.modelo,b.modelo) modelo, isnull(a.tipo_mov,b.tipo_mov) tipo_mov, isnull(a.id_emp,b.id_emp) id_emp, isnull(a.id_plaza,b.id_plaza) id_plaza, isnull(a.desde_,b.desde_) desde_, 
isnull(a.hasta_,b.hasta_) hasta_, isnull(a.sueldo,b.sueldo) sueldo, 
isnull(a.aguinaldo,b.aguinaldo) aguinaldo, isnull(a.prima,b.prima) prima, isnull(a.DM,b.dm) dm, isnull(a.Cn,b.cn) cn, isnull(a.ap,b.ap) ap, isnull(a.bo,b.bo) bo, isnull(a.di, b.di) di, isnull(a.c88,b.c88) c88, isnull(a.qnas,b.qnas) qnas, isnull(a.id_cia,b.id_cia) id_cia, 
isnull(a.id_periodo, b.id_periodo) id_periodo, b.idplaza into #cruceplazasHist
from #EmpleadoPeriodo_ad a
full join #Empleadoplazaperiodo b on a.id_emp = b.id_emp and a.id_periodo = b.id_periodo and a.id_plaza = b.idplaza and a.num = b.num

--select *,replace(p.plazaieepo,'' '','''') plaza, replace(p.Categoria,'' '','''') catego,p.Horas 
update a set a.plaza = replace(p.plazaieepo,'' '',''''), a.horas = p.horas, a.categoria = replace(p.Categoria,'' '',''''), a.id_plaza = a.idplaza
from #cruceplazasHist a
inner join plazaieepo p on p.id_plaza = a.idplaza
where a.idplaza is not null

select *,dbo.FU_TTabulador_SE_CM(idplaza, dbo.anioquincenatofecha(hasta_,0), ''id_Tabulador_SE_CM'') cm into #registrosCCarrera
from #cruceplazasHist a where a.idplaza is not null and id_cm not in (1,2,3)

--select *,dbo.FU_TTabulador_SE_CM(idplaza, dbo.anioquincenatofecha(hasta_,0), ''id_Tabulador_SE_CM'') cm 
update a set a.id_cm = dbo.FU_TTabulador_SE_CM(idplaza, dbo.anioquincenatofecha(hasta_,0), ''id_Tabulador_SE_CM'')
from #cruceplazasHist a where a.idplaza is not null and num in (select num from #registrosCCarrera)

--select *,dbo.FU_TTabulador_SE_Cat_Puesto(idplaza, dbo.anioquincenatofecha(hasta_,0), ''id_Tabulador_SE_Cat_Puesto'') puesto
update a set a.id_puesto = dbo.FU_TTabulador_SE_Cat_Puesto(idplaza, dbo.anioquincenatofecha(hasta_,0), ''id_Tabulador_SE_Cat_Puesto'')
from #cruceplazasHist a where a.idplaza is not null and num in (select num from #registrosCCarrera)

delete from #cruceplazasHist where categoria = ''AB001''

--select *, dbo.FU_TTabulador_SE_Cat_Puesto(idplaza, dbo.anioquincenatofecha(hasta_,0), ''TModelo_SE_id_Modelo_SE'') modelo
update a set a.modelo = dbo.FU_TTabulador_SE_Cat_Puesto(idplaza, dbo.anioquincenatofecha(hasta_,0), ''TModelo_SE_id_Modelo_SE'')
from #cruceplazasHist a where a.idplaza is not null and num in (select num from #registrosCCarrera)

--select *, dbo.FU_TTabulador_SE_Nivel_Pago(idplaza, dbo.anioquincenatofecha(hasta_,0), ''id_Tabulador_SE_Nivel_Pago'') pago
update a set a.id_npago = dbo.FU_TTabulador_SE_Nivel_Pago(idplaza, dbo.anioquincenatofecha(hasta_,0), ''id_Tabulador_SE_Nivel_Pago'')
from #cruceplazasHist a where a.idplaza is not null and num in (select num from #registrosCCarrera)

--select *, dbo.FU_Tabulador_Zona(idplaza, dbo.anioquincenatofecha(hasta_,0)) zona
update a set a.id_zona = dbo.FU_Tabulador_Zona(idplaza, dbo.anioquincenatofecha(hasta_,0))
from #cruceplazasHist a where a.idplaza is not null and num in (select num from #registrosCCarrera)


update a set a.id_puesto = b.id_Tabulador_SE_Cat_Puesto 
-- select distinct a.*
from #cruceplazasHist a 
inner join TTabulador_SE_Cat_Puesto b on b.categoria like ''%''+rtrim(ltrim(a.CATEGORIA))+''%''  
where b.TModelo_SE_id_Modelo_SE in (1,2,3,4,5,6,7,8,9) and a.num not in (select num from #registrosCCarrera)

update #cruceplazasHist set id_puesto = dbo.FU_TTabulador_SE_Cat_Puesto(idplaza, getdate(), ''id_Tabulador_SE_Cat_Puesto'')
where idplaza is not null and num not in (select num from #registrosCCarrera) and dbo.FU_TTabulador_SE_Cat_Puesto(idplaza,getdate(), ''id_Tabulador_SE_Cat_Puesto'') is not null


update #cruceplazasHist set id_puesto = dbo.FU_TTabulador_SE_Cat_Puesto(id_plaza, getdate(), ''id_Tabulador_SE_Cat_Puesto'')
where idplaza is null and id_plaza <> 0 and num not in (select num from #registrosCCarrera)
and dbo.FU_TTabulador_SE_Cat_Puesto(id_plaza, getdate(), ''id_Tabulador_SE_Cat_Puesto'') is not null


update a set a.modelo = b.TModelo_SE_id_Modelo_SE 
-- select  *
from #cruceplazasHist a 
inner join TTabulador_SE_Cat_Puesto b on a.id_puesto = b.id_Tabulador_SE_Cat_Puesto 
where b.TModelo_SE_id_Modelo_SE in (1,2,3,4,5,6,7,8,9) and a.num not in (select num from #registrosCCarrera)

update #cruceplazasHist set id_cm = 1 where modelo = 7

update a set a.id_npago = b.pago, a.id_zona = b.zona 
--select distinct a.*
from #cruceplazasHist a 
inner join ut..ne_TabuladorCategorias b on a.id_CM = b.cm and a.id_puesto = b.puesto where a.num not in (select num from #registrosCCarrera)

update #cruceplazasHist set id_npago = 1, id_zona = 2 where id_puesto in (126,1316) and num not in (select num from #registrosCCarrera)

select *, ROW_NUMBER( ) OVER( order by num ) row into #tablasustituta from #cruceplazasHist
select * into #TablaAñoOriginal from #tablaAño

delete from #tablaAño

insert into #tablaAño
select row num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, 
id_emp, id_plaza, desde_, hasta_, sueldo, aguinaldo, prima, DM, Cn, ap, bo, di, c88, qnas
from #tablasustituta

end



--select distinct t.*, dbo.fechaToAnioQuincena(pe.fecha) qna into #QnaDesdePlaza from plazaempleados pe inner join (
--select id_emp, id_plaza, min(fecha) fecha from plazaempleados group by id_emp, id_plaza
--) h  on h.id_emp = pe.id_emp and h.id_plaza = pe.id_plaza and h.fecha = pe.fecha
--inner join #tablaAño t on t.id_emp = pe.id_emp and t.id_plaza = pe.id_plaza
--where pe.id_emp <> 0

select t.*, isnull(pe.qna,t.desde) qna into #QnaDesdePlaza
from #tablaAño t left join (
select distinct pe.*, dbo.fechaToAnioQuincena(pe.fecha) qna  
from plazaempleados pe inner join (
select id_emp, id_plaza, min(fecha) fecha from plazaempleados group by id_emp, id_plaza
) h  on h.id_emp = pe.id_emp and h.id_plaza = pe.id_plaza and h.fecha = pe.fecha
where pe.id_emp <> 0
) pe on t.id_emp = pe.id_emp and t.id_plaza = pe.id_plaza

if(@tPlaza = ''Asc'')
begin

select a.*, isnull(e.id_cia,0) id_cia, isnull(c.id_periodo,0) id_periodo into #EmpleadoPeriodo_antig
from #QnaDesdePlaza a
left join empleados e on e.id_emp = a.id_emp
left join calennomina c on dbo.fechatoanioquincena(c.fechaini) = a.hasta_ and c.id_cia = e.id_cia and c.parcial = 0 and c.numero <= 24 and a.hasta_ <> '''' and a.id_emp <> 0

select distinct a.*, h.id_plaza idplaza into #Empleadoplazaperiodo_antig 
from #EmpleadoPeriodo_antig a
inner join (
select Id_Emp, case when id_periodopago = 0 then Id_Periodo else id_periodopago end id_periodo, id_concepto, Pesos, id_plaza, Id_Referencia, id_periodoPago, Id_ProcesoNomina, Desde, Hasta from nom_histpagos where id_concepto in (select id_concepto from conceptos where tipo = 1)
union all
select Id_Emp, case when id_periodopago = 0 then Id_Periodo else id_periodopago end id_periodo, id_concepto, Pesos, id_plaza, Id_Referencia, id_periodoPago, Id_ProcesoNomina, Desde, Hasta from nom_pagos_hist where id_concepto in (select id_concepto from conceptos where tipo = 1)
) h on h.id_emp = a.id_emp and h.id_periodo = a.id_periodo 

select t.*, dbo.fechaToAnioQuincena(pe.fecha) qnaAntig into #desdeAntiguedad from #Empleadoplazaperiodo_antig t
inner join (
select distinct pe.*, dbo.fechaToAnioQuincena(pe.fecha) qna  
from plazaempleados pe inner join (
select id_emp, id_plaza, min(fecha) fecha from plazaempleados group by id_emp, id_plaza
) h  on h.id_emp = pe.id_emp and h.id_plaza = pe.id_plaza and h.fecha = pe.fecha
where pe.id_emp <> 0
) pe on t.id_emp = pe.id_emp and t.idplaza = pe.id_plaza

update a set a.qna = b.qnaAntig
from #QnaDesdePlaza a inner join (
select num,rfc, min(qnaAntig) qnaAntig from #desdeAntiguedad group by num,rfc
) b on a.num = b.num

end


update a set a.qnas =
 a.qnas-(case when (@año+(select case when @año = ''2012'' or @año = ''2014'' or @año = ''2015'' or @año = ''2017'' or @año = ''2019'' then ''07'' when @año = ''2013'' or @año = ''2016'' or @año = ''2018'' then ''06'' else ''06'' end) between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(b.qna,a.desde) > a.desde then a.desde else isnull(b.qna,a.desde) end, @año+(select case when @año = ''2012'' or @año = ''2014'' or @año = ''2015'' or @año = ''2017'' or @año = ''2019'' then ''07'' when @año = ''2013'' or @año = ''2016'' or @año = ''2018'' then ''06'' else ''06'' end)) < 12) then 1 else 0 end+
case when @año+''14'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(b.qna,a.desde) > a.desde then a.desde else isnull(b.qna,a.desde) end, @año+''14'') <= 7  then 1 else 0 end+
case when @año+''15'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(b.qna,a.desde) > a.desde then a.desde else isnull(b.qna,a.desde) end, @año+''15'') <= 9 then 1 else 0 end+
case when @año+''24'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(b.qna,a.desde) > a.desde then a.desde else isnull(b.qna,a.desde) end, @año+''24'') < 12 then 1 else 0 end)
from #tablaAño a
left join #QnaDesdePlaza b on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
where a.qnas > 0


update #tablaAño set sueldo = 2514.50 * qnas where CATEGORIA = ''AB001'' and (funcion = ''DOCENTE'' or funcion like ''%MAESTRO%'' or funcion like ''%DOCENTE%'') and qnas > 0
update #tablaAño set sueldo = 2117.00 * qnas where CATEGORIA = ''AB001'' and (funcion = ''ADMINISTRATIVO'' or funcion like ''%ADMINISTRATIVO%'' or funcion like ''%SERVICIO%'' ) and qnas > 0

declare @fecha datetime = @año+''/12/31''

 select a.*, c.resultado, c.nombre,c.tipo 
   into #ne_TabuladorCosteo
    from valoresmatriz4 a WITH(NOLOCK)
    inner join (
      select max(fecha) Fecha, id_Tabulador_SE_Cat_Puesto, id_Tabulador_SE_CM, id_Tabulador_SE_Nivel_Pago, id_Tabulador_SE_Zona
      from valoresmatriz4 a WITH(NOLOCK) where fecha <= @fecha and id_concepto not in (1221,1222,1223,1224,1225,1225,1226,1227) group by 
      id_Tabulador_SE_Cat_Puesto, id_Tabulador_SE_CM, id_Tabulador_SE_Nivel_Pago, id_Tabulador_SE_Zona
    ) b on a.fecha = b.Fecha and
    a.id_Tabulador_SE_Cat_Puesto = b.id_Tabulador_SE_Cat_Puesto and a.id_Tabulador_SE_CM = b.id_Tabulador_SE_CM and 
    a.id_Tabulador_SE_Nivel_Pago = b.id_Tabulador_SE_Nivel_Pago and a.id_Tabulador_SE_Zona = b.id_Tabulador_SE_Zona
    inner join conceptos c WITH(NOLOCK) on c.id_concepto = a.id_concepto
    where a.id_concepto not in (1221,1222,1223,1224,1225,1225,1226,1227)
    
    insert into #ne_TabuladorCosteo
    select a.*, c.resultado, c.nombre,c.tipo from ValoresMatriz8 a WITH(NOLOCK)
    inner join (
      select max(fecha) Fecha, id_Tabulador_SE_Cat_Puesto, id_Tabulador_SE_CM, id_Tabulador_SE_Nivel_Pago, id_Tabulador_SE_Zona
      from ValoresMatriz8 WITH(NOLOCK) where fecha <= @fecha group by 
      id_Tabulador_SE_Cat_Puesto, id_Tabulador_SE_CM, id_Tabulador_SE_Nivel_Pago, id_Tabulador_SE_Zona
    ) b on a.fecha = b.Fecha and
    a.id_Tabulador_SE_Cat_Puesto = b.id_Tabulador_SE_Cat_Puesto and a.id_Tabulador_SE_CM = b.id_Tabulador_SE_CM and 
    a.id_Tabulador_SE_Nivel_Pago = b.id_Tabulador_SE_Nivel_Pago and a.id_Tabulador_SE_Zona = b.id_Tabulador_SE_Zona
    inner join conceptos c WITH(NOLOCK) on c.id_concepto = a.id_concepto    
    
 delete from #ne_TabuladorCosteo where  id_Tabulador_SE_Cat_Puesto in (select id_Tabulador_SE_Cat_Puesto from TTabulador_SE_Cat_Puesto WITH(NOLOCK) where TModelo_SE_id_Modelo_SE  = 10)
    and id_concepto in (1306,1701)

delete #ne_TabuladorCosteo where id_concepto in (1201,1202,1203)

    select a.num,a.rfc,a.plaza,a.horas,a.categoria,a.desde,a.hasta,a.funcion,a.id_puesto,a.id_cm,a.id_npago,a.id_zona,a.modelo,a.tipo_mov, a.id_emp, a.id_plaza, a.desde_, a.hasta_, a.qnas, b.id_concepto, b.resultado, b.Valor
    into #ne_ConceptosCosteoTotales
    from #tablaAño a WITH(NOLOCK)
    left join  #ne_TabuladorCosteo b WITH(NOLOCK) on a.id_puesto = b.id_Tabulador_SE_Cat_Puesto and a.id_CM= b.id_Tabulador_SE_CM and a.id_NPago = b.id_Tabulador_SE_Nivel_Pago 
    and a.id_Zona = b.id_Tabulador_SE_Zona
    where a.modelo in (1,2,3,4,5,6,7,9) and a.desde_ <> ''''

 insert into #ne_ConceptosCosteoTotales ( num,rfc,plaza,horas,categoria,desde,hasta,funcion,id_puesto,id_cm,id_npago,id_zona,modelo,tipo_mov, id_emp, id_plaza,desde_,hasta_,qnas,
 id_concepto,resultado,Valor)
    select num,rfc,plaza,horas,categoria,desde,hasta,funcion,id_puesto,id_cm,id_npago,id_zona,modelo,tipo_mov, id_emp, id_plaza,desde_,hasta_,qnas,
    1558 id_concepto,''HT'' resultado,143.74 Valor
 from #tablaAño WITH(NOLOCK) where modelo in (5,6,2,9) and qnas > 0
 
update #ne_ConceptosCosteoTotales set valor = 3.59 where id_concepto = 1558 and horas/10 <> 0 and modelo in (5,6,2,9)

if (@año = ''2012'')
begin
 insert into #ne_ConceptosCosteoTotales (num,rfc,plaza,horas,categoria,desde,hasta,funcion,id_puesto,id_cm,id_npago,id_zona,modelo,tipo_mov, id_emp, id_plaza,desde_,hasta_,qnas,
 id_concepto,resultado,Valor)
 select num,rfc,plaza,horas,categoria,desde,hasta,funcion,id_puesto,id_cm,id_npago,id_zona,modelo,tipo_mov, id_emp, id_plaza,desde_,hasta_,qnas, 1306 id_concepto,''38'' resultado,314 Valor
    from #tablaAño  WITH(NOLOCK) where modelo in (2,5,6) and qnas > 0
end

if (@año = ''2013'' or @año = ''2014'')
begin
 insert into #ne_ConceptosCosteoTotales (num,rfc,plaza,horas,categoria,desde,hasta,funcion,id_puesto,id_cm,id_npago,id_zona,modelo,tipo_mov, id_emp, id_plaza,desde_,hasta_,qnas,
 id_concepto,resultado,Valor)
 select num,rfc,plaza,horas,categoria,desde,hasta,funcion,id_puesto,id_cm,id_npago,id_zona,modelo,tipo_mov, id_emp, id_plaza,desde_,hasta_,qnas, 1306 id_concepto,''38'' resultado,771 Valor
    from #tablaAño  WITH(NOLOCK) where modelo in (2,5,6) and qnas > 0
end
if (@año = ''2015'' or @año = ''2016'')
begin
 insert into #ne_ConceptosCosteoTotales (num,rfc,plaza,horas,categoria,desde,hasta,funcion,id_puesto,id_cm,id_npago,id_zona,modelo,tipo_mov, id_emp, id_plaza,desde_,hasta_,qnas,
 id_concepto,resultado,Valor)
 select num,rfc,plaza,horas,categoria,desde,hasta,funcion,id_puesto,id_cm,id_npago,id_zona,modelo,tipo_mov, id_emp, id_plaza,desde_,hasta_,qnas, 1306 id_concepto,''38'' resultado,931 Valor
    from #tablaAño  WITH(NOLOCK) where modelo in (2,5,6) and qnas > 0
end
if (@año = ''2017'' or @año = ''2018'')
begin
     insert into #ne_ConceptosCosteoTotales (num,rfc,plaza,horas,categoria,desde,hasta,funcion,id_puesto,id_cm,id_npago,id_zona,modelo,tipo_mov, id_emp, id_plaza,desde_,hasta_,qnas,
 id_concepto,resultado,Valor)
 select num,rfc,plaza,horas,categoria,desde,hasta,funcion,id_puesto,id_cm,id_npago,id_zona,modelo,tipo_mov, id_emp, id_plaza,desde_,hasta_,qnas, 1306 id_concepto,''38'' resultado,1091 Valor
    from #tablaAño  WITH(NOLOCK) where modelo in (2,5,6) and qnas > 0
end

if (@año = ''2019'')
begin
     insert into #ne_ConceptosCosteoTotales (num,rfc,plaza,horas,categoria,desde,hasta,funcion,id_puesto,id_cm,id_npago,id_zona,modelo,tipo_mov, id_emp, id_plaza,desde_,hasta_,qnas,
 id_concepto,resultado,Valor)
 select num,rfc,plaza,horas,categoria,desde,hasta,funcion,id_puesto,id_cm,id_npago,id_zona,modelo,tipo_mov, id_emp, id_plaza,desde_,hasta_,qnas, 1306 id_concepto,''38'' resultado,1255 Valor
    from #tablaAño  WITH(NOLOCK) where modelo in (2,5,6) and qnas > 0
end

update #ne_ConceptosCosteoTotales set Valor = 23.28 where  modelo in (2,5,6) and id_concepto = 1306 and horas/10 <> 0

update #ne_ConceptosCosteoTotales set valor = valor * cast(horas/10 as float) where horas/10 <> 0      


---

delete #ne_ConceptosCosteoTotales where tipo_mov in (''24'',''25'') and id_concepto <> 1701

alter table #ne_ConceptosCosteoTotales add tipo int
update #ne_ConceptosCosteoTotales set tipo = 1

--inicia quinquenios

select a.*, e.id_cia, c.id_periodo into #EmpleadoPeriodo from #tablaAño a
inner join empleados e on e.id_emp = a.id_emp
inner join calennomina c on dbo.fechatoanioquincena(c.fechaini) = a.hasta_ and c.id_cia = e.id_cia and c.parcial = 0 and c.numero <= 24
where a.hasta_ <> '''' and a.id_emp <> 0 --and a.id_plaza <> 0


if(@tPlaza = ''AD'')
begin

select distinct a.*, h.id_plaza idplaza, h.id_concepto,case when h.cc = '''' then c.resultado else h.cc end quinquenio, h.pesos into #EmpleadoplazaQ_An
from #EmpleadoPeriodo a
inner join (
select Id_Emp, case when id_periodopago = 0 then Id_Periodo else id_periodopago end id_periodo, id_concepto, Pesos, id_plaza, Id_Referencia, id_periodoPago, Id_ProcesoNomina, Desde, Hasta, cc from nom_histpagos where id_concepto in (1323,1324,1325,1326,1327,1400,1401,1402,1403,1404,1328,1518)
union all
select Id_Emp, case when id_periodopago = 0 then Id_Periodo else id_periodopago end id_periodo, id_concepto, Pesos, id_plaza, Id_Referencia, id_periodoPago, Id_ProcesoNomina, Desde, Hasta, cc from nom_pagos_hist where id_concepto in (1323,1324,1325,1326,1327,1400,1401,1402,1403,1404,1328,1518)
) h on h.id_emp = a.id_emp and h.id_periodo = a.id_periodo and h.id_plaza = a.id_plaza 
inner join conceptos c on c.id_concepto = h.id_concepto

select num,rfc,plaza,horas,categoria,desde,hasta,funcion,id_puesto,id_cm,id_npago,id_zona,modelo,tipo_mov,id_emp,id_plaza,desde_,hasta_,sueldo,aguinaldo,
prima,DM,Cn,ap,bo,di,c88,qnas,id_cia,id_periodo,idplaza,max(id_concepto) id_concepto,max(quinquenio) quinquenio, sum(pesos) pesos into #QuinquenioBase
from #EmpleadoplazaQ_An 
group by num,rfc,plaza,horas,categoria,desde,hasta,funcion,id_puesto,id_cm,id_npago,id_zona,modelo,tipo_mov,id_emp,id_plaza,desde_,hasta_,sueldo,aguinaldo,
prima,DM,Cn,ap,bo,di,c88,qnas,id_cia,id_periodo,idplaza

delete from #QuinquenioBase where pesos <= 0

insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, id_concepto,quinquenio resultado, (pesos * 2),1 tipo from #QuinquenioBase

end
else
begin

select distinct a.*, h.id_plaza idplaza, h.id_concepto,case when h.cc = '''' then c.resultado else h.cc end quinquenio into #EmpleadoplazaQuinquenio 
from #EmpleadoPeriodo a
inner join (
select Id_Emp, case when id_periodopago = 0 then Id_Periodo else id_periodopago end id_periodo, id_concepto, Pesos, id_plaza, Id_Referencia, id_periodoPago, Id_ProcesoNomina, Desde, Hasta, cc from nom_histpagos where id_concepto in (1323,1324,1325,1326,1327,1400,1401,1402,1403,1404,1328,1518)
union all
select Id_Emp, case when id_periodopago = 0 then Id_Periodo else id_periodopago end id_periodo, id_concepto, Pesos, id_plaza, Id_Referencia, id_periodoPago, Id_ProcesoNomina, Desde, Hasta, cc from nom_pagos_hist where id_concepto in (1323,1324,1325,1326,1327,1400,1401,1402,1403,1404,1328,1518)
) h on h.id_emp = a.id_emp and h.id_periodo = a.id_periodo 
inner join conceptos c on c.id_concepto = h.id_concepto
where  h.id_plaza <> a.id_plaza 
and h.id_plaza in (select id_plaza from plazaieepo where replace(''07''+substring(plazaieepo,3,len(plazaieepo)), '' '','''') in (
select codigo_plaza from hplazas_concifed_230217 where ESTATUS <> ''C''
))

select *,dbo.FU_TTabulador_SE_Cat_Puesto(idplaza, dbo.anioquincenatofecha(hasta_,0), ''TModelo_SE_id_Modelo_SE'') modeloBase into #EmpPlazaQuinBaseMod
from #EmpleadoplazaQuinquenio

select a.*, quinquenio, b.id_concepto into #registroconquin from #EmpleadoPeriodo a inner join (
select a.num,a.id_periodo,a.modelobase,b.quinquenio,max(a.id_concepto) id_concepto from #EmpPlazaQuinBaseMod a inner join (
select num, id_periodo, modelobase,max(quinquenio) quinquenio from #EmpPlazaQuinBaseMod group by num, id_periodo, modelobase
) b on a.num = b.num and a.quinquenio = b.quinquenio and a.id_periodo = b.id_periodo and a.modelobase = b.modelobase
group by a.num,a.id_periodo,a.modelobase,b.quinquenio
) b on a.num = b.num and a.id_periodo = b.id_periodo and a.modelo = b.modelobase

--A
select a.*, (case when a.horas = ''000'' then (b.valor/30)*15 else ((b.valor/30)*15)* a.horas/10 end) * 2 valor into #quinquenioaA1A5
from #registroconquin a
inner join #ne_Tabulador5 b on a.id_concepto = b.id_concepto
and id_puesto = b.id_Tabulador_SE_Cat_Puesto and a.id_cm = b.id_Tabulador_SE_CM and a.id_npago = b.id_Tabulador_SE_Nivel_Pago and a.id_zona = b.id_Tabulador_SE_Zona
where a.id_concepto in (1323,1324,1325,1326,1327) and a.modelo = 3 

insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, id_concepto,quinquenio resultado, Valor,1 tipo from #quinquenioaA1A5

--Q
select a.*, (case when a.horas = ''000'' then (b.valor/30)*15 else ((b.valor/30)*15)* a.horas/10 end) * 2 valor into #quinquenioaQ1Q5_1
from #registroconquin a
inner join #ne_Tabulador5 b on a.id_concepto = b.id_concepto
and id_puesto = b.id_Tabulador_SE_Cat_Puesto and a.id_cm = b.id_Tabulador_SE_CM and a.id_npago = b.id_Tabulador_SE_Nivel_Pago and a.id_zona = b.id_Tabulador_SE_Zona
where a.id_concepto in (1400,1401,1402,1403,1404) and a.modelo in (1,4) and ( 
(a.id_cm in (4,5,6,7,8,9) and a.id_zona = 2 and a.categoria in (''E0281'',''E0181'',''E1485'','' E0289'','' E1461'', ''E1489'')) or
(a.id_cm in (3,4,5,6,7,8,9) and a.id_zona = 2 and a.categoria not in (''E0281'',''E0181'',''E1485'','' E0289'','' E1461'', ''E1489'')) or
(a.id_cm in (3,4,5,6,7,8,9) and a.id_zona = 3 )
)

insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, id_concepto,quinquenio resultado, Valor,1 tipo from #quinquenioaQ1Q5_1


select *,case when id_concepto = 1400 then 1240 when id_concepto = 1401 then 1241 when id_concepto = 1402 then 1242 when id_concepto = 1403 then 1243 
when id_concepto = 1404 then 1244 else 0 end sustituto into #registroconquin_sus  from #registroconquin

select a.*, (case when a.horas = ''000'' then (b.valor/30)*15 else ((b.valor/30)*15)* a.horas/10 end) * 2 valor into #quinquenioaQ1Q5_2
from #registroconquin_sus a
inner join #ne_Tabulador5 b on a.sustituto = b.id_concepto
and id_puesto = b.id_Tabulador_SE_Cat_Puesto and a.id_cm = b.id_Tabulador_SE_CM and a.id_npago = b.id_Tabulador_SE_Nivel_Pago and a.id_zona = b.id_Tabulador_SE_Zona
where a.id_concepto in (1400,1401,1402,1403,1404) and a.modelo in (1,4) and a.id_cm in (3) and a.id_zona = 2 and a.categoria in (''E0281'' , ''E0181'' , ''E1485'' , ''E0289'' , ''E1461'' , ''E1489'')

insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, id_concepto,quinquenio resultado, Valor,1 tipo from #quinquenioaQ1Q5_2


-- AA PA QA

select a.num, a.rfc, a.plaza, a.horas, a.categoria, a.desde, a.hasta, a.funcion, a.id_puesto, a.id_cm, a.id_npago, a.id_zona, a.modelo, 
a.tipo_mov, a.id_emp, a.id_plaza, a.desde_, a.hasta_, a.sueldo, a.aguinaldo, a.prima, a.DM, a.Cn, a.ap, a.bo, a.di, a.c88, a.qnas, a.id_cia, 
a.id_periodo, a.quinquenio, a.id_concepto, b.Clave, round(sum(c.Valor)*(porcentaje/100),2) valor
into #quinquenioAAQA_1
from #registroconquin a
inner join (select distinct clave, porcentaje from TQuinquenios_docentes) b on a.quinquenio = b.clave
inner join #ne_ConceptosCosteoTotales c on c.num = a.num
where a.id_concepto in (1328) and a.modelo in (5,6) and c.resultado in (''07'',''7A'',''7B'',''7C'',''7D'',''7E'',''BC'')
group by a.num, a.rfc, a.plaza, a.horas, a.categoria, a.desde, a.hasta, a.funcion, a.id_puesto, a.id_cm, a.id_npago, a.id_zona, a.modelo, 
a.tipo_mov, a.id_emp, a.id_plaza, a.desde_, a.hasta_, a.sueldo, a.aguinaldo, a.prima, a.DM, a.Cn, a.ap, a.bo, a.di, a.c88, a.qnas, a.id_cia, 
a.id_periodo, a.quinquenio, a.id_concepto, b.Clave,b.porcentaje

insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, id_concepto,quinquenio resultado, Valor,1 tipo from #quinquenioAAQA_1

select a.num, a.rfc, a.plaza, a.horas, a.categoria, a.desde, a.hasta, a.funcion, a.id_puesto, a.id_cm, a.id_npago, a.id_zona, a.modelo, 
a.tipo_mov, a.id_emp, a.id_plaza, a.desde_, a.hasta_, a.sueldo, a.aguinaldo, a.prima, a.DM, a.Cn, a.ap, a.bo, a.di, a.c88, a.qnas, a.id_cia, 
a.id_periodo, a.quinquenio, a.id_concepto, b.Clave, round(sum(c.Valor)*(porcentaje/100),2) valor
into #quinquenioAAQA_2
from #registroconquin a
inner join (select distinct clave, porcentaje from TQuinquenios_docentes) b on a.quinquenio = b.clave
inner join #ne_ConceptosCosteoTotales c on c.num = a.num
where a.id_concepto in (1328) and a.modelo in (2,9) and c.resultado in (''07'',''7A'',''7B'',''7C'',''7D'',''7E'',''BC'',''DR'')
group by a.num, a.rfc, a.plaza, a.horas, a.categoria, a.desde, a.hasta, a.funcion, a.id_puesto, a.id_cm, a.id_npago, a.id_zona, a.modelo, 
a.tipo_mov, a.id_emp, a.id_plaza, a.desde_, a.hasta_, a.sueldo, a.aguinaldo, a.prima, a.DM, a.Cn, a.ap, a.bo, a.di, a.c88, a.qnas, a.id_cia, 
a.id_periodo, a.quinquenio, a.id_concepto, b.Clave,b.porcentaje

insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, id_concepto,quinquenio resultado, Valor,1 tipo from #quinquenioAAQA_2

if (@año+''''+@qna >= ''201702'')
begin
select a.num, a.rfc, a.plaza, a.horas, a.categoria, a.desde, a.hasta, a.funcion, a.id_puesto, a.id_cm, a.id_npago, a.id_zona, a.modelo, 
a.tipo_mov, a.id_emp, a.id_plaza, a.desde_, a.hasta_, a.sueldo, a.aguinaldo, a.prima, a.DM, a.Cn, a.ap, a.bo, a.di, a.c88, a.qnas, a.id_cia, 
a.id_periodo, a.quinquenio, a.id_concepto, b.Clave, round(sum(c.Valor)*(porcentaje/100),2) valor
 into #quinquenioUPN_1
from #registroconquin a
inner join (select distinct clave, porcentaje from TQuinquenios_docentes) b on a.quinquenio = b.clave
inner join #ne_ConceptosCosteoTotales c on c.num = a.num
where a.id_concepto in (1518) and a.modelo in (7) and c.id_concepto in (1510,1582)
group by a.num, a.rfc, a.plaza, a.horas, a.categoria, a.desde, a.hasta, a.funcion, a.id_puesto, a.id_cm, a.id_npago, a.id_zona, a.modelo, 
a.tipo_mov, a.id_emp, a.id_plaza, a.desde_, a.hasta_, a.sueldo, a.aguinaldo, a.prima, a.DM, a.Cn, a.ap, a.bo, a.di, a.c88, a.qnas, a.id_cia, 
a.id_periodo, a.quinquenio, a.id_concepto, b.Clave,b.porcentaje

insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, id_concepto,quinquenio resultado, Valor,1 tipo from #quinquenioUPN_1
end
else
begin

select a.*, dbo.anioquincenatofecha(hasta_,0) fechaini,r.Fecha_Alta_Rama, p.ttipo_servicio_se_id_tipo_servicio_se servicio, p.tsubsistema_se_id_subsistema_se subsistema into #tQUPN_1
from #registroconquin a
inner join (
select a.* from hfecha_alta_rama a inner join (
select id_emp, max(fecha) fecha from hfecha_alta_rama where fecha <= getdate() group by id_emp
) b on a.id_emp = b.id_emp and a.fecha = b.fecha
) r on r.id_emp = a.id_emp
inner join ttabulador_se_cat_puesto p on p.id_tabulador_se_cat_puesto = a.id_puesto

select *, (year(fechaini) - year(Fecha_Alta_Rama)) - (     case when (month(Fecha_Alta_Rama)*2- case when day(Fecha_Alta_Rama) >= 16 then 0 else 1 end) > 
(month(fechaini)*2- case when day(fechaini) >= 16 then 0 else 1 end) then 1 else 0 end ) añosserv into #tQUPN_2
from #tQUPN_1

select a.num, a.rfc, a.plaza, a.horas, a.categoria, a.desde, a.hasta, a.funcion, a.id_puesto, a.id_cm, a.id_npago, a.id_zona, a.modelo, 
a.tipo_mov, a.id_emp, a.id_plaza, a.desde_, a.hasta_, a.sueldo, a.aguinaldo, a.prima, a.DM, a.Cn, a.ap, a.bo, a.di, a.c88, a.qnas, a.id_cia, 
a.id_periodo, a.quinquenio, a.id_concepto, a.quinquenio resultado, (((2 * a.añosserv) * ((sum(c.Valor)/2)/100)))*2 valor
 into #quinquenioUPN_9_1
from #tQUPN_2 a
inner join #ne_ConceptosCosteoTotales c on c.num = a.num
where a.id_concepto in (1518) and a.modelo in (7) and a.servicio = ''7'' and a.[añosserv] >= 5 and a.[añosserv] <= 20 and a.subsistema = 12 and c.id_concepto in (1510)
group by a.num, a.rfc, a.plaza, a.horas, a.categoria, a.desde, a.hasta, a.funcion, a.id_puesto, a.id_cm, a.id_npago, a.id_zona, a.modelo, 
a.tipo_mov, a.id_emp, a.id_plaza, a.desde_, a.hasta_, a.sueldo, a.aguinaldo, a.prima, a.DM, a.Cn, a.ap, a.bo, a.di, a.c88, a.qnas, a.id_cia, 
a.id_periodo, a.quinquenio, a.id_concepto,a.añosserv

insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, id_concepto,quinquenio resultado, Valor,1 tipo from #quinquenioUPN_9_1

select a.num, a.rfc, a.plaza, a.horas, a.categoria, a.desde, a.hasta, a.funcion, a.id_puesto, a.id_cm, a.id_npago, a.id_zona, a.modelo, 
a.tipo_mov, a.id_emp, a.id_plaza, a.desde_, a.hasta_, a.sueldo, a.aguinaldo, a.prima, a.DM, a.Cn, a.ap, a.bo, a.di, a.c88, a.qnas, a.id_cia, 
a.id_periodo, a.quinquenio, a.id_concepto, a.quinquenio resultado,a.añosserv,
(case when a.[añosserv] > 30 then ( ( ( 2 * 20 ) + ( 2.5 * ( 30 - 20 ) ) ) / 100 ) * (sum(c.Valor)/2) else ( ( ( 2 * 20 ) + ( 2.5 * ( a.[añosserv] - 20 ) ) ) / 100 ) * ( (sum(c.Valor)/2) )
end) * 2 valor into #quinquenioUPN_9_2
from #tQUPN_2 a
inner join #ne_ConceptosCosteoTotales c on c.num = a.num
where a.id_concepto in (1518) and a.modelo in (7) and a.servicio = ''7'' and a.[añosserv] >= 21 and a.subsistema = 12 and c.id_concepto in (1510)
group by a.num, a.rfc, a.plaza, a.horas, a.categoria, a.desde, a.hasta, a.funcion, a.id_puesto, a.id_cm, a.id_npago, a.id_zona, a.modelo, 
a.tipo_mov, a.id_emp, a.id_plaza, a.desde_, a.hasta_, a.sueldo, a.aguinaldo, a.prima, a.DM, a.Cn, a.ap, a.bo, a.di, a.c88, a.qnas, a.id_cia, 
a.id_periodo, a.quinquenio, a.id_concepto,a.añosserv

insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, id_concepto,quinquenio resultado, Valor,1 tipo from #quinquenioUPN_9_2


select a.num, a.rfc, a.plaza, a.horas, a.categoria, a.desde, a.hasta, a.funcion, a.id_puesto, a.id_cm, a.id_npago, a.id_zona, a.modelo, 
a.tipo_mov, a.id_emp, a.id_plaza, a.desde_, a.hasta_, a.sueldo, a.aguinaldo, a.prima, a.DM, a.Cn, a.ap, a.bo, a.di, a.c88, a.qnas, a.id_cia, 
a.id_periodo, a.quinquenio, a.id_concepto, a.quinquenio resultado, (((1.9 * a.añosserv) * ((sum(c.Valor)/2)/100)))*2 valor
 into #quinquenioUPN_9_3
from #tQUPN_2 a
inner join #ne_ConceptosCosteoTotales c on c.num = a.num
where a.id_concepto in (1518) and a.modelo in (7) and a.servicio <> ''7'' and a.[añosserv] >= 5 and a.[añosserv] <= 20 and a.subsistema = 12 and c.id_concepto in (1510,1582)
group by a.num, a.rfc, a.plaza, a.horas, a.categoria, a.desde, a.hasta, a.funcion, a.id_puesto, a.id_cm, a.id_npago, a.id_zona, a.modelo, 
a.tipo_mov, a.id_emp, a.id_plaza, a.desde_, a.hasta_, a.sueldo, a.aguinaldo, a.prima, a.DM, a.Cn, a.ap, a.bo, a.di, a.c88, a.qnas, a.id_cia, 
a.id_periodo, a.quinquenio, a.id_concepto,a.añosserv

insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, id_concepto,quinquenio resultado, Valor,1 tipo from #quinquenioUPN_9_3


select a.num, a.rfc, a.plaza, a.horas, a.categoria, a.desde, a.hasta, a.funcion, a.id_puesto, a.id_cm, a.id_npago, a.id_zona, a.modelo, 
a.tipo_mov, a.id_emp, a.id_plaza, a.desde_, a.hasta_, a.sueldo, a.aguinaldo, a.prima, a.DM, a.Cn, a.ap, a.bo, a.di, a.c88, a.qnas, a.id_cia, 
a.id_periodo, a.quinquenio, a.id_concepto, a.quinquenio resultado,a.añosserv,
(case when a.[añosserv] > 30 then ( ( ( 1.9 * 20 ) + ( 2.4 * ( 30 - 20 ) ) ) / 100 ) * (sum(c.Valor)/2) else ( ( ( 1.9 * 20 ) + ( 2.4 * ( a.[añosserv] - 20 ) ) ) / 100 ) * ( (sum(c.Valor)/2) )
end) * 2 valor into #quinquenioUPN_9_4
from #tQUPN_2 a
inner join #ne_ConceptosCosteoTotales c on c.num = a.num
 where a.id_concepto in (1518) and a.modelo in (7) and a.servicio <> ''7'' and a.[añosserv] >= 21 and a.subsistema = 12 and c.id_concepto in (1510,1582)
group by a.num, a.rfc, a.plaza, a.horas, a.categoria, a.desde, a.hasta, a.funcion, a.id_puesto, a.id_cm, a.id_npago, a.id_zona, a.modelo, 
a.tipo_mov, a.id_emp, a.id_plaza, a.desde_, a.hasta_, a.sueldo, a.aguinaldo, a.prima, a.DM, a.Cn, a.ap, a.bo, a.di, a.c88, a.qnas, a.id_cia, 
a.id_periodo, a.quinquenio, a.id_concepto,a.añosserv


insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, id_concepto,quinquenio resultado, Valor,1 tipo from #quinquenioUPN_9_4

end

end
-- fin quinquenios


select num,rfc,plaza,horas,categoria,desde,hasta,funcion,id_puesto,id_cm,id_npago,id_zona,modelo,tipo_mov, id_emp, id_plaza,desde_,hasta_,qnas, sum(Valor) montoMensual
into #ne_ValorMensualPlaza
from #ne_ConceptosCosteoTotales 
group by num,rfc,plaza,horas,categoria,desde,hasta,funcion,id_puesto,id_cm,id_npago,id_zona,modelo,tipo_mov, id_emp, id_plaza,desde_,hasta_,qnas

--sueldo
  update a set a.sueldo = ( a.qnas / 2) * b.montomensual
from #tablaAño a
inner join #ne_ValorMensualPlaza b on b.num = a.num

-- aguinaldo

   UPDATE A SET a.aguinaldo =  round((cast(a.qnas as float) / 2) * b.pesos,2)
    from #tablaAño a inner join (
    select num, ((sum(valor)/30) * 90)/12 pesos 
    from #ne_ConceptosCosteoTotales a
    where a.id_concepto in (1702,1703,1705,1706,1707,1704,1701,1300,1301,1302,1318,1319,1320,1321,1322,1353,1354,1400,1401,1402,1403,1404,1359,1360,1361,1362,1363,1364,1454,1433,1545,1546,1358,1377,1477,1378,200,201,202,203,204,230,102,205,206,207,208,209,231,103,210,211,212,213,214,232,104,215,216,217,218,219,233,105,220,221,222,223,224,234,106,225,226,227,228,229,235,107)
    and a.Modelo in (1,4) 
    group by num
    ) b on b.num = a.num 
    where a.categoria not like ''%AB001%''

    UPDATE A SET a.aguinaldo = round((cast(a.qnas as float) / 2) * b.pesos,2)
    from #tablaAño a inner join (
    select num, ((sum(valor)/30) * 90)/12 pesos 
    from #ne_ConceptosCosteoTotales a
    where a.id_concepto in (1702,1703,1705,1706,1707,1704,1701,1300,1301,1302,1353,1557)
    and a.Modelo in (3) 
    group by num
    ) b on  b.num = a.num 
    where a.categoria not like ''%AB001%''
    
   UPDATE A SET a.aguinaldo =  case when (cast(a.qnas as float) / 2) >= 6 then b.pesos else  (cast(a.qnas as float) / 2) * (b.pesos/12) end
    from #tablaAño a inner join (
    select num, ((sum(valor)/30) * 90) pesos from #ne_ConceptosCosteoTotales a
    where a.id_concepto in (1300,1301,1302,1328,1365,1701,1702,1703,1705,1706,1707,1704)
    and a.Modelo in (5,6) 
   group by num
    ) b on  b.num = a.num 
    where a.categoria not like ''%AB001%''

    UPDATE A SET a.aguinaldo = case when (cast(a.qnas as float) / 2) >= 6 then b.pesos else  (cast(a.qnas as float) / 2) * (b.pesos/12) end
    from #tablaAño a inner join (
    select num, ((sum(valor)/30) * 90) pesos from #ne_ConceptosCosteoTotales a
    where a.id_concepto in (1702,1703,1705,1706,1707,1704,1701,1300,1301,1302,1557,1328)
    and a.Modelo in (2,9) 
    group by num
    ) b on  b.num = a.num 
    where a.categoria not like ''%AB001%''

    UPDATE A SET a.aguinaldo = round((cast(a.qnas as float) / 2) * b.pesos,2)
    from #tablaAño a inner join (
    select num, ((sum(valor)/30) * 90)/12 pesos 
    from #ne_ConceptosCosteoTotales a
    where a.id_concepto in (1510,1518,1582,1578)
    and a.Modelo in (7) 
    group by num
    ) b on  b.num = a.num 
    where a.categoria not like ''%AB001%''

-------------------------




 -- dia maestro
--select *
    update a set a.dm = pesos * (case when @año+''09'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, @año+''09'') >= 12 then 1 else 0 end)
    from #tablaAño a inner join (
    select num, sum(valor)/2 pesos 
    from #ne_ConceptosCosteoTotales a
    where a.id_concepto in (1702,1703,1705,1706,1707,1704,1701,1300,1318,1319,1320,1321,1322,1354,1353,1510)
    and a.Modelo in ( 1 , 2 , 3 , 4 , 5 , 6, 7 , 9 )
    group by num
    ) b on b.num = a.num 
    left join #QnaDesdePlaza p on p.num = a.num
    where a.tipo_mov not in (''24'',''25'')
    and a.categoria not like ''%AB001%'' 
    
    

-- Aportacion

  update a set a.ap = round(b.aportacion * (cast(a.qnas as float)/2),2)
    from #tablaAño a inner join (
    select num, round(sum(valor) * 0.20145 ,2) aportacion
    from #ne_ConceptosCosteoTotales a
    where a.Modelo in ( 1,2,3,4,5,6,7,9) and a.id_concepto in (1701,1510,1702,1703,1705,1706,1707,1704)
    group by num
    ) b on a.num = b.num
where a.tipo_mov not in (''24'',''25'')
and a.categoria not like ''%AB001%''

----- prima vacacional

   UPDATE A SET A.prima = b.pesos * ( case when (@año+(select case when @año = ''2012'' or @año = ''2014'' or @año = ''2015'' or @año = ''2017'' or @año = ''2019'' then ''07'' when @año = ''2013'' or @año = ''2016'' or @año = ''2018'' then ''06'' else ''06'' end) between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, @año+(select case when @año = ''2012'' or @año = ''2014'' or @año = ''2015'' or @año = ''2017'' or @año = ''2019'' then ''07'' when @año = ''2013'' or @año = ''2016'' or @año = ''2018'' then ''06'' else ''06'' end)) >= 12) then 6 else 0 end+
   case when (@año+''14'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, @año+''14'') >= 12) then 12 else 0 end
   +case when (@año+''24'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, @año+''24'') >= 12) then 6 else 0 end)
    from #tablaAño a inner join (
    select num, (round((sum(valor)/30),2)) pesos from #ne_ConceptosCosteoTotales a
    where a.id_concepto in (1702,1703,1705,1706,1707,1704,1701,1300,1328,1557)
    and a.Modelo in (2,9)
    group by num
    ) b on b.num = a.num 
    left join #QnaDesdePlaza p on p.num = a.num
    where a.tipo_mov not in (''24'',''25'')
    and a.categoria not like ''%AB001%''
    
    
    UPDATE A SET A.prima = b.pesos * (case when (@año+(select case when @año = ''2012'' or @año = ''2014'' or @año = ''2015'' or @año = ''2017'' or @año = ''2019'' then ''07'' when @año = ''2013'' or @año = ''2016'' or @año = ''2018'' then ''06'' else ''06'' end) between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, @año+(select case when @año = ''2012'' or @año = ''2014'' or @año = ''2015'' or @año = ''2017'' or @año = ''2019'' then ''07'' when @año = ''2013'' or @año = ''2016'' or @año = ''2018'' then ''06'' else ''06'' end)) >= 12) then 6 else 0 end
    +case when (@año+''14'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, @año+''14'') >= 12) then 12 else 0 end+case when (@año+''24'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, @año+''24'') >= 12) then 6 else 0 end)
    from #tablaAño a inner join (
    select num, (round((sum(valor)/30),2)) pesos from #ne_ConceptosCosteoTotales a
    where a.id_concepto in (1702,1703,1705,1706,1707,1704,1701,1300,1328,1365)
    and a.Modelo in (5,6)
    group by num
    ) b on b.num = a.num
    left join #QnaDesdePlaza p on p.num = a.num
    where a.tipo_mov not in (''24'',''25'')
    and a.categoria not like ''%AB001%''
    
   UPDATE A SET A.prima = b.pesos * (case when (@año+(select case when @año = ''2012'' or @año = ''2014'' or @año = ''2015'' or @año = ''2017'' or @año = ''2019'' then ''07'' when @año = ''2013'' or @año = ''2016'' or @año = ''2018'' then ''06'' else ''06'' end) between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, @año+(select case when @año = ''2012'' or @año = ''2014'' or @año = ''2015'' or @año = ''2017'' or @año = ''2019'' then ''07'' when @año = ''2013'' or @año = ''2016'' or @año = ''2018'' then ''06'' else ''06'' end)) >= 12) then 5 else 0 end
   +case when (@año+''24'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, @año+''24'') >= 12) then 5 else 0 end)
    from #tablaAño a inner join (
    select num, (round((sum(valor)/30),2)) pesos from #ne_ConceptosCosteoTotales a
    where a.id_concepto in (1702,1703,1705,1706,1707,1704,1701,1557,1300,1353)
    and a.Modelo in (3)
    group by num
    ) b on b.num = a.num 
    left join #QnaDesdePlaza p on p.num = a.num
    where a.tipo_mov not in (''24'',''25'')
    and a.categoria not like ''%AB001%''
    
    
   UPDATE A SET A.prima = b.pesos * (case when (@año+(select case when @año = ''2012'' or @año = ''2014'' or @año = ''2015'' or @año = ''2017'' or @año = ''2019'' then ''07'' when @año = ''2013'' or @año = ''2016'' or @año = ''2018'' then ''06'' else ''06'' end) between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, @año+(select case when @año = ''2012'' or @año = ''2014'' or @año = ''2015'' or @año = ''2017'' or @año = ''2019'' then ''07'' when @año = ''2013'' or @año = ''2016'' or @año = ''2018'' then ''06'' else ''06'' end)) >= 12) then 5 else 0 end
   +case when (@año+''24'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, @año+''24'') >= 12) then 5 else 0 end)
    from #tablaAño a inner join (
    select num, (round((sum(valor)/30),2)) pesos from #ne_ConceptosCosteoTotales a
    where a.id_concepto in (1702,1703,1705,1706,1707,1704,1701,1300,1318,1319,1320,1321,1322,1354,1400,1401,1402,1403,1404,1359,1360,1361,1362,1363,1364,1454,1433,1545,1546,1377,1358,1477,1331,1378)
    and a.Modelo in ( 1 , 4 )
    group by num
    ) b on b.num = a.num 
    left join #QnaDesdePlaza p on p.num = a.num
    where a.tipo_mov not in (''24'',''25'')
     and a.categoria not like ''%AB001%''
     
     UPDATE A SET A.prima = b.pesos * (case when (@año+(select case when @año = ''2012'' or @año = ''2014'' or @año = ''2015'' or @año = ''2017'' or @año = ''2019'' then ''07'' when @año = ''2013'' or @año = ''2016'' or @año = ''2018'' then ''06'' else ''06'' end) between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, @año+(select case when @año = ''2012'' or @año = ''2014'' or @año = ''2015'' or @año = ''2017'' or @año = ''2019'' then ''07'' when @año = ''2013'' or @año = ''2016'' or @año = ''2018'' then ''06'' else ''06'' end)) >= 12) then 6 else 0 end
     +case when (@año+''14'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, @año+''14'') >= 12) then 12 else 0 end+case when (@año+''24'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, @año+''24'') >= 12) then 6 else 0 end)
    from #tablaAño a inner join (
    select num, (round((sum(valor)/30),2)) pesos from #ne_ConceptosCosteoTotales a
    where a.id_concepto in (1510,1518,1521)
    and a.Modelo in (7)
    group by num
    ) b on b.num = a.num 
    left join #QnaDesdePlaza p on p.num = a.num
    where a.tipo_mov not in (''24'',''25'')
    and a.categoria not like ''%AB001%''

--- bono 5 dias qna 16

if (@año = ''2012'')
begin
update a set a.bo = case when ''201216'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201216'') >= 12
then 1.00 else 0.00 end * case when a.categoria like ''%E%'' then 1380.00 else 1285.00 end
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where a.qnas > 0 and a.categoria <> ''AB001'' and a.id_puesto > 0 and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%'' and a.modelo in (1,2,3,4,5,6,9)
end

if (@año = ''2013'')
begin
update a set a.bo = case when ''201316'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201316'') >= 12
then 1.00 else 0.00 end * case when a.categoria like ''%E%'' then 1440.00 else 1340.00 end
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where a.qnas > 0 and a.categoria <> ''AB001'' and a.id_puesto > 0 and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%'' and a.modelo in (1,2,3,4,5,6,9)
end

if (@año = ''2014'')
begin
update a set a.bo = case when ''201416'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201416'') >= 12
then 1.00 else 0.00 end * case when a.categoria like ''%E%'' then 1500.00 else 1396.00 end
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where a.qnas > 0 and a.categoria <> ''AB001'' and a.id_puesto > 0 and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%'' and a.modelo in (1,2,3,4,5,6,9)
end

if (@año = ''2015'')
begin
update a set a.bo = case when ''201516'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201516'') >= 12
then 1.00 else 0.00 end * case when a.categoria like ''%E%'' then 1500.00 else 1396.00 end
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where a.qnas > 0 and a.categoria <> ''AB001'' and a.id_puesto > 0 and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%'' and a.modelo in (1,2,3,4,5,6,9)
end

if (@año = ''2016'')
begin
update a set a.bo = case when ''201616'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201616'') >= 12
then 1.00 else 0.00 end * case when a.categoria like ''%E%'' then 1616.75 else 1503.76 end
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where a.qnas > 0 and a.categoria <> ''AB001'' and a.id_puesto > 0 and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%'' and a.modelo in (1,2,3,4,5,6,9)

end

if (@año = ''2017'')
begin

update a set a.bo = case when ''201716'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201716'') >= 12
then 1.00 else 0.00 end * case when a.categoria like ''%E%'' then 1673.34 else 1556.08 end
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where a.qnas > 0 and a.categoria <> ''AB001'' and a.id_puesto > 0 and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%'' and a.modelo in (1,2,3,4,5,6,9)

end

if (@año = ''2018'')
begin
update a set a.bo = case when ''201816'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201816'') >= 12
then 1.00 else 0.00 end * case when a.categoria like ''%E%'' then 1746.97 else 1623.46 end
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where a.qnas > 0 and a.categoria <> ''AB001'' and a.id_puesto > 0 and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%'' and a.modelo in (1,2,3,4,5,6,9)
end

-- CN

--- 2015
if (@año = ''2015'')
begin

update a set a.cn = (case when (''201502'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201502'') >= 12) then 1000.00 else 0.00 end 
+ case when (''201516'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201516'') >= 12) then 1600.00 else 0.00 end )
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (1 , 4 ) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''

update a set a.cn = (case when (''201502'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201502'') >= 12) then 850.00 else 0.00 end 
+ case when (''201516'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201516'') >= 12) then 1360.00 else 0.00 end )
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (3) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''

end

-- 2016
if(@año = ''2016'')
begin
update a set a.cn = (case when (''201602'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201602'') >= 12) then 1300.00 else 0.00 end 
+ case when (''201616'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201616'') >= 12) then 1690.00 else 0.00 end )
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (1 , 4 ) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''

update a set a.cn = (case when (''201602'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201602'') >= 12) then 1105.00 else 0.00 end 
+ case when (''201616'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201616'') >= 12) then 1370.20 else 0.00 end )
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (3) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''

end


-- 2017
if (@año = ''2017'')
begin

update a set a.cn = (case when (''201702'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201702'') >= 12) then 1690.00 else 0.00 end 
+ case when (''201716'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201716'') >= 12) then 2197.00 else 0.00 end )
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (1 , 4 ) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''

update a set a.cn = (case when (''201702'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201702'') >= 12) then 1370.20 else 0.00 end 
+ case when (''201716'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201716'') >= 12) then 1699.00 else 0.00 end )
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (3) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''

end

--2018
if(@año = ''2018'')
begin
update a set a.cn = (case when (''201802'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201802'') >= 12) then 3356.00 else 0.00 end 
+ case when (''201811'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201811'') >= 12) then 3356.00 else 0.00 end )
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (1 , 4 ) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''

update a set a.cn = (case when (''201802'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201802'') >= 12) then 2209.20 else 0.00 end 
+ case when (''201811'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201811'') >= 12) then 2209.00 else 0.00 end )
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (3) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''
end

--2019
if(@año = ''2019'')
begin
update a set a.cn = (case when (''201902'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201902'') >= 12) then 3356.00 else 0.00 end 
+ case when (''201916'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201916'') >= 12) then 0.00 else 0.00 end )
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (1 , 4 ) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''

update a set a.cn = (case when (''201902'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201902'') >= 12) then 2209.20 else 0.00 end 
+ case when (''201916'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, ''201916'') >= 12) then 0.00 else 0.00 end )
from #tablaAño a
left join #QnaDesdePlaza p on a.num = p.num
where  a.modelo in (3) and a.qnas > 0 and a.id_puesto > 0  and a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''

end

--- DI


update a set a.DI = (case when (@año+''22'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, @año+''22'') > 12) then cast(b.monto as float) else 0.00 end )
from #tablaAño a
inner join ut..ConceptosInformadosPA b on replace(a.categoria,'' '','''') = replace(b.categoria,'' '','''')
left join #QnaDesdePlaza p on a.num = p.num
where b.anio = @año and b.concepto = ''DI'' and a.qnas > 0

--88

update a set a.c88 = (case when (@año+''22'' between a.desde_ and a.hasta_ and dbo.PlazosDesdeHasta(case when isnull(p.qna,a.desde) > a.desde then a.desde else isnull(p.qna,a.desde) end, @año+''22'') > 12) then cast(b.monto as float) else 0.00 end )
from #tablaAño a
inner join ut..ConceptosInformadosPA b on replace(a.categoria,'' '','''') = replace(b.categoria,'' '','''')
left join #QnaDesdePlaza p on a.num = p.num
where b.anio = @año and b.concepto = ''88'' and a.qnas > 0





if( @tipo = 1 )
begin

--- deducciones
alter table #ne_ConceptosCosteoTotales add tipo int
update #ne_ConceptosCosteoTotales set tipo = 1

insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, 1551 id_concepto,''05'' resultado,5029.00 Valor,1
from #tablaAño where categoria like ''%AB001%'' and qnas > 0 and (funcion = ''DOCENTE'' or funcion like ''%MAESTRO%'' or funcion like ''%DOCENTE%'')

insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza,
desde_, hasta_, qnas, 1551 id_concepto,''05'' resultado,4234.00 Valor,1
from #tablaAño where categoria like ''%AB001%'' and qnas > 0 and (funcion = ''ADMINISTRATIVO'' or funcion like ''%ADMINISTRATIVO%'' or funcion like ''%SERVICIO%'')

-- impuesto
create table #tablatonta(id_emp int)




select h.rfc, sum(valor) BaseGraba
into #baseGravableUPNBAS
from #ne_ConceptosCosteoTotales h 
where h.id_concepto in (1300,1318,1319,1320,1321,1322,1354,1301,1302,1303,1306,1312,1313,1315,1323,1324,1325,1326,1327,1328,1331,1353,1357,1358,1557,1297,1477,
1367,1368,1370,1560,1373,1374,1375,1376,1377,1400,1401,1402,1403,1404,1485,1545,1546,1433,1378,102,103,104,105,106,107,200,201,202,203,204,205,206,207,208,209,
210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,290,291,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,
258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,230,231,232,233,234,235,1702,1703,1705,1706,1707,1704, 1701,1551,1510,1511,1518,1520,1522,1508,1513,1514,1576,1582,1596)
and h.qnas > 0
group by h.rfc

create table #Empleadoperiodohist(rfc varchar(max) default '''', id_plaza int default 0, id_concepto int default 0, pesos float default 0 )

if(@tPlaza = ''Asc'' or @tPlaza = ''AD'')
begin
insert into #tablatonta
select top 1 id_emp from #tablaAño
end
else
begin
insert into #Empleadoperiodohist
select *  from (
select distinct a.rfc,h.id_plaza,h.id_concepto, h.pesos from #EmpleadoPeriodo a
inner join nom_histpagos h on a.id_emp = h.id_emp and (h.id_periodo = a.id_periodo and h.id_periodopago = 0 or h.id_periodopago = a.id_periodo)
where h.id_concepto in (1300,1318,1319,1320,1321,1322,1354,1301,1302,1306,1312,1313,1315,1323,1324,1325,1326,1327,1328,1331,1353,1357,1358,1557,1297,1477,
1367,1368,1370,1560,1373,1374,1375,1376,1377,1400,1401,1402,1403,1404,1485,1545,1546,1433,1378,102,103,104,105,106,107,200,201,202,203,204,205,206,207,208,209,
210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,290,291,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,
258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,230,231,232,233,234,235,1551,1510,1511,1518,1520,1522,1508,1513,1514,1576,1582,1596)
and h.id_plaza <> a.id_plaza 
and h.id_plaza in (select id_plaza from plazaieepo where replace(''07''+substring(plazaieepo,3,len(plazaieepo)), '' '','''') in (
select codigo_plaza from hplazas_concifed_230217 where ESTATUS <> ''C''
))
union all
select distinct a.rfc,h.id_plaza,h.id_concepto, h.pesos from #EmpleadoPeriodo a
inner join nom_pagos_hist h on a.id_emp = h.id_emp and (h.id_periodo = a.id_periodo and h.id_periodopago = 0 or h.id_periodopago = a.id_periodo)
where h.id_concepto in (1300,1318,1319,1320,1321,1322,1354,1301,1302,1306,1312,1313,1315,1323,1324,1325,1326,1327,1328,1331,1353,1357,1358,1557,1297,1477,
1367,1368,1370,1560,1373,1374,1375,1376,1377,1400,1401,1402,1403,1404,1485,1545,1546,1433,1378,102,103,104,105,106,107,200,201,202,203,204,205,206,207,208,209,
210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,290,291,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,
258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,230,231,232,233,234,235,1551,1510,1511,1518,1520,1522,1508,1513,1514,1576,1582,1596)
and h.id_plaza <> a.id_plaza 
and h.id_plaza in (select id_plaza from plazaieepo where replace(''07''+substring(plazaieepo,3,len(plazaieepo)), '' '','''') in (
select codigo_plaza from hplazas_concifed_230217 where ESTATUS <> ''C''
))
) a

update a set a.basegraba = a.basegraba + (b.pesos * 2) from
#baseGravableUPNBAS a inner join (
select rfc, sum(pesos) pesos from #Empleadoperiodohist group by rfc
) b on a.rfc = b.rfc

end


select rfc, sum(valor) BaseParticipa into #baseParticipaUPNBAS from #ne_ConceptosCosteoTotales h
where h.id_concepto in (1300,1318,1319,1320,1321,1322,1354,1301,1302,1303,1306,1530,1309,1312,1441,1313,1314,1315,1316,1323,1324,1325,1326,1327,1328,1331,1353,
1357,1358,1557,1297,1359,1360,1361,1362,1362,1365,1477,1367,1368,1370,1560,1373,1374,1375,1376,1377,1400,1401,1402,1403,1404,1485,1545,1546,1433,1493,1454,1563,
1363,1364,1332,1378,102,103,104,105,106,107,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,
229,290,291,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,379,380,381,382,383,384,385,386,387,240,
241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,230,231,232,233,234,
235,1702,1703,1705,1706,1707,1704,  1701,1551, 1508,1510,1511,1513,1514,1518,1520,1522,1576,1578,1582)
group by rfc

create table #Empleadoperiodohist_p(rfc varchar(max) default '''', id_plaza int default 0, id_concepto int default 0, pesos float default 0 )

if(@tPlaza = ''Asc'' or @tPlaza = ''AD'')
begin
insert into #tablatonta
select top 1 id_emp from #tablaAño
end
else
begin
insert into #Empleadoperiodohist_p
select * from (
select distinct a.rfc,h.id_plaza,h.id_concepto, h.pesos from #EmpleadoPeriodo a
inner join nom_histpagos h on a.id_emp = h.id_emp and (h.id_periodo = a.id_periodo and h.id_periodopago = 0 or h.id_periodopago = a.id_periodo)
where h.id_concepto in (1300,1318,1319,1320,1321,1322,1354,1301,1302,1306,1530,1309,1312,1441,1313,1314,1315,1316,1323,1324,1325,1326,1327,1328,1331,1353,
1357,1358,1557,1297,1359,1360,1361,1362,1362,1365,1477,1367,1368,1370,1560,1373,1374,1375,1376,1377,1400,1401,1402,1403,1404,1485,1545,1546,1433,1493,1454,1563,
1363,1364,1332,1378,102,103,104,105,106,107,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,
229,290,291,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,379,380,381,382,383,384,385,386,387,240,
241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,230,231,232,233,234,
235,1551, 1508,1510,1511,1513,1514,1518,1520,1522,1576,1578,1582)
and h.id_plaza <> a.id_plaza 
and h.id_plaza in (select id_plaza from plazaieepo where replace(''07''+substring(plazaieepo,3,len(plazaieepo)), '' '','''') in (
select codigo_plaza from hplazas_concifed_230217 where ESTATUS <> ''C''
))
union all
select distinct a.rfc,h.id_plaza,h.id_concepto, h.pesos from #EmpleadoPeriodo a
inner join nom_pagos_hist h on a.id_emp = h.id_emp and (h.id_periodo = a.id_periodo and h.id_periodopago = 0 or h.id_periodopago = a.id_periodo)
where h.id_concepto in (1300,1318,1319,1320,1321,1322,1354,1301,1302,1306,1530,1309,1312,1441,1313,1314,1315,1316,1323,1324,1325,1326,1327,1328,1331,1353,
1357,1358,1557,1297,1359,1360,1361,1362,1362,1365,1477,1367,1368,1370,1560,1373,1374,1375,1376,1377,1400,1401,1402,1403,1404,1485,1545,1546,1433,1493,1454,1563,
1363,1364,1332,1378,102,103,104,105,106,107,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,
229,290,291,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,379,380,381,382,383,384,385,386,387,240,
241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,230,231,232,233,234,
235,1551, 1508,1510,1511,1513,1514,1518,1520,1522,1576,1578,1582)
and h.id_plaza <> a.id_plaza 
and h.id_plaza in (select id_plaza from plazaieepo where replace(''07''+substring(plazaieepo,3,len(plazaieepo)), '' '','''') in (
select codigo_plaza from hplazas_concifed_230217 where ESTATUS <> ''C''
))
) a

 update a set a.baseparticipa = a.baseparticipa + (b.pesos * 2) from
#baseParticipaUPNBAS a inner join (
select rfc, sum(pesos) pesos from #Empleadoperiodohist_p group by rfc
) b on a.rfc = b.rfc

end

                        
select a.*, b.baseparticipa, round( 1 - ( round(( round(1 - (round(basegraba / baseparticipa,2) ),2)) * 2,2) ),2) subsidio 
into #subsidioUPNBas
from  #baseGravableUPNBAS a
inner join #baseParticipaUPNBAS b on b.rfc = a.rfc 
                        
select a.*,b.rinferior rinferior_ta, b.rsuperior rsuperior_ta, b.cuotaF cuotaF_ta, b.Porciento Porciento_ta , round(basegraba-rinferior,2) ingExecede, round((round(basegraba-rinferior,2)) * (porciento/100),2) impMarginal,
(round((round(basegraba-rinferior,2)) * (porciento/100),2)) + cuotaF isrbruto 
into #isrMarginalBruto
from #subsidioUPNBas a,Tispta b where b.fechavigencia = ''2004/01/01'' and b.dias = 30 and a.basegraba >= b.rinferior and a.basegraba < b.rsuperior 

select a.*, b.RInferior RInferior_tb, b.RSuperior RSuperior_tb, b.CuotaF CuotaF_tb, b.Porciento Porciento_tb, round(a.impmarginal * (b.porciento/100),2) imp01,round((round(a.impmarginal * (b.porciento/100),2))+b.CuotaF,2) subsidiotot,
round((round((round(a.impmarginal * (b.porciento/100),2))+b.CuotaF,2))*a.subsidio,2) subsidioacre 
into #ImpMarBrutoSubAcre
from #isrMarginalBruto a, Tisptb b where b.fechavigencia = ''2004/01/01'' and b.dias = 30 and a.basegraba >= b.rinferior and a.basegraba < b.rsuperior 

select a.*, b.RInferior RInferior_tc, b.RSuperior RSuperior_tc, b.CuotaF CuotaF_tc, round(a.isrbruto - a.subsidioacre,2) difIsrSub, round((round(a.isrbruto - a.subsidioacre,2)) - b.CuotaF,2) ImptMensual, round(((round(a.isrbruto - a.subsidioacre,2)) - b.CuotaF)/2,2) ImpQuincena
into #inpuestoquincenal
from #ImpMarBrutoSubAcre a, Tisptc b where b.fechavigencia = ''2004/01/01'' and b.dias = 30 and a.basegraba >= b.rinferior and a.basegraba < b.rsuperior 
                        
select h.num, h.rfc, h.plaza, h.horas, h.categoria, h.desde, h.hasta, h.funcion, h.id_puesto, h.id_cm, h.id_npago, h.id_zona, h.modelo, 
h.tipo_mov, h.id_emp, h.id_plaza, h.desde_, h.hasta_, h.qnas, sum(h.Valor) pesos into #basegravapplaza
from #ne_ConceptosCosteoTotales h 
where h.id_concepto in (1300,1318,1319,1320,1321,1322,1354,1301,1302,1303,1306,1312,1313,1315,1323,1324,1325,1326,1327,1328,1331,1353,1357,1358,1557,1297,1477,
1367,1368,1370,1560,1373,1374,1375,1376,1377,1400,1401,1402,1403,1404,1485,1545,1546,1433,1378,102,103,104,105,106,107,200,201,202,203,204,205,206,207,208,209,
210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,290,291,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,
258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,230,231,232,233,234,235,1702,1703,1705,1706,1707,1704, 1701,1551,1510,1511,1518,1520,1522,1508,1513,1514,1576,1582,1596) 
group by h.num, h.rfc, h.plaza, h.horas, h.categoria, h.desde, h.hasta, h.funcion, h.id_puesto, h.id_cm, h.id_npago, h.id_zona, h.modelo, 
h.tipo_mov, h.id_emp, h.id_plaza, h.desde_, h.hasta_, h.qnas

create table #Empleadoperiodohist_im(rfc varchar(max) default '''', id_plaza int default 0, id_concepto int default 0, pesos float default 0 )

if(@tPlaza = ''Asc'' or @tPlaza = ''AD'')
begin
insert into #tablatonta
select top 1 id_emp from #tablaAño
end
else
begin
insert into #Empleadoperiodohist_im
select *  from (
select distinct a.rfc,h.id_plaza,h.id_concepto, h.pesos from #EmpleadoPeriodo a
inner join nom_histpagos h on a.id_emp = h.id_emp and (h.id_periodo = a.id_periodo and h.id_periodopago = 0 or h.id_periodopago = a.id_periodo)
where h.id_concepto in (2314,2300)
and h.id_plaza <> a.id_plaza
and h.id_plaza in (select id_plaza from plazaieepo where replace(''07''+substring(plazaieepo,3,len(plazaieepo)), '' '','''') in (
select codigo_plaza from hplazas_concifed_230217 where ESTATUS <> ''C''
))
union all
select distinct a.rfc,h.id_plaza,h.id_concepto, h.pesos from #EmpleadoPeriodo a
inner join nom_pagos_hist h on a.id_emp = h.id_emp and (h.id_periodo = a.id_periodo and h.id_periodopago = 0 or h.id_periodopago = a.id_periodo)
where h.id_concepto in (2314,2300)
and h.id_plaza <> a.id_plaza
and h.id_plaza in (select id_plaza from plazaieepo where replace(''07''+substring(plazaieepo,3,len(plazaieepo)), '' '','''') in (
select codigo_plaza from hplazas_concifed_230217 where ESTATUS <> ''C''
))
) a

update a set a.ImptMensual = a.ImptMensual - (i.pesos * 2) 
from #inpuestoquincenal a
inner join (select rfc, sum(pesos) pesos from #Empleadoperiodohist_im group by rfc ) i on i.rfc = a.rfc

end


update a set a.basegraba = a.basegraba - (b.pesos * 2) from 
#inpuestoquincenal a inner join (
select rfc, sum(pesos) pesos from #Empleadoperiodohist group by rfc
) b on a.rfc = b.rfc


select a.*,round(b.basegraba,2) basegraba, b.ImptMensual, b.impquincena, round((a.pesos*100) / (round(b.basegraba,2)),2) pocent, round(b.ImptMensual * (round((a.pesos*100) / (round(b.basegraba,2)),2)) / 100 ,2) impPPlaza
into #impuestogenerado
from #basegravapplaza a inner join #inpuestoquincenal b on a.rfc = b.rfc

insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza, 
desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza, 
desde_, hasta_, qnas,case when id_cm = 1 then 2314 else 2300 end id_concepto,case when id_cm = 1 then ''26U'' else ''01'' end resultado,
impPPlaza Valor,2 from #impuestogenerado

--insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, 
--desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
--select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, 
--desde_, hasta_, qnas, 2300 id_concepto,''01'' resultado,impPPlaza Valor,2 from #impuestogenerado
--where id_emp in (select id_emp from empleados where id_cia = 2)

--insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, 
--desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
--select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, 
--desde_, hasta_, qnas, 2314 id_concepto,''26U'' resultado,impPPlaza Valor,2 from #impuestogenerado
--where id_emp in (select id_emp from empleados where id_cia = 1)


--77
if(@tPlaza = ''Asc'' or @tPlaza = ''AD'' or @tPlaza = ''Ads'' )
begin
insert into #tablatonta
select top 1 id_emp from #tablaAño
end
else
begin

select distinct a.*, h.id_plaza idplaza into #Empleadoplazaperiodo77 
from #EmpleadoPeriodo a
inner join (
select Id_Emp, case when id_periodopago = 0 then Id_Periodo else id_periodopago end id_periodo, id_concepto, Pesos, id_plaza, Id_Referencia, id_periodoPago, Id_ProcesoNomina, Desde, Hasta from nom_histpagos where id_concepto in (select id_concepto from conceptos where tipo = 1)
union all
select Id_Emp, case when id_periodopago = 0 then Id_Periodo else id_periodopago end id_periodo, id_concepto, Pesos, id_plaza, Id_Referencia, id_periodoPago, Id_ProcesoNomina, Desde, Hasta from nom_pagos_hist where id_concepto in (select id_concepto from conceptos where tipo = 1)
) h on h.id_emp = a.id_emp and h.id_periodo = a.id_periodo 
where  h.id_plaza <> a.id_plaza 
and h.id_plaza in (select id_plaza from plazaieepo where replace(''07''+substring(plazaieepo,3,len(plazaieepo)), '' '','''') in (
select codigo_plaza from hplazas_concifed_230217 where ESTATUS <> ''C''
))

select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza, 
desde_, hasta_, qnas, isnull(sum(case when a.Tipo = 1 then valor end),0) percep,
isnull(sum(case when a.Tipo = 2 then valor end),0) deducs,  isnull(sum(case when a.Tipo = 1 then valor end),0) - isnull(sum(case when a.Tipo = 2 then valor end),0) neto 
into #tablanetos
 from #ne_ConceptosCosteoTotales a 
 where a.tipo_mov not in (''24'',''25'') and a.categoria not like ''%AB001%''
 group by num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza, 
desde_, hasta_, qnas   
select rfc, max(neto) neto into #sumtabneto  from #tablanetos group by rfc     

select a.rfc, a.num into #SumTabMM from #tablanetos a inner join #sumtabneto b on a.rfc = b.rfc and a.neto = b.neto     

select rfc, max(num) num into #tablapasoMP from #SumTabMM group by rfc
select a.* into #plazaMayorValor from #tablanetos a inner join #tablapasoMP b on a.rfc = b.rfc  and a.num = b.num


insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza, 
desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza, 
desde_, hasta_, qnas,case when id_cm = 1 then 2448 else  2329 end id_concepto,case when id_cm = 1 then ''37'' else ''77'' end resultado,7.9 Valor,2 
from #plazaMayorValor  where tipo_mov not in (''24'',''25'') and categoria not like ''%AB001%''
and num not in (
select num from #Empleadoplazaperiodo77
)

--insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, 
--desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
--select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, 
--desde_, hasta_, qnas, 2329 id_concepto,''77'' resultado,7.9 Valor,2 from #plazaMayorValor  where tipo_mov not in (''24'',''25'') and categoria not like ''%AB001%''
--and id_emp in (select id_emp from empleados where id_cia = 2)

--insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, 
--desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
--select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, 
--desde_, hasta_, qnas, 2448 id_concepto,''37'' resultado,7.9 Valor,2 from #plazaMayorValor  where tipo_mov not in (''24'',''25'') and categoria not like ''%AB001%''
--and id_emp in (select id_emp from empleados where id_cia = 1)

end
--02

select rfc, sum(valor)/2 pesos into #sumaBasica
from #ne_ConceptosCosteoTotales b 
where b.id_concepto in (1300,1318,1319,1320,1321,1322,1354,1323,1324,1325,1326,1327,1328,1331,1353,1356,1357,1358,1367,1370,1373,1374,1375,1376,1377,1400,1401,
1402,1403,1404,1433,1442,1443,1477,1485,1510,1518,1545,1546,1557,1297,1560,4000,4006,4007,4008,4009,4010,
4011,4013, 1701,1702,1703,1705,1706,1707,1704)
and b.tipo_mov not in (''24'',''25'') and categoria not like ''%AB001%''
group by rfc

create table #Empleadoperiodohist_24(rfc varchar(max) default '''', id_plaza int default 0, id_concepto int default 0, pesos float default 0 )

if(@tPlaza = ''Asc'' or @tPlaza = ''AD'')
begin
insert into #tablatonta
select top 1 id_emp from #tablaAño
end
else
begin
insert into #Empleadoperiodohist_24
select *  from (
select distinct a.rfc,h.id_plaza,h.id_concepto, h.pesos from #EmpleadoPeriodo a
inner join nom_histpagos h on a.id_emp = h.id_emp and (h.id_periodo = a.id_periodo and h.id_periodopago = 0 or h.id_periodopago = a.id_periodo)
where h.id_concepto in (1300,1318,1319,1320,1321,1322,1354,1323,1324,1325,1326,1327,1328,1331,1353,1356,1357,1358,1367,1370,1373,1374,1375,1376,1377,1400,1401,
1402,1403,1404,1433,1442,1443,1477,1485,1510,1518,1545,1546,1557,1297,1560,4000,4006,4007,4008,4009,4010,
4011,4013)
and h.id_plaza <> a.id_plaza 
and h.id_plaza in (select id_plaza from plazaieepo where replace(''07''+substring(plazaieepo,3,len(plazaieepo)), '' '','''') in (
select codigo_plaza from hplazas_concifed_230217 where ESTATUS <> ''C''
))
union all
select distinct a.rfc,h.id_plaza,h.id_concepto, h.pesos from #EmpleadoPeriodo a
inner join nom_pagos_hist h on a.id_emp = h.id_emp and (h.id_periodo = a.id_periodo and h.id_periodopago = 0 or h.id_periodopago = a.id_periodo)
where h.id_concepto in (1300,1318,1319,1320,1321,1322,1354,1323,1324,1325,1326,1327,1328,1331,1353,1356,1357,1358,1367,1370,1373,1374,1375,1376,1377,1400,1401,
1402,1403,1404,1433,1442,1443,1477,1485,1510,1518,1545,1546,1557,1297,1560,4000,4006,4007,4008,4009,4010,
4011,4013)
and h.id_plaza <> a.id_plaza 
and h.id_plaza in (select id_plaza from plazaieepo where replace(''07''+substring(plazaieepo,3,len(plazaieepo)), '' '','''') in (
select codigo_plaza from hplazas_concifed_230217 where ESTATUS <> ''C''
))
) a

update a set a.pesos = a.pesos + b.pesos
from #sumaBasica a 
inner join (
select rfc, sum(pesos) pesos from #Empleadoperiodohist_24 group by rfc
) b on a.rfc = b.rfc

end


select top 0 a.rfc,sum(a.pesos) pesosb,sum(a.pesos) sumacptos,
(0.06125 * (sum(a.pesos))) importe, 
case when (0.06125 * (sum(a.pesos))) > 572.66 then 572.66 else round((0.06125 * (sum(a.pesos))),2) end cpto0227 into #importepto0227
from  #sumaBasica  a 
group by a.rfc
                 
if (@año = ''2012'')  
begin
insert into #importepto0227
select a.rfc,sum(a.pesos) pesosb,sum(a.pesos) sumacptos,
(0.06125 * (sum(a.pesos))) importe, 
case when (0.06125 * (sum(a.pesos))) > 572.66 then 572.66 else round((0.06125 * (sum(a.pesos))),2) end cpto0227 
from  #sumaBasica  a 
group by a.rfc
end
if (@año = ''2013'')  
begin
insert into #importepto0227
select a.rfc,sum(a.pesos) pesosb,sum(a.pesos) sumacptos,
(0.06125 * (sum(a.pesos))) importe, 
case when (0.06125 * (sum(a.pesos))) > 594.98 then 594.98 else round((0.06125 * (sum(a.pesos))),2) end cpto0227 
from  #sumaBasica  a 
group by a.rfc
end
if (@año = ''2014'')  
begin
insert into #importepto0227
select a.rfc,sum(a.pesos) pesosb,sum(a.pesos) sumacptos,
(0.06125 * (sum(a.pesos))) importe, 
case when (0.06125 * (sum(a.pesos))) > 618.23 then 618.23 else round((0.06125 * (sum(a.pesos))),2) end cpto0227 
from  #sumaBasica  a 
group by a.rfc
end
if (@año = ''2015'')  
begin
insert into #importepto0227
select a.rfc,sum(a.pesos) pesosb,sum(a.pesos) sumacptos,
(0.06125 * (sum(a.pesos))) importe, 
case when (0.06125 * (sum(a.pesos))) > 644.04 then 644.04 else round((0.06125 * (sum(a.pesos))),2) end cpto0227 
from  #sumaBasica  a 
group by a.rfc
end
if (@año = ''2016'')  
begin
insert into #importepto0227
select a.rfc,sum(a.pesos) pesosb,sum(a.pesos) sumacptos,
(0.06125 * (sum(a.pesos))) importe, 
case when (0.06125 * (sum(a.pesos))) > 671.06 then 671.06 else round((0.06125 * (sum(a.pesos))),2) end cpto0227 
from  #sumaBasica  a 
group by a.rfc
end
if (@año = ''2017'')  
begin
insert into #importepto0227
select a.rfc,sum(a.pesos) pesosb,sum(a.pesos) sumacptos,
(0.06125 * (sum(a.pesos))) importe, 
case when (0.06125 * (sum(a.pesos))) > 735.37 then 735.37 else round((0.06125 * (sum(a.pesos))),2) end cpto0227 
from  #sumaBasica  a 
group by a.rfc
end
if (@año = ''2018'')  
begin
insert into #importepto0227
select a.rfc,sum(a.pesos) pesosb,sum(a.pesos) sumacptos,
(0.06125 * (sum(a.pesos))) importe, 
case when (0.06125 * (sum(a.pesos))) > 750.39 then 750.39 else round((0.06125 * (sum(a.pesos))),2) end cpto0227 
from  #sumaBasica  a 
group by a.rfc
end
if (@año = ''2019'')  
begin
insert into #importepto0227
select a.rfc,sum(a.pesos) pesosb,sum(a.pesos) sumacptos,
(0.06125 * (sum(a.pesos))) importe, 
case when (0.06125 * (sum(a.pesos))) > 776.25 then 776.25 else round((0.06125 * (sum(a.pesos))),2) end cpto0227 
from  #sumaBasica  a 
group by a.rfc
end

select b.num, b.rfc, b.plaza, b.horas, b.categoria, b.desde, b.hasta, b.funcion, b.id_puesto, b.id_cm, b.id_npago, b.id_zona, b.modelo, b.tipo_mov, b.id_emp, b.id_plaza, 
b.desde_, b.hasta_, b.qnas, sum(valor)/2 pesos into #importesporplaza
from #ne_ConceptosCosteoTotales b
where b.id_concepto in (1300,1318,1319,1320,1321,1322,1354,1323,1324,1325,1326,1327,1328,1331,1353,1356,1357,1358,1367,1370,1373, 1374,1375,1376,1377,
1400,1401,1402,1403,1404,1433,1442,1443,1477,1485,1510,1518,1545,1546,1557,1297,1560,4000,4006,4007,4008,4009,4010,4011,4013, 1701,1702,1703,1705,1706,1707,1704) 
and b.tipo_mov not in (''24'',''25'') and b.categoria not like ''%AB001%''
group by b.num, b.rfc, b.plaza, b.horas, b.categoria, b.desde, b.hasta, b.funcion, b.id_puesto, b.id_cm, b.id_npago, b.id_zona, b.modelo, b.tipo_mov, b.id_emp, b.id_plaza, 
b.desde_, b.hasta_, b.qnas


update a set a.sumacptos = a.sumacptos - b.pesos
from #importepto0227 a 
inner join (
select rfc, sum(pesos) pesos from #Empleadoperiodohist_24 group by rfc
) b on a.rfc = b.rfc

create table #Empleadoperiodohist_24_p (rfc varchar(max) default '''', id_plaza int default 0, id_concepto int default 0, pesos float default 0 )

if(@tPlaza = ''Asc'' or @tPlaza = ''AD'')
begin
insert into #tablatonta
select top 1 id_emp from #tablaAño
end
else
begin
insert into #Empleadoperiodohist_24_p
select *   from (
select distinct a.rfc,h.id_plaza,h.id_concepto, h.pesos from #EmpleadoPeriodo a
inner join nom_histpagos h on a.id_emp = h.id_emp and (h.id_periodo = a.id_periodo and h.id_periodopago = 0 or h.id_periodopago = a.id_periodo)
where h.id_concepto in (2315,2533)
and h.id_plaza <> a.id_plaza
and h.id_plaza in (select id_plaza from plazaieepo where replace(''07''+substring(plazaieepo,3,len(plazaieepo)), '' '','''') in (
select codigo_plaza from hplazas_concifed_230217 where ESTATUS <> ''C''
))
union all
select distinct a.rfc,h.id_plaza,h.id_concepto, h.pesos from #EmpleadoPeriodo a
inner join nom_pagos_hist h on a.id_emp = h.id_emp and (h.id_periodo = a.id_periodo and h.id_periodopago = 0 or h.id_periodopago = a.id_periodo)
where h.id_concepto in (2315,2533)
and h.id_plaza <> a.id_plaza
and h.id_plaza in (select id_plaza from plazaieepo where replace(''07''+substring(plazaieepo,3,len(plazaieepo)), '' '','''') in (
select codigo_plaza from hplazas_concifed_230217 where ESTATUS <> ''C''
))
) a

update a set a.cpto0227 = a.cpto0227 - b.pesos
from #importepto0227 a
inner join (
select rfc, sum(pesos) pesos from #Empleadoperiodohist_24_p group by rfc
) b on a.rfc = b.rfc

end

select b.*,a.pesosb,a.sumacptos,a.importe,a.cpto0227,(round((b.pesos*100)/a.sumacptos,2))/100 por100to, round(a.cpto0227*((round((b.pesos*100)/a.sumacptos,2))/100),2) NImporte 
into #importeConcep0227
from #importepto0227 a inner join #importesporplaza b on b.rfc = a.rfc


insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza, 
desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza, 
desde_, hasta_, qnas, case when id_cm = 1 then 2315 else 2533 end id_concepto, case when id_cm = 1 then ''27'' else ''02'' end resultado,round(nimporte*2,2) Valor,2 from #importeConcep0227  where tipo_mov not in (''24'',''25'') and categoria not like ''%AB001%''

--insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, 
--desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
--select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, 
--desde_, hasta_, qnas, 2533 id_concepto,''02'' resultado,round(nimporte*2,2) Valor,2 from #importeConcep0227  where tipo_mov not in (''24'',''25'') and categoria not like ''%AB001%''
--and id_emp in (select id_emp from empleados where id_cia = 2)

--insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, 
--desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
--select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, 
--desde_, hasta_, qnas, 2315 id_concepto,''27'' resultado,round(nimporte*2,2) Valor,2 from #importeConcep0227  where tipo_mov not in (''24'',''25'') and categoria not like ''%AB001%''
--and id_emp in (select id_emp from empleados where id_cia = 1)

--04

select rfc, sum(valor)/2 pesos into #sumaBasica04
from #ne_ConceptosCosteoTotales b 
where b.id_concepto in (1300,1318,1319,1320,1321,1322,1354,1323,1324,1325,1326,1327,1328,1331,1353,1356,1357,1358,1367,1370,1373,1374,1375,1376,1377,1400,1401,
1402,1403,1404,1433,1442,1443,1477,1485,1510,1518,1545,1546,1557,1297,1560,4000,4006,4007,4008,4009,4010,
4011,4013, 1701,1702,1703,1705,1706,1707,1704)
and b.tipo_mov not in (''24'',''25'') and categoria not like ''%AB001%''
group by rfc

update a set a.pesos = a.pesos + b.pesos
from #sumaBasica04 a 
inner join (
select rfc, sum(pesos) pesos from #Empleadoperiodohist_24 group by rfc
) b on a.rfc = b.rfc


select top 0 a.rfc,sum(a.pesos) pesosb,sum(a.pesos) sumacptos,
(0.0450 * (sum(a.pesos))) importe, 
case when (0.0450 * (sum(a.pesos))) > 420.73 then 420.73  else round((0.0450 * (sum(a.pesos))),2) end cpto0428 into #importepto0428
from  #sumaBasica04  a 
group by a.rfc

if(@año = ''2012'')
begin
insert into #importepto0428
select a.rfc,sum(a.pesos) pesosb,sum(a.pesos) sumacptos,
(0.0450 * (sum(a.pesos))) importe, 
case when (0.0450 * (sum(a.pesos))) > 420.73 then 420.73  else round((0.0450 * (sum(a.pesos))),2) end cpto0428 
from  #sumaBasica04  a 
group by a.rfc
end
if(@año = ''2013'')
begin
insert into #importepto0428
select a.rfc,sum(a.pesos) pesosb,sum(a.pesos) sumacptos,
(0.0450 * (sum(a.pesos))) importe, 
case when (0.0450 * (sum(a.pesos))) > 437.13 then 437.13  else round((0.0450 * (sum(a.pesos))),2) end cpto0428 
from  #sumaBasica04  a 
group by a.rfc
end
if(@año = ''2014'')
begin
insert into #importepto0428
select a.rfc,sum(a.pesos) pesosb,sum(a.pesos) sumacptos,
(0.0450 * (sum(a.pesos))) importe, 
case when (0.0450 * (sum(a.pesos))) > 454.21 then 454.21  else round((0.0450 * (sum(a.pesos))),2) end cpto0428 
from  #sumaBasica04  a 
group by a.rfc
end
if(@año = ''2015'')
begin
insert into #importepto0428
select a.rfc,sum(a.pesos) pesosb,sum(a.pesos) sumacptos,
(0.0450 * (sum(a.pesos))) importe, 
case when (0.0450 * (sum(a.pesos))) > 473.17 then 473.17  else round((0.0450 * (sum(a.pesos))),2) end cpto0428 
from  #sumaBasica04  a 
group by a.rfc
end
if(@año = ''2016'')
begin
insert into #importepto0428
select a.rfc,sum(a.pesos) pesosb,sum(a.pesos) sumacptos,
(0.0450 * (sum(a.pesos))) importe, 
case when (0.0450 * (sum(a.pesos))) > 493.02 then 493.02  else round((0.0450 * (sum(a.pesos))),2) end cpto0428 
from  #sumaBasica04  a 
group by a.rfc
end                        
if(@año = ''2017'')
begin
insert into #importepto0428
select a.rfc,sum(a.pesos) pesosb,sum(a.pesos) sumacptos,
(0.0450 * (sum(a.pesos))) importe, 
case when (0.0450 * (sum(a.pesos))) > 540.27 then 540.27  else round((0.0450 * (sum(a.pesos))),2) end cpto0428 
from  #sumaBasica04  a 
group by a.rfc
end    
if(@año = ''2018'')
begin
insert into #importepto0428
select a.rfc,sum(a.pesos) pesosb,sum(a.pesos) sumacptos,
(0.0450 * (sum(a.pesos))) importe, 
case when (0.0450 * (sum(a.pesos))) > 551.31 then 551.31  else round((0.0450 * (sum(a.pesos))),2) end cpto0428 
from  #sumaBasica04  a 
group by a.rfc
end    
if(@año = ''2019'')
begin
insert into #importepto0428
select a.rfc,sum(a.pesos) pesosb,sum(a.pesos) sumacptos,
(0.0450 * (sum(a.pesos))) importe, 
case when (0.0450 * (sum(a.pesos))) > 570.31 then 570.31  else round((0.0450 * (sum(a.pesos))),2) end cpto0428 
from  #sumaBasica04  a 
group by a.rfc
end    

select b.num, b.rfc, b.plaza, b.horas, b.categoria, b.desde, b.hasta, b.funcion, b.id_puesto, b.id_cm, b.id_npago, b.id_zona, b.modelo, b.tipo_mov, b.id_emp, b.id_plaza, 
b.desde_, b.hasta_, b.qnas, sum(valor)/2 pesos into #importesporplaza04
from #ne_ConceptosCosteoTotales b
where b.id_concepto in (1300,1318,1319,1320,1321,1322,1354,1323,1324,1325,1326,1327,1328,1331,1353,1356,1357,1358,1367,1370,1373, 1374,1375,1376,1377,
1400,1401,1402,1403,1404,1433,1442,1443,1477,1485,1510,1518,1545,1546,1557,1297,1560,4000,4006,4007,4008,4009,4010,4011,4013, 1701,1702,1703,1705,1706,1707,1704) 
and b.tipo_mov not in (''24'',''25'') and b.categoria not like ''%AB001%''
group by b.num, b.rfc, b.plaza, b.horas, b.categoria, b.desde, b.hasta, b.funcion, b.id_puesto, b.id_cm, b.id_npago, b.id_zona, b.modelo, b.tipo_mov, b.id_emp, b.id_plaza, 
b.desde_, b.hasta_, b.qnas

update a set a.sumacptos = a.sumacptos - b.pesos
from #importepto0428 a 
inner join (
select rfc, sum(pesos) pesos from #Empleadoperiodohist_24 group by rfc
) b on a.rfc = b.rfc

create table #Empleadoperiodohist_24_p_4 (rfc varchar(max) default '''', id_plaza int default 0, id_concepto int default 0, pesos float default 0 )

if(@tPlaza = ''Asc'' or @tPlaza = ''AD'')
begin
insert into #tablatonta
select top 1 id_emp from #tablaAño
end
else
begin
insert into #Empleadoperiodohist_24_p_4
select *  from (
select distinct a.rfc,h.id_plaza,h.id_concepto, h.pesos from #EmpleadoPeriodo a
inner join nom_histpagos h on a.id_emp = h.id_emp and (h.id_periodo = a.id_periodo and h.id_periodopago = 0 or h.id_periodopago = a.id_periodo)
where h.id_concepto in (2404,2534)
and h.id_plaza <> a.id_plaza
and h.id_plaza in (select id_plaza from plazaieepo where replace(''07''+substring(plazaieepo,3,len(plazaieepo)), '' '','''') in (
select codigo_plaza from hplazas_concifed_230217 where ESTATUS <> ''C''
))
union all
select distinct a.rfc,h.id_plaza,h.id_concepto, h.pesos from #EmpleadoPeriodo a
inner join nom_pagos_hist h on a.id_emp = h.id_emp and (h.id_periodo = a.id_periodo and h.id_periodopago = 0 or h.id_periodopago = a.id_periodo)
where h.id_concepto in (2404,2534)
and h.id_plaza <> a.id_plaza
and h.id_plaza in (select id_plaza from plazaieepo where replace(''07''+substring(plazaieepo,3,len(plazaieepo)), '' '','''') in (
select codigo_plaza from hplazas_concifed_230217 where ESTATUS <> ''C''
))
) a

update a set a.cpto0428 = a.cpto0428 - b.pesos
from #importepto0428 a
inner join (
select rfc, sum(pesos) pesos from #Empleadoperiodohist_24_p_4 group by rfc
) b on a.rfc = b.rfc

end

select b.*,a.pesosb,a.sumacptos,a.importe,a.cpto0428,(round((b.pesos*100)/a.sumacptos,2))/100 por100to, round(a.cpto0428*((round((b.pesos*100)/a.sumacptos,2))/100),2) NImporte 
into #importeConcep0428
from #importepto0428 a inner join #importesporplaza04 b on b.rfc = a.rfc 

insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza, 
desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza, 
desde_, hasta_, qnas,case when id_cm = 1 then 2404 else 2534 end id_concepto,case when id_cm = 1 then ''28'' else ''04'' end resultado,round(nimporte*2,2) Valor,2 from #importeConcep0428 
where tipo_mov not in (''24'',''25'') and categoria not like ''%AB001%''
                    
--insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, 
--desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
--select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, 
--desde_, hasta_, qnas, 2534 id_concepto,''04'' resultado,round(nimporte*2,2) Valor,2 from #importeConcep0428 
--where tipo_mov not in (''24'',''25'') and categoria not like ''%AB001%''
--and id_emp in (select id_emp from empleados where id_cia = 2)

--insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, 
--desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
--select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, 
--desde_, hasta_, qnas, 2404 id_concepto,''28'' resultado,round(nimporte*2,2) Valor,2 from #importeConcep0428 
--where tipo_mov not in (''24'',''25'') and categoria not like ''%AB001%''
--and id_emp in (select id_emp from empleados where id_cia = 1)


--58

select b.num, b.rfc, b.plaza, b.horas, b.categoria, b.desde, b.hasta, b.funcion, b.id_puesto, b.id_cm, b.id_npago, b.id_zona, b.modelo, b.tipo_mov, b.id_emp, b.id_plaza, 
b.desde_, b.hasta_, b.qnas, sum(valor) pesos into #importesporplazaSindicato_1
from #ne_ConceptosCosteoTotales b
inner join TTabulador_SE_Cat_Puesto t on t.id_Tabulador_SE_Cat_Puesto = b.id_puesto
where b.id_concepto in (1300,1557,1297, 1701,1702,1703,1705,1706,1707,1704) 
and b.tipo_mov not in (''24'',''25'') and b.categoria not like ''%AB001%'' and b.modelo in ( 2 , 3 , 5 , 6 , 9 ) and t.categoria not like ''%CF%''
group by b.num, b.rfc, b.plaza, b.horas, b.categoria, b.desde, b.hasta, b.funcion, b.id_puesto, b.id_cm, b.id_npago, b.id_zona, b.modelo, b.tipo_mov, b.id_emp, b.id_plaza, 
b.desde_, b.hasta_, b.qnas

insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza, 
desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza, 
desde_, hasta_, qnas, 2324 id_concepto,''58'' resultado,round(pesos * 0.01,2) Valor,2 
from #importesporplazaSindicato_1 
where tipo_mov not in (''24'',''25'') and categoria not like ''%AB001%'' and modelo in ( 2 , 3 , 5 , 6 , 9 ) 

select b.num, b.rfc, b.plaza, b.horas, b.categoria, b.desde, b.hasta, b.funcion, b.id_puesto, b.id_cm, b.id_npago, b.id_zona, b.modelo, b.tipo_mov, b.id_emp, b.id_plaza, 
b.desde_, b.hasta_, b.qnas, sum(valor) pesos into #importesporplazaSindicato_2
from #ne_ConceptosCosteoTotales b
inner join TTabulador_SE_Cat_Puesto t on t.id_Tabulador_SE_Cat_Puesto = b.id_puesto
where b.id_concepto in (1300,1318,1319,1320,1321,1322,1354,1557,1297,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,
263,264,265,266,267,268,269,270,271,272,273,274,275,200,201,202,203,204,230,205,206,207,208,209,231,210,211,212,213,214,232,215,216,217,218,219,233,220,221,222,
223,224,234,225,226,227,228,229,235, 1701,1702,1703,1705,1706,1707,1704) 
and b.tipo_mov not in (''24'',''25'') and b.categoria not like ''%AB001%'' and b.modelo in ( 1 , 4) and t.categoria not like ''%CF%''
group by b.num, b.rfc, b.plaza, b.horas, b.categoria, b.desde, b.hasta, b.funcion, b.id_puesto, b.id_cm, b.id_npago, b.id_zona, b.modelo, b.tipo_mov, b.id_emp, b.id_plaza, 
b.desde_, b.hasta_, b.qnas


insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza, 
desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza, 
desde_, hasta_, qnas, 2324 id_concepto,''58'' resultado,round(pesos * 0.01,2) Valor,2 
from #importesporplazaSindicato_2 
where tipo_mov not in (''24'',''25'') and categoria not like ''%AB001%'' and modelo in ( 1 , 4) 

select b.num, b.rfc, b.plaza, b.horas, b.categoria, b.desde, b.hasta, b.funcion, b.id_puesto, b.id_cm, b.id_npago, b.id_zona, b.modelo, b.tipo_mov, b.id_emp, b.id_plaza, 
b.desde_, b.hasta_, b.qnas, sum(valor) pesos   into #importesporplazaSindicato_3
from #ne_ConceptosCosteoTotales b
inner join TTabulador_SE_Cat_Puesto t on t.id_Tabulador_SE_Cat_Puesto = b.id_puesto
where b.id_concepto in (1510) 
and b.tipo_mov not in (''24'',''25'') and b.categoria not like ''%AB001%'' and b.modelo in ( 7) and t.categoria not like ''%CF%''
group by b.num, b.rfc, b.plaza, b.horas, b.categoria, b.desde, b.hasta, b.funcion, b.id_puesto, b.id_cm, b.id_npago, b.id_zona, b.modelo, b.tipo_mov, b.id_emp, b.id_plaza, 
b.desde_, b.hasta_, b.qnas

insert into #ne_ConceptosCosteoTotales (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza, 
desde_, hasta_, qnas, id_concepto, resultado, Valor,tipo)
select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza, 
desde_, hasta_, qnas, 2419 id_concepto,''52'' resultado,round(pesos * 0.01,2) Valor,2 
from #importesporplazaSindicato_3
where tipo_mov not in (''24'',''25'') and categoria not like ''%AB001%'' and modelo in ( 7) 



select a.*, case when c.clave = 5 then ''93'' else ''58'' end sindicato,case when c.clave = 5 then 2327 else 2324 end id_concepto
into #sindicatoBasica
from HSeccion_Sindical a inner join (
select id_emp, max(fecha) fecha from HSeccion_Sindical where fecha <= getdate() group by id_emp
) b on a.id_emp = b.id_emp and b.fecha = a.fecha
inner join tseccion__sindical c on a.id_rel = c.id_seccion__sindical
where a.id_emp in (select id_emp from empleados where id_cia = 2)

update a set a.resultado = c.sindicato, a.id_concepto = c.id_concepto
from #ne_ConceptosCosteoTotales a
inner join C_costeoMindDatos b on a.num=b.num
inner join #sindicatoBasica c on c.id_emp = b.id_emp
where a.id_concepto = 2324

select a.*, case when c.clave = 5 then ''93'' else ''52'' end sindicato,case when c.clave = 5 then 2328 else 2419 end id_concepto
into #sindicatoUPN
from HSeccion_Sindical a inner join (
select id_emp, max(fecha) fecha from HSeccion_Sindical where fecha <= getdate() group by id_emp
) b on a.id_emp = b.id_emp and b.fecha = a.fecha
inner join tseccion__sindical c on a.id_rel = c.id_seccion__sindical
where a.id_emp in (select id_emp from empleados where id_cia = 1)

 update a set a.resultado = c.sindicato, a.id_concepto = c.id_concepto
from #ne_ConceptosCosteoTotales a
inner join C_costeoMindDatos b on a.num=b.num
inner join #sindicatoBasica c on c.id_emp = b.id_emp
where a.id_concepto = 2419


-----

declare @query nvarchar(max) = ''''
if(@tPlaza = ''AD'')
begin

set @query = ''insert into '' + @TablaConceptos + '' (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza, desde_, hasta_, qnas, 
id_concepto, resultado, Valor,tipo,anio)
select c.num, c.rfc, c.plaza, c.horas, c.categoria, c.desde, c.hasta, c.funcion, c.id_puesto, c.id_cm, c.id_npago, c.id_zona, c.modelo, c.tipo_mov, c.id_emp, c.id_plaza, c.desde_, c.hasta_, a.qnas, 
a.id_concepto, a.resultado, a.Valor,a.tipo,  ''+ @año + ''  
from #ne_ConceptosCosteoTotales a
inner join #tablasustituta b on a.num = b.[row]
inner join #TablaAñoOriginal c on c.num = b.num ''
exec sp_executesql @query
end
else
begin
set @query = ''insert into '' + @TablaConceptos + '' (num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza, desde_, hasta_, qnas, 
id_concepto, resultado, Valor,tipo,anio)
select num, rfc, plaza, horas, categoria, desde, hasta, funcion, id_puesto, id_cm, id_npago, id_zona, modelo, tipo_mov, id_emp, id_plaza, desde_, hasta_, qnas, 
id_concepto, resultado, Valor,tipo, '' + @año + '' 
 from #ne_ConceptosCosteoTotales''
exec sp_executesql @query
end

end
-------

-- totales
if(@tPlaza = ''AD'')
begin
if (@año = ''2012'')
begin
update a set a.s2012 = b.sueldo, a.ag2012 = b.aguinaldo, a.pv2012 = b.prima, a.dm2012 = b.dm, a.ap2012 = b.ap, a.bo2012 = b.bo, a.di2012 = b.di, a.c882012 = b.c88
from C_costeoMindDatos a
inner join (
select c.num, c.rfc, c.plaza, c.horas, c.categoria, c.desde, c.hasta, c.funcion, c.id_puesto, c.id_cm, c.id_npago, c.id_zona, c.modelo, c.tipo_mov, 
c.id_emp, c.id_plaza, c.desde_, c.hasta_, sum(a.sueldo) sueldo, sum(a.aguinaldo) aguinaldo, sum(a.prima) prima, sum(a.DM) dm, sum(a.Cn) cn, sum(a.ap) ap, sum(a.bo) bo, sum(a.di) di, sum(a.c88) c88
from #tablaAño a
inner join #tablasustituta b on a.num = b.[row]
inner join #TablaAñoOriginal c on c.num = b.num
group by c.num, c.rfc, c.plaza, c.horas, c.categoria, c.desde, c.hasta, c.funcion, c.id_puesto, c.id_cm, c.id_npago, c.id_zona, c.modelo, c.tipo_mov, c.id_emp, c.id_plaza, c.desde_, c.hasta_
) b on a.num = b.num
--where b.qnas > 0
end

if (@año = ''2013'')
begin
update a set a.s2013 = b.sueldo, a.ag2013 = b.aguinaldo, a.pv2013 = b.prima, a.dm2013 = b.dm, a.ap2013 = b.ap, a.bo2013 = b.bo, a.di2013 = b.di, a.c882013 = b.c88
from C_costeoMindDatos a
inner join (
select c.num, c.rfc, c.plaza, c.horas, c.categoria, c.desde, c.hasta, c.funcion, c.id_puesto, c.id_cm, c.id_npago, c.id_zona, c.modelo, c.tipo_mov, 
c.id_emp, c.id_plaza, c.desde_, c.hasta_, sum(a.sueldo) sueldo, sum(a.aguinaldo) aguinaldo, sum(a.prima) prima, sum(a.DM) dm, sum(a.Cn) cn, sum(a.ap) ap, sum(a.bo) bo, sum(a.di) di, sum(a.c88) c88
from #tablaAño a
inner join #tablasustituta b on a.num = b.[row]
inner join #TablaAñoOriginal c on c.num = b.num
group by c.num, c.rfc, c.plaza, c.horas, c.categoria, c.desde, c.hasta, c.funcion, c.id_puesto, c.id_cm, c.id_npago, c.id_zona, c.modelo, c.tipo_mov, c.id_emp, c.id_plaza, c.desde_, c.hasta_
) b on a.num = b.num
--where b.qnas > 0
end

if (@año = ''2014'')
begin
update a set a.s2014 = b.sueldo, a.ag2014 = b.aguinaldo, a.pv2014 = b.prima, a.dm2014 = b.dm, a.ap2014 = b.ap, a.bo2014 = b.bo, a.di2014 = b.di, a.c882014 = b.c88
from C_costeoMindDatos a
inner join (
select c.num, c.rfc, c.plaza, c.horas, c.categoria, c.desde, c.hasta, c.funcion, c.id_puesto, c.id_cm, c.id_npago, c.id_zona, c.modelo, c.tipo_mov, 
c.id_emp, c.id_plaza, c.desde_, c.hasta_, sum(a.sueldo) sueldo, sum(a.aguinaldo) aguinaldo, sum(a.prima) prima, sum(a.DM) dm, sum(a.Cn) cn, sum(a.ap) ap, sum(a.bo) bo, sum(a.di) di, sum(a.c88) c88
from #tablaAño a
inner join #tablasustituta b on a.num = b.[row]
inner join #TablaAñoOriginal c on c.num = b.num
group by c.num, c.rfc, c.plaza, c.horas, c.categoria, c.desde, c.hasta, c.funcion, c.id_puesto, c.id_cm, c.id_npago, c.id_zona, c.modelo, c.tipo_mov, c.id_emp, c.id_plaza, c.desde_, c.hasta_
) b on a.num = b.num
--where b.qnas > 0
end

if (@año = ''2015'')
begin
update a set a.s2015 = b.sueldo, a.ag2015 = b.aguinaldo, a.pv2015 = b.prima, a.dm2015 = b.dm, a.ap2015 = b.ap, a.cn2015 = b.cn, a.bo2015 = b.bo, a.di2015 = b.di, a.c882015 = b.c88
from C_costeoMindDatos a
inner join (
select c.num, c.rfc, c.plaza, c.horas, c.categoria, c.desde, c.hasta, c.funcion, c.id_puesto, c.id_cm, c.id_npago, c.id_zona, c.modelo, c.tipo_mov, 
c.id_emp, c.id_plaza, c.desde_, c.hasta_, sum(a.sueldo) sueldo, sum(a.aguinaldo) aguinaldo, sum(a.prima) prima, sum(a.DM) dm, sum(a.Cn) cn, sum(a.ap) ap, sum(a.bo) bo, sum(a.di) di, sum(a.c88) c88
from #tablaAño a
inner join #tablasustituta b on a.num = b.[row]
inner join #TablaAñoOriginal c on c.num = b.num
group by c.num, c.rfc, c.plaza, c.horas, c.categoria, c.desde, c.hasta, c.funcion, c.id_puesto, c.id_cm, c.id_npago, c.id_zona, c.modelo, c.tipo_mov, c.id_emp, c.id_plaza, c.desde_, c.hasta_
) b on a.num = b.num
--where b.qnas > 0
end

if (@año = ''2016'')
begin
update a set a.s2016 = b.sueldo, a.ag2016 = b.aguinaldo, a.pv2016 = b.prima, a.dm2016 = b.dm, a.ap2016 = b.ap, a.cn2016 = b.cn, a.bo2016 = b.bo, a.di2016 = b.di, a.c882016 = b.c88
from C_costeoMindDatos a
inner join (
select c.num, c.rfc, c.plaza, c.horas, c.categoria, c.desde, c.hasta, c.funcion, c.id_puesto, c.id_cm, c.id_npago, c.id_zona, c.modelo, c.tipo_mov, 
c.id_emp, c.id_plaza, c.desde_, c.hasta_, sum(a.sueldo) sueldo, sum(a.aguinaldo) aguinaldo, sum(a.prima) prima, sum(a.DM) dm, sum(a.Cn) cn, sum(a.ap) ap, sum(a.bo) bo, sum(a.di) di, sum(a.c88) c88
from #tablaAño a
inner join #tablasustituta b on a.num = b.[row]
inner join #TablaAñoOriginal c on c.num = b.num
group by c.num, c.rfc, c.plaza, c.horas, c.categoria, c.desde, c.hasta, c.funcion, c.id_puesto, c.id_cm, c.id_npago, c.id_zona, c.modelo, c.tipo_mov, c.id_emp, c.id_plaza, c.desde_, c.hasta_
) b on a.num = b.num
--where b.qnas > 0
end

if (@año = ''2017'')
begin
update a set a.s2017 = b.sueldo, a.ag2017 = b.aguinaldo, a.pv2017 = b.prima, a.dm2017 = b.dm, a.ap2017 = b.ap, a.cn2017 = b.cn, a.bo2017 = b.bo, a.di2017 = b.di, a.c882017 = b.c88
from C_costeoMindDatos a
inner join (
select c.num, c.rfc, c.plaza, c.horas, c.categoria, c.desde, c.hasta, c.funcion, c.id_puesto, c.id_cm, c.id_npago, c.id_zona, c.modelo, c.tipo_mov, 
c.id_emp, c.id_plaza, c.desde_, c.hasta_, sum(a.sueldo) sueldo, sum(a.aguinaldo) aguinaldo, sum(a.prima) prima, sum(a.DM) dm, sum(a.Cn) cn, sum(a.ap) ap, sum(a.bo) bo, sum(a.di) di, sum(a.c88) c88
from #tablaAño a
inner join #tablasustituta b on a.num = b.[row]
inner join #TablaAñoOriginal c on c.num = b.num
group by c.num, c.rfc, c.plaza, c.horas, c.categoria, c.desde, c.hasta, c.funcion, c.id_puesto, c.id_cm, c.id_npago, c.id_zona, c.modelo, c.tipo_mov, c.id_emp, c.id_plaza, c.desde_, c.hasta_
) b on a.num = b.num
--where b.qnas > 0
end

if (@año = ''2018'')
begin
update a set a.s2018 = b.sueldo, a.ag2018 = b.aguinaldo, a.pv2018 = b.prima, a.dm2018 = b.dm, a.ap2018 = b.ap, a.cn2018 = b.cn, a.bo2018 = b.bo, a.di2018 = b.di, a.c882018 = b.c88
from C_costeoMindDatos a
inner join (
select c.num, c.rfc, c.plaza, c.horas, c.categoria, c.desde, c.hasta, c.funcion, c.id_puesto, c.id_cm, c.id_npago, c.id_zona, c.modelo, c.tipo_mov, 
c.id_emp, c.id_plaza, c.desde_, c.hasta_, sum(a.sueldo) sueldo, sum(a.aguinaldo) aguinaldo, sum(a.prima) prima, sum(a.DM) dm, sum(a.Cn) cn, sum(a.ap) ap, sum(a.bo) bo, sum(a.di) di, sum(a.c88) c88
from #tablaAño a
inner join #tablasustituta b on a.num = b.[row]
inner join #TablaAñoOriginal c on c.num = b.num
group by c.num, c.rfc, c.plaza, c.horas, c.categoria, c.desde, c.hasta, c.funcion, c.id_puesto, c.id_cm, c.id_npago, c.id_zona, c.modelo, c.tipo_mov, c.id_emp, c.id_plaza, c.desde_, c.hasta_
) b on a.num = b.num
--where b.qnas > 0
end

if (@año = ''2019'')
begin
update a set a.s2019 = b.sueldo, a.ag2019 = b.aguinaldo, a.pv2019 = b.prima, a.dm2019 = b.dm, a.ap2019 = b.ap, a.cn2019 = b.cn, a.bo2019 = b.bo, a.di2019 = 0, a.c882019 = 0
from C_costeoMindDatos a
inner join (
select c.num, c.rfc, c.plaza, c.horas, c.categoria, c.desde, c.hasta, c.funcion, c.id_puesto, c.id_cm, c.id_npago, c.id_zona, c.modelo, c.tipo_mov, 
c.id_emp, c.id_plaza, c.desde_, c.hasta_, sum(a.sueldo) sueldo, sum(a.aguinaldo) aguinaldo, sum(a.prima) prima, sum(a.DM) dm, sum(a.Cn) cn, sum(a.ap) ap, sum(a.bo) bo, sum(a.di) di, sum(a.c88) c88
from #tablaAño a
inner join #tablasustituta b on a.num = b.[row]
inner join #TablaAñoOriginal c on c.num = b.num
group by c.num, c.rfc, c.plaza, c.horas, c.categoria, c.desde, c.hasta, c.funcion, c.id_puesto, c.id_cm, c.id_npago, c.id_zona, c.modelo, c.tipo_mov, c.id_emp, c.id_plaza, c.desde_, c.hasta_
) b on a.num = b.num
--where b.qnas > 0

end
end
else
begin
if (@año = ''2012'')
begin
update a set a.s2012 = b.sueldo, a.ag2012 = b.aguinaldo, a.pv2012 = b.prima, a.dm2012 = b.dm, a.ap2012 = b.ap, a.bo2012 = b.bo, a.di2012 = b.di, a.c882012 = b.c88
from C_costeoMindDatos a
inner join #tablaAño b on a.num = b.num
where b.qnas > 0
end

if (@año = ''2013'')
begin
update a set a.s2013 = b.sueldo, a.ag2013 = b.aguinaldo, a.pv2013 = b.prima, a.dm2013 = b.dm, a.ap2013 = b.ap, a.bo2013 = b.bo, a.di2013 = b.di, a.c882013 = b.c88
from C_costeoMindDatos a
inner join #tablaAño b on a.num = b.num
where b.qnas > 0
end

if (@año = ''2014'')
begin
update a set a.s2014 = b.sueldo, a.ag2014 = b.aguinaldo, a.pv2014 = b.prima, a.dm2014 = b.dm, a.ap2014 = b.ap, a.bo2014 = b.bo, a.di2014 = b.di, a.c882014 = b.c88
from C_costeoMindDatos a
inner join #tablaAño b on a.num = b.num
where b.qnas > 0
end

if (@año = ''2015'')
begin
update a set a.s2015 = b.sueldo, a.ag2015 = b.aguinaldo, a.pv2015 = b.prima, a.dm2015 = b.dm, a.ap2015 = b.ap, a.cn2015 = b.cn, a.bo2015 = b.bo, a.di2015 = b.di, a.c882015 = b.c88
from C_costeoMindDatos a
inner join #tablaAño b on a.num = b.num
where b.qnas > 0
end

if (@año = ''2016'')
begin
update a set a.s2016 = b.sueldo, a.ag2016 = b.aguinaldo, a.pv2016 = b.prima, a.dm2016 = b.dm, a.ap2016 = b.ap, a.cn2016 = b.cn, a.bo2016 = b.bo, a.di2016 = b.di, a.c882016 = b.c88
from C_costeoMindDatos a
inner join #tablaAño b on a.num = b.num
where b.qnas > 0
end

if (@año = ''2017'')
begin
update a set a.s2017 = b.sueldo, a.ag2017 = b.aguinaldo, a.pv2017 = b.prima, a.dm2017 = b.dm, a.ap2017 = b.ap, a.cn2017 = b.cn, a.bo2017 = b.bo, a.di2017 = b.di, a.c882017 = b.c88
from C_costeoMindDatos a
inner join #tablaAño b on a.num = b.num
where b.qnas > 0
end

if (@año = ''2018'')
begin
update a set a.s2018 = b.sueldo, a.ag2018 = b.aguinaldo, a.pv2018 = b.prima, a.dm2018 = b.dm, a.ap2018 = b.ap, a.cn2018 = b.cn, a.bo2018 = b.bo, a.di2018 = b.di, a.c882018 = b.c88
from C_costeoMindDatos a
inner join #tablaAño b on a.num = b.num
where b.qnas > 0
end

if (@año = ''2019'')
begin
update a set a.s2019 = b.sueldo, a.ag2019 = b.aguinaldo, a.pv2019 = b.prima, a.dm2019 = b.dm, a.ap2019 = b.ap, a.cn2019 = b.cn, a.bo2019 = b.bo, a.di2019 = 0, a.c882019 = 0
from C_costeoMindDatos a
inner join #tablaAño b on a.num = b.num
where b.qnas > 0
end
end
select ''Completo''

END'
GO

GO
PRINT N'Creating [dbo].[sp_EliminaAtrasado_de_TrashTemporales]'
GO
IF OBJECT_ID(N'[dbo].[sp_EliminaAtrasado_de_TrashTemporales]', 'P') IS NULL
EXEC sp_executesql N'create Procedure [dbo].[sp_EliminaAtrasado_de_TrashTemporales]
As  
Declare @NomTabla  varchar (100), @IdTabla bigint,
        @DropTable varchar (200), @Type as varchar(2),
		@DeleteTable varchar (200),
        @nError    int   , @maximoid bigint
Begin
 set @nError = 0
 select @maximoid = max(id) from TrashTemp
 
	Declare Cur_Referencias Cursor For
	select marca from TrashTemp where marca<>0 and marca in (select idreferencia from TrashTemp_Bitacora where ejecucion < DATEADD(n,-60,getdate())) group by marca
	   Open Cur_Referencias
	   Fetch Next From Cur_Referencias Into @maximoid
	   While @@Fetch_Status = 0  
	   Begin     
			Declare Cur_Tablas Cursor For
				Select nomtabla, tipo, id From TrashTemp 
				where (tipo=''T'' or tipo=''V'') and left(nomtabla,1) = ''Z'' and marca=@maximoid 
				Order By id
			Open Cur_Tablas
			Fetch Next From Cur_Tablas Into @NomTabla, @Type, @IdTabla
			While @@Fetch_Status = 0  
			Begin     
				If @Type = ''T''
					Select @DropTable = ''Drop Table '' +  @NomTabla
				Else
					Select @DropTable = ''Drop View '' +  @NomTabla
				Select @DeleteTable = ''Delete from TrashTemp Where id='' +  cast(@IdTabla as varchar(15))
				Print @DropTable
				Print @DeleteTable
				Exec(@DropTable)
				Exec(@DeleteTable)
				Fetch Next From Cur_Tablas Into @NomTabla, @Type, @IdTabla
			End
			Close Cur_Tablas
			Deallocate Cur_Tablas   
		Fetch Next From Cur_Referencias Into @maximoid
	End
	Close Cur_Referencias
	Deallocate Cur_Referencias   

Fin:
Return @nError
End
'
GO

GO
PRINT N'Creating [dbo].[sp_movs_licencias_cubren]'
GO
IF OBJECT_ID(N'[dbo].[sp_movs_licencias_cubren]', 'P') IS NULL
EXEC sp_executesql N'----------------------------------
--- LICENCIAS CUBREN
----------------------------------
----------------------------------
----------------------------------
--- QUINCENA DE LA QUE SE DESEA EL REPORTE---
create procedure [dbo].[sp_movs_licencias_cubren]
 (
 @Quincena as int,
 @id_cia as int
 )
 with encryption 
 as begin
declare @año as int
set @quincena=Case when @Quincena=1 then 24 else @Quincena-1 end
set @año= Case when @quincena=24 then year(GETDATE())-1 else YEAR(GETDATE()) end

select --row_number() OVER (ORDER BY ftm.clave,fmm.clave) 
'''' as ID_OPERACION,
OPERACION= Case when fmm.Id_MotivoMovimiento in (2,7) then ''06-20'' else ftm.Clave +''-'' +fmm.clave end,
e.curp AS CURP,
replace(pi.PlazaIEEPO,'' '','''') AS CPZA,
ttcm.id_Tabulador_SE_CM  AS NIVEL_SALARIAL,
''R20'' AS UR,
''PERIODO''= CASE WHEN C.NUMERO=24 THEN cast (right(''00'' + cast(01 as varchar(max)),2) + cast(''/'' as varchar(max)) + cast (year(getdate()) as varchar (max)) as varchar(max)) ELSE 
cast (right(''00'' + cast((cast (c.Numero as int)+1) as varchar(max)),2) + cast(''/'' as varchar(max)) + cast(c.año as varchar(max)) as varchar(max)) END,
''O'' AS TIPO_NOMINA,convert(char(12),c.fechaini,103) as FECHA,
fid.Centro_Trabajo AS CCT,
e.RFC, e.ApPaterno AS PRIMER_APELLIDO,
e.ApMaterno AS SEGUNDO_APELLIDO,
e.Nombre AS ''NOMBRE(S)'',
right(''00'' + cast(tnac.Id_Nacionalidad as varchar(max)),3) AS NACIONALIDAD,
PAIS_NAC=Case when tp.Descr=''MEXICO'' then 141 else 0 end,         
ENTIDAD_NAC=Case  substring(e.curp,12,2)
            when ''AS'' then 1 
            when ''BC'' then 2 
            when ''BS'' then 3 
            when ''CC'' then 4 
            when ''CS'' then 5
            when ''CM'' then 6 
            when ''CL'' then 7 
            when ''CH'' then 8 
            when ''DF'' then 9
            when ''DG'' then 10
            when ''GT'' then 11
            when ''GR'' then 12
            when ''HG'' then 13
            when ''JC'' then 14 
            when ''MC'' then 15 
            when ''MN'' then 16
            when ''MS'' then 17 
            when ''NT'' then 18 
            when ''NL'' then 19
            when ''OC'' then 20
            when ''PL'' then 21 
            when ''QT'' then 22
            when ''QR'' then 23 
            when ''SP'' then 24 
            when ''SL'' then 25
            when ''SR'' then 26
            when ''TC'' then 27
            when ''TS'' then 28
            when ''TL'' then 29
            when ''VZ'' then 30
            when ''YN'' then 31
            when ''ZS'' then 32
            else 0 end,         
MUNICIPIO_NAC= Case when e.Id_MunicipioNac is null then 0 else tc.Id_Ciudad end,
e.SEXO,
EDO_CIVIL= Case when e.edocivil=''C'' then ''02'' else 
		   Case when e.edocivil=''S'' then ''01'' else ''01'' end end,
CALLE_Y_NUM= Case when hd.Calle is null then '''' else cast(hd.calle as varchar(max))+ '' ''+ CAST(hd.numext as varchar (10)) end,
CP= Case when hd.CodPostal is null then '''' else hd.CodPostal end,
COLONIA= Case when hd.Id_Colonia = 0 or hd.Id_Colonia is null then '''' else tcol.DESCR end,
ENTIDAD=Case when e.Id_EstadoNac is null then ''S/A'' else case when e.Id_EstadoNac<=32 then substring(te.descr,4,50) else te.descr end end,
MUNICIPIO= Case when e.Id_MunicipioNac is null then '''' else upper(tc.Descr) end,
LOCALIDAD=Case when hd.Id_Localidad = 0 or hd.Id_Colonia is null then '''' else tloc.Descr end,
'''' AS NIV_MAX_ESTUD,
ING_GOB_FED= case when hfagf.fecha is null then '''' else SUBSTRING(dbo.fechatoanioquincena(hfagf.fecha),1,4)+'' '' +SUBSTRING(dbo.fechatoanioquincena(hfagf.fecha),5,2) end,
ING_SEP= case when hfas.fecha is null then '''' else SUBSTRING(dbo.fechatoanioquincena(hfas.fecha),1,4)+'' '' +SUBSTRING(dbo.fechatoanioquincena(hfas.fecha),5,2) end,
ING_RAMA= case when hfar.fecha is null then '''' else SUBSTRING(dbo.fechatoanioquincena(hfar.fecha),1,4)+'' '' + SUBSTRING(dbo.fechatoanioquincena(hfar.fecha),5,2)end,
'''' as TIPO_LIC,	
'''' as QUINQ_DOC,	
'''' as QUINQ_ADM	,
'''' as GRADO_LIC,	
'''' as TITULACIÓN,
HORARIO=Case when rt.id_nodo is null then '''' else tt.descripcion end,
ftm.Clave as MOVIMIENTO,	
ftm.Descripcion as DESC_MOVIMIENTO,	
fmm.Clave as MOTIVO,	
fmm.Descripcion as DESC_MOTIVO,
Convert(varchar(10), fdd.Fechaini, 103) as FECHA_INI, 
FECHA_FIN= case when dbo.fechaToAnioQuincena(fdd.fechaini)=dbo.fechaToAnioQuincena(fdd.fechafin) then Convert(varchar(10), dbo.anioQuincenaToFecha(''999924'',1), 103)  else Convert(varchar(10), fdd.FechaFin, 103) end,
'''' as CONCEPTOS_PAGO,
REGIMEN= Case when di.regimen_pensionario is null then 2 else Case when di.regimen_pensionario='''' then 2 else Case when di.regimen_pensionario=''DECIMO TRANSITORIO'' then 1 else Case when di.regimen_pensionario=''CUENTAS INDIVIDUALES'' then 2 end end end end
from fup_documentos fd
inner join empleados e on fd.Id_Emp = e.Id_Emp
inner join fup_documento_detalle fdd on fd.Id_Documento = fdd.Id_Documento
inner join plazas p on fdd.Id_Plaza = p.Id_plaza
inner join (select id_plaza,MAX(fecha) fecha
from HTabulador_SE_cm htcm
group by id_plaza
) nc on fdd.Id_plaza=nc.id_plaza
inner join HTabulador_SE_CM htcm on htcm.id_plaza=nc.id_plaza and htcm.fecha=nc.fecha
inner join TTabulador_SE_CM ttcm on htcm.id_rel=ttcm.id_Tabulador_SE_CM
inner join usuarios u on fd.Id_Usuario = u.Id_Usuario
inner join FUP_Informacion_Documentos fid on fd.Id_Documento = fid.Id_Documento
inner join CalenNomina c on fid.Id_Periodo = c.Id_Periodo
inner join FUP_MotivoMovimiento fmm on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
inner join tniveleducativo tn on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
inner join TNacionalidad tnac on e.Id_Nacionalidad=tnac.Id_Nacionalidad
inner join TPais tp on tnac.Id_Nacionalidad=tp.Id_Pais
left join TEstados te on e.Id_EstadoNac = te.Id_Estado
left join tciudad tc on e.Id_EstadoNac=te.Id_Estado and tc.Id_Ciudad=e.Id_MunicipioNac
left join (select id_emp,MAX(movimiento) fecha
from hdomicilio 
group by id_emp
) hdoc on e.Id_emp=hdoc.id_emp
left join HDomicilio hd on hd.id_emp=hdoc.id_emp and hdoc.fecha=hd.Movimiento
left join tcolonia tcol on hd.Id_Colonia=tcol.Id_Colonia
left join TLocalidad tloc on hd.Id_Localidad=tloc.id_Localidad
left join (select id_emp,MAX(fecha_alta_gob_fed) fecha
from HFecha_Alta_Gob_Fed group by id_emp
) hfagf on e.Id_Emp=hfagf.id_emp
left join (select id_emp,MAX(fecha_alta_sep) fecha
from HFecha_Alta_sep group by id_emp
) hfas on e.Id_Emp=hfas.id_emp
left join (select id_emp,MAX(fecha_alta_rama) fecha
from HFecha_Alta_rama group by id_emp
) hfar on e.Id_Emp=hfar.id_emp
inner join ( select distinct fvi.Id_Valor,tf.idFormula,tf.Descripcion,fvi.valor,fvi.id_documento,fdc.Id_MotivoMovimiento from FUP_DetalleCampos fdc
inner join Tformulas tf on fdc.Id_Formula=tf.idFormula
inner join FUP_ValorInteger fvi on fdc.Id_Valor=fvi.Id_Valor
inner join FUP_Documento_Detalle fdocd on fvi.Id_Documento=fdocd.Id_Detalle
where fdc.Id_MotivoMovimiento in (2,7) and tf.Descripcion=''id_plaza''
and fdocd.Id_Plaza<>fvi.Valor 
) pip on fdd.Id_Detalle=pip.Id_Documento 
inner join plazaieepo pi on pip.valor = pi.Id_plaza
inner join VistaTablaLongitud vt on fid.Centro_Trabajo=vt.clave
inner join RCT_Turno rt on vt.Id_Nodo=rt.id_nodo
inner join TCT_Turno tt on rt.id_rel=tt.id_CT_Turno
left join DatosISSSTE di on e.curp=di.curp
where --fid.Id_Periodo in (select id_periodo from calennomina where Id_cia=2 and año=YEAR(GETDATE()) and actualizado=0 and Parcial<>0 and Leyenda10=''CFUP'') 
fid.Id_Periodo in (select id_periodo from calennomina where Numero in (@quincena)
and Id_cia=@id_cia --and Leyenda10=''CFUP'' 
and Año=@año and parcial<> 0
union all 
select id_periodo from calennomina where Numero in (@quincena+1)
and Id_cia=@id_cia --and Leyenda10=''CFUP'' 
and Año=@año and parcial= 0)
and e.id_cia=@id_cia and fd.Id_Estatus =2 and fd.folio not in (select folio_n from HFolio_verificado)
and fmm.Id_MotivoMovimiento in (2,7)
and fd.observaciones not like ''%verificado%'' and fd.observaciones not like ''%procesado%''
and fdd.FechaFin >=(
select TOp 1 fechafin from calennomina where Id_cia=@id_cia and Año=YEAR(GETDATE()) and Actualizado=0
)
union all (
select --row_number() OVER (ORDER BY ftm.clave,fmm.clave) 
'''' as ID_OPERACION,
OPERACION= Case when fmm.Id_MotivoMovimiento in (3,8) then ''06-24'' else ftm.Clave +''-'' +fmm.clave end,
e.curp AS CURP,
replace(pi.PlazaIEEPO,'' '','''') AS CPZA,
ttcm.id_Tabulador_SE_CM  AS NIVEL_SALARIAL,
''R20'' AS UR,
''PERIODO''= CASE WHEN C.NUMERO=24 THEN cast (right(''00'' + cast(01 as varchar(max)),2) + cast(''/'' as varchar(max)) + cast (year(getdate()) as varchar (max)) as varchar(max)) ELSE 
cast (right(''00'' + cast((cast (c.Numero as int)+1) as varchar(max)),2) + cast(''/'' as varchar(max)) + cast(c.año as varchar(max)) as varchar(max)) END,
''O'' AS TIPO_NOMINA,convert(char(12),c.fechaini,103) as FECHA,
fid.Centro_Trabajo AS CCT,
e.RFC, e.ApPaterno AS PRIMER_APELLIDO,
e.ApMaterno AS SEGUNDO_APELLIDO,
e.Nombre AS ''NOMBRE(S)'',
right(''00'' + cast(tnac.Id_Nacionalidad as varchar(max)),3) AS NACIONALIDAD,
PAIS_NAC=Case when tp.Descr=''MEXICO'' then 141 else 0 end,         
ENTIDAD_NAC=Case  substring(e.curp,12,2)
            when ''AS'' then 1 
            when ''BC'' then 2 
            when ''BS'' then 3 
            when ''CC'' then 4 
            when ''CS'' then 5
            when ''CM'' then 6 
            when ''CL'' then 7 
            when ''CH'' then 8 
            when ''DF'' then 9
            when ''DG'' then 10
            when ''GT'' then 11
            when ''GR'' then 12
            when ''HG'' then 13
            when ''JC'' then 14 
            when ''MC'' then 15 
            when ''MN'' then 16
            when ''MS'' then 17 
            when ''NT'' then 18 
            when ''NL'' then 19
            when ''OC'' then 20
            when ''PL'' then 21 
            when ''QT'' then 22
            when ''QR'' then 23 
            when ''SP'' then 24 
            when ''SL'' then 25
            when ''SR'' then 26
            when ''TC'' then 27
            when ''TS'' then 28
            when ''TL'' then 29
            when ''VZ'' then 30
            when ''YN'' then 31
            when ''ZS'' then 32
            else 0 end,         
MUNICIPIO_NAC= Case when e.Id_MunicipioNac is null then 0 else tc.Id_Ciudad end,
e.SEXO,
EDO_CIVIL= Case when e.edocivil=''C'' then ''02'' else 
		   Case when e.edocivil=''S'' then ''01'' else ''01'' end end,
CALLE_Y_NUM= Case when hd.Calle is null then '''' else cast(hd.calle as varchar(max))+ '' ''+ CAST(hd.numext as varchar (10)) end,
CP= Case when hd.CodPostal is null then '''' else hd.CodPostal end,
COLONIA= Case when hd.Id_Colonia = 0 or hd.Id_Colonia is null then '''' else tcol.DESCR end,
ENTIDAD=Case when e.Id_EstadoNac is null then ''S/A'' else case when e.Id_EstadoNac<=32 then substring(te.descr,4,50) else te.descr end end,
MUNICIPIO= Case when e.Id_MunicipioNac is null then '''' else upper(tc.Descr) end,
LOCALIDAD=Case when hd.Id_Localidad = 0 or hd.Id_Colonia is null then '''' else tloc.Descr end,
'''' AS NIV_MAX_ESTUD,
ING_GOB_FED= case when hfagf.fecha is null then '''' else SUBSTRING(dbo.fechatoanioquincena(hfagf.fecha),1,4)+'' '' +SUBSTRING(dbo.fechatoanioquincena(hfagf.fecha),5,2) end,
ING_SEP= case when hfas.fecha is null then '''' else SUBSTRING(dbo.fechatoanioquincena(hfas.fecha),1,4)+'' '' +SUBSTRING(dbo.fechatoanioquincena(hfas.fecha),5,2) end,
ING_RAMA= case when hfar.fecha is null then '''' else SUBSTRING(dbo.fechatoanioquincena(hfar.fecha),1,4)+'' '' + SUBSTRING(dbo.fechatoanioquincena(hfar.fecha),5,2)end,
'''' as TIPO_LIC,	
'''' as QUINQ_DOC,	
'''' as QUINQ_ADM	,
'''' as GRADO_LIC,	
'''' as TITULACIÓN,
HORARIO=Case when rt.id_nodo is null then '''' else tt.descripcion end,
ftm.Clave as MOVIMIENTO,	
ftm.Descripcion as DESC_MOVIMIENTO,	
fmm.Clave as MOTIVO,	
fmm.Descripcion as DESC_MOTIVO,
Convert(varchar(10), fdd.Fechaini, 103) as FECHA_INI, 
FECHA_FIN= case when dbo.fechaToAnioQuincena(fdd.fechaini)=dbo.fechaToAnioQuincena(fdd.fechafin) then Convert(varchar(10), dbo.anioQuincenaToFecha(''999924'',1), 103)  else Convert(varchar(10), fdd.FechaFin, 103) end,
'''' as CONCEPTOS_PAGO,
REGIMEN= Case when di.regimen_pensionario is null then 2 else Case when di.regimen_pensionario='''' then 2 else Case when di.regimen_pensionario=''DECIMO TRANSITORIO'' then 1 else Case when di.regimen_pensionario=''CUENTAS INDIVIDUALES'' then 2 end end end end
from fup_documentos fd
inner join empleados e on fd.Id_Emp = e.Id_Emp
inner join fup_documento_detalle fdd on fd.Id_Documento = fdd.Id_Documento
inner join plazas p on fdd.Id_Plaza = p.Id_plaza
inner join (select id_plaza,MAX(fecha) fecha
from HTabulador_SE_cm htcm
group by id_plaza
) nc on fdd.Id_plaza=nc.id_plaza
inner join HTabulador_SE_CM htcm on htcm.id_plaza=nc.id_plaza and htcm.fecha=nc.fecha
inner join TTabulador_SE_CM ttcm on htcm.id_rel=ttcm.id_Tabulador_SE_CM
inner join usuarios u on fd.Id_Usuario = u.Id_Usuario
inner join FUP_Informacion_Documentos fid on fd.Id_Documento = fid.Id_Documento
inner join CalenNomina c on fid.Id_Periodo = c.Id_Periodo
inner join FUP_MotivoMovimiento fmm on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
inner join tniveleducativo tn on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
inner join TNacionalidad tnac on e.Id_Nacionalidad=tnac.Id_Nacionalidad
inner join TPais tp on tnac.Id_Nacionalidad=tp.Id_Pais
left join TEstados te on e.Id_EstadoNac = te.Id_Estado
left join tciudad tc on e.Id_EstadoNac=te.Id_Estado and tc.Id_Ciudad=e.Id_MunicipioNac
left join (select id_emp,MAX(movimiento) fecha
from hdomicilio 
group by id_emp
) hdoc on e.Id_emp=hdoc.id_emp
left join HDomicilio hd on hd.id_emp=hdoc.id_emp and hdoc.fecha=hd.Movimiento
left join tcolonia tcol on hd.Id_Colonia=tcol.Id_Colonia
left join TLocalidad tloc on hd.Id_Localidad=tloc.id_Localidad
left join (select id_emp,MAX(fecha_alta_gob_fed) fecha
from HFecha_Alta_Gob_Fed group by id_emp
) hfagf on e.Id_Emp=hfagf.id_emp
left join (select id_emp,MAX(fecha_alta_sep) fecha
from HFecha_Alta_sep group by id_emp
) hfas on e.Id_Emp=hfas.id_emp
left join (select id_emp,MAX(fecha_alta_rama) fecha
from HFecha_Alta_rama group by id_emp
) hfar on e.Id_Emp=hfar.id_emp
inner join ( select distinct fvi.Id_Valor,tf.idFormula,tf.Descripcion,fvi.valor,fvi.id_documento,fdc.Id_MotivoMovimiento from FUP_DetalleCampos fdc
inner join Tformulas tf on fdc.Id_Formula=tf.idFormula
inner join FUP_ValorInteger fvi on fdc.Id_Valor=fvi.Id_Valor
inner join FUP_Documento_Detalle fdocd on fvi.Id_Documento=fdocd.Id_Detalle
where fdc.Id_MotivoMovimiento in (3,8) and tf.Descripcion=''id_plaza''
and fdocd.Id_Plaza<>fvi.Valor 
) pip on fdd.Id_Detalle=pip.Id_Documento 
--inner join plazaieepo pi on pip.valor = pi.Id_plaza--PIDIERON SE CAMBIARA A PARTIDA 07
inner join plazaieepo pi on fdd.Id_Plaza = pi.Id_plaza
inner join VistaTablaLongitud vt on fid.Centro_Trabajo=vt.clave
inner join RCT_Turno rt on vt.Id_Nodo=rt.id_nodo
inner join TCT_Turno tt on rt.id_rel=tt.id_CT_Turno
left join DatosISSSTE di on e.curp=di.curp
where --fid.Id_Periodo in (select id_periodo from calennomina where Id_cia=2 and año=YEAR(GETDATE()) and actualizado=0 and Parcial<>0 and Leyenda10=''CFUP'') 
fid.Id_Periodo in (select id_periodo from calennomina where Numero in (@quincena)
and Id_cia=@id_cia --and Leyenda10=''CFUP'' 
and Año=@año and parcial<> 0
union all 
select id_periodo from calennomina where Numero in (@quincena+1)
and Id_cia=@id_cia --and Leyenda10=''CFUP'' 
and Año=@año and parcial= 0)
and e.id_cia=@id_cia and fd.Id_Estatus =2 and fd.folio not in (select folio_n from HFolio_verificado)
and fmm.Id_MotivoMovimiento in (3,8)
and fd.observaciones not like ''%verificado%'' and fd.observaciones not like ''%procesado%'' 
and fdd.FechaFin >=(
select TOp 1 fechafin from calennomina where Id_cia=@id_cia and Año=YEAR(GETDATE()) and Actualizado=0
)
)
union all (
select --row_number() OVER (ORDER BY ftm.clave,fmm.clave) 
'''' as ID_OPERACION,
OPERACION= Case when fmm.Id_MotivoMovimiento in (4,9) then ''06-25'' else ftm.Clave +''-'' +fmm.clave end,
e.curp AS CURP,
replace(pi.PlazaIEEPO,'' '','''') AS CPZA,
ttcm.id_Tabulador_SE_CM  AS NIVEL_SALARIAL,
''R20'' AS UR,
''PERIODO''= CASE WHEN C.NUMERO=24 THEN cast (right(''00'' + cast(01 as varchar(max)),2) + cast(''/'' as varchar(max)) + cast (year(getdate()) as varchar (max)) as varchar(max)) ELSE 
cast (right(''00'' + cast((cast (c.Numero as int)+1) as varchar(max)),2) + cast(''/'' as varchar(max)) + cast(c.año as varchar(max)) as varchar(max)) END,
''O'' AS TIPO_NOMINA,convert(char(12),c.fechaini,103) as FECHA,
fid.Centro_Trabajo AS CCT,
e.RFC, e.ApPaterno AS PRIMER_APELLIDO,
e.ApMaterno AS SEGUNDO_APELLIDO,
e.Nombre AS ''NOMBRE(S)'',
right(''00'' + cast(tnac.Id_Nacionalidad as varchar(max)),3) AS NACIONALIDAD,
PAIS_NAC=Case when tp.Descr=''MEXICO'' then 141 else 0 end,         
ENTIDAD_NAC=Case  substring(e.curp,12,2)
            when ''AS'' then 1 
            when ''BC'' then 2 
            when ''BS'' then 3 
            when ''CC'' then 4 
            when ''CS'' then 5
            when ''CM'' then 6 
            when ''CL'' then 7 
            when ''CH'' then 8 
            when ''DF'' then 9
            when ''DG'' then 10
            when ''GT'' then 11
            when ''GR'' then 12
            when ''HG'' then 13
            when ''JC'' then 14 
            when ''MC'' then 15 
            when ''MN'' then 16
            when ''MS'' then 17 
            when ''NT'' then 18 
            when ''NL'' then 19
            when ''OC'' then 20
            when ''PL'' then 21 
            when ''QT'' then 22
            when ''QR'' then 23 
            when ''SP'' then 24 
            when ''SL'' then 25
            when ''SR'' then 26
            when ''TC'' then 27
            when ''TS'' then 28
            when ''TL'' then 29
            when ''VZ'' then 30
            when ''YN'' then 31
            when ''ZS'' then 32
            else 0 end,         
MUNICIPIO_NAC= Case when e.Id_MunicipioNac is null then 0 else tc.Id_Ciudad end,
e.SEXO,
EDO_CIVIL= Case when e.edocivil=''C'' then ''02'' else 
		   Case when e.edocivil=''S'' then ''01'' else ''01'' end end,
CALLE_Y_NUM= Case when hd.Calle is null then '''' else cast(hd.calle as varchar(max))+ '' ''+ CAST(hd.numext as varchar (10)) end,
CP= Case when hd.CodPostal is null then '''' else hd.CodPostal end,
COLONIA= Case when hd.Id_Colonia = 0 or hd.Id_Colonia is null then '''' else tcol.DESCR end,
ENTIDAD=Case when e.Id_EstadoNac is null then ''S/A'' else case when e.Id_EstadoNac<=32 then substring(te.descr,4,50) else te.descr end end,
MUNICIPIO= Case when e.Id_MunicipioNac is null then '''' else upper(tc.Descr) end,
LOCALIDAD=Case when hd.Id_Localidad = 0 or hd.Id_Colonia is null then '''' else tloc.Descr end,
'''' AS NIV_MAX_ESTUD,
ING_GOB_FED= case when hfagf.fecha is null then '''' else SUBSTRING(dbo.fechatoanioquincena(hfagf.fecha),1,4)+'' '' +SUBSTRING(dbo.fechatoanioquincena(hfagf.fecha),5,2) end,
ING_SEP= case when hfas.fecha is null then '''' else SUBSTRING(dbo.fechatoanioquincena(hfas.fecha),1,4)+'' '' +SUBSTRING(dbo.fechatoanioquincena(hfas.fecha),5,2) end,
ING_RAMA= case when hfar.fecha is null then '''' else SUBSTRING(dbo.fechatoanioquincena(hfar.fecha),1,4)+'' '' + SUBSTRING(dbo.fechatoanioquincena(hfar.fecha),5,2)end,
'''' as TIPO_LIC,	
'''' as QUINQ_DOC,	
'''' as QUINQ_ADM	,
'''' as GRADO_LIC,	
'''' as TITULACIÓN,
HORARIO=Case when rt.id_nodo is null then '''' else tt.descripcion end,
ftm.Clave as MOVIMIENTO,	
ftm.Descripcion as DESC_MOVIMIENTO,	
fmm.Clave as MOTIVO,	
fmm.Descripcion as DESC_MOTIVO,
Convert(varchar(10), fdd.Fechaini, 103) as FECHA_INI,
FECHA_FIN= case when dbo.fechaToAnioQuincena(fdd.fechaini)=dbo.fechaToAnioQuincena(fdd.fechafin) then Convert(varchar(10), dbo.anioQuincenaToFecha(''999924'',1), 103)  else Convert(varchar(10), fdd.FechaFin, 103) end,
'''' as CONCEPTOS_PAGO,
REGIMEN= Case when di.regimen_pensionario is null then 2 else Case when di.regimen_pensionario='''' then 2 else Case when di.regimen_pensionario=''DECIMO TRANSITORIO'' then 1 else Case when di.regimen_pensionario=''CUENTAS INDIVIDUALES'' then 2 end end end end
from fup_documentos fd
inner join empleados e on fd.Id_Emp = e.Id_Emp
inner join fup_documento_detalle fdd on fd.Id_Documento = fdd.Id_Documento
inner join plazas p on fdd.Id_Plaza = p.Id_plaza
inner join (select id_plaza,MAX(fecha) fecha
from HTabulador_SE_cm htcm
group by id_plaza
) nc on fdd.Id_plaza=nc.id_plaza
inner join HTabulador_SE_CM htcm on htcm.id_plaza=nc.id_plaza and htcm.fecha=nc.fecha
inner join TTabulador_SE_CM ttcm on htcm.id_rel=ttcm.id_Tabulador_SE_CM
inner join usuarios u on fd.Id_Usuario = u.Id_Usuario
inner join FUP_Informacion_Documentos fid on fd.Id_Documento = fid.Id_Documento
inner join CalenNomina c on fid.Id_Periodo = c.Id_Periodo
inner join FUP_MotivoMovimiento fmm on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
inner join tniveleducativo tn on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
inner join TNacionalidad tnac on e.Id_Nacionalidad=tnac.Id_Nacionalidad
inner join TPais tp on tnac.Id_Nacionalidad=tp.Id_Pais
left join TEstados te on e.Id_EstadoNac = te.Id_Estado
left join tciudad tc on e.Id_EstadoNac=te.Id_Estado and tc.Id_Ciudad=e.Id_MunicipioNac
left join (select id_emp,MAX(movimiento) fecha
from hdomicilio 
group by id_emp
) hdoc on e.Id_emp=hdoc.id_emp
left join HDomicilio hd on hd.id_emp=hdoc.id_emp and hdoc.fecha=hd.Movimiento
left join tcolonia tcol on hd.Id_Colonia=tcol.Id_Colonia
left join TLocalidad tloc on hd.Id_Localidad=tloc.id_Localidad
left join (select id_emp,MAX(fecha_alta_gob_fed) fecha
from HFecha_Alta_Gob_Fed group by id_emp
) hfagf on e.Id_Emp=hfagf.id_emp
left join (select id_emp,MAX(fecha_alta_sep) fecha
from HFecha_Alta_sep group by id_emp
) hfas on e.Id_Emp=hfas.id_emp
left join (select id_emp,MAX(fecha_alta_rama) fecha
from HFecha_Alta_rama group by id_emp
) hfar on e.Id_Emp=hfar.id_emp
inner join ( select distinct fvi.Id_Valor,tf.idFormula,tf.Descripcion,fvi.valor,fvi.id_documento,fdc.Id_MotivoMovimiento from FUP_DetalleCampos fdc
inner join Tformulas tf on fdc.Id_Formula=tf.idFormula
inner join FUP_ValorInteger fvi on fdc.Id_Valor=fvi.Id_Valor
inner join FUP_Documento_Detalle fdocd on fvi.Id_Documento=fdocd.Id_Detalle
where fdc.Id_MotivoMovimiento in (4,9) and tf.Descripcion=''id_plaza''
and fdocd.Id_Plaza<>fvi.Valor 
) pip on fdd.Id_Detalle=pip.Id_Documento 
--inner join plazaieepo pi on pip.valor = pi.Id_plaza -- PIDIERON SE CAMABIARA LA PARTIDA A 07 07052015
inner join plazaieepo pi on fdd.ID_PLAZA = pi.Id_plaza
inner join VistaTablaLongitud vt on fid.Centro_Trabajo=vt.clave
inner join RCT_Turno rt on vt.Id_Nodo=rt.id_nodo
inner join TCT_Turno tt on rt.id_rel=tt.id_CT_Turno
left join DatosISSSTE di on e.curp=di.curp
where --fid.Id_Periodo in (select id_periodo from calennomina where Id_cia=2 and año=YEAR(GETDATE()) and actualizado=0 and Parcial<>0 and Leyenda10=''CFUP'') 
fid.Id_Periodo in (select id_periodo from calennomina where Numero in (@quincena)
and Id_cia=@id_cia --and Leyenda10=''CFUP'' 
and Año=@año and parcial<> 0
union all 
select id_periodo from calennomina where Numero in (@quincena+1)
and Id_cia=@id_cia --and Leyenda10=''CFUP'' 
and Año=@año and parcial= 0)
and e.id_cia=@id_cia and fd.Id_Estatus =2 and fd.folio not in (select folio_n from HFolio_verificado)
and fmm.Id_MotivoMovimiento in (4,9)
and fd.observaciones not like ''%verificado%'' and fd.observaciones not like ''%procesado%''
and fdd.FechaFin >=(
select TOp 1 fechafin from calennomina where Id_cia=@id_cia and Año=YEAR(GETDATE()) and Actualizado=0
)
)
end'
GO

GO
PRINT N'Creating [dbo].[InicializaHcontinuidad]'
GO
IF OBJECT_ID(N'[dbo].[InicializaHcontinuidad]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[InicializaHcontinuidad]
@idEmp int
WITH EXEC AS CALLER
AS
begin                  
 --Delete from Hcontinuidad where añoqna = ''201212'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                 
                   
 --insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 --select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 --from BasePeriodo(''20120616'',''20120630'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End             
           
 --update Hcontinuidad set añoqnacontinuidad = ''201212'' where añoqna = ''201212'' and  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End             
                   
 --Delete from Hcontinuidad where añoqna = ''201213'' and  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 --insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 --select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 --from BasePeriodo(''20120701'',''20120715'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                
                   
 --Delete from Hcontinuidad where añoqna = ''201214'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                 
                   
 --insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 --select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 --from BasePeriodo(''20120716'',''20120731'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 --Delete from Hcontinuidad where añoqna = ''201215'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 --insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 --select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 --from BasePeriodo(''20120801'',''20120815'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 --Delete from Hcontinuidad where añoqna = ''201216'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 --insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 --select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 --from BasePeriodo(''20120816'',''20120831'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                  
 --Delete from Hcontinuidad where añoqna = ''201217'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 --insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 --select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 --from BasePeriodo(''20120901'',''20120915'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End        
                  
 --Delete from Hcontinuidad where añoqna = ''201218'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 --insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 --select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 --from BasePeriodo(''20120916'',''20120930'',@idEmp)  Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                 
                  
 --Delete from Hcontinuidad where añoqna = ''201219'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 --insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 --select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 --from BasePeriodo(''20121001'',''20121015'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                  
 --Delete from Hcontinuidad where añoqna = ''201220'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                 
                   
 --insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 --select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 --from BasePeriodo(''20121016'',''20121031'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                   
                  
 --Delete from Hcontinuidad where añoqna = ''201221'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                   
                   
 --insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 --select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 --from BasePeriodo(''20121101'',''20121115'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                  
 --Delete from Hcontinuidad where añoqna = ''201222'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End              
                   
 --insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 --select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 --from BasePeriodo(''20121116'',''20121130'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                   
                  
 --Delete from Hcontinuidad where añoqna = ''201223'' and  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                   
                   
 --insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 --select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 --from BasePeriodo(''20121201'',''20121215'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                   
                  
 --Delete from Hcontinuidad where añoqna = ''201224'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                 
                   
 --insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 --select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 --from BasePeriodo(''20121216'',''20121231'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                   
                  
 --Delete from Hcontinuidad where añoqna = ''201301'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                   
                   
 --insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 --select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad       
 --from BasePeriodo(''20130101'',''20130115'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End       
                  
 --Delete from Hcontinuidad where añoqna = ''201302'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                 
                   
 --insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 --select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 --from BasePeriodo(''20130116'',''20130131'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                   
                  
 --Delete from Hcontinuidad where añoqna = ''201303'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                   
                   
 --insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 --select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 --from BasePeriodo(''20130201'',''20130215'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                   
                  
 --Delete from Hcontinuidad where añoqna = ''201304'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 --insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 --select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 --from BasePeriodo(''20130216'',''20130228'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                   
                  
 --Delete from Hcontinuidad where añoqna = ''201305'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 --insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 --select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 --from BasePeriodo(''20130301'',''20130315'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                  
 --Delete from Hcontinuidad where añoqna = ''201306'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                   
                   
 --insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 --select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 --from BasePeriodo(''20130316'',''20130331'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                   
                  
 --Delete from Hcontinuidad where añoqna = ''201307'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 --insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 --select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 --from BasePeriodo(''20130401'',''20130415'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                   
                  
 --Delete from Hcontinuidad where añoqna = ''201308'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 --insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 --select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 --from BasePeriodo(''20130416'',''20130430'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                  
 --Delete from Hcontinuidad where añoqna = ''201309'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 --insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 --select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                 
 --from BasePeriodo(''20130501'',''20130515'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                   
                  
 --Delete from Hcontinuidad where añoqna = ''201310'' and  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 --insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 --select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 --from BasePeriodo(''20130516'',''20130531'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                   
                  
 --Delete from Hcontinuidad where añoqna = ''201311'' and  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 --insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 --select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 --from BasePeriodo(''20130601'',''20130615'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                  
-- Delete from Hcontinuidad where añoqna = ''201312'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
-- insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
-- select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
-- from BasePeriodo(''20130616'',''20130630'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                  
-- Delete from Hcontinuidad where añoqna = ''201313'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                
-- insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
-- select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
-- from BasePeriodo(''20130701'',''20130715'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                  
-- Delete from Hcontinuidad where añoqna = ''201314'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
-- insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
-- select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
-- from BasePeriodo(''20130716'',''20130731'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                  
-- Delete from Hcontinuidad where añoqna = ''201315'' and  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                   
                   
-- insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
-- select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
-- from BasePeriodo(''20130801'',''20130815'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
          
-- Delete from Hcontinuidad where añoqna = ''201316'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
-- insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
-- select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
-- from BasePeriodo(''20130816'',''20130831'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                 
-- Delete from Hcontinuidad where añoqna = ''201317'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                   
                   
-- insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
-- select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
-- from BasePeriodo(''20130901'',''20130915'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                
                 
-- Delete from Hcontinuidad where añoqna = ''201318'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                   
                   
-- insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
-- select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
-- from BasePeriodo(''20130916'',''20130930'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
-- Delete from Hcontinuidad where añoqna = ''201319'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                   
                   
-- insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
-- select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
-- from BasePeriodo(''20131001'',''20131015'',@idEmp)  Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                 
             
-- Delete from Hcontinuidad where añoqna = ''201320'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                   
                   
-- insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
-- select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
-- from BasePeriodo(''20131016'',''20131031'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End             
             
-- Delete from Hcontinuidad where añoqna = ''201321'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
-- insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
-- select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
-- from BasePeriodo(''20131101'',''20131115'',@idEmp)  Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End            
             
-- Delete from Hcontinuidad where añoqna = ''201322'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
-- insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
-- select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
-- from BasePeriodo(''20131116'',''20131130'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End             
             
-- Delete from Hcontinuidad where añoqna = ''201323'' and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                   
                   
-- insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
-- select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
-- from BasePeriodo(''20131201'',''20131215'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End             
             
-- Delete from Hcontinuidad where añoqna = ''201324''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
-- insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
-- select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
-- from BasePeriodo(''20131216'',''20131231'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End            
    
-- Delete from Hcontinuidad where añoqna = ''201401''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
-- insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
-- select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
-- from BasePeriodo(''20140101'',''20140115'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End            
     
-- Delete from Hcontinuidad where añoqna = ''201402''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
-- insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
-- select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
-- from BasePeriodo(''20140116'',''20140131'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End            
                                          
-- Delete from Hcontinuidad where añoqna = ''201403''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
-- insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
-- select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
-- from BasePeriodo(''20140201'',''20140215'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End            
     
-- Delete from Hcontinuidad where añoqna = ''201404''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
-- insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
-- select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
-- from BasePeriodo(''20140216'',''20140228'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End            
                                          
-- Delete from Hcontinuidad where añoqna = ''201405''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
-- insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
-- select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
-- from BasePeriodo(''20140301'',''20140315'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End            
                                        
-- Delete from Hcontinuidad where añoqna = ''201406''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
-- insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
-- select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
-- from BasePeriodo(''20140316'',''20140331'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End            
                                          
-- Delete from Hcontinuidad where añoqna = ''201407''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
-- insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
-- select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
-- from BasePeriodo(''20140401'',''20140415'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End            
                                        
-- Delete from Hcontinuidad where añoqna = ''201408''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
-- insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
-- select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
-- from BasePeriodo(''20140416'',''20140430'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End            
   
-- Delete from Hcontinuidad where añoqna = ''201409''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
-- insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
-- select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
-- from BasePeriodo(''20140501'',''20140515'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End            
                                                                                                                                                      
-- Delete from Hcontinuidad where añoqna = ''201410''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
-- insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
-- select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
-- from BasePeriodo(''20140516'',''20140531'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End            

-- Delete from Hcontinuidad where añoqna = ''201411''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
-- insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
-- select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
-- from BasePeriodo(''20140601'',''20140615'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End            

--Delete from Hcontinuidad where añoqna = ''201412''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
-- insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
-- select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
-- from BasePeriodo(''20140616'',''20140630'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End            

Delete from Hcontinuidad where añoqna = ''201413''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20140701'',''20140715'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End            

Delete from Hcontinuidad where añoqna = ''201414''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20140716'',''20140731'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End            

Delete from Hcontinuidad where añoqna = ''201415''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20140801'',''20140815'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End            


Delete from Hcontinuidad where añoqna = ''201416''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20140816'',''20140831'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End            

Delete from Hcontinuidad where añoqna = ''201417''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20140901'',''20140915'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End            

Delete from Hcontinuidad where añoqna = ''201418''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20140916'',''20140930'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End            

 Delete from Hcontinuidad where añoqna = ''201419''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20141001'',''20141015'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End            
 
 Delete from Hcontinuidad where añoqna = ''201420''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20141016'',''20141031'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End            

 Delete from Hcontinuidad where añoqna = ''201421''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20141101'',''20141115'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End            

 Delete from Hcontinuidad where añoqna = ''201422''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20141116'',''20141130'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End            

 Delete from Hcontinuidad where añoqna = ''201423''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20141201'',''20141215'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End            
 
  Delete from Hcontinuidad where añoqna = ''201424''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20141216'',''20141231'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End            
  
  Delete from Hcontinuidad where añoqna = ''201501''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20150101'',''20150115'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End            

   Delete from Hcontinuidad where añoqna = ''201502''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20150116'',''20150131'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End            

 Delete from Hcontinuidad where añoqna = ''201503''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20150201'',''20150215'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End            

 Delete from Hcontinuidad where añoqna = ''201504''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20150216'',''20150228'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End            

 Delete from Hcontinuidad where añoqna = ''201505''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20150301'',''20150315'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End            
 
 Delete from Hcontinuidad where añoqna = ''201506''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20150316'',''20150331'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End            

 Delete from Hcontinuidad where añoqna = ''201507''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20150401'',''20150415'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End            

 Delete from Hcontinuidad where añoqna = ''201508''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20150416'',''20150430'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End            

 Delete from Hcontinuidad where añoqna = ''201509''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20150501'',''20150515'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End            

 Delete from Hcontinuidad where añoqna = ''201510''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20150516'',''20150531'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End            

 Delete from Hcontinuidad where añoqna = ''201511''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20150601'',''20150615'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End            

 Delete from Hcontinuidad where añoqna = ''201512''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20150616'',''20150630'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End            

 Delete from Hcontinuidad where añoqna = ''201513''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20150701'',''20150715'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End     

Delete from Hcontinuidad where añoqna = ''201514''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20150716'',''20150731'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End     

Delete from Hcontinuidad where añoqna = ''201515''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20150801'',''20150815'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End     

 Delete from Hcontinuidad where añoqna = ''201516''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20150816'',''20150831'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End     

 Delete from Hcontinuidad where añoqna = ''201517''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20150901'',''20150915'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End     
 
 Delete from Hcontinuidad where añoqna = ''201518''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20150916'',''20150930'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End     

Delete from Hcontinuidad where añoqna = ''201519''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20151001'',''20151015'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End     

Delete from Hcontinuidad where añoqna = ''201520''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20151016'',''20151031'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End     

Delete from Hcontinuidad where añoqna = ''201521''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20151101'',''20151115'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End     

Delete from Hcontinuidad where añoqna = ''201522''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20151116'',''20151130'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End     

Delete from Hcontinuidad where añoqna = ''201523''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20151201'',''20151215'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End     

Delete from Hcontinuidad where añoqna = ''201524''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20151216'',''20151231'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End     

Delete from Hcontinuidad where añoqna = ''201601''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20160101'',''20160115'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End     

Delete from Hcontinuidad where añoqna = ''201602''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20160116'',''20160131'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End     

 Delete from Hcontinuidad where añoqna = ''201603''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20160201'',''20160215'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End     

 Delete from Hcontinuidad where añoqna = ''201604''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20160216'',''20160229'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End     

 Delete from Hcontinuidad where añoqna = ''201605''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20160301'',''20160315'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End     

 Delete from Hcontinuidad where añoqna = ''201606''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20160316'',''20160331'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End     

 Delete from Hcontinuidad where añoqna = ''201607''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20160401'',''20160415'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End     

 Delete from Hcontinuidad where añoqna = ''201608''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20160416'',''20160430'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End     

Delete from Hcontinuidad where añoqna = ''201609''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20160501'',''20160515'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End     

Delete from Hcontinuidad where añoqna = ''201610''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20160516'',''20160531'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End     

 Delete from Hcontinuidad where añoqna = ''201611''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20160601'',''20160615'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End     

 Delete from Hcontinuidad where añoqna = ''201612''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20160616'',''20160630'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End     

 Delete from Hcontinuidad where añoqna = ''201613''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20160701'',''20160715'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End     

 Delete from Hcontinuidad where añoqna = ''201614''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20160716'',''20160731'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End     

 Delete from Hcontinuidad where añoqna = ''201615''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20160801'',''20160815'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End     

 Delete from Hcontinuidad where añoqna = ''201616''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20160816'',''20160831'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End     

 Delete from Hcontinuidad where añoqna = ''201617''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20160901'',''20160915'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End     

 Delete from Hcontinuidad where añoqna = ''201618''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20160916'',''20160930'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End     

 Delete from Hcontinuidad where añoqna = ''201619''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20161001'',''20161015'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End     

 Delete from Hcontinuidad where añoqna = ''201620''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20161016'',''20161031'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End     

 Delete from Hcontinuidad where añoqna = ''201621''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20161101'',''20161115'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End     

 Delete from Hcontinuidad where añoqna = ''201622''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20161116'',''20161130'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End     

 Delete from Hcontinuidad where añoqna = ''201623''  and Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End                  
                   
 insert into Hcontinuidad (id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna,añoQnaContinuidad )                  
 select id_emp,id_plaza,id_plazaanterior,statusplaza,tipoplaza,TipoPlazaPermisoAnterior,categoria,MotivoMov,horas,añoqna, AñoQnacontinuidad                   
 from BasePeriodo(''20161201'',''20161215'',@idEmp) Where  Id_emp = Case When @idEmp = 0 Then Id_emp else @idEmp End     

 end'
GO

GO
PRINT N'Creating [dbo].[Analizahcontinuidad]'
GO
IF OBJECT_ID(N'[dbo].[Analizahcontinuidad]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[Analizahcontinuidad]
@Qna varchar(6), @idEmp int
WITH EXEC AS CALLER
AS
begin                  
                    
declare @Qnaanterior as varchar(6)                  
set @Qnaanterior = case when right(@qna,2) = ''01'' then cast(cast(@Qna as int) -77 as varchar) else cast(cast(@Qna as int) -1 as varchar) end                  
                  
update Hcontinuidad set añoqnacontinuidad = ''      '' where añoqna = @Qna and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End                    
                  
--primero actualizo la continuidad de las plazas que no tienen plazaanterior ,que ya se pagaron la quincena pasada y siguen igual          
-- en tipo, status y categoria          
update Hcontinuidad set Hcontinuidad.añoQnaContinuidad = b.añoQnaContinuidad                   
from Hcontinuidad inner join ( Select * from Hcontinuidad where añoqna = @Qnaanterior) B                  
on Hcontinuidad.id_emp = b.id_emp and Hcontinuidad.id_plaza = b.id_plaza                   
where Hcontinuidad.añoqna = @Qna and Hcontinuidad.id_plazaanterior = '''' and          
Hcontinuidad.statusplaza = b.statusplaza and Hcontinuidad.tipoplaza = b.tipoplaza and           
Hcontinuidad.categoria = b.categoria and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End             
          
--actualizo la continuidad de las plazas que no tienen plazaanterior (o es la misma ),que ya se pagaron la quincena pasada y cambiaron          
-- cierto tipo o status ( proporcionados por ellos ) que no deberia de cambiar continuidad          
update Hcontinuidad set Hcontinuidad.añoQnaContinuidad = b.añoQnaContinuidad                   
from Hcontinuidad inner join ( Select * from Hcontinuidad where añoqna = @Qnaanterior) B                  
on Hcontinuidad.id_emp = b.id_emp and Hcontinuidad.id_plaza = b.id_plaza                   
where Hcontinuidad.añoqna = @Qna and  Hcontinuidad.añoQnaContinuidad = '''' and       
(Hcontinuidad.id_plazaanterior = cast(b.id_plaza as varchar) or Hcontinuidad.id_plazaanterior = '''' ) and          
((Hcontinuidad.statusplaza = 10 and Hcontinuidad.tipoplaza  in (44,48) ) or      
(Hcontinuidad.statusplaza = 14 and Hcontinuidad.tipoplaza  = 44 ) or       
(Hcontinuidad.statusplaza = 15 and Hcontinuidad.tipoplaza  = 48 ) or      
(Hcontinuidad.statusplaza = 11 and Hcontinuidad.tipoplaza  = 44 ) ) and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End            
                  
--Si la plaza aun tiene añoqnacontinuidad vacio Y NO TIENE ID_PLAZAANTERIOR                  
--significa que la plaza es nueva, asi que la continuidad empieza a partir de este momento                  
Update Hcontinuidad set Hcontinuidad.añoQnaContinuidad = Hcontinuidad.añoqna                  
where Hcontinuidad.añoqna = @Qna and Hcontinuidad.añoQnaContinuidad = ''''                   
and Hcontinuidad.id_plazaanterior = '''' and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End                           
                  
--Si la plaza tiene en plaza anterior LA MISMA PLAZA                   
--y el status01/tipoplaza95  en la plazaanterior de la qna pasada                  
--y un status01/tipoplaza10 en la plazaactual                  
--eso significa que le dieron definitivamente la plaza y debe mantener continuidad                  
update Hcontinuidad set Hcontinuidad.añoQnaContinuidad = b.añoQnaContinuidad                   
from Hcontinuidad inner join ( Select * from Hcontinuidad where añoqna = @Qnaanterior) B                  
on Hcontinuidad.id_emp = b.id_emp and b.id_plaza=Hcontinuidad.id_plaza           
where Hcontinuidad.añoqna = @Qna and (Hcontinuidad.id_plazaanterior = cast(Hcontinuidad.id_plaza as varchar) or Hcontinuidad.id_plazaanterior = ''''  )                
and Hcontinuidad.statusplaza = 01 and  Hcontinuidad.tipoplaza = 10                  
and b.statusplaza = 01 and  b.tipoplaza = 95  and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End                          
                  
                  
--Si la plaza tiene en plaza anterior LA MISMA PLAZA                   
--y no cambia ni el tipo,ni el status,ni lacategoria                  
--eso significa que debe mantener continuidad                  
update Hcontinuidad set Hcontinuidad.añoQnaContinuidad = b.añoQnaContinuidad                   
from Hcontinuidad inner join ( Select * from Hcontinuidad where añoqna = @Qnaanterior) B                  
on Hcontinuidad.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + Hcontinuidad.id_plazaanterior + '','') <> 0            
where Hcontinuidad.añoqna = @Qna and charindex('',''+ ltrim(rtrim(cast(hcontinuidad.id_plaza  as varchar))) + '','','','' + Hcontinuidad.id_plazaanterior + '','') <> 0            
and Hcontinuidad.statusplaza = b.statusplaza and  Hcontinuidad.tipoplaza = b.tipoplaza                  
and Hcontinuidad.categoria = b.categoria  and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End                           
                
--Si la plaza NO tiene en plaza anterior                   
--y un status14/tipoplaza41-42-43-49 ó status06/tipoplaza51-52-53 en la plazaactual                 
--eso significa que debe perder continuidad                  
update Hcontinuidad set Hcontinuidad.añoQnaContinuidad = añoQna                   
where ((Hcontinuidad.statusplaza = 14 and Hcontinuidad.tipoplaza in (41,42,43,49)) or                 
(Hcontinuidad.statusplaza = 06 and Hcontinuidad.tipoplaza in (51,52,53)))                
 and Hcontinuidad.añoqna = @Qna  and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End                        
                  
--Si en la qna anterior                 
--el status14/tipoplaza41-42-43-49 ó status06/tipoplaza51-52-53  en la plazaanterior de la qna pasada                  
--y un status01/tipoplaza95 en la plazaactual                 
--eso significa viene regresando de una licencia   y debe iniciar la continuidad                  
update Hcontinuidad set Hcontinuidad.añoQnaContinuidad = Hcontinuidad.añoQna                 
from Hcontinuidad inner join ( Select * from Hcontinuidad where añoqna = @Qnaanterior) B                  
on Hcontinuidad.id_emp = b.id_emp and Hcontinuidad.id_plaza = b.id_plaza                 
where Hcontinuidad.añoqna = @Qna and                
((b.statusplaza = 14 and b.tipoplaza in (41,42,43,49)) or                 
(b.statusplaza = 06 and b.tipoplaza in (51,52,53)))                  
and Hcontinuidad.statusplaza = 01 and  Hcontinuidad.tipoplaza = 95  and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End                          
                
--Si tiene PLAZAANTERIOR pero el status y el motivo es el mismo que el actual            
--debe de tomar la continuidad de la plaza anterior            
update Hcontinuidad set Hcontinuidad.añoQnaContinuidad = b.añoQnaContinuidad                   
from Hcontinuidad inner join ( Select * from Hcontinuidad where añoqna = @Qnaanterior) B                  
on Hcontinuidad.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + Hcontinuidad.id_plazaanterior + '','') <> 0            
where Hcontinuidad.añoqna = @Qna and Hcontinuidad.id_plazaanterior <> ''''            
and Hcontinuidad.tipoplaza = b.tipoplaza and Hcontinuidad.statusplaza = b.statusplaza  and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End             
            
--Si tiene PLAZAANTERIOR pero el status y el motivo de la nueva es 01-10            
-- y el status y motivo de la anterior es 01-95            
--debe de tomar la continuidad de la plaza anterior            
update Hcontinuidad set Hcontinuidad.añoQnaContinuidad = b.añoQnaContinuidad                   
from Hcontinuidad inner join ( Select * from Hcontinuidad where añoqna = @Qnaanterior) B               
on Hcontinuidad.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + Hcontinuidad.id_plazaanterior + '','') <> 0            
where Hcontinuidad.añoqna = @Qna and Hcontinuidad.id_plazaanterior <> ''''            
and ((Hcontinuidad.tipoplaza = 10 and Hcontinuidad.statusplaza = 01 and b.tipoplaza = 95 and b.statusplaza = 01) or      
(Hcontinuidad.tipoplaza = 95 and Hcontinuidad.statusplaza = 01 and b.tipoplaza = 10 and b.statusplaza = 01) )   and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End       
          
-------------------------------------------         




--Si la plaza tiene en plaza anterior LA MISMA PLAZA                   
--y el status10,11,14,15/tipoplaza44,48  en la plazaanterior de la qna pasada                  
--y un status01/tipoplaza10,95 en la plazaactual                  
--eso significa que le dieron definitivamente la plaza y debe mantener continuidad                  
--update Hcontinuidad set Hcontinuidad.añoQnaContinuidad = b.añoQnaContinuidad                   
--from Hcontinuidad inner join ( Select * from Hcontinuidad where añoqna = @Qnaanterior) B                  
--on Hcontinuidad.id_emp = b.id_emp       
--where Hcontinuidad.añoqna = @Qna and       
--(Hcontinuidad.id_plazaanterior = cast(b.id_plaza as varchar) or Hcontinuidad.id_plazaanterior = '''' )                 
--and Hcontinuidad.statusplaza = 01 and  Hcontinuidad.tipoplaza in (10,95)                  
--and b.statusplaza in (10,11,14,15) and  b.tipoplaza in (44,48)   and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End           
          
update Hcontinuidad set Hcontinuidad.añoQnaContinuidad = b.añoQnaContinuidad                   
from Hcontinuidad inner join ( Select * from Hcontinuidad where añoqna = @Qnaanterior) B                  
on Hcontinuidad.id_emp = b.id_emp and  Hcontinuidad.id_plaza = b.id_plaza      
where Hcontinuidad.añoqna = @Qna and       
(Hcontinuidad.id_plazaanterior = cast(b.id_plaza as varchar) or Hcontinuidad.id_plazaanterior = '''' )                 
and Hcontinuidad.statusplaza = 01 and  Hcontinuidad.tipoplaza in (10,95)                  
and b.statusplaza in (10,11,14,15) and  b.tipoplaza in (44,48)   and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End           

update Hcontinuidad set Hcontinuidad.añoQnaContinuidad = b.añoQnaContinuidad                   
from Hcontinuidad inner join ( Select * from Hcontinuidad where añoqna = @Qnaanterior) B                  
on Hcontinuidad.id_emp = b.id_emp       
where Hcontinuidad.añoqna = @Qna and       
(Hcontinuidad.id_plazaanterior = cast(b.id_plaza as varchar) or Hcontinuidad.id_plazaanterior = '''' )                 
and Hcontinuidad.statusplaza = 01 and  Hcontinuidad.tipoplaza in (10,95)                  
and b.statusplaza in (10,11,14,15) and  b.tipoplaza in (44,48)   and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End           
and Hcontinuidad.id_emp in (select id_emp from Hcontinuidad where [añoqna] = @Qna and ([añoQnaContinuidad] = '''' or [añoQnaContinuidad] = ''      ''  ) )
            
          
          
          
          
          

--Si la plaza tiene en plaza anterior LA MISMA PLAZA                   
--y el status03,06/tipoplaza20  en la plazaanterior de la qna pasada                  
--y un status01/tipoplaza10,95 en la plazaactual                  
--eso significa que le dieron definitivamente la plaza y debe mantener continuidad                  
update Hcontinuidad set Hcontinuidad.añoQnaContinuidad = b.añoQnaContinuidad                   
from Hcontinuidad inner join ( Select * from Hcontinuidad where añoqna = @Qnaanterior) B                  
on Hcontinuidad.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + Hcontinuidad.id_plazaanterior + '','') <> 0            
where Hcontinuidad.añoqna = @Qna and Hcontinuidad.id_plazaanterior = cast(Hcontinuidad.id_plaza as varchar)                  
and Hcontinuidad.statusplaza = 01 and  Hcontinuidad.tipoplaza in ( 10 , 95)                 
and b.statusplaza in (03,06) and  b.tipoplaza in (20) and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End                           
             
----Si la el tipo de plaza es de tipo prorroga
----Select * from ttipoplaza where destipoplaza like ''pró%''
----y el tipoplazapermisoanterior es distino de 48 o 44 entonces debe cortar continuidad
update Hcontinuidad set Hcontinuidad.añoQnaContinuidad = Hcontinuidad.añoQna                  
from Hcontinuidad inner join ( Select * from Hcontinuidad where añoqna = @Qnaanterior) B                  
on Hcontinuidad.id_emp = b.id_emp 
where Hcontinuidad.añoqna = @Qna                   
and Hcontinuidad.tipoplaza in (Select id_tipoplaza from ttipoplaza where destipoplaza like ''pró%'')
and Hcontinuidad.tipoplazapermisoanterior not in (48,44)
and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End                           
             

                 
--------------      
update Hcontinuidad set añoqnacontinuidad = añoqna where añoqna = @Qna and añoqnacontinuidad = ''      ''   and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End                  
                   
 end'
GO

GO
PRINT N'Creating [dbo].[Sp_RefrescaHcontinuidad]'
GO
IF OBJECT_ID(N'[dbo].[Sp_RefrescaHcontinuidad]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[Sp_RefrescaHcontinuidad]
@idEmp int
WITH EXEC AS CALLER
AS
begin    
   
   
exec InicializaHcontinuidad @idEmp  
  
--exec Analizahcontinuidad "201213",@idEmp  
--exec Analizahcontinuidad "201214",@idEmp  
--exec Analizahcontinuidad "201215",@idEmp  
--exec Analizahcontinuidad "201216",@idEmp  
--exec Analizahcontinuidad "201217",@idEmp  
--exec Analizahcontinuidad "201218",@idEmp  
--exec Analizahcontinuidad "201219",@idEmp  
--exec Analizahcontinuidad "201220",@idEmp  
--exec Analizahcontinuidad "201221",@idEmp  
--exec Analizahcontinuidad "201222",@idEmp  
--exec Analizahcontinuidad "201223",@idEmp  
--exec Analizahcontinuidad "201224",@idEmp  
--exec Analizahcontinuidad "201301",@idEmp  
--exec Analizahcontinuidad "201302",@idEmp  
--exec Analizahcontinuidad "201303",@idEmp  
--exec Analizahcontinuidad "201304",@idEmp  
--exec Analizahcontinuidad "201305",@idEmp  
--exec Analizahcontinuidad "201306",@idEmp  
--exec Analizahcontinuidad "201307",@idEmp  
--exec Analizahcontinuidad "201308",@idEmp  
--exec Analizahcontinuidad "201309",@idEmp  
--exec Analizahcontinuidad "201310",@idEmp  
--exec Analizahcontinuidad "201311",@idEmp  
--exec Analizahcontinuidad "201312",@idEmp  
--exec Analizahcontinuidad "201313",@idEmp  
--exec Analizahcontinuidad "201314",@idEmp  
--exec Analizahcontinuidad "201315",@idEmp  
--exec Analizahcontinuidad "201316",@idEmp  
--exec Analizahcontinuidad "201317",@idEmp  
--exec Analizahcontinuidad "201318",@idEmp  
--exec Analizahcontinuidad "201319",@idEmp  
--exec Analizahcontinuidad "201320",@idEmp  
--exec Analizahcontinuidad "201321",@idEmp  
--exec Analizahcontinuidad "201322",@idEmp  
--exec Analizahcontinuidad "201323",@idEmp  
--exec Analizahcontinuidad "201324",@idEmp  
--exec Analizahcontinuidad "201401",@idEmp  
--exec Analizahcontinuidad "201402",@idEmp  
--exec Analizahcontinuidad "201403",@idEmp  
--exec Analizahcontinuidad "201404",@idEmp  
--exec Analizahcontinuidad "201405",@idEmp  
--exec Analizahcontinuidad "201406",@idEmp  
--exec Analizahcontinuidad "201407",@idEmp  
--exec Analizahcontinuidad "201408",@idEmp    
--exec Analizahcontinuidad "201409",@idEmp
--exec Analizahcontinuidad "201410",@idEmp    
--exec Analizahcontinuidad "201411",@idEmp
--exec Analizahcontinuidad "201412",@idEmp
exec Analizahcontinuidad "201413",@idEmp
exec Analizahcontinuidad "201414",@idEmp
exec Analizahcontinuidad "201415",@idEmp
exec Analizahcontinuidad "201416",@idEmp
exec Analizahcontinuidad "201417",@idEmp
exec Analizahcontinuidad "201418",@idEmp
exec Analizahcontinuidad "201419",@idEmp
exec Analizahcontinuidad "201420",@idEmp
exec Analizahcontinuidad "201421",@idEmp
exec Analizahcontinuidad "201422",@idEmp
exec Analizahcontinuidad "201423",@idEmp
exec Analizahcontinuidad "201424",@idEmp
exec Analizahcontinuidad "201501",@idEmp
exec Analizahcontinuidad "201502",@idEmp
exec Analizahcontinuidad "201503",@idEmp
exec Analizahcontinuidad "201504",@idEmp
exec Analizahcontinuidad "201505",@idEmp
exec Analizahcontinuidad "201506",@idEmp
exec Analizahcontinuidad "201507",@idEmp
exec Analizahcontinuidad "201508",@idEmp
exec Analizahcontinuidad "201509",@idEmp
exec Analizahcontinuidad "201510",@idEmp
exec Analizahcontinuidad "201511",@idEmp
exec Analizahcontinuidad "201512",@idEmp
exec Analizahcontinuidad "201513",@idEmp
exec Analizahcontinuidad "201514",@idEmp
exec Analizahcontinuidad "201515",@idEmp
exec Analizahcontinuidad "201516",@idEmp
exec Analizahcontinuidad "201517",@idEmp
exec Analizahcontinuidad "201518",@idEmp
exec Analizahcontinuidad "201519",@idEmp
exec Analizahcontinuidad "201520",@idEmp
exec Analizahcontinuidad "201521",@idEmp
exec Analizahcontinuidad "201522",@idEmp
exec Analizahcontinuidad "201523",@idEmp
exec Analizahcontinuidad "201524",@idEmp
exec Analizahcontinuidad "201601",@idEmp
exec Analizahcontinuidad "201602",@idEmp
exec Analizahcontinuidad "201603",@idEmp
exec Analizahcontinuidad "201604",@idEmp
exec Analizahcontinuidad "201605",@idEmp
exec Analizahcontinuidad "201606",@idEmp
exec Analizahcontinuidad "201607",@idEmp
exec Analizahcontinuidad "201608",@idEmp
exec Analizahcontinuidad "201609",@idEmp
exec Analizahcontinuidad "201610",@idEmp
exec Analizahcontinuidad "201611",@idEmp
exec Analizahcontinuidad "201612",@idEmp
exec Analizahcontinuidad "201613",@idEmp
exec Analizahcontinuidad "201614",@idEmp
exec Analizahcontinuidad "201615",@idEmp
exec Analizahcontinuidad "201616",@idEmp
exec Analizahcontinuidad "201617",@idEmp
exec Analizahcontinuidad "201618",@idEmp
exec Analizahcontinuidad "201619",@idEmp
exec Analizahcontinuidad "201620",@idEmp
exec Analizahcontinuidad "201621",@idEmp
exec Analizahcontinuidad "201622",@idEmp
exec Analizahcontinuidad "201623",@idEmp
end'
GO

GO
PRINT N'Creating [dbo].[SPF_Pension]'
GO
IF OBJECT_ID(N'[dbo].[SPF_Pension]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE  [dbo].[SPF_Pension]           
(                  
 @IdEmpleado as int,  
 @IdDocumento as int,         
 @accion as bit )        
As          
Begin
 declare @_IdEmpleado as int = @IdEmpleado
 declare @_IdDocumento as int = @IdDocumento         
 declare @_accion as bit = @accion
	         
 declare @tableTmp as varchar(30)           
 declare @sql as nvarchar(max)= ''''        
 declare @sqll as nvarchar(max)= ''''        
         
 set @tableTmp = ''ZTemporalPension'' + cast(@_IdDocumento as varchar(max))         
 if @_accion = 0        
 Begin                        
  if exists(select * from hplazaspensionado where id_beneficiario in (select id_beneficiario from hbeneficiario where id_emp = @_IdEmpleado )         )          
    begin        
    -- Creamos una tmp con que vamos a modificar 
       if object_id( @tableTmp ) is null     
       begin               
        set @sql = ''select * INTO '' + @tableTmp + '' from HPlazasPensionado where id_beneficiario in '' +'' ( ''+'' select id_beneficiario from hbeneficiario where id_emp = '' + cast(@_IdEmpleado as varchar(max)) +'')''        
        execute (@sql)    
        insert into FUP_TEMPORALES(id_Documento, Nom_temporal) values(@_IdDocumento, @tableTmp)                 
       end
       update hplazaspensionado set plazasPensionado = 0 where id_beneficiario in (select id_beneficiario from hbeneficiario where id_emp = @_IdEmpleado )                 
    end
     if object_id( @tableTmp ) is null     
       begin               
        set @sql = ''select * INTO '' + @tableTmp + '' from HPlazasPensionado where id_beneficiario in '' +'' ( ''+'' select id_beneficiario from hbeneficiario where id_emp = '' + cast(@_IdEmpleado as varchar(max)) +'')''        
        execute (@sql) 
       end
 End         
 Else -- x si trono algo hay q echar para atras         
    Begin         
       set @sqll = '' update a set a.PlazasPensionado = b.PlazasPensionado from hplazaspensionado a inner join '' + @tableTmp + '' b on a.id = b.id''                    
       exec (@sqll)        
    End        
End'
GO

GO
PRINT N'Creating [dbo].[SP_SacaEmpleadoConD]'
GO
IF OBJECT_ID(N'[dbo].[SP_SacaEmpleadoConD]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[SP_SacaEmpleadoConD]
	
	@Idemp int=0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    SELECT  
  
 a.Id_Emp,b.id_plaza,a.NoConcepto,CASE WHEN a.NoConcepto >= 2300 THEN ''D'' ELSE ''P'' END AS PD,   
    a.descripcion AS Concepto, a.Monto, cast( year(a.Fecha) as varchar) + ''''+ Right(''00'' + Cast(case when(day(a.Fecha)>15)then month(a.Fecha)*2 else (month(a.Fecha)*2)-1 end as Varchar(2)),2) as Desde,cast( year(a.FechaFin) as varchar) + ''''+ Right(''00'' + Cast(case when(day(a.FechaFin)>15)then month(a.FechaFin)*2 else (month(a.FechaFin)*2)-1 end as Varchar(2)),2) as Hasta, CASE WHEN a.fechafin >= GETDATE() THEN 1 ELSE 0 END AS Vigencia  
 FROM  
 TTEmpleado_Plaza_Conc a  
 inner join plazas b  
 on a.noplaza=b.id_plaza  

  
 WHERE  
   a.id_emp=@Idemp 
    and a.NoConcepto in (302,1305,1308,1310,1311,1312,1313,1314,1315,1316,1317,1323,1324,1325,1326,1327,1328,1333,1334,1335,1336,1337,1338,1339,1340,1341,1342,1343,1344,1345,1346,1347,1348,1349,1350,1351,1352,1353,1357,1370,1380,1381,1382,1383,1384,1385,1386,1387,1388,1389,1390,1391,1392,1393,1394,1395,1396,1397,1398,1399,1405,1406,1407,1408,1409,1410,1411,1412,1413,1414,1415,1416,1417,1418,1419,1420,1421,1422,1423,1424,1425,1426,1427,1428,1429,1430,1441,1454,1493,1501,1502,1503,1504,1505,1506,1519,1526,1530,1547,1552,1553,1555,1556,1557,1558,1560,1561,1563,1567,1572,1574,1575,1576,1577,1586,1716,1717,2037,2071,2303,2331,2353,2361,2382,2387,2389,2392,2396,2407,2419,2436,2441,2442,2443,2452,2456,2461,2473,2480,2514,2520,3058)
ORDER BY a.FechaFin DESC  
 
END
'
GO

GO
PRINT N'Creating [dbo].[spf_obtenfoliosrfc]'
GO
IF OBJECT_ID(N'[dbo].[spf_obtenfoliosrfc]', 'P') IS NULL
EXEC sp_executesql N'--Script para generar el procedimiento almacenado spf_obtenfoliosrfc.

--Datos del servidor
--Servidor: db.ieepo.gob.mx	
--Base de datos: IEEPO

--Credenciales de acceso
--usuario: rhweb
--password:9mOh*#Yo

--1.- Creacion del procedimiento almacenado spf_obtenfoliosrfc
--Descripción: Permitirá relizar las validaciones para verificar si existe un empleado o si tiene formatos procesados.
--Resultado esperado: El script se ejecutó correctamente.
--Tiempo estimado de ejecución: Menos de un minuto.
--Importancia: Alto

create procedure [dbo].[spf_obtenfoliosrfc]    
(    
@filiacion as varchar(13),
@id_niveleducativo as int,
@id_tipomovimiento as int,
@id_motivomovimiento as int
)    
with recompile  
as
begin
--declare @filiacion as varchar(13)=''CUER7104105I9''           
--declare @id_niveleducativo as int=-1
--declare @id_tipomovimiento as int=0
--declare @id_motivomovimiento as int=0
declare @filtro as varchar(max)

set @filtro=''select distinct fd.folio into #folios_rfc from fup_documentos fd with (nolock)
			inner join FUP_Informacion_Documentos fid with (nolock) on fd.id_documento=fid.id_documento
			inner join FUP_Documento_Detalle fdd with (nolock) on fd.id_documento=fdd.Id_Documento
			inner join FUP_MotivoMovimiento fmm with (nolock) on fdd.Id_MotivoMovimiento=fmm.Id_MotivoMovimiento
			inner join FUP_TipoMovimiento ftm with (nolock) on fmm.Id_TipoMovimiento=ftm.Id_TipoMovimiento
			inner join calennomina c with (nolock) on fid.Id_Periodo=c.Id_Periodo
			inner join Empleados e with (nolock) on fd.id_emp=e.id_emp
			where fd.id_estatus =2 and fdd.id_motivomovimiento not in (379,380,383,384,385,386) and ISNUMERIC(fd.folio)=0 and e.rfc=''+ '''''''' + @filiacion +''''''''

--si trae filtro por nivel educativo
			if(@id_niveleducativo<>-1)
			begin 
			     set @filtro=@filtro + '' and fid.Id_Nivel_Educativo='' + cast(@id_niveleducativo as varchar(2))
			end

			--si trae filtro por tipo de movimiento
			if(@id_tipomovimiento<>0)
			begin 
			     set @filtro=@filtro + '' and ftm.Id_TipoMovimiento='' + cast(@id_tipomovimiento as varchar(10))
			end

			--si trae filtro por motivo de movimiento
			if(@id_motivomovimiento<>0)
			begin 
			     set @filtro=@filtro + '' and fmm.Id_MotivoMovimiento='' + cast(@id_motivomovimiento as varchar(10))
			end								

if((select distinct rfc from empleados where rfc=@filiacion)='''' or (select distinct rfc from empleados where rfc=@filiacion) is null)  
  begin   
       select ''El RFC ingresado no existe, por favor verifique'' as folio
  end  
else  
  begin   
       --se contempla para revisar si el empleado tiene folios procesados	   
	   set @filtro= @filtro + ''
	   if((select count(*) from #folios_rfc)=0)
		   begin 
				select ''''El RFC no tiene folios procesados, por favor verifique''''  as folio
		   end
	   else 
	       begin 
				select '''''''' as folio
		   end'' 
       
	   exec (@filtro)
  end
 end'
GO

GO
PRINT N'Creating [dbo].[SP_DiferenciasCTDosPeriodos]'
GO
IF OBJECT_ID(N'[dbo].[SP_DiferenciasCTDosPeriodos]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[SP_DiferenciasCTDosPeriodos]
	-- Add the parameters for the stored procedure here
	@QnaActual varchar(6), @QnaAnterior varchar(6), @IdCia int
AS
BEGIN
	
	SET NOCOUNT ON;

    select isnull(i.id_emp, f.id_emp) as Id_Emp, isnull(i.id_plaza, f.id_plaza) as Id_Plaza, e.rfc as Filiacion, p.plazaieepo as Plaza, isnull(i.id_nodo, 0) as Id_NodoQI, isnull(i.clave, ''Sin relac.'') as CT_QI, isnull(f.id_nodo, 0) as Id_NodoQF, isnull(f.clave, ''Sin relac.'') as CT_QF 
from (
    select pla.id_emp,pla.id_plaza,pla.id_nodo, v.Clave
    from PlazaEmpleados pla
    inner join(
      select id_plaza,Max(Fecha) as FechaMax 
    	from plazaEmpleados
    	where fecha <= dbo.anioQuincenaToFecha(@QnaActual, 0)
    	group by id_plaza ) hp on pla.id_plaza = hp.id_plaza and hp.FechaMax = pla.Fecha
      inner join VistaTablaLongitud v on pla.id_nodo = v.id_nodo
    where pla.id_emp <> 0
) i
full join (
    select pla.id_emp,pla.id_plaza,pla.id_nodo, v.clave
    from PlazaEmpleados pla
    inner join(
      select id_plaza,Max(Fecha) as FechaMax 
    	from plazaEmpleados
    	where fecha <= dbo.anioQuincenaToFecha(@QnaAnterior, 0)
    	group by id_plaza ) hp on pla.id_plaza = hp.id_plaza and hp.FechaMax = pla.Fecha
      inner join VistaTablaLongitud v on pla.id_nodo = v.id_nodo
    where pla.id_emp <> 0
) f on f.id_emp = i.id_emp and f.id_plaza = i.id_plaza
inner join plazaieepo p on p.id_plaza = isnull(i.id_plaza, f.id_plaza)
inner join empleados e on e.id_emp = isnull(i.id_emp, f.id_emp)
where e.id_cia = @IdCia and i.id_nodo <> f.id_nodo

END'
GO

GO
PRINT N'Creating [dbo].[SIGP_Tabulador_Sueldos]'
GO
IF OBJECT_ID(N'[dbo].[SIGP_Tabulador_Sueldos]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[SIGP_Tabulador_Sueldos]        
WITH EXEC AS CALLER        
AS        
        
        
select v.*, c.resultado, c.Tipo, c.nombre, tp.TModelo_SE_id_Modelo_SE, tp.categoria        
into #tabuladorSueldos        
from valoresmatriz4 v        
inner join Conceptos c on c.id_concepto = v.id_concepto        
inner join TTabulador_SE_Cat_Puesto tp on tp.id_Tabulador_SE_Cat_Puesto = v.id_Tabulador_SE_Cat_Puesto        
where ---tp.categoria_actualizada = 1 and   
v.fecha >= ''2013/01/01'' and c.id_concepto not in (1221,1222,1223,1224,1225,1225,1226,1227)        
        
insert into #tabuladorSueldos        
select v.*, c.resultado, c.Tipo, c.nombre, tp.TModelo_SE_id_Modelo_SE, tp.categoria        
from valoresmatriz8 v        
inner join Conceptos c on c.id_concepto = v.id_concepto        
inner join TTabulador_SE_Cat_Puesto tp on tp.id_Tabulador_SE_Cat_Puesto = v.id_Tabulador_SE_Cat_Puesto        
where --tp.categoria_actualizada = 1 and  
 v.fecha >= ''2013/01/01''         
        
delete from #tabuladorSueldos where  id_Tabulador_SE_Cat_Puesto in (select id_Tabulador_SE_Cat_Puesto from TTabulador_SE_Cat_Puesto WITH(NOLOCK) where TModelo_SE_id_Modelo_SE  = 10)        
    and id_concepto in (1306,1701)        
        
delete from #tabuladorSueldos where id_concepto in (1201,1202,1203)        
        
-- ht 5,6,2,9        
insert into #tabuladorSueldos        
select 1558 id_concepto, 143.74 Valor, Fecha, Movimiento, id_user, id_Tabulador_SE_Cat_Puesto, id_Tabulador_SE_CM, id_Tabulador_SE_Nivel_Pago, id_Tabulador_SE_Zona,        
iden_proceso,''HT'' resultado,1 Tipo,''HOMOLOGADO TRANSFERIDO'' nombre, TModelo_SE_id_Modelo_SE, categoria        
from #tabuladorSueldos where TModelo_SE_id_Modelo_SE in (5,6,2,9) and resultado in (''07'',''01'') and valor > 0        
        
update #tabuladorSueldos set valor = 3.59  where id_Tabulador_SE_Cat_Puesto in (        
select id_rel from HTabulador_SE_Cat_Puesto where id_plaza in (        
    select id_plaza from PlazaIEEPO where (horas/10) > 0        
  )        
) and id_Tabulador_SE_Cat_Puesto not in (        
  select id_rel from HTabulador_SE_Cat_Puesto where id_plaza in (        
    select id_plaza from PlazaIEEPO where (horas/10) = 0        
  )        
)        
and        
id_concepto = 1558 and TModelo_SE_id_Modelo_SE in (5,6,2,9)        
        
-- 38 2,5,6        
insert into #tabuladorSueldos        
select 1306 id_concepto,771 Valor, Fecha, Movimiento, id_user, id_Tabulador_SE_Cat_Puesto, id_Tabulador_SE_CM, id_Tabulador_SE_Nivel_Pago, id_Tabulador_SE_Zona,         
iden_proceso,''38'' resultado,1 Tipo,''AYUDA DE DESPENSA'' nombre, TModelo_SE_id_Modelo_SE, categoria         
from #tabuladorSueldos where TModelo_SE_id_Modelo_SE in (2,5,6) and resultado in (''07'',''01'') and valor > 0 and year(Fecha) <= 2014        
        
insert into #tabuladorSueldos        
select 1306 id_concepto,931 Valor, Fecha, Movimiento, id_user, id_Tabulador_SE_Cat_Puesto, id_Tabulador_SE_CM, id_Tabulador_SE_Nivel_Pago, id_Tabulador_SE_Zona,         
iden_proceso,''38'' resultado,1 Tipo,''AYUDA DE DESPENSA'' nombre, TModelo_SE_id_Modelo_SE, categoria         
from #tabuladorSueldos where TModelo_SE_id_Modelo_SE in (2,5,6) and resultado in (''07'',''01'') and valor > 0 and year(Fecha) in (2015, 2016)        
        
insert into #tabuladorSueldos        
select 1306 id_concepto,1091 Valor, Fecha, Movimiento, id_user, id_Tabulador_SE_Cat_Puesto, id_Tabulador_SE_CM, id_Tabulador_SE_Nivel_Pago, id_Tabulador_SE_Zona,         
iden_proceso,''38'' resultado,1 Tipo,''AYUDA DE DESPENSA'' nombre, TModelo_SE_id_Modelo_SE, categoria         
from #tabuladorSueldos where TModelo_SE_id_Modelo_SE in (2,5,6) and resultado in (''07'',''01'') and valor > 0 and year(Fecha) in (2017, 2018)        
        
update #tabuladorSueldos set valor = 23.28 where id_Tabulador_SE_Cat_Puesto in (        
select id_rel from HTabulador_SE_Cat_Puesto where id_plaza in (        
    select id_plaza from PlazaIEEPO where (horas/10) > 0        
  )        
) and id_Tabulador_SE_Cat_Puesto not in (        
 select id_rel from HTabulador_SE_Cat_Puesto where id_plaza in (        
    select id_plaza from PlazaIEEPO where (horas/10) = 0        
  )        
) and id_concepto = 1306 and TModelo_SE_id_Modelo_SE  in (5,6,2,9)        
        
        
insert into #tabuladorSueldos        
select v.*, c.resultado, c.Tipo, c.nombre, tp.TModelo_SE_id_Modelo_SE, tp.categoria        
from valoresmatriz5 v        
inner join Conceptos c on c.id_concepto = v.id_concepto        
inner join TTabulador_SE_Cat_Puesto tp on tp.id_Tabulador_SE_Cat_Puesto = v.id_Tabulador_SE_Cat_Puesto        
where --tp.categoria_actualizada = 1 and   
v.fecha >= ''2013/01/01'' and c.id_concepto not in (1221,1222,1223,1224,1225,1225,1226,1227)        
and c.tipo = 1        
        
delete from #tabuladorSueldos where  id_Tabulador_SE_Cat_Puesto in (select id_Tabulador_SE_Cat_Puesto from TTabulador_SE_Cat_Puesto WITH(NOLOCK) where TModelo_SE_id_Modelo_SE  = 10)        
and id_concepto in (1323,1324,1325,1326,1327,1554)        
    
-- se modifica 29/11/2018 de acuerdo al fomrato solicitado por SIGP        
--select cat.categoria as Clave_Tabulador,          
select ltrim(cat.categoria) as categoria,np.nivel as Nivel_sueldo,c.resultado as clave_antecedente,    
   case          
    --when c.tipo = 1 then ''PERCEPCION''          
    --when c.tipo = 2 then ''DEDUCCION''          
    --when c.tipo = 3 then ''PERCEPCION''    
 when c.tipo = 1 then ''P''          
    when c.tipo = 2 then ''D''          
    when c.tipo = 3 then ''P''           
   end as Tipo_Concepto,    
   tab1.id_tabulador_se_zona as Zona_Economica,    
   --,c.nombre as Descripcion_Concepto             
   case           
    when tab1.fecha >= ''2018-01-01'' and tab1.fecha <= ''2018-12-31'' and cat.tmodelo_se_id_modelo_se not in (2,5,6,9) then ''2018/01/01''          
 when tab1.fecha >= ''2018-01-01'' and tab1.fecha <= ''2018-12-31'' and cat.tmodelo_se_id_modelo_se in (2,5,6,9) then ''2018/02/01''          
    when tab1.fecha >= ''2017-01-01'' and tab1.fecha <= ''2017-12-31'' then ''2017/01/01''          
    when tab1.fecha >= ''2016-01-01'' and tab1.fecha <= ''2016-12-31'' then ''2016/01/01''          
    when tab1.fecha >= ''2015-01-01'' and tab1.fecha <= ''2015-12-31'' then ''2015/01/01''          
    when tab1.fecha >= ''2014-01-01'' and tab1.fecha <= ''2014-12-31'' then ''2014/01/01''          
    when tab1.fecha >= ''2013-01-01'' and tab1.fecha <= ''2013-12-31'' then ''2013/01/01''          
   end as Vigencia_Inicial,          
   case           
    when tab1.fecha >= ''2018-01-01'' and tab1.fecha <= ''2018-12-31'' and cat.tmodelo_se_id_modelo_se not in (2,5,6,9) then ''2018-12-31''          
    when tab1.fecha >= ''2018-01-01'' and tab1.fecha <= ''2018-12-31'' and cat.tmodelo_se_id_modelo_se in (2,5,6,9) then ''0000-00-00''          
 when tab1.fecha >= ''2017-01-01'' and tab1.fecha <= ''2017-12-31'' then ''2017/12/31''          
    when tab1.fecha >= ''2016-01-01'' and tab1.fecha <= ''2016-12-31'' then ''2016/12/31''          
    when tab1.fecha >= ''2015-01-01'' and tab1.fecha <= ''2015-12-31'' then ''2015/12/31''          
    when tab1.fecha >= ''2014-01-01'' and tab1.fecha <= ''2014-12-31'' then ''2014/12/31''          
    when tab1.fecha >= ''2013-01-01'' and tab1.fecha <= ''2013-12-31'' then ''2013/12/31''          
   end as Vigencia_Final,      
   tab1.valor as Importe-- el importe que toma en cuenta es mensual    
   ,''F'' as sostenimiento    
   --cm.Descripcion as nivel_CM,      
   --np.descripcion as Nivel_Pago,      
   from ttabulador_se_cat_puesto cat          
   inner join #tabuladorSueldos tab1 on cat.id_tabulador_se_cat_puesto = tab1.id_tabulador_se_cat_puesto          
   inner join conceptos c on tab1.id_concepto = c.id_concepto          
   inner join ttabulador_se_cm cm on tab1.id_tabulador_se_CM = cm.id_tabulador_se_CM          
   inner join ttabulador_se_nivel_pago np on tab1.id_tabulador_se_nivel_pago = np.id_tabulador_se_nivel_pago          
   where --cat.categoria_actualizada = 1  --and c.tipo in (1,2) and         
   tab1.fecha >= ''2013-01-01'' and tab1.valor <> 0 and c.id_concepto not in (1221,1222,1223,1224,1225,1225,1226,1227)'
GO

GO
PRINT N'Creating [dbo].[SIGP_Hist_movimientos]'
GO
IF OBJECT_ID(N'[dbo].[SIGP_Hist_movimientos]', 'P') IS NULL
EXEC sp_executesql N'CREATE procedure [dbo].[SIGP_Hist_movimientos]        
@rfcs varchar(MAX)=''''        
with recompile               
as                                                      
begin        
SET NOCOUNT ON;        
DECLARE @Xml AS XML          
SET @Xml = ''<empleado>'' + REPLACE(@rfcs, '','', ''</empleado><empleado>'') + ''</empleado>'';                         
        
if (@rfcs='''')          
            begin             
    select FD.ID_EMP,e.RFC,e.CURP,replace(pi.PLAZAIEEPO,'' '','''') AS CLAVE_DE_PAGO,        
    MOTIVO=case when fdd.id_motivomovimiento=aco.id_motivomovimiento then aco.operacion else         
    cast(ftm.clave as varchar(3))+cast(''-'' as varchar(3))+cast(fmm.Clave as varchar(4)) end,    
 ESTATUS=    
 case     
 when fdd.id_motivomovimiento in (1,11,120,341,347,84) then ''3''    
 when fdd.id_motivomovimiento in (2,7,3,8,4,9,5,10,12,119) then ''2''    
 when fdd.id_motivomovimiento in (322) then ''6''    
 when fdd.id_motivomovimiento in (14,15,16,17,18,19,20,21,22,23,24,25,26,32,33,306,307,308) then ''1''    
 when fdd.id_motivomovimiento in (40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,105,106,107,108,109,110,111,113,321) then ''4''    
 when fdd.id_motivomovimiento in (67,68,73,75,76,81,92,93,94,95,96,97,98,99,100,114,115,116) then ''3''    
 when fdd.id_motivomovimiento in (328) then ''5''    
 else ''''    
 end,    
    case when fdd.id_motivomovimiento in (14,15,16,17,18,19,20,21,22,23,24,25,26,32,33,306,307,308,87,311,319,323,324,326,327,379,380,320) then convert(varchar(10),'''',103) else  
 CONVERT(VARCHAR(10),fdd.fechaini, 103) end as FECHA_INICIO,        
    FECHA_TERMINO= case   
            when fdd.id_motivomovimiento in (1,5,10,11,12,84,119,120,322,341,347,320,342,343,346,355,356,361,362,375,377,378,324,323,325,327,326,311,319,87,312,379,380)   
      then ''00/00/0000'' --altas 10,95 y conceptos, definitividad spd  
            when fdd.id_motivomovimiento in (14,15,16,17,18,19,20,21,22,23,24,25,26,32,33,306,307,308) then  
      --CONVERT(VARCHAR(10),convert(datetime,dbo.anioquincenatofecha(cast(dbo.fechatoanioquincena(fdd.fechaini)-1 as varchar(6)),1),103)) --bajas   
      convert(varchar(10),dbo.anioquincenatofecha(dbo.fechatoanioquincena(fdd.fechaini-1),1),103)  
      --when dbo.fechaToAnioQuincena(fdd.fechaini)=dbo.fechaToAnioQuincena(fdd.fechafin) and   
      --           fdd.Id_MotivoMovimiento not in (select Id_MotivoMovimiento from FUP_MotivoMovimiento where muestrafechafin=1) then ''00/00/0000''        
               when dbo.fechaToAnioQuincena(fdd.fechaini)=dbo.fechaToAnioQuincena(fdd.fechafin)  
                 and fdd.Id_MotivoMovimiento in (select Id_MotivoMovimiento from FUP_MotivoMovimiento where muestrafechafin=1)   
                 then CONVERT(VARCHAR(10), fdd.fechafin, 103)        
               else CONVERT(VARCHAR(10), fdd.fechafin, 103) end         
    --into movs_mdp_2018        
    from fup_documentos fd                  
    inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp        
    inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento        
    inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza        
    inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza        
    inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario        
    inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento        
    inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo        
    inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo        
    inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento        
    left join Anexos_CompatibilidadOperacion aco with(nolock) on fdd.Id_MotivoMovimiento=aco.Id_MotivoMovimiento        
    left join  FUP_ValorFloat vf with(nolock) on fdd.Id_Detalle=vf.Id_Documento        
    inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento        
    inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus        
    --left join FUP_Cancelados fc on fd.id_documento=fc.id_documento        
    left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento        
    left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto        
    where fd.fecha_captura>=''20150516'' and fdd.id_estatus=2 AND fmm.clave not in (''71'') and fdd.id_motivomovimiento not in (316,317)        
    and REPLACE(pi.PlazaIEEPO,'' '','''') in (select CODIGO_PLAZA from Analitico_plazaFONE)      
    union all        
    select ID_EMP,RFC,CURP,clave as CLAVE_DE_PAGO,operacion as MOTIVO,estatus_nombramiento as ESTATUS, fecha_inicial as FECHA_INICIO,fecha_final as FECHA_TERMINO from anexos_nombramientos        
    where id_emp<>0     
    order by rfc      
    end        
else        
      begin        
    select FD.ID_EMP,e.RFC,e.CURP,replace(pi.PLAZAIEEPO,'' '','''') AS CLAVE_DE_PAGO,        
    MOTIVO=case when fdd.id_motivomovimiento=aco.id_motivomovimiento then aco.operacion else         
    cast(ftm.clave as varchar(3))+cast(''-'' as varchar(3))+cast(fmm.Clave as varchar(4)) end,    
 ESTATUS=    
 case     
 when fdd.id_motivomovimiento in (1,11,120,341,347,84) then ''3''    
 when fdd.id_motivomovimiento in (2,7,3,8,4,9,5,10,12,119) then ''2''    
 when fdd.id_motivomovimiento in (322) then ''6''    
 when fdd.id_motivomovimiento in (14,15,16,17,18,19,20,21,22,23,24,25,26,32,33,306,307,308) then ''1''    
 when fdd.id_motivomovimiento in (40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,105,106,107,108,109,110,111,113,321) then ''4''    
 when fdd.id_motivomovimiento in (67,68,73,75,76,81,92,93,94,95,96,97,98,99,100,114,115,116) then ''3''    
 when fdd.id_motivomovimiento in (328) then ''5''    
 else ''''    
 end,        
    case when fdd.id_motivomovimiento in (14,15,16,17,18,19,20,21,22,23,24,25,26,32,33,306,307,308,87,311,319,323,324,326,327,379,380,320) then convert(varchar(10),'''',103) else  
 CONVERT(VARCHAR(10),fdd.fechaini, 103) end as FECHAINICIO,        
    FECHA_TERMINO= case   
            when fdd.id_motivomovimiento in (1,5,10,11,12,84,119,120,322,341,347,320,342,343,346,355,356,361,362,375,377,378,324,323,325,327,326,311,319,87,312,379,380)   
      then ''00/00/0000'' --altas 10,95 y conceptos, definitividad spd  
            when fdd.id_motivomovimiento in (14,15,16,17,18,19,20,21,22,23,24,25,26,32,33,306,307,308) then  
      --CONVERT(VARCHAR(10),convert(datetime,dbo.anioquincenatofecha(cast(dbo.fechatoanioquincena(fdd.fechaini)-1 as varchar(6)),1),103)) --bajas   
      convert(varchar(10),dbo.anioquincenatofecha(dbo.fechatoanioquincena(fdd.fechaini-1),1),103)  
      --when dbo.fechaToAnioQuincena(fdd.fechaini)=dbo.fechaToAnioQuincena(fdd.fechafin) and   
      --           fdd.Id_MotivoMovimiento not in (select Id_MotivoMovimiento from FUP_MotivoMovimiento where muestrafechafin=1) then ''00/00/0000''        
               when dbo.fechaToAnioQuincena(fdd.fechaini)=dbo.fechaToAnioQuincena(fdd.fechafin)  
                 and fdd.Id_MotivoMovimiento in (select Id_MotivoMovimiento from FUP_MotivoMovimiento where muestrafechafin=1)   
                 then CONVERT(VARCHAR(10), fdd.fechafin, 103)        
               else CONVERT(VARCHAR(10), fdd.fechafin, 103) end         
    --into movs_mdp_2018        
    from fup_documentos fd                  
    inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp        
    inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento        
    inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza        
    inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza        
    inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario        
    inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento        
    inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo        
    inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo        
    inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento        
    left join Anexos_CompatibilidadOperacion aco with(nolock) on fdd.Id_MotivoMovimiento=aco.Id_MotivoMovimiento        
    left join  FUP_ValorFloat vf with(nolock) on fdd.Id_Detalle=vf.Id_Documento        
    inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento        
    inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus        
    --left join FUP_Cancelados fc on fd.id_documento=fc.id_documento        
    left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento        
    left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto        
    where fd.fecha_captura>=''20150516'' and fdd.id_estatus=2 AND fmm.clave not in (''71'') and fdd.id_motivomovimiento not in (316,317)        
    and REPLACE(pi.PlazaIEEPO,'' '','''') in (select CODIGO_PLAZA from Analitico_plazaFONE)      
    and e.rfc in (SELECT empleados.n.value(''.'', ''varchar(max)'') AS n FROM @Xml.nodes(''/empleado'') AS empleados(n))        
    union        
    select ID_EMP,rfc,CURP,clave as CLAVE_DE_PAGO,operacion as MOTIVO,estatus_nombramiento as ESTATUS,fecha_inicial as FECHA_INICIO,fecha_final as FECHA_TERMINO from anexos_nombramientos        
    where id_emp<>0 and rfc in (SELECT empleados.n.value(''.'', ''varchar(max)'') AS n FROM @Xml.nodes(''/empleado'') AS empleados(n))        
    order by rfc
   end        
end'
GO

GO
PRINT N'Creating [dbo].[C4PXQU1NCG3N]'
GO
IF OBJECT_ID(N'[dbo].[C4PXQU1NCG3N]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROC [dbo].[C4PXQU1NCG3N]

@qna varchar(6),
@fechaini date,
@fechafin date,
@tiponom varchar(3),
@idcia int 
AS

set @idcia = case 
                when @tiponom = ''BAS'' then 2
                when @tiponom = ''UPN'' then 1
              end
set @fechaini = (select FechaInicioMovimientos from CalenNomina where Año = cast(SUBSTRING(@qna, 1, 4) as int) and Numero = cast(SUBSTRING(@qna, 5, 2) as int) and Parcial = 0 and Id_cia = @idcia)
set @fechafin = (select FechaCorteMov from CalenNomina where Año = cast(SUBSTRING(@qna, 1, 4) as int) and Numero = cast(SUBSTRING(@qna, 5, 2) as int) and Parcial = 0 and Id_cia = @idcia)
select tt.NoPlaza, plai.Id_plaza, tt.Id_Emp, e.RFC, plai.PlazaIEEPO, tt.NoConcepto, tt.descripcion, tt.Monto, tt.Fecha, tt.FechaFin, tt.Movimiento, tt.Tvigencia_id_vigencia, tt.usuario, u.Usuario
from TTEmpleado_Plaza_Conc tt 
inner join Plazas pla on pla.Num_Plaza = tt.NoPlaza
inner join PlazaIEEPO plai on plai.id_plaza = pla.Id_plaza
inner join Empleados e on e.id_emp = tt.Id_Emp
inner join Usuarios u on u.id_usuario = tt.usuario
where tt.Movimiento between @fechaini and @fechafin and e.Id_Cia = @idcia
order by tt.descripcion, e.rfc
'
GO

GO
PRINT N'Creating [dbo].[spf_fup_masivos]'
GO
IF OBJECT_ID(N'[dbo].[spf_fup_masivos]', 'P') IS NULL
EXEC sp_executesql N'--Script para generar el procedimiento almacenado spf_fup_masivos.

--Datos del servidor
--Servidor: db.ieepo.gob.mx	
--Base de datos: IEEPO

--Credenciales de acceso
--usuario: rhweb
--password:9mOh*#Yo

--1.- Creacion del procedimiento almacenado spf_fup_masivos
--Descripción: Con el parámetro @accion= 1: Permitirá relizar la insercion sobre la tabla fup_masivos_filtros y fup_masivos para los folios que desea generar el usuario y
--registrar el historico de filtros generados por un usuario.
--Con el parámetro @accion= 2: Realizará las validaciones para verificar si existen folios con los filtros seleccionados.
--con el parámetro @accion= 3: Realiza la obtención del id para ser enviado al jar que realizara el proceso de generacion de los fups.
--con el paramtero @accion= 4: Realiza el conteo de los folios totales para la generación masiva
--Resultado esperado: El script se ejecutó correctamente.
--Tiempo estimado de ejecución: Menos de un minuto.
--Importancia: Alto

create procedure [dbo].[spf_fup_masivos]                                    
(                                                                         
@id_usuario As Int,
@tipogeneracion As Int,
@folio As varchar(25),
@quincena As varchar(6),
@niveleducativo As Int,
@tipmov As Int,
@motivomovimiento As Int,
@fecha_elaboracion As varchar(10),
@id_verifica As Int,
@cargo_verifica As varchar(100),
@id_autoriza As Int,
@cargo_autoriza As varchar(100),
@observaciones As varchar(300),
@justificacion As varchar(200),
@plazas_activas as varchar(10),
@filiacion as varchar(13),
@accion as int
)                    
WITH RECOMPILE                                     
as
begin
--declare @id_usuario As Int=114
--declare @tipogeneracion As Int=2
--declare @folio As varchar(25)=''''
--declare @quincena As varchar(6)=''201919''
--declare @niveleducativo As Int=-1
--declare @tipmov As Int=0
--declare @motivomovimiento As Int=0
--declare @fecha_elaboracion As varchar(10)=''''
--declare @id_verifica As Int=1
--declare @cargo_verifica As varchar(100)=''DIRECCIÓN ADMINISTRATIVA''
--declare @id_autoriza As Int=2
--declare @cargo_autoriza As varchar(100)=''OFICIALIA MAYOR''
--declare @observaciones As varchar(100)=''''
--declare @justificacion As varchar(100)=''A SOLICITUD DE LA DRSE''
--declare @plazas_activas as varchar(10)=''NO''
--declare @filiacion as varchar(13)=''BUGM8909293U6''
--declare @accion as int=4

declare @verifica as varchar(100)=(select titular from fup_titulares_firmas where id=@id_verifica)                                                                        
declare @utoriza as varchar(100)=(select titular from fup_titulares_firmas where id=@id_autoriza)   
declare @firma_verifica as varchar(50)=(select firma from fup_titulares_firmas where id=@id_verifica) 
declare @firma_autoriza as varchar(50)=(select firma from fup_titulares_firmas where id=@id_autoriza) 
declare @filtro as varchar(max) 
 
if(@accion=1)--accion para realizar el registro del filtro de los fups a generar                                                              
	begin  
		 if(@tipogeneracion=1)--cuando la generacion es por folio
		 begin 
			  --se genera la consulta para el filtro del folio 
			  set @filtro=''select distinct folio from fup_documentos where folio=''''''+ @folio +''''''''
		  
			  --se revisa si el usuario tiene registro en la tabla para generacion de un fup
			  if(exists(select filtro from fup_masivos_filtros where id_usuario=@id_usuario))
				  begin 
					   delete from fup_masivos_filtros where id_usuario=@id_usuario

					   insert into fup_masivos_filtros values (ltrim(@filtro),@fecha_elaboracion,@verifica,@cargo_verifica,@utoriza,@cargo_autoriza,@firma_verifica,
					   @firma_autoriza,@observaciones,@id_usuario,@plazas_activas)
				  end
			  else 
				  begin 
					   insert into fup_masivos_filtros values (ltrim(@filtro),@fecha_elaboracion,@verifica,@cargo_verifica,@utoriza,@cargo_autoriza,@firma_verifica,
					   @firma_autoriza,@observaciones,@id_usuario,@plazas_activas)
				  end
			  --se inserta el log de los documentos que se generan masivos por usuario
			  insert into fup_masivos values (@folio,@fecha_elaboracion,@verifica,@cargo_verifica,@utoriza,@cargo_autoriza,@firma_verifica,
			  @firma_autoriza,@observaciones,@justificacion,@id_usuario,getdate())
		 end
	 
		 if(@tipogeneracion=2)--cuando el tipo de generación es masivo
		 begin
				set @filtro=''select distinct fd.folio from fup_documentos fd with (nolock)
				inner join FUP_Informacion_Documentos fid with (nolock) on fd.id_documento=fid.id_documento
				inner join FUP_Documento_Detalle fdd with (nolock) on fd.id_documento=fdd.Id_Documento
				inner join FUP_MotivoMovimiento fmm with (nolock) on fdd.Id_MotivoMovimiento=fmm.Id_MotivoMovimiento
				inner join FUP_TipoMovimiento ftm with (nolock) on fmm.Id_TipoMovimiento=ftm.Id_TipoMovimiento
				inner join calennomina c with (nolock) on fid.Id_Periodo=c.Id_Periodo			
				where fid.Id_Periodo in (select id_periodo from calennomina where numero=substring(''+''''''''+@quincena+''''''''+'',5,2) and año=substring(''+''''''''+@quincena+''''''''+'',1,4)
				) and fd.id_estatus=2 and fdd.id_motivomovimiento not in (379,380,383,384,385,386) and ISNUMERIC(fd.folio)=0''
				

				--si trae filtro por nivel educativo
				if(@niveleducativo<>-1)
				begin 
					 set @filtro=@filtro + '' and fid.Id_Nivel_Educativo='' + cast(@niveleducativo as varchar(2))
				end

				--si trae filtro por tipo de movimiento
				if(@tipmov<>0)
				begin 
					 set @filtro=@filtro + '' and ftm.Id_TipoMovimiento='' + cast(@tipmov as varchar(10))
				end

				--si trae filtro por motivo de movimiento
				if(@motivomovimiento<>0)
				begin 
					 set @filtro=@filtro + '' and fmm.Id_MotivoMovimiento='' + cast(@motivomovimiento as varchar(10))
				end
											
				--se revisa si el usuario tiene registro en la tabla para generacion de un fup
			  if(exists(select filtro from fup_masivos_filtros where id_usuario=@id_usuario))
				  begin 
					   delete from fup_masivos_filtros where id_usuario=@id_usuario

					   insert into fup_masivos_filtros values (ltrim(@filtro),@fecha_elaboracion,@verifica,@cargo_verifica,@utoriza,@cargo_autoriza,@firma_verifica,
					   @firma_autoriza,@observaciones,@id_usuario,@plazas_activas)
				  end
			  else 
				  begin 
					   insert into fup_masivos_filtros values (ltrim(@filtro),@fecha_elaboracion,@verifica,@cargo_verifica,@utoriza,@cargo_autoriza,@firma_verifica,
					   @firma_autoriza,@observaciones,@id_usuario,@plazas_activas)
				  end
		  
			  --se inserta el log de los documentos que se generan masivos por usuario
			  insert into fup_masivos values (ltrim(@filtro),@fecha_elaboracion,@verifica,@cargo_verifica,@utoriza,@cargo_autoriza,@firma_verifica,
			  @firma_autoriza,@observaciones,@justificacion,@id_usuario,getdate())
		 end 

if(@tipogeneracion=3)--cuando la generacion es por filiacion (rfc)
		 begin
				set @filtro=''select distinct fd.folio from fup_documentos fd with (nolock)
				inner join FUP_Informacion_Documentos fid with (nolock) on fd.id_documento=fid.id_documento
				inner join FUP_Documento_Detalle fdd with (nolock) on fd.id_documento=fdd.Id_Documento
				inner join FUP_MotivoMovimiento fmm with (nolock) on fdd.Id_MotivoMovimiento=fmm.Id_MotivoMovimiento
				inner join FUP_TipoMovimiento ftm with (nolock) on fmm.Id_TipoMovimiento=ftm.Id_TipoMovimiento
				inner join calennomina c with (nolock) on fid.Id_Periodo=c.Id_Periodo
				inner join Empleados e with (nolock) on fd.id_emp=e.id_emp
				where fd.id_estatus=2 and fdd.id_motivomovimiento not in (379,380,383,384,385,386) and ISNUMERIC(fd.folio)=0''
				
				--si trae filtro por nivel educativo
				if(@niveleducativo<>-1)
				begin 
					 set @filtro=@filtro + '' and fid.Id_Nivel_Educativo='' + cast(@niveleducativo as varchar(2))
				end

				--si trae filtro por tipo de movimiento
				if(@tipmov<>0)
				begin 
					 set @filtro=@filtro + '' and ftm.Id_TipoMovimiento='' + cast(@tipmov as varchar(10))
				end

				--si trae filtro por motivo de movimiento
				if(@motivomovimiento<>0)
				begin 
					 set @filtro=@filtro + '' and fmm.Id_MotivoMovimiento='' + cast(@motivomovimiento as varchar(10))
				end
			
				--si trae filtro por motivo de movimiento
				if(@filiacion<>'''')
				begin 
					 set @filtro=@filtro + '' and e.rfc='' + '''''''' + cast(@filiacion as varchar(13)) + ''''''''
				end						
				--se revisa si el usuario tiene registro en la tabla para generacion de un fup
			  if(exists(select filtro from fup_masivos_filtros where id_usuario=@id_usuario))
				  begin 
					   delete from fup_masivos_filtros where id_usuario=@id_usuario

					   insert into fup_masivos_filtros values (ltrim(@filtro),@fecha_elaboracion,@verifica,@cargo_verifica,@utoriza,@cargo_autoriza,@firma_verifica,
					   @firma_autoriza,@observaciones,@id_usuario,@plazas_activas)
				  end
			  else 
				  begin 
					   insert into fup_masivos_filtros values (ltrim(@filtro),@fecha_elaboracion,@verifica,@cargo_verifica,@utoriza,@cargo_autoriza,@firma_verifica,
					   @firma_autoriza,@observaciones,@id_usuario,@plazas_activas)
				  end
		  
			  --se inserta el log de los documentos que se generan masivos por usuario
			  insert into fup_masivos values (ltrim(@filtro),@fecha_elaboracion,@verifica,@cargo_verifica,@utoriza,@cargo_autoriza,@firma_verifica,
			  @firma_autoriza,@observaciones,@justificacion,@id_usuario,getdate())
		 end
	end
if(@accion=2)--solo para validaciones
    begin 
	     set @filtro=''select distinct fd.folio into #folios_masivo from fup_documentos fd with (nolock)
				inner join FUP_Informacion_Documentos fid with (nolock) on fd.id_documento=fid.id_documento
				inner join FUP_Documento_Detalle fdd with (nolock) on fd.id_documento=fdd.Id_Documento
				inner join FUP_MotivoMovimiento fmm with (nolock) on fdd.Id_MotivoMovimiento=fmm.Id_MotivoMovimiento
				inner join FUP_TipoMovimiento ftm with (nolock) on fmm.Id_TipoMovimiento=ftm.Id_TipoMovimiento
				inner join calennomina c with (nolock) on fid.Id_Periodo=c.Id_Periodo			
				where fid.Id_Periodo in (select id_periodo from calennomina where numero=substring(''+''''''''+@quincena+''''''''+'',5,2) and año=substring(''+''''''''+@quincena+''''''''+'',1,4)
				) and fd.id_estatus=2 and fdd.id_motivomovimiento not in (379,380,383,384,385,386) and ISNUMERIC(fd.folio)=0''
				
				--si trae filtro por nivel educativo
				if(@niveleducativo<>-1)
				begin 
					 set @filtro=@filtro + '' and fid.Id_Nivel_Educativo='' + cast(@niveleducativo as varchar(2))
				end

				--si trae filtro por tipo de movimiento
				if(@tipmov<>0)
				begin 
					 set @filtro=@filtro + '' and ftm.Id_TipoMovimiento='' + cast(@tipmov as varchar(10))
				end

				--si trae filtro por motivo de movimiento
				if(@motivomovimiento<>0)
				begin 
					 set @filtro=@filtro + '' and fmm.Id_MotivoMovimiento='' + cast(@motivomovimiento as varchar(10))
				end

				--se contempla para revisar si el empleado tiene folios procesados	   
			   set @filtro= @filtro + ''
			   if((select count(*) from #folios_masivo)=0)
				   begin 
						select ''''No existen folios procesados con los filtros seleccionados, por favor verifique.''''  as folio
				   end
			   else 
				   begin 
						select '''''''' as folio
				   end'' 
       
	           exec(@filtro)
    end
if(@accion=3) --obtener el id del usuario de la tabla para ser enviado al jar que realizara el proceso de generacion
    begin 
	     select id from fup_masivos_filtros where id_usuario=@id_usuario
    end

if(@accion=4) --obtener el id del usuario de la tabla para ser enviado al jar que realizara el proceso de generacion
    begin 
	     set @filtro=''select count(*) as folio from fup_documentos fd with (nolock)
				inner join FUP_Informacion_Documentos fid with (nolock) on fd.id_documento=fid.id_documento
				inner join FUP_Documento_Detalle fdd with (nolock) on fd.id_documento=fdd.Id_Documento
				inner join FUP_MotivoMovimiento fmm with (nolock) on fdd.Id_MotivoMovimiento=fmm.Id_MotivoMovimiento
				inner join FUP_TipoMovimiento ftm with (nolock) on fmm.Id_TipoMovimiento=ftm.Id_TipoMovimiento
				inner join calennomina c with (nolock) on fid.Id_Periodo=c.Id_Periodo			
				where fid.Id_Periodo in (select id_periodo from calennomina where numero=substring(''+''''''''+@quincena+''''''''+'',5,2) and año=substring(''+''''''''+@quincena+''''''''+'',1,4)
				) and fd.id_estatus=2 and fdd.id_motivomovimiento not in (379,380,383,384,385,386) and ISNUMERIC(fd.folio)=0''
				
				--si trae filtro por nivel educativo
				if(@niveleducativo<>-1)
				begin 
					 set @filtro=@filtro + '' and fid.Id_Nivel_Educativo='' + cast(@niveleducativo as varchar(2))
				end

				--si trae filtro por tipo de movimiento
				if(@tipmov<>0)
				begin 
					 set @filtro=@filtro + '' and ftm.Id_TipoMovimiento='' + cast(@tipmov as varchar(10))
				end

				--si trae filtro por motivo de movimiento
				if(@motivomovimiento<>0)
				begin 
					 set @filtro=@filtro + '' and fmm.Id_MotivoMovimiento='' + cast(@motivomovimiento as varchar(10))
				end							
				exec(@filtro)
    end
end



				   

'
GO

GO
PRINT N'Creating [dbo].[spf_Plaza_cancelada_cancelar]'
GO
IF OBJECT_ID(N'[dbo].[spf_Plaza_cancelada_cancelar]', 'P') IS NULL
EXEC sp_executesql N'CREATE procedure [dbo].[spf_Plaza_cancelada_cancelar]    
(                                
  @id_detalle as int                              
) as                                
Begin
     declare @id_detalle_loc as int =@id_detalle                            
     declare @id_plaza as int        
     declare @fechaini as datetime        
     declare @fechacancelada as datetime        
     declare @Quincenacancelada as varchar(6)            
     declare @plazaieepo as varchar (21)      
     declare @oficio_cancelada as varchar(100)      
     declare @mensaje as varchar (500)        
     declare @procede as int    
             
     set @id_plaza=(select id_plaza from FUP_Documento_Detalle where Id_Detalle=@id_detalle_loc)        
     set @plazaieepo=(select plazaieepo from plazaieepo where Id_plaza=@id_plaza)        
     set @fechaini=(select fechaini from fup_documento_detalle where id_detalle=@id_detalle_loc)    
     set @fechacancelada= (select Fecha from HOficioAfectacionCancelacion where id_plaza=@id_plaza)        
     set @Quincenacancelada=(select dbo.fechaToAnioQuincena(@fechacancelada))    
     set @oficio_cancelada=(select OficioAfectacionCancelacion from HOficioAfectacionCancelacion where id_plaza=@id_plaza)    
             
     if (@fechacancelada is null)  
    begin   
            set @mensaje=''''  
    end  
     else  
             begin  
      if (@fechacancelada<=@fechaini)    
        begin     
          if (@mensaje ='''')  
           begin   
             set @procede=0  
             delete from FUP_Rel_Id_Detalle_Mensaje where Id_Detalle=@id_detalle_loc  
           end  
          else  
           begin  
             set @mensaje=''La plaza '' +@plazaieepo +'' está cancelada con el oficio de afectación '' +@oficio_cancelada + '' desde la Quincena '' + @Quincenacancelada    
             if (exists(select * from FUP_Rel_Id_Detalle_Mensaje where Id_Detalle=@id_detalle_loc))        
             delete from FUP_Rel_Id_Detalle_Mensaje where Id_Detalle=@id_detalle_loc     
             insert into FUP_Rel_Id_Detalle_Mensaje (Id_Detalle,mensaje) values (@id_detalle_loc,@mensaje)         
           end  
        end    
      else  
        begin         
          if (@mensaje ='''')  
             begin   
              set @procede=0  
              delete from FUP_Rel_Id_Detalle_Mensaje where Id_Detalle=@id_detalle_loc  
             end  
          else     
             begin    
               set @mensaje=''La plaza '' +@plazaieepo +'' está para cancelar con el oficio de afectación '' +@oficio_cancelada + '' a partir de la Quincena '' + @Quincenacancelada    
               if (exists(select * from FUP_Rel_Id_Detalle_Mensaje where Id_Detalle=@id_detalle_loc))        
               delete from FUP_Rel_Id_Detalle_Mensaje where Id_Detalle=@id_detalle_loc               
               insert into FUP_Rel_Id_Detalle_Mensaje (Id_Detalle,mensaje) values (@id_detalle_loc,@mensaje)        
             end  
        end   
             end   
               
                         
end




'
GO

GO
PRINT N'Creating [dbo].[SpAct_Fecha_Emp]'
GO
IF OBJECT_ID(N'[dbo].[SpAct_Fecha_Emp]', 'P') IS NULL
EXEC sp_executesql N'CREATE procedure [dbo].[SpAct_Fecha_Emp] (          
                                        @id_emp as int,           
                                        @fecha as date,        
                                        @id_cia as int,         
                                        @mensaje as varchar(max)='''')          
as                                                 
begin          
if(exists(select * from empleados where id_emp=@id_emp))          
update empleados set fecha_alta=@fecha where id_emp=@id_emp          
else        
begin          
set @mensaje=''Fecha de Alta Actualizada''          
end          
end          
begin          
if(exists(select * from hcia where id_emp=@id_emp and Fecha=@fecha))         
update hcia set fecha=@fecha where id_emp=@id_emp and Fecha=@fecha        
else          
begin          
insert into hcia values (@id_emp,@id_cia,@fecha,1,GETDATE())         
end          
end          
begin          
if(exists(select * from hFecha_Alta_gob_fed where id_emp=@id_emp and Fecha_Alta_gob_fed=@fecha))          
update hFecha_Alta_gob_fed set Fecha_Alta_gob_fed=@fecha where id_emp=@id_emp and Fecha_Alta_gob_fed=@fecha        
else          
begin          
insert into  hFecha_Alta_gob_fed values(@id_emp,@fecha,@fecha,1,GETDATE())        
end          
end          
begin          
if(exists(select * from HFecha_Alta_Gob_Est where id_emp=@id_emp and Fecha_Alta_Gob_Est=@fecha))          
update HFecha_Alta_Gob_Est set Fecha_Alta_Gob_Est=@fecha where id_emp=@id_emp and fecha=@fecha          
else          
begin          
insert into HFecha_Alta_Gob_Est values (@id_emp,@fecha,@fecha,1,getdate())       
end          
end          
begin          
if(exists(select * from hfecha_alta_sep where id_emp=@id_emp and Fecha_Alta_Sep=@fecha))      
update hfecha_alta_sep set Fecha_Alta_Sep=@fecha where id_emp=@id_emp and Fecha_Alta_Sep=@fecha        
else          
begin          
insert into HFecha_Alta_SEP values (@id_emp,@fecha,@fecha,1,getdate())        
end          
end          
begin          
if(exists(select * from HFecha_Alta_Rama where id_emp=@id_emp))          
update HFecha_Alta_Rama set Fecha_Alta_Rama=@fecha where id_emp=@id_emp        
else          
begin          
set @mensaje=''Fecha Actualizada''          
end          
end          
begin          
if(exists(select * from HSeguro_Fovisste where id_emp=@id_emp and fecha=@fecha))          
update HSeguro_Fovisste set Fecha=@fecha where id_emp=@id_emp and fecha=@fecha        
else          
begin          
insert HSeguro_Fovisste values (@id_emp,0,@fecha,1,GETDATE())        
end          
end'
GO

GO
PRINT N'Creating [dbo].[D1F2QU1NH1S2]'
GO
IF OBJECT_ID(N'[dbo].[D1F2QU1NH1S2]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[D1F2QU1NH1S2]
@qnaini varchar(6), @qnafin varchar(6), @nom varchar(3), @idperini int, @idperfin int, @idcia int
WITH EXEC AS CALLER
AS
set @idcia = case 
                when @nom = ''BAS'' then 2
                when @nom = ''UPN'' then 1
              end
set @idperini = (select id_periodo from CalenNomina where Año = cast(SUBSTRING(@qnaini, 1, 4) as int) and Numero = cast(SUBSTRING(@qnaini, 5, 2) as int) and Parcial = 0 and Id_cia = @idcia)
set @idperfin = (select id_periodo from CalenNomina where Año = cast(SUBSTRING(@qnafin, 1, 4) as int) and Numero = cast(SUBSTRING(@qnafin, 5, 2) as int) and Parcial = 0 and Id_cia = @idcia)
select isnull(qnaini.id_concepto, qnafin.id_concepto) as id_concepto, c.resultado as Concepto, c.descripcion as Descripcion, isnull(round(qnaini.Total, 2), 0) as qna_inicio, isnull(round(qnafin.Total, 2), 0) as qna_fin,
round(isnull(qnafin.Total, 0) - isnull(qnaini.Total, 0), 2) as Diferencia, round(isnull(qnafin.Total, 0) + isnull(qnaini.Total, 0), 2) as Total
from (
  select h.id_concepto, round(sum(pesos),2) as Total 
  from histpagos h 
  where h.id_periodo = @idperini
  group by h.id_concepto
) qnaini
full join (
  select h.id_concepto, round(sum(pesos),2) as Total 
  from histpagos h
  where h.id_periodo = @idperfin 
  group by h.id_concepto
) qnafin on qnaini.id_concepto = qnafin.id_concepto
inner join Conceptos c on c.id_concepto = isnull(qnaini.id_concepto, qnafin.id_concepto)
where c.tipo in (1,2)
order by c.Tipo, c.resultado'
GO

GO
PRINT N'Creating [dbo].[spuInsertaVectorAjuste]'
GO
IF OBJECT_ID(N'[dbo].[spuInsertaVectorAjuste]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[spuInsertaVectorAjuste]
@idEmp1 int, @idPlaza1 int, @idPeriodo int, @idVector int, @idUser int, @idDocumento int, @Obs varchar(500), @idPeriodoApli int, @idReferencia int, @idProcesNomina int
WITH EXEC AS CALLER
AS
BEGIN

declare @idEmp int = @idEmp1
declare @idPlaza int = @idPlaza1
declare @idP int = @idPeriodo
declare @vector int = @idVector
declare @idUsuario int = @idUser
declare @idDoc int = @idDocumento
declare @obser varchar(500) = @Obs
declare @idPeriodoA int = @idPeriodoApli
declare @idRef int = @idReferencia
declare @idProsNom int = @idProcesNomina

begin tran
BEGIN TRY

    insert into Hvectores (id_Emp, id_Plaza, id_Periodo, id_Vector, Fecha, id_user, id_documento, Observaciones, 
    id_periodo_aplicacion, Id_Referencia, Id_ProcesoNomina)
		values(@idEmp,@idPlaza,@idP,@vector,getdate(),@idUsuario, @idDoc , @obser , @idPeriodoA, @idRef, @idProsNom)
		--select ''inserta''
	
	if @@ROWCOUNT<=0 or @@ROWCOUNT>1
		RAISERROR (''no se actualizó ningun valor'', 16,1);
	else
	begin
		select ''correcto'' as resultado
		commit tran
	end

END TRY
BEGIN CATCH
    SELECT ERROR_MESSAGE() as resultado
    rollback tran
END CATCH;
		
END'
GO

GO
PRINT N'Creating [dbo].[spi_conceptoEspejoRetros]'
GO
IF OBJECT_ID(N'[dbo].[spi_conceptoEspejoRetros]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		Noe Ramírez Ramos
-- Create date: 13/01/2016
-- Description: inserta el concepto espejo
-- =============================================
create PROCEDURE [dbo].[spi_conceptoEspejoRetros]
	-- Add the parameters for the stored procedure here
	@idperiodo int,  @idrecalculo int, @idemp int, @idplaza int, @idconcepto int, @idtipo int
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
  
  declare @id_periodo int = @idperiodo
  declare @id_referencia int = @idrecalculo
  declare @id_emp int = @idemp
  declare @id_plaza int = @idplaza
  declare @id_concepto int = @idconcepto
  declare @id_tipo int = @idtipo

BEGIN TRY
  if (select distinct 1 from RelConceptoEspejo where id_concepto = @id_concepto) = 1
  begin
    if(@id_tipo = 0)
    begin
      delete from h from histpagosdetalle h
      inner join RelConceptoEspejo r on r.espejo = h.id_concepto
      where h.id_periodo = @id_periodo and h.id_referencia = @id_referencia and h.id_emp = @id_emp and h.id_plaza = @id_plaza
      and h.id_concepto in (select espejo from  RelConceptoEspejo where id_concepto = @id_concepto )
      insert into histpagosdetalle (id_emp, id_periodo, id_concepto, consecutivo, horas, pesos, pesosexcento, id_plaza, id_referencia, id_periodopago, 
      id_procesonomina, desde, hasta, id_plazapago, C_costo )
      select h.id_emp, h.id_periodo, r.espejo id_concepto, h.consecutivo, h.horas, h.pesos, h.pesosexcento, h.id_plaza, h.id_referencia, 
      h.id_periodopago, h.id_procesonomina, h.desde, h.hasta, h.id_plazapago, h.C_costo from histpagosdetalle h
      inner join RelConceptoEspejo r on r.id_concepto = h.id_concepto
      where h.id_periodo = @id_periodo and h.id_referencia = @id_referencia and h.id_emp = @id_emp and h.id_plaza = @id_plaza
      and h.id_concepto = @id_concepto
    end
    else
    begin
      delete from h from histpagos h
      inner join RelConceptoEspejo r on r.espejo = h.id_concepto
      where h.id_periodo = @id_periodo and h.id_periodopago = @id_referencia and h.id_emp = @id_emp and h.id_plaza = @id_plaza
      and h.id_concepto in (select espejo from  RelConceptoEspejo where id_concepto = @id_concepto )
      insert into HistPagos (Id_Emp, Id_Periodo, id_concepto, Consecutivo, Horas, Pesos, Id_categ, Fecha, PesosExcento, C_costo, id_plaza, 
      Id_Referencia, id_periodoPago, Id_ProcesoNomina, Desde, Hasta)
      select h.id_emp, h.id_periodo, r.espejo id_concepto, h.consecutivo, h.horas, h.pesos, 0 id_categ, getdate() fecha, h.pesosexcento, h.C_costo, h.id_plaza, 
      h.id_referencia, h.id_periodopago, h.id_procesonomina, h.desde, h.hasta from histpagos h
      inner join RelConceptoEspejo r on r.id_concepto = h.id_concepto
      where h.id_periodo = @id_periodo and h.id_periodopago = @id_referencia and h.id_emp = @id_emp and h.id_plaza = @id_plaza
      and h.id_concepto = @id_concepto
    end
  end

if @@rowcount<1 
			RAISERROR (''Error de actualización.'', 16,1);
		else
			select ''correcto'' as resultado
END TRY
BEGIN CATCH
		SELECT ERROR_MESSAGE() as resultado
	    
END CATCH;

END'
GO

GO
PRINT N'Creating [dbo].[dsv_antiguedad]'
GO
IF OBJECT_ID(N'[dbo].[dsv_antiguedad]', 'P') IS NULL
EXEC sp_executesql N'CREATE procedure [dbo].[dsv_antiguedad]
(
@TipoEmp int
)
AS
BEGIN

declare @qnaval int = (SELECT TOP 1  Id_Periodo  FROM CalenNomina 
WHERE AÑO = year(getdate()) AND PARCIAL = 0 AND ACTUALIZADO = 0 AND RESPALDADO = 0 AND Id_cia = @TipoEmp ORDER BY NUMERO)

declare @fecharef as datetime =(select fechaini from CalenNomina where id_periodo = @qnaval )
declare @fechamov as datetime = (select FechaCorteMov from CalenNomina where id_periodo = @qnaval )

--set @fecharef = ''2014/05/01'' --INICIO DE LA QUINCENA DE PROCESO
--set @fechamov = ''2014/04/03'' --FECHA DE CIERRE DE CAPTURA, DEBE SER MENOR A LA FECHA DE CORTE Y MENOR A LA FECHA DE CORRE RL PROCESO
-- DE MENOR A MAYOR ACTUALIZADO Y RESPALDADO MENOR A 1
delete from hccosto
if exists(select * from sysobjects where name like ''zprimera'')
drop table zprimera
if exists(select * from sysobjects where name like ''zsegunda'')
drop table zsegunda
select * into zprimera from
  (
    select id_emp,
          --case when actualizado>@fecharef then diferencia-1 else diferencia end as antiguedad,
	case when diferencia>56 then diferencia-(diferencia-56) else diferencia end as antiguedad, 
          Fecha_Prima_Antiguedad
    from (select t.id_emp,Fecha_Prima_Antiguedad
                  --,datediff(yy,Fecha_Prima_Antiguedad,@fecharef) as diferencia
                  ,dbo.RegresaDiferenciaAños(dateadd(mi,+1,dbo.anioQuincenaToFecha(dbo.fechaToAnioQuincena(fecha_prima_antiguedad), 1)),@fecharef) as diferencia
                  --,dateadd(yy,datediff(yy,Fecha_Prima_Antiguedad,@fecharef) ,Fecha_Prima_Antiguedad) as actualizado
          from 
          HFecha_Prima_Antiguedad T inner join
          (select id_emp, max(fecha) as fecha 
            from HFecha_Prima_Antiguedad 
            where fecha<=@fecharef group by id_emp) h
          on t.id_emp=h.id_emp and t.fecha=h.fecha
          )a --where case when actualizado>@fecharef then diferencia-1 else diferencia end>0
  ) a inner join tquinquenios_docentes t on t.años=a.antiguedad
where t.Tipo = ''D''-----
if exists(select * from sysobjects where name like ''zprimera'')
insert zprimera (id_emp,antiguedad,Fecha_Prima_Antiguedad,id_Quinquenios_docentes,Clave,[AÑos],Porcentaje,Tipo)
select * 
from
(
  select id_emp,
  --diferencia as antiguedad,
	case when diferencia>56 then diferencia-(diferencia-56) else diferencia end as antiguedad, 
  Fecha_Prima_Antiguedad
  from
  (
    select t.id_emp,Fecha_Prima_Antiguedad
      ,case when month(Fecha_Prima_Antiguedad) >= 2 and month(Fecha_Prima_Antiguedad) < 9 Then 
              cast(cast(Year(Fecha_Prima_Antiguedad) as varchar(4)) + ''/09/01'' as datetime)
            Else Case When month(Fecha_Prima_Antiguedad) = 1 Then
                  cast(cast(Year(Fecha_Prima_Antiguedad) as varchar(4)) + ''/02/01'' as datetime)
                Else
                  cast(cast(Year(Fecha_Prima_Antiguedad)+1 as varchar(4)) + ''/02/01'' as datetime)
            End
        End as FechaCumple
      ,case when month(Fecha_Prima_Antiguedad) >= 2 and month(Fecha_Prima_Antiguedad) < 9 Then 
              dbo.RegresaDiferenciaAños(cast(cast(Year(Fecha_Prima_Antiguedad) as varchar(4)) + ''/09/01'' as datetime),@fecharef) 
            Else Case When month(Fecha_Prima_Antiguedad) = 1 Then
                  dbo.RegresaDiferenciaAños(cast(cast(Year(Fecha_Prima_Antiguedad) as varchar(4)) + ''/02/01'' as datetime),@fecharef) 
                Else
                  dbo.RegresaDiferenciaAños(cast(cast(Year(Fecha_Prima_Antiguedad)+1 as varchar(4)) + ''/02/01'' as datetime),@fecharef) 
            End
        End as diferencia
      ,dateadd(yy,case when month(Fecha_Prima_Antiguedad) >= 2 and month(Fecha_Prima_Antiguedad) < 9 Then 
              dbo.RegresaDiferenciaAños(cast(cast(Year(Fecha_Prima_Antiguedad) as varchar(4)) + ''/09/01'' as datetime),@fecharef) 
            Else Case When month(Fecha_Prima_Antiguedad) = 1 Then
                  dbo.RegresaDiferenciaAños(cast(cast(Year(Fecha_Prima_Antiguedad) as varchar(4)) + ''/02/01'' as datetime),@fecharef) 
                Else
                  dbo.RegresaDiferenciaAños(cast(cast(Year(Fecha_Prima_Antiguedad)+1 as varchar(4)) + ''/02/01'' as datetime),@fecharef)
            End
        End,case when month(Fecha_Prima_Antiguedad) >= 2 and month(Fecha_Prima_Antiguedad) < 9 Then 
              cast(cast(Year(Fecha_Prima_Antiguedad) as varchar(4)) + ''/09/01'' as datetime)
            Else Case When month(Fecha_Prima_Antiguedad) = 1 Then
                  cast(cast(Year(Fecha_Prima_Antiguedad) as varchar(4)) + ''/02/01'' as datetime)
                Else
                  cast(cast(Year(Fecha_Prima_Antiguedad)+1 as varchar(4)) + ''/02/01'' as datetime)
            End
        End) as actualizado
    from 
      HFecha_Prima_Antiguedad T inner join
      (
        select id_emp, max(fecha) as fecha 
        from HFecha_Prima_Antiguedad 
        where fecha<=@fecharef group by id_emp
      ) h
      on t.id_emp=h.id_emp and t.fecha=h.fecha
  ) a 
) a 
inner join tquinquenios_docentes t on t.años=a.antiguedad
where t.Tipo=''A''---
select  m.id_plaza,m.id_emp,tipo into zsegunda from
(select t.id_plaza,id_emp from
plazaempleados T inner join
(select id_plaza, max(fecha) as fecha  from plazaempleados where fecha<=@fecharef group by id_plaza)h
on t.id_plaza=h.id_plaza and t.fecha=h.fecha where id_emp<>0)M
inner join
(select t.id_plaza,tipo from
htabulador_se_cat_puesto T inner join
(select id_plaza, max(fecha) as fecha  from htabulador_se_cat_puesto where fecha<=@fecharef group by id_plaza)h
on t.id_plaza=h.id_plaza and t.fecha=h.fecha
inner join
(select case when tmodelo_se_id_modelo_se in (2,3,9) then ''A'' else ''D'' end as tipo,id_tabulador_se_cat_puesto 
from ttabulador_se_cat_puesto where tmodelo_se_id_modelo_se in (1,2,3,4,5,6,9))c on
c.id_tabulador_se_cat_puesto=id_rel
)n on m.id_plaza=n.id_plaza 
----
insert into hccosto (id_plaza,id_rel,fecha,id_user,movimiento)
select distinct id_plaza,id_quinquenios_docentes as id_rel,@fecharef as fecha,1 as id_user,@fechamov as movimiento from zprimera q inner join zsegunda t on q.id_emp=t.id_emp and q.tipo=t.tipo
where q.tipo = ''A''

insert into hccosto (id_plaza,id_rel,fecha,id_user,movimiento)
select distinct id_plaza,id_quinquenios_docentes as id_rel,@fecharef as fecha,1 as id_user,@fechamov as movimiento from zprimera q inner join zsegunda t on q.id_emp=t.id_emp and q.tipo=t.tipo
where q.tipo = ''D''
END'
GO

GO
PRINT N'Creating [dbo].[sp_movs_reanudaciones]'
GO
IF OBJECT_ID(N'[dbo].[sp_movs_reanudaciones]', 'P') IS NULL
EXEC sp_executesql N'----------------------------------
--- REANUDACIONES
----------------------------------
----------------------------------
----------------------------------
--- QUINCENA DE LA QUE SE DESEA EL REPORTE---
create procedure [dbo].[sp_movs_reanudaciones]
 (
 @Quincena as int,
 @id_cia as int
 )
 with encryption 
 as begin
declare @año as int
set @quincena=Case when @Quincena=1 then 24 else @Quincena-1 end
set @año= Case when @quincena=24 then year(GETDATE())-1 else YEAR(GETDATE()) end

select row_number() OVER (ORDER BY ftm.clave,fmm.clave) as ID_OPERACION,
OPERACION= ftm.clave+''-''+fmm.clave,
e.curp AS CURP,
replace(pi.PlazaIEEPO,'' '','''') AS CPZA,
ttcm.id_Tabulador_SE_CM  AS NIVEL_SALARIAL,
'''' AS UR,--''R20'' AS UR,
'''' as FECHA,--convert(char(12),c.fechaini,103) as FECHA,
'''' AS CCT,--fid.Centro_Trabajo AS CCT,
'''' AS RFC,--e.RFC, 
'''' AS PRIMER_APELLIDO,--e.ApPaterno AS PRIMER_APELLIDO,
'''' AS SEGUNDO_APELLIDO,--e.ApMaterno AS SEGUNDO_APELLIDO,
'''' AS ''NOMBRE(S)'' ,--e.Nombre AS ''NOMBRE(S)'',
'''' AS NACIONALIDAD,--right(''00'' + cast(tnac.Id_Nacionalidad as varchar(max)),3) AS NACIONALIDAD,
'''' AS PAIS_NAC,--PAIS_NAC=Case when tp.Descr=''MEXICO'' then 141 else 0 end,         
'''' AS ENTIDAD_NAC,/*ENTIDAD_NAC=Case  substring(e.curp,12,2)
            when ''AS'' then 1 
            when ''BC'' then 2 
            when ''BS'' then 3 
            when ''CC'' then 4 
            when ''CS'' then 5
            when ''CM'' then 6 
            when ''CL'' then 7 
            when ''CH'' then 8 
            when ''DF'' then 9
            when ''DG'' then 10
            when ''GT'' then 11
            when ''GR'' then 12
            when ''HG'' then 13
            when ''JC'' then 14 
            when ''MC'' then 15 
            when ''MN'' then 16
            when ''MS'' then 17 
            when ''NT'' then 18 
            when ''NL'' then 19
            when ''OC'' then 20
            when ''PL'' then 21 
            when ''QT'' then 22
            when ''QR'' then 23 
            when ''SP'' then 24 
            when ''SL'' then 25
            when ''SR'' then 26
            when ''TC'' then 27
            when ''TS'' then 28
            when ''TL'' then 29
            when ''VZ'' then 30
            when ''YN'' then 31
            when ''ZS'' then 32
            else 0 end,*/
'''' AS MUNICIPIO_NAC,--MUNICIPIO_NAC= Case when e.Id_MunicipioNac is null then 0 else tc.Id_Ciudad end,
'''' AS SEXO,--e.SEXO,
'''' AS EDO_CIVIL,/*EDO_CIVIL= Case when e.edocivil=''C'' then ''02'' else 
		   Case when e.edocivil=''S'' then ''01'' else ''01'' end end,*/
'''' AS CALLE_Y_NUM,--CALLE_Y_NUM= Case when hd.Calle is null then '''' else cast(hd.calle as varchar(max))+ '' ''+ CAST(hd.numext as varchar (10)) end,
'''' AS CP,--CP= Case when hd.CodPostal is null then '''' else hd.CodPostal end,
'''' AS COLONIA,--COLONIA= Case when hd.Id_Colonia = 0 or hd.Id_Colonia is null then '''' else tcol.DESCR end,
'''' AS ENTIDAD,--ENTIDAD=Case when e.Id_EstadoNac is null then ''S/A'' else case when e.Id_EstadoNac<=32 then substring(te.descr,4,50) else te.descr end end,
'''' AS MUNICIPIO,--MUNICIPIO= Case when e.Id_MunicipioNac is null then '''' else upper(tc.Descr) end,
'''' AS LOCALIDAD,--LOCALIDAD=Case when hd.Id_Localidad = 0 or hd.Id_Colonia is null then '''' else tloc.Descr end,
'''' AS NIV_MAX_ESTUD,
--ING_GOB_FED= case when hfagf.fecha is null then '''' else dbo.fechatoanioquincena(hfagf.fecha) end,
'''' ING_GOB_FED,
--ING_SEP= case when hfas.fecha is null then '''' else dbo.fechatoanioquincena(hfas.fecha) end,
'''' AS ING_SEP,
--ING_RAMA= case when hfar.fecha is null then '''' else dbo.fechatoanioquincena(hfar.fecha) end,
'''' ING_RAMA,
'''' as TIPO_LIC,	
'''' as QUINQ_DOC,	
'''' as QUINQ_ADM	,
'''' as GRADO_LIC,	
'''' as TITULACIÓN,
--HORARIO=Case when rt.id_nodo is null then '''' else tt.descripcion end,
'''' AS HORARIO,
--ftm.Clave as MOVIMIENTO,	
'''' as MOVIMIENTO,
--ftm.Descripcion as DESC_MOVIMIENTO,	
'''' as DESC_MOVIMIENTO,
--fmm.Clave as MOTIVO,
'''' as MOTIVO,	
--fmm.Descripcion as DESC_MOTIVO,
'''' as DESC_MOTIVO,
Convert(varchar(10), fdd.Fechaini, 103) as FECHA_INI, 
FECHA_FIN= case when dbo.fechaToAnioQuincena(fdd.fechaini)=dbo.fechaToAnioQuincena(fdd.fechafin) then Convert(varchar(10), ''00/00/0000'', 103)  else Convert(varchar(10), fdd.FechaFin, 103) end,
'''' as CONCEPTOS_PAGO,
'''' AS REGIMEN
--convert(char(12),c.fechaini,103) as FECHA
from fup_documentos fd
inner join empleados e on fd.Id_Emp = e.Id_Emp
inner join fup_documento_detalle fdd on fd.Id_Documento = fdd.Id_Documento
inner join plazas p on fdd.Id_Plaza = p.Id_plaza
inner join plazaieepo pi on fdd.Id_Plaza = pi.Id_plaza
inner join (select id_plaza,MAX(fecha) fecha
from HTabulador_SE_cm htcm
group by id_plaza
) nc on pi.Id_plaza=nc.id_plaza
inner join HTabulador_SE_CM htcm on htcm.id_plaza=nc.id_plaza and htcm.fecha=nc.fecha
inner join TTabulador_SE_CM ttcm on htcm.id_rel=ttcm.id_Tabulador_SE_CM
inner join usuarios u on fd.Id_Usuario = u.Id_Usuario
inner join FUP_Informacion_Documentos fid on fd.Id_Documento = fid.Id_Documento
inner join CalenNomina c on fid.Id_Periodo = c.Id_Periodo
inner join FUP_MotivoMovimiento fmm on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
inner join tniveleducativo tn on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
inner join TNacionalidad tnac on e.Id_Nacionalidad=tnac.Id_Nacionalidad
inner join TPais tp on tnac.Id_Nacionalidad=tp.Id_Pais
left join TEstados te on e.Id_EstadoNac = te.Id_Estado
left join tciudad tc on e.Id_EstadoNac=te.Id_Estado and tc.Id_Ciudad=e.Id_MunicipioNac
left join (select id_emp,MAX(movimiento) fecha
from hdomicilio 
group by id_emp
) hdoc on e.Id_emp=hdoc.id_emp
left join HDomicilio hd on hd.id_emp=hdoc.id_emp and hdoc.fecha=hd.Movimiento
left join tcolonia tcol on hd.Id_Colonia=tcol.Id_Colonia
left join TLocalidad tloc on hd.Id_Localidad=tloc.id_Localidad
left join (select id_emp,MAX(fecha_alta_gob_fed) fecha
from HFecha_Alta_Gob_Fed group by id_emp
) hfagf on e.Id_Emp=hfagf.id_emp
left join (select id_emp,MAX(fecha_alta_sep) fecha
from HFecha_Alta_sep group by id_emp
) hfas on e.Id_Emp=hfas.id_emp
left join (select id_emp,MAX(fecha_alta_rama) fecha
from HFecha_Alta_rama group by id_emp
) hfar on e.Id_Emp=hfar.id_emp
inner join VistaTablaLongitud vt on fid.Centro_Trabajo=vt.clave
inner join RCT_Turno rt on vt.Id_Nodo=rt.id_nodo
inner join TCT_Turno tt on rt.id_rel=tt.id_CT_Turno
inner join Recalculo_Calculo rc on fdd.Id_Detalle=rc.Id_Detalle
where fid.Id_Periodo in (select id_periodo from calennomina where Numero in (@quincena)
and Id_cia=@id_cia --and Leyenda10=''CFUP'' 
and Año=@año and parcial<> 0
union all 
select id_periodo from calennomina where Numero in (@quincena+1)
and Id_cia=@id_cia --and Leyenda10=''CFUP'' 
and Año=@año and parcial= 0) and e.id_cia=@id_cia and fd.Id_Estatus =2 and fd.folio not in (select folio_n from HFolio_verificado)
and ftm.Id_TipoMovimiento in (12,13) 
and fd.observaciones not like ''%verificado%'' and fd.observaciones not like ''%procesado%''
 --and e.Id_Emp not in (
--select id_emp from fup_documentos where id_documento in (
--select Id_Documento from fup_documento_detalle where Id_MotivoMovimiento in (
--select Id_MotivoMovimiento from FUP_MotivoMovimiento where Id_TipoMovimiento in (6,7,9,10,11,31)
--)and id_documento in (
--select id_periodo from calennomina where Numero=@quincena
--and Id_cia=2 and Leyenda10=''CFUP'' and Año=@año
--)) and Id_Estatus=2)
and rc.Descripcion not like ''Reversa%''
order by  id_operacion,ftm.clave,fmm.clave
end



'
GO

GO
PRINT N'Creating [dbo].[spiInsertaConceptoHistPagosDetalle]'
GO
IF OBJECT_ID(N'[dbo].[spiInsertaConceptoHistPagosDetalle]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================  
-- Author:  wcahun   
-- Create date: 09/10/2013  
-- Description: procedimientto para insertar un concepto en un periodo del hispagosdetalle  
-- =============================================  
CREATE PROCEDURE [dbo].[spiInsertaConceptoHistPagosDetalle]
@id_plaza int, @id_emp int, @id_periodo int, @id_recalculo int, @id_periodoDestino int, @id_concepto int, @id_plazapago int, @pesos float, @CC varchar(4)
WITH EXEC AS CALLER
AS
BEGIN  
   
   declare @idPlaza int = @id_plaza
   declare @idEmp int = @id_emp
   declare @idPeriodo int = @id_periodo
   declare @idRecalculo int = @id_recalculo
   declare @idPeriodoDestino int = @id_periodoDestino
   declare @idCondepto int = @id_concepto
   declare @idPlazaPago int = @id_plazapago
   declare @pesosos float = @pesos
   declare @cCost varchar(4) = @CC
  
 if exists(select 1 from histpagosdetalle where   
    id_emp=@idEmp and id_plaza=@idPlaza and id_periodo=@idPeriodo   
    and id_referencia=@idRecalculo and id_periodopago=@idPeriodoDestino and id_concepto=@idCondepto  
    and id_plazapago=@idPlazaPago)  
 begin  
  select ''Ya existen datos para el periodo de pago destino especificado''as resultado  
 end  
 else  
 begin  
  insert into histpagosdetalle (id_emp, id_periodo, id_concepto, consecutivo, horas, pesos, pesosexcento, id_plaza, id_referencia, id_periodopago, 
id_procesonomina, desde, hasta, id_plazapago, C_costo) 
  select @idEmp, @idPeriodo,@idCondepto, 0 consecutivo,  0 horas, @pesosos, 0 pesosexcento,@idPlaza  
    ,@idRecalculo id_referencia,   
    @idPeriodoDestino,2 id_procesonomina  
    , (select dbo.fechatoanioquincena(fechaini) from calennomina where id_periodo=@idPeriodoDestino) desde   
    , (select dbo.fechatoanioquincena(fechaini) from calennomina where id_periodo=@idPeriodoDestino) hasta , @idPlazaPago, @cCost  
     
  
  select ''correcto'' as resultado  
 end  
  
  
END'
GO

GO
PRINT N'Creating [dbo].[SP_VISTA_COMBOS]'
GO
IF OBJECT_ID(N'[dbo].[SP_VISTA_COMBOS]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[SP_VISTA_COMBOS]
@Rtipo int
WITH EXEC AS CALLER
AS
declare @tipo int = @Rtipo
IF  @tipo = 0 
      select  ROW_NUMBER() OVER(ORDER BY s.codigo) AS ORDEN, s.codigo as categoria from( SELECT distinct h.codigo  FROM PlazaIEEPO p join ANALITICO_PLAZAFONE h on h.CODIGO_PLAZA = REPLACE(p.plazaieepo,'' '','''') and h.ESTATUS <> ''C'' )s WHERE s.codigo  is not null
     --select distinct categoria, ROW_NUMBER() OVER(ORDER BY categoria) AS ORDEN from TTabulador_SE_Cat_Puesto order by categoria
     ELSE IF @tipo = 1
        select  ROW_NUMBER() OVER(ORDER BY modelo) AS ORDEN, s.* from( SELECT  DISTINCT MODELO  FROM VIEW_PLAZAS_CONCILIADAS )s
     ELSE IF @tipo = 2
       select   ROW_NUMBER() OVER(ORDER BY y.Clave) AS ORDEN, y.* from (select distinct x.Clave AS CLAVE from ANALITICO_PLAZAFONE j join( select  distinct clave from VistaTablaLongitud where len(clave) = 10)x on j.CCT = x.Clave )y order by y.clave
     ELSE IF @tipo = 3
       select  distinct plaza, ROW_NUMBER() OVER(ORDER BY plaza) AS ORDEN from view_plazas_conciliadas order by plaza
     ELSE IF @tipo = 4
     SELECT   ROW_NUMBER() OVER(ORDER BY tipo) AS ORDEN,a.tipo as statusplaza from (select distinct tipo FROM ANALITICO_PLAZAFONE where tipo is not null)a
     ELSE IF @tipo = 5
       select distinct descrip, ROW_NUMBER() OVER(ORDER BY DESCRIP) AS ORDEN  from tct_region where descrip <> ''N/A'' order by descrip
     ELSE IF @tipo = 6
       select distinct des_mun_ct, ROW_NUMBER() OVER(ORDER BY des_mun_ct) AS ORDEN  FROM TCT_Municipios_ct where des_mun_ct <> ''SIN MUNICIPIO'' order by des_mun_ct
     ELSE IF @tipo = 7
        select  ROW_NUMBER() OVER(ORDER BY descri) AS ORDEN, m.* from(select descri from tstatusplaza)m
     ELSE IF @tipo = 8 
        select  ROW_NUMBER() OVER(ORDER BY s.horas) AS ORDEN, s.* from( SELECT distinct (p.horas/10) as HORAS FROM PlazaIEEPO p join ANALITICO_PLAZAFONE h on h.CODIGO_PLAZA = REPLACE(p.plazaieepo,'' '','''') and h.ESTATUS <> ''C'' )s'
GO

GO
PRINT N'Creating [dbo].[spsHistPagosPivotN]'
GO
IF OBJECT_ID(N'[dbo].[spsHistPagosPivotN]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		wcahun
-- Create date: 04/03/2014
-- Description:	procedimiento para seleccionar los datos del histpagos en forma de tabla
-- =============================================
CREATE PROCEDURE [dbo].[spsHistPagosPivotN]
@id_plaza int, @id_emp int, @id_periodo varchar(500), @tipo int
WITH EXEC AS CALLER
AS
BEGIN

  declare @idPlaza int = @id_plaza
  declare @idEmp int = @id_emp
  declare @idPeriodo varchar(500) = @id_periodo
  declare @tipoPD int = @tipo

	DECLARE @Xml AS XML        
	--Se crean los nodos
	set @xml=''<tabla>''+replace(@idPeriodo,'','',''</tabla> <tabla>'') +  ''</tabla>''	

	declare @listStr varchar(max)
	select @listStr= COALESCE(@listStr+''],['' ,'''') + cast(id_periodo as varchar(100)) from (
	select distinct cast(id_periodopago as varchar(10))+''-''+cast(a.id_periodo as varchar(10)) as id_periodo from nom_histpagos a 
	inner join conceptos c on a.id_concepto=c.id_concepto
	WHERE  ((a.id_periodo in (select   item.n.value(''.'', ''VARCHAR(50)'') AS n	FROM    @Xml.nodes(''/tabla'') AS item(n))  
	and a.id_periodopago=0) or (a.id_periodopago in (select   item.n.value(''.'', ''VARCHAR(50)'') AS n	FROM    @Xml.nodes(''/tabla'') AS item(n))))
	and a.id_plaza=@idPlaza and a.id_emp=@idEmp
	and c.TIPO=1
	) r
	order by id_periodo

set @liststr= ''[''+@liststr+'']''

--select @liststr
declare @ejecuta nvarchar(max)


set @ejecuta=
''select '' + cast(@idEmp as varchar(15)) +'' id_emp, ''+cast(@idPlaza as varchar(15))+'' id_plaza,* from ( 
select a.id_concepto,resultado, descripcion,Cast(A.id_periodopago as varchar(10))+''''-''''+Cast(A.id_periodo as varchar(10)) qnapago,pesos, ''''''''  plazapago , 0 id_plazapago from nom_histpagos a 
	inner join plazaieepo d on a.id_plaza=d.id_plaza
	inner join conceptos c on a.id_concepto=c.id_concepto
	inner join calennomina e on e.id_periodo=a.id_periodo
	WHERE  ((a.id_periodo in ('' + @idPeriodo+'') and a.id_periodopago=0) or (a.id_periodopago in (''+ @idPeriodo+ '' ))) '' +
	''and a.id_plaza=''+cast(@idPlaza as varchar(15))+'' and a.id_emp=''+cast(@idEmp as varchar(15))+''
	and c.TIPO=''+cast(@tipoPD as varchar(15))+'' 
	) sourcetable	pivot(sum(pesos) for qnapago in (''+ @liststr +''))  PIVOTETABLE order by resultado''

--select @ejecuta
execute (@ejecuta)
----select top 10 * from histpagosdetalle

END'
GO

GO
PRINT N'Creating [dbo].[SPF_Folios_Verificados]'
GO
IF OBJECT_ID(N'[dbo].[SPF_Folios_Verificados]', 'P') IS NULL
EXEC sp_executesql N'--create procedure [dbo].[SPF_Folios_Verificados]        
 CREATE procedure [dbo].[SPF_Folios_Verificados]        
  @idEmpleado int,    
  @idPlaza int,    
  @idDocumento int,    
  @idMotivoMovimiento int,    
  @desde date,    
  @hasta date,    
  @idUsuario int    
AS        
BEGIN 
 declare @_idEmpleado int = @idEmpleado
 declare @_idPlaza int = @idPlaza
 declare @_idDocumento int = @idDocumento
 declare @_idMotivoMovimiento int = @idMotivoMovimiento  
 declare @_desde date = @desde
 declare @_hasta date = @hasta
 declare @_idUsuario int = @idUsuario
 declare @msg varchar(max)    
 declare @folio varchar(15)    
 declare @idNodo int    
 declare @idNodoDocto int    
 declare @idBitacora int
 declare @id_periodo_capturado int
 declare @periodo varchar(max)   
 set @msg = ''''    

 select @folio = folio from fup_documentos where id_documento = @_idDocumento    
 --REVISA LOS CASOS RESPECTO A LOS CENTROS DE TRABAJO.    
 --if exists(select 1 from plazaempleados where id_emp = @_idEmpleado and id_plaza = @_idPlaza and fecha = @_desde)    
 --begin    
 --  select @idNodo = id_nodo from plazaempleados where id_emp = @_idEmpleado and id_plaza = @_idPlaza and fecha = @_desde    
 --  select @idNodoDocto = id_nodo from vistatablalongitud v inner join fup_informacion_documentos d on v.centro_de_trabajo = d.centro_trabajo where d.id_documento = @_idDocumento     
 --  if @idNodo = @idNodoDocto    
 --   set @msg = ''El documento es verificado, ya existe información correspondiente a los datos proporcionados.''    
 --  else    
 --   set @msg = ''El documento procede, solo capturar reubicación para los datos proporcionados.''      
 --end    

 declare @rfc varchar(13)    
 declare @plazaieepo varchar(21)    
 declare @descripcionMov varchar(50)    
 declare @folioExiste varchar(15)    
       
-- REVISA QUE EL EMP,PLAZA,MOV,DESDE,HASTA NO EXISTA EN OTRO FOLIO.    
if exists(
		select 1 from fup_documentos d 
		inner join fup_documento_detalle dd on d.id_documento = dd.id_documento 
		where d.id_emp = @_idEmpleado and dd.id_plaza = @_idPlaza 
		and dd.fechaini = @_desde and dd.fechafin = @_hasta and dd.id_motivomovimiento = @_idMotivoMovimiento 
		and d.id_documento <> @_idDocumento and d.Id_Estatus=2)    

 begin    
	  -- declare @rfc varchar(13)    
	  -- declare @plazaieepo varchar(21)    
	  -- declare @folioExiste varchar(15)    
	  -- declare @descripcionMov varchar(50)    
  
	  select @folioExiste = d.folio from fup_documentos d 
	  inner join fup_documento_detalle dd on d.id_documento = dd.id_documento 
	  where d.id_emp = @_idEmpleado and dd.id_plaza = @_idPlaza and dd.fechaini = @_desde 
	  and dd.fechafin = @_hasta and dd.id_motivomovimiento = @_idMotivoMovimiento 
	  and d.id_documento <> @_idDocumento and d.Id_Estatus=2
	  
	  select @id_periodo_capturado = id.Id_Periodo from fup_documentos d 
	  inner join fup_documento_detalle dd on d.id_documento = dd.id_documento
	  inner join FUP_Informacion_Documentos id on id.Id_Documento=d.id_documento 
	  where d.id_emp = @_idEmpleado and dd.id_plaza = @_idPlaza and dd.fechaini = @_desde 
	  and dd.fechafin = @_hasta and dd.id_motivomovimiento = @_idMotivoMovimiento 
	  and d.id_documento <> @_idDocumento and d.Id_Estatus=2 
	  
	  select @periodo=cast(año as varchar) + right(''00'' + cast(calennomina.Numero as varchar),2)+
	  cast('' parcial '' as varchar) + cast(parcial as varchar)
	  from calennomina where id_periodo=@id_periodo_capturado   

	  select @plazaieepo = plazaieepo from plazaieepo where id_plaza = @_idPlaza    
	  select @rfc = rfc from empleados where id_emp = @_idEmpleado    
	  select @descripcionMov = t.clave + '' '' + m.clave from fup_tipomovimiento t 
	  inner join fup_motivomovimiento m on t.id_tipomovimiento = m.id_tipomovimiento
	  where m.id_motivomovimiento = @_idMotivoMovimiento    
 
	  set @msg = ''En el folio: '' + @folioExiste + '' ya existe el movimiento: '' + @descripcionMov + '' para el rfc: '' + @rfc + '' con la plaza: '' + @plazaieepo + '' y los mismos efectos , procesado en quincena '' + @periodo        
  end    

/*
-- REVISA QUE NO COINCIDA UN MOTIVO CON OTRO CON MISMO EMP,PLAZA Y EFECTOS    
if exists(select 1 from fup_documentos d inner join fup_documento_detalle dd on d.id_documento = dd.id_documento
where d.id_emp = @_idEmpleado and dd.id_plaza = @_idPlaza and dd.fechaini = @_desde  and 
dd.id_motivomovimiento <> @_idMotivoMovimiento and d.Id_Estatus=2)    

 begin    
  declare @idMotivoMovExiste int    
  declare @descripcionMovExiste varchar(50)          
  select @idMotivoMovExiste = dd.id_motivomovimiento from fup_documentos d 
  inner join fup_documento_detalle dd on d.id_documento = dd.id_documento 
  where d.id_emp = @_idEmpleado and dd.id_plaza = @_idPlaza and dd.fechaini = @_desde  and dd.id_motivomovimiento
  <> @_idMotivoMovimiento and d.Id_Estatus=2   

  select @folioExiste = d.folio from fup_documentos d inner join fup_documento_detalle dd 
  on d.id_documento = dd.id_documento where d.id_emp = @_idEmpleado and dd.id_plaza = @_idPlaza 
  and dd.fechaini = @_desde  and dd.id_motivomovimiento <> @_idMotivoMovimiento and d.Id_Estatus=2   

  select @rfc = rfc from empleados where id_emp = @_idEmpleado    
  select @descripcionMov = t.clave + '' '' + m.clave from fup_tipomovimiento t 
  inner join fup_motivomovimiento m on t.id_tipomovimiento = m.id_tipomovimiento 
  where m.id_motivomovimiento = @_idMotivoMovimiento    

  select @descripcionMovExiste = t.clave + '' '' + m.clave from fup_tipomovimiento t
  inner join fup_motivomovimiento m on t.id_tipomovimiento = m.id_tipomovimiento
  where m.id_motivomovimiento = @idMotivoMovExiste    

  select @plazaieepo = plazaieepo from plazaieepo where id_plaza = @_idPlaza    
  
  set @msg = ''En el folio: '' + @folioExiste + '' existe el movimiento: '' + @descripcionMovExiste + '' para el rfc: '' + @rfc + '' con la plaza: '' + @plazaieepo + '' y no el movimiento: '' + @descripcionMov + ''.''
 END
 */    
 if @msg<>''''    
   begin    
   if exists(select 1 from fup_bitacora b inner join fup_bitacora_detalle bd on b.id_bitacora = bd.id_bitacora where Id_Documento = @_idDocumento and b.codigo = ''CI'')    
       begin        
	        declare @totalLineas int      
            
			select @totalLineas = TotalLineas from fup_bitacora b inner join 
			fup_bitacora_detalle bd on b.id_bitacora = bd.id_bitacora 
			where Id_Documento = @_idDocumento and b.codigo = ''CI''    
            set @totalLineas = @totalLineas + 1    

            select @idBitacora = b.Id_Bitacora from fup_bitacora b 
			inner join fup_bitacora_detalle bd on b.id_bitacora = bd.id_bitacora 
			where Id_Documento = @_idDocumento and b.codigo = ''CI''    

            update fup_bitacora set totallineas = @totalLineas where id_bitacora = @idBitacora    
       end    
  else    
       begin    
            declare @nombreBitacora varchar(100)    
			select @idBitacora = max(id_bitacora) + 1 from fup_bitacora    
			set @nombreBitacora = ''Bitacora Captura Folio: '' + @folio    

            insert into fup_bitacora(id_bitacora,nombrearchivo,id_estatusbitacora,id_razonsocial,fechacreacion,id_usuario,totallineas,codigo,id_periodo) 
			select @idBitacora,@nombreBitacora,3,5,getdate(),@_idUsuario,1,''CI'',0    
       end        

     declare @idDetalleBitacora int           
     select @idDetalleBitacora = max(id_detalle) + 1 from fup_bitacora_detalle    
   
     insert into fup_bitacora_detalle(id_bitacora,id_detalle,id_documento,no_linea,motivo_rechazo,id_estatus,
	 fechacreacion,mensaje) 
	 select @idBitacora,@idDetalleBitacora,@_idDocumento,1,@msg,8,getdate(),0    
   end    
--  print @msg    
END'
GO

GO
PRINT N'Creating [dbo].[EMP13_M4YL1QN0MH1S]'
GO
IF OBJECT_ID(N'[dbo].[EMP13_M4YL1QN0MH1S]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROC [dbo].[EMP13_M4YL1QN0MH1S]
@qnaactual varchar(6),
@idperiodo int,
@nom varchar(3),
@idcia int
AS

set @idcia = case 
                when @nom = ''BAS'' then 2
                when @nom = ''UPN'' then 1
              end
set @idperiodo = (select id_periodo from CalenNomina where Año = cast(SUBSTRING(@qnaactual, 1, 4) as int) and Numero = cast(SUBSTRING(@qnaactual, 5, 2) as int) and Parcial = 0 and Id_cia = @idcia)
select a.id_emp,a.id_plaza, e.RFC,p.PlazaIEEPO, sum(percepciones) as Total_Percepciones, sum(deducciones) as Total_Deducciones, (sum(percepciones) - sum(deducciones)) as Total 
from (
  select id_emp,id_plaza,sum(pesos) as percepciones, 0 as deducciones 
  FROM nom_histpagos
  where Id_Periodo = @idperiodo and id_concepto in (select id_concepto from conceptos where tipo = 1 and descripcion like ''%'' + @nom + ''%'' )
  group by id_emp,id_plaza
  union all
  select id_emp,id_plaza,0 as percepciones, sum(pesos) as deducciones 
  FROM nom_histpagos 
  where Id_Periodo = @idperiodo and id_concepto in (select id_concepto from conceptos where tipo = 2 and descripcion like ''%'' + @nom + ''%'' )
  group by id_emp,id_plaza
) a 
inner join empleados e on e.Id_Emp = a.Id_Emp
inner join plazaieepo p on p.Id_plaza = a.id_plaza
group by a.id_emp,a.id_plaza,e.RFC,p.Id_plaza,p.PlazaIEEPO
having (sum(percepciones) - sum(deducciones)) >= 28000 order by a.id_Emp
'
GO

GO
PRINT N'Creating [dbo].[sp_comparativo_HvsNH]'
GO
IF OBJECT_ID(N'[dbo].[sp_comparativo_HvsNH]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[sp_comparativo_HvsNH]
@qnaactual varchar(6), @qnaanterior varchar(6), @nom varchar(3), @idperact int, @idperant int, @idcia int
WITH EXEC AS CALLER
AS
set @idcia = case 
                when @nom = ''BAS'' then 2
                when @nom = ''UPN'' then 1
              end

set @idperact = (select id_periodo from CalenNomina where Año = cast(SUBSTRING(@qnaactual, 1, 4) as int) and Numero = cast(SUBSTRING(@qnaactual, 5, 2) as int) and Parcial = 0 and Id_cia = @idcia)
set @idperant = (select id_periodo from CalenNomina where Año = cast(SUBSTRING(@qnaanterior, 1, 4) as int) and Numero = cast(SUBSTRING(@qnaanterior, 5, 2) as int) and Parcial = 0 and Id_cia = @idcia)

select * into dep..sam_periodoactual from(
select id_emp, id_plaza, sum(pesos) as pesos, 1 as tipo,Id_Periodo  from histpagos where Id_Periodo = @idperact and id_concepto in(select  id_concepto from conceptos where Tipo = 1)group by id_emp, id_plaza, id_periodo
union 
select id_emp, id_plaza, sum(pesos)as pesos, 2 as tipo, Id_Periodo from histpagos where Id_Periodo = @idperact and id_concepto in(select  id_concepto from conceptos where Tipo = 2)group by id_emp, id_plaza,id_periodo
)s

select * into dep..sam_periodoanterior from(
select id_emp, id_plaza, sum(pesos) as pesos, 1 as tipo,Id_Periodo  from nom_histpagos where Id_Periodo = @idperant and id_concepto in(select  id_concepto from conceptos where Tipo = 1)group by id_emp, id_plaza, id_periodo
union 
select id_emp, id_plaza, sum(pesos)as pesos, 2 as tipo, Id_Periodo from nom_histpagos where Id_Periodo = @idperant and id_concepto in(select  id_concepto from conceptos where Tipo = 2)group by id_emp, id_plaza,id_periodo
)m
 
select * into dep..sam_statusVS from
(
select e.rfc,b.id_emp as emp_ante, b.id_plaza as idplaza_ante,p.plazaieepo, b.Id_Periodo as periodo_ante, b.liquido 
as liquido_ante , a.liquido as liquido_act, a.id_emp as emp_act, a.id_plaza as idplaza_act, a.Id_Periodo as periodo_act, (b.liquido-a.liquido) as diferencias
from (
select h1.id_emp,h1.id_plaza,(h1.pesos-h2.pesos) as liquido,h1.id_periodo from dep..sam_periodoactual h1
join dep..sam_periodoactual h2 on h1.id_emp = h2.id_emp and h1.id_plaza = h2.id_plaza and h1.id_periodo = h2.id_periodo
and h1.tipo=1 and h2.tipo = 2
)a full join (
select h1.id_emp,h1.id_plaza,(h1.pesos-h2.pesos) as liquido,h1.id_periodo from dep..sam_periodoanterior h1
join dep..sam_periodoanterior h2 on h1.id_emp = h2.id_emp and h1.id_plaza = h2.id_plaza and h1.id_periodo = h2.id_periodo
and h1.tipo=1 and h2.tipo = 2
)b on a.id_emp=b.id_emp and a.id_plaza = b.id_plaza 
 join empleados e on b.id_emp = e.Id_Emp or a.id_emp =e.Id_Emp
 join PlazaIEEPO p on b.id_plaza = p.Id_plaza or a.id_plaza =p.id_plaza
 )x
 select * from dep..sam_periodoanterior
 select * from dep..sam_periodoactual
 select distinct s.*, p.id_nodo,v.UDP from dep..sam_statusVS s
 join(  select  max(fecha) as fecha,id_emp from PlazaEmpleados 
 where Id_Emp in(select id_emp from histpagos where Id_Periodo = @idperact and id_concepto <> 1789 ) group by id_emp
)m on s.emp_act = m.Id_Emp
join plazaempleados p on s.emp_act = p.Id_Emp and m.fecha = p.Fecha
join TablaLongitudProp_28 v on v.Id_Nodo = p.id_nodo order by v.UDP, s.rfc'
GO

GO
PRINT N'Creating [dbo].[spf_obtenfolio]'
GO
IF OBJECT_ID(N'[dbo].[spf_obtenfolio]', 'P') IS NULL
EXEC sp_executesql N'CREATE procedure [dbo].[spf_obtenfolio]  
(  
@folio as varchar(50))  
with recompile           
as                                           
if((select Folio from FUP_Documentos where Folio=@folio)='''' or (select Folio from FUP_Documentos where Folio=@folio) is null)
  begin 
       select ''El folio ingresado no existe, por favor verifique'' as folio
  end
else if((select Folio from FUP_Documentos where Folio=@folio)<>'''')
  begin 
     if((select Folio from FUP_Documentos where Folio=@folio and Id_Estatus=2)<>'''')
	 begin 
		 select '''' as folio
	 end
	 else if((select Folio from FUP_Documentos where Folio=@folio and Id_Estatus=3)<>'''')
	 begin 
	      select ''El folio ingresado se encuentra en estatus rechazado, no puede generarse, por favor verique.'' as folio
	 end
	 else if((select Folio from FUP_Documentos where Folio=@folio and Id_Estatus=4)<>'''')
	 begin 
	      select ''El folio ingresado se encuentra en estatus capturado o pendiente, no puede generarse, por favor verique.'' as folio
	 end
	 else if((select Folio from FUP_Documentos where Folio=@folio and Id_Estatus=6)<>'''')
	 begin 
	      select ''El folio ingresado se encuentra en estatus de diseño, no puede generarse, por favor verique.'' as folio
	 end
  end'
GO

GO
PRINT N'Creating [dbo].[spuHistPagos]'
GO
IF OBJECT_ID(N'[dbo].[spuHistPagos]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		wcahun
-- Create date: 10/10/2013
-- Description:	procedimiento para actualizar histpagos en base a histpagosdetalle
-- =============================================
CREATE PROCEDURE [dbo].[spuHistPagos]
@id_plaza int, @id_emp int, @id_periodo int, @id_recalculo int, @id_plazapago int
WITH EXEC AS CALLER
AS
BEGIN

declare @idPlaza int = @id_plaza
declare @idEmp int = @id_emp
declare @idPeriodo int = @id_periodo
declare @idRecalculo int =@id_recalculo 
declare @idPlazaPago int = @id_plazapago

BEGIN TRY
	delete from histpagos 
	where id_periodo = @idPeriodo and id_referencia=@idRecalculo and Id_ProcesoNomina=2
		and id_emp=@idEmp and id_plaza=@idPlaza

	insert into histpagos (id_emp,id_periodo,id_concepto,consecutivo,horas,pesos,fecha,pesosexcento, C_costo,id_plaza,id_referencia,id_periodopago,
			id_procesonomina,desde,hasta )
	Select id_emp,id_periodo,id_concepto,max(consecutivo) as Consecutivo,sum(horas) as horas,sum(pesos) as pesos, getdate() as fecha,
		sum(pesosexcento) as pesosexcento, C_costo,id_plaza,id_referencia,id_periodopago,id_procesonomina,desde,hasta 
	from histpagosdetalle 
	where  id_periodo = @idPeriodo and id_referencia=@idRecalculo and Id_ProcesoNomina=2
		and id_emp=@idEmp and id_plaza=@idPlaza
	group by id_emp,id_periodo,id_concepto,id_plaza,id_referencia,id_periodopago,id_procesonomina,desde,hasta, C_costo

	if @@rowcount<1 
		RAISERROR (''no se actualizó ningun valor'', 16,1);
	else
		select ''correcto'' as resultado
END TRY
BEGIN CATCH
    SELECT ERROR_MESSAGE() as resultado
    
END CATCH;


END'
GO

GO
PRINT N'Creating [dbo].[SP_SacaDesdeHasta]'
GO
IF OBJECT_ID(N'[dbo].[SP_SacaDesdeHasta]', 'P') IS NULL
EXEC sp_executesql N'

CREATE PROCEDURE [dbo].[SP_SacaDesdeHasta]    
(    
	@IdPlaza int = 0,  
	@Id_emp int = 0,  
	@Fecha DateTime = 0  
)    
AS    
  
DECLARE @VariableTabla TABLE (Id_emp int, Id_plaza Int,Fecha DateTime,hasta DateTime,Desde_Hasta varchar(16))  
Insert into @VariableTabla(id_emp,id_plaza,Fecha,Hasta,Desde_hasta)  
  
select pe.Id_emp,pe.Id_plaza,pe.Fecha,r.hasta, 
cast( year(pe.Fecha) as varchar) + ''''+ Right(''00'' + Cast(case when(day(pe.fecha)>15)then month(pe.Fecha)*2 else (month(pe.Fecha)*2)-1 end as Varchar(2)),2) + '' '' + 
Case When r.hasta = ''99991231'' Then ''999999'' Else cast( year(r.hasta) as varchar) + ''''+ Right(''00'' + Cast(case when(day(r.hasta)>15)then month(r.hasta)*2 else (month(r.hasta)*2)-1 end as Varchar(2)),2) End  as Desde_Hasta     
from PlazaEmpleados pe left join  
(  
	 select p.Id_plaza,p.Fecha,MIN(h.fecha )as hasta from PlazaEmpleados P, PlazaEmpleados H   
	 where p.id_plaza = h.Id_plaza and  
	 p.id_plaza = @IdPlaza and h.Id_plaza =@IdPlaza and p.fecha < h.fecha  
	 group by p.Id_plaza,p.Fecha  
) r   
on pe.id_plaza = r.Id_plaza and pe.fecha = r.fecha  
where pe.Id_plaza =@IdPlaza  order by pe.fecha  
  
select top 1 * from @VariableTabla where id_plaza=@IdPlaza and id_emp=@Id_emp and fecha=@Fecha order by fecha desc  


'
GO

GO
PRINT N'Creating [dbo].[spf_Desactiva_DR]'
GO
IF OBJECT_ID(N'[dbo].[spf_Desactiva_DR]', 'P') IS NULL
EXEC sp_executesql N'CREATE procedure [dbo].[spf_Desactiva_DR]                    
(                      
  @idEmpleado as int,                                           
  @id_documento  as int,                       
  @accion as bit                      
) as                      
Begin 
     declare @idEmpleado_loc as int=@idEmpleado  
     declare @id_documento_loc as int=@id_documento 
     declare @accion_loc as bit=@accion               
     declare @id_periodo as int                 
     declare @tipo_baja as varchar(max)           
     declare @tipo_alta as varchar(max)    
     --declare @idEmpleado as int=89402    
     --declare @id_documento  as int=1171034    
     --declare @accion as bit   =0    
     declare @Tmp as varchar(30)            
     declare @sql as varchar(max)= ''''     
     declare @fechafin as datetime    
     declare @Desde as varchar(6)      
     set @Tmp = ''ZBajaDR''            
     set @id_periodo =  (select id_periodo from fup_informacion_documentos where id_documento = @id_documento_loc)                      
               
     set  @tipo_baja =                      
     ( select distinct e.clave                         
     from fup_documentos a                      
     inner join fup_documento_Detalle b on a.id_documento = b.id_documento                      
     inner join fup_motivomovimiento c on b.id_motivomovimiento = c.id_motivomovimiento                      
     inner join fup_tipomovimiento e on c.id_tipomovimiento = e.id_tipomovimiento                      
     inner join fup_informacion_documentos d on a.id_documento = d.id_documento                      
     where d.id_periodo = @id_periodo and c.clave in (''36'',''37'')           
     and a.id_emp = CAST (@idEmpleado_loc as varchar(max)) and a.Id_Documento=CAST (@id_documento_loc as varchar(max)))                      
                      
     set  @tipo_alta =                      
     ( select distinct e.clave                         
     from fup_documentos a                      
     inner join fup_documento_Detalle b on a.id_documento = b.id_documento                      
     inner join fup_motivomovimiento c on b.id_motivomovimiento = c.id_motivomovimiento                      
     inner join fup_tipomovimiento e on c.id_tipomovimiento = e.id_tipomovimiento                      
     inner join fup_informacion_documentos d on a.id_documento = d.id_documento                      
     where d.id_periodo = @id_periodo and c.clave in (''95'',''10'') and e.Id_TipoMovimiento in (4,8)           
     and a.id_emp = CAST (@idEmpleado_loc as varchar(max)) and a.Id_Documento=CAST (@id_documento_loc as varchar(max)))               
                       
if @accion_loc = 0                       
 begin                      
  if (@tipo_baja=''05'' and @tipo_alta=''10'')           
              
                  
    --1.- Vencer el concepto al desde del movimiento (un dia antes del desde)             
     set @Desde= cast(( select distinct dbo.fechaToAnioQuincena(b.FechaIni)                         
     from fup_documentos a                      
     inner join fup_documento_Detalle b on a.id_documento = b.id_documento                      
     inner join fup_motivomovimiento c on b.id_motivomovimiento = c.id_motivomovimiento                      
     inner join fup_tipomovimiento e on c.id_tipomovimiento = e.id_tipomovimiento                      
     inner join fup_informacion_documentos d on a.id_documento = d.id_documento                      
     where d.id_periodo = @id_periodo and c.clave in (''36'',''37'')           
     and a.id_emp = CAST (@idEmpleado_loc as varchar(max)) and a.Id_Documento=CAST (@id_documento_loc as varchar(max)))as varchar(6) )    
     set @fechafin = dbo.anioQuincenaToFecha(dbo.addQNA(@Desde, -1, ''514m3l4p3l4''),1)     
         
         
         
     update TTEmpleado_Plaza_Conc set Tvigencia_id_vigencia=0,fechafin=@fechafin, Id_Documento =@id_documento_loc where Id_Emp=CAST (@idEmpleado_loc as varchar(max)) and NoConcepto=1557          
    
    --2.- Mandar el registro ya vencido a la tabla ttemplado_plaza_conc_bajas            
       insert into ttempleado_plaza_conc_bajas             
   (Id_TEmpleado_Plaza_Conc,consecutivo,descripcion,NoPlaza,NoConcepto,Monto            
                                         ,FechaFin,Tvigencia_id_vigencia,NoEmp_rel,usuario,Movimiento,Fecha,Id_Emp            
                                         ,TTipo_Captura_id_Tipo_Captura,id_periodopago,Id_Documento,Id_usuario_Movimiento            
                                         ,Fecha_Movimiento            
                                         )            
                                  SELECT Id_TEmpleado_Plaza_Conc,consecutivo,descripcion,NoPlaza,NoConcepto,Monto            
                                         ,FechaFin,Tvigencia_id_vigencia,NoEmp_rel,usuario,Movimiento,Fecha,Id_Emp            
                                         ,TTipo_Captura_id_Tipo_Captura,id_periodopago,Id_Documento,1 as Id_usuario_Movimiento            
                                         ,getdate() as Fecha_Movimiento                  
                                  FROM TTEmpleado_Plaza_Conc             
                                  where id_emp=@idEmpleado_loc and NoConcepto=1557          
              
    --3.- Eliminar el registro de ttempleado_plaza_conc            
    delete from TTEmpleado_Plaza_Conc where id_emp=@idEmpleado_loc and Noconcepto=1557      
             
  end       
                       
                       
else -- Reversa a movimiento            
          
    --1.- Regresar el registro a ttempleado_plaza_conc          
    begin          
         set @sql = ''insert into ttempleado_plaza_conc            
                                         (consecutivo,descripcion,NoPlaza,NoConcepto,Monto            
                                         ,FechaFin,Tvigencia_id_vigencia,NoEmp_rel,usuario,Movimiento,Fecha,Id_Emp            
                                         ,TTipo_Captura_id_Tipo_Captura,id_periodopago,Id_Documento            
                                         )            
                                  SELECT consecutivo,descripcion,NoPlaza,NoConcepto,Monto            
                                         ,FechaFin,Tvigencia_id_vigencia,NoEmp_rel,usuario,Movimiento,Fecha,Id_Emp            
                                         ,TTipo_Captura_id_Tipo_Captura,id_periodopago,Id_Documento            
                                  from ttempleado_plaza_conc_bajas''              
                                  +'' where id_emp= '' + cast(@idEmpleado_loc as varchar(10)) +'' and noconcepto =1557''          
      exec(@sql)            
             
    --2.- Actualizar la vigencia del concepto          
    update TTEmpleado_Plaza_Conc set Tvigencia_id_vigencia=1,FechaFin=''9999-12-31 23:59:00'' where Id_Emp=CAST (@idEmpleado_loc as varchar(max)) and NoConcepto=1557          
               
    --3.- Eliminar el registro de ttempleado_plaza_conc_bajas            
    delete from TTEmpleado_Plaza_Conc_bajas where id_emp=@idEmpleado_loc and Noconcepto=1557           
    end                      
           
end'
GO

GO
PRINT N'Creating [dbo].[spc_reportesAnaliticoFONE]'
GO
IF OBJECT_ID(N'[dbo].[spc_reportesAnaliticoFONE]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[spc_reportesAnaliticoFONE]
@tipo int
WITH EXEC AS CALLER
AS
if(@tipo = 0)  --regresa los tipo de reporte
  begin
    select id, descripcion from fup_tipos_reporte_fone order by orden
  end

  if(@tipo = 1) -- trasfiere a historia el analitico
  begin
    
    delete from Hist_Analitico_plazaFONE where Quincena = (select max(quincena) quicena from Analitico_plazaFONE)

    insert into Hist_Analitico_plazaFONE ( RAMO,	UNIDAD_RESPONSABLE,	CODIGO,	MODELO,	NIVEL,	CODIGO_PLAZA,	CCT,	ZONA_ECONOMICA,	CONTRATACION,	TIPO_PLAZA,	
    CANTIDAD,	TIPO_TRANSACCION,	ESTATUS,FECHA,	EFECTO_DESDE,	id_plaza,	id_emp,	id_nodo,	id_niveleducativo,	tipo,	motivo,	estatusplaza,	Quincena,	FechaCarga,	
    Modelo_SIA,ct_ieepo)

    select RAMO,	UNIDAD_RESPONSABLE,	CODIGO,	MODELO,	NIVEL,	CODIGO_PLAZA,	CCT,	ZONA_ECONOMICA,	CONTRATACION,	TIPO_PLAZA,	CANTIDAD,	TIPO_TRANSACCION,	ESTATUS,
    FECHA,	EFECTO_DESDE,	id_plaza,	id_emp,	id_nodo,	id_niveleducativo,	tipo,	motivo,	estatusplaza,	Quincena,	FechaCarga,	Modelo_SIA,ct_ieepo
    from Analitico_plazaFONE
    
    delete from Analitico_plazaFONE
  
  end

  if(@tipo = 2)  -- agrega campos necearios
  begin
    
    update Analitico_plazaFONE set id_plaza = 0, id_emp = 0,id_nodo = 0,id_niveleducativo = 0,tipo = 0,motivo = 0,estatusplaza = '''', Quincena = '''',FechaCarga = getdate(),  Modelo_SIA = 0,ct_ieepo = ''''
    
    update Analitico_plazaFONE set Quincena = (select dbo.fechaToAnioQuincena(max(fechaini)) fechaini from CalenNomina where Actualizado = 0 and procesado = 1 and parcial= 0)
    
    update a set a.id_plaza = b.id_plaza, a.id_niveleducativo = b.id_niveleducativo
    from Analitico_plazaFONE a
    inner join view_plaza_nivel b on replace(a.codigo_plaza,'' '','''') = replace(b.plazaieepo,'' '','''')
    
    update a set a.id_plaza = b.id_plaza, a.id_niveleducativo = b.id_niveleducativo
    from Analitico_plazaFONE a 
    inner join view_plaza_nivel b on ''076003''+ substring(a.codigo_plaza,6,len(a.codigo_plaza)) = replace(b.plazaieepo,'' '','''')
    where len(substring(a.codigo_plaza,0,charindex(''E'',a.codigo_plaza))) < 6
    and a.codigo_plaza like ''%E%'' and a.codigo_plaza like ''%07603%''
    
    update Analitico_plazaFONE set id_niveleducativo = dbo.F_NivelEducativoIEEPO(codigo_plaza) where id_plaza = 0 
    
    update a set a.id_plaza = pi.id_plaza
    from Analitico_plazaFONE a
    inner join PlazaIEEPO pi on replace(pi.PlazaIEEPO,'' '','''') = a.codigo_plaza
    where a.id_plaza = 0 and pi.id_plaza not in (select Valor_IdCampo from hplazas where Id_TipoMovPlazas = 4)
    
    update a set a.modelo_sia = b.TModelo_SE_id_Modelo_SE
    from Analitico_plazaFONE a inner join (
      select a.*, t.categoria, t.id_Tabulador_SE_Cat_Puesto, t.TModelo_SE_id_Modelo_SE from HTabulador_SE_Cat_Puesto a inner join (
      select id_plaza, max(fecha) fecha from HTabulador_SE_Cat_Puesto where fecha <= (select max(fechaini) fechaini from CalenNomina where Actualizado = 0 and procesado = 1 and parcial= 0) group by id_plaza
      ) b on a.id_plaza = b.id_plaza and a.fecha = b.fecha
      inner join TTabulador_SE_Cat_Puesto t on t.id_Tabulador_SE_Cat_Puesto = a.id_rel
    ) b on b.id_plaza = a.id_plaza
    
    update a set a.modelo_sia = b.TModelo_SE_id_Modelo_SE
    from Analitico_plazaFONE a 
    inner join TTabulador_SE_Cat_Puesto b on replace(b.categoria,'' '','''') = replace(a.CODIGO, '' '','''')
    where a.modelo_sia = 0
    
    update a set a.id_emp = b.id_emp, a.id_nodo = b.id_nodo
    FROM Analitico_plazaFONE a
    inner join (
      select a.id_plaza, a.id_emp, a.id_nodo from plazaempleados a inner join (
      select id_plaza, max(fecha) fecha from plazaempleados where fecha <= (select max(fechaini) fechaini from CalenNomina where Actualizado = 0 and procesado = 1 and parcial= 0) group by id_plaza
      ) b on b.Id_plaza = a.Id_plaza and b.fecha = a.fecha
    ) b on b.id_plaza = a.id_plaza
    
    update f set f.tipo = t.tipo, f.motivo = m.motivo, f.estatusplaza = isnull(t.descri,'''')+'' - ''+ isnull(m.destipoplaza,'''')
    from Analitico_plazaFONE f
    left join (
      select a.id_plaza, a.Valor_IdCampo tipo, s.descri from hplazas a inner join (
      select id_plaza, max(fecha) fecha from hplazas where id_tipomovplazas = 2 and fecha <= (select max(fechaini) fechaini from CalenNomina where Actualizado = 0 and procesado = 1 and parcial= 0) group by id_plaza
      ) b on b.id_plaza = a.id_plaza and b.fecha = a.fecha and a.id_tipomovplazas = 2
      left join TStatusPlaza s on s.Id_StatusPlaza = a.Valor_IdCampo
    ) t on t.id_plaza = f.id_plaza
    left join (
    select a.id_plaza, a.Valor_IdCampo motivo, t.DesTipoPlaza from hplazas a inner join (
    select id_plaza, max(fecha) fecha from hplazas where id_tipomovplazas = 1 and fecha <= (select max(fechaini) fechaini from CalenNomina where Actualizado = 0 and procesado = 1 and parcial= 0) group by id_plaza
    ) b on b.id_plaza = a.id_plaza and b.fecha = a.fecha and a.id_tipomovplazas = 1
    left join TTipoPlaza t on t.Id_TipoPlaza = a.Valor_IdCampo
    ) m on m.id_plaza = f.id_plaza
    
    update a set a.ct_ieepo = v.clave
    from Analitico_plazaFONE a
    inner join VistaTablaLongitud v on a.id_nodo = v.Id_Nodo


  end
  
  if(@tipo = 3)  -- Plaza que no se les asigna nivel educativo
  begin
    select RAMO,	UNIDAD_RESPONSABLE,	CODIGO,	MODELO,	NIVEL,	CODIGO_PLAZA,	CCT,	ZONA_ECONOMICA,	CONTRATACION,	TIPO_PLAZA,	CANTIDAD,	TIPO_TRANSACCION,	ESTATUS,	
    FECHA,	EFECTO_DESDE, ''NO ES POSIBLE ASIGNAR EL NIVEL EDUCATIVO, CODIGO_PLAZA NO VALIDO'' OBSERVACION
    from Analitico_plazaFONE 
    where id_plaza = 0 and id_niveleducativo = -1 and estatus <> ''C''
  end
  
  if(@tipo = 4) -- Totales por nivel educativo segun datos de fone
  begin
    select isnull(b.Clave+'' - ''+ b.Descripcion,''NO SE PUEDE ASIGNAR NIVEL EDUCATIVO POR CODIGO DE PLAZA INCORRETO'') AS NIVEL_EDUCATIVO,count(codigo_plaza) TOTAL_PLAZA_FONE, SUM(case when a.tipo_plaza = ''p'' then cantidad else 0 end) PLAZAS_JORNADA_FONE,SUM(case when a.tipo_plaza = ''H'' then 1 else 0 end) PLAZAS_HORAS_FONE,
    SUM(case when a.tipo_plaza = ''H'' then cantidad else 0 end) TOTAL_HORAS_FONE, sum(case when estatus = ''V'' then 1 else 0 end) PLAZAS_VACANTES_FONE,
    sum(case when estatus = ''O'' then 1 else 0 end) PLAZAS_OCUPADAS_FONE
    from Analitico_plazaFONE a
    left join TNivelEducativo b on b.id_NivelEducativo = a.id_niveleducativo
    where a.estatus <> ''C''
    group by b.Clave, b.Descripcion
    order by b.Clave
  end
  
  if(@tipo = 5) -- Totales por nivel educativo y categoria segun datos de fone
  begin
    select isnull(b.Clave+'' - ''+ b.Descripcion,''NO SE PUEDE ASIGNAR NIVEL EDUCATIVO POR CODIGO DE PLAZA INCORRETO'') NIVEL_EDUCATIVO, a.codigo CATEGORIA, count(codigo_plaza) TOTAL_PLAZA, 
    SUM(case when a.tipo_plaza = ''p'' then cantidad else 0 end) PLAZAS_JORNADA,
    SUM(case when a.tipo_plaza = ''H'' then 1 else 0 end) PLAZAS_HORAS,
    SUM(case when a.tipo_plaza = ''H'' then cantidad else 0 end) TOTAL_HORAS, sum(case when estatus = ''V'' then 1 else 0 end) TOTAL_PLAZAS_VACANTES,
    sum(case when estatus = ''O'' then 1 else 0 end) TOTAL_PLAZAS_OCUPADAS
    from Analitico_plazaFONE a
    left join TNivelEducativo b on b.id_NivelEducativo = a.id_niveleducativo
    where a.estatus <> ''C''
    group by b.Clave, b.Descripcion, a.codigo
    order by b.clave, a.codigo
  end

  if(@tipo = 6)  -- acumulado general de FONE - IEEPO
  begin
    select b.Clave+'' - ''+ b.Descripcion NIVEL_EDUCATIVO, count(codigo_plaza) TOTAL_PLAZA, SUM(case when a.tipo_plaza = ''p'' then cantidad else 0 end) PLAZAS_JORNADA,
    SUM(case when a.tipo_plaza = ''H'' then 1 else 0 end) PLAZAS_HORAS,
    SUM(case when a.tipo_plaza = ''H'' then cantidad else 0 end) TOTAL_HORAS, 
    sum(case when estatus = ''V'' then 1 else 0 end) PLAZAS_VACANTES_FONE,
    sum(case when estatus = ''O'' then 1 else 0 end) PLAZAS_OCUPADAS_FONE,
    sum(case when a.id_emp = 0 then 1 else 0 end) PLAZAS_VACANTES_IEEPO,
    sum(case when a.id_emp <> 0 then 1 else 0 end) PLAZAS_OCUPADAS_IEEPO,
    sum(case when isnull(tc.conciliado,0) = 1 then 1 else 0 end ) CT_IEEPO_CONCILIADO,
    sum(case when isnull(tc.conciliado,0) = 0 then 1 else 0 end ) CT_IEEPO_NO_CONCILIADO
    from Analitico_plazaFONE a
    inner join VistaTablaLongitud v on v.Id_Nodo = a.id_nodo
    left join TablaLongitudProp_28 tc on tc.id_nodo = a.id_nodo
    inner join TNivelEducativo b on b.id_NivelEducativo = a.id_niveleducativo
    where a.estatus <> ''C''
    group by b.Clave, b.Descripcion
    order by b.clave
  end

  if(@tipo = 7)  -- Acumulado por nivel educativo FONE-IEEPO con el mismo CT
  begin
    select b.Clave+'' - ''+ b.Descripcion NIVEL_EDUCATIVO, count(codigo_plaza) TOTAL_PLAZA, SUM(case when a.tipo_plaza = ''p'' then cantidad else 0 end) PLAZAS_JORNADA,
    SUM(case when a.tipo_plaza = ''H'' then 1 else 0 end) PLAZAS_HORAS, 
    SUM(case when a.tipo_plaza = ''H'' then cantidad else 0 end) TOTAL_HORAS, 
    sum(case when estatus = ''V'' then 1 else 0 end) PLAZAS_VACANTES_FONE,
    sum(case when estatus = ''O'' then 1 else 0 end) PLAZAS_OCUPADAS_FONE,
    sum(case when a.id_emp = 0 then 1 else 0 end) PLAZAS_VACANTES_IEEPO,
    sum(case when a.id_emp <> 0 then 1 else 0 end) PLAZAS_OCUPADAS_IEEPO,
    sum(case when isnull(tc.conciliado,0) = 1 then 1 else 0 end ) CT_IEEPO_CONCILIADO,
    sum(case when isnull(tc.conciliado,0) = 0 then 1 else 0 end ) CT_IEEPO_NO_CONCILIADO
    from Analitico_plazaFONE a
    inner join VistaTablaLongitud v on v.Id_Nodo = a.id_nodo
    left join TablaLongitudProp_28 tc on tc.id_nodo = a.id_nodo
    inner join TNivelEducativo b on b.id_NivelEducativo = a.id_niveleducativo
    where a.cct = isnull(v.clave,'''') and a.estatus <> ''C''
    group by b.Clave, b.Descripcion
    order by b.clave
  end
  
  if(@tipo = 8) -- Acumulado por nivel educativo - categoria con el mismo ct fone-ieepo
  begin
    select b.Clave+'' - ''+ b.Descripcion NIVEL_EDUCATIVO,a.CODIGO CATEGORIA, count(codigo_plaza) TOTAL_PLAZA, SUM(case when a.tipo_plaza = ''p'' then cantidad else 0 end) PLAZAS_JORNADA,
    SUM(case when a.tipo_plaza = ''H'' then 1 else 0 end) PLAZAS_HORAS, 
    SUM(case when a.tipo_plaza = ''H'' then cantidad else 0 end) TOTAL_HORAS, 
    sum(case when estatus = ''V'' then 1 else 0 end) PLAZAS_VACANTES_FONE,
    sum(case when estatus = ''O'' then 1 else 0 end) PLAZAS_OCUPADAS_FONE,
    sum(case when a.id_emp = 0 then 1 else 0 end) PLAZAS_VACANTES_IEEPO,
    sum(case when a.id_emp <> 0 then 1 else 0 end) PLAZAS_OCUPADAS_IEEPO,
    sum(case when isnull(tc.conciliado,0) = 1 then 1 else 0 end ) CT_IEEPO_CONCILIADO,
    sum(case when isnull(tc.conciliado,0) = 0 then 1 else 0 end ) CT_IEEPO_NO_CONCILIADO
    from Analitico_plazaFONE a
    inner join VistaTablaLongitud v on v.Id_Nodo = a.id_nodo
    left join TablaLongitudProp_28 tc on tc.id_nodo = a.id_nodo
    inner join TNivelEducativo b on b.id_NivelEducativo = a.id_niveleducativo
    where a.cct = isnull(v.clave,'''') and a.estatus <> ''C''
    group by b.Clave, b.Descripcion,a.CODIGO
    order by b.clave,a.CODIGO

  end
  
  if(@tipo = 9)  -- detalle de plazas en el mismo ct fone -  ieepo
  begin
    select b.Clave+'' - ''+ b.Descripcion NIVEL_EDUCATIVO, a.codigo CATEGORIA, codigo_plaza PLAZA, TIPO_PLAZA, CANTIDAD, ESTATUS ESTATUS_FONE,
    case when id_emp = 0 then ''VACANTE'' else ''OCUPADA'' end ESTATUS_IEEPO, CAST(tipo AS VARCHAR) +'' - ''+ CAST(motivo AS VARCHAR) TIPO_ESTATUS_IEEPO, CCT CT_FONE, isnull(V.CLAVE,'''') CT_IEEPO,
    case when isnull(tc.conciliado,0) = 1 then ''SI'' else ''NO'' end CT_IEEPO_CONCILIADO
    from Analitico_plazaFONE a
    inner join VistaTablaLongitud v on v.Id_Nodo = a.id_nodo
    left join TablaLongitudProp_28 tc on tc.id_nodo = a.id_nodo
    inner join TNivelEducativo b on b.id_NivelEducativo = a.id_niveleducativo
    where a.cct = isnull(v.clave,'''') and a.estatus <> ''C''
    order by b.clave, a.codigo
  end
  
  if(@tipo = 10) -- Acumulado por nivel educativo con ct diferente fone-ieepo
  begin
    select b.Clave+'' - ''+ b.Descripcion NIVEL_EDUCATIVO, count(codigo_plaza) TOTAL_PLAZA, SUM(case when a.tipo_plaza = ''p'' then cantidad else 0 end) PLAZAS_JORNADA,
    SUM(case when a.tipo_plaza = ''H'' then 1 else 0 end) PLAZAS_HORAS, 
    SUM(case when a.tipo_plaza = ''H'' then cantidad else 0 end) TOTAL_HORAS, 
    sum(case when estatus = ''V'' then 1 else 0 end) PLAZAS_VACANTES_FONE,
    sum(case when estatus = ''O'' then 1 else 0 end) PLAZAS_OCUPADAS_FONE,
    sum(case when a.id_emp = 0 then 1 else 0 end) PLAZAS_VACANTES_IEEPO,
    sum(case when a.id_emp <> 0 then 1 else 0 end) PLAZAS_OCUPADAS_IEEPO,
    sum(case when isnull(tc.conciliado,0) = 1 then 1 else 0 end ) CT_IEEPO_CONCILIADO,
    sum(case when isnull(tc.conciliado,0) = 0 then 1 else 0 end ) CT_IEEPO_NO_CONCILIADO
    from Analitico_plazaFONE a
    inner join VistaTablaLongitud v on v.Id_Nodo = a.id_nodo
    left join TablaLongitudProp_28 tc on tc.id_nodo = a.id_nodo
    inner join TNivelEducativo b on b.id_NivelEducativo = a.id_niveleducativo
    where a.cct <> isnull(v.clave,'''') and a.estatus <> ''C''
    group by b.Clave, b.Descripcion
    order by b.clave
  end

  if(@tipo = 11) -- Acumulado por nivel educativo-categoria con ct diferente fone-ieepo
  begin
    select b.Clave+'' - ''+ b.Descripcion NIVEL_EDUCATIVO,a.CODIGO CATEGORIA, count(codigo_plaza) TOTAL_PLAZA, SUM(case when a.tipo_plaza = ''p'' then cantidad else 0 end) PLAZAS_JORNADA,
    SUM(case when a.tipo_plaza = ''H'' then 1 else 0 end) PLAZAS_HORAS, 
    SUM(case when a.tipo_plaza = ''H'' then cantidad else 0 end) TOTAL_HORAS, 
    sum(case when estatus = ''V'' then 1 else 0 end) PLAZAS_VACANTES_FONE,
    sum(case when estatus = ''O'' then 1 else 0 end) PLAZAS_OCUPADAS_FONE,
    sum(case when a.id_emp = 0 then 1 else 0 end) PLAZAS_VACANTES_IEEPO,
    sum(case when a.id_emp <> 0 then 1 else 0 end) PLAZAS_OCUPADAS_IEEPO,
    sum(case when isnull(tc.conciliado,0) = 1 then 1 else 0 end ) CT_IEEPO_CONCILIADO,
    sum(case when isnull(tc.conciliado,0) = 0 then 1 else 0 end ) CT_IEEPO_NO_CONCILIADO
    from Analitico_plazaFONE a
    inner join VistaTablaLongitud v on v.Id_Nodo = a.id_nodo
    left join TablaLongitudProp_28 tc on tc.id_nodo = a.id_nodo
    inner join TNivelEducativo b on b.id_NivelEducativo = a.id_niveleducativo
    where a.cct <> isnull(v.clave,'''') and a.estatus <> ''C''
    group by b.Clave, b.Descripcion,a.CODIGO
    order by b.clave,a.CODIGO 

  end
  
  if(@tipo = 12) -- detalle de plazas con ct diferente fone-ieepo
  begin
    select b.Clave+'' - ''+ b.Descripcion NIVEL_EDUCATIVO, a.codigo CATEGORIA, codigo_plaza PLAZA, TIPO_PLAZA, CANTIDAD, ESTATUS ESTATUS_FONE,
    case when id_emp = 0 then ''VACANTE'' else ''OCUPADA'' end ESTATUS_IEEPO, CAST(tipo AS VARCHAR) +'' - ''+ CAST(motivo AS VARCHAR) TIPO_ESTATUS_IEEPO, CCT CT_FONE, V.CLAVE CT_IEEPO,
    case when isnull(tc.conciliado,0) = 1 then ''SI'' else ''NO'' end CT_IEEPO_CONCILIADO
    from Analitico_plazaFONE a
    inner join VistaTablaLongitud v on v.Id_Nodo = a.id_nodo
    left join TablaLongitudProp_28 tc on tc.id_nodo = a.id_nodo
    inner join TNivelEducativo b on b.id_NivelEducativo = a.id_niveleducativo
    where a.cct <> isnull(v.clave,'''') and a.estatus <> ''C'' and a.id_plaza > 0
    order by b.clave  
  end
  
  if(@tipo = 13) -- detalle plazas con ct no conciliado
  begin
    select b.Clave+'' - ''+ b.Descripcion NIVEL_EDUCATIVO, a.codigo CATEGORIA, codigo_plaza PLAZA, TIPO_PLAZA, CANTIDAD, ESTATUS ESTATUS_FONE,
    case when id_emp = 0 then ''VACANTE'' else ''OCUPADA'' end ESTATUS_IEEPO, CAST(tipo AS VARCHAR) +'' - ''+ CAST(motivo AS VARCHAR) TIPO_ESTATUS_IEEPO, CCT CT_FONE, V.CLAVE CT_IEEPO,
    case when isnull(tc.conciliado,0) = 1 then ''SI'' else ''NO'' end CT_IEEPO_CONCILIADO
    from Analitico_plazaFONE a
    inner join VistaTablaLongitud v on v.Id_Nodo = a.id_nodo
    left join TablaLongitudProp_28 tc on tc.id_nodo = a.id_nodo
    inner join TNivelEducativo b on b.id_NivelEducativo = a.id_niveleducativo
    where a.estatus <> ''C'' and isnull(tc.conciliado,0) = 0
    order by b.clave
  end
  
  if(@tipo = 14) -- Plazas no existen en ieepo
  begin
    select RAMO,	UNIDAD_RESPONSABLE,	CODIGO,	MODELO,	NIVEL,	CODIGO_PLAZA,	CCT,	ZONA_ECONOMICA,	CONTRATACION,	TIPO_PLAZA,	CANTIDAD,	TIPO_TRANSACCION,	ESTATUS,	
    FECHA,	EFECTO_DESDE, ''LA PLAZA NO EXISTE EN IEEPO'' OBSERVACION
    from Analitico_plazaFONE 
    where id_plaza = 0 and estatus <> ''C''  
  end
  
  if(@tipo = 15) -- plazas activas en sia no conciliadas en fone
  begin
    select b.MODELO_EDUCATIVO,b.PLAZA,b.TIPO_PLAZA,b.CANTIDAD,b.ESTATUS_IEEPO,b.CT_IEEPO,b.CT_IEEPO_CONCILIADO from Analitico_plazaFONE a
    full join (
      select 
      tn.Clave+'' - ''+tn.Descripcion MODELO_EDUCATIVO, replace(case when pi.plazaieepo like ''14%'' or pi.plazaieepo like ''15%'' then ''07''+substring(pi.plazaieepo,3, len(pi.plazaieepo)) else pi.plazaieepo end,'' '','''') PLAZA,
      case when pi.horas = ''000'' then ''P'' else ''H'' end TIPO_PLAZA, case when pi.horas = ''000'' then 1 else pi.horas/10 end CANTIDAD, ''OCUPADA'' ESTATUS_IEEPO, V.CLAVE CT_IEEPO,
      case when isnull(tc.conciliado,0) = 1 then ''SI'' else ''NO'' end CT_IEEPO_CONCILIADO
      from histpagos h 
      inner join empleados e on e.id_emp = h.Id_Emp
      inner join PlazaIEEPO pi on pi.Id_plaza = h.id_plaza
      inner join (
        select a.id_plaza, a.id_emp, a.id_nodo from plazaempleados a inner join (
        select id_plaza, max(fecha) fecha from plazaempleados where fecha <= (select max(fechaini) fechaini from CalenNomina where Actualizado = 0 and procesado = 1 and parcial= 0) group by id_plaza
        ) b on b.Id_plaza = a.Id_plaza and b.fecha = a.fecha
      ) pe on pe.id_plaza = h.id_plaza
      inner join VistaTablaLongitud v on v.id_nodo = pe.id_nodo
      left join TablaLongitudProp_28 tc on tc.id_nodo = v.id_nodo
      inner join view_plaza_nivel w on w.id_plaza = h.id_plaza
      inner join TNivelEducativo tn on tn.id_NivelEducativo = w.id_niveleducativo
      where h.id_periodo in (select id_periodo from CalenNomina where Actualizado = 0 and procesado = 1 and parcial= 0)
      group by tn.Clave,tn.Descripcion, PI.PLAZAIEEPO,pi.horas, V.CLAVE,tc.conciliado
    ) b on a.codigo_plaza = b.plaza
    where a.estatus <> ''C'' and a.codigo_plaza is null  
  end
  
  if(@tipo = 16)   -- cifras de control
  begin
    select 1 ID, ''TOTAL_PLAZAS_FONE'' CONCEPTO,'''' ESTATUS,'''' COMPARACION_CT,'''' FONE_IEEPO, cast(count(*) as varchar) TOTAL from Analitico_plazaFONE
    UNION
    select 2 ID,''ESTATUS FONE: ''+ ESTATUS CONCEPTOO, cast(count(*) as varchar) ESTATUS,'''' COMPARACION_CT,'''' FONE_IEEPO,'''' TOTAL from Analitico_plazaFONE group by ESTATUS 
    UNION
    select 3 ID, ''PLAZAS FONE EN IEEPO'' CONCEPTO,'''' ESTATUS,'''' COMPARACION_CT, cast(count(*) as varchar) FONE_IEEPO,'''' TOTAL from Analitico_plazaFONE where id_plaza > 0
    UNION
    select 4 ID, ''PLAZAS EN EL MISMO CT FONE - IEEPO'' CONCEPTO,'''' ESTATUS,cast(count(*) as varchar) COMPARACION_CT,'''' FONE_IEEPO,'''' TOTAL  from Analitico_plazaFONE a where a.id_plaza > 0 and a.CCT = a.ct_ieepo
    UNION
    select 5 ID,''ESTATUS IEEPO: ''+ocupado CONCEPTO, cast(count(*) as varchar) ESTATUS, '''' COMPARACION_CT,'''' FONE_IEEPO,'''' TOTAL from (
    select *, case when id_emp = 0 then ''VACANTE'' else ''OCUPADA'' end ocupado from Analitico_plazaFONE where id_plaza > 0 and cct = ct_ieepo
    ) a group by ocupado
    UNION
    select 6 ID, ''PLAZAS EN CT DIFERENTE FONE - IEEPO'' CONCEPTO,'''' ESTATUS,cast(count(*) as varchar) COMPARACION_CT,'''' FONE_IEEPO,'''' TOTAL  from Analitico_plazaFONE a where a.id_plaza > 0 and a.CCT <> a.ct_ieepo
    UNION
    select 7 ID,''ESTATUS IEEPO: ''+ocupado CONCEPTO,cast(count(*) as varchar) ESTATUS, '''' COMPARACION_CT,'''' FONE_IEEPO,'''' TOTAL from (
    select *, case when id_emp = 0 then ''VACANTE'' else ''OCUPADA'' end ocupado from Analitico_plazaFONE where id_plaza > 0 and cct <> ct_ieepo
    ) a group by ocupado
    UNION
    select 8 ID, ''PLAZAS FONE NO EN IEEPO'' CONCEPTO,'''' ESTATUS,'''' COMPARACION_CT,cast(count(*) as varchar) FONE_IEEPO,'''' TOTAL from Analitico_plazaFONE where id_plaza = 0
  end'
GO

GO
PRINT N'Creating [dbo].[Crea_Archivo_Cambio_CT_MSP]'
GO
IF OBJECT_ID(N'[dbo].[Crea_Archivo_Cambio_CT_MSP]', 'P') IS NULL
EXEC sp_executesql N'
CREATE PROCEDURE [dbo].[Crea_Archivo_Cambio_CT_MSP]

--@opcion int,

@fechaCambio varchar(10)

WITH EXEC AS CALLER

AS
BEGIN
SET NOCOUNT ON;

--exec [Crea_Archivo_Cambio_CT_MSP] ''31/07/2019''

				-- pasar al historico
				EXEC spc_reportesAnaliticoFONE 1
				
				--deberá estar vacia esta tabla 
				--select * from Analitico_plazaFONE where ct_ieepo!=cct
				--select * from VistaTablaLongitud where id_nodo =21818
				--select * into Analitico_plazaFONE from ut..Analitico_plazaFONE
				-- insertar el nuevo analitico, el nuevo analitico estará cargado con el nombre AnaliticoPlazas_Actual

				INSERT INTO Analitico_plazaFONE (RAMO, UNIDAD_RESPONSABLE, CODIGO, MODELO, NIVEL, CODIGO_PLAZA, CCT, ZONA_ECONOMICA, CONTRATACION,
				TIPO_PLAZA, CANTIDAD, TIPO_TRANSACCION, ESTATUS, FECHA, EFECTO_DESDE, id_plaza, id_emp, id_nodo, id_niveleducativo, tipo, motivo, estatusplaza, 
				Quincena, FechaCarga, Modelo_SIA, ct_ieepo)
				SELECT RAMO, UNIDAD_RESPONSABLE, CODIGO, MODELO, NIVEL, CODIGO_PLAZA, CCT, ZONA_ECONOMICA, CONTRATACION,
				TIPO_PLAZA, CANTIDAD, TIPO_TRANSACCION, ESTATUS, FECHA, EFECTO_DESDE,0 id_plaza,0 id_emp,0 id_nodo,0 id_niveleducativo,'''' tipo,'''' motivo,'''' estatusplaza, 
				'''' Quincena,getdate() FechaCarga,0 Modelo_SIA,'''' ct_ieepo 
				FROM AnaliticoPlazas_Actual -- select * into AnaliticoPlazas_Actual from AnaliticoPlazas17012019

				-- llenar los datos

				EXEC spc_reportesAnaliticoFONE 2
				
				--- crear tabla CambiosCTQuintaNoBorrar
				--declare @fechaCambio varchar(9);
				--set @fechaCambio =''31/07/2019''
				drop table CambiosCTQuintaNoBorrar;

				SELECT a.*,''00/00/0000'' FechaCambio,0 Actualizada,0 Archivo, b.id_rel ZonaEco_Ieepo, CASE WHEN a.codigo_plaza like ''%E%'' THEN 1 ELSE 0 END  docente, 
				CASE WHEN a.id_emp > 0 THEN 1 ELSE 0 END activo, c.conciliado ctValido, ''Doc'' DirecSuper, cast('''' AS VARCHAR(200)) Clasificacion, 0 folio   
				,0 ctConciliado 
				INTO CambiosCTQuintaNoBorrar
				FROM Analitico_plazaFONE a 
				INNER JOIN RCT_Tabulador_SE_Zona b on b.id_nodo = a.id_nodo
				INNER JOIN TablaLongitudProp_28 c on c.id_nodo = a.id_nodo
				WHERE a.ESTATUS <> ''C'' and a.cct <> a.ct_ieepo and a.id_emp > 0


				--SELECT a.*, b.id_rel ZonaEco_Ieepo, c.conciliado 
				--FROM Analitico_plazaFONE a
				--INNER JOIN RCT_Tabulador_SE_Zona b on b.id_nodo = a.id_nodo
				--INNER JOIN TablaLongitudProp_28 c on c.id_nodo = a.id_nodo
				--WHERE a.codigo_plaza like ''%E%'' AND cct <> ct_ieepo AND a.estatus <> ''C''
				--AND a.zona_economica = b.id_rel AND a.id_emp > 0

				--select * from CambiosCTQuintaNoBorrar

				--select * from CambiosCTQuintaNoBorrar where ltrim(rtrim(CODIGO)) in (''E0101'',	''E0121'',	''E0125'',	''E0213'',	''E0221'',	''E0223'',	''E0241'',	''E0345'',	''E0541'',	''E0553'',	''E0555'',	''E0627'',	''E0629'',	''E0631'',	''E0633'',	''E0825'',	''E0827'',	''E0843'',	''E0925'',	''E0927'',	''E0929'',	''E0931'',	''E0933'',	''E0941'',	''E0943'',	''E0945'',	''E1025'',	''E1151'',	''E1303'',	''E1305'',	''E1401'',	''E1403'',	''E1405'',	''E1411'',	''E1421'',	''E1445'',	''E1481'',	''E1483'',	''E1501'',	''E1503'',	''E1525'',	''E1541'',	''E2709'',	''E2711'',	''E2725'',	''E0103'',	''E0105'',	''E0107'',	''E0113'',	''E0119'',	''E0201'',	''E0203'',	''E0205'',	''E0209'',	''E0219'',	''E0301'',	''E0321'',	''E0325'',	''E0327'',	''E0341'',	''E0351'',	''E0401'',	''E0421'',	''E0441'',	''E0451'',	''E0621'',	''E0635'',	''E0701'',	''E1447'',	''E1482'',	''E1484'',	''E0247'',	''E0249'')
				update CambiosCTQuintaNoBorrar set direcSuper = 1 where ltrim(rtrim(CODIGO)) in (''E0101'',	''E0121'',	''E0125'',	''E0213'',	''E0221'',	''E0223'',	''E0241'',	''E0345'',	''E0541'',	''E0553'',	''E0555'',	''E0627'',	''E0629'',	''E0631'',	''E0633'',	''E0825'',	''E0827'',	''E0843'',	''E0925'',	''E0927'',	''E0929'',	''E0931'',	''E0933'',	''E0941'',	''E0943'',	''E0945'',	''E1025'',	''E1151'',	''E1303'',	''E1305'',	''E1401'',	''E1403'',	''E1405'',	''E1411'',	''E1421'',	''E1445'',	''E1481'',	''E1483'',	''E1501'',	''E1503'',	''E1525'',	''E1541'',	''E2709'',	''E2711'',	''E2725'',	''E0103'',	''E0105'',	''E0107'',	''E0113'',	''E0119'',	''E0201'',	''E0203'',	''E0205'',	''E0209'',	''E0219'',	''E0301'',	''E0321'',	''E0325'',	''E0327'',	''E0341'',	''E0351'',	''E0401'',	''E0421'',	''E0441'',	''E0451'',	''E0621'',	''E0635'',	''E0701'',	''E1447'',	''E1482'',	''E1484'',	''E0247'',	''E0249'')

				--select * 
				update a set a.ctConciliado = b.conciliado
				from CambiosCTQuintaNoBorrar a
				inner join TablaLongitudProp_28 b on b.id_nodo = a.id_nodo

				alter table CambiosCTQuintaNoBorrar add sostenimiento varchar(200) default '''' with values

				--select * from RCT_Sostenimiento
				--select * from TCT_ClasificacionFONE

				--select *
				update a set a.sostenimiento = b.sos_des
				from CambiosCTQuintaNoBorrar a
				inner join RCT_Sostenimiento b on a.ct_ieepo = b.CLAVECT


				alter table CambiosCTQuintaNoBorrar add TipoClass varchar(200) default '''' with values

				--select * from TCT_ClasificacionFONE

				--select substring(a.ct_ieepo,3,3),* 
				update a set a.TipoClass = b.tipo
				from CambiosCTQuintaNoBorrar a
				inner join TCT_ClasificacionFONE b on b.clave = substring(a.ct_ieepo,3,3)

				--select * from CambiosCTQuintaNoBorrar where marca = 0

				alter table CambiosCTQuintaNoBorrar add marca int default 0 with values

				--select * from CambiosCTQuintaNoBorrar where codigo in (''S01807'',''P04803'',''A03803'',''P02802'',''T17804'',''S05805'',''S05806'',''S02805'',''T03804'',''T14807'',''T26803'',''CF12804'',''CF33890'',''S01804'',''S01808'',''T05808'',''T14805'',''T18817'',''E7011'',''JA04003'',''JA08004'',''JA01026'',''E7609'',''E7813'',''E7817'',''JA01024'',''E7035'',''E7109'',	''E7129'',	''E7135'',	''E7207'',	''E7209'',	''E7213'',	''E7215'',	''E7217'',	''E7223'',	''E7225'',	''E7243'',	''E7245'',	''E7247'',	''E7251'',	''E7305'',	''E7309'',	''E9011'',	''E9217'',''CF12825'',''CF21807'',''CF21817'',''CF33834'',''S10802'',''S03802'')
				update CambiosCTQuintaNoBorrar set marca = 1 where codigo in (''S01807'',''P04803'',''A03803'',''P02802'',''T17804'',''S05805'',''S05806'',''S02805'',''T03804'',''T14807'',''T26803'',''CF12804'',''CF33890'',''S01804'',''S01808'',''T05808'',''T14805'',''T18817'',''E7011'',''JA04003'',''JA08004'',''JA01026'',''E7609'',''E7813'',''E7817'',''JA01024'',''E7035'',''E7109'',	''E7129'',	''E7135'',	''E7207'',	''E7209'',	''E7213'',	''E7215'',	''E7217'',	''E7223'',	''E7225'',	''E7243'',	''E7245'',	''E7247'',	''E7251'',	''E7305'',	''E7309'',	''E9011'',	''E9217'',''CF12825'',''CF21807'',''CF21817'',''CF33834'',''S10802'',''S03802'')

				--select * from CambiosCTQuintaNoBorrar where ct_ieepo like ''%FZF%''
				update CambiosCTQuintaNoBorrar set marca = 2 where ct_ieepo like ''%FZF%''

				--select * from CambiosCTQuintaNoBorrar where codigo_plaza = ''078719E7235000720116''
				update CambiosCTQuintaNoBorrar set marca = 3 where codigo_plaza = ''078719E7235000720116''

				--select * from CambiosCTQuintaNoBorrar where docente = 1 and activo = 1 and ctConciliado = 1 and ZONA_ECONOMICA = ZonaEco_Ieepo and ct_ieepo <> cct and marca not in (1,2,3)
				
				alter table CambiosCTQuintaNoBorrar add tipoPlaza varchar(3) default '''' with values

				update CambiosCTQuintaNoBorrar set tipoPlaza = case when codigo like ''%AA%'' or codigo like ''%CF%'' then ''C'' else ''B'' end

				alter table CambiosCTQuintaNoBorrar add id int identity(1,1)
				
				update CambiosCTQuintaNoBorrar set clasificacion = ''''

				--select * from  CambiosCTQuintaNoBorrar where marca not in (1,2,3) and docente = 1 and TIPO_PLAZA = ''P'' and ZonaEco_Ieepo = 2 and direcSuper = ''Doc'' 
				--and zona_economica = ZonaEco_Ieepo and TipoClass = ''CENTROS DE TRABAJO DOCENTE FEDERAL TRANSFERIDO'' and activo = 1 and ctconciliado = 1
				update CambiosCTQuintaNoBorrar set clasificacion = ''PLAZA_DOCENTE_JORNADA_ZE_II'' where marca not in (1,2,3) and docente = 1 and TIPO_PLAZA = ''P'' and ZonaEco_Ieepo = 2 and direcSuper = ''Doc'' 
				and zona_economica = ZonaEco_Ieepo and TipoClass = ''CENTROS DE TRABAJO DOCENTE FEDERAL TRANSFERIDO''  and activo = 1 and ctconciliado = 1
				
				--select * from  CambiosCTQuintaNoBorrar where marca not in (1,2,3) and docente = 1 and TIPO_PLAZA = ''H'' and ZonaEco_Ieepo = 2 and direcSuper = ''Doc''
				--and zona_economica = ZonaEco_Ieepo and TipoClass = ''CENTROS DE TRABAJO DOCENTE FEDERAL TRANSFERIDO''  and activo = 1 and ctconciliado = 1
				update CambiosCTQuintaNoBorrar set clasificacion = ''PLAZA_DOCENTE_HORAS_ZE_II'' where marca not in (1,2,3) and docente = 1 and TIPO_PLAZA = ''H'' and ZonaEco_Ieepo = 2 and direcSuper = ''Doc''
				and zona_economica = ZonaEco_Ieepo and TipoClass = ''CENTROS DE TRABAJO DOCENTE FEDERAL TRANSFERIDO'' and activo = 1 and ctconciliado = 1
				
				--select * from  CambiosCTQuintaNoBorrar where marca not in (1,2,3) and docente = 1 and TIPO_PLAZA = ''P'' and ZonaEco_Ieepo = 3 and direcSuper = ''Doc''
				--and zona_economica = ZonaEco_Ieepo and TipoClass = ''CENTROS DE TRABAJO DOCENTE FEDERAL TRANSFERIDO'' and activo = 1 and ctconciliado = 1
				update CambiosCTQuintaNoBorrar set clasificacion = ''PLAZA_DOCENTE_JORNADA_ZE_III'' where marca not in (1,2,3) and docente = 1 and TIPO_PLAZA = ''P'' and ZonaEco_Ieepo = 3 and direcSuper = ''Doc''
				and zona_economica = ZonaEco_Ieepo and TipoClass = ''CENTROS DE TRABAJO DOCENTE FEDERAL TRANSFERIDO''  and activo = 1 and ctconciliado = 1
				
				--select * from  CambiosCTQuintaNoBorrar where marca not in (1,2,3) and docente = 1 and TIPO_PLAZA = ''H'' and ZonaEco_Ieepo = 3 and direcSuper = ''Doc''
				--and zona_economica = ZonaEco_Ieepo and TipoClass = ''CENTROS DE TRABAJO DOCENTE FEDERAL TRANSFERIDO'' and activo = 1 and ctconciliado = 1
				update CambiosCTQuintaNoBorrar set clasificacion = ''PLAZA_DOCENTE_HORAS_ZE_III'' where marca not in (1,2,3) and docente = 1 and TIPO_PLAZA = ''H'' and ZonaEco_Ieepo = 3 and direcSuper = ''Doc''
				and zona_economica = ZonaEco_Ieepo and TipoClass = ''CENTROS DE TRABAJO DOCENTE FEDERAL TRANSFERIDO'' and activo = 1 and ctconciliado = 1

				--select * from  CambiosCTQuintaNoBorrar where marca not in (1,2,3) and docente = 1 and direcSuper = ''1'' and ZonaEco_Ieepo = 2
				--and zona_economica = ZonaEco_Ieepo and TipoClass = ''CENTROS DE TRABAJO DOCENTE FEDERAL TRANSFERIDO'' and activo = 1 and ctconciliado = 1
				update CambiosCTQuintaNoBorrar set clasificacion = ''PLAZA_DIRECTOR_SUPERVISION_ZE_II'' where marca not in (1,2,3) and docente = 1 and direcSuper = ''1'' and ZonaEco_Ieepo = 2
				and zona_economica = ZonaEco_Ieepo and TipoClass = ''CENTROS DE TRABAJO DOCENTE FEDERAL TRANSFERIDO'' and activo = 1 and ctconciliado = 1
				
				--select * from  CambiosCTQuintaNoBorrar where marca not in (1,2,3) and docente = 1 and direcSuper = ''1'' and ZonaEco_Ieepo = 3
				--and zona_economica = ZonaEco_Ieepo and TipoClass = ''CENTROS DE TRABAJO DOCENTE FEDERAL TRANSFERIDO'' and activo = 1 and ctconciliado = 1
				update CambiosCTQuintaNoBorrar set clasificacion = ''PLAZA_DIRECTOR_SUPERVICION_ZE_III'' where marca not in (1,2,3) and docente = 1 and direcSuper = ''1'' and ZonaEco_Ieepo = 3
				and zona_economica = ZonaEco_Ieepo and TipoClass = ''CENTROS DE TRABAJO DOCENTE FEDERAL TRANSFERIDO'' and activo = 1 and ctconciliado = 1

				-- TOTAL DE REGISTROS POR TIPOCLASS
				--select TipoClass, count(*) Total from CambiosCTQuintaNoBorrar where marca not in (1,2,3) and docente = 1 and zona_economica = ZonaEco_Ieepo 
				--and TipoClass = ''CENTROS DE TRABAJO DOCENTE FEDERAL TRANSFERIDO'' and activo = 1 and ctconciliado = 1
				--group by TipoClass

				--TOTAL DE REGISTROS POR CLASIFICACION
				--select clasificacion, count(*) Total from CambiosCTQuintaNoBorrar where marca not in (1,2,3) and docente = 1 and zona_economica = ZonaEco_Ieepo 
				--and TipoClass = ''CENTROS DE TRABAJO DOCENTE FEDERAL TRANSFERIDO'' and activo = 1 and ctconciliado = 1
				--group by clasificacion
				
				--select distinct marca from CambiosCTQuintaNoBorrar

				--select * from CambiosCTQuintaNoBorrar where CODIGO = ''E9305''
				--select * from CambiosCTQuintaNoBorrar where CODIGO_plaza = ''078719E9305100300301''
				update CambiosCTQuintaNoBorrar set marca = 4 where CODIGO_plaza = ''078719E9305100300301''
				--''26/07/2019''
				update CambiosCTQuintaNoBorrar set fechacambio = @fechaCambio, archivo = 0 where archivo <> 1
				--select * from CambiosCTQuintaNoBorrar where tipoclass = ''CENTROS DE TRABAJO DOCENTE FEDERAL TRANSFERIDO'' and clasificacion <> '''' and Actualizada = 0 and marca = 0
				update CambiosCTQuintaNoBorrar set archivo = 0,fechacambio = @fechaCambio where tipoclass = ''CENTROS DE TRABAJO DOCENTE FEDERAL TRANSFERIDO'' and clasificacion <> '''' and Actualizada = 0 and marca = 0

				update CambiosCTQuintaNoBorrar set Actualizada = 1, folio = 335 where archivo = 40

				--select distinct clasificacion from  CambiosCTQuintaNoBorrar where marca not in (1,2,3,4) and tipoclass = ''CENTROS DE TRABAJO DOCENTE FEDERAL TRANSFERIDO'' 
				--and archivo = 0 and clasificacion <> '''' order by clasificacion desc

				--select a.*, e.CURP, e.ApPaterno, e.ApMaterno, e.Nombre from CambiosCTQuintaNoBorrar a inner join empleados e on e.Id_Emp = a.id_emp 
				--where a.clasificacion = ''PLAZA_DOCENTE_HORAS_ZE_II'' and marca not in (1,2,3,4) and tipoclass = ''CENTROS DE TRABAJO DOCENTE FEDERAL TRANSFERIDO'' and archivo = 0
				--and clasificacion <> '''' order by e.curp, a.codigo_plaza, a.clasificacion
				
				--select * from CambiosCTQuintaNoBorrar

				--select * from repdatosimportacion$

				--select distinct clasificacion from  CambiosCTQuintaNoBorrar where marca not in (1,2,3) and tipoclass = ''CENTROS DE TRABAJO DOCENTE FEDERAL TRANSFERIDO''
				-- and archivo = 0 and clasificacion <> '''' order by clasificacion desc
                                
				--select a.*, e.CURP, e.ApPaterno, e.ApMaterno, e.Nombre from CambiosCTQuintaNoBorrar a inner join empleados e on e.Id_Emp = a.id_emp
				-- where a.clasificacion = ''PLAZA_DOCENTE_JORNADA_ZE_II'' and marca not in (1,2,3) and tipoclass = ''CENTROS DE TRABAJO DOCENTE FEDERAL TRANSFERIDO'' and archivo = 0
				-- and clasificacion <> '''' order by a.clasificacion, e.curp, a.codigo_plaza
				alter table CambiosCTQuintaNoBorrar add id_nodo_cct int

				--select * from CambiosCTQuintaNoBorrar
				update c set id_nodo_cct=t.id_nodo from CambiosCTQuintaNoBorrar c join VistaTablaLongitud t on t.Clave= c.cct

				alter table CambiosCTQuintaNoBorrar add nivelEducativoIEEPO varchar(200)
				alter table CambiosCTQuintaNoBorrar add nivelEducativoAnalitico varchar(200)
				--update CambiosCTQuintaNoBorrar set fechaCambio =''16/08/2019''
				--select n.Descripcion nivelEduc from FUP_RelNivel_nodo r join TNivelEducativo n on r.id_nivel_educativo=n.id_NivelEducativo
				update c set nivelEducativoIEEPO= n.Descripcion from CambiosCTQuintaNoBorrar c join FUP_RelNivel_nodo r on r.id_nodo=c.id_nodo join TNivelEducativo n on r.id_nivel_educativo=n.id_NivelEducativo
				update c set nivelEducativoAnalitico= n.Descripcion from CambiosCTQuintaNoBorrar c join FUP_RelNivel_nodo r on r.id_nodo=c.id_nodo_cct join TNivelEducativo n on r.id_nivel_educativo=n.id_NivelEducativo

				select *,ROW_NUMBER() OVER(ORDER BY clasificacion ASC) id_archivo
				into #CambiosCTQuintaNoBorrar_CORRECTOS
				from CambiosCTQuintaNoBorrar where marca not in (1,2,3,4) and tipoclass = ''CENTROS DE TRABAJO DOCENTE FEDERAL TRANSFERIDO'' and clasificacion <> '''' and nivelEducativoIEEPO = nivelEducativoAnalitico

				
				select CLASIFICACION, CLASIFICACION+''_''+CAST(ARCHIVO AS VARCHAR)+''.zip'' ARCHIVO_CARGA, CLASIFICACION+''_''+CAST(ARCHIVO AS VARCHAR)+''.pdf'' [ARCHIVO_PLAZA-CURP], ARCHIVO,FOLIO FOLIO_MAP, count(*) TOTAL 
				from  CambiosCTQuintaNoBorrar where marca not in (1,2,3,4) and tipoclass = ''CENTROS DE TRABAJO DOCENTE FEDERAL TRANSFERIDO'' and clasificacion <> '''' and nivelEducativoIEEPO = nivelEducativoAnalitico
				group by Clasificacion, archivo,folio

				SELECT * 
				FROM (
				SELECT 1 AGRP,''A''TRNS,FechaCambio FECHA,''R20''R,CODIGO CAT,MODELO MOD,CONTRATACION CONT,NIVEL NIV,TIPO_PLAZA ''P/H'',CODIGO_PLAZA CPZA,ct_ieepo CCT,tipoPLAZA ''B/C'',CANTIDAD CANT,id_archivo
				FROM #CambiosCTQuintaNoBorrar_CORRECTOS 				
				UNION ALL 
				SELECT 1 AGRP,''B''TRNS,FechaCambio FECHA,''R20''R,CODIGO CAT,MODELO MOD,CONTRATACION CONT,NIVEL NIV,TIPO_PLAZA ''P/H'',CODIGO_PLAZA CPZA,CCT CCT,TIPOPLAZA ''B/C'',CANTIDAD CANT,id_archivo
				FROM #CambiosCTQuintaNoBorrar_CORRECTOS 
				)A
				order by id_archivo

				
END
'
GO

GO
PRINT N'Creating [dbo].[ASF_Tabulador_Sueldo]'
GO
IF OBJECT_ID(N'[dbo].[ASF_Tabulador_Sueldo]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================      
-- Author:  <Author,,Name>      
-- Create date: 15/11/2018      
-- Description: Tabulador de sueldos ASF      
-- =============================================      
CREATE PROCEDURE [dbo].[ASF_Tabulador_Sueldo]   
	@año VARCHAR(4)
AS      
BEGIN      
 -- SET NOCOUNT ON added to prevent extra result sets from      
 -- interfering with SELECT statements.      
 SET NOCOUNT ON;      
	
    SELECT DISTINCT  CASE WHEN LEN(PLAZA)=19 THEN SUBSTRING(PLAZA,6,5) WHEN LEN(PLAZA)=20 THEN SUBSTRING(PLAZA,7,5) WHEN LEN(PLAZA)=21 THEN SUBSTRING(PLAZA,7,6) END CATEGORIAS_PAGADAS
	INTO -- DROP TABLE 
	#PLAZAS_PAGADAS_EN_EL_AÑO
	FROM (
		SELECT DISTINCT CLAVE_PLAZA PLAZA FROM [FEDERACION.IEEPO.GOB.MX].FEDERACION.DBO.DETALLE_NOMINA WHERE QUINCENA LIKE @año+''%''
	)A
	
   ------------------------------------------------------------------------------------------------------------------      
   ------------------------------------------------------------------------------------------------------------------      
   ----------------------------------------         UPN     ---------------------------------------------------------      
   ------------------------------------------------------------------------------------------------------------------      
   ------------------------------------------------------------------------------------------------------------------      
      
   select ROW_NUMBER() OVER(PARTITION BY tt.id_Tabulador_SE_Cat_Puesto,resultado,id_Tabulador_SE_Zona,id_Tabulador_SE_Nivel_Pago,tt.nivel_puesto 
   ORDER BY tt.id_Tabulador_SE_Cat_Puesto,resultado,id_Tabulador_SE_Zona,id_Tabulador_SE_Nivel_Pago,tt.nivel_puesto ,fecha ASC) AS Row#,      
   tt.id_Tabulador_SE_Cat_Puesto,tt.categoria,TT.descripcion desc_cat,id_Tabulador_SE_Zona,id_Tabulador_SE_Nivel_Pago,tt.nivel_puesto,c.resultado,C.describe_base DESC_CON,c.tipo,fecha,max(valor)Valor,TModelo_SE_id_Modelo_SE--,v.*      
   --,P.CATEGORIAS_PAGADAS
   into -- drop table      
   #cat_pue             
    FROM valoresmatriz8 v with(nolock)       
    join TTabulador_SE_Cat_Puesto tt with(nolock) on tt.id_Tabulador_SE_Cat_Puesto=v.id_Tabulador_SE_Cat_Puesto      
    join Conceptos c with(nolock) on c.id_concepto=v.id_concepto      
    inner join TModelo_SE Modelo with(nolock) on tt.TModelo_SE_Id_Modelo_SE = Modelo.id_modelo_SE        
	join #PLAZAS_PAGADAS_EN_EL_AÑO P ON CATEGORIAS_PAGADAS= RTRIM(LTRIM(RIGHT(tt.categoria,6)))
    where tt.categoria not like ''%ET%'' and tt.categoria not like ''%EH%'' and tt.categoria not like ''%AB%'' and modelo.id_modelo=7            
   group by tt.id_Tabulador_SE_Cat_Puesto,tt.categoria,TT.descripcion,c.resultado,C.describe_base,c.tipo,Fecha,id_Tabulador_SE_Zona,id_Tabulador_SE_Nivel_Pago,tt.nivel_puesto,TModelo_SE_id_Modelo_SE       

      ---4996
   select rtrim(ltrim(c1.categoria)) categoria,replace(c1.desc_cat,'','','''')desc_cat,c1.resultado concepto,c1.DESC_CON,c1.id_Tabulador_SE_Zona,c1.id_Tabulador_SE_Nivel_Pago,
   case when c1.nivel_puesto ='''' then '''' else c1.nivel_puesto end as nivel_puesto,
   case when c1.tipo in (1,3) then ''P'' else '''' end tipo,dbo.fechaToAnioQuincena(c1.fecha) desde,--isnull(      
   dbo.fechaToAnioQuincena(c2.Fecha-1)--,''999999'' )      
   hasta,c1.Valor,c1.TModelo_SE_id_Modelo_SE      
   into --drop table       
   #UPN      
   from #cat_pue c1      
   left join #cat_pue c2       
   on c1.id_Tabulador_SE_Cat_Puesto=c2.id_Tabulador_SE_Cat_Puesto and c1.resultado = c2.resultado and c1.Tipo=c2.tipo and c1.row#=c2.Row#-1      
   and c1.id_Tabulador_SE_Zona= c2.id_Tabulador_SE_Zona and c1.id_Tabulador_SE_Nivel_Pago=c2.id_Tabulador_SE_Nivel_Pago      
   order by c1.id_Tabulador_SE_Cat_Puesto,c1.resultado,c1.fecha   
   
   --select * from #UPN WHERE 2019 BETWEEN DESDE AND HASTA
      
   ------------------------------------------------------------------------------------------------------------------      
   ------------------------------------------------------------------------------------------------------------------      
   ----------------------------------------        MANDOS   ---------------------------------------------------------      
   ------------------------------------------------------------------------------------------------------------------      
   ------------------------------------------------------------------------------------------------------------------      
   select       
   tt.id_Tabulador_SE_Cat_Puesto,tt.categoria,TT.descripcion desc_cat,c.resultado,C.describe_base DESC_CON,c.tipo,id_Tabulador_SE_Zona,id_Tabulador_SE_Nivel_Pago,tt.nivel_puesto,fecha,max(valor)Valor,TModelo_SE_id_Modelo_SE--,v.*      
   into -- drop table      
   #cat_pue_MM      
   FROM (select * from valoresmatriz4 with(nolock) union all select * from valoresmatriz5 with(nolock) ) v      
   join TTabulador_SE_Cat_Puesto tt with(nolock) on tt.id_Tabulador_SE_Cat_Puesto=v.id_Tabulador_SE_Cat_Puesto      
   join Conceptos c with(nolock) on c.id_concepto=v.id_concepto      
   inner join TModelo_SE Modelo with(nolock) on tt.TModelo_SE_Id_Modelo_SE = Modelo.id_modelo_SE        
   join #PLAZAS_PAGADAS_EN_EL_AÑO P ON CATEGORIAS_PAGADAS= RTRIM(LTRIM(RIGHT(tt.categoria,6)))
   where tt.categoria not like ''%ET%'' and tt.categoria not like ''%EH%'' and tt.categoria not like ''%AB%'' and modelo.id_modelo=10       
   group by tt.id_Tabulador_SE_Cat_Puesto,tt.categoria,TT.descripcion,c.resultado,C.describe_base,c.tipo,id_Tabulador_SE_Zona,id_Tabulador_SE_Nivel_Pago,tt.nivel_puesto,Fecha,TModelo_SE_id_Modelo_SE      
      
   select * into -- drop table      
    #cat_pue_sueldos_base from #cat_pue_MM WHERE resultado in (''07'',''7a'',''7b'',''7c'',''7d'',''7e'',''bc'') and tipo = 1;      
   select *       
   into -- drop table       
   #cat_pue_otros from #cat_pue_MM WHERE resultado not in (''07'',''7a'',''7b'',''7c'',''7d'',''7e'',''bc'') and tipo = 1;      
      
   select ROW_NUMBER() OVER(PARTITION BY id_Tabulador_SE_Cat_Puesto,resultado,id_Tabulador_SE_Zona,id_Tabulador_SE_Nivel_Pago,nivel_puesto 
   ORDER BY id_Tabulador_SE_Cat_Puesto,resultado,id_Tabulador_SE_Zona,id_Tabulador_SE_Nivel_Pago,nivel_puesto,fecha ASC) AS Row#,*       
   into  -- drop table       
   #cat_pue_MM_2       
   from (      
   select * from #cat_pue_sueldos_base      
   union all       
   select * from #cat_pue_otros      
   )a      
      
   select rtrim(ltrim(c1.categoria)) categoria,replace(c1.desc_cat,'','','''')desc_cat,c1.resultado concepto,c1.DESC_CON,c1.id_Tabulador_SE_Zona,c1.id_Tabulador_SE_Nivel_Pago,
   case when c1.nivel_puesto ='''' then '''' else c1.nivel_puesto end as nivel_puesto,
   case when c1.tipo in (1,3) then ''P'' else '''' end tipo,dbo.fechaToAnioQuincena(c1.fecha) desde,      
   --isnull(      
   dbo.fechaToAnioQuincena(c2.Fecha-1)      
   --,''999999'' )      
   hasta,c1.Valor,c1.TModelo_SE_id_Modelo_SE      
   into --drop table       
   #MM      
   from #cat_pue_MM_2 c1      
   left join #cat_pue_MM_2 c2       
   on c1.id_Tabulador_SE_Cat_Puesto=c2.id_Tabulador_SE_Cat_Puesto and c1.resultado = c2.resultado and c1.Tipo=c2.tipo and c1.row#=c2.Row#-1      
   and c1.id_Tabulador_SE_Zona= c2.id_Tabulador_SE_Zona and c1.id_Tabulador_SE_Nivel_Pago=c2.id_Tabulador_SE_Nivel_Pago      
   order by c1.id_Tabulador_SE_Cat_Puesto,c1.resultado,c1.id_Tabulador_SE_Zona,c1.id_Tabulador_SE_Nivel_Pago,c1.fecha  
  
         
   --select * from #MM 
   ------------------------------------------------------------------------------------------------------------------      
   ------------------------------------------------------------------------------------------------------------------      
   ----------------------------------------        BASICA   ---------------------------------------------------------      
   ------------------------------------------------------------------------------------------------------------------      
   ------------------------------------------------------------------------------------------------------------------      

   select       
   tt.id_Tabulador_SE_Cat_Puesto,tt.categoria,TT.descripcion desc_cat,c.resultado,C.describe_base DESC_CON,c.tipo,id_Tabulador_SE_Zona,id_Tabulador_SE_Nivel_Pago,tt.nivel_puesto,fecha,max(valor)Valor,TModelo_SE_id_Modelo_SE--,v.*      
   into -- drop table      
   #cat_pue_Ba      
    FROM (select * from valoresmatriz4 with(nolock) union all select * from valoresmatriz5 with(nolock) ) v      
    join (SELECT * FROM TTabulador_SE_Cat_Puesto WHERE RTRIM(LTRIM(RIGHT(categoria,6))) IN (SELECT CATEGORIAS_PAGADAS FROM #PLAZAS_PAGADAS_EN_EL_AÑO)) tt  on tt.id_Tabulador_SE_Cat_Puesto=v.id_Tabulador_SE_Cat_Puesto
    join Conceptos c with(nolock) on c.id_concepto=v.id_concepto      
    join TModelo_SE Modelo with(nolock) on tt.TModelo_SE_Id_Modelo_SE = Modelo.id_modelo_SE    
    where modelo.id_modelo not in (7,10 )      
    group by tt.id_Tabulador_SE_Cat_Puesto,tt.categoria,TT.descripcion,c.resultado,C.describe_base,c.tipo,id_Tabulador_SE_Zona,id_Tabulador_SE_Nivel_Pago,tt.nivel_puesto,Fecha,TModelo_SE_id_Modelo_SE     
      
   select * into -- drop table      
    #cat_pue_sueldos_base_ba from #cat_pue_Ba WHERE resultado in (''07'',''7a'',''7b'',''7c'',''7d'',''7e'',''bc'') and tipo = 3;      
   select *       
   into -- drop table       
   #cat_pue_otros_ba from #cat_pue_Ba WHERE resultado not in (''07'',''7a'',''7b'',''7c'',''7d'',''7e'',''bc'')and tipo = 1;      
      
   select ROW_NUMBER() OVER(PARTITION BY id_Tabulador_SE_Cat_Puesto,resultado,id_Tabulador_SE_Zona,id_Tabulador_SE_Nivel_Pago,nivel_puesto
   ORDER BY id_Tabulador_SE_Cat_Puesto,resultado,id_Tabulador_SE_Zona,id_Tabulador_SE_Nivel_Pago,nivel_puesto,fecha ASC) AS Row#,*       
   into  -- drop table      
   #cat_pue_Ba_2       
   from (      
   select * from #cat_pue_sueldos_base_ba      
   union all       
   select * from #cat_pue_otros_ba      
   )a      
      
   select rtrim(ltrim(c1.categoria)) categoria,replace(c1.desc_cat,'','','''')desc_cat,c1.resultado concepto,c1.desc_con,c1.id_Tabulador_SE_Zona,c1.id_Tabulador_SE_Nivel_Pago,
   case when c1.nivel_puesto ='''' then '''' else c1.nivel_puesto end as nivel_puesto,
   case when c1.tipo in (1,3) then ''P'' else '''' end tipo,dbo.fechaToAnioQuincena(c1.fecha) desde,  --isnull(      
   dbo.fechaToAnioQuincena(c2.Fecha-1)      --,''999999'' )      
   hasta,c1.Valor,c1.TModelo_SE_id_Modelo_SE      
   into --drop table       
   #Ba      
   from #cat_pue_BA_2 c1      
   left join #cat_pue_Ba_2 c2       
   on c1.id_Tabulador_SE_Cat_Puesto=c2.id_Tabulador_SE_Cat_Puesto and c1.resultado = c2.resultado and c1.Tipo=c2.tipo and c1.row#=c2.Row#-1      
   and c1.id_Tabulador_SE_Zona= c2.id_Tabulador_SE_Zona and c1.id_Tabulador_SE_Nivel_Pago=c2.id_Tabulador_SE_Nivel_Pago      
   order by c1.id_Tabulador_SE_Cat_Puesto,c1.resultado,c1.id_Tabulador_SE_Zona,c1.id_Tabulador_SE_Nivel_Pago,c1.fecha   
    

	SELECT ''R20''CV_UR,''Oaxaca''ENTIDAD,''I013''CPP,''FONE''NOM_FONDO,replace (CAT_PUESTO,''"'','''')CAT_PUESTO,replace (DES_PUESTO,''"'','''')DES_PUESTO,TIPO_PLAZA,HORAS,CONTRATO,
			cve_cpto,CONCEPTO,DESDE,HASTA,NS,ZE,SUELDO_Z_1,SUELDO_Z_2,SUELDO_Z_3
	FROM (
			select CATEGORIA CAT_PUESTO,DESC_CAT DES_PUESTO,CASE WHEN CATEGORIA LIKE ''%E%'' THEN ''H'' ELSE ''P'' END TIPO_PLAZA,CASE WHEN CATEGORIA LIKE ''%E%'' THEN ''01.0'' ELSE ''00.0'' END HORAS,
			''B''CONTRATO,concepto cve_cpto ,desc_con CONCEPTO,DESDE,isnull(Hasta,''999999'')HASTA,id_Tabulador_SE_Nivel_Pago NS,id_Tabulador_SE_Zona ZE,0.00 SUELDO_Z_1,VAL SUELDO_Z_2,VALOR SUELDO_Z_3
			from (select * from #UPN where id_Tabulador_SE_Zona = 3 and id_Tabulador_SE_Nivel_Pago = 3 )u1
			left join (select categoria cat,concepto con,desde de, valor val from #UPN where  id_Tabulador_SE_Zona = 2 and id_Tabulador_SE_Nivel_Pago = 3)u2
			on u1.categoria=u2.cat and u1.concepto=u2.con and u1.desde=u2.de -- and id_Tabulador_SE_Nivel_Pago = 3
				union all 
			select CATEGORIA CAT_PUESTO,DESC_CAT DES_PUESTO,CASE WHEN CATEGORIA LIKE ''%E%'' THEN ''H'' ELSE ''P'' END TIPO_PLAZA,CASE WHEN CATEGORIA LIKE ''%E%'' THEN ''01.0'' ELSE ''00.0'' END HORAS,
			''C''CONTRATO,concepto cve_cpto ,DESC_CON CONCEPTO,DESDE,isnull(Hasta,''999999'')HASTA,id_Tabulador_SE_Nivel_Pago NS,id_Tabulador_SE_Zona ZE,0.00 SUELDO_Z_1,VAL SUELDO_Z_2,VALOR SUELDO_Z_3
			from (select * from #MM where id_Tabulador_SE_Zona = 3 and id_Tabulador_SE_Nivel_Pago = 3 )u1
			left join (select categoria cat,concepto con,desde de, valor val from #MM where id_Tabulador_SE_Zona = 2 and id_Tabulador_SE_Nivel_Pago = 3)u2
			on u1.categoria=u2.cat and u1.concepto=u2.con and u1.desde=u2.de
				union all 
			select CATEGORIA CAT_PUESTO,DESC_CAT DES_PUESTO,CASE WHEN CATEGORIA LIKE ''%E%'' THEN ''H'' ELSE ''P'' END TIPO_PLAZA,CASE WHEN CATEGORIA LIKE ''%E%'' THEN ''01.0'' ELSE ''00.0'' END HORAS,
			CASE WHEN categoria LIKE ''%F%'' THEN ''C'' ELSE ''B'' END CONTRATO,concepto cve_cpto ,DESC_CON CONCEPTO,DESDE,isnull(Hasta,''999999'')HASTA,id_Tabulador_SE_Nivel_Pago NS,id_Tabulador_SE_Zona ZE,0.00 SUELDO_Z_1,VAL SUELDO_Z_2,VALOR SUELDO_Z_3
			from (select * from #Ba where id_Tabulador_SE_Zona = 3 and id_Tabulador_SE_Nivel_Pago = 3 )u1
			left join (select categoria cat,concepto con,desde de, valor val from #Ba where id_Tabulador_SE_Zona = 2 and id_Tabulador_SE_Nivel_Pago = 3)u2
			on u1.categoria=u2.cat and u1.concepto=u2.con and u1.desde=u2.de
	) A WHERE @año BETWEEN LEFT(DESDE,4) AND LEFT(HASTA,4)
	ORDER BY CAT_PUESTO,cve_cpto,DESDE

	--EXEC [ASF_Tabulador_Sueldo] 2019
	
END

'
GO

GO
PRINT N'Creating [dbo].[SP_Get_HistPorPlaza]'
GO
IF OBJECT_ID(N'[dbo].[SP_Get_HistPorPlaza]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[SP_Get_HistPorPlaza] 
	-- Add the parameters for the stored procedure here
	--@id_plaza int
	  @plaza char(21)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
    declare @id_plaza int = 0;
    set @id_plaza = (select id_plaza from PlazaIEEPO where PlazaIEEPO = @plaza );

with ps as (
	select distinct id_plaza
	from PlazaEmpleados
	), pes as (
	select pe.*
	from PlazaEmpleados pe 
	join ps on pe.Id_plaza = ps.Id_plaza
), hp_1 as (
	select id_plaza,id_emp, Fecha desde, (
		select min(fecha)
		from pes
		where id_plaza = a.id_plaza
		and Fecha > a.Fecha
	) hasta, id_nodo, Documentos
	from pes a
), hp_2 as (
	select 
		Id_plaza, Id_Emp, desde,
		case when DAY(hasta) in (1,15)
		then DATEADD(MINUTE, -1, hasta)
		else hasta
		end hasta, id_nodo, Documentos
	from hp_1
), hmov as (
	select x.id_plaza, x.valor_idcampo sts, y.valor_idcampo mot, x.Fecha
	from ps 
	join HPlazas x on x.id_plaza = ps.id_plaza
	join hplazas y on x.Id_plaza = y.Id_plaza and x.Fecha = y.Fecha
	and x.Id_TipoMovPlazas = 2 and y.Id_TipoMovPlazas = 1 
), hmov2 as (
	select 
		Id_plaza, sts, mot, 
		Fecha desde, isnull(
		(
			select dateadd(minute,-1,MIN(fecha))
			from hmov
			where Fecha > a.Fecha
			and id_plaza = a.id_plaza
		), ''9999-12-31T23:59:00'') hasta
	from hmov a
), hmov3 as (
	select 
		id_plaza, sts, mot, desde,
		case when sts = 3 then desde
		else hasta end hasta
	from hmov2
), hist as (
	select 
		a.Id_plaza, a.id_emp,
		b.sts, b.mot,
		id_nodo,
		case when b.desde > a.desde 
		then b.desde else a.desde end desde,
		case when b.hasta < a.hasta
		then b.hasta else a.hasta end hasta, case when Documentos =''P'' then 0 else Documentos end as Documento
	from hp_2 a 
	join hmov3 b on 
		a.Id_plaza = b.Id_plaza and 
		(
			b.desde between a.desde and a.hasta or
			b.hasta between a.desde and a.hasta
		)
)

select distinct hist.Id_Emp, hist.Id_plaza, e.Rfc, piee.PlazaIEEPO, ct.Clave, 
	  hist.sts, hist.mot,  dbo.datetoqna(
		case when sts = 3
		then DATEADD(minute,1,desde)
		else desde end
	) desde,dbo.datetoqna(hasta) hasta, fd.Folio as Documento, ud.UDP
from hist 
join empleados e on e.Id_Emp = hist.Id_Emp
join PlazaIEEPO piee on piee.Id_plaza = hist.Id_plaza
join VistaTablaLongitud ct on hist.id_nodo = ct.Id_Nodo 
join TablaLongitudProp_28 ud on ud.id_nodo = hist.id_nodo
left join FUP_Documentos fd on fd.Id_Documento = hist.Documento
where  hist.id_plaza = @id_plaza and hist.id_emp <> 0 
order by desde, hasta, hist.Id_Emp, hist.Id_plaza, e.Rfc, piee.PlazaIEEPO, ct.Clave, 
	  hist.sts, hist.mot, ud.UDP

END
'
GO

GO
PRINT N'Creating [dbo].[SP_CorreccionRetros]'
GO
IF OBJECT_ID(N'[dbo].[SP_CorreccionRetros]', 'P') IS NULL
EXEC sp_executesql N'/*
	create type CrRParam as table
	(
		id_concepto int,
		importe decimal(38,12),
		excep varchar(max)
	)

	go
*/

CREATE procedure [dbo].[SP_CorreccionRetros]
@num_emp as int,
@num_plaza as int,
@id_ref int,
@params as CrRParam readonly
with encryption
as
begin
	declare @id_emp int = (select Id_Emp from empleados where NOEMPx = @num_emp)
	declare @id_plaza int = (select Id_plaza from plazas where num_plaza = @num_plaza)
	if (select top 1 id_concepto from @params) is not null
	begin
		select row_number() over(order by id_concepto, importe) n, * into #params from @params
		declare @index int = 1
		declare @rows int = (select count(*) from #params)
		while @index <= @rows
		begin
			IF OBJECT_ID(N''tempdb..#tmp_rec'') IS NOT NULL Drop table #tmp_rec;
			select * into #tmp_rec from #params where n = @index;

			if (select importe from #tmp_rec) is not null
			begin
				declare @ctd_periodos int = 
				(
					select count(*) from ieepo..histpagosdetalle 
					where 
						id_emp = @id_emp and id_plaza = @id_plaza and id_referencia = @id_ref
						and id_concepto = (select id_concepto from #tmp_rec)
						and id_periodopago not in (select value from dep.dbo.fn_Split((select excep from #tmp_rec),'',''))
				)
				declare @id_concepto int = (select id_concepto from #tmp_rec)
				if (@ctd_periodos = 0) print @id_concepto
				declare @pesos decimal(38,2) = Round((select importe from #tmp_rec ) / @ctd_periodos, 2)
				IF OBJECT_ID(N''tempdb..#tmp_01'') IS NOT NULL Drop table #tmp_01;
				select 
					id_emp,id_periodo,id_concepto,consecutivo,horas, @pesos pesos, pesosexcento,
					id_plaza,id_referencia,id_periodopago,id_procesonomina,desde,hasta,id_plazapago
				into #tmp_01
				from ieepo..histpagosdetalle 
				where 
					id_emp = @id_emp and id_plaza = @id_plaza and id_referencia = @id_ref
					and id_concepto = @id_concepto
					and id_periodopago not in (select value from dep.dbo.fn_Split((select excep from #tmp_rec),'',''))
				declare @diff decimal(32,2) = ( (select sum(pesos) from #tmp_01) - (select importe from #tmp_rec ) )
				;with q1 as ( select top 1 * from #tmp_01 order by id_periodopago desc)
				update q1 set pesos = (pesos - @diff)
				insert into ieepo..histpagosdetalle select * from #tmp_01
			end
			else
			begin
				insert into ieepo..histpagosdetalle
				select 
					id_emp, id_periodo, id_concepto, consecutivo, horas,
					(cast( cast(pesos as varchar(max) ) as decimal(38,2) ) * -1) pesos,
					pesosexcento, id_plaza, id_referencia, id_periodopago,
					id_procesonomina, desde, hasta, id_plazapago
				from ieepo..histpagosdetalle 
				where 
					id_emp = @id_emp and id_plaza = @id_plaza and id_referencia = @id_ref
					and id_concepto = (select id_concepto from #tmp_rec)
					and id_periodopago not in (select value from dep.dbo.fn_Split((select excep from #tmp_rec),'',''))
			end
			delete from #params where n = @index
			set @index += 1
		end
	end

	declare @liquido decimal(38,2) = (
		select sum ( 
			case b.tipo
				when 1 then cast( cast(pesos as varchar(max) ) as decimal(38,2) )
				when 2 then cast( cast(pesos as varchar(max) ) as decimal(38,2) ) * -1
			End
		) from ieepo..HistPagosdetalle a join ieepo..conceptos b
		on a.id_concepto = b.id_concepto
		where 
			a.id_emp = @id_emp and a.id_plaza = @id_plaza and a.id_referencia = @id_ref
			and b.tipo in (1,2)
			and a.id_concepto <> 2601
	)

	update ieepo..HistPagos set pesos = ( @liquido - ROUND(@liquido,0,1) )
	where id_emp = @id_emp and id_plaza = @id_plaza and id_referencia = @id_ref and id_concepto = 2601
	
	update ieepo..histpagosdetalle set pesos = ( @liquido - ROUND(@liquido,0,1) )
	where id_emp = @id_emp and id_plaza = @id_plaza and id_referencia = @id_ref and id_concepto = 2601
end '
GO

GO
PRINT N'Creating [dbo].[SP_HistoricoPlazas]'
GO
IF OBJECT_ID(N'[dbo].[SP_HistoricoPlazas]', 'P') IS NULL
EXEC sp_executesql N'


CREATE Procedure [dbo].[SP_HistoricoPlazas] 
@id_emp int--, @fecha datetime
AS

SELECT     EMPLEADOS.Id_Emp, EMPLEADOS.NOEMPx AS NumeroEmpleado, PlazaEmpleados_A.Id_plaza, PlazaEmpleados_A.Fecha, Plazas.Num_Plaza, 
                      HCodigoPago.CodigoPago, HUnidad.Unidad, HSubUnidad.SubUnidad, HCat_Puesto.Cat_Puesto, HHoras.Horas, HConsecutivo.Consecutivo, 
                      CASE WHEN dbo.TLicencias_por_plaza.FechaInicio IS NULL THEN dbo.HStatusPlaza.Fecha ELSE dbo.TLicencias_por_plaza.FechaInicio END AS FechaInicio, 
                      CASE WHEN dbo.TLicencias_por_plaza.FechaFin IS NULL THEN 
						CASE WHEN
                          (SELECT     TOP (1) Fecha
                            FROM          HPlazas AS B
                            WHERE      B.Id_plaza = PlazaEmpleados_A.Id_plaza AND B.Id_TipoMovPlazas = 2 AND B.Fecha >  HStatusPlaza.Fecha
 and B.Fecha < getdate()
                            ORDER BY B.Fecha) IS NULL THEN 
							 CASE WHEN
							  (SELECT     TOP (1) Fecha
							   FROM          PlazaEmpleados AS B
                               WHERE      B.Id_plaza = PlazaEmpleados_A.Id_plaza AND B.Id_Emp = 0 AND B.Fecha >  HStatusPlaza.Fecha
 and B.Fecha < getdate()
                               ORDER BY B.Fecha) IS NULL THEN ''9999/12/31'' 
						  ELSE
                          (SELECT     TOP (1) Fecha
                            FROM          PlazaEmpleados AS B
                            WHERE      B.Id_plaza = PlazaEmpleados_A.Id_plaza AND B.Id_Emp = 0 AND B.Fecha >  HStatusPlaza.Fecha
 and B.Fecha < getdate()
                            ORDER BY B.Fecha) END ELSE
                          (SELECT     TOP (1) Fecha
                            FROM          HPlazas AS B
                            WHERE      B.Id_plaza = PlazaEmpleados_A.Id_plaza AND B.Id_TipoMovPlazas = 2 AND B.Fecha >  HStatusPlaza.Fecha
 and B.Fecha < getdate()
                            ORDER BY B.Fecha) END ELSE dbo.TLicencias_por_plaza.FechaFin END AS FechaFin, CASE WHEN dbo.TLicencias_por_plaza.StatusPlaza IS NULL 
                      THEN dbo.HstatusPlaza.id_rel ELSE dbo.TLicencias_por_plaza.StatusPlaza END AS status, CASE WHEN dbo.TLicencias_por_plaza.MotivoLicencia IS NULL 
                      THEN dbo.HtipoPlaza.id_rel ELSE dbo.TLicencias_por_plaza.MotivoLicencia END AS Motivo, TNivel3IEA.Descripcion, TNivel3IEA.clave AS Centro_Trabajo, 
                      TLicencias_por_plaza.Dias_de_Lic, HFechaSubsistema.FechaSubsistema, TTabulador_IEA_CM.Descripcion AS NivelSueldo
FROM         HTipoPlaza INNER JOIN
                      HstatusPlaza INNER JOIN
                      Plazas ON HstatusPlaza.Id_plaza = Plazas.Id_plaza ON HTipoPlaza.Id_plaza = Plazas.Id_plaza INNER JOIN
                      EMPLEADOS INNER JOIN
                          (SELECT     (CASE WHEN dbo.PlazaEmpleados.Id_Emp = 0 THEN
                                                       (SELECT     TOP (1) B.Id_Emp
                                                         FROM          dbo.PlazaEmpleados B
                                                         WHERE      B.id_plaza = dbo.PlazaEmpleados.id_Plaza AND B.Fecha < dbo.PlazaEmpleados.Fecha
                                                         ORDER BY B.fecha) ELSE dbo.PlazaEmpleados.Id_Emp END) AS id_emp, Id_plaza, Fecha, id_nodo, Documentos
                            FROM          PlazaEmpleados) AS PlazaEmpleados_A ON EMPLEADOS.Id_Emp = PlazaEmpleados_A.id_emp ON Plazas.Id_plaza = PlazaEmpleados_A.Id_plaza AND 
                      HstatusPlaza.Fecha = PlazaEmpleados_A.Fecha AND HTipoPlaza.Fecha = PlazaEmpleados_A.Fecha INNER JOIN
                      TablaConfigOrgan ON PlazaEmpleados_A.id_nodo = TablaConfigOrgan.Id_Nodo INNER JOIN
                      TNivel3IEA ON TablaConfigOrgan.ValorCampoLLave = TNivel3IEA.id_Nivel3IEA INNER JOIN
                      HTabulador_IEA_CM ON Plazas.Id_plaza = HTabulador_IEA_CM.id_plaza AND PlazaEmpleados_A.Fecha = HTabulador_IEA_CM.fecha INNER JOIN
                      HFechaSubsistema ON Plazas.Id_plaza = HFechaSubsistema.id_plaza AND PlazaEmpleados_A.Fecha = HFechaSubsistema.fecha INNER JOIN
                      TTabulador_IEA_CM ON HTabulador_IEA_CM.id_rel = TTabulador_IEA_CM.id_Tabulador_IEA_CM LEFT OUTER JOIN
                      HConsecutivo ON Plazas.Id_plaza = HConsecutivo.id_plaza AND HConsecutivo.fecha =
                          (SELECT     TOP (1) fecha
                            FROM          HConsecutivo AS B
                            WHERE      (id_plaza = Plazas.Id_plaza) AND (fecha <= PlazaEmpleados_A.Fecha)
                            ORDER BY fecha DESC) LEFT OUTER JOIN
                      HHoras ON Plazas.Id_plaza = HHoras.id_plaza AND HHoras.fecha =
                          (SELECT     TOP (1) fecha
                            FROM          HHoras AS B
                            WHERE      (id_plaza = Plazas.Id_plaza) AND (fecha <= PlazaEmpleados_A.Fecha)
                            ORDER BY fecha DESC) LEFT OUTER JOIN
                      HCat_Puesto ON Plazas.Id_plaza = HCat_Puesto.id_plaza AND HCat_Puesto.fecha =
                          (SELECT     TOP (1) fecha
                            FROM          HCat_Puesto AS B
                            WHERE      (id_plaza = Plazas.Id_plaza) AND (fecha <= PlazaEmpleados_A.Fecha)
                            ORDER BY fecha DESC) LEFT OUTER JOIN
                      HSubUnidad ON Plazas.Id_plaza = HSubUnidad.id_plaza AND HSubUnidad.fecha =
                          (SELECT     TOP (1) fecha
                            FROM          HSubUnidad AS B
                            WHERE      (id_plaza = Plazas.Id_plaza) AND (fecha <= PlazaEmpleados_A.Fecha)
                            ORDER BY fecha DESC) LEFT OUTER JOIN
                      HUnidad ON Plazas.Id_plaza = HUnidad.id_plaza AND HUnidad.fecha =
                          (SELECT     TOP (1) fecha
                            FROM          HUnidad AS B
                            WHERE      (id_plaza = Plazas.Id_plaza) AND (fecha <= PlazaEmpleados_A.Fecha)
                            ORDER BY fecha DESC) FULL OUTER JOIN
                      TLicencias_por_plaza ON Plazas.Id_plaza = TLicencias_por_plaza.id_plaza AND PlazaEmpleados_A.Fecha = TLicencias_por_plaza.FechaInicio FULL OUTER JOIN
                      HCodigoPago ON Plazas.Id_plaza = HCodigoPago.id_plaza AND HCodigoPago.fecha =
                          (SELECT     TOP (1) fecha
                            FROM          HCodigoPago AS B
                            WHERE      (id_plaza = Plazas.Id_plaza) AND (fecha <= PlazaEmpleados_A.Fecha)
                            ORDER BY fecha DESC)
WHERE     (EMPLEADOS.id_emp = @id_emp) --and (PlazaEmpleados_A.fecha >= @fecha)

'
GO

GO
PRINT N'Creating [dbo].[asf_licencias_sin_goce]'
GO
IF OBJECT_ID(N'[dbo].[asf_licencias_sin_goce]', 'P') IS NULL
EXEC sp_executesql N'--Procedimiento que permite obtener los casos de licencias sin goce de sueldo
--mismas que están confrontadas entre SIA y MDP
CREATE procedure [dbo].[asf_licencias_sin_goce] as
IF OBJECT_ID (''ut..lics_sin_goce_2019_mdp'') IS not NULL 
   begin 
		select 
		''R20'' AS CV_UR,''OAXACA'' AS ENTIDAD,1013 AS CPP,''FONE'' AS NOM_FONDO,e.RFC,e.CURP,e.NOMBRE AS NOM_EMP,e.Appaterno AS AP1_EMP,
		e.ApMaterno AS AP2_EMP,PI.PLAZAIEEPO AS PLAZA,PI.DIAGONAL AS CON_PLAZA,replace(t.categoria,'' '','''') AS CAT_PUESTO,
		dbo.fechaToAnioQuincena(xx.fecha) as EFEC_ALTA,
		dbo.fechaToAnioQuincena(fdd.FechaIni) as EFEC_BAJA,
		case when substring(dbo.fechaToAnioQuincena(fdd.fechafin),5,2)=''24'' 
		then cast(YEAR(fdd.fechafin)+1 as varchar(4))+CAST(''01'' AS varchar(2))
		else dbo.fechaToAnioQuincena(fdd.fechafin)+1 end as EFEC_REINC,
		fmm.CLAVE AS MOT,fmm.Descripcion AS MOTIVO,
		fid.Centro_Trabajo AS CCT,tl.UDP as UD,
		case when ftm.Id_TipoMovimiento in (11,31) then ''PRÓRROGA DE LICENCIA'' ELSE ''LICENCIA'' END AS ESTATUS
		from fup_documentos fd with (nolock)           
		inner join empleados e with (nolock) on fd.Id_Emp = e.Id_Emp
		inner join fup_documento_detalle fdd with (nolock) on fd.Id_Documento = fdd.Id_Documento
		inner join plazas p with (nolock) on fdd.Id_Plaza = p.Id_plaza
		inner join plazaieepo pi with (nolock) on fdd.Id_Plaza = pi.Id_plaza
		inner join FUP_Informacion_Documentos fid with (nolock) on fd.Id_Documento = fid.Id_Documento
		inner join CalenNomina c with (nolock) on fid.Id_Periodo = c.Id_Periodo
		inner join TNivelEducativo tn with (nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
		inner join FUP_MotivoMovimiento fmm with (nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
		inner join FUP_TipoMovimiento ftm with (nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
		inner join HTabulador_SE_Cat_Puesto h with (nolock) on fdd.id_plaza=h.id_plaza
		inner join TTabulador_SE_Cat_Puesto t with (nolock) on h.id_rel=t.id_Tabulador_SE_Cat_Puesto
		inner join ut..lics_sin_goce_2019_mdp xx with (nolock) on e.curp=xx.curp and replace(pi.plazaieepo,'' '','''')=xx.clave 
		and xx.FECHA_INICIAL=CONVERT(varchar(10),fdd.FechaIni,103)
		inner join VistaTablaLongitud v with (nolock) on fid.Centro_Trabajo=v.clave
		inner join TablaLongitudProp_28 tl with (nolock) on v.Id_Nodo=tl.id_nodo
		where ftm.Id_TipoMovimiento in (9,10,11,31) and fmm.Clave not in (''43'',''44'',''48'',''88'',''53'')
		and fdd.FechaIni>=dbo.anioQuincenaToFecha(cast(YEAR(getdate())-1 as varchar(4))+CAST(''01'' as varchar(2)),0)  
		and fdd.Fechafin<dbo.anioQuincenaToFecha(cast(YEAR(getdate()) as varchar(4))+CAST(''01'' as varchar(2)),0) 
		and fd.Id_Estatus=2
   end
else 
   begin    
		--generar el concentrado de licencias sin goce de sueldo del mdp
		select * into ut..lics_sin_goce_2019_mdp 
		from anexos_nombramientos with (nolock) where fecha_final<>''00/00/0000'' 
		and CONVERT(datetime,FECHA_inicial,103)>=dbo.anioQuincenaToFecha(cast(YEAR(getdate())-1 as varchar(4))+CAST(''01'' as varchar(2)),0)
		and CONVERT(datetime,FECHA_inicial,103)<dbo.anioQuincenaToFecha(cast(YEAR(getdate()) as varchar(4))+CAST(''01'' as varchar(2)),0)
		and Operacion in (''11-41'',''11-42'',''11-51'',''11-52'')
		order by CONVERT(datetime,FECHA_inicial,103)

		--crear campo de fecha para obtener el campo de fecha de alta
		alter table ut..lics_sin_goce_2019_mdp 
		add fecha datetime

		--actualizar el campo de fecha
		update xx set xx.fecha=pe.fecha
		from fup_documentos fd            
		inner join empleados e with (nolock) on fd.Id_Emp = e.Id_Emp
		inner join fup_documento_detalle fdd with (nolock) on fd.Id_Documento = fdd.Id_Documento
		inner join plazas p with (nolock) on fdd.Id_Plaza = p.Id_plaza
		inner join plazaieepo pi with (nolock) on fdd.Id_Plaza = pi.Id_plaza
		inner join FUP_Informacion_Documentos fid with (nolock) on fd.Id_Documento = fid.Id_Documento
		inner join CalenNomina c with (nolock) on fid.Id_Periodo = c.Id_Periodo
		inner join TNivelEducativo tn with (nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
		inner join FUP_MotivoMovimiento fmm with (nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
		inner join FUP_TipoMovimiento ftm with (nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
		inner join HTabulador_SE_Cat_Puesto h with (nolock)on fdd.id_plaza=h.id_plaza
		inner join TTabulador_SE_Cat_Puesto t with (nolock) on h.id_rel=t.id_Tabulador_SE_Cat_Puesto
		inner join ut..lics_sin_goce_2019_mdp xx with (nolock) on e.curp=xx.curp and replace(pi.plazaieepo,'' '','''')=xx.clave 
		and xx.FECHA_INICIAL=CONVERT(varchar(10),fdd.FechaIni,103)
		inner join plazaempleados pe with (nolock) on fd.id_emp=pe.id_emp and fdd.id_plaza=pe.id_plaza
		inner join (
		select MAX(fecha) as fecha,id_plaza,id_emp from PlazaEmpleados with (nolock) where Id_Emp<>0
		group by id_plaza,id_emp
		) x on pe.fecha=x.fecha and pe.Id_plaza=x.id_plaza and pe.Id_Emp=x.Id_Emp
		inner join VistaTablaLongitud v with (nolock) on fid.Centro_Trabajo=v.clave
		inner join TablaLongitudProp_28 tl with (nolock) on v.Id_Nodo=tl.id_nodo
		where ftm.Id_TipoMovimiento in (9,10,11,31) and fmm.Clave not in (''43'',''44'',''48'',''88'',''53'')
		and fdd.FechaIni>=dbo.anioQuincenaToFecha(cast(YEAR(getdate())-1 as varchar(4))+CAST(''01'' as varchar(2)),0) 
		and fdd.Fechafin<dbo.anioQuincenaToFecha(cast(YEAR(getdate()) as varchar(4))+CAST(''01'' as varchar(2)),0)
		and fd.Id_Estatus=2

		select 
		''R20'' AS CV_UR,''OAXACA'' AS ENTIDAD,1013 AS CPP,''FONE'' AS NOM_FONDO,e.RFC,e.CURP,e.NOMBRE AS NOM_EMP,e.Appaterno AS AP1_EMP,
		e.ApMaterno AS AP2_EMP,PI.PLAZAIEEPO AS PLAZA,PI.DIAGONAL AS CON_PLAZA,replace(t.categoria,'' '','''') AS CAT_PUESTO,
		dbo.fechaToAnioQuincena(xx.fecha) as EFEC_ALTA,
		dbo.fechaToAnioQuincena(fdd.FechaIni) as EFEC_BAJA,
		case when substring(dbo.fechaToAnioQuincena(fdd.fechafin),5,2)=''24'' 
		then cast(YEAR(fdd.fechafin)+1 as varchar(4))+CAST(''01'' AS varchar(2))
		else dbo.fechaToAnioQuincena(fdd.fechafin)+1 end as EFEC_REINC,
		fmm.CLAVE AS MOT,fmm.Descripcion AS MOTIVO,
		fid.Centro_Trabajo AS CCT,tl.UDP as UD,
		case when ftm.Id_TipoMovimiento in (11,31) then ''PRÓRROGA DE LICENCIA'' ELSE ''LICENCIA'' END AS ESTATUS
		from fup_documentos fd with (nolock)           
		inner join empleados e with (nolock) on fd.Id_Emp = e.Id_Emp
		inner join fup_documento_detalle fdd with (nolock) on fd.Id_Documento = fdd.Id_Documento
		inner join plazas p with (nolock) on fdd.Id_Plaza = p.Id_plaza
		inner join plazaieepo pi with (nolock) on fdd.Id_Plaza = pi.Id_plaza
		inner join FUP_Informacion_Documentos fid with (nolock) on fd.Id_Documento = fid.Id_Documento
		inner join CalenNomina c with (nolock) on fid.Id_Periodo = c.Id_Periodo
		inner join TNivelEducativo tn with (nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
		inner join FUP_MotivoMovimiento fmm with (nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
		inner join FUP_TipoMovimiento ftm with (nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
		inner join HTabulador_SE_Cat_Puesto h with (nolock) on fdd.id_plaza=h.id_plaza
		inner join TTabulador_SE_Cat_Puesto t with (nolock) on h.id_rel=t.id_Tabulador_SE_Cat_Puesto
		inner join ut..lics_sin_goce_2019_mdp xx with (nolock) on e.curp=xx.curp and replace(pi.plazaieepo,'' '','''')=xx.clave 
		and xx.FECHA_INICIAL=CONVERT(varchar(10),fdd.FechaIni,103)
		inner join VistaTablaLongitud v with (nolock) on fid.Centro_Trabajo=v.clave
		inner join TablaLongitudProp_28 tl with (nolock) on v.Id_Nodo=tl.id_nodo
		where ftm.Id_TipoMovimiento in (9,10,11,31) and fmm.Clave not in (''43'',''44'',''48'',''88'',''53'')
		and fdd.FechaIni>=dbo.anioQuincenaToFecha(cast(YEAR(getdate())-1 as varchar(4))+CAST(''01'' as varchar(2)),0)  
		and fdd.Fechafin<dbo.anioQuincenaToFecha(cast(YEAR(getdate()) as varchar(4))+CAST(''01'' as varchar(2)),0) 
		and fd.Id_Estatus=2
	end
'
GO

GO
PRINT N'Creating [dbo].[spd_EliminaNegativos]'
GO
IF OBJECT_ID(N'[dbo].[spd_EliminaNegativos]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		wcahun
-- Create date: Mar-2014
-- Description:	Procedimiento para eliminar los conceptos negativos de un recalculo
-- =============================================
CREATE PROCEDURE [dbo].[spd_EliminaNegativos]
	@id_plaza int
	,@id_periodo int
	,@id_emp int
	,@id_recalculo int
	,@id_periodopago varchar(500)
AS
BEGIN
	DECLARE @Xml AS XML        
	--Se crean los nodos
	set @xml=''<tabla>''+replace(@id_periodopago,'','',''</tabla> <tabla>'') +  ''</tabla>''
	

	delete from histpagosdetalle 
	where ID_PLAZA=@id_plaza AND ID_EMP=@id_emp AND ID_PERIODO=@id_periodo 
		AND ID_REFERENCIA=@id_recalculo and id_periodopago in (
		select   item.n.value(''.'', ''VARCHAR(50)'') AS n	FROM    @Xml.nodes(''/tabla'') AS item(n)
		) and pesos<0

	select ''correcto'' as resultado   
END

'
GO

GO
PRINT N'Creating [dbo].[SP_CorreccionRetrosV4]'
GO
IF OBJECT_ID(N'[dbo].[SP_CorreccionRetrosV4]', 'P') IS NULL
EXEC sp_executesql N'
CREATE procedure [dbo].[SP_CorreccionRetrosV4]
@num_emp as int,
@num_plaza as int,
@id_ref int,
@params as CrRParamV4 readonly,
@e as varchar(max) = ''''
with encryption
as
begin	
	SET XACT_ABORT ON
	begin try
		begin tran;
			declare @id_emp int = (select Id_Emp from ieepo..empleados where NOEMPx = @num_emp)
			declare @id_plaza int = (select Id_plaza from ieepo..plazas where num_plaza = @num_plaza)
	
			if (select top 1 concepto from @params) is not null
			begin
				select row_number() over(order by concepto,upd_importe, ajuste) n, * into #params from @params
				declare @index int = 1
				declare @rows int = (select count(*) from #params)
				while @index <= @rows
				begin
					IF OBJECT_ID(N''tempdb..#tmp_rec'') IS NOT NULL Drop table #tmp_rec;
					select * into #tmp_rec from #params where n = @index;

					declare @id_concepto int = -1
					declare @concepto as varchar(max) = (select cast(concepto as varchar(max)) from #tmp_rec)
					if(substring(@concepto, 1, 1) not like ''$'')
						set @id_concepto = (select id_concepto from ieepo..conceptos where id_concepto = cast(@concepto as int))
					else
					begin
						set @id_concepto = 
							(
								select distinct a.id_concepto
								from ieepo..conceptos a join ieepo..histpagosdetalle b
								on a.id_concepto = b.id_concepto
								where
									resultado like substring(@concepto, 2, len(@concepto) - 1)
									and a.id_empresa = 2 and b.id_emp = @id_emp 
									and b.id_plaza = @id_plaza and b.id_referencia = @id_ref
									and tipo in (1,2)
							)
						if @id_concepto is null
							set @id_concepto =  (
								select id_concepto 
								from ieepo..Conceptos
								where 
									resultado like substring(@concepto, 2, len(@concepto) - 1) 
									and id_empresa = 2 and tipo in (1,2)
							)
					end
					if @id_concepto is not null and @id_concepto <> -1
					begin
						declare @ctd_periodos int
						if (select upd_importe from #tmp_rec) is not null
						begin	
							set @ctd_periodos = 
							(
								select count(distinct id_periodopago) from ieepo..histpagosdetalle 
								where 
									id_emp = @id_emp and id_plaza = @id_plaza and id_referencia = @id_ref
									and id_concepto = @id_concepto and pesos >= 0
									and id_periodopago not in (select value from dbo.fn_split((select excep from #tmp_rec),'',''))
							)

							if (@ctd_periodos > 0)
							begin
								declare @upd_pesos decimal(38,2) 
								if( (select tipo_importe from #tmp_rec) is null)
									set @upd_pesos = Round((select upd_importe from #tmp_rec ) / @ctd_periodos, 2)
								else
									set @upd_pesos = (select upd_importe from #tmp_rec )
								update ieepo..histpagosdetalle 
								set pesos = @upd_pesos
								where 
									id_emp = @id_emp and id_plaza = @id_plaza and id_referencia = @id_ref
									and id_concepto = @id_concepto and pesos >= 0
									and id_periodopago not in (select value from dbo.fn_split((select excep from #tmp_rec),'',''))
								
								if( (select tipo_importe from #tmp_rec) is null)
								begin
									declare @udiff decimal(32,2) = ( 
										(
											select sum(pesos) from ieepo..histpagosdetalle 
											where 
												id_emp = @id_emp and id_plaza = @id_plaza and id_referencia = @id_ref
												and id_concepto = @id_concepto and pesos >= 0
												and id_periodopago not in (select value from dbo.fn_split((select excep from #tmp_rec),'',''))
										) - (select upd_importe from #tmp_rec ) 
									)

									;with q1 as ( 
										select top 1 * 
										from ieepo..histpagosdetalle 
										where 
											id_emp = @id_emp and id_plaza = @id_plaza and id_referencia = @id_ref
											and id_concepto = @id_concepto and pesos >= 0
											and id_periodopago not in (select value from dbo.fn_split((select excep from #tmp_rec),'',''))
										order by id_periodopago desc
									)
									update q1 set pesos = (pesos - @udiff)
								end
							end
							else
							begin
								IF OBJECT_ID(N''tempdb..#new_records'') IS NOT NULL Drop table #new_records;
								select distinct 
									id_emp, id_periodo, @id_concepto id_concepto, 0 consecutivo, 0 horas, 
									cast (-1 as decimal(38,2)) pesos, 0 pesosexcento, id_plaza, id_referencia,
									id_periodopago, id_procesonomina, desde, hasta, 0 id_plazapago
								into #new_records
								from ieepo..histpagosdetalle 
								where 
									id_emp = @id_emp and id_plaza = @id_plaza and id_referencia = @id_ref 
									and id_periodopago not in (select value from dbo.fn_split((select excep from #tmp_rec),'',''))
						
								set @ctd_periodos = (select count(*) from #new_records)
								declare @new_pesos decimal(38,2)
								
								if( (select tipo_importe from #tmp_rec) is null)
									set @new_pesos = Round((select upd_importe from #tmp_rec ) / @ctd_periodos, 2)
								else
									set @new_pesos = (select upd_importe from #tmp_rec )

								update #new_records set pesos = @new_pesos
								
								if( (select tipo_importe from #tmp_rec) is null)
								begin
									declare @ndiff decimal(32,2) = (select sum(pesos) from #new_records) - (select upd_importe from #tmp_rec )
						
									;with q1 as (select top 1 * from #new_records)
									update q1 set pesos = (pesos - @ndiff)
								end

								insert into ieepo..histpagosdetalle (
									id_emp, id_periodo, id_concepto, consecutivo, horas, pesos, pesosexcento,
									id_plaza, id_referencia, id_periodopago, id_procesonomina, desde, hasta, 
									id_plazapago
								)
								select
									id_emp, id_periodo, id_concepto, consecutivo, horas, pesos, pesosexcento,
									id_plaza, id_referencia, id_periodopago, id_procesonomina, desde, hasta, 
									id_plazapago
								from #new_records
							end
						end

						if (select ajuste from #tmp_rec) is not null
						begin
							set @ctd_periodos = 
							(
								select count(distinct id_periodopago) from ieepo..histpagosdetalle 
								where 
									id_emp = @id_emp and id_plaza = @id_plaza and id_referencia = @id_ref
									and pesos >= 0
									and id_concepto = @id_concepto
									and id_periodopago not in (select value from dbo.fn_split((select excep from #tmp_rec),'',''))
							)

							if (@ctd_periodos = 0) print @id_concepto

							declare @pesos decimal(38,2)
							
							if( (select tipo_importe from #tmp_rec) is null)
								set @pesos = Round((select ajuste from #tmp_rec ) / @ctd_periodos, 2)
							else
								set @pesos = (select ajuste from #tmp_rec )

							IF OBJECT_ID(N''tempdb..#tmp_01'') IS NOT NULL Drop table #tmp_01;
							select distinct
								id_emp, id_periodo, id_concepto, consecutivo, horas,  @pesos pesos,  pesosexcento, 
								id_plaza, id_referencia, id_periodopago, id_procesonomina, desde, hasta, Isnull((select plaza_pago from #tmp_rec), @id_plaza) id_plazapago
							into #tmp_01
							from ieepo..histpagosdetalle 
							where 
								id_emp = @id_emp and id_plaza = @id_plaza and id_referencia = @id_ref
								and id_concepto = @id_concepto and pesos >= 0
								and id_periodopago not in (select value from dbo.fn_split((select excep from #tmp_rec),'',''))
					
							if( (select tipo_importe from #tmp_rec) is null)
							begin
								declare @diff decimal(32,2) = ( (select sum(pesos) from #tmp_01) - (select ajuste from #tmp_rec ) )
								;with q1 as ( select top 1 * from #tmp_01 order by id_periodopago desc)
								update q1 set pesos = (pesos - @diff)
							end

							insert into ieepo..histpagosdetalle (
								id_emp, id_periodo, id_concepto, consecutivo, horas, pesos, pesosexcento,
								id_plaza, id_referencia, id_periodopago, id_procesonomina, desde, hasta, 
								id_plazapago
							)
							select
								id_emp, id_periodo, id_concepto, consecutivo, horas, pesos, pesosexcento,
								id_plaza, id_referencia, id_periodopago, id_procesonomina, desde, hasta, 
								id_plazapago
							from #tmp_01
						end
						else
						begin
							if (select 1 from #tmp_rec where ajuste is null and upd_importe is null) = 1
							begin
								insert into ieepo..histpagosdetalle (
									id_emp, id_periodo, id_concepto, consecutivo, horas, pesos, pesosexcento,
									id_plaza, id_referencia, id_periodopago, id_procesonomina, desde, hasta, 
									id_plazapago
								)
								select 
									id_emp, id_periodo, id_concepto, consecutivo, horas,
									(cast( cast(pesos as varchar(max) ) as decimal(38,2) ) * -1) pesos,
									pesosexcento, id_plaza, id_referencia, id_periodopago,
									id_procesonomina, desde, hasta, Isnull((select plaza_pago from #tmp_rec), @id_plaza)
								from ieepo..histpagosdetalle 
								where 
									id_emp = @id_emp and id_plaza = @id_plaza and id_referencia = @id_ref
									and id_concepto = @id_concepto and pesos >= 0
									and id_periodopago not in (select value from dbo.fn_split((select excep from #tmp_rec),'',''))
							end
						end
					end
			
					delete from #params where n = @index
					set @index += 1
				end
			end

			declare @liquido decimal(38,2) = (
				select sum ( 
					case b.tipo
						when 1 then cast( cast(pesos as varchar(max) ) as decimal(38,2) )
						when 2 then cast( cast(pesos as varchar(max) ) as decimal(38,2) ) * -1
					End
				) from ieepo..HistPagosdetalle a join ieepo..conceptos b
				on a.id_concepto = b.id_concepto
				where 
					a.id_emp = @id_emp and a.id_plaza = @id_plaza and a.id_referencia = @id_ref
					and b.tipo in (1,2)
					and a.id_concepto <> 2601
			)

			update ieepo..HistPagos set pesos = ( @liquido - ROUND(@liquido,0,1) )
			where id_emp = @id_emp and id_plaza = @id_plaza and id_referencia = @id_ref and id_concepto = 2601
	
			update ieepo..histpagosdetalle set pesos = ( @liquido - ROUND(@liquido,0,1) )
			where id_emp = @id_emp and id_plaza = @id_plaza and id_referencia = @id_ref and id_concepto = 2601

			IF (@@ERROR <> 0) 
			BEGIN
				ROLLBACK TRAN
				raiserror(''Script failed'', 20, -1)
				print ERROR_MESSAGE()
			END
		commit tran;
	end try
	begin catch
		IF @@TRANCOUNT > 0
			 ROLLBACK TRANSACTION;
		print ERROR_MESSAGE()
	end catch
end
'
GO

GO
PRINT N'Creating [dbo].[spf_obten_folio]'
GO
IF OBJECT_ID(N'[dbo].[spf_obten_folio]', 'P') IS NULL
EXEC sp_executesql N'CREATE procedure [dbo].[spf_obten_folio]                

(                                                  

@id_nivel_educativo as int,                                                

@año as varchar(4),                                                

@id_emp as int,                                                

@ct as varchar(10),

@id_usuario as int,    

@id_documento as int                                              

)            

WITH RECOMPILE               

as                                                  

Begin                   

SET NOCOUNT ON;

--declare @id_nivel_educativo as int=5

--declare @año as varchar(4)=''2017''

--declare @id_emp as int=134830

--declare @ct as varchar(10)=''20dpb0002h''

--declare @id_usuario as int=114

--declare @id_documento as int=0

--set @año=''2017''

declare @anio as varchar(4)=substring(@año,3,2)

declare @id_nodo as int = (select id_nodo from VistaTablaLongitud with(nolock) where clave=@ct)

declare @id_drse as int =(select id_drse from FUP_CT_DRSE with(nolock) where id_nodo=@id_nodo)

declare @desc_drse as varchar(50)=(select descripcion from fup_drse with(nolock) where id_drse=@id_drse)

declare @folio_fin as varchar(10)=(select folio_fin from fup_drse_nivel_folios with(nolock) where id_drse=@id_drse and id_niveleducativo=@id_nivel_educativo and año=@año)

declare @desc_nivel as varchar(100)=(select descripcion from TNivelEducativo where id_NivelEducativo=@id_nivel_educativo)

declare @folio as varchar(10)

declare @consecutivo as varchar(20)

declare @folio_final as varchar(200)

declare @drse as varchar(50)

declare @cve_drse as varchar (4)= case when @id_drse=1 then ''D1''      

                                  else case when @id_drse=2 then ''D2''      

                                  else case when @id_drse=3 then ''D3''     

                                  else ''D4''     

                                  end end end

declare @cve_nivel as varchar (4)

if(exists(select id_nodo from  vistatablalongitud with(nolock) where clave=@ct))

	begin

	    if(exists(select 1 from VistaTablalongitud with(nolock) where clave=@ct

          and id_nodo in (select id_nodo from FUP_RelNivel_Nodo with(nolock) where id_nivel_educativo = @id_nivel_educativo))) 

			begin

			    if(exists(select 1 from ViewVistaTablalongitud where clave = @ct

				   and id_nodo in (select distinct fcr.id_nodo from FUP_RelNivel_Nodo frn inner join fup_ct_drse fcr on frn.id_nodo=fcr.id_nodo where frn.id_nivel_educativo = @id_nivel_educativo

				   and fcr.id_drse in (select id_drse from FUP_USUARIO_DRSE where id_usuario=@id_usuario)))) 

						begin

						    --set @folio=(select RIGHT(''0000'' + Ltrim(Rtrim(consecutivo)),4) from fup_drse_nivel_folios with(nolock) where id_drse=@id_drse and id_niveleducativo=@id_nivel_educativo)

							if(@id_documento=0)

							begin

							set @folio=(select consecutivo from fup_drse_nivel_folios with(nolock) where id_drse=@id_drse and id_niveleducativo=@id_nivel_educativo and año=@año)

						   	if(@folio!='''' or @folio is not null)

							begin

							if(len(@folio) =4 and len(@folio_fin)=5)

							begin 

								set @folio=''0''+@folio

							end

							if(@folio<=@folio_fin)

								begin 

									set @cve_nivel=((select desc_nivel from fup_drse_nivel_folios with(nolock) where id_drse=@id_drse and id_niveleducativo=@id_nivel_educativo and año=@año))

									set @folio_final=@cve_drse+''/''+@cve_nivel+''/''+@folio+''/''+@anio

									--set @consecutivo=RIGHT(''0000'' + Ltrim(Rtrim(CAST(@folio AS NUMERIC)+CAST(1 AS NUMERIC))),4)

									if(len(@folio)<=4)

										begin 

											set @consecutivo=RIGHT(''0000'' + Ltrim(Rtrim(CAST(@folio AS NUMERIC)+CAST(1 AS NUMERIC))),4)

										end

									else

										begin 

										     set @consecutivo=@folio+1

										end

									update fup_drse_nivel_folios set consecutivo=@consecutivo where id_drse=@id_drse and id_niveleducativo=@id_nivel_educativo and año=@año

									select @folio_final as folio_final

								end

							else

							    begin 

								     set @folio_final=''No se puede asignar folio, el folio supera el rango permitido para el nivel de ''+@desc_nivel

								     select @folio_final as folio_final

									 select @folio

									 select @folio_fin

								end

							end

							else

							begin 

								set @folio_final=''No existe rango de folios para la ''+@desc_drse+'' del año ''+@año+'', Por favor verifíque..''

								select @folio_final as folio_final

							end

						end

						else

							begin

							     set @folio_final=(select folio from fup_documentos where id_documento=@id_documento)

								 select @folio_final as folio_final

							end

						end

					else

						begin 

							 set @drse=(select c.descripcion from vistatablalongitud a with(nolock)

							 inner join fup_ct_drse b with(nolock) on a.id_nodo=b.id_nodo 

							 inner join fup_drse c with(nolock) on b.id_drse=c.id_drse 

							 where a.clave =@ct)

							 

								 if(@drse='''' or @drse is null)

									 begin 

										 set @folio_final=''El centro de trabajo no está asignado a una derse''

										 select @folio_final as folio_final

									 end

								 else

									 begin

									     set @folio_final=''El centro de trabajo pertenece a la ''+ @drse+'', por favor verifíque..''

										 select @folio_final as folio_final

									 end

						end

			end

		else

			begin 

			    set @folio_final=''El centro de trabajo no pertenece al nivel educativo de la drse''

				select @folio_final as folio_final

			end

	end

else

	begin

	    set @folio_final=''el centro de trabajo no existe''

		select @folio_final as folio_final

	end

end'
GO

GO
PRINT N'Creating [dbo].[sp_movs_suspensiones]'
GO
IF OBJECT_ID(N'[dbo].[sp_movs_suspensiones]', 'P') IS NULL
EXEC sp_executesql N'----------------------------------
--- SUSPENSIONES
----------------------------------
----------------------------------
----------------------------------
--- QUINCENA DE LA QUE SE DESEA EL REPORTE---
create procedure [dbo].[sp_movs_suspensiones]
 (
 @Quincena as int,
 @id_cia as int
 )
 with encryption 
 as begin
declare @año as int
set @quincena=Case when @Quincena=1 then 24 else @Quincena-1 end
set @año= Case when @quincena=24 then year(GETDATE())-1 else YEAR(GETDATE()) end

select row_number() OVER (ORDER BY ftm.clave,fmm.clave) as ID_OPERACION,ftm.Clave+''-''+fmm.clave AS OPERACION,
e.curp AS CURP,
replace(pi.PlazaIEEPO,'' '','''') AS CPZA,
NIVEL_SALARIAL=/*(select top 1 b.id_Tabulador_SE_CM from HTabulador_SE_CM a 
inner join TTabulador_SE_CM b on a.id_rel=b.id_Tabulador_SE_CM
inner join fup_documento_detalle c on a.id_plaza=c.id_plaza
where a.fecha<c.fechaini order by a.fecha desc)*/
 case when (select top 1 id_rel from HTabulador_SE_cm htcm where 
id_plaza=fdd.Id_Plaza and fecha<fdd.fechaini) is null then 3 else 
(select top 1 id_rel from HTabulador_SE_cm htcm where 
id_plaza=fdd.Id_Plaza and fecha<fdd.fechaini)end,
'''' AS UR,--''R20'' AS UR,
'''' as FECHA,--convert(char(12),c.fechaini,103) as FECHA,
'''' AS CCT,--fid.Centro_Trabajo AS CCT,
'''' AS RFC,--e.RFC, 
'''' AS PRIMER_APELLIDO,--e.ApPaterno AS PRIMER_APELLIDO,
'''' AS SEGUNDO_APELLIDO,--e.ApMaterno AS SEGUNDO_APELLIDO,
'''' AS ''NOMBRE(S)'' ,--e.Nombre AS ''NOMBRE(S)'',
'''' AS NACIONALIDAD,--right(''00'' + cast(tnac.Id_Nacionalidad as varchar(max)),3) AS NACIONALIDAD,
'''' AS PAIS_NAC,--PAIS_NAC=Case when tp.Descr=''MEXICO'' then 141 else 0 end,         
'''' AS ENTIDAD_NAC,/*ENTIDAD_NAC=Case  substring(e.curp,12,2)
            when ''AS'' then 1 
            when ''BC'' then 2 
            when ''BS'' then 3 
            when ''CC'' then 4 
            when ''CS'' then 5
            when ''CM'' then 6 
            when ''CL'' then 7 
            when ''CH'' then 8 
            when ''DF'' then 9
            when ''DG'' then 10
            when ''GT'' then 11
            when ''GR'' then 12
            when ''HG'' then 13
            when ''JC'' then 14 
            when ''MC'' then 15 
            when ''MN'' then 16
            when ''MS'' then 17 
            when ''NT'' then 18 
            when ''NL'' then 19
            when ''OC'' then 20
            when ''PL'' then 21 
            when ''QT'' then 22
            when ''QR'' then 23 
            when ''SP'' then 24 
            when ''SL'' then 25
            when ''SR'' then 26
            when ''TC'' then 27
            when ''TS'' then 28
            when ''TL'' then 29
            when ''VZ'' then 30
            when ''YN'' then 31
            when ''ZS'' then 32
            else 0 end,*/
'''' AS MUNICIPIO_NAC,--MUNICIPIO_NAC= Case when e.Id_MunicipioNac is null then 0 else tc.Id_Ciudad end,
'''' AS SEXO,--e.SEXO,
'''' AS EDO_CIVIL,/*EDO_CIVIL= Case when e.edocivil=''C'' then ''02'' else 
		   Case when e.edocivil=''S'' then ''01'' else ''01'' end end,*/
'''' AS CALLE_Y_NUM,--CALLE_Y_NUM= Case when hd.Calle is null then '''' else cast(hd.calle as varchar(max))+ '' ''+ CAST(hd.numext as varchar (10)) end,
'''' AS CP,--CP= Case when hd.CodPostal is null then '''' else hd.CodPostal end,
'''' AS COLONIA,--COLONIA= Case when hd.Id_Colonia = 0 or hd.Id_Colonia is null then '''' else tcol.DESCR end,
'''' AS ENTIDAD,--ENTIDAD=Case when e.Id_EstadoNac is null then ''S/A'' else case when e.Id_EstadoNac<=32 then substring(te.descr,4,50) else te.descr end end,
'''' AS MUNICIPIO,--MUNICIPIO= Case when e.Id_MunicipioNac is null then '''' else upper(tc.Descr) end,
'''' AS LOCALIDAD,--LOCALIDAD=Case when hd.Id_Localidad = 0 or hd.Id_Colonia is null then '''' else tloc.Descr end,
'''' AS NIV_MAX_ESTUD,
--ING_GOB_FED= case when hfagf.fecha is null then '''' else dbo.fechatoanioquincena(hfagf.fecha) end,
'''' ING_GOB_FED,
--ING_SEP= case when hfas.fecha is null then '''' else dbo.fechatoanioquincena(hfas.fecha) end,
'''' AS ING_SEP,
--ING_RAMA= case when hfar.fecha is null then '''' else dbo.fechatoanioquincena(hfar.fecha) end,
'''' ING_RAMA,
'''' as TIPO_LIC,	
'''' as QUINQ_DOC,	
'''' as QUINQ_ADM	,
'''' as GRADO_LIC,	
'''' as TITULACIÓN,
--HORARIO=Case when rt.id_nodo is null then '''' else tt.descripcion end,
'''' AS HORARIO,
--ftm.Clave as MOVIMIENTO,	
'''' as MOVIMIENTO,
--ftm.Descripcion as DESC_MOVIMIENTO,	
'''' as DESC_MOVIMIENTO,
--fmm.Clave as MOTIVO,
'''' as MOTIVO,	
--fmm.Descripcion as DESC_MOTIVO,
'''' as DESC_MOTIVO,
Convert(varchar(10), fdd.Fechaini, 103) as FECHA_INI, 
FECHA_FIN= case when dbo.fechaToAnioQuincena(fdd.fechaini)=dbo.fechaToAnioQuincena(fdd.fechafin) then Convert(varchar(10), ''00/00/0000'', 103)  else Convert(varchar(10), fdd.FechaFin, 103) end,
'''' as CONCEPTOS_PAGO,
'''' AS REGIMEN
--convert(char(12),c.fechaini,103) as FECHA
from fup_documentos fd
inner join empleados e on fd.Id_Emp = e.Id_Emp
inner join fup_documento_detalle fdd on fd.Id_Documento = fdd.Id_Documento
inner join plazas p on fdd.Id_Plaza = p.Id_plaza
inner join plazaieepo pi on fdd.Id_Plaza = pi.Id_plaza
inner join (select id_plaza,MAX(fecha) fecha
from HTabulador_SE_cm htcm
group by id_plaza
) nc on pi.Id_plaza=nc.id_plaza
inner join HTabulador_SE_CM htcm on htcm.id_plaza=nc.id_plaza and htcm.fecha=nc.fecha
inner join TTabulador_SE_CM ttcm on htcm.id_rel=ttcm.id_Tabulador_SE_CM
inner join usuarios u on fd.Id_Usuario = u.Id_Usuario
inner join FUP_Informacion_Documentos fid on fd.Id_Documento = fid.Id_Documento
inner join CalenNomina c on fid.Id_Periodo = c.Id_Periodo
inner join FUP_MotivoMovimiento fmm on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
inner join FUP_TipoMovimiento ftm on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
inner join tniveleducativo tn on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
inner join TNacionalidad tnac on e.Id_Nacionalidad=tnac.Id_Nacionalidad
inner join TPais tp on tnac.Id_Nacionalidad=tp.Id_Pais
left join TEstados te on e.Id_EstadoNac = te.Id_Estado
left join tciudad tc on e.Id_EstadoNac=te.Id_Estado and tc.Id_Ciudad=e.Id_MunicipioNac
left join (select id_emp,MAX(movimiento) fecha
from hdomicilio 
group by id_emp
) hdoc on e.Id_emp=hdoc.id_emp
left join HDomicilio hd on hd.id_emp=hdoc.id_emp and hdoc.fecha=hd.Movimiento
left join tcolonia tcol on hd.Id_Colonia=tcol.Id_Colonia
left join TLocalidad tloc on hd.Id_Localidad=tloc.id_Localidad
left join (select id_emp,MAX(fecha_alta_gob_fed) fecha
from HFecha_Alta_Gob_Fed group by id_emp
) hfagf on e.Id_Emp=hfagf.id_emp
left join (select id_emp,MAX(fecha_alta_sep) fecha
from HFecha_Alta_sep group by id_emp
) hfas on e.Id_Emp=hfas.id_emp
left join (select id_emp,MAX(fecha_alta_rama) fecha
from HFecha_Alta_rama group by id_emp
) hfar on e.Id_Emp=hfar.id_emp
inner join VistaTablaLongitud vt on fid.Centro_Trabajo=vt.clave
inner join RCT_Turno rt on vt.Id_Nodo=rt.id_nodo
inner join TCT_Turno tt on rt.id_rel=tt.id_CT_Turno
where fid.Id_Periodo in (select id_periodo from calennomina where Numero in (@quincena)
and Id_cia=@id_cia --and Leyenda10=''CFUP'' 
and Año=@año and parcial<> 0
union all 
select id_periodo from calennomina where Numero in (@quincena+1)
and Id_cia=@id_cia --and Leyenda10=''CFUP'' 
and Año=@año and parcial= 0) and e.id_cia=@id_cia and fd.Id_Estatus =2 and fd.folio not in (select folio_n from HFolio_verificado)
and ftm.Id_TipoMovimiento in (43) and fmm.Id_MotivoMovimiento=316
and fd.observaciones not like ''%verificado%'' and fd.Observaciones not like ''%procesado%''
order by  id_operacion,ftm.clave,fmm.clave
end'
GO

GO
PRINT N'Creating [pagos].[ComparacionPagosIEEPO_MEXICO_]'
GO
IF OBJECT_ID(N'[pagos].[ComparacionPagosIEEPO_MEXICO_]', 'P') IS NULL
EXEC sp_executesql N'
--
--exec [PAGOS_FEDERACION_BASEFEDE] 2,112637,0,'''',1,121,'''','''',0,'''';
--exec [PAGOS_FEDERACION_BASEFEDE] 2,112637,114530,''201705'',2,121,''20DTV0553J'',''Deposito'',6660.00,''078779E2781300203911''
--exec [Pagos].[ComparacionPagosIEEPO_MEXICO] 37361, 88461
--select * from empleados where rfc =''LOHE781215RJ6''
CREATE procedure [pagos].[ComparacionPagosIEEPO_MEXICO_]--[PAGOS_FEDERACION_Pruebas] /*PRODUCCION*/
@idEmp int,
@idPlaza int,
@row int
AS
--select * from empleados where rfc like ''GACC741225HG7''
--select * from PlazaIEEPO where plazaieepo = ''078729 E1485000200056''
--drop table #PagosMexico; drop table #PagosCalculados;

--declare @idEmp int;
--set @idEmp = 55129;
--declare @idPlaza int;
--set @idPlaza = 51813;
--select * from CalenNomina where Id_Periodo=1074;
--select * from nom_pagos_hist where Id_Periodo=1074 and id_emp =@idEmp and id_plaza=@idPlaza;
 ;WITH tmpvectores AS ( 
 Select  Vectores.id_Vector, Vectores.id_Emp, Vectores.id_Plaza, hist.fecha,Vectores.id_Periodo_aplicacion,Vectores.id_periodo 
 from HVectores Vectores with(nolock) 
 join (  
       Select id_Emp, id_Plaza, id_Periodo_aplicacion, max(fecha) as fecha from HVectores with(nolock) 
 where fecha <= getDate() and id_plaza = @idPlaza and id_emp=@idEmp group by id_Emp, id_Plaza, id_Periodo_aplicacion 
 ) Hist on Vectores.id_emp = Hist.id_emp and Vectores.id_Plaza = Hist.id_Plaza and Vectores.id_Periodo_aplicacion = Hist.id_Periodo_aplicacion and Vectores.fecha = Hist.Fecha  
 left join (select * from nom_Pagos_hist n with(nolock) where id_plaza = @idPlaza and id_emp=@idEmp
)n on n.id_emp = Vectores.id_emp and Vectores.id_plaza =n.id_plaza and Vectores.id_periodo_aplicacion = n.id_periodopago and Vectores.id_periodo=n.id_periodo 
 and vectores.id_referencia = n.id_referencia and vectores.id_procesonomina = n.id_procesonomina 
 Union All 
 Select  Vectores.id_Vector, Vectores.id_Emp, Vectores.id_Plaza, hist.fecha,Vectores.id_Periodo_aplicacion,Vectores.id_periodo 
 from HVectores Vectores with(nolock) 
 join (  
       Select id_Emp, id_Plaza, id_Periodo_aplicacion, max(fecha) as fecha from HVectores with(nolock) 
 where fecha <= getDate() and id_plaza = @idPlaza and id_emp=@idEmp group by id_Emp, id_Plaza, id_Periodo_aplicacion 
 ) Hist on Vectores.id_emp = Hist.id_emp and Vectores.id_Plaza = Hist.id_Plaza and Vectores.id_Periodo_aplicacion = Hist.id_Periodo_aplicacion and Vectores.fecha = Hist.Fecha  
 left join (select * from nom_histpagos n with(nolock) where id_plaza = @idPlaza and id_emp=@idEmp
)n on n.id_emp = Vectores.id_emp and Vectores.id_plaza =n.id_plaza and Vectores.id_periodo_aplicacion = n.id_periodopago and Vectores.id_periodo=n.id_periodo 
 and vectores.id_referencia = n.id_referencia and vectores.id_procesonomina = n.id_procesonomina 
 Union All 
 Select  Vectores.id_Vector, Vectores.id_Emp, Vectores.id_Plaza, hist.fecha,Vectores.id_Periodo_aplicacion,Vectores.id_periodo 
 from HVectores Vectores with(nolock) 
 join (  
       Select id_Emp, id_Plaza, id_Periodo_aplicacion, max(fecha) as fecha from HVectores with(nolock) 
 where fecha <= getDate() and id_plaza = @idPlaza and id_emp=@idEmp group by id_Emp, id_Plaza, id_Periodo_aplicacion 
 ) Hist on Vectores.id_emp = Hist.id_emp and Vectores.id_Plaza = Hist.id_Plaza and Vectores.id_Periodo_aplicacion = Hist.id_Periodo_aplicacion and Vectores.fecha = Hist.Fecha  
 left join (select * from nom_Pagos_hist n with(nolock) where id_plaza = @idPlaza and id_emp=@idEmp
)n on n.id_emp = Vectores.id_emp and Vectores.id_plaza =n.id_plaza and Vectores.id_periodo_aplicacion = n.id_periodopago and Vectores.id_periodo=n.id_periodo 
 and vectores.id_referencia = n.id_referencia and vectores.id_procesonomina = n.id_procesonomina 
 ), 
 tmpHistPagos as (  Select id_emp,id_periodo,id_concepto,consecutivo,horas,pesos,fecha,pesosexcento, 
 c_costo,id_plaza,id_referencia,id_periodopago,id_procesonomina,desde,hasta  from histpagos with(nolock) where id_emp = @idEmp
 and id_plaza = @idPlaza union all 
 Select id_emp,id_periodo,id_concepto,consecutivo,horas,pesos,fecha,pesosexcento, cc,id_plaza,id_referencia,id_periodopago,id_procesonomina,desde,hasta  from nom_HistPagos with(nolock) where id_emp = @idEmp and id_plaza = @idPlaza
 union all
 Select id_emp,id_periodo,id_concepto,consecutivo,horas,pesos,fecha,pesosexcento, cc,id_plaza,id_referencia,id_periodopago,id_procesonomina,desde,hasta  from nom_Pagos_hist with(nolock) where id_emp = @idEmp and id_plaza = @idPlaza )

 Select  id = ROW_NUMBER() OVER (ORDER BY numcheque),idperiodo,case when numQuincena is null then quinavector when numQuincena is not null then numQuincena end numQuincena, numCheque, 
 tipoPago, Ingresos, desde,hasta,Pagos.id_plaza,pagos.id_emp 
into  #PagosCalculados
FROM ( 
Select distinct  CalenNomina.FechaPago,CalenNomina.id_periodo as idPeriodo, dbo.fechaToAnioQuincena(HistVectores.fecha) as quinaVector,   
cast(CalenNomina.Año as varchar(4)) + right(''00'' + cast(CalenNomina.numero as varchar(2)), 2) as numQuincena, 
HistorialPagos.folio as numCheque, 
Upper(CalenNomina.TituloPeriodo) as tipoPago, 
  isnull(case when calennomina.parcial < 20 then dbo.fechaToAnioQuincena(calennomina.fechaini) else 
  (  
--  case when (
--Select min(desde) 
-- from tmpHistPagos NH with(nolock) 
-- INNER JOIN conceptos CP with(nolock) ON CP.id_concepto=NH.id_concepto   
-- left join Folio_Recibos with(nolock) on Folio_Recibos.id_periodo = NH.id_periodo  
-- and Folio_Recibos.id_emp = NH.id_emp  
-- and Folio_Recibos.id_plaza = NH.id_plaza  
-- AND Folio_Recibos.id_referencia=NH.id_referencia  
-- AND Folio_Recibos.id_procesoNomina=NH.id_procesoNomina  
-- AND Folio_Recibos.id_periodo =NH.id_periodo   
-- where NH.id_emp = @idEmp 
-- and NH.id_plaza= @idPlaza 
-- and NH.id_periodo=  HistorialPagos.id_periodo 
-- AND Folio_Recibos.folio= HistorialPagos.folio 
-- AND CP.tipo IN (1,2)  
-- AND NH.pesos>0  
-- AND isnull(Folio_Recibos.id_recibo,16) IN (SELECT idrecibo  
-- FROM Trecibos with(nolock) 
-- WHERE id_listasraya = 1 AND idrecibo not in (5,18))  
-- ) is null then (Select min(desde) 
-- from tmpHistPagos NH with(nolock) 
-- INNER JOIN conceptos CP with(nolock) ON CP.id_concepto=NH.id_concepto  
-- where NH.id_emp = @idEmp 
-- and NH.id_plaza= @idPlaza 
-- and NH.id_periodo=  HistorialPagos.id_periodo 
-- AND CP.tipo IN (1)  
-- AND NH.pesos>0   
-- ) end 
  
--  ) end,'''') as desde,

Select min(desde) 
from tmpHistPagos NH with(nolock) 
             INNER JOIN conceptos CP with(nolock) ON CP.id_concepto=NH.id_concepto   
             left join Folio_Recibos with(nolock) on Folio_Recibos.id_periodo = NH.id_periodo  
             and Folio_Recibos.id_emp = NH.id_emp  
             and Folio_Recibos.id_plaza = NH.id_plaza  
             AND Folio_Recibos.id_referencia=NH.id_referencia  
             AND Folio_Recibos.id_procesoNomina=NH.id_procesoNomina  
             AND Folio_Recibos.id_periodo =NH.id_periodo   
             where NH.id_emp = @idEmp
             and NH.id_plaza= @idPlaza
             and NH.id_periodo=  HistorialPagos.id_periodo 
             AND Folio_Recibos.folio= HistorialPagos.folio 
             AND CP.tipo IN (1,2)  
             AND NH.pesos>0  
             AND isnull(Folio_Recibos.id_recibo,16) IN (SELECT idrecibo  
             FROM Trecibos with(nolock) 
             WHERE id_listasraya = 1 AND idrecibo not in (5,18))  
             ) end,'''') as desde,

 isnull(case when calennomina.parcial < 20 then dbo.fechaToAnioQuincena(calennomina.fechafin) else 
 ( 
 --case when (
 --Select max(hasta) 
 --from tmpHistPagos NH with(nolock) 
 --INNER JOIN conceptos CP with(nolock) ON CP.id_concepto=NH.id_concepto   
 --left join Folio_Recibos with(nolock) on Folio_Recibos.id_periodo = NH.id_periodo  
 --and Folio_Recibos.id_emp = NH.id_emp  
 --and Folio_Recibos.id_plaza = NH.id_plaza  
 --AND Folio_Recibos.id_referencia=NH.id_referencia  
 --AND Folio_Recibos.id_procesoNomina=NH.id_procesoNomina  
 --AND Folio_Recibos.id_periodo =NH.id_periodo   
 --where NH.id_emp = @idEmp  
 --and hasta not like ''9999%''
 --and NH.id_plaza= @idPlaza 
 --and NH.id_periodo=  HistorialPagos.id_periodo 
 --AND Folio_Recibos.folio= HistorialPagos.folio 
 --AND CP.tipo IN (1,2)  
 --AND isnull(Folio_Recibos.id_recibo,16) IN (SELECT idrecibo  
 --FROM Trecibos with(nolock) 
 --WHERE id_listasraya = 1 AND idrecibo not in (5,18,20))  
 --) is null then (Select max(hasta) 
 --from tmpHistPagos NH with(nolock) 
 --INNER JOIN conceptos CP with(nolock) ON CP.id_concepto=NH.id_concepto  
 --where NH.id_emp = @idEmp 
 --and NH.id_plaza= @idPlaza 
 --and NH.id_periodo=  HistorialPagos.id_periodo 
 --AND CP.tipo IN (1)  
 --AND NH.pesos>0   
 --) end ) end,'''') as hasta,
 
 Select max(hasta) 
             from tmpHistPagos NH with(nolock) 
             INNER JOIN conceptos CP with(nolock) ON CP.id_concepto=NH.id_concepto   
             left join Folio_Recibos with(nolock) on Folio_Recibos.id_periodo = NH.id_periodo  
             and Folio_Recibos.id_emp = NH.id_emp  
             and Folio_Recibos.id_plaza = NH.id_plaza  
             AND Folio_Recibos.id_referencia=NH.id_referencia  
             AND Folio_Recibos.id_procesoNomina=NH.id_procesoNomina  
             AND Folio_Recibos.id_periodo =NH.id_periodo   
             where NH.id_emp = @idemp
             and hasta not like ''9999%''
             and NH.id_plaza= @idplaza
             and NH.id_periodo=  HistorialPagos.id_periodo 
             AND Folio_Recibos.folio= HistorialPagos.folio 
             AND CP.tipo IN (1,2)  
             AND isnull(Folio_Recibos.id_recibo,16) IN (SELECT idrecibo  
             FROM Trecibos with(nolock) 
             WHERE id_listasraya = 1 AND idrecibo not in (5,18,20))  
             ) end,'''') as hasta,
HistorialPagos.Ingresos, Upper(TVectores.Descripcion) as Vector,CalenNomina.FechaFin 
 , HistVectores.id_Vector,HistorialPagos.id_plaza,HistorialPagos.id_emp 
from ( 
  Select id_periodo, max(id_emp) as id_emp, id_plaza as id_plaza, sum(percepciones) - sum(deducciones) as Ingresos, folio, id_procesoNomina 
  from ( 
      Select tmpHistPagos.id_periodo, tmpHistPagos.id_emp, tmpHistPagos.id_plaza, tmpHistPagos.desde, 
      case when Conceptos.tipo = 1 then pesos else 0 end as percepciones, 
      case when Conceptos.tipo = 2 then pesos else 0 end as deducciones, 
      Folio_Recibos.folio ,tmpHistPagos.id_referencia,tmpHistPagos.id_procesoNomina 
      from tmpHistPagos with(nolock)
      inner join Conceptos with(nolock) on Conceptos.id_concepto = tmpHistPagos.id_concepto 
      left join Folio_Recibos with(nolock) on Folio_Recibos.id_periodo = tmpHistPagos.id_periodo and Folio_Recibos.id_emp = tmpHistPagos.id_emp and Folio_Recibos.id_plaza = tmpHistPagos.id_plaza 
      AND Folio_Recibos.id_referencia=tmpHistPagos.id_referencia AND Folio_Recibos.id_procesoNomina=tmpHistPagos.id_procesoNomina 
      where tmpHistPagos.id_emp = @idEmp And tmpHistPagos.id_plaza = @idPlaza 
              AND isnull(Folio_Recibos.id_recibo,16) IN (SELECT idrecibo  
                                              FROM Trecibos with(nolock) 
                                              WHERE id_listasraya = 1 AND idrecibo not in (5,18,20)) 
              AND Conceptos.tipo IN (1,2) 
  ) Ingresos group by id_Periodo, id_plaza, folio, id_referencia, id_procesoNomina
) HistorialPagos 
inner join CalenNomina with(nolock) on CalenNomina.id_periodo = HistorialPagos.id_periodo 
inner join PlazaIEEPO with(nolock) on PlazaIEEPO.id_Plaza = HistorialPagos.id_plaza 
full join ( 
  Select min(id_vector)id_vector,id_Emp,id_Plaza,fecha,id_Periodo_aplicacion FROM ( 
      Select Vectores.id_Vector, Vectores.id_Emp, Vectores.id_Plaza, Vectores.id_Periodo,hist.fecha,Vectores.id_Periodo_aplicacion from HVectores Vectores with(nolock)
      inner join ( 
          Select id_Emp, id_Plaza, id_Periodo_aplicacion, max(fecha) as fecha from HVectores with(nolock)
          where fecha <= getDate()  and id_plaza= @idPlaza and id_emp=@idEmp group by id_Emp, id_Plaza, id_Periodo_aplicacion 
      ) Hist on Vectores.id_emp = Hist.id_emp and Vectores.id_Plaza = Hist.id_Plaza and Vectores.id_Periodo_aplicacion = Hist.id_Periodo_aplicacion and Vectores.fecha = Hist.Fecha 
 ) a group by id_Emp,id_Plaza,fecha,id_Periodo_aplicacion 
) HistVectores on HistVectores.id_emp = HistorialPagos.id_emp and HistVectores.id_Plaza = PlazaIEEPO.id_Plaza  and HistVectores.id_Periodo_aplicacion = CalenNomina.id_periodo  
left join TVectores with(nolock) on HistVectores.id_Vector = TVectores.id_Vectores 
) Pagos 
 Left Join 
 ( 
 Select id_Emp,id_Plaza,fecha,id_Periodo_aplicacion, cast ( 
 STUFF((select '' ''+cast(id_Vector as varchar(100))  from tmpvectores s1  
 where(s1.id_emp = a.id_emp And s1.id_Plaza = a.id_Plaza And s1.id_Periodo_aplicacion = a.id_Periodo_aplicacion) 
 FOR XML path('''')),1,1,'''' ) as varchar(max)) as trailer 
 from tmpvectores a with(nolock) group by id_Emp,id_Plaza,fecha,id_Periodo_aplicacion 
 ) a on a.id_plaza=Pagos.id_plaza and Pagos.id_emp = a.id_emp and a.id_periodo_aplicacion= idperiodo  
WHERE 1=1 and idperiodo is not null
order by Pagos.numQuincena desc


SELECT *, replace(PERIODO,''/'','''')qna
into #PagosMexico
FROM (
--select *,''Pagos_1_3_2015''archivo from pagos.Pagos_1_3_2015 WHERE id_emp = @idEmp and id_plaza= @idPlaza
--UNION ALL 
--select *,''Pagos_4_6_2015''archivo from pagos.Pagos_4_6_2015 WHERE id_emp = @idEmp and id_plaza=@idPlaza
--UNION ALL    
--select *,''Pagos_7_9_2015''archivo from pagos.Pagos_7_9_2015 WHERE id_emp = @idEmp and id_plaza=@idPlaza
--UNION ALL 
--select *,''Pagos_10_12_2015''archivo from pagos.Pagos_10_12_2015 WHERE id_emp = @idEmp and id_plaza=@idPlaza
--UNION ALL 
select *,''Pagos_1_3_2016''archivo from pagos.Pagos_1_3_2016 WHERE id_emp = @idEmp and id_plaza=@idPlaza
UNION ALL 
Select *,''Pagos_4_6_2016''archivo from pagos.Pagos_4_6_2016 WHERE id_emp = @idEmp and id_plaza=@idPlaza
UNION ALL 
select *,''Pagos_7_9_2016''archivo from pagos.Pagos_7_9_2016 WHERE id_emp = @idEmp and id_plaza=@idPlaza
UNION ALL 
select *,''Pagos_10_12_2016''archivo from pagos.Pagos_10_12_2016 WHERE id_emp = @idEmp and id_plaza=@idPlaza
)A

--select SUM(importe_neto) from #PagosMexico
--select SUM(ingresos) from #PagosCalculados where (numQuincena >= 201500 or (numQuincena=201424 and tipoPago like ''%AG%'')) and numQuincena<= 201625

select quincenas,numCheque,tipoPago,Ingresos,desde,hasta,num_comprobante,importe_neto,forma_pago,rfc,curp,clave_plaza,dbo.fechatoañoqna(FECHA_PAGO)FECHA_PAGO,dbo.fechatoañoqna(FECHA_INICIO)FECHA_INICIO,dbo.fechatoañoqna(FECHA_TERMINO)FECHA_TERMINO,idEmp,idPlaza
into #informacionPagos 
from (
select case when numQuincen IS null then qna when qna is null then numQuincen else numQuincen end quincenas ,
c.*,m.num_comprobante,importe_neto,case when m.clabe_banco is null and num_comprobante IS not null then ''CHEQUE'' else m.clabe_banco end forma_pago,m.qna,
rfc,curp,clave_plaza,FECHA_PAGO,FECHA_INICIO,FECHA_TERMINO,case when c.id_emp IS null then m.id_emp else c.id_emp end idEmp,case when c.id_plaza IS null then m.id_plaza else c.id_plaza end idPlaza
from 
	(
		select * from (
		select *,--CaSe when numQuincena in (''201424'',''201501'') and tipoPago like ''%AG%'' then 201500 
				--when numQuincena = ''201422'' and tipoPago like ''%AG%'' then 201425 
				--when numQuincena in (''201524'',''201601'') and tipoPago like ''%AG%'' then 201600 
				--when numQuincena = ''201522'' and tipoPago like ''%AG%'' then 201525 
				case when numQuincena in(''201624'') and tipoPago like ''%AG%'' then 201600 
				when numQuincena in (''201622'',''201621'') and tipoPago like ''%AG%'' then 201525 				
				else  numQuincena 
			end numQuincen 
		from #PagosCalculados 
		)a 
		where numQuincen >= 201600 
	) c 
	full join 
	(select * 
		from #PagosMexico 
		where (qna>= 201600 and qna<= 201625 ) and qna not in (201519,201520,201521,201522,201523,201524,201525)
	) m
on c.id_emp = m.id_emp and c.id_plaza=m.id_plaza and c.numQuincen=m.qna and cast(c.ingresos as decimal(9,2))=cast(importe_neto as decimal(9,2))
) a order by quincenas

insert into Pagos.PagosIeepoMexico_
select @row,* from #informacionPagos order by quincenas;


--select * from Pagos.PagosIeepoMexico_ order by row



'
GO

GO
PRINT N'Creating [dbo].[spc_AnalizahcontinuidadAguinaldo]'
GO
IF OBJECT_ID(N'[dbo].[spc_AnalizahcontinuidadAguinaldo]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[spc_AnalizahcontinuidadAguinaldo]
@Qna varchar(6), @idEmp varchar(MAX), @id_cia int
WITH EXEC AS CALLER
AS
begin                  
 
DECLARE @Xml AS XML  
SET @Xml = ''<empleado>'' + REPLACE(@idEmp, '','', ''</empleado><empleado>'') + ''</empleado>'';                 
                    
declare @Qnaanterior as varchar(6)                  
set @Qnaanterior = case when right(@qna,2) = ''01'' then cast(cast(@Qna as int) -77 as varchar) else cast(cast(@Qna as int) -1 as varchar) end                  



if @idEmp = ''0''
begin

-- para todos los empleados

update Hcontinuidad set ContinuidadAguinaldo = ''      ''
from Hcontinuidad with(nolock) inner join Empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where añoqna = @Qna 
--and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End                    
and e.id_cia = @id_cia

--primero actualizo la continuidad de las plazas que no tienen plazaanterior ,que ya se pagaron la quincena pasada y siguen igual          
-- en tipo, status y categoria          
update Hcontinuidad set Hcontinuidad.ContinuidadAguinaldo = b.ContinuidadAguinaldo                   
from Hcontinuidad with(nolock) inner join ( Select * from Hcontinuidad  with(nolock) where añoqna = @Qnaanterior) B                  
on Hcontinuidad.id_emp = b.id_emp and Hcontinuidad.id_plaza = b.id_plaza 
inner join Empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where Hcontinuidad.añoqna = @Qna and Hcontinuidad.id_plazaanterior = '''' and          
Hcontinuidad.statusplaza = b.statusplaza and Hcontinuidad.tipoplaza = b.tipoplaza and           
Hcontinuidad.categoria = b.categoria 
--and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End             
and e.id_cia = @id_cia

--actualizo la continuidad de las plazas que no tienen plazaanterior (o es la misma ),que ya se pagaron la quincena pasada y cambiaron          
-- cierto tipo o status ( proporcionados por ellos ) que no deberia de cambiar continuidad          
update Hcontinuidad set Hcontinuidad.ContinuidadAguinaldo = b.ContinuidadAguinaldo                   
from Hcontinuidad with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on Hcontinuidad.id_emp = b.id_emp and Hcontinuidad.id_plaza = b.id_plaza   
inner join Empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where Hcontinuidad.añoqna = @Qna and  Hcontinuidad.ContinuidadAguinaldo = '''' and       
(Hcontinuidad.id_plazaanterior = cast(b.id_plaza as varchar) or Hcontinuidad.id_plazaanterior = '''' ) and          
((Hcontinuidad.statusplaza = 10 and Hcontinuidad.tipoplaza  in (44,48) ) or      
(Hcontinuidad.statusplaza = 14 and Hcontinuidad.tipoplaza  = 44 ) or       
(Hcontinuidad.statusplaza = 15 and Hcontinuidad.tipoplaza  = 48 ) or      
(Hcontinuidad.statusplaza = 11 and Hcontinuidad.tipoplaza  = 44 ) ) 
--and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End            
and e.id_cia = @id_cia

--Si la plaza aun tiene ContinuidadAguinaldo vacio Y NO TIENE ID_PLAZAANTERIOR                  
--significa que la plaza es nueva, asi que la continuidad empieza a partir de este momento                  
Update Hcontinuidad set Hcontinuidad.ContinuidadAguinaldo = Hcontinuidad.añoqna  
from Hcontinuidad with(nolock) inner join Empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where Hcontinuidad.añoqna = @Qna and Hcontinuidad.ContinuidadAguinaldo = ''''                   
and Hcontinuidad.id_plazaanterior = '''' 
--and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End                           
and e.id_cia = @id_cia

--Si la plaza tiene en plaza anterior LA MISMA PLAZA                   
--y el status01/tipoplaza95  en la plazaanterior de la qna pasada                  
--y un status01/tipoplaza10 en la plazaactual                  
--eso significa que le dieron definitivamente la plaza y debe mantener continuidad                  
update Hcontinuidad set Hcontinuidad.ContinuidadAguinaldo = b.ContinuidadAguinaldo                   
from Hcontinuidad with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on Hcontinuidad.id_emp = b.id_emp and b.id_plaza=Hcontinuidad.id_plaza   
inner join Empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where Hcontinuidad.añoqna = @Qna and (Hcontinuidad.id_plazaanterior = cast(Hcontinuidad.id_plaza as varchar) or Hcontinuidad.id_plazaanterior = ''''  )                
and Hcontinuidad.statusplaza = 01 and  Hcontinuidad.tipoplaza = 10                  
and b.statusplaza = 01 and  b.tipoplaza = 95  
--and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End                          
and e.id_cia = @id_cia
                  
--Si la plaza tiene en plaza anterior LA MISMA PLAZA                   
--y no cambia ni el tipo,ni el status,ni lacategoria                  
--eso significa que debe mantener continuidad                  
update Hcontinuidad set Hcontinuidad.ContinuidadAguinaldo = b.ContinuidadAguinaldo                   
from Hcontinuidad with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on Hcontinuidad.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + Hcontinuidad.id_plazaanterior + '','') <> 0   
inner join Empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where Hcontinuidad.añoqna = @Qna and charindex('',''+ ltrim(rtrim(cast(hcontinuidad.id_plaza  as varchar))) + '','','','' + Hcontinuidad.id_plazaanterior + '','') <> 0            
and Hcontinuidad.statusplaza = b.statusplaza and  Hcontinuidad.tipoplaza = b.tipoplaza                  
and Hcontinuidad.categoria = b.categoria  
-- and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End                           
and e.id_cia = @id_cia

--Si la plaza NO tiene en plaza anterior                   
--y un status14/tipoplaza41-42-43-49 ó status06/tipoplaza51-52-53 en la plazaactual                 
--eso significa que debe perder continuidad                  
update Hcontinuidad set Hcontinuidad.ContinuidadAguinaldo = añoQna  
from Hcontinuidad with(nolock) inner join Empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where ((Hcontinuidad.statusplaza = 14 and Hcontinuidad.tipoplaza in (41,42,43,49)) or                 
(Hcontinuidad.statusplaza = 06 and Hcontinuidad.tipoplaza in (51,52,53)))                
 and Hcontinuidad.añoqna = @Qna  
-- and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End                        
and e.id_cia = @id_cia

--Si en la qna anterior                 
--el status14/tipoplaza41-42-43-49 ó status06/tipoplaza51-52-53  en la plazaanterior de la qna pasada                  
--y un status01/tipoplaza95 en la plazaactual                 
--eso significa viene regresando de una licencia   y debe iniciar la continuidad                  
update Hcontinuidad set Hcontinuidad.ContinuidadAguinaldo = Hcontinuidad.añoQna                 
from Hcontinuidad with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on Hcontinuidad.id_emp = b.id_emp and Hcontinuidad.id_plaza = b.id_plaza
inner join Empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where Hcontinuidad.añoqna = @Qna and                
((b.statusplaza = 14 and b.tipoplaza in (41,42,43,49)) or                 
(b.statusplaza = 06 and b.tipoplaza in (51,52,53)))                  
and Hcontinuidad.statusplaza = 01 and  Hcontinuidad.tipoplaza = 95  
-- and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End                          
and e.id_cia = @id_cia

--Si tiene PLAZAANTERIOR pero el status y el motivo es el mismo que el actual            
--debe de tomar la continuidad de la plaza anterior            
update Hcontinuidad set Hcontinuidad.ContinuidadAguinaldo = b.ContinuidadAguinaldo                   
from Hcontinuidad with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on Hcontinuidad.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + Hcontinuidad.id_plazaanterior + '','') <> 0 
inner join Empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where Hcontinuidad.añoqna = @Qna and Hcontinuidad.id_plazaanterior <> ''''            
and Hcontinuidad.tipoplaza = b.tipoplaza and Hcontinuidad.statusplaza = b.statusplaza  
-- and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End             
and e.id_cia = @id_cia

--Si tiene PLAZAANTERIOR pero el status y el motivo de la nueva es 01-10            
-- y el status y motivo de la anterior es 01-95            
--debe de tomar la continuidad de la plaza anterior            
update Hcontinuidad set Hcontinuidad.ContinuidadAguinaldo = b.ContinuidadAguinaldo                   
from Hcontinuidad with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B               
on Hcontinuidad.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + Hcontinuidad.id_plazaanterior + '','') <> 0            
inner join Empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where Hcontinuidad.añoqna = @Qna and Hcontinuidad.id_plazaanterior <> ''''            
and ((Hcontinuidad.tipoplaza = 10 and Hcontinuidad.statusplaza = 01 and b.tipoplaza = 95 and b.statusplaza = 01) or      
(Hcontinuidad.tipoplaza = 95 and Hcontinuidad.statusplaza = 01 and b.tipoplaza = 10 and b.statusplaza = 01) )   
-- and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End       
and e.id_cia = @id_cia      
-------------------------------------------         
--Si la plaza tiene en plaza anterior LA MISMA PLAZA                   
--y el status10,11,14,15/tipoplaza44,48  en la plazaanterior de la qna pasada                  
--y un status01/tipoplaza10,95 en la plazaactual                  
--eso significa que le dieron definitivamente la plaza y debe mantener continuidad                  
--update Hcontinuidad set Hcontinuidad.ContinuidadAguinaldo = b.ContinuidadAguinaldo                   
--from Hcontinuidad inner join ( Select * from Hcontinuidad where añoqna = @Qnaanterior) B                  
--on Hcontinuidad.id_emp = b.id_emp       
--where Hcontinuidad.añoqna = @Qna and       
--(Hcontinuidad.id_plazaanterior = cast(b.id_plaza as varchar) or Hcontinuidad.id_plazaanterior = '''' )                 
--and Hcontinuidad.statusplaza = 01 and  Hcontinuidad.tipoplaza in (10,95)                  
--and b.statusplaza in (10,11,14,15) and  b.tipoplaza in (44,48)   and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End              
update Hcontinuidad set Hcontinuidad.ContinuidadAguinaldo = b.ContinuidadAguinaldo                   
from Hcontinuidad with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on Hcontinuidad.id_emp = b.id_emp and  Hcontinuidad.id_plaza = b.id_plaza 
inner join Empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where Hcontinuidad.añoqna = @Qna and       
(Hcontinuidad.id_plazaanterior = cast(b.id_plaza as varchar) or Hcontinuidad.id_plazaanterior = '''' )                 
and Hcontinuidad.statusplaza = 01 and  Hcontinuidad.tipoplaza in (10,95)                  
and b.statusplaza in (10,11,14,15) and  b.tipoplaza in (44,48)   
-- and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End           
and e.id_cia = @id_cia 

update Hcontinuidad set Hcontinuidad.ContinuidadAguinaldo = b.ContinuidadAguinaldo                   
from Hcontinuidad with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on Hcontinuidad.id_emp = b.id_emp  
inner join Empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where Hcontinuidad.añoqna = @Qna and       
(Hcontinuidad.id_plazaanterior = cast(b.id_plaza as varchar) or Hcontinuidad.id_plazaanterior = '''' )                 
and Hcontinuidad.statusplaza = 01 and  Hcontinuidad.tipoplaza in (10,95)                  
and b.statusplaza in (10,11,14,15) and  b.tipoplaza in (44,48)   
-- and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End           
and Hcontinuidad.id_emp in (select id_emp from Hcontinuidad where [añoqna] = @Qna and ([ContinuidadAguinaldo] = '''' or [ContinuidadAguinaldo] = ''      ''  ) )
and e.id_cia = @id_cia 

--Si la plaza tiene en plaza anterior LA MISMA PLAZA                   
--y el status03,06/tipoplaza20  en la plazaanterior de la qna pasada                  
--y un status01/tipoplaza10,95 en la plazaactual                  
--eso significa que le dieron definitivamente la plaza y debe mantener continuidad                  
update Hcontinuidad set Hcontinuidad.ContinuidadAguinaldo = b.ContinuidadAguinaldo                   
from Hcontinuidad with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on Hcontinuidad.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + Hcontinuidad.id_plazaanterior + '','') <> 0  
inner join Empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where Hcontinuidad.añoqna = @Qna and Hcontinuidad.id_plazaanterior = cast(Hcontinuidad.id_plaza as varchar)                  
and Hcontinuidad.statusplaza = 01 and  Hcontinuidad.tipoplaza in ( 10 , 95)                 
and b.statusplaza in (03,06) and  b.tipoplaza in (20) 
--and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End                           
and e.id_cia = @id_cia    

----Si la el tipo de plaza es de tipo prorroga
----Select * from ttipoplaza where destipoplaza like ''pró%''
----y el tipoplazapermisoanterior es distino de 48 o 44 entonces debe cortar continuidad
update Hcontinuidad set Hcontinuidad.ContinuidadAguinaldo = Hcontinuidad.añoQna                  
from Hcontinuidad with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on Hcontinuidad.id_emp = b.id_emp 
inner join Empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where Hcontinuidad.añoqna = @Qna                   
and Hcontinuidad.tipoplaza in (Select id_tipoplaza from ttipoplaza where destipoplaza like ''pró%'')
and Hcontinuidad.tipoplazapermisoanterior not in (48,44)
--and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End                           
and e.id_cia = @id_cia 






-- Se agregan casos a cantinuidad 25/10/2016


-- los movimientos 1-96 deben de tomar la cntinuidad de la plaza anterior
update a set a.ContinuidadAguinaldo = b.ContinuidadAguinaldo
from hcontinuidad a  with(nolock)    
inner join ( Select * from Hcontinuidad with(nolock) where añoqna =  @Qnaanterior) b on b.id_emp = a.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0 
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.[añoqna]= @Qna
and a.statusplaza = 01 and a.tipoplaza = 96 and a.id_plazaanterior <> ''''
--and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia    


-- la licencia 88 debe tomar la continuidad anterior 
update a set a.ContinuidadAguinaldo = b.ContinuidadAguinaldo
from Hcontinuidad a with(nolock) 
inner join ( Select * from Hcontinuidad with(nolock) where añoqna =  @Qnaanterior) b on b.id_emp = a.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.[añoqna]= @Qna
and a.statusplaza = 14 and a.tipoplaza = 88 
--and a.Id_emp  in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia 

-- cuando regresa de licencia 88 debe permanecer su continuidad 
update a set a.ContinuidadAguinaldo = b.ContinuidadAguinaldo
from Hcontinuidad a  with(nolock)
inner join ( Select * from Hcontinuidad with(nolock) where añoqna =  @Qnaanterior) b on b.id_emp = a.id_emp and a.id_plaza = b.id_plaza 
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.[añoqna]= @Qna
and a.statusplaza = 01 and a.tipoplaza in (10,95,96) and b.statusplaza = 14 and b.tipoplaza = 88 
--and a.Id_emp  in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
 and e.id_cia = @id_cia 
 
-- cuando entra en licencia o reanudacion y continuia con la lic que cortan
update a set a.ContinuidadAguinaldo = a.añoqna
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((a.statusplaza in ( 14,10) and a.tipoplaza in (41,43,49,40)) or                 
(a.statusplaza in ( 06,10,14) and a.tipoplaza in (51,53)))                  
-- and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia   

 -- licencias y reanudas que cortan
update a set a.ContinuidadAguinaldo = a.añoqna
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 14,10) and b.tipoplaza in (41,43,49,40)) or                 
(b.statusplaza in ( 06,10,14) and b.tipoplaza in (51,53)))                  
and a.statusplaza = 01 and  a.tipoplaza in( 95,10)  
--and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia   


update a set a.ContinuidadAguinaldo = a.añoqna
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 14,10) and b.tipoplaza in (41,43,49,40)) or                 
(b.statusplaza in ( 06,10,14) and b.tipoplaza in (51,53)))                  
and ((a.statusplaza in ( 14,10,15) and a.tipoplaza in (44,42,48)) or                 
(a.statusplaza in ( 14,10) and a.tipoplaza in (52)))
--and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia   

update a set a.ContinuidadAguinaldo = a.añoqna
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 14,10,15) and b.tipoplaza in (44,42,48)) or                 
(b.statusplaza in (14,10) and b.tipoplaza in (52)))                  
and ((a.statusplaza in ( 14,10) and a.tipoplaza in (41,43,49,40)) or                 
(a.statusplaza in ( 06,10,14) and a.tipoplaza in (51,53  )))
--and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia   




-- licencias que no pierden la continuidad 
update a set a.ContinuidadAguinaldo = b.ContinuidadAguinaldo
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((a.statusplaza in ( 14,10) and a.tipoplaza in (44,42,48)) or                 
(a.statusplaza in ( 14,10) and a.tipoplaza in (52))) and
((b.statusplaza in ( 14,10,15) and b.tipoplaza in (44,42,48)) or                 
(b.statusplaza in ( 14,10,15) and b.tipoplaza in (52)))                   
-- and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia   


-- cuando regresa de una licencia que no debe cortar continuidad
update a set a.ContinuidadAguinaldo = b.ContinuidadAguinaldo
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 14,10) and b.tipoplaza in (44,42,48)) or                 
(b.statusplaza in ( 14,10) and b.tipoplaza in (52)))                  
and ( (a.statusplaza = 01 and  a.tipoplaza in( 95,10,96)) or (a.statusplaza = 06 and  a.tipoplaza in(20)) )
-- and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia   

--en aguinaldo la lic 42 y su prorroga 52 si debe cortar
update a set a.ContinuidadAguinaldo = a.añoqna
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in (10) and b.tipoplaza in (42)) or                 
(b.statusplaza in ( 10) and b.tipoplaza in (52)))                  
and ( (a.statusplaza = 01 and  a.tipoplaza in( 95,10,96)) or (a.statusplaza = 06 and  a.tipoplaza in(20)) ) 
-- and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia   



-- plaza 6-20 que tuvieron otra plaza y esa plaza esta en 14-42
update a set a.ContinuidadAguinaldo = b.ContinuidadAguinaldo
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0 
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
a.statusplaza = 06 and a.tipoplaza = 20
and b.statusplaza in( 14,10) and b.tipoplaza = 42
and a.id_plazaanterior <> ''''
--and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia 

-- plaza 6-20 que tienen en la misma quincena la licencia 42

update a set a.ContinuidadAguinaldo = b.ContinuidadAguinaldo
from Hcontinuidad a with(nolock) inner join (
  select h.* from Hcontinuidad h with(nolock) inner join (
  select a.id_emp, a.[añoqna], min(a.id_plaza) id_plaza
  from Hcontinuidad a with(nolock)
  inner join (
  Select id_emp, añoqna, min(ContinuidadAguinaldo) ContinuidadAguinaldo  from Hcontinuidad with(nolock) where añoqna = @Qnaanterior group by id_emp,añoqna
  ) b on a.id_emp = b.id_emp and a.[ContinuidadAguinaldo] = b.[ContinuidadAguinaldo] and a.[añoqna] = b.[añoqna]
  where a.[añoqna] = @Qnaanterior
  group by a.id_emp, a.[añoqna]
  ) m on m.id_emp = h.id_emp and m.id_plaza = h.id_plaza and m.añoqna = h.añoqna
) B                  
on a.id_emp = b.id_emp 
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                   
a.statusplaza = 06 and a.tipoplaza in (20)                
-- and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia  
and exists (
select 1 from Hcontinuidad h where h.id_emp = a.id_emp and h.[añoqna] = @Qna and h.statusplaza = 10 and h.tipoplaza = 42
)






-- movimientos 96 que tuvieron una baja 32 o 35 no cortan
update a set a.ContinuidadAguinaldo = b.ContinuidadAguinaldo
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0 
inner join empleados e with(nolock) on e.id_emp = a.id_emp
inner join hplazas h with(nolock) on h.id_plaza = b.id_plaza and h.Id_TipoMovPlazas = 1 and h.Fecha = dbo.anioQuincenaToFecha(b.añoqna, 1) and h.Valor_IdCampo in (32,35)
where a.añoqna = @Qna  and a.id_plazaanterior <> ''''                
and a.statusplaza = 01 and  a.tipoplaza = 96 
--and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia 


-- tenian una hija 6-20 y le dan una padre debe de tener continuidad 
update a set a.ContinuidadAguinaldo = b.ContinuidadAguinaldo
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and a.id_plazaanterior <> '''' 
and b.statusplaza = 06 and  b.tipoplaza = 20 
and a.statusplaza = 01 and a.tipoplaza in (95,10,96)
and a.categoria = b.categoria
and b.id_plaza in (select id_plaza from hplazas where Id_TipoMovPlazas = 4)
and a.id_plaza not in (select id_plaza from hplazas where Id_TipoMovPlazas = 4)
--and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia 



--de baja de 1-95-10 a 06-20

update a set a.ContinuidadAguinaldo = b.ContinuidadAguinaldo
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0 
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and  b.statusplaza in ( 01) and b.tipoplaza in (95,10,96)                
and a.statusplaza = 6 and  a.tipoplaza in( 20)  
--and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia



-- continuidad de regularizados se trunca si la plaza anterior no esta conciliada

update a set a.ContinuidadAguinaldo = a.añoQna
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0 
inner join empleados e with(nolock) on e.id_emp = a.id_emp
inner join hplazas h with(nolock) on h.id_plaza = b.id_plaza and h.Id_TipoMovPlazas = 1 and h.Fecha = dbo.anioQuincenaToFecha(b.añoqna, 1) and h.Valor_IdCampo in (32)
where a.añoqna = @Qna  and a.id_plazaanterior <> ''''                
and ((a.statusplaza = 01 and  a.tipoplaza = 95) or (a.statusplaza = 06 and  a.tipoplaza = 20)   )
--and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza in (select id_plaza from Thst_Plaza where Regularizada = 1)

update a set a.ContinuidadAguinaldo = b.ContinuidadAguinaldo
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0 
inner join empleados e with(nolock) on e.id_emp = a.id_emp
inner join hplazas h with(nolock) on h.id_plaza = b.id_plaza and h.Id_TipoMovPlazas = 1 and h.Fecha = dbo.anioQuincenaToFecha(b.añoqna, 1) and h.Valor_IdCampo in (32)
where a.añoqna = @Qna  and a.id_plazaanterior <> ''''                
and ((a.statusplaza = 01 and  a.tipoplaza = 95) or (a.statusplaza = 06 and  a.tipoplaza = 20)   )
--and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1)



-------------- queries nuevos movimientos


-- Si esta en 01 95-96-10 o 06 20 24 25 y pasa a motivo nuevo misma plaza mantiene continuidad
update a set a.ContinuidadAguinaldo = b.ContinuidadAguinaldo
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 01) and b.tipoplaza in (95,96,10)) or                 
(b.statusplaza = 06 and b.tipoplaza in (20,24,25)))                  
and ( (a.statusplaza = 01 and  a.tipoplaza in( 111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151,155 )) or -- ''10'',''FV'',''FT'',''FZ'',''FW'',''FJ'',''FK'',''FS'',''FY'',''FJ'',''FI'' 
(a.statusplaza = 06 and  a.tipoplaza in(88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)) ) 
-- and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1)


-- Si esta en 01 95-96-10 o 06 20 24 25 y pasa a motivo nuevo OTRA PLAZA mantiene continuidad
update a set a.ContinuidadAguinaldo = b.ContinuidadAguinaldo
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and a.id_plazaanterior <> '''' and                
((b.statusplaza in ( 01) and b.tipoplaza in (95,96,10)) or                 
(b.statusplaza = 06 and b.tipoplaza in (20,24,25)))                  
and ( (a.statusplaza = 01 and  a.tipoplaza in( 111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151,155)) or 
(a.statusplaza = 06 and  a.tipoplaza in(88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)) ) 
-- and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1) 


-- si de nuevo movimiento regresa a 01 95-96-10 o 06 20 24 25 en la misma plaza continuia
update a set a.ContinuidadAguinaldo = b.ContinuidadAguinaldo
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 01) and b.tipoplaza in (111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151,155 )) or                 
(b.statusplaza = 06 and b.tipoplaza in (88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)))                  
and ( (a.statusplaza = 01 and  a.tipoplaza in(95,96,10 )) or 
(a.statusplaza = 06 and  a.tipoplaza in(20,24,25)) ) 
-- and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1)  


-- si de nuevo movimiento regresa a 01 95-96-10 o 06 20 24 25 en OTRA PLAZA continuia
update a set a.ContinuidadAguinaldo = b.ContinuidadAguinaldo
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and a.id_plazaanterior <> '''' and                
((b.statusplaza in ( 01) and b.tipoplaza in (111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151,155)) or                 
(b.statusplaza = 06 and b.tipoplaza in (88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)))                  
and (( a.statusplaza = 01 and  a.tipoplaza in( 95,96,10 )) or 
(a.statusplaza = 06 and  a.tipoplaza in(20,24,25)) ) 
-- and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1)  


-- de un nuevo movimiento a otro nuevo movimiento con las misma plaza
update a set a.ContinuidadAguinaldo = b.ContinuidadAguinaldo
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 01) and b.tipoplaza in (111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151,155)) or                 
(b.statusplaza = 06 and b.tipoplaza in (88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)))                  
and (( a.statusplaza = 01 and  a.tipoplaza in(111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151,155  )) or 
(a.statusplaza = 06 and  a.tipoplaza in(88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)) ) 
-- and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1) 


-- de un nuevo movimiento a otro nuevo movimiento con OTRA plaza
update a set a.ContinuidadAguinaldo = b.ContinuidadAguinaldo
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and a.id_plazaanterior <> '''' and                
((b.statusplaza in ( 01) and b.tipoplaza in (111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151,155 )) or                 
(b.statusplaza = 06 and b.tipoplaza in (88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)))                  
and (( a.statusplaza = 01 and  a.tipoplaza in( 111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151,155  ) ) or 
(a.statusplaza = 06 and  a.tipoplaza in(88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)) ) 
-- and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1) 


-- Si tiene nuevo movimiento y entra a lic 14-10 41-43-49-40 0 06 51-53 corta continuidad
 update a set a.ContinuidadAguinaldo = a.añoqna
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 01) and b.tipoplaza in (111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151,155 )) or                 
(b.statusplaza = 06 and b.tipoplaza in (88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)))                  
and (( a.statusplaza in (14,10) and  a.tipoplaza in(41,43,49,40)) or 
(a.statusplaza in (14,10) and  a.tipoplaza in(51,53)) )
-- and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1)   


-- si esta en lic 14-10 41-43-49-40 0 06 51-53 y le dan mov nuevo inicia su continuidad
 update a set a.ContinuidadAguinaldo = a.añoqna
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 14,10) and b.tipoplaza in (41,43,49,40 )) or                 
(b.statusplaza in ( 14,10) and b.tipoplaza in (51,53)))                  
and (( a.statusplaza in (01) and  a.tipoplaza in(111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151,155 ) ) or 
(a.statusplaza = 06 and  a.tipoplaza in(88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)) )
-- and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1)   


--comentado 2019
-- si tine plaza en licencia y le dan una con movimiento sdp
--update a set a.ContinuidadAguinaldo =  b.ContinuidadAguinaldo
--from Hcontinuidad a with(nolock) inner join 
--( Select * from Hcontinuidad with(nolock) where añoqna = @Qna
--) B                  
--on a.id_emp = b.id_emp 
--inner join empleados e with(nolock) on e.id_emp = a.id_emp
--where a.añoqna = @Qna and                
--((b.statusplaza in ( 14,10) and b.tipoplaza in (44,42,48,88 )) or                 
--(b.statusplaza = 06 and b.tipoplaza in (52)))                  
--and (( a.statusplaza in (01) and  a.tipoplaza in(113,115,116,123,124,125,126,131,132,147,148,150,151) ) or 
--(a.statusplaza = 06 and  a.tipoplaza in(109,112,114,119,120,127,128,133,144,145,146)) )
--- and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
--and e.id_cia =  @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1)



-- si tiene un nuevo movimiento y entra el lic 14-10 44-42-48-88 o 06 52 continuia
 update a set a.ContinuidadAguinaldo = b.ContinuidadAguinaldo
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 01) and b.tipoplaza in (111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151,155)) or                 
(b.statusplaza = 06 and b.tipoplaza in (88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)))                  
and (( a.statusplaza in (14,10) and  a.tipoplaza in(44,42,48,88)) or 
(a.statusplaza in (14,10) and  a.tipoplaza in(52)) )
-- and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1) 

-- en aguinaldo la lic 42 y su prorroga si corta
 update a set a.ContinuidadAguinaldo = a.añoqna
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 01) and b.tipoplaza in (111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151,155)) or                 
(b.statusplaza = 06 and b.tipoplaza in (88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)))                  
and (( a.statusplaza in (10) and  a.tipoplaza in(42)) or 
(a.statusplaza in (10) and  a.tipoplaza in(52)) )
-- and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1) 



-- si regresa de lic 14-10 44-42-48-88 o 06 52 a un nuevo movimiento continua
 update a set a.ContinuidadAguinaldo =  b.ContinuidadAguinaldo
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 14,10) and b.tipoplaza in (44,42,48,88 )) or                 
(b.statusplaza in ( 14,10) and b.tipoplaza in (52)))                  
and (( a.statusplaza in (01) and  a.tipoplaza in(111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151,155 ) ) or 
(a.statusplaza = 06 and  a.tipoplaza in(88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)) )
-- and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia =  @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1)

--  aguinaldo la lic 42 y su prorroga 52 si corta
 update a set a.ContinuidadAguinaldo =  a.añoqna
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 10) and b.tipoplaza in (42 )) or                 
(b.statusplaza in ( 10) and b.tipoplaza in (52)))                  
and (( a.statusplaza in (01) and  a.tipoplaza in(111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151,155 ) ) or 
(a.statusplaza = 06 and  a.tipoplaza in(88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)) )
-- and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia =  @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1)

-- 23/11/2018 si esta en 6 15 y pasas a 6 -90-11 con otra plaza corta continuidad
update a set a.ContinuidadAguinaldo = a.añoQna
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and (b.statusplaza = 06 and  b.tipoplaza in(15,103,137)) and
(a.statusplaza = 06 and  a.tipoplaza in(11,99,133,108,143,15,103,137))
-- and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1)




--- mandos medios que cambian de plaza se les corta continuidad para que les pague en periodos separados

update a set a.ContinuidadAguinaldo = a.añoQna
-- select *
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and (b.statusplaza = 01 and  b.tipoplaza in(95)) and
(a.statusplaza = 01 and  a.tipoplaza in(96))
and e.id_cia = 3
-- and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))

update a set a.ContinuidadAguinaldo = a.añoQna
-- select *
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and (b.statusplaza = 01 and  b.tipoplaza in(96)) and
(a.statusplaza = 01 and  a.tipoplaza in(95))
and e.id_cia = 3
-- and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))


update a set a.id_plazaanterior = ''''
-- select *
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and (b.statusplaza = 01 and  b.tipoplaza in(95)) and
(a.statusplaza = 01 and  a.tipoplaza in(96))
and e.id_cia = 3
-- and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))


update a set a.id_plazaanterior = ''''
-- select *
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and (b.statusplaza = 01 and  b.tipoplaza in(96)) and
(a.statusplaza = 01 and  a.tipoplaza in(95))
and e.id_cia = 3
-- and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))



update a set a.ContinuidadAguinaldo = a.añoQna
-- select *
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0
and b.id_plaza <> a.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and (b.statusplaza = 01 and  b.tipoplaza in(95,96)) and
(a.statusplaza = 01 and  a.tipoplaza in(95,96))
and e.id_cia = 3
-- and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))

update a set a.id_plazaanterior = ''''
-- select *
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0
and b.id_plaza <> a.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and (b.statusplaza = 01 and  b.tipoplaza in(95,96)) and
(a.statusplaza = 01 and  a.tipoplaza in(95,96))
and e.id_cia = 3
-- and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))




---  para basica

update a set a.ContinuidadAguinaldo = a.añoqna
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0
and a.id_plaza <> b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and a.id_plazaanterior <> '''' and                
((b.statusplaza in ( 01) and b.tipoplaza in (95,96,10, 111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151,155 )) or                 
(b.statusplaza = 06 and b.tipoplaza in (20,24,25, 88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)))                  
and (( a.statusplaza = 01 and  a.tipoplaza in(95,96,10, 111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151,155  ) ) or 
(a.statusplaza = 06 and  a.tipoplaza in(20,24,25, 88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)) ) 
-- and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = 2 and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1) 



update a set a.id_plazaanterior = ''''
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0
and a.id_plaza <> b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and a.id_plazaanterior <> '''' and                
((b.statusplaza in ( 01) and b.tipoplaza in (95,96,10, 111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151,155 )) or                 
(b.statusplaza = 06 and b.tipoplaza in (20,24,25, 88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)))                  
and (( a.statusplaza = 01 and  a.tipoplaza in(95,96,10, 111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151,155  ) ) or 
(a.statusplaza = 06 and  a.tipoplaza in(20,24,25, 88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)) ) 
-- and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = 2 and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1) 



--------------      
update Hcontinuidad set ContinuidadAguinaldo = añoqna 
from Hcontinuidad with(nolock) inner join Empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where añoqna = @Qna and ContinuidadAguinaldo = ''      ''   
--and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End                  
and e.id_cia = @id_cia 



-- para cambios de estado

-- lo comento para aguinaldo

--update h set h.ContinuidadAguinaldo = es.sep
--from hcontinuidad h
--inner join (
--select fd.Id_Emp, fdd.Id_Plaza, dbo.fechaToAnioQuincena(fdd.fechaini) qna, s.sep from FUP_Documentos fd
--inner join FUP_Documento_Detalle fdd on fd.Id_Documento = fdd.Id_Documento
--inner join FUP_Informacion_Documentos fid on fid.Id_Documento = fd.Id_Documento
--inner join FUP_MotivoMovimiento fmm on fmm.Id_MotivoMovimiento = fdd.Id_MotivoMovimiento
--inner join (
--  select a.id_emp, dbo.fechaToAnioQuincena(a.fecha_alta_sep) sep from HFecha_Alta_SEP a inner join (
--  select id_emp, max(fecha) fecha from HFecha_Alta_SEP where fecha <= getdate() group by id_emp
--  ) b on a.fecha = b.fecha and a.id_emp = b.id_emp
--) s on s.id_emp = fd.id_emp
--where fdd.Id_MotivoMovimiento = 1 and fmm.Id_TipoMovimiento = 2
--) es on es.id_emp = h.id_emp and es.id_plaza = h.id_plaza and es.qna = h.añoqna
--inner join empleados e on e.id_emp = h.id_emp
--where h.[añoqna] = @Qna and e.id_cia = @id_cia


end

else

begin

-- para empleados especificos

update Hcontinuidad set ContinuidadAguinaldo = ''      '' 
from Hcontinuidad with(nolock) inner join empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where añoqna = @Qna and Hcontinuidad.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))     
and e.id_cia = @id_cia

--primero actualizo la continuidad de las plazas que no tienen plazaanterior ,que ya se pagaron la quincena pasada y siguen igual          
-- en tipo, status y categoria          
update Hcontinuidad set Hcontinuidad.ContinuidadAguinaldo = b.ContinuidadAguinaldo                   
from Hcontinuidad with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B on Hcontinuidad.id_emp = b.id_emp and Hcontinuidad.id_plaza = b.id_plaza 
inner join empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where Hcontinuidad.añoqna = @Qna and Hcontinuidad.id_plazaanterior = '''' and          
Hcontinuidad.statusplaza = b.statusplaza and Hcontinuidad.tipoplaza = b.tipoplaza and           
Hcontinuidad.categoria = b.categoria 
and Hcontinuidad.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))             
and e.id_cia = @id_cia

--actualizo la continuidad de las plazas que no tienen plazaanterior (o es la misma ),que ya se pagaron la quincena pasada y cambiaron          
-- cierto tipo o status ( proporcionados por ellos ) que no deberia de cambiar continuidad          
update Hcontinuidad set Hcontinuidad.ContinuidadAguinaldo = b.ContinuidadAguinaldo                   
from Hcontinuidad with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on Hcontinuidad.id_emp = b.id_emp and Hcontinuidad.id_plaza = b.id_plaza  
inner join empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where Hcontinuidad.añoqna = @Qna and  Hcontinuidad.ContinuidadAguinaldo = '''' and       
(Hcontinuidad.id_plazaanterior = cast(b.id_plaza as varchar) or Hcontinuidad.id_plazaanterior = '''' ) and          
((Hcontinuidad.statusplaza = 10 and Hcontinuidad.tipoplaza  in (44,48) ) or      
(Hcontinuidad.statusplaza = 14 and Hcontinuidad.tipoplaza  = 44 ) or       
(Hcontinuidad.statusplaza = 15 and Hcontinuidad.tipoplaza  = 48 ) or      
(Hcontinuidad.statusplaza = 11 and Hcontinuidad.tipoplaza  = 44 ) ) 
and Hcontinuidad.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia
                  
--Si la plaza aun tiene ContinuidadAguinaldo vacio Y NO TIENE ID_PLAZAANTERIOR                  
--significa que la plaza es nueva, asi que la continuidad empieza a partir de este momento                  
Update Hcontinuidad set Hcontinuidad.ContinuidadAguinaldo = Hcontinuidad.añoqna 
from Hcontinuidad with(nolock) inner join empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where Hcontinuidad.añoqna = @Qna and Hcontinuidad.ContinuidadAguinaldo = ''''                   
and Hcontinuidad.id_plazaanterior = '''' 
and Hcontinuidad.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia                          
                  
--Si la plaza tiene en plaza anterior LA MISMA PLAZA                   
--y el status01/tipoplaza95  en la plazaanterior de la qna pasada                  
--y un status01/tipoplaza10 en la plazaactual                  
--eso significa que le dieron definitivamente la plaza y debe mantener continuidad                  
update Hcontinuidad set Hcontinuidad.ContinuidadAguinaldo = b.ContinuidadAguinaldo                   
from Hcontinuidad with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on Hcontinuidad.id_emp = b.id_emp and b.id_plaza=Hcontinuidad.id_plaza   
inner join empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where Hcontinuidad.añoqna = @Qna and (Hcontinuidad.id_plazaanterior = cast(Hcontinuidad.id_plaza as varchar) or Hcontinuidad.id_plazaanterior = ''''  )                
and Hcontinuidad.statusplaza = 01 and  Hcontinuidad.tipoplaza = 10                  
and b.statusplaza = 01 and  b.tipoplaza = 95  
and Hcontinuidad.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia                            
                  
                  
--Si la plaza tiene en plaza anterior LA MISMA PLAZA                   
--y no cambia ni el tipo,ni el status,ni lacategoria                  
--eso significa que debe mantener continuidad                  
update Hcontinuidad set Hcontinuidad.ContinuidadAguinaldo = b.ContinuidadAguinaldo                   
from Hcontinuidad with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on Hcontinuidad.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + Hcontinuidad.id_plazaanterior + '','') <> 0   
inner join empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where Hcontinuidad.añoqna = @Qna and charindex('',''+ ltrim(rtrim(cast(hcontinuidad.id_plaza  as varchar))) + '','','','' + Hcontinuidad.id_plazaanterior + '','') <> 0            
and Hcontinuidad.statusplaza = b.statusplaza and  Hcontinuidad.tipoplaza = b.tipoplaza                  
and Hcontinuidad.categoria = b.categoria  
and Hcontinuidad.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia                             
                
--Si la plaza NO tiene en plaza anterior                   
--y un status14/tipoplaza41-42-43-49 ó status06/tipoplaza51-52-53 en la plazaactual                 
--eso significa que debe perder continuidad                  
update Hcontinuidad set Hcontinuidad.ContinuidadAguinaldo = añoQna    
from Hcontinuidad with(nolock) inner join empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where ((Hcontinuidad.statusplaza = 14 and Hcontinuidad.tipoplaza in (41,42,43,49)) or                 
(Hcontinuidad.statusplaza = 06 and Hcontinuidad.tipoplaza in (51,52,53)))                
 and Hcontinuidad.añoqna = @Qna  
 and Hcontinuidad.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia                         
                  
--Si en la qna anterior                 
--el status14/tipoplaza41-42-43-49 ó status06/tipoplaza51-52-53  en la plazaanterior de la qna pasada                  
--y un status01/tipoplaza95 en la plazaactual                 
--eso significa viene regresando de una licencia   y debe iniciar la continuidad                  
update Hcontinuidad set Hcontinuidad.ContinuidadAguinaldo = Hcontinuidad.añoQna                 
from Hcontinuidad with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on Hcontinuidad.id_emp = b.id_emp and Hcontinuidad.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where Hcontinuidad.añoqna = @Qna and                
((b.statusplaza = 14 and b.tipoplaza in (41,42,43,49)) or                 
(b.statusplaza = 06 and b.tipoplaza in (51,52,53)))                  
and Hcontinuidad.statusplaza = 01 and  Hcontinuidad.tipoplaza = 95  
and Hcontinuidad.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia                              
                
--Si tiene PLAZAANTERIOR pero el status y el motivo es el mismo que el actual            
--debe de tomar la continuidad de la plaza anterior            
update Hcontinuidad set Hcontinuidad.ContinuidadAguinaldo = b.ContinuidadAguinaldo                   
from Hcontinuidad with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on Hcontinuidad.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + Hcontinuidad.id_plazaanterior + '','') <> 0 
inner join empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where Hcontinuidad.añoqna = @Qna and Hcontinuidad.id_plazaanterior <> ''''            
and Hcontinuidad.tipoplaza = b.tipoplaza and Hcontinuidad.statusplaza = b.statusplaza  
and Hcontinuidad.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia                
            
--Si tiene PLAZAANTERIOR pero el status y el motivo de la nueva es 01-10            
-- y el status y motivo de la anterior es 01-95            
--debe de tomar la continuidad de la plaza anterior            
update Hcontinuidad set Hcontinuidad.ContinuidadAguinaldo = b.ContinuidadAguinaldo                   
from Hcontinuidad with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B               
on Hcontinuidad.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + Hcontinuidad.id_plazaanterior + '','') <> 0
inner join empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where Hcontinuidad.añoqna = @Qna and Hcontinuidad.id_plazaanterior <> ''''            
and ((Hcontinuidad.tipoplaza = 10 and Hcontinuidad.statusplaza = 01 and b.tipoplaza = 95 and b.statusplaza = 01) or      
(Hcontinuidad.tipoplaza = 95 and Hcontinuidad.statusplaza = 01 and b.tipoplaza = 10 and b.statusplaza = 01) )  
and Hcontinuidad.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia         
          
-------------------------------------------         
--Si la plaza tiene en plaza anterior LA MISMA PLAZA                   
--y el status10,11,14,15/tipoplaza44,48  en la plazaanterior de la qna pasada                  
--y un status01/tipoplaza10,95 en la plazaactual                  
--eso significa que le dieron definitivamente la plaza y debe mantener continuidad                  
--update Hcontinuidad set Hcontinuidad.ContinuidadAguinaldo = b.ContinuidadAguinaldo                   
--from Hcontinuidad inner join ( Select * from Hcontinuidad where añoqna = @Qnaanterior) B                  
--on Hcontinuidad.id_emp = b.id_emp       
--where Hcontinuidad.añoqna = @Qna and       
--(Hcontinuidad.id_plazaanterior = cast(b.id_plaza as varchar) or Hcontinuidad.id_plazaanterior = '''' )                 
--and Hcontinuidad.statusplaza = 01 and  Hcontinuidad.tipoplaza in (10,95)                  
--and b.statusplaza in (10,11,14,15) and  b.tipoplaza in (44,48)   and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End              
update Hcontinuidad set Hcontinuidad.ContinuidadAguinaldo = b.ContinuidadAguinaldo                   
from Hcontinuidad with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on Hcontinuidad.id_emp = b.id_emp and  Hcontinuidad.id_plaza = b.id_plaza 
inner join empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where Hcontinuidad.añoqna = @Qna and       
(Hcontinuidad.id_plazaanterior = cast(b.id_plaza as varchar) or Hcontinuidad.id_plazaanterior = '''' )                 
and Hcontinuidad.statusplaza = 01 and  Hcontinuidad.tipoplaza in (10,95)                  
and b.statusplaza in (10,11,14,15) and  b.tipoplaza in (44,48)   
and Hcontinuidad.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia              

update Hcontinuidad set Hcontinuidad.ContinuidadAguinaldo = b.ContinuidadAguinaldo                   
from Hcontinuidad with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on Hcontinuidad.id_emp = b.id_emp   
inner join empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where Hcontinuidad.añoqna = @Qna and       
(Hcontinuidad.id_plazaanterior = cast(b.id_plaza as varchar) or Hcontinuidad.id_plazaanterior = '''' )                 
and Hcontinuidad.statusplaza = 01 and  Hcontinuidad.tipoplaza in (10,95)                  
and b.statusplaza in (10,11,14,15) and  b.tipoplaza in (44,48)   
and Hcontinuidad.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia     
and Hcontinuidad.id_emp in (select id_emp from Hcontinuidad where [añoqna] = @Qna and ([ContinuidadAguinaldo] = '''' or [ContinuidadAguinaldo] = ''      ''  ) )

--Si la plaza tiene en plaza anterior LA MISMA PLAZA                   
--y el status03,06/tipoplaza20  en la plazaanterior de la qna pasada                  
--y un status01/tipoplaza10,95 en la plazaactual                  
--eso significa que le dieron definitivamente la plaza y debe mantener continuidad                  
update Hcontinuidad set Hcontinuidad.ContinuidadAguinaldo = b.ContinuidadAguinaldo                   
from Hcontinuidad with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on Hcontinuidad.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + Hcontinuidad.id_plazaanterior + '','') <> 0
inner join empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where Hcontinuidad.añoqna = @Qna and Hcontinuidad.id_plazaanterior = cast(Hcontinuidad.id_plaza as varchar)                  
and Hcontinuidad.statusplaza = 01 and  Hcontinuidad.tipoplaza in ( 10 , 95)                 
and b.statusplaza in (03,06) and  b.tipoplaza in (20) 
and Hcontinuidad.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia                           
             
----Si la el tipo de plaza es de tipo prorroga
----Select * from ttipoplaza where destipoplaza like ''pró%''
----y el tipoplazapermisoanterior es distino de 48 o 44 entonces debe cortar continuidad
update Hcontinuidad set Hcontinuidad.ContinuidadAguinaldo = Hcontinuidad.añoQna                  
from Hcontinuidad with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on Hcontinuidad.id_emp = b.id_emp 
inner join empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where Hcontinuidad.añoqna = @Qna                   
and Hcontinuidad.tipoplaza in (Select id_tipoplaza from ttipoplaza where destipoplaza like ''pró%'')
and Hcontinuidad.tipoplazapermisoanterior not in (48,44)
and Hcontinuidad.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia                             




-- Se agregan casos a cantinuidad 25/10/2016


-- los movimientos 1-96 deben de tomar la cntinuidad de la plaza anterior
update a set a.ContinuidadAguinaldo = b.ContinuidadAguinaldo
from hcontinuidad a   with(nolock)   
inner join ( Select * from Hcontinuidad with(nolock) where añoqna =  @Qnaanterior) b on b.id_emp = a.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0 
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.[añoqna]= @Qna
and a.statusplaza = 01 and a.tipoplaza = 96 and a.id_plazaanterior <> ''''
and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia    


-- la licencia 88 debe tomar la continuidad anterior 
update a set a.ContinuidadAguinaldo = b.ContinuidadAguinaldo
from Hcontinuidad a  with(nolock)
inner join ( Select * from Hcontinuidad with(nolock) where añoqna =  @Qnaanterior) b on b.id_emp = a.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.[añoqna]= @Qna
and a.statusplaza = 14 and a.tipoplaza = 88 and a.Id_emp  in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia 

-- cuando regresa de licencia 88 debe permanecer su continuidad 
update a set a.ContinuidadAguinaldo = b.ContinuidadAguinaldo
from Hcontinuidad a  with(nolock)
inner join ( Select * from Hcontinuidad with(nolock) where añoqna =  @Qnaanterior) b on b.id_emp = a.id_emp and a.id_plaza = b.id_plaza 
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.[añoqna]= @Qna
and a.statusplaza = 01 and a.tipoplaza in (10,95,96) and b.statusplaza = 14 and b.tipoplaza = 88 
 and a.Id_emp  in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
 and e.id_cia = @id_cia 
 
-- cuando entra en licencia o reanudacion y continuia con la lic que cortan
update a set a.ContinuidadAguinaldo = a.añoqna
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((a.statusplaza in ( 14,10) and a.tipoplaza in (41,43,49,40)) or                 
(a.statusplaza in ( 14,10) and a.tipoplaza in (51,53)))                  
 and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia   

 -- licencias y reanudas que cortan
update a set a.ContinuidadAguinaldo = a.añoqna
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 14,10) and b.tipoplaza in (41,43,49,40)) or                 
(b.statusplaza in ( 14,10) and b.tipoplaza in (51,53)))                  
and a.statusplaza = 01 and  a.tipoplaza in( 95,10)  
and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia   

update a set a.ContinuidadAguinaldo = a.añoqna
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 14,10) and b.tipoplaza in (41,43,49,40)) or                 
(b.statusplaza in ( 06,10,14) and b.tipoplaza in (51,53)))                  
and ((a.statusplaza in ( 14,10,15) and a.tipoplaza in (44,42,48)) or                 
(a.statusplaza in ( 14,10) and a.tipoplaza in (52)))
and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia   

update a set a.ContinuidadAguinaldo = a.añoqna
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 14,10,15) and b.tipoplaza in (44,42,48)) or                 
(b.statusplaza in (14,10) and b.tipoplaza in (52)))                  
and ((a.statusplaza in ( 14,10) and a.tipoplaza in (41,43,49,40)) or                 
(a.statusplaza in ( 06,10,14) and a.tipoplaza in (51,53  )))
and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia   



-- licencias que no pierden la continuidad 
update a set a.ContinuidadAguinaldo = b.ContinuidadAguinaldo
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((a.statusplaza in ( 14,10,15) and a.tipoplaza in (44,42,48)) or                 
(a.statusplaza in ( 14,10,15) and a.tipoplaza in (52)))  and
((b.statusplaza in ( 14,10,15) and b.tipoplaza in (44,42,48)) or                 
(b.statusplaza in ( 14,10,15) and b.tipoplaza in (52)))                   
 and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia   



-- cuando regresa de una licencia que no debe cortar continuidad
update a set a.ContinuidadAguinaldo = b.ContinuidadAguinaldo
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 14,10,15) and b.tipoplaza in (44,42,48)) or                 
(b.statusplaza in ( 14,10,15) and b.tipoplaza in (52)))                  
and ( (a.statusplaza = 01 and  a.tipoplaza in( 95,10,96)) or (a.statusplaza = 06 and  a.tipoplaza in(20)) ) 
 and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia   


--en aguinaldo la lic 42 y su prorroga 52 si debe cortar
update a set a.ContinuidadAguinaldo = a.añoqna
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in (10) and b.tipoplaza in (42)) or                 
(b.statusplaza in ( 10) and b.tipoplaza in (52)))                  
and ( (a.statusplaza = 01 and  a.tipoplaza in( 95,10,96)) or (a.statusplaza = 06 and  a.tipoplaza in(20)) ) 
 and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia   


-- plaza 6-20 que tuvieron otra plaza y esa plaza esta en 14-42
update a set a.ContinuidadAguinaldo = b.ContinuidadAguinaldo
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0 
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
a.statusplaza = 06 and a.tipoplaza = 20
and b.statusplaza in( 14,10) and b.tipoplaza = 42
and a.id_plazaanterior <> ''''
and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia 

-- plaza 6-20 que tienen en la misma quincena la licencia 42

update a set a.ContinuidadAguinaldo = b.ContinuidadAguinaldo
from Hcontinuidad a with(nolock) inner join (
  select h.* from Hcontinuidad h with(nolock) inner join (
  select a.id_emp, a.[añoqna], min(a.id_plaza) id_plaza
  from Hcontinuidad a with(nolock)
  inner join (
  Select id_emp, añoqna, min(ContinuidadAguinaldo) ContinuidadAguinaldo  from Hcontinuidad with(nolock) where añoqna = @Qnaanterior group by id_emp,añoqna
  ) b on a.id_emp = b.id_emp and a.[ContinuidadAguinaldo] = b.[ContinuidadAguinaldo] and a.[añoqna] = b.[añoqna]
  where a.[añoqna] = @Qnaanterior
  group by a.id_emp, a.[añoqna]
  ) m on m.id_emp = h.id_emp and m.id_plaza = h.id_plaza and m.añoqna = h.añoqna
) B                  
on a.id_emp = b.id_emp 
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                   
a.statusplaza = 06 and a.tipoplaza in (20)                
 and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia  
and exists (
select 1 from Hcontinuidad h where h.id_emp = a.id_emp and h.[añoqna] = @Qna and h.statusplaza = 10 and h.tipoplaza = 42
)






-- movimientos 96 que tuvieron una baja 32 o 35 no cortan
update a set a.ContinuidadAguinaldo = b.ContinuidadAguinaldo
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0 
inner join empleados e with(nolock) on e.id_emp = a.id_emp
inner join hplazas h with(nolock) on h.id_plaza = b.id_plaza and h.Id_TipoMovPlazas = 1 and h.Fecha = dbo.anioQuincenaToFecha(b.añoqna, 1) and h.Valor_IdCampo in (32,35)
where a.añoqna = @Qna  and a.id_plazaanterior <> ''''                
and a.statusplaza = 01 and  a.tipoplaza = 96 
and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia 


-- tenian una hija 6-20 y le dan una padre debe de tener continuidad 
update a set a.ContinuidadAguinaldo = b.ContinuidadAguinaldo
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and a.id_plazaanterior <> '''' 
and b.statusplaza = 06 and  b.tipoplaza = 20 
and a.statusplaza = 01 and a.tipoplaza in (95,10,96)
and a.categoria = b.categoria
and b.id_plaza in (select id_plaza from hplazas where Id_TipoMovPlazas = 4)
and a.id_plaza not in (select id_plaza from hplazas where Id_TipoMovPlazas = 4)
and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia 


--de baja de 1-95-10 a 06-20

update a set a.ContinuidadAguinaldo = b.ContinuidadAguinaldo
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0 
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and  b.statusplaza in ( 01) and b.tipoplaza in (95,10,96)                
and a.statusplaza = 6 and  a.tipoplaza in( 20)  
and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia



-- continuidad de regularizados se trunca si la plaza anterior no esta conciliada

update a set a.ContinuidadAguinaldo = a.añoQna
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0 
inner join empleados e with(nolock) on e.id_emp = a.id_emp
inner join hplazas h with(nolock) on h.id_plaza = b.id_plaza and h.Id_TipoMovPlazas = 1 and h.Fecha = dbo.anioQuincenaToFecha(b.añoqna, 1) and h.Valor_IdCampo in (32)
where a.añoqna = @Qna  and a.id_plazaanterior <> ''''                
and ((a.statusplaza = 01 and  a.tipoplaza = 95) or (a.statusplaza = 06 and  a.tipoplaza = 20)   )
and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza in (select id_plaza from Thst_Plaza where Regularizada = 1)

update a set a.ContinuidadAguinaldo = b.ContinuidadAguinaldo
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0 
inner join empleados e with(nolock) on e.id_emp = a.id_emp
inner join hplazas h with(nolock) on h.id_plaza = b.id_plaza and h.Id_TipoMovPlazas = 1 and h.Fecha = dbo.anioQuincenaToFecha(b.añoqna, 1) and h.Valor_IdCampo in (32)
where a.añoqna = @Qna  and a.id_plazaanterior <> ''''                
and ((a.statusplaza = 01 and  a.tipoplaza = 95) or (a.statusplaza = 06 and  a.tipoplaza = 20)   )
and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1)



-------------- queries nuevos movimientos


-- Si esta en 01 95-96-10 o 06 20 24 25 y pasa a motivo nuevo misma plaza mantiene continuidad
update a set a.ContinuidadAguinaldo = b.ContinuidadAguinaldo
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 01) and b.tipoplaza in (95,96,10)) or                 
(b.statusplaza = 06 and b.tipoplaza in (20,24,25)))                  
and ( (a.statusplaza = 01 and  a.tipoplaza in( 111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151,155 )) or 
(a.statusplaza = 06 and  a.tipoplaza in(88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)) ) 
 and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1)


-- Si esta en 01 95-96-10 o 06 20 24 25 y pasa a motivo nuevo OTRA PLAZA mantiene continuidad
update a set a.ContinuidadAguinaldo = b.ContinuidadAguinaldo
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and a.id_plazaanterior <> '''' and                
((b.statusplaza in ( 01) and b.tipoplaza in (95,96,10)) or                 
(b.statusplaza = 06 and b.tipoplaza in (20,24,25)))                  
and ( (a.statusplaza = 01 and  a.tipoplaza in( 111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151,155 )) or 
(a.statusplaza = 06 and  a.tipoplaza in(88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)) ) 
 and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1) 


-- si de nuevo movimiento regresa a 01 95-96-10 o 06 20 24 25 en la misma plaza continuia
update a set a.ContinuidadAguinaldo = b.ContinuidadAguinaldo
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 01) and b.tipoplaza in (111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151,155 )) or                 
(b.statusplaza = 06 and b.tipoplaza in (88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)))                  
and ( (a.statusplaza = 01 and  a.tipoplaza in(95,96,10 )) or 
(a.statusplaza = 06 and  a.tipoplaza in(20,24,25)) ) 
 and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1)  


-- si de nuevo movimiento regresa a 01 95-96-10 o 06 20 24 25 en OTRA PLAZA continuia
update a set a.ContinuidadAguinaldo = b.ContinuidadAguinaldo
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and a.id_plazaanterior <> '''' and                
((b.statusplaza in ( 01) and b.tipoplaza in (111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151,155 )) or                 
(b.statusplaza = 06 and b.tipoplaza in (88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)))                  
and (( a.statusplaza = 01 and  a.tipoplaza in( 95,96,10 )) or 
(a.statusplaza = 06 and  a.tipoplaza in(20,24,25)) ) 
 and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1)  


-- de un nuevo movimiento a otro nuevo movimiento con las misma plaza
update a set a.ContinuidadAguinaldo = b.ContinuidadAguinaldo
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 01) and b.tipoplaza in (111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151,155 )) or                 
(b.statusplaza = 06 and b.tipoplaza in (88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)))                  
and (( a.statusplaza = 01 and  a.tipoplaza in(111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151,155  )) or 
(a.statusplaza = 06 and  a.tipoplaza in(88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)) ) 
 and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1) 


-- de un nuevo movimiento a otro nuevo movimiento con OTRA plaza
update a set a.ContinuidadAguinaldo = b.ContinuidadAguinaldo
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and a.id_plazaanterior <> '''' and                
((b.statusplaza in ( 01) and b.tipoplaza in (111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151,155 )) or                 
(b.statusplaza = 06 and b.tipoplaza in (88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)))                  
and (( a.statusplaza = 01 and  a.tipoplaza in( 111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151,155 ) ) or 
(a.statusplaza = 06 and  a.tipoplaza in(88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)) ) 
 and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1) 




-- Si tiene nuevo movimiento y entra a lic 14-10 41-43-49-40 0 06 51-53 corta continuidad
 update a set a.ContinuidadAguinaldo = a.añoqna
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 01) and b.tipoplaza in (111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151,155 )) or                 
(b.statusplaza = 06 and b.tipoplaza in (88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)))                  
and (( a.statusplaza in (14,10) and  a.tipoplaza in(41,43,49,40)) or 
(a.statusplaza in (14,10) and  a.tipoplaza in(51,53)) )
 and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1)   


-- si esta en lic 14-10 41-43-49-40 0 06 51-53 y le dan mov nuevo inicia su continuidad
 update a set a.ContinuidadAguinaldo = a.añoqna
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 14,10) and b.tipoplaza in (41,43,49,40 )) or                 
(b.statusplaza in (14,10) and b.tipoplaza in (51,53)))                  
and (( a.statusplaza in (01) and  a.tipoplaza in(111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151,155 ) ) or 
(a.statusplaza = 06 and  a.tipoplaza in(88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)) )
 and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1)   


--comentado 20019
-- si tine plaza en licencia y le dan una con movimiento sdp
--update a set a.ContinuidadAguinaldo =  b.ContinuidadAguinaldo
--from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qna) B                  
--on a.id_emp = b.id_emp 
--inner join empleados e with(nolock) on e.id_emp = a.id_emp
--where a.añoqna = @Qna and                
--((b.statusplaza in ( 14,10) and b.tipoplaza in (44,42,48,88 )) or                 
--(b.statusplaza = 06 and b.tipoplaza in (52)))                  
--and (( a.statusplaza in (01) and  a.tipoplaza in(113,115,116,123,124,125,126,131,132,147,148,150,151) ) or 
--(a.statusplaza = 06 and  a.tipoplaza in(109,112,114,119,120,127,128,133,144,145,146)) )
--and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
--and e.id_cia =  @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1)

-- si tiene un nuevo movimiento y entra el lic 14-10 44-42-48-88 o 06 52 continuia
 update a set a.ContinuidadAguinaldo = b.ContinuidadAguinaldo
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 01) and b.tipoplaza in (111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151,155 )) or                 
(b.statusplaza = 06 and b.tipoplaza in (88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)))                  
and (( a.statusplaza in (14,10,15) and  a.tipoplaza in(44,42,48,88)) or 
(a.statusplaza  in (14,10,15) and  a.tipoplaza in(52)) )
 and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1) 

-- en aguinaldo la lic 42 y su prorroga 52 si corta
 update a set a.ContinuidadAguinaldo = a.añoqna
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 01) and b.tipoplaza in (111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151,155 )) or                 
(b.statusplaza = 06 and b.tipoplaza in (88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)))                  
and (( a.statusplaza in (10) and  a.tipoplaza in(42)) or 
(a.statusplaza  in (10) and  a.tipoplaza in(52)) )
 and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1) 


-- si regresa de lic 14-10 44-42-48-88 o 06 52 a un nuevo movimiento continua
 update a set a.ContinuidadAguinaldo =  b.ContinuidadAguinaldo
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza  in (14,10,15)and b.tipoplaza in (44,42,48,88 )) or                 
(b.statusplaza  in (14,10,15) and b.tipoplaza in (52)))                  
and (( a.statusplaza in (01) and  a.tipoplaza in(111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151,155) ) or 
(a.statusplaza = 06 and  a.tipoplaza in(88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)) )
 and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia =  @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1)


-- En aguinaldo la lic 42 y prorroga 52 si corta
 update a set a.ContinuidadAguinaldo =  a.añoqna
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza  in (10)and b.tipoplaza in (42 )) or                 
(b.statusplaza  in (10) and b.tipoplaza in (52)))                  
and (( a.statusplaza in (01) and  a.tipoplaza in(111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151,155) ) or 
(a.statusplaza = 06 and  a.tipoplaza in(88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)) )
 and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia =  @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1)


-- 23/11/2018 si esta en 6 15 y pasas a 6 -90-11 con otra plaza corta continuidad
update a set a.ContinuidadAguinaldo = a.añoQna
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and (b.statusplaza = 06 and  b.tipoplaza in(15,103,137)) and
(a.statusplaza = 06 and  a.tipoplaza in(11,99,133,108,143,15,103,137))
 and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1)



--- mandos medios que cambian de plaza se les corta continuidad para que les pague en periodos separados



update a set a.ContinuidadAguinaldo = a.añoQna
-- select *
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and (b.statusplaza = 01 and  b.tipoplaza in(95)) and
(a.statusplaza = 01 and  a.tipoplaza in(96))
and e.id_cia = 3
and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))


update a set a.ContinuidadAguinaldo = a.añoQna
-- select *
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and (b.statusplaza = 01 and  b.tipoplaza in(96)) and
(a.statusplaza = 01 and  a.tipoplaza in(95))
and e.id_cia = 3
and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))


update a set a.id_plazaanterior = ''''
-- select *
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and (b.statusplaza = 01 and  b.tipoplaza in(95)) and
(a.statusplaza = 01 and  a.tipoplaza in(96))
and e.id_cia = 3
 and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))


update a set a.id_plazaanterior = ''''
-- select *
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and (b.statusplaza = 01 and  b.tipoplaza in(96)) and
(a.statusplaza = 01 and  a.tipoplaza in(95))
and e.id_cia = 3
 and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))


update a set a.ContinuidadAguinaldo = a.añoQna
-- select *
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0
and b.id_plaza <> a.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and (b.statusplaza = 01 and  b.tipoplaza in(95,96)) and
(a.statusplaza = 01 and  a.tipoplaza in(95,96))
and e.id_cia = 3
 and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))

update a set a.id_plazaanterior = ''''
-- select *
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0
and b.id_plaza <> a.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and (b.statusplaza = 01 and  b.tipoplaza in(95,96)) and
(a.statusplaza = 01 and  a.tipoplaza in(95,96))
and e.id_cia = 3
 and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))


---  para basica

update a set a.ContinuidadAguinaldo = a.añoqna
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0
and a.id_plaza <> b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and a.id_plazaanterior <> '''' and                
((b.statusplaza in ( 01) and b.tipoplaza in (95,96,10, 111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151,155 )) or                 
(b.statusplaza = 06 and b.tipoplaza in (20,24,25, 88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)))                  
and (( a.statusplaza = 01 and  a.tipoplaza in(95,96,10, 111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151,155  ) ) or 
(a.statusplaza = 06 and  a.tipoplaza in(20,24,25, 88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)) ) 
 and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = 2 and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1) 



update a set a.id_plazaanterior = ''''
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0
and a.id_plaza <> b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and a.id_plazaanterior <> '''' and                
((b.statusplaza in ( 01) and b.tipoplaza in (95,96,10, 111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151,155 )) or                 
(b.statusplaza = 06 and b.tipoplaza in (20,24,25, 88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)))                  
and (( a.statusplaza = 01 and  a.tipoplaza in(95,96,10, 111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151,155  ) ) or 
(a.statusplaza = 06 and  a.tipoplaza in(20,24,25, 88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)) ) 
 and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = 2 and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1) 


--------------      
update Hcontinuidad set ContinuidadAguinaldo = añoqna 
from Hcontinuidad with(nolock) inner join empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where añoqna = @Qna and ContinuidadAguinaldo = ''      ''   
and Hcontinuidad.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia   




-- Para cambios de estado

-- lo comento para aguinaldo

--update h set h.ContinuidadAguinaldo = es.sep
--from hcontinuidad h
--inner join (
--select fd.Id_Emp, fdd.Id_Plaza, dbo.fechaToAnioQuincena(fdd.fechaini) qna, s.sep from FUP_Documentos fd
--inner join FUP_Documento_Detalle fdd on fd.Id_Documento = fdd.Id_Documento
--inner join FUP_Informacion_Documentos fid on fid.Id_Documento = fd.Id_Documento
--inner join FUP_MotivoMovimiento fmm on fmm.Id_MotivoMovimiento = fdd.Id_MotivoMovimiento
--inner join (
---  select a.id_emp, dbo.fechaToAnioQuincena(a.fecha_alta_sep) sep from HFecha_Alta_SEP a inner join (
--  select id_emp, max(fecha) fecha from HFecha_Alta_SEP where fecha <= getdate() group by id_emp
--  ) b on a.fecha = b.fecha and a.id_emp = b.id_emp
--) s on s.id_emp = fd.id_emp
--where fdd.Id_MotivoMovimiento = 1 and fmm.Id_TipoMovimiento = 2
--) es on es.id_emp = h.id_emp and es.id_plaza = h.id_plaza and es.qna = h.añoqna
--inner join empleados e on e.id_emp = h.id_emp
--where h.[añoqna] = @Qna and e.id_cia = @id_cia
--and h.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))



end


--- para empleados que cambian de baseica a MM y viceversa


-- update a set a.ContinuidadAguinaldo = b.ContinuidadAguinaldo
--  from hcontinuidad a
--  inner join empleados e on e.id_emp = a.id_emp
--  inner join (
--   select a.*, e.curp from hcontinuidad a
--    inner join empleados e on e.id_emp = a.id_emp
--    where a.añoqna = @Qnaanterior and e.id_cia = 3 and a.statusplaza in (01)
--  ) b on e.curp = b.curp
--  where a.añoqna = @Qna and e.id_cia = 2 and a.statusplaza in (01,06)
 

-- update a set a.ContinuidadAguinaldo = b.ContinuidadAguinaldo
--  from hcontinuidad a
--  inner join empleados e on e.id_emp = a.id_emp
--  inner join (
--   select a.*, e.curp from hcontinuidad a
--    inner join empleados e on e.id_emp = a.id_emp
--    where a.añoqna = @Qnaanterior and e.id_cia = 2 and a.statusplaza in (01,06)
--  ) b on e.curp = b.curp
-- where a.añoqna = @Qna and e.id_cia = 3 and a.statusplaza in (01)




end'
GO

GO
PRINT N'Creating [dbo].[spc_AnexoNominaRetrosSeparados]'
GO
IF OBJECT_ID(N'[dbo].[spc_AnexoNominaRetrosSeparados]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[spc_AnexoNominaRetrosSeparados]
@periodos varchar(1000)
WITH EXEC AS CALLER
AS
declare @periodo varchar(1000) = @periodos
declare @agrupa int = 0

DECLARE @Xml AS XML  
SET @Xml = ''<periodo>'' + REPLACE(@periodo, '','', ''</periodo><periodo>'') + ''</periodo>'';

    select h.id_periodopago,h.id_referencia, h.id_periodo, h.id_emp, h.id_plaza,''R20'' UR,''O'' TIPO_NOMINA, replace(ltrim(rtrim(e.ApPaterno)),''.'', '''') PRIMER_APELLIDO, replace(ltrim(rtrim(e.apmaterno)),''.'', '''') SEGUNDO_APELLIDO, replace(ltrim(rtrim(e.nombre)), ''.'', '''') [NOMBRE(S)], pi.PlazaIEEPO, e.CURP, e.RFC, case when len(e.Cuenta_Tarjeta) >= 18 then  concat(''40'',substring(e.Cuenta_Tarjeta,1,3)) else '''' end CVE_BANCO,
    case when len(e.Cuenta_Tarjeta) >= 18 then e.Cuenta_Tarjeta else '''' end CLABE, case when e.id_cod = 2 then 1 else 2 end FORMA_PAGO
    into #Layotempprimera
    from (
      select Id_Emp,Id_Periodo,id_concepto,Consecutivo,Horas,Pesos,Id_categ,Fecha,PesosExcento,C_costo,id_plaza,Id_Referencia,id_periodoPago,
      Id_ProcesoNomina,Desde,Hasta
      from histpagos where Id_Periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))
      union all
      select Id_Emp,Id_Periodo,id_concepto,Consecutivo,Horas,Pesos, 0 Id_categ,Fecha,PesosExcento,cc,id_plaza,Id_Referencia,id_periodoPago,
      Id_ProcesoNomina,Desde,Hasta
      from nom_histpagos where Id_Periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))
      union all
      select Id_Emp,Id_Periodo,id_concepto,Consecutivo,Horas,Pesos, 0 Id_categ,Fecha,PesosExcento,cc,id_plaza,Id_Referencia,id_periodoPago,
      Id_ProcesoNomina,Desde,Hasta
      from nom_pagos_hist where Id_Periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))
    ) h
    inner join PlazaIEEPO pi  on pi.Id_plaza = h.id_plaza
    inner join empleados e on h.Id_Emp = e.Id_Emp
    where
    h.id_concepto in (select id_concepto from conceptos where tipo in (1,2))
    and exists ( select 1 from hplazas_concifed pc where pc.CODIGO_PLAZA = replace(pi.plazaieepo, '' '','''') and pc.ESTATUS <> ''C'' ) 
    group by h.id_periodopago,h.id_referencia, h.id_periodo, h.id_emp, h.id_plaza, e.ApPaterno, e.ApMaterno, e.Nombre, pi.PlazaIEEPO, e.CURP, e.RFC, e.Cuenta_Invernomina, e.Id_Banco
    ,e.id_cod, e.Cuenta_Tarjeta


    select a.*, isnull(b.nss, '''') nss
    into #Layotempsegunda
    from #Layotempprimera a left join (
      select a.* from HNSS a inner join (
      select id_emp, max(fecha) fecha from HNSS where fecha <= getdate() group by id_emp
      ) b on a.id_emp = b.id_emp and a.fecha = b.fecha
    ) b on a.id_emp = b.id_emp

    select n.*, CAST(c.numero as varchar) +''/''+ cast(c.año as varchar) PERIODO,convert(varchar, c.fechapago, 103) FECHA_PAGO
    into #LayoTemptres
    from #Layotempsegunda n inner join calennomina c on c.id_periodo = case when n.id_periodopago = 0 then n.id_periodo else n.id_periodopago end


    select p.id_periodo,p.id_periodopago, p.id_referencia,p.id_procesonomina, p.id_emp, p.id_plaza, case when p.id_periodopago = 0 then p.id_periodo else p.id_periodopago end periodo, dbo.fechatoanioquincena(c.fechaini) qna 
    into #layoperiodos
    from (
      select Id_Emp,Id_Periodo,id_concepto,Consecutivo,Horas,Pesos,Id_categ,Fecha,PesosExcento,C_costo,id_plaza,Id_Referencia,id_periodoPago,
      Id_ProcesoNomina,Desde,Hasta
      from histpagos where Id_Periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))
      union all
      select Id_Emp,Id_Periodo,id_concepto,Consecutivo,Horas,Pesos, 0 Id_categ,Fecha,PesosExcento,cc,id_plaza,Id_Referencia,id_periodoPago,
      Id_ProcesoNomina,Desde,Hasta
      from nom_histpagos where Id_Periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))
      union all
      select Id_Emp,Id_Periodo,id_concepto,Consecutivo,Horas,Pesos, 0 Id_categ,Fecha,PesosExcento,cc,id_plaza,Id_Referencia,id_periodoPago,
      Id_ProcesoNomina,Desde,Hasta
      from nom_pagos_hist where Id_Periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))
    ) p 
    inner join calennomina c on c.id_periodo = case when p.id_periodopago = 0 then p.id_periodo else p.id_periodopago end 
    where p.id_concepto in (select id_concepto from conceptos where tipo in (1,2)) 
    --and p.Id_Periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))
    group by p.id_periodo, p.id_referencia, p.id_emp, p.id_plaza, p.id_periodopago,c.fechaini,p.id_procesonomina 

    select id_periodo,id_periodopago, id_referencia,id_procesonomina,id_emp,id_plaza, min(qna) desde, max(qna) hasta 
    into #layoperiodos2
    from #layoperiodos group by id_periodo, id_referencia,id_emp,id_plaza,id_procesonomina, id_periodopago

    select a.*, 
    convert(varchar, dbo.anioquincenatofecha(case when right(b.desde,2) = ''99'' then left(b.desde,4)+''24'' else b.desde end, 0), 103) FECHA_INICIO,
    convert(varchar,  dbo.anioquincenatofecha(case when right(b.hasta,2) = ''99'' then left(b.hasta,4)+''24'' else b.hasta end, 1), 103) FECHA_TERMINO
    into #LayoTempcuatro
    from #LayoTemptres a
    inner join #layoperiodos2 b on a.id_periodo = b.id_periodo and a.id_emp = b.id_emp and a.id_plaza = b.id_plaza and a.id_periodopago = b.id_periodopago and a.id_referencia = b.id_referencia



    select a.*,  m.nivel NIVEL_CM
    into #LayoTempcinco
    from #LayoTempcuatro a inner join ( select a.id_plaza, t.nivel from HTabulador_SE_CM a inner join ( select id_plaza, max(fecha) fecha from HTabulador_SE_CM where fecha <= 
    (select max(fechaini) fechaini from calennomina where id_periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))) group by id_plaza ) b on a.id_plaza = b.id_plaza and a.fecha = b.fecha inner join TTabulador_SE_CM t on t.id_tabulador_se_cm = a.id_rel ) m on a.id_plaza = m.id_plaza

    select a.*,b.clave ct, b.id_nodo, b.udp 
    into #LayoTempseis
    from #LayoTempcinco a inner join (
    Select c.id_plaza,c.id_nodo,e.udp, v.Clave from 
    ( plazaempleados c inner join (Select id_plaza,max(fecha) as maximo from plazaempleados where fecha <= (select max(fechaini) fechaini from calennomina where id_periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n)))
    group by id_plaza ) d on c.id_plaza = d.id_plaza and c.fecha = d.maximo )  inner join TablaLongitudProp_28 e on e.id_nodo = c.id_nodo inner join VistaTablaLongitud v on v.id_nodo = c.id_nodo
    ) b on b.id_plaza = a.id_plaza


    select top 0 Id_Emp, Id_Periodo,id_concepto,Consecutivo,Horas,Pesos,Id_categ,Fecha,PesosExcento,C_costo,id_plaza,Id_Referencia,id_periodoPago,
    Id_ProcesoNomina,Desde,Hasta into #PeriodoPagos
    from HistPagos
    
    insert into #PeriodoPagos
      select * from (
      select Id_Emp,Id_Periodo,id_concepto,Consecutivo,Horas,Pesos,Id_categ,Fecha,PesosExcento,C_costo,id_plaza,Id_Referencia,id_periodoPago,
      Id_ProcesoNomina,Desde,Hasta
      from histpagos where Id_Periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))
      union all
      select Id_Emp,Id_Periodo,id_concepto,Consecutivo,Horas,Pesos, 0 Id_categ,Fecha,PesosExcento,cc,id_plaza,Id_Referencia,id_periodoPago,
      Id_ProcesoNomina,Desde,Hasta
      from nom_histpagos where Id_Periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))
      union all
      select Id_Emp,Id_Periodo,id_concepto,Consecutivo,Horas,Pesos, 0 Id_categ,Fecha,PesosExcento,cc,id_plaza,Id_Referencia,id_periodoPago,
      Id_ProcesoNomina,Desde,Hasta
      from nom_pagos_hist where Id_Periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))
      ) h
          
      delete from #PeriodoPagos where id_concepto in (2601,4214)

      select h.id_periodo,h.id_periodopago,h.Id_Referencia, h.id_emp, h.id_plaza, round(sum( case when c.tipo = 1 then h.pesos else 0 end ),2) percepciones,
      round(sum( case when c.tipo = 2 then h.pesos else 0 end ),2) deducciones,
      round(sum( case when c.tipo = 1 then h.pesos else 0 end ) - sum( case when c.tipo = 2 then h.pesos else 0 end ),2) NetoReal
      into #netospara26
      from #PeriodoPagos h
      inner join conceptos c on c.id_concepto = h.id_concepto
      where --h.Id_Periodo in (select id_periodo from calennomina where id_cia in (2,3) and id_periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))) and 
      h.id_concepto in (select id_concepto from conceptos where tipo in (1,2))
      group by h.id_periodo,h.id_periodopago,h.Id_Referencia,h.id_emp, h.id_plaza
     
      
      select *, cast(netoreal as int) truncado, netoreal - cast(netoreal as int) cp26 into #cpto26insertar from #netospara26

      CREATE NONCLUSTERED INDEX idxcpto26insertar1 ON #cpto26insertar ([id_emp]) INCLUDE ([id_periodo],[id_plaza],[cp26])

      insert into #PeriodoPagos (Id_Emp,Id_Periodo,id_concepto,Consecutivo,Horas,Pesos,Id_categ,Fecha,PesosExcento,C_costo,id_plaza,Id_Referencia,
      id_periodoPago,Id_ProcesoNomina,Desde,Hasta)
      select a.id_emp, a.id_periodo,2601 id_concepto, 0, 0, cp26, 0,getdate(), 0,'''',id_plaza,a.id_referencia,a.id_periodopago,0,dbo.fechatoanioquincena(b.fechaini) qna,dbo.fechatoanioquincena(b.fechaini)qna 
      from #cpto26insertar a inner join calennomina b on b.id_periodo = a.id_periodopago
      where round(a.cp26,2) <> 0 and a.id_emp in (select id_emp from empleados where id_cia = 2)

      insert into #PeriodoPagos (Id_Emp,Id_Periodo,id_concepto,Consecutivo,Horas,Pesos,Id_categ,Fecha,PesosExcento,C_costo,id_plaza,Id_Referencia,
      id_periodoPago,Id_ProcesoNomina,Desde,Hasta)
      select a.id_emp, a.id_periodo,4214 id_concepto, 0, 0, cp26, 0,getdate(), 0,'''',id_plaza,a.id_referencia,a.id_periodopago,0,dbo.fechatoanioquincena(b.fechaini) qna,dbo.fechatoanioquincena(b.fechaini) qna 
      from #cpto26insertar a inner join calennomina b on b.id_periodo = a.id_periodopago
      where round(a.cp26,2) <> 0 and a.id_emp in (select id_emp from empleados where id_cia = 3)


    select a.*, b.percepciones, b.deducciones, b.neto 
    into #LayoTempsiete
    from #LayoTempseis a inner join (
      select h.id_periodo,h.id_referencia, h.id_periodopago, h.id_emp, h.id_plaza, round(sum( case when c.tipo = 1 then h.pesos else 0 end ),2) percepciones,
      round(sum( case when c.tipo = 2 then h.pesos else 0 end ),2) deducciones,
      round(sum( case when c.tipo = 1 then h.pesos else 0 end ) - sum( case when c.tipo = 2 then h.pesos else 0 end ),2) Neto
      from #PeriodoPagos h
      inner join conceptos c on c.id_concepto = h.id_concepto
      where --h.Id_Periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n)) and
      h.id_concepto in (select id_concepto from conceptos where tipo in (1,2))
      group by h.id_periodo, h.id_emp, h.id_plaza, h.id_periodopago, h.id_referencia
    ) b on a.id_periodo = b.id_periodo and a.id_emp = b.id_emp and a.id_plaza = b.id_plaza and a.id_periodopago = b.id_periodopago


    select a.*, isnull(s.sede,'''') sede, isnull(s.mun,'''') mun, isnull(ss.SECCION,'''') seccion 
    into #LayoTempocho
    from #LayoTempsiete a
    left join (select max(sede) sede, mun, ct from layo_cts_sede group by mun, ct ) s on s.ct = a.ct
    left join Hseccion_sr20 ss on ss.id_emp = a.id_emp and ss.id_plaza = a.id_plaza

    select right(''000000000''+CAST (ROW_NUMBER() OVER (ORDER BY RFC, PlazaIEEPO,convert( datetime , fecha_inicio ,103 )  ) AS VARCHAR(20)),10) as NO_COMPROBANTE, *
    into #LayoTempnueve
    from #LayoTempocho
  
  
    --delete from LayoutNomina_NoComprobantes
    --insert into LayoutNomina_NoComprobantes (id_periodo, id_emp, id_plaza, NO_COMPROBANTE,PERIODO,CLAVE_PLAZA,CURP,RFC,id_periodopago)
    select distinct id_periodo, id_emp, id_plaza,NO_COMPROBANTE,PERIODO,plazaieepo CLAVE_PLAZA,CURP,RFC,id_referencia, id_periodopago 
    into #LayoutNomina_NoComprobantes from #LayoTempnueve WITH(NOLOCK)


    declare @tabla1 varchar(50) = ''Anexo_V_''
    set @tabla1 = @tabla1 +''''+convert(varchar,getdate(),112)+''''+replace(convert(varchar,getdate(),114),'':'','''')
    declare @query1 nvarchar(1000) = ''select NO_COMPROBANTE,	UR,	PERIODO,	TIPO_NOMINA,	
    case when PRIMER_APELLIDO = '''''''' then SEGUNDO_APELLIDO else PRIMER_APELLIDO end PRIMER_APELLIDO,
    case when PRIMER_APELLIDO = '''''''' then '''''''' else SEGUNDO_APELLIDO end SEGUNDO_APELLIDO,	[NOMBRE(S)],replace(case when plazaieepo like ''''14%'''' or plazaieepo like ''''15%'''' then ''''07''''+substring(plazaieepo,3, len(plazaieepo)) else plazaieepo end,'''' '''','''''''')	CLAVE_PLAZA,case when len(rtrim(curp)) < 18 then left(rtrim(rfc)+''''11111111'''',18) else curp end	CURP,	RFC,	FECHA_PAGO,	FECHA_INICIO,	FECHA_TERMINO,	
    PERCEPCIONES,	DEDUCCIONES,	NETO,NSS, ct	CCT,	FORMA_PAGO,	
    case when FORMA_PAGO = 1 then CVE_BANCO else '''''''' end CVE_BANCO,	
    case when FORMA_PAGO = 1 then CLABE else '''''''' end CLABE
    ,case when plazaieepo like ''''%E0%'''' or plazaieepo like ''''%E1%'''' or plazaieepo like ''''%E2%'''' or plazaieepo like ''''%E3%'''' then NIVEL_CM else  '''''''' end	NIVEL_CM, SEDE,	MUN,	SECCION  
    into '' + @tabla1+ '' from #LayoTempnueve''
    exec sp_executesql @query1


    select h.Id_Periodo,h.id_referencia, h.id_periodopago, h.Id_Emp, h.id_plaza, h.id_concepto, sum(h.Pesos) IMPORTE, c.resultado COD_CONCEPTO, c.resultado COD_CONCEPTO_, upper(isnull(c.nombre,'''')) DESC_CONCEPTO,
    case when d.AcumulaISPT = 1 then 1 else 0 end BASE_CALCULO_ISR, case when c.tipo = 1 then ''P'' when c.tipo = 2 then ''D'' end TIPO_CONCEPTO
    into #LayoTempDiez
    from #PeriodoPagos h  
    inner join conceptos c WITH(NOLOCK) on c.id_concepto = h.id_concepto and c.tipo in (1,2)
    left join (select distinct id_concepto, AcumulaISPT from Conceptos_RelSAT WITH(NOLOCK) where AcumulaISPT = 1) d on d.id_concepto = c.id_concepto 
    --where --h.id_periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))
    group by h.Id_Periodo, h.Id_Emp, h.id_plaza, h.id_concepto, c.resultado, c.nombre,d.AcumulaISPT,c.tipo, h.id_periodopago, h.id_referencia



    CREATE NONCLUSTERED INDEX indextem10 ON [dbo].[#LayoTempDiez] ([Id_Periodo],[Id_Emp],[id_plaza]) INCLUDE ([IMPORTE],[COD_CONCEPTO],[DESC_CONCEPTO],[BASE_CALCULO_ISR],[TIPO_CONCEPTO])
    
    update #LayoTempDiez set COD_CONCEPTO = ''07'' where COD_CONCEPTO in (''7A'',''7B'',''7C'',''7D'',''7E'',''BC'')
    update #LayoTempDiez set DESC_CONCEPTO = (select top 1 DESC_CONCEPTO from #LayoTempDiez where COD_CONCEPTO_ = ''07'') where COD_CONCEPTO_ in (''7A'',''7B'',''7C'',''7D'',''7E'',''BC'')
    update #LayoTempDiez set COD_CONCEPTO = ''E9'' where COD_CONCEPTO in (''EA'',''EB'',''EC'',''ED'',''EE'',''CB'')
    update #LayoTempDiez set COD_CONCEPTO = ''51U'', DESC_CONCEPTO = ''PENSION (QUINCENAL) UPN''  where COD_CONCEPTO =''50''
    
    declare @tabla2 varchar(50) = ''Anexo_VI_''
    set @tabla2 = @tabla2 +''''+convert(varchar,getdate(),112)+''''+replace(convert(varchar,getdate(),114),'':'','''')

    declare @query2 nvarchar(1000) = ''select a.NO_COMPROBANTE, ''''20'''' UR, a.PERIODO, ''''O'''' TIPO_NOMINA, replace(case when a.CLAVE_PLAZA like ''''14%'''' or a.CLAVE_PLAZA like ''''15%'''' then ''''07''''+substring(a.CLAVE_PLAZA,3, len(a.CLAVE_PLAZA)) else a.CLAVE_PLAZA end,'''' '''','''''''') CLAVE_PLAZA ,
    case when len(rtrim(a.CURP)) < 18 then left(rtrim(a.rfc)+''''11111111'''',18) else a.CURP end CURP, b.TIPO_CONCEPTO, b.COD_CONCEPTO, b.DESC_CONCEPTO, sum(b.IMPORTE) IMPORTE, b.BASE_CALCULO_ISR
    into '' + @tabla2+ ''
    from #LayoutNomina_NoComprobantes a WITH(NOLOCK)
    inner join #LayoTempDiez b WITH(NOLOCK) on a.id_periodo = b.Id_Periodo and a.id_plaza = b.id_plaza and a.id_emp = b.Id_Emp and a.id_periodopago = b.id_periodopago
    group by a.NO_COMPROBANTE, a.PERIODO,a.CLAVE_PLAZA,a.CURP, b.TIPO_CONCEPTO, b.COD_CONCEPTO, b.DESC_CONCEPTO, b.BASE_CALCULO_ISR,a.RFC''
    exec sp_executesql @query2
    
    select b.id_emp, a.id_Beneficiario, a.Id_concepto, a.Parentesco,replace(ltrim(rtrim(a.Nombre)),''.'', '''') Nombre,replace(ltrim(rtrim(a.ApPaterno)),''.'', '''') ApPaterno,replace(ltrim(rtrim(a.ApMaterno)),''.'', '''') ApMaterno, a.Pagaduria, a.subPagaduria, a.TipodePago, a.Cuenta_Invernomina, a.Id_Banco, a.RFC_Ben, a.id_conceptopago, a.RFC, a.CURP, a.Sexo, a.FechaNacimiento, a.Id_BeneficiarioRelacionado, a.PrioridadPensionado, a.id_plazaBen
    into #layoBeneficiarios
    from view_tbeneficiarios a WITH(NOLOCK)
    inner join rbeneficiario b WITH(NOLOCK) on b.id_beneficiario = a.id_beneficiario

    if exists(select top 1 parcial from histpagos a inner join CalenNomina c WITH(NOLOCK) on c.id_periodo = a.id_periodo 
    where c.Parcial = 0 and a.id_periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n)))
    begin
     update ben set ben.id_emp = deduc.id_emp from #layoBeneficiarios ben 
     inner join deducsfijas deduc on deduc.id_beneficiario = ben.id_beneficiario 
     inner join empleados e on e.id_emp = deduc.Id_Emp 
     where deduc.status <> ''B'' and e.Id_Cia in ( select distinct c.Id_cia from CalenNomina c where id_periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n)) )
     and ben.id_emp <> deduc.id_emp and ben.id_emp = 0
    end
     
    Select a.Id_beneficiario,a.id_plazaben,a.id_emp,b.id_concepto,a.PrioridadPensionado,a.appaterno,a.apmaterno,a.nombre,a.rfc,a.rfc_ben 
    into #layoBeneficiariosdos
    from #layoBeneficiarios A WITH(NOLOCK) inner join ( Select tprioridadpensionado.*,conceptos.id_concepto from tprioridadpensionado WITH(NOLOCK) , conceptos WITH(NOLOCK) where Charindex('',''+Ltrim(Rtrim(Cast(conceptos.id_concepto as varchar)))+'','','',''+Ltrim(Rtrim(tprioridadpensionado.conceptos))+'','')<>0 ) B on a.prioridadpensionado = b.id_prioridadpensionado

    Select a.*,C.Clave as CT, t.UDP, t.id_nodo, sB.Descr_prog as pro, ssb.Descr_subprog as Spr 
    into #layoCTpension
    from (HCentroTrabajoPensionados A  WITH(NOLOCK)
    inner join (Select id_beneficiario,max(fecha) as maximofecha from HCentroTrabajoPensionados WITH(NOLOCK) --where fecha <= (select max(fechafin) from calennomina WITH(NOLOCK) where id_periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n)))
    group by id_beneficiario ) B on a.id_beneficiario = b.id_beneficiario and a.fecha= b.maximofecha ) 
    inner join tnivel3se C WITH(NOLOCK) on c.id_nivel3se = a.id_rel
    inner join tablaconfigorgan y WITH(NOLOCK) on a.id_rel = y.ValorCampoLLave
    inner join TablaLongitudProp_28 t WITH(NOLOCK) on t.id_nodo = y.Id_Nodo
    left join (Select c.id_nodo , d.Descr_prog from RCT_Programa C WITH(NOLOCK) inner join TCT_Programa  D WITH(NOLOCK) on c.id_rel = d.id_CT_Programa  ) sB on sb.id_nodo = t.id_nodo 
    left join (Select c.id_nodo , d.Descr_subprog from rCT_Subprograma C WITH(NOLOCK) inner join TCT_Subprograma  D  WITH(NOLOCK) on c.id_rel = d.id_CT_SubPrograma  ) ssB on ssb.id_nodo = t.id_nodo 

    if exists(select top 1 parcial from CalenNomina c   where c.Parcial = 0 and c.id_periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n)))
    begin
      select t.id_beneficiario,   t.id_plazaben,  ben.id_emp, t.id_concepto,  t.prioridadpensionado,  t.appaterno,    t.apmaterno,    t.nombre,   t.rfc,  t.rfc_ben 
      into #pensionadosBaja1
      from #layoBeneficiariosdos t   
      inner join ( select a.* from hbeneficiario a   inner join ( select id_beneficiario, max(fecha) fecha from hbeneficiario   where id_emp <> 0 group by id_beneficiario ) b on b.id_beneficiario = a.id_beneficiario and b.Fecha = a.Fecha ) ben on ben.id_beneficiario = t.id_beneficiario where t.id_emp = 0 and t.id_concepto in (3081,3082,3083,3084,3085)

      insert into #layoBeneficiariosdos (id_beneficiario,  id_plazaben,    id_emp, id_concepto,    prioridadpensionado,    appaterno,  apmaterno, nombre,  rfc,    rfc_ben) 
      select id_beneficiario,    id_plazaben,    id_emp, id_concepto,    prioridadpensionado,    appaterno,  apmaterno, nombre,  rfc,    rfc_ben 
      from #pensionadosBaja1 a   where not exists ( select 1 from #layoBeneficiariosdos b   where b.id_emp = a.id_emp and b.id_concepto = a.id_concepto )

      update #layoBeneficiariosdos  set id_concepto = 3082 where id_beneficiario = 9516 and id_concepto = 3083

      select distinct v.id_Beneficiario,0 id_plazaben, d.id_emp,p.conceptoresponsabilidad,p.id_prioridad,  v.ApPaterno, v.ApMaterno, v.Nombre, v.RFC, v.RFC_Ben 
      into #layodesDeduc
      from view_tbeneficiarios v   inner join rbeneficiario r   on r.id_beneficiario = v.id_beneficiario 
      inner join deducsfijas d   on d.id_beneficiario = v.id_Beneficiario and d.Status in (''A'',''C'') 
      inner join PrioridadesPension p    on p.conceptoespejo = d.id_concepto

      delete from a from  #layoBeneficiariosdos  a 
      inner join #layodesDeduc b on b.id_emp = a.id_emp and b.conceptoresponsabilidad = a.id_concepto

      insert into #layoBeneficiariosdos (id_beneficiario,  id_plazaben,    id_emp, id_concepto,    prioridadpensionado,    appaterno,  apmaterno,  nombre, rfc,    rfc_ben) 
      select distinct v.id_Beneficiario,0 id_plazaben, d.id_emp,p.conceptoresponsabilidad,p.id_prioridad,  v.ApPaterno, v.ApMaterno, v.Nombre, v.RFC, v.RFC_Ben 
      from view_tbeneficiarios v   
      inner join rbeneficiario r   on r.id_beneficiario = v.id_beneficiario 
      inner join deducsfijas d   on d.id_beneficiario = v.id_Beneficiario and d.Status in (''A'',''C'') 
      inner join PrioridadesPension p    on p.conceptoespejo = d.id_concepto 
      where  not exists( select 1 from #layoBeneficiariosdos b   
      where b.id_beneficiario = v.id_Beneficiario and b.id_emp = d.id_emp and b.id_concepto =p.conceptoresponsabilidad )
    end



     select h.id_periodo,h.id_referencia,h.id_periodopago, h.id_plaza, h.id_emp,h.id_concepto,min(fecha) as fecha,min(isnull(c_costo,'''')) as cc,sum(horas) as horas,
    sum(pesos) as pesos, sum(pesosexcento) as pesosexcento, min(Consecutivo) as Consecutivo,min(desde) as desde,max(hasta) as hasta, 
    c.resultado, 1 as perded,''0'' as qmasapli,''0'' as qnastpt,case when sum(pesos+pesosexcento) < 0 then 1 else 0 End as signo 
    into #layobenPagos
    from (
      select Id_Emp, case when @agrupa = 1 then 0 else id_periodo end Id_Periodo,id_concepto,Consecutivo,Horas,Pesos,Id_categ,Fecha,PesosExcento,C_costo,id_plaza,
      case when @agrupa = 1 then 0 else Id_Referencia end Id_Referencia,case when @agrupa = 1 then 0 else id_periodoPago end id_periodoPago,
      Id_ProcesoNomina,Desde,Hasta
      from HistPagos  where id_periodo in ( SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))
      union all
      select Id_Emp, case when @agrupa = 1 then 0 else id_periodo end Id_Periodo,id_concepto,Consecutivo,Horas,Pesos,0 Id_categ,Fecha,PesosExcento,cc,id_plaza,
      case when @agrupa = 1 then 0 else Id_Referencia end Id_Referencia,case when @agrupa = 1 then 0 else id_periodoPago end id_periodoPago,
      Id_ProcesoNomina,Desde,Hasta
      from nom_HistPagos where id_periodo in ( SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))
      union all
      select Id_Emp,Id_Periodo,id_concepto,Consecutivo,Horas,Pesos, 0 Id_categ,Fecha,PesosExcento,cc,id_plaza,Id_Referencia,id_periodoPago,
      Id_ProcesoNomina,Desde,Hasta
      from nom_pagos_hist where Id_Periodo in (SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))
    ) h  
    inner join conceptos c WITH(NOLOCK) on c.id_concepto = h.id_concepto and c.tipo = 3
    where  
    h.id_concepto in ( select distinct id_concepto from #layoBeneficiariosdos WITH(NOLOCK) )
    group by h.id_periodo,h.id_referencia, h.id_emp, h.id_concepto, h.id_plaza, c.resultado,h.id_periodopago
    
    
    
    CREATE TABLE #layopagospension (Id_beneficiario int,id_emp int,id_plaza int,id_periodo int,id_referencia int,id_periodopago int,id_concepto int,UR varchar(5),
    TIPO_NOMINA varchar(5), PERIODO varchar(10),CURP_TRABAJADOR varchar(20),CLAVE_PLAZA varchar(30),ud smallint,PRIMER_APELLIDO varchar(500),
    SEGUNDO_APELLIDO varchar(500),NOMBRE varchar(500),RFC_PENSIONADO varchar(20),COD_CONCEPTO varchar(5),DESC_CONCEPTO varchar(100),
    FORMA_PAGO int,CVE_BANCO varchar(10),CLABE varchar(30),IMPORTE numeric(10, 2), esrespom int)

    if @agrupa = 1  
    begin
       select 0 id_periodo, max(cast(Numero as varchar) + ''/'' + cast(año as varchar)) PERIODO 
        into #periodopagopensiones
        from calennomina where id_periodo in ( SELECT periodo.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodo(n))

        insert into #layopagospension
        select w.Id_beneficiario,a.id_emp,a.id_plaza, a.id_periodo, a.id_referencia,a.id_periodopago, a.id_concepto,
        ''R20'' UR, ''O'' TIPO_NOMINA, b.PERIODO,s.CURP CURP_TRABAJADOR,replace(case when pi.plazaieepo like ''14%'' or pi.plazaieepo like ''15%'' then ''07''+substring(pi.plazaieepo,3, len(pi.plazaieepo)) else pi.plazaieepo end,'' '','''') CLAVE_PLAZA,v.udp as ud, 
        upper(w.appaterno) PRIMER_APELLIDO, upper(w.apmaterno) SEGUNDO_APELLIDO,upper(w.nombre) NOMBRE,w.rfc AS RFC_PENSIONADO, co.resultado COD_CONCEPTO, ''PENSIÓN ALIMENTICIA'' DESC_CONCEPTO, case when tb.TipodePago = 2 then 1 else 2 end FORMA_PAGO,
        case when len(tb.cuenta_invernomina) >= 18 then concat(''40'',substring(tb.cuenta_invernomina,1,3)) else '''' end CVE_BANCO, case when len(tb.cuenta_invernomina) >= 18 then tb.cuenta_invernomina else '''' end CLABE, cast(a.pesos as numeric(10,2)) as IMPORTE, 0 esrespom
        from #layobenPagos a
        inner join #periodopagopensiones b on a.id_periodo = b.id_periodo
        inner join empleados S on S.id_emp = a.id_emp
        inner join #layoBeneficiariosdos w on w.id_emp = a.id_emp and w.id_concepto = a.id_concepto and a.id_plaza = case when w.id_plazaben = 0 then a.id_plaza else w.id_plazaben end 
        left join #layoCTpension v on v.Id_beneficiario = w.Id_beneficiario
        left join tbeneficiario tb on tb.id_beneficiario = w.id_beneficiario 
        left join plazaieepo pi on pi.id_plaza = a.id_plaza
        left join conceptos co on co.id_concepto = a.id_concepto
        where exists ( select 1 from hplazas_concifed pc where pc.CODIGO_PLAZA = replace(case when pi.plazaieepo like ''14%'' or pi.plazaieepo like ''15%'' then ''07''+substring(pi.plazaieepo,3, len(pi.plazaieepo)) else pi.plazaieepo end,'' '','''') and pc.ESTATUS <> ''C'' )
      end
    else
    begin
        insert into #layopagospension
        select w.Id_beneficiario,a.id_emp,a.id_plaza, a.id_periodo, a.id_referencia,a.id_periodopago, a.id_concepto,
        ''R20'' UR, ''O'' TIPO_NOMINA, cast(b.Numero as varchar) + ''/'' + cast(b.año as varchar) PERIODO,s.CURP CURP_TRABAJADOR,replace(case when pi.plazaieepo like ''14%'' or pi.plazaieepo like ''15%'' then ''07''+substring(pi.plazaieepo,3, len(pi.plazaieepo)) else pi.plazaieepo end,'' '','''') CLAVE_PLAZA,v.udp as ud, 
        upper(w.appaterno) PRIMER_APELLIDO, upper(w.apmaterno) SEGUNDO_APELLIDO,upper(w.nombre) NOMBRE,w.rfc AS RFC_PENSIONADO, co.resultado COD_CONCEPTO, ''PENSIÓN ALIMENTICIA'' DESC_CONCEPTO, case when tb.TipodePago = 2 then 1 else 2 end FORMA_PAGO,
        case when len(tb.cuenta_invernomina) >= 18 then concat(''40'',substring(tb.cuenta_invernomina,1,3)) else '''' end CVE_BANCO, case when len(tb.cuenta_invernomina) >= 18 then tb.cuenta_invernomina else '''' end CLABE, cast(a.pesos as numeric(10,2)) as IMPORTE, 0 esrespom
        from #layobenPagos a  WITH(NOLOCK)
        inner join Calennomina b WITH(NOLOCK) on a.id_periodopago = b.id_periodo
        inner join empleados S WITH(NOLOCK) on S.id_emp = a.id_emp
        inner join #layoBeneficiariosdos w WITH(NOLOCK) on w.id_emp = a.id_emp and w.id_concepto = a.id_concepto and a.id_plaza = case when w.id_plazaben = 0 then a.id_plaza else w.id_plazaben end 
        left join #layoCTpension v WITH(NOLOCK) on v.Id_beneficiario = w.Id_beneficiario
        left join tbeneficiario tb WITH(NOLOCK) on tb.id_beneficiario = w.id_beneficiario 
        left join plazaieepo pi WITH(NOLOCK) on pi.id_plaza = a.id_plaza
        left join conceptos co WITH(NOLOCK) on co.id_concepto = a.id_concepto
        where exists ( select 1 from hplazas_concifed pc where pc.CODIGO_PLAZA = replace(case when pi.plazaieepo like ''14%'' or pi.plazaieepo like ''15%'' then ''07''+substring(pi.plazaieepo,3, len(pi.plazaieepo)) else pi.plazaieepo end,'' '','''') and pc.ESTATUS <> ''C'' )
     end

    update #layopagospension set esrespom = 1 where id_concepto in (select conceptoresponsabilidad from PrioridadesPension)


     select isnull(b.NO_COMPROBANTE,''000000000'') NO_COMPROBANTE, UR, a.PERIODO, TIPO_NOMINA, CURP_TRABAJADOR, 
    a.CLAVE_PLAZA, cast(ud as varchar) UNIDAD_PAGADORA,  PRIMER_APELLIDO,  SEGUNDO_APELLIDO, NOMBRE, RFC_PENSIONADO, COD_CONCEPTO, DESC_CONCEPTO, FORMA_PAGO, CVE_BANCO, CLABE, sum(IMPORTE) IMPORTE
    ,a.id_periodo,a.id_referencia, a.id_emp, a.id_plaza,a.esrespom, a.id_periodopago
    into #layopagospension2
    from #layopagospension a
    left join #LayoutNomina_NoComprobantes b   on a.id_periodo = b.id_periodo and a.id_emp = b.id_emp and a.id_plaza = b.id_plaza and a.id_referencia = b.Id_Referencia and a.id_periodopago = b.id_periodopago
    group by b.NO_COMPROBANTE,UR, TIPO_NOMINA, a.PERIODO, CURP_TRABAJADOR, 
    a.CLAVE_PLAZA, ud,  PRIMER_APELLIDO,  SEGUNDO_APELLIDO, NOMBRE, RFC_PENSIONADO, COD_CONCEPTO, DESC_CONCEPTO, FORMA_PAGO, CVE_BANCO, CLABE
    ,a.id_periodo,a.id_referencia, a.id_emp, a.id_plaza,a.esrespom, a.id_periodopago
    
    update a set a.unidad_pagadora = b.udp_fed from #layopagospension2 a
    inner join UDP_PensionFederal b on b.UDP_Edo = A.UNIDAD_PAGADORA
    
     update #layopagospension2 set COD_CONCEPTO = ''51U'' where COD_CONCEPTO = ''50''

    declare @tabpension varchar(50) = ''Anexo_VII_''
    set @tabpension = @tabpension +''''+convert(varchar,getdate(),112)+''''+replace(convert(varchar,getdate(),114),'':'','''')

    declare @queryp nvarchar(1000) = ''select NO_COMPROBANTE, UR, PERIODO, TIPO_NOMINA, CURP_TRABAJADOR, 
    CLAVE_PLAZA, UNIDAD_PAGADORA,case when PRIMER_APELLIDO = '''''''' then SEGUNDO_APELLIDO else PRIMER_APELLIDO end  PRIMER_APELLIDO, case when PRIMER_APELLIDO = '''''''' then '''''''' else SEGUNDO_APELLIDO end SEGUNDO_APELLIDO, NOMBRE, RFC_PENSIONADO, COD_CONCEPTO, DESC_CONCEPTO, FORMA_PAGO,case when FORMA_PAGO = 1 then CVE_BANCO else '''''''' end CVE_BANCO,case when FORMA_PAGO = 1 then CLABE else '''''''' end CLABE, sum(IMPORTE) IMPORTE, id_periodo, id_emp, id_plaza, esrespom, id_referencia, id_periodopago
    into '' + @tabpension + ''
    from #layopagospension2  
    group by NO_COMPROBANTE,UR, TIPO_NOMINA, PERIODO, CURP_TRABAJADOR, 
    CLAVE_PLAZA, UNIDAD_PAGADORA,  PRIMER_APELLIDO,  SEGUNDO_APELLIDO, NOMBRE, RFC_PENSIONADO, COD_CONCEPTO, DESC_CONCEPTO, FORMA_PAGO, 
     CVE_BANCO,  CLABE, id_periodo, id_emp, id_plaza, esrespom, id_referencia, id_periodopago''

    exec sp_executesql @queryp
    
    
    select @tabla1 + '';'' + @tabla2  + '';'' + @tabpension tablas'
GO

GO
PRINT N'Creating [dbo].[gendeta]'
GO
IF OBJECT_ID(N'[dbo].[gendeta]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[gendeta]
	-- Add the parameters for the stored procedure here
	 @IDPERIODO INT = 0,	
	@IDESQUEMA INT = 0
with encryption 	
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	IF @IDESQUEMA = 7
    BEGIN
         select b.resultado as concepto,b.tipo as perded,d.PlazaIEEPO,a.*, a2.Folio as cheque  into #TMPCTOU 
         from histpagos_Agrupadores a  
            inner join conceptos b on a.id_concepto=b.id_concepto inner join plazaieepo d 
            on a.id_plaza=d.id_plaza inner join calennomina e on a.id_periodo=e.id_periodo  
            inner join folio_recibos a2 on a.id_emp = a2.Id_Emp 
            and a.id_plaza =a2.Id_Plaza and a.Id_Periodo = a2.Id_Periodo and a2.Id_Recibo = 14
            where a.id_agrupperiodos = @IDPERIODO and b.tipo <> 3    
            order by a.id_plaza, a.Id_Emp, a.Id_Periodo, b.resultado 
          END
    ELSE
    BEGIN
    --CONCEPTOS DE BASICO
          select b.resultado as concepto,b.tipo as perded,d.plazaieepo,a.* into #TMPCTOB 
          from histpagos_Agrupadores a  
            inner join conceptos b on a.id_concepto=b.id_concepto inner join plazaieepo d 
            on a.id_plaza=d.id_plaza inner join calennomina e on a.id_periodo=e.id_periodo              
            where a.id_AgrupPeriodos = @IDPERIODO and b.tipo <> 3    
            order by a.id_plaza, a.Id_Emp, a.Id_Periodo, b.resultado 
    END
    --print ''creado #tmpctob''
--print ''creado #TMPNOM''
if @IDESQUEMA = 7
BEGIN
  SELECT     b.concepto, b.perded, b.id_concepto, b.Consecutivo, b.Horas, b.Pesos,
  b.Id_categ, b.Fecha, b.PesosExcento, b.C_costo, b.Id_Referencia, b.id_periodoPago, 	
  b.Id_ProcesoNomina, b.Desde, b.Hasta, b.Id_Emp, b.id_plaza, b.cheque  into ##DSVTAB  FROM 
   #TMPCTOU b 
  --into ##DSVTAB
END
ELSE
BEGIN
 
  SELECT   *    into ##DSTAB FROM  #TMPCTOB b 
 --print ''creado #TMPCTOB''
   
END
END
'
GO

GO
PRINT N'Creating [dbo].[SP_UpdLiquidos]'
GO
IF OBJECT_ID(N'[dbo].[SP_UpdLiquidos]', 'P') IS NULL
EXEC sp_executesql N'create procedure [dbo].[SP_UpdLiquidos]
with encryption
as
begin tran
	select
		id_emp, id_plaza, id_periodo, cheque,
		sum(
			case
				when (perded = 1 and signo = 0) or (perded = 2 and signo = 1) then importe
				when (perded = 1 and signo = 1) or (perded = 2 and signo = 0) then importe * -1
			end
		) liquido
	into #liquidos
	from cto
	group by id_emp, id_plaza, id_periodo, cheque

	update a
		set a.liquido = b.liquido
	from 
		nompro a join #liquidos b
		on 
			a.id_emp = b.id_emp 
			and a.id_plaza = b.id_plaza 
			and a.id_periodo = b.id_periodo 
			and a.cheque = b.cheque
	where a.liquido <> b.liquido
	if (@@ERROR <> 0) 
	begin
		rollback tran
		return 0
	end
commit tran
return 1'
GO

GO
PRINT N'Creating [dbo].[Sp_RefrescaHcontinuidadPagos]'
GO
IF OBJECT_ID(N'[dbo].[Sp_RefrescaHcontinuidadPagos]', 'P') IS NULL
EXEC sp_executesql N'
 CREATE procedure [dbo].[Sp_RefrescaHcontinuidadPagos](@idEmp as int)          
 as          
 begin      
     
     
exec InicializaHcontinuidadPagos @idEmp    
    
exec AnalizahcontinuidadPagos "201213",@idEmp    
exec AnalizahcontinuidadPagos "201214",@idEmp    
exec AnalizahcontinuidadPagos "201215",@idEmp    
exec AnalizahcontinuidadPagos "201216",@idEmp    
exec AnalizahcontinuidadPagos "201217",@idEmp    
exec AnalizahcontinuidadPagos "201218",@idEmp    
exec AnalizahcontinuidadPagos "201219",@idEmp    
exec AnalizahcontinuidadPagos "201220",@idEmp    
exec AnalizahcontinuidadPagos "201221",@idEmp    
exec AnalizahcontinuidadPagos "201222",@idEmp    
exec AnalizahcontinuidadPagos "201223",@idEmp    
exec AnalizahcontinuidadPagos "201224",@idEmp    
exec AnalizahcontinuidadPagos "201301",@idEmp    
exec AnalizahcontinuidadPagos "201302",@idEmp    
exec AnalizahcontinuidadPagos "201303",@idEmp    
exec AnalizahcontinuidadPagos "201304",@idEmp    
exec AnalizahcontinuidadPagos "201305",@idEmp    
exec AnalizahcontinuidadPagos "201306",@idEmp    
exec AnalizahcontinuidadPagos "201307",@idEmp    
exec AnalizahcontinuidadPagos "201308",@idEmp    
exec AnalizahcontinuidadPagos "201309",@idEmp    
exec AnalizahcontinuidadPagos "201310",@idEmp    
exec AnalizahcontinuidadPagos "201311",@idEmp    
exec AnalizahcontinuidadPagos "201312",@idEmp    
exec AnalizahcontinuidadPagos "201313",@idEmp    
exec AnalizahcontinuidadPagos "201314",@idEmp    
exec AnalizahcontinuidadPagos "201315",@idEmp    
exec AnalizahcontinuidadPagos "201316",@idEmp    
exec AnalizahcontinuidadPagos "201317",@idEmp    
exec AnalizahcontinuidadPagos "201318",@idEmp    
exec AnalizahcontinuidadPagos "201319",@idEmp    
exec AnalizahcontinuidadPagos "201320",@idEmp    
exec AnalizahcontinuidadPagos "201321",@idEmp    
exec AnalizahcontinuidadPagos "201322",@idEmp    
exec AnalizahcontinuidadPagos "201323",@idEmp    
exec AnalizahcontinuidadPagos "201324",@idEmp    
exec AnalizahcontinuidadPagos "201401",@idEmp    
exec AnalizahcontinuidadPagos "201402",@idEmp    
exec AnalizahcontinuidadPagos "201403",@idEmp    
exec AnalizahcontinuidadPagos "201404",@idEmp    
exec AnalizahcontinuidadPagos "201405",@idEmp    
exec AnalizahcontinuidadPagos "201406",@idEmp    
exec AnalizahcontinuidadPagos "201407",@idEmp    
exec AnalizahcontinuidadPagos "201408",@idEmp      
exec AnalizahcontinuidadPagos "201409",@idEmp      
exec AnalizahcontinuidadPagos "201410",@idEmp      
exec AnalizahcontinuidadPagos "201411",@idEmp      
exec AnalizahcontinuidadPagos "201412",@idEmp      
exec AnalizahcontinuidadPagos "201413",@idEmp      
exec AnalizahcontinuidadPagos "201414",@idEmp      
exec AnalizahcontinuidadPagos "201415",@idEmp      
exec AnalizahcontinuidadPagos "201416",@idEmp      
exec AnalizahcontinuidadPagos "201417",@idEmp      
exec AnalizahcontinuidadPagos "201418",@idEmp
end  '
GO

GO
PRINT N'Creating [dbo].[genenca]'
GO
IF OBJECT_ID(N'[dbo].[genenca]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[genenca] 
	-- Add the parameters for the stored procedure here
	@IDPERIODO INT = 0,	
	@IDESQUEMA INT = 0
	
with encryption
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
		SET NOCOUNT ON;
		declare @lb as int = 0
    IF @IDESQUEMA = 7
    BEGIN           
            select distinct dbo.DateToQNA(e.FechaIni) desdec, dbo.DateToQNA(e.FechaIni) hastac,
            a.id_plaza, a.Id_Emp, a.Id_Periodo into #TMPCTOU
            from histpagos_Agrupadores a  
            inner join plazaieepo d 
            on a.id_plaza=d.id_plaza inner join calennomina e on a.id_periodo=e.id_periodo  
            where a.id_agrupperiodos = @IDPERIODO and a.id_concepto = 1787
            order by a.id_plaza, a.Id_Emp, a.Id_Periodo            
            set @lb = 1
          END
    ELSE
    BEGIN
    --CONCEPTOS DE BASICO
          select b.resultado as concepto,b.tipo as perded,d.plazaieepo,a.*,
           dbo.DateToQNA(e.FechaIni) desdec, dbo.DateToQNA(e.FechaIni) hastac  
            into #TMPCTOB from histpagos_Agrupadores a  
            inner join conceptos b on a.id_concepto=b.id_concepto  inner join plazaieepo d 
            on a.id_plaza=d.id_plaza inner join calennomina e on a.id_periodo=e.id_periodo  
            where a.id_AgrupPeriodos = @IDPERIODO and a.id_concepto = 1787            
            order by a.id_plaza, a.Id_Emp, a.Id_Periodo, b.resultado 
            set @lb = 2
    END
    
-- otra tmp gral    
	select distinct e.leyenda4 as tippag, pt1.UDP as ud,f.id_nodo,g.clave,c.rfc as filiacio, C.CURP, c.Id_cod ,
  (rtrim(c.appaterno) + '' ''+rtrim(c.apmaterno) +'' ''+ rtrim(c.nombre)) as Pnombre,d.plazaieepo,substring(d.plazaieepo,7,6) as puesto,
  a.id_periodo, a.id_emp, a.id_plaza, a.id_agrupperiodos, 
  cast( year(a1.Fecha_Alta_SEP) as varchar) + ''''+ Right(''00'' + Cast(case when(day(a1.Fecha_Alta_SEP)>15)then month(a1.Fecha_Alta_SEP)*2 else (month(a1.Fecha_Alta_SEP)*2)-1 end as Varchar(2)),2) as ingsep,
  cast( year(e.FechaIniPago) as varchar) + ''''+ Right(''00'' + Cast(case when(day(e.FechaIniPago)>15)then month(e.FechaIniPago)*2 else (month(e.FechaIniPago)*2)-1 end as Varchar(2)),2) as qnapago,
  dd1.programa, dd2.subprograma
   into #TMPNOM from histpagos_Agrupadores a  
            inner join empleados c on a.id_emp=c.id_emp and c.Id_Cia = @lb  inner join plazaieepo d 
            on a.id_plaza=d.id_plaza 
            inner join 
            (select MAX(Movimiento) as movimiento,id_emp, max(Fecha_Alta_SEP) as fecha_alta_sep 
from HFecha_Alta_SEP where  Fecha  <= getdate()
group by HFecha_Alta_SEP.id_emp )a1
            on a1.id_emp = c.id_emp 
            inner join calennomina e on a.id_periodo=e.id_periodo inner join (select p.id_plaza,p.id_nodo from   
                  plazaempleados p inner join  (select id_plaza,Max(Fecha) as FechaMax   
                   from plazaEmpleados  where fecha <= getdate()  group by id_plaza ) hp  
                  on p.id_plaza = hp.id_plaza and  hp.FechaMax = p.Fecha) f on a.id_plaza=f.id_plaza 
            inner join vistatablalongitud g on f.id_nodo=g.id_nodo 
            inner join TablaLongitudProp_28  pt1 on pt1.id_nodo = g.Id_Nodo 
             left join (SELECT programa, id_nodo  FROM TCT_Programa, RCT_Programa WHERE id_CT_Programa = id_rel) dd1 on 
            dd1.id_nodo = g.Id_Nodo 
            left join (SELECT subprograma, id_nodo  FROM TCT_Subprograma, RCT_subPrograma WHERE id_CT_subPrograma = id_rel) dd2 on 
            dd2.id_nodo = g.Id_Nodo            
            where a.id_AgrupPeriodos  = @IDPERIODO  
            order by g.Clave, c.rfc, d.PlazaIEEPO,  e.leyenda4

 


select MAX(fecha) as maxFecha,id_plaza, 
Right(''00'' + cast((select valor_idcampo from hplazas b where b.Id_plaza=hplazas.id_plaza and  b.Fecha= MAX(hplazas.fecha) and id_tipomovplazas=1)  as varchar(2)),2) as motivo
,Right(''00'' + cast((select valor_idcampo from hplazas b where b.Id_plaza=hplazas.id_plaza and  b.Fecha= MAX(hplazas.fecha) and id_tipomovplazas=2)as varchar(2)),2) as status
into #TMPSTA from HPlazas where  Fecha  <= getdate()
group by hplazas.id_plaza

if @IDESQUEMA = 7
BEGIN
  SELECT distinct #TMPNOM.*, #TMPSTA.*, #TMPCTOU.desdec, #TMPCTOU.hastac
    FROM #TMPNOM JOIN #TMPSTA ON  #TMPNOM.id_plaza = #TMPSTA.Id_plaza
  INNER JOIN #TMPCTOU ON #TMPNOM.id_plaza = #TMPCTOU.id_plaza  
END
ELSE
BEGIN
  SELECT distinct #TMPNOM.*, #TMPSTA.*, #TMPCTOB.desdec, #TMPCTOB.hastac, #TMPCTOB.Pesos     
  FROM #TMPNOM JOIN #TMPSTA ON  #TMPNOM.id_plaza = #TMPSTA.Id_plaza
  INNER JOIN #TMPCTOB  ON #TMPNOM.id_plaza = #TMPCTOB.id_plaza 
END
END
'
GO

GO
PRINT N'Creating [dbo].[D1F2QU1N0MH1S]'
GO
IF OBJECT_ID(N'[dbo].[D1F2QU1N0MH1S]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[D1F2QU1N0MH1S]
@qnaini varchar(6), @qnafin varchar(6), @nom varchar(3), @idperini int, @idperfin int, @idcia int
WITH EXEC AS CALLER
AS
set @idcia = case 
                when @nom = ''BAS'' then 2
                when @nom = ''UPN'' then 1
              end
set @idperini = (select id_periodo from CalenNomina where Año = cast(SUBSTRING(@qnaini, 1, 4) as int) and Numero = cast(SUBSTRING(@qnaini, 5, 2) as int) and Parcial = 0 and Id_cia = @idcia)
set @idperfin = (select id_periodo from CalenNomina where Año = cast(SUBSTRING(@qnafin, 1, 4) as int) and Numero = cast(SUBSTRING(@qnafin, 5, 2) as int) and Parcial = 0 and Id_cia = @idcia)
;with histpagosINI as (
  select id_emp, id_periodo, id_concepto, pesos, id_plaza from nom_histpagos where Id_Periodo = @idperini
)
select isnull(qnaini.id_concepto, qnafin.id_concepto) as id_concepto, c.resultado, c.descripcion, isnull(round(qnaini.Total, 2), 0) as qna_inicio, isnull(round(qnafin.Total, 2), 0) as qna_fin,
round(isnull(qnafin.Total, 0) - isnull(qnaini.Total, 0), 2) as Diferencia, round(isnull(qnafin.Total, 0) + isnull(qnaini.Total, 0), 2) as Total
from (
  select h.id_concepto, round(sum(pesos),2) as Total 
  from histpagosINI h 
  where h.id_periodo = @idperini
  group by h.id_concepto
) qnaini
full join (
  select h.id_concepto, round(sum(pesos),2) as Total 
  from nom_histpagos h 
  where h.id_periodo = @idperfin
  group by h.id_concepto
) qnafin on qnaini.id_concepto = qnafin.id_concepto
inner join Conceptos c on c.id_concepto = isnull(qnaini.id_concepto, qnafin.id_concepto)
where c.tipo in (1,2)
order by c.Tipo, c.resultado'
GO

GO
PRINT N'Creating [dbo].[Puestos_categorias]'
GO
IF OBJECT_ID(N'[dbo].[Puestos_categorias]', 'P') IS NULL
EXEC sp_executesql N'

-- =============================================
-- Author:		<Sistemas,Noemi>
-- Create date: <Create Date, 10/06/2017 >
-- Description:	<Description, Datos de Puestos y categorias al igual que los conceptos>
-- =============================================
--exec Puestos_categorias 2,''e0101'','''','''',121,1908,''1'','''','''','''','''',''''
--exec Puestos_categorias 3,'''','''','''',121,2,'''','''',''2000'',''9999'','''',''''--SELECT * FROM TTabulador_SE_Cat_Puesto WHERE id_Tabulador_SE_Cat_Puesto=1953
--select * from empleados where rfc =''LOHE781215RJ6''
CREATE procedure [dbo].[Puestos_categorias] 
@consulta int,
@catpuesto varchar(12),--Categoria/Puesto
@descripcionCP varchar(150), --descripcion
@idCias varchar(20), 
@idUsuario int,
@idPuesto Int,
@tipoValor varchar(15),
@modelo varchar(500),
@añoDesde varchar(6),
@añoHasta varchar(6)
,@zona varchar(10)
,@conceptos varchar(50) 
WITH RECOMPILE 
AS
--	-- exec Puestos_categorias 1 ,'' E1490'','''','''',121,0,'''',''BASICO CATEGORIAS,NORMALES ADMINISTRATIVOS,BASICO PUESTOS,ESQUEMA DE EDUACION BASICA,CAPACITACION Y MEJORAMIENTO DOCENTE,NORMALES DOCENTES,UPN,HONORARIOS,CAPACITACION Y MEJORAMIENTO ADMINISTRATIVO,MANDOS MEDIOS'','''','''','''',''''
	--exec Puestos_categorias 1 ,'''','''','''',121,0,'''',''UPN'',''2000'',''9999'','''',''''
	--exec Puestos_categorias 3 ,'' E0101'','''','''',121,1953,'''',''A-BASICO CATEGORIAS,\-NORMALES ADMINISTRATIVOS,Q-BASICO PUESTOS,O-ESQUEMA DE EDUACION BASICA,I-CAPACITACION Y MEJORAMIENTO DOCENTE,H-NORMALES DOCENTES,UPN,*-HONORARIOS,R-CAPACITACION Y MEJORAMIENTO ADMINISTRATIVO,MANDOS MEDIOS'',''2000'',''9999'','''',''''
	
	-- exec Puestos_categorias 2 ,'''','''','''',121,1953,''1''
	-- exec Puestos_categorias 2 ,'''','''','''',121,1955,''1'','''','''','''','''',''''
	-- exec Puestos_categorias 3 ,'''','''','''',121,1955,'''','''','''','''','''',''''
	-- declare @catpuesto varchar(12)
	-- set @catpuesto=''AA'';
	-- declare @descripcionCP varchar(12)
	-- set @descripcionCP=''secretario''



	
	if(@consulta = 1)begin
	
		
		
		select * 
		into #matriz
		from (
			select distinct id_Tabulador_SE_Cat_Puesto id from  valoresmatriz4 with(nolock)
			union all 
			select distinct id_Tabulador_SE_Cat_Puesto id from  valoresmatriz8 with(nolock)
		)matriz;
		
		Select distinct tabla.id,categoria,descripcion,horasServicio,horasCompatibilidad, 
				Case when horasTotal > 42 then 42 else horasTotal end as horasTotal,modelo,
				nivel_puesto
		from ( 
			Select Categorias.id_Tabulador_SE_Cat_Puesto as id, Categorias.categoria, Categorias.descripcion, Hrs_Serv as horasServicio, Hrs_Compatibilidad as horasCompatibilidad ,
					Case when Hrs_Compatibilidad > Hrs_Comp_Max Then Hrs_Compatibilidad Else Hrs_Comp_Max end as horasTotal, modelo.descripcion modelo,
					case when Modelo.Descripcion like ''MANDOS MEDIOS'' Then ''MANDOS MEDIOS'' else ( case when Modelo.Descripcion like ''UPN'' Then ''UPN'' Else ''BASICA'' End ) End as Nomina,
					categorias.Nivel_Puesto 
			from TTabulador_SE_Cat_Puesto Categorias with(nolock)
			inner join TModelo_SE Modelo with(nolock) on Categorias.TModelo_SE_Id_Modelo_SE = Modelo.id_modelo_SE 	
			where categorias.categoria not like ''%ET%'' and categorias.categoria not like ''%EH%''
			--where id_modelo_se=7		                     
		) Tabla 
		join #matriz Matriz 
		on Tabla.id = matriz.id
		where categoria like ''%''+ @catpuesto+''%'' AND descripcion like ''%''+@descripcionCP+''%'' AND 
				rtrim(ltrim(modelo)) in (SELECT rtrim(ltrim([value])) FROM STRING_SPLIT2(@modelo,'',''))
		--and categoria like ''%T05011%''
		order by modelo,categoria, descripcion 
		--select * from TModelo_SE Modelo
		
	END
	ELSE IF(@consulta = 2)BEGIN
		
		CREATE TABLE [dbo].[#concep2](
		[id] [smallint] NOT NULL,
		[tipo] [tinyint] NOT NULL,
		[zona] [varchar](3) NULL,
		[concepto] [varchar](5) NULL,
		[desde] [varchar](32) NULL,
		[hasta] [char](6) NOT NULL,
		[importeMinimo] [float] NULL,
		[importeMaximo] [float] NULL
		) ON [PRIMARY];
	
		set @añoDesde = (select case when @añoDesde = '''' then 200000 when @añoDesde is null then 200000 else @añoDesde end)
		set @añoHasta = (select case when @añoHasta = '''' then 999999 when @añoHasta is null then 999999 else @añoHasta end)

		IF(@modelo<>''UPN'') BEGIN
	
			if(@tipoValor = ''1'') BEGIN 	
			
			--DECLARE @idPuesto int
			--set @idPuesto = 1961;
			
				select d.id,d.tipo, d.zona, concepto as concepto, desde as desde,isnull(hasta,''999999'')hasta,importeMinimo, importeMaximo 
				INTO #conceptos2
				from (
							Select ROW_NUMBER () over (PARTITION BY concepto,zona order by concepto,id_concepto,zona,desde ) as r ,tipo,id_concepto as id, zona, concepto as concepto, desde as desde,  max(importeMinimo) as importeMinimo, max(importeMaximo) as importeMaximo 
							from ( 
							  Select  matriz.tipo,Matriz.id_concepto, max(Zona.Descripcion) as Zona, max(matriz.resultado) as concepto, 
								cast( year(fecha) as varchar) + Right(''00'' + Cast(case when(day(fecha)>15)then month(fecha)*2 else (month(fecha)*2)-1 end as Varchar(2)),2) as desde, 
							   Matriz.id_Tabulador_SE_NIVEL_Pago, 
								case when id_Tabulador_SE_NIVEL_Pago = 1 
									Then 
										max(Matriz.valor) 
								  End 
								as importeMinimo, 
								case when id_Tabulador_SE_NIVEL_Pago = 3 
									Then 
										max(Matriz.valor) 
								  End 
								as importeMaximo 
								from (							
									SELECT conceptos.resultado,conceptos.tipo,matriz.* FROM valoresmatriz4 Matriz with(nolock)
									inner join Conceptos with(nolock) on Conceptos.id_concepto = Matriz.id_concepto 
									where Conceptos.tipo in(1,3) and id_Tabulador_SE_Cat_Puesto =@idPuesto						
								)matriz						 
								inner join TTabulador_SE_Zona Zona on Zona.id_Tabulador_SE_Zona = Matriz.id_Tabulador_SE_Zona 
								where id_Tabulador_SE_Cat_Puesto = @idPuesto --and len(Conceptos.resultado) = 2  
								group by Matriz.id_concepto,matriz.tipo,fecha,Zona.id_Tabulador_SE_Zona, Matriz.id_Tabulador_SE_NIVEL_Pago 						
							) DetalleCategoria 
							Group by id_concepto,tipo,zona,concepto,desde
							) d 
							left join (
										select ROW_NUMBER () over (PARTITION BY id,resultado,zona order by id,resultado,tipo,zona,hasta ) as r,
											id,zona,resultado,hasta,tipo
										from (	
												select matriz.id_concepto id,resultado,zona,dbo.fechaToAnioQuincena(Fecha-1) as hasta ,tipo
												from 
													(
														SELECT conceptos.resultado,conceptos.tipo,matriz.* FROM valoresmatriz4 Matriz with(nolock)
														inner join Conceptos with(nolock) on Conceptos.id_concepto = Matriz.id_concepto 
														where Conceptos.tipo in(1,3) and id_Tabulador_SE_Cat_Puesto =@idPuesto
												)matriz						 										
												inner join TTabulador_SE_Zona Zona with(nolock) on Zona.id_Tabulador_SE_Zona = Matriz.id_Tabulador_SE_Zona 
												where id_tabulador_se_cat_puesto =@idPuesto
												group by  matriz.id_concepto,tipo,zona,resultado,dbo.fechaToAnioQuincena(Fecha-1)
										)a 
							) hasta on d.r = hasta.r-1 and hasta.Zona=d.zona and hasta.resultado=d.concepto 
							order by d.concepto,d.zona,d.desde asc
							
							IF(@modelo=''MANDOS MEDIOS'' )BEGIN 				 
								insert into #concep2
								SELECT * 
								FROM #conceptos2
								WHERE Concepto in (''07'',''7a'',''7b'',''7c'',''7d'',''7e'',''bc'') and tipo = 1;					
							 END
							 ELSE
							 BEGIN
								insert into #concep2
								SELECT * 
								FROM #conceptos2 
								WHERE Concepto in (''07'',''7a'',''7b'',''7c'',''7d'',''7e'',''bc'') and tipo = 3;
							END
							insert into #concep2
							SELECT * FROM #conceptos2 
							where Concepto not in (''07'',''7a'',''7b'',''7c'',''7d'',''7e'',''bc'') and tipo = 1;
							
							--select id,zona_2 zonaEconomica,concepto,min(desde)desde,max(hasta)hasta,Round(importeMinimo_z2, 2, 0)importeMinimo_z2,Round(importeMaximo_z2, 2, 0)importeMaximo_z2,zona_3,Round(importeMinimo_z3, 2, 0)importeMinimo_z3,Round(importeMaximo_z3, 2, 0)importeMaximo_z3
							--from(
							--	select c.id,c.tipo,c.concepto,c.desde,c.hasta,c.zona zona_2,ISNULL(c.importeMinimo,'''') importeMinimo_z2,ISNULL(c.importeMaximo,'''') importeMaximo_z2,ISNULL(z3.zona,'''') zona_3,ISNULL(z3.importeMinimo,'''') importeMinimo_z3,ISNULL(z3.importeMaximo,'''') importeMaximo_z3
							--	from #concep2 c 
							--	left join (select * from #concep2 where zona=3) z3 
							--	on z3.concepto=c.concepto  and z3.desde=c.desde and z3.hasta=c.hasta
							--	where c.zona=2
							--)a group by id,tipo,concepto,zona_2,importeMinimo_z2,importeMaximo_z2,zona_3,importeMinimo_z3,importeMaximo_z3
							--order by a.concepto,ID,desde ;
							select id,zona zonaEconomica,concepto,desde,hasta,importeMinimo,importeMaximo 
							from #concep2
							where @añodesde BETWEEN desde and hasta or @añohasta BETWEEN desde and hasta 
							or ( desde >= @añoDesde and hasta <=@añoHasta)
							;							
							--exec Puestos_categorias 2,'''','''','''',121,1902,1,''BASICO PUESTOS'',''201802'',''201905'',''2,3'','''';
							
				END
				ELSE 
				BEGIN
					select d.id,d.tipo, d.zona, concepto as concepto, desde as desde,isnull(hasta,''999999'')hasta,importeMinimo, importeMaximo 
					INTO #conceptos22
					from (
							Select ROW_NUMBER () over (PARTITION BY concepto,zona order by concepto,id_concepto,zona,desde ) as r ,tipo,id_concepto as id, zona, concepto as concepto, desde as desde,  max(importeMinimo) as importeMinimo, max(importeMaximo) as importeMaximo 
							from ( 
							  Select  matriz.tipo,Matriz.id_concepto, max(Zona.Descripcion) as Zona, max(matriz.resultado) as concepto, 
								cast( year(fecha) as varchar) + Right(''00'' + Cast(case when(day(fecha)>15)then month(fecha)*2 else (month(fecha)*2)-1 end as Varchar(2)),2) as desde, 
							   Matriz.id_Tabulador_SE_NIVEL_Pago, 
								case when id_Tabulador_SE_NIVEL_Pago = 1 
									Then 
										max(Matriz.valor) 
								  End 
								as importeMinimo, 
								case when id_Tabulador_SE_NIVEL_Pago = 3 
									Then 
										max(Matriz.valor) 
								  End 
								as importeMaximo 
								from (							
									SELECT conceptos.resultado,conceptos.tipo,matriz.* FROM valoresmatriz5 Matriz with(nolock)
									inner join Conceptos with(nolock) on Conceptos.id_concepto = Matriz.id_concepto 
									where Conceptos.tipo in(1) and id_Tabulador_SE_Cat_Puesto =@idPuesto						
								)matriz						 
								inner join TTabulador_SE_Zona Zona on Zona.id_Tabulador_SE_Zona = Matriz.id_Tabulador_SE_Zona 
								where id_Tabulador_SE_Cat_Puesto = @idPuesto --and len(Conceptos.resultado) = 2  
								group by Matriz.id_concepto,matriz.tipo,fecha,Zona.id_Tabulador_SE_Zona, Matriz.id_Tabulador_SE_NIVEL_Pago 						
							) DetalleCategoria 
							Group by id_concepto,tipo,zona,concepto,desde
							) d 
							left join (
										select ROW_NUMBER () over (PARTITION BY id,resultado,zona order by id,resultado,tipo,zona,hasta ) as r,
											id,zona,resultado,hasta,tipo
										from (	
												select matriz.id_concepto id,resultado,zona,dbo.fechaToAnioQuincena(Fecha-1) as hasta ,tipo
												from 
													(
														SELECT conceptos.resultado,conceptos.tipo,matriz.* FROM valoresmatriz5 Matriz with(nolock)
														inner join Conceptos with(nolock) on Conceptos.id_concepto = Matriz.id_concepto 
														where Conceptos.tipo in(1) and id_Tabulador_SE_Cat_Puesto =@idPuesto
													)matriz						 										
												inner join TTabulador_SE_Zona Zona with(nolock) on Zona.id_Tabulador_SE_Zona = Matriz.id_Tabulador_SE_Zona 
												where id_tabulador_se_cat_puesto =@idPuesto
												group by  matriz.id_concepto,tipo,zona,resultado,dbo.fechaToAnioQuincena(Fecha-1)
										)a 
							) hasta on d.r = hasta.r-1 and hasta.Zona=d.zona and hasta.resultado=d.concepto 
							order by d.concepto,d.zona,d.desde asc
							
							IF(@modelo=''MANDOS MEDIOS'' )BEGIN 				 
								insert into #concep2
								SELECT * 
								FROM #conceptos22 
								WHERE Concepto in (''07'',''7a'',''7b'',''7c'',''7d'',''7e'',''bc'') and tipo = 1;					
							 END
							 ELSE
							 BEGIN
								insert into #concep2
								SELECT * 
								FROM #conceptos22
								WHERE Concepto in (''07'',''7a'',''7b'',''7c'',''7d'',''7e'',''bc'') and tipo = 3;
							END
							insert into #concep2
							SELECT * FROM #conceptos22 
							where Concepto not in (''07'',''7a'',''7b'',''7c'',''7d'',''7e'',''bc'') and tipo = 1;
							
							select id,zona zonaEconomica,concepto,desde,hasta,importeMinimo,importeMaximo 
							from  #concep2
							where @añodesde BETWEEN desde and hasta or @añohasta BETWEEN desde and hasta 
							or ( desde >= @añoDesde and hasta <=@añoHasta)
							;
							
							--exec Puestos_categorias 2,'''','''','''',121,1902,1,''BASICO PUESTOS'',''201802'',''201805'',''2,3'',''''
							--select id,zona_2 zonaEconomica,concepto zonaEconomica,min(desde)desde,max(hasta)hasta,Round(importeMinimo_z2, 2, 0)importeMinimo_z2,Round(importeMaximo_z2, 2, 0)importeMaximo_z2,zona_3,Round(importeMinimo_z3, 2, 0)importeMinimo_z3,Round(importeMaximo_z3, 2, 0)importeMaximo_z3
							--from(
							--	select c.id,c.tipo,c.concepto,c.desde,c.hasta,c.zona zona_2,ISNULL(c.importeMinimo,'''') importeMinimo_z2,ISNULL(c.importeMaximo,'''') importeMaximo_z2,ISNULL(z3.zona,'''') zona_3,ISNULL(z3.importeMinimo,'''') importeMinimo_z3,ISNULL(z3.importeMaximo,'''') importeMaximo_z3
							--	from #concep2 c 
							--	left join (select * from #concep2 where zona=3) z3 
							--	on z3.concepto=c.concepto  and z3.desde=c.desde and z3.hasta=c.hasta
							--	where c.zona=2
							--)a group by id,tipo,concepto,zona_2,importeMinimo_z2,importeMaximo_z2,zona_3,importeMinimo_z3,importeMaximo_z3
							--order by a.concepto,ID,desde ;
			END
		END 
		ELSE 
		BEGIN
			if(@tipoValor = ''1'') BEGIN 	
				select d.id,d.tipo, d.zona, concepto as concepto, desde as desde,isnull(hasta,''999999'')hasta, 
				importeMinimo, importeMaximo 
				INTO #conceptosUPN2
				from (
							Select ROW_NUMBER () over (PARTITION BY concepto,zona order by concepto,id_concepto,zona,desde ) as r ,tipo,id_concepto as id, zona, concepto as concepto, desde as desde,  max(importeMinimo) as importeMinimo, max(importeMaximo) as importeMaximo 
							from ( 
							  Select  matriz.tipo,Matriz.id_concepto, max(Zona.Descripcion) as Zona, max(matriz.resultado) as concepto, 
								cast( year(fecha) as varchar) + Right(''00'' + Cast(case when(day(fecha)>15)then month(fecha)*2 else (month(fecha)*2)-1 end as Varchar(2)),2) as desde, 
							   Matriz.id_Tabulador_SE_NIVEL_Pago, 
								case when id_Tabulador_SE_NIVEL_Pago = 1 
									Then 
										max(Matriz.valor) 
								  End 
								as importeMinimo, 
								case when id_Tabulador_SE_NIVEL_Pago = 3 
									Then 
										max(Matriz.valor) 
								  End 
								as importeMaximo 
								from 
								(
									SELECT conceptos.resultado,conceptos.tipo,matriz.* FROM valoresmatriz8 Matriz with(nolock)
									inner join Conceptos with(nolock) on Conceptos.id_concepto = Matriz.id_concepto 
									where Conceptos.tipo in(1) and id_Tabulador_SE_Cat_Puesto =@idPuesto
								)matriz						 
								inner join TTabulador_SE_Zona Zona with(nolock) on Zona.id_Tabulador_SE_Zona = Matriz.id_Tabulador_SE_Zona 
								where id_Tabulador_SE_Cat_Puesto = @idPuesto --and len(Conceptos.resultado) = 2  
								group by Matriz.id_concepto,matriz.tipo,fecha,Zona.id_Tabulador_SE_Zona, Matriz.id_Tabulador_SE_NIVEL_Pago 						
							) DetalleCategoria 
							Group by id_concepto,tipo,zona,concepto,desde
							) d 
							left join (
										select ROW_NUMBER () over (PARTITION BY id,resultado,zona order by id,resultado,tipo,zona,hasta ) as r,
											id,zona,resultado,hasta,tipo
										from (	
												select matriz.id_concepto id,resultado,zona,dbo.fechaToAnioQuincena(Fecha-1) as hasta ,tipo
												from 
													(
														SELECT conceptos.resultado,conceptos.tipo,matriz.* FROM valoresmatriz8 Matriz with(nolock)
														inner join Conceptos with(nolock) on Conceptos.id_concepto = Matriz.id_concepto 
														where Conceptos.tipo in(1,3) and id_Tabulador_SE_Cat_Puesto =@idPuesto												
													)matriz						 										
												inner join TTabulador_SE_Zona Zona with(nolock) on Zona.id_Tabulador_SE_Zona = Matriz.id_Tabulador_SE_Zona 
												where id_tabulador_se_cat_puesto =@idPuesto
												group by  matriz.id_concepto,tipo,zona,resultado,dbo.fechaToAnioQuincena(Fecha-1)
										)a 
							) hasta on d.r = hasta.r-1 and hasta.Zona=d.zona and hasta.resultado=d.concepto 
							order by d.concepto,d.zona,d.desde asc;
					
					--select * from #conceptosUPN 		
					
					--select top 0* into #concepDH_UPN from #conceptosUPN;
				
					--IF(@añodesde <>'''')BEGIN
					--	insert into #concep2
					--	SELECT * 
					--	FROM #conceptosUPN 
					--	WHERE substring(desde,1,4) >= @añoDesde and substring(desde,1,4) <= @añoHasta 
					--	and tipo = 1;
					--END
					--ELSE
					--BEGIN
						insert into #concep2
						SELECT * FROM #conceptosUPN2
						where tipo = 1;		
					--END	
					
					select id,zona zonaEconomica,concepto,desde,hasta,importeMinimo,importeMaximo from #concep2;
					
					--select id,zona_2 zonaEconomica,concepto,min(desde)desde,max(hasta)hasta,Round(importeMinimo_z2, 2, 0)importeMinimo_z2,Round(importeMaximo_z2, 2, 0)importeMaximo_z2,zona_3,Round(importeMinimo_z3, 2, 0)importeMinimo_z3,Round(importeMaximo_z3, 2, 0)importeMaximo_z3
					--from(
					--	select c.id,c.tipo,c.concepto,c.desde,c.hasta,c.zona zona_2,ISNULL(c.importeMinimo,'''') importeMinimo_z2,ISNULL(c.importeMaximo,'''') importeMaximo_z2,ISNULL(z3.zona,'''') zona_3,ISNULL(z3.importeMinimo,'''') importeMinimo_z3,ISNULL(z3.importeMaximo,'''') importeMaximo_z3
					--	from #concep2 c 
					--	left join (select * from #concep2 where zona=3) z3 
					--	on z3.concepto=c.concepto  and z3.desde=c.desde and z3.hasta=c.hasta
					--	where c.zona=2
					--)a group by id,tipo,concepto,zona_2,importeMinimo_z2,importeMaximo_z2,zona_3,importeMinimo_z3,importeMaximo_z3
					--order by a.concepto,ID,desde ;
					end 
			END
	END
	
	ELSE IF (@consulta = 3) BEGIN
	
--exec Puestos_categorias 1,''e0101'','''','''',121,0,''2'','''','''','''','''',''''
--exec Puestos_categorias 3,'''','''','''',121,2,'''',''A-BASICO CATEGORIAS'',''2013'',''2015'','''',''''
--exec Puestos_categorias 3,''e0101'',''INSPECTORA DE JARDINES DE NINO'','''',121,2,'''',''A-BASICO CATEGORIAS'',''2013'',''2015'','''',''''

	
	CREATE TABLE [dbo].[#concep](
	[id] [smallint] NOT NULL,
	[tipo] [tinyint] NOT NULL,
	[zona] [varchar](3) NULL,
	[concepto] [varchar](5) NULL,
	[desde] [varchar](32) NULL,
	[hasta] [char](6) NOT NULL,
	[importeMinimo] [float] NULL,
	[importeMaximo] [float] NULL
	) ON [PRIMARY];
	
	if(@modelo <> ''UPN'')BEGIN 
	
		select d.id,d.tipo, d.zona, concepto as concepto, desde as desde,isnull(hasta,''999999'')hasta, 
		importeMinimo, importeMaximo 
		INTO #conceptos
		from (
					Select ROW_NUMBER () over (PARTITION BY concepto,zona order by concepto,id_concepto,zona,desde ) as r ,tipo,id_concepto as id, zona, concepto as concepto, desde as desde,  max(importeMinimo) as importeMinimo, max(importeMaximo) as importeMaximo 
					from ( 
					  Select  matriz.tipo,Matriz.id_concepto, max(Zona.Descripcion) as Zona, max(matriz.resultado) as concepto, 
						cast( year(fecha) as varchar) + Right(''00'' + Cast(case when(day(fecha)>15)then month(fecha)*2 else (month(fecha)*2)-1 end as Varchar(2)),2) as desde, 
					   Matriz.id_Tabulador_SE_NIVEL_Pago, 
						case when id_Tabulador_SE_NIVEL_Pago = 1 
							Then 
								max(Matriz.valor) 
						  End 
						as importeMinimo, 
						case when id_Tabulador_SE_NIVEL_Pago = 3 
							Then 
								max(Matriz.valor) 
						  End 
						as importeMaximo 
						from (
							SELECT conceptos.resultado,conceptos.tipo,matriz.* FROM valoresmatriz4 Matriz with(nolock)
							inner join Conceptos with(nolock) on Conceptos.id_concepto = Matriz.id_concepto 
							where Conceptos.tipo in(1,3) and id_Tabulador_SE_Cat_Puesto =@idPuesto
							UNION ALL
							SELECT conceptos.resultado,conceptos.tipo,matriz.* FROM valoresmatriz5 Matriz with(nolock)
							inner join Conceptos with(nolock) on Conceptos.id_concepto = Matriz.id_concepto 
							where Conceptos.tipo in(1) and id_Tabulador_SE_Cat_Puesto =@idPuesto						
						)matriz						 
						inner join TTabulador_SE_Zona Zona on Zona.id_Tabulador_SE_Zona = Matriz.id_Tabulador_SE_Zona 
						where id_Tabulador_SE_Cat_Puesto = @idPuesto --and len(Conceptos.resultado) = 2  
						group by Matriz.id_concepto,matriz.tipo,fecha,Zona.id_Tabulador_SE_Zona, Matriz.id_Tabulador_SE_NIVEL_Pago 						
					) DetalleCategoria 
					Group by id_concepto,tipo,zona,concepto,desde
					) d 
					left join (
								select ROW_NUMBER () over (PARTITION BY id,resultado,zona order by id,resultado,tipo,zona,hasta ) as r,
									id,zona,resultado,hasta,tipo
								from (	
										select matriz.id_concepto id,resultado,zona,dbo.fechaToAnioQuincena(Fecha-1) as hasta ,tipo
										from 
											(
												SELECT conceptos.resultado,conceptos.tipo,matriz.* FROM valoresmatriz4 Matriz with(nolock)
												inner join Conceptos with(nolock) on Conceptos.id_concepto = Matriz.id_concepto 
												where Conceptos.tipo in(1,3) and id_Tabulador_SE_Cat_Puesto =@idPuesto
												UNION ALL
												SELECT conceptos.resultado,conceptos.tipo,matriz.* FROM valoresmatriz5 Matriz with(nolock)
												inner join Conceptos with(nolock) on Conceptos.id_concepto = Matriz.id_concepto 
												where Conceptos.tipo in(1) and id_Tabulador_SE_Cat_Puesto =@idPuesto
											)matriz						 										
										inner join TTabulador_SE_Zona Zona with(nolock) on Zona.id_Tabulador_SE_Zona = Matriz.id_Tabulador_SE_Zona 
										where id_tabulador_se_cat_puesto =@idPuesto
										group by  matriz.id_concepto,tipo,zona,resultado,dbo.fechaToAnioQuincena(Fecha-1)
								)a 
					) hasta on d.r = hasta.r-1 and hasta.Zona=d.zona and hasta.resultado=d.concepto 
					order by d.concepto,d.zona,d.desde asc
		
			--select * into concepDH 
			--from #conceptos;
			
			--IF(@añodesde <>'''')BEGIN
				-- IF(@modelo=''MANDOS MEDIOS'' )BEGIN 				 
				--	insert into #concep
				--	SELECT * 
				--	FROM #conceptos 
				--	WHERE substring(desde,1,4) >= @añoDesde and substring(desde,1,4) <= @añoHasta 
				--	and Concepto in (''07'',''7a'',''7b'',''7c'',''7d'',''7e'',''bc'') and tipo = 1
				--	ORDER BY concepto,zona ;
				-- END
				-- ELSE 
				-- BEGIN
				--	insert into #concep
				--	SELECT * 
				--	FROM #conceptos 
				--	WHERE substring(desde,1,4) >= @añoDesde and substring(desde,1,4) <= @añoHasta 
				--	and Concepto in (''07'',''7a'',''7b'',''7c'',''7d'',''7e'',''bc'') and tipo = 3
				--	ORDER BY concepto,zona ;
				--END
				--insert into #concep
				--SELECT * 
				--FROM #conceptos 
				--WHERE substring(desde,1,4) >= @añoDesde and substring(desde,1,4) <= @añoHasta 
				--and Concepto not in (''07'',''7a'',''7b'',''7c'',''7d'',''7e'',''bc'') and tipo = 1 
				--ORDER BY concepto,zona ;
			--END
			--ELSE
			--BEGIN
				 IF(@modelo=''MANDOS MEDIOS'' )BEGIN 				 
					insert into #concep
					SELECT * 
					FROM #conceptos 
					WHERE Concepto in (''07'',''7a'',''7b'',''7c'',''7d'',''7e'',''bc'') and tipo = 1;
					
				 END
				 ELSE
				 BEGIN
					insert into #concep
					SELECT * 
					FROM #conceptos 
					WHERE Concepto in (''07'',''7a'',''7b'',''7c'',''7d'',''7e'',''bc'') and tipo = 3;
				END
				insert into #concep
				SELECT * FROM #conceptos 
				where Concepto not in (''07'',''7a'',''7b'',''7c'',''7d'',''7e'',''bc'') and tipo = 1;			
			--END	
			
			
			
			--select id--,tipo
			--,concepto,min(desde)desde,max(hasta)hasta,zona_2,Round(importeMinimo_z2, 2, 0)importeMinimo_z2,Round(importeMaximo_z2, 2, 0)importeMaximo_z2,zona_3,Round(importeMinimo_z3, 2, 0)importeMinimo_z3,Round(importeMaximo_z3, 2, 0)importeMaximo_z3
			--from(
			--select c.id,c.tipo,c.concepto,c.desde,c.hasta,c.zona zona_2,ISNULL(c.importeMinimo,'''') importeMinimo_z2,ISNULL(c.importeMaximo,'''') importeMaximo_z2,ISNULL(z3.zona,'''') zona_3,ISNULL(z3.importeMinimo,'''') importeMinimo_z3,ISNULL(z3.importeMaximo,'''') importeMaximo_z3
			--from #concep c 
			--left join (select * from #concep where zona=3) z3 
			--on z3.concepto=c.concepto  and z3.desde=c.desde and z3.hasta=c.hasta
			--where c.zona=2
			--)a group by id,tipo,concepto,zona_2,importeMinimo_z2,importeMaximo_z2,zona_3,importeMinimo_z3,importeMaximo_z3
			--order by a.concepto,ID,desde ;
		END		
		ELSE 
		BEGIN 
		select d.id,d.tipo, d.zona, concepto as concepto, desde as desde,isnull(hasta,''999999'')hasta, 
		importeMinimo, importeMaximo 
		INTO #conceptosUPN
		from (
					Select ROW_NUMBER () over (PARTITION BY concepto,zona order by concepto,id_concepto,zona,desde ) as r ,tipo,id_concepto as id, zona, concepto as concepto, desde as desde,  max(importeMinimo) as importeMinimo, max(importeMaximo) as importeMaximo 
					from ( 
					  Select  matriz.tipo,Matriz.id_concepto, max(Zona.Descripcion) as Zona, max(matriz.resultado) as concepto, 
						cast( year(fecha) as varchar) + Right(''00'' + Cast(case when(day(fecha)>15)then month(fecha)*2 else (month(fecha)*2)-1 end as Varchar(2)),2) as desde, 
					   Matriz.id_Tabulador_SE_NIVEL_Pago, 
						case when id_Tabulador_SE_NIVEL_Pago = 1 
							Then 
								max(Matriz.valor) 
						  End 
						as importeMinimo, 
						case when id_Tabulador_SE_NIVEL_Pago = 3 
							Then 
								max(Matriz.valor) 
						  End 
						as importeMaximo 
						from 
						(
							SELECT conceptos.resultado,conceptos.tipo,matriz.* FROM valoresmatriz8 Matriz with(nolock)
							inner join Conceptos with(nolock) on Conceptos.id_concepto = Matriz.id_concepto 
							where Conceptos.tipo in(1) and id_Tabulador_SE_Cat_Puesto =@idPuesto
						)matriz						 
						inner join TTabulador_SE_Zona Zona with(nolock) on Zona.id_Tabulador_SE_Zona = Matriz.id_Tabulador_SE_Zona 
						where id_Tabulador_SE_Cat_Puesto = @idPuesto --and len(Conceptos.resultado) = 2  
						group by Matriz.id_concepto,matriz.tipo,fecha,Zona.id_Tabulador_SE_Zona, Matriz.id_Tabulador_SE_NIVEL_Pago 						
					) DetalleCategoria 
					Group by id_concepto,tipo,zona,concepto,desde
					) d 
					left join (
								select ROW_NUMBER () over (PARTITION BY id,resultado,zona order by id,resultado,tipo,zona,hasta ) as r,
									id,zona,resultado,hasta,tipo
								from (	
										select matriz.id_concepto id,resultado,zona,dbo.fechaToAnioQuincena(Fecha-1) as hasta ,tipo
										from 
											(
												SELECT conceptos.resultado,conceptos.tipo,matriz.* FROM valoresmatriz8 Matriz with(nolock)
												inner join Conceptos with(nolock) on Conceptos.id_concepto = Matriz.id_concepto 
												where Conceptos.tipo in(1,3) and id_Tabulador_SE_Cat_Puesto =@idPuesto												
											)matriz						 										
										inner join TTabulador_SE_Zona Zona with(nolock) on Zona.id_Tabulador_SE_Zona = Matriz.id_Tabulador_SE_Zona 
										where id_tabulador_se_cat_puesto =@idPuesto
										group by  matriz.id_concepto,tipo,zona,resultado,dbo.fechaToAnioQuincena(Fecha-1)
								)a 
					) hasta on d.r = hasta.r-1 and hasta.Zona=d.zona and hasta.resultado=d.concepto 
					order by d.concepto,d.zona,d.desde asc;
			
			--select * from #conceptosUPN 		
			
			--select top 0* into #concepDH_UPN from #conceptosUPN;
		
			--IF(@añodesde <>'''')BEGIN
			--	insert into #concep
			--	SELECT * 
			--	FROM #conceptosUPN 
			--	WHERE substring(desde,1,4) >= @añoDesde and substring(desde,1,4) <= @añoHasta 
			--	and tipo = 1;
			--END
			--ELSE
			--BEGIN
				insert into #concep
				SELECT * FROM #conceptosUPN 
				where tipo = 1;		
			--END	
		
		END	
		
		
		update #concep set importeMinimo='''',importeMaximo='''' where zona not in (SELECT [value] FROM STRING_SPLIT2(@zona,'',''));
	--exec Puestos_categorias 1 ,''AA0101'','''','''',121,1953,'''','''','''','''','''',''7B,7C,7D,7E,A1,A2''
	--exec Puestos_categorias 3 ,'''','''','''',121,1953,'''',''MANDOS MEDIOS'','''','''',''2'',''''--''7B,7C,7D,7E,A1,A2''
		
		CREATE TABLE #infoFinal(
			[id] [smallint] NOT NULL,
			[concepto] [varchar](5) NULL,
			[desde] [varchar](32) NULL,
			[hasta] [char](6) NULL,
			[zona_2] [varchar](3) NULL,
			[importeMinimo_z2] [float] NOT NULL,
			[importeMaximo_z2] [float] NOT NULL,
			[zona_3] [varchar](3) NOT NULL,
			[importeMinimo_z3] [float] NOT NULL,
			[importeMaximo_z3] [float] NOT NULL
		) ON [PRIMARY]

		--SELECT * FROM #concep;
		if(@conceptos='''')begin
			
			insert into #infoFinal
			select id--,tipo
				,concepto,min(desde)desde,max(hasta)hasta,zona_2,Round(importeMinimo_z2, 2, 0)importeMinimo_z2,Round(importeMaximo_z2, 2, 0)importeMaximo_z2,zona_3,Round(importeMinimo_z3, 2, 0)importeMinimo_z3,Round(importeMaximo_z3, 2, 0)importeMaximo_z3
			from(
					select c.id,c.tipo,c.concepto,c.desde,c.hasta,c.zona zona_2,ISNULL(c.importeMinimo,'''') importeMinimo_z2,ISNULL(c.importeMaximo,'''') importeMaximo_z2,ISNULL(z3.zona,'''') zona_3,ISNULL(z3.importeMinimo,'''') importeMinimo_z3,ISNULL(z3.importeMaximo,'''') importeMaximo_z3
					from #concep c 
					left join (select * from #concep where zona=3) z3 
					on z3.concepto=c.concepto  and z3.desde=c.desde and z3.hasta=c.hasta
					where c.zona=2
				)a group by id,tipo,concepto,zona_2,importeMinimo_z2,importeMaximo_z2,zona_3,importeMinimo_z3,importeMaximo_z3
			order by a.concepto,ID,desde ;			
		END
		ELSE
		BEGIN		
		
			insert into #infoFinal
			select id--,tipo
				,concepto,min(desde)desde,max(hasta)hasta,zona_2,Round(importeMinimo_z2, 2, 0)importeMinimo_z2,Round(importeMaximo_z2, 2, 0)importeMaximo_z2,zona_3,Round(importeMinimo_z3, 2, 0)importeMinimo_z3,Round(importeMaximo_z3, 2, 0)importeMaximo_z3			
			from(
					select c.id,c.tipo,c.concepto,c.desde,c.hasta,c.zona zona_2,ISNULL(c.importeMinimo,'''') importeMinimo_z2,ISNULL(c.importeMaximo,'''') importeMaximo_z2,ISNULL(z3.zona,'''') zona_3,ISNULL(z3.importeMinimo,'''') importeMinimo_z3,ISNULL(z3.importeMaximo,'''') importeMaximo_z3
					from #concep c 
					left join (select * from #concep where zona=3) z3 
					on z3.concepto=c.concepto  and z3.desde=c.desde and z3.hasta=c.hasta
					where c.zona=2
				)a 
			WHERE CONCEPTO IN (SELECT [value] FROM STRING_SPLIT2(@conceptos,'',''))
			group by id,tipo,concepto,zona_2,importeMinimo_z2,importeMaximo_z2,zona_3,importeMinimo_z3,importeMaximo_z3
			order by a.concepto,ID,desde ;
		END 
		
		--DECLARE @añodesde varchar(6)
		--DECLARE @añohasta varchar(6)
		--set @añodesde = ''201501''
		--set @añoHasta = ''201601''
		IF(@añodesde <>'''')BEGIN
			IF(@añodesde = ''999999'' and @añoHasta =''999999'') BEGIN
				SELECT * FROM #infoFinal WHERE @añoHasta = hasta ORDER BY concepto,ID,desde ;
			END
			ELSE 
			BEGIN 
				SELECT * FROM #infoFinal WHERE --(
				@añodesde BETWEEN desde and hasta or @añohasta BETWEEN desde and hasta 
				or ( desde >= @añoDesde and hasta <=@añoHasta)
				--(and hasta <= @añoHasta)
				
				--) OR (@añoHasta >=desde and @añoHasta <=hasta ) 
				ORDER BY concepto,ID,desde ;
			END
		END
			--exec Puestos_categorias 3 ,'''','''','''',121, 2,''1'',''A-BASICO CATEGORIAS'',''201802'',''201805'',''2,3'',''''
		ELSE
		BEGIN
			SELECT * FROM #infoFinal ORDER BY concepto,ID,desde ;
		END


		
		
		
END






--exec Puestos_categorias 3 ,'''','''','''',121, 2,''1'',''A-BASICO CATEGORIAS'',''201800'',''999999'',''2,3'',''''
--exec Puestos_categorias 3 ,'''','''','''',121, 2,''1'',''A-BASICO CATEGORIAS'',''20105'',''999999'',''2,3'',''''
--exec Puestos_categoriasX 3 ,'''','''','''',121, 2,''1'',''A-BASICO CATEGORIAS'','''','''',''2,3'',''''
	--                       @consulta ,@catpuesto,@descripcionCP,@idCias,@idUsuario,@idPuesto,@tipoValor,@modelo,@añoDesde,@añoHasta,@zona,@conceptos
	
	--declare @idPuesto int set @idPuesto=2


'
GO

GO
PRINT N'Creating [dbo].[spf_PreValidacion]'
GO
IF OBJECT_ID(N'[dbo].[spf_PreValidacion]', 'P') IS NULL
EXEC sp_executesql N'CREATE procedure [dbo].[spf_PreValidacion]                  
  
(                                                    
@id_detalle as int                                                  
)              
  
WITH RECOMPILE                 
as                                                    
Begin                     
  
SET NOCOUNT ON;              
     declare @id_detalle_loc as int =@id_detalle                                  
     declare @id_plaza as int                            
     declare @fechaini as datetime                            
     declare @fechaocupada as datetime                            
     declare @QuincenaOcupada as varchar(6)                            
     declare @idEmp_Ocupa as int                            
     declare @Rfc_ocupa as varchar (13)                            
     declare @CT_Ocupa as varchar(10)                            
     declare @idnodo_ocupa as int                            
     declare @plazaieepo as varchar (21)                            
     declare @mensaje as varchar (1000)=''''                      
     declare @mensaject as varchar (1000)                       
     declare @mensajePlazaocupada as varchar (1000)                      
     declare @mensajePlaza_cancelada as varchar (500)                      
     declare @mensajePlaza_inhabilitada as varchar (500)                      
     declare @mensaje_cm as varchar (1000)                      
     declare @mensaje_baja_alta as varchar (1000)                  
  declare @mensaje_curp as varchar (1000)                  
     declare @mensaje_FechaAlta_emp as varchar (1000)          
     declare @mensaje_queda_Vacante as varchar(1000)                      
     declare @idDocumento as int                            
     declare @idBitacora int                        
     declare @folio varchar(20)                        
     declare @idUsuario int                      
     declare @idnodo_plaza as int                      
     declare @Clave_id_nodo_plaza as varchar (10)                      
     declare @Ct_nuevo as varchar(10)                      
     declare @Id_nodo_CT_Nuevo as int                       
     declare @Estatus_Ct_nuevo as int                      
     declare @Estatus_idnodo_plaza as int                       
     declare @hasta as datetime=case when (select fechaini                      
     from fup_documento_detalle where id_detalle=@id_detalle_loc)=(select fechafin                      
     from fup_documento_detalle where id_detalle=@id_detalle_loc) then ''99991231'' else (select fechafin                      
     from fup_documento_detalle where id_detalle=@id_detalle_loc) end                       
     declare @fechacancelada as datetime                          
     declare @Quincenacancelada as varchar(6)                      
     declare @oficio_cancelada as varchar(100)                      
     declare @procede as int                      
     declare @id_plaza_hija as int                      
     declare @hastaquincenafecha as datetime                       
     declare @fecha_desligue_ocupada_plaza as datetime                      
     declare @id_periodo_captura as int                        
     declare @quincena_proceso as varchar(40)                      
     declare @año_proceso as varchar(4)                      
     declare @parcial_proceso as varchar(4)                      
     declare @folio_antecedente as varchar(20)                      
     declare @mensaje_antecedente as varchar (500)                      
     declare @id_emp_folio as int                
     declare @fecha_alta_emp as datetime          
     declare @QuincenaVacante as varchar(6)    
     declare @empleado_omitido as varchar (50)    
  declare @mensaje_empleado_omitido as varchar (1000)                
                   
     set @id_periodo_captura=(select id_periodo from FUP_Informacion_Documentos  where id_documento in (                      
  
     select Id_Documento from FUP_Documento_Detalle where id_detalle=@id_detalle_loc))                                       
  
     set @id_plaza=(select id_plaza from FUP_Documento_Detalle where Id_Detalle=@id_detalle_loc)                            
  
     set @plazaieepo=(select plazaieepo from plazaieepo where Id_plaza=@id_plaza)                      
  
     set @idDocumento =(select id_documento from FUP_Documento_Detalle where Id_Detalle=@id_detalle_loc)                  
  
     set @id_emp_folio=(select id_emp from fup_documentos where id_documento=@idDocumento)                            
  
     set @folio = (select folio from fup_documentos where id_documento = @idDocumento)                      
  
     set @idUsuario = (select id_usuario from fup_documentos where id_documento = @idDocumento)                      
  
     set @Ct_nuevo=(select centro_trabajo from FUP_Informacion_Documentos where id_documento in (                     
  
     select id_documento from FUP_Documento_Detalle where id_detalle=@id_detalle_loc                          
  
     ))                       
  
     set @Id_nodo_CT_Nuevo=(select id_nodo from VistaTablaLongitud where Clave=@Ct_nuevo)                      
  
     set @quincena_proceso=(select numero from calennomina where id_periodo=@id_periodo_captura)                      
  
                           
  
     set @año_proceso=(select año from calennomina where id_periodo=@id_periodo_captura)                      
  
     set @parcial_proceso=(select parcial from calennomina where id_periodo=@id_periodo_captura)                      
  
     if (@quincena_proceso<10)                      
  
  begin                       
  
  set @quincena_proceso=''0''+cast(@quincena_proceso as varchar)                      
  
  end                      
  
  else                      
  
  begin                      
  
  set @quincena_proceso=@quincena_proceso                      
  
  end                      
  
                      
  
  set @quincena_proceso=CAST(@año_proceso as varchar)+ CAST(@quincena_proceso as varchar)                   
  
                           
  
            
  
-- En los nuevos ingresos se valida la vigencia del empleado, siempre                   
  
-- y cuando el empleado no sea jubilado, si es jubilado unicamente que cubra honorario se actualiza la vigencia                  
  
-- si el empleado no ha tenido baja tambien se actualiza (No se manda mensaje)                  
  
if (exists(select 1 from FUP_Documento_Detalle where Id_MotivoMovimiento in (1,2,3,4,5,7,8,9,10,103,117,309,310) and id_detalle=@id_detalle_loc))                  
  
begin                  
  
     if (exists(select 1 from hbajas where id_emp=@id_emp_folio))                       
  
     begin                  
  
          if(exists(select 1 from FUP_Documento_Detalle where Id_MotivoMovimiento in (103,117,309,310) and id_detalle=@id_detalle_loc))                  
  
          begin                   
  
               if(exists(select 1 from empleados where id_emp=@id_emp_folio and Vigencia=''B''))                  
  
       begin                   
  
      update empleados set Vigencia=''A'' where id_emp=@id_emp_folio                  
  
       end                  
  
               else                   
  
                   begin                   
  
                        set @procede=1                  
  
                   end                   
  
          end                  
  
     end                  
  
     else                  
  
         begin                  
  
         if(exists(select 1 from FUP_Documento_Detalle where Id_MotivoMovimiento in (1,2,3,4,5,7,8,9,10,103,117) and id_detalle=@id_detalle_loc))                  
  
     begin                   
  
       if(exists(select 1 from empleados where id_emp=@id_emp_folio and Vigencia=''B''))                  
  
        begin                   
  
       update empleados set Vigencia=''A'' where id_emp=@id_emp_folio                  
  
        end                  
  
       else                   
  
        begin                   
  
       set @procede=1                  
          end                   
  
     end                  
  
         end     
  
end          
  
          
  
          
  
------- validacion para el caso de las basificaciones donde ct no sea diferente en el que se encuentra actualmente la plaza          
  
  if(exists(select 1 from FUP_documento_detalle where Id_motivoMovimiento =84 and id_detalle=@id_detalle_loc))                       
  
  begin                      
  
                      
  
  set @idnodo_plaza=(select top 1 id_nodo from plazaempleados where id_emp=@id_emp_folio and id_plaza=@id_plaza order by fecha desc)                          
  
  set @Clave_id_nodo_plaza =(select clave from VistaTablaLongitud where id_nodo=@idnodo_plaza)         
  
  set @CT_Ocupa =(select Centro_trabajo from FUP_Informacion_Documentos where id_documento=@idDocumento)           
  
                             
  
  if (@Clave_id_nodo_plaza<>@CT_Ocupa)          
  
        begin           
  
    set @mensajePlazaocupada=''El centro de trabajo en donde se encuentra la plaza es diferente al que se desea basificar''                        
  
        end           
  
  else           
  
        begin           
  
    set @mensajePlazaocupada=''''                        
  
        end          
  
                                                     
  
   if(@mensajePlazaocupada is null)                      
  
      begin                       
  
        set @procede=0                      
  
         end                      
  
   else                      
  
         begin                      
  
     if(exists(select 1 from FUP_Rel_Id_Detalle_Mensaje_Prevalidacion where id_detalle=@id_detalle_loc))                      
  
     begin                      
  
       update FUP_Rel_Id_Detalle_Mensaje_Prevalidacion set Mensaje_plaza_ocupada=@mensajePlazaocupada where id_detalle=@id_detalle_loc                      
  
     end                      
  
     else                     
  
     begin                      
  
       insert into FUP_Rel_Id_Detalle_Mensaje_Prevalidacion values (@id_detalle_loc,@mensajePlazaocupada,'''','''','''','''','''','''','''','''')                      
  
     end            
  
                        
  
         end          
  
                      
  
            set @mensaje=(select distinct (rtrim(frmp.Mensaje_plaza_ocupada) + '' '' + rtrim(frmp.Mensaje_Ct_Activo) +'' '' +rtrim(frmp.Mensaje_plaza_cancelada) +'' '' + rtrim(frmp.Mensaje_plaza_inhabilitada) +'' '' + rtrim(frmp.Mensaje_CM) +'' '' + rtrim(frmp.Mensaje_baja_alta) +'' '' + rtrim(frmp.Mensaje_curp) +'' '' + rtrim(frmp.mensaje_FechaAlta_Emp) +'' '' + rtrim(frmp.mensaje_empleado_omitido) ) as Mensaje                      
  
                          from FUP_Documento_Detalle fdd (NOLOCK)                  
  
                          inner join FUP_Rel_Id_Detalle_Mensaje_Prevalidacion frmp (NOLOCK) on fdd.Id_Detalle=fdd.Id_Detalle                      
  
                          where frmp.id_detalle=@id_detalle_loc)         
  
                               
  
  end                   
  
------ fin basificaciones    
  
    
  
------- validacion para el caso de las licencias los empleados no esten omitidos 15/12/2015    
  
if(exists(select 1 from FUP_documento_detalle where Id_motivoMovimiento in(47,56) and id_detalle=@id_detalle_loc))                       
  
begin                      
  
                      
  
  set @empleado_omitido=(select top 1 status from TEmpleadosPlazaOmitidos where status=''O'' and Noemp=@id_emp_folio)                          
  
           
  
                             
  
  if (@empleado_omitido=''O'')          
  
        begin           
  
    set @mensaje_empleado_omitido=''El empleado se encuentra omitido, no procede su jubilacion...''                        
  
        end           
  
  else           
  
        begin           
  
    set @mensaje_empleado_omitido=''''                        
  
        end          
  
                                                     
  
   if(@mensaje_empleado_omitido is null)                      
  
      begin                       
  
      set @procede=0                      
  
      end                      
  
   else                      
  
         begin                      
  
     if(exists(select 1 from FUP_Rel_Id_Detalle_Mensaje_Prevalidacion where id_detalle=@id_detalle_loc))                      
  
     begin                      
  
       update FUP_Rel_Id_Detalle_Mensaje_Prevalidacion set mensaje_empleado_omitido=@mensaje_empleado_omitido where id_detalle=@id_detalle_loc                      
  
     end                      
  
     else                     
  
     begin                      
  
       insert into FUP_Rel_Id_Detalle_Mensaje_Prevalidacion values (@id_detalle_loc,'''','''','''','''','''','''','''','''',@mensaje_empleado_omitido)                      
  
     end            
  
                        
  
         end          
  
                      
  
            set @mensaje=(select distinct (rtrim(frmp.Mensaje_plaza_ocupada) + '' '' + rtrim(frmp.Mensaje_Ct_Activo) +'' '' +rtrim(frmp.Mensaje_plaza_cancelada) +'' '' + rtrim(frmp.Mensaje_plaza_inhabilitada) +'' '' + rtrim(frmp.Mensaje_CM) +'' '' + rtrim(frmp.Mensaje_baja_alta) +'' '' + rtrim(frmp.Mensaje_curp) +'' '' + rtrim(frmp.mensaje_FechaAlta_Emp) +'' '' + rtrim(frmp.mensaje_empleado_omitido) ) as Mensaje                      
  
                          from FUP_Documento_Detalle fdd (NOLOCK)                  
  
                          inner join FUP_Rel_Id_Detalle_Mensaje_Prevalidacion frmp (NOLOCK) on fdd.Id_Detalle=fdd.Id_Detalle                      
  
                          where frmp.id_detalle=@id_detalle_loc)                         
  
  end    
  
----- fin validacion omitidos licencias                  
-- validar plaza vacante y centro de trabajo en plazas hijas (01 24,01 25,02 24, 02 25)                      
if(exists(select 1 from fup_documento_detalle where Id_MotivoMovimiento in (3,4,8,9) and Id_Detalle=@id_detalle_loc))                      
   begin                       
  
     set @id_plaza_hija =(select MAX (Valor_IdCampo) from hplazas where Id_TipoMovPlazas=4 and Id_plaza=@id_plaza and Fecha<@hasta)                         
  
     set @fechaini=(select fechaini from fup_documento_detalle where id_detalle=@id_detalle_loc)                            
  
     set @hastaquincenafecha=(select dbo.anioQuincenaToFecha((select dbo.fechaToAnioQuincena(@hasta)),1))                         
  
     set @fecha_desligue_ocupada_plaza=(select top 1 fecha from plazaempleados where id_plaza=@id_plaza_hija and id_emp=0 and fecha<=@hastaquincenafecha order by fecha desc)                      
  
     if (@fecha_desligue_ocupada_plaza>@fechaini)                      
  
     begin                      
  
          set @idEmp_Ocupa=(select top 1 id_emp from plazaempleados where id_plaza=@id_plaza_hija and id_emp<>0 and fecha<@hasta order by fecha desc)                          
     end                      
     else                      
      begin                      
             set @procede=0                      
         end                      
  
     set @fechaocupada= (select max(Fecha) from plazaempleados where id_emp=@idEmp_Ocupa and id_plaza=@id_plaza_hija and fecha < @hasta)                            
  
     set @QuincenaOcupada=(select dbo.fechaToAnioQuincena(@fechaocupada))                            
  
     set @Rfc_ocupa=(select rfc from empleados where id_emp=@idEmp_Ocupa)                            
  
     set @idnodo_ocupa=(select max(id_nodo) from plazaempleados where id_emp=@idEmp_Ocupa and id_plaza=@id_plaza_hija)                            
  
     set @CT_Ocupa =(select Clave from VistaTablaLongitud where id_nodo=@idnodo_ocupa)                      
  
     set @idnodo_plaza=(select top 1 id_nodo from plazaempleados where id_plaza=@id_plaza_hija and Fecha<''99991231'' order by fecha desc)                          
  
     set @Clave_id_nodo_plaza =(select clave from VistaTablaLongitud where id_nodo=@idnodo_plaza)                      
  
                                 
  
     set @mensajePlazaocupada=''La plaza '' +@plazaieepo +'' esta ocupada por '' + @Rfc_ocupa + '' desde la Quincena '' + @QuincenaOcupada + '' en el CT '' + @CT_Ocupa                        
  
                              
  
        if(@mensajePlazaocupada is null)                      
  
                         begin                       
  
                   set @procede=0                      
  
                         end                      
  
                 else                      
  
                         begin                      
  
         if(exists(select 1 from FUP_Rel_Id_Detalle_Mensaje_Prevalidacion where id_detalle=@id_detalle_loc))                      
  
         begin                      
  
         update FUP_Rel_Id_Detalle_Mensaje_Prevalidacion set Mensaje_plaza_ocupada=@mensajePlazaocupada where id_detalle=@id_detalle_loc                      
  
         end                      
  
         else                      
  
            begin                      
  
            insert into FUP_Rel_Id_Detalle_Mensaje_Prevalidacion values (@id_detalle_loc,@mensajePlazaocupada,'''','''','''','''','''','''','''','''')                      
  
            end                      
  
                         end                
  
                                         
  
------- validar la fecha de alta del empleado                 
  
     set @fecha_alta_emp =(select fecha_alta from empleados where id_emp=@id_emp_folio)                
  
                     
  
    if (@fecha_alta_emp>@fechaini)                 
  
        begin                     
  
             set @mensaje_FechaAlta_emp=''La fecha de alta del empleado es mayor al desde del movimiento, Por favor verifíque.''                
  
             if(exists(select 1 from FUP_Rel_Id_Detalle_Mensaje_Prevalidacion where id_detalle=@id_detalle_loc))                      
  
                     begin                      
  
                           update FUP_Rel_Id_Detalle_Mensaje_Prevalidacion set mensaje_FechaAlta_emp=@mensaje_FechaAlta_emp where id_detalle=@id_detalle_loc                      
  
                     end                      
  
             else                      
  
                     begin                      
  
                           insert into FUP_Rel_Id_Detalle_Mensaje_Prevalidacion values (@id_detalle_loc,'''','''','''','''','''','''','''',@mensaje_FechaAlta_emp,'''')                      
  
                     end                  
  
        end                
  
    else                 
  
        begin                
  
             set @procede=0                
  
        end                                     
--- fin validacion de fecha de alta                                         
       if (@idnodo_plaza=@Id_nodo_CT_Nuevo)                           
  
       begin                           
  
       set @Estatus_idnodo_plaza=(select id_rel from RCT_Status where id_nodo=@idnodo_plaza)                          
  
       set @mensaject= case when @Estatus_idnodo_plaza=2 then ''El Centro de trabajo '' + @Clave_id_nodo_plaza +'' está en estatus de Baja.''                           
  
       else case when @Estatus_idnodo_plaza=3 then ''El Centro de trabajo '' + @Clave_id_nodo_plaza +'' está en estatus clausurado.''                           
  
       else '''' end end                        
  
       end                      
  
      else                           
  
       begin                           
  
                                            
  
       set @Estatus_Ct_nuevo=(select id_rel from RCT_Status where id_nodo=@Id_nodo_CT_Nuevo)                             
  
       set  @mensaject= case when @Estatus_Ct_nuevo=2 then ''El Centro de trabajo '' + @Ct_nuevo +'' está en estatus de Baja.''                           
  
      else case when @Estatus_Ct_nuevo=3 then ''El Centro de trabajo '' + @Ct_nuevo +'' está en estatus clausurado.''                          
  
      else '''' end end                        
  
       end                       
  
                             
  
if(@mensaject='''')                      
  
                          begin               
  
                          set @procede=0                      
  
                          end                      
  
                  else                      
  
                          begin                      
  
                          if(exists(select 1 from FUP_Rel_Id_Detalle_Mensaje_Prevalidacion where id_detalle=@id_detalle_loc))                      
  
                           begin                      
  
                           update FUP_Rel_Id_Detalle_Mensaje_Prevalidacion set Mensaje_Ct_Activo=@mensaject where id_detalle=@id_detalle_loc                      
  
                           end                      
  
                          else                      
  
                              begin                      
  
                              insert into FUP_Rel_Id_Detalle_Mensaje_Prevalidacion values (@id_detalle_loc,'''',@mensaject,'''','''','''','''','''','''','''')                      
  
       end                 
  
                          end                  
  
                                            
  
       if(exists(select 1 from empleados where id_emp=@id_emp_folio and CURP=''''))                  
  
          begin                   
  
            set @mensaje_curp=''El empleado no tiene la CURP''                  
  
          end                  
  
        else                   
  
            begin                   
  
                 set @mensaje_curp=''''                  
  
            end                  
  
                      
  
  if(@mensaje_curp ='''')                      
  
              begin                       
  
              set @procede=0                      
  
              end                      
  
        else                      
  
              begin                      
  
          if(exists(select 1 from FUP_Rel_Id_Detalle_Mensaje_Prevalidacion where id_detalle=@id_detalle_loc))                      
  
                begin                      
  
                     update FUP_Rel_Id_Detalle_Mensaje_Prevalidacion set Mensaje_Curp=@mensaje_curp where id_detalle=@id_detalle_loc                      
  
                end                      
  
          else                      
  
                begin                      
  
                     insert into FUP_Rel_Id_Detalle_Mensaje_Prevalidacion values (@id_detalle_loc,'''','''','''','''','''','''',@mensaje_curp,'''','''')                      
  
                end                      
  
              end                  
  
                                                       
  
                          set @mensaje=(select distinct (rtrim(frmp.Mensaje_plaza_ocupada) + '' '' + rtrim(frmp.Mensaje_Ct_Activo) +'' '' +rtrim(frmp.Mensaje_plaza_cancelada) +'' '' + rtrim(frmp.Mensaje_plaza_inhabilitada) +'' '' + rtrim(frmp.Mensaje_CM) +'' '' + rtrim(frmp.Mensaje_baja_alta) +'' '' + rtrim(frmp.Mensaje_curp) +'' '' + rtrim(frmp.mensaje_FechaAlta_Emp) +'' '' + rtrim(frmp.mensaje_empleado_omitido) ) as Mensaje                      
  
                          from FUP_Documento_Detalle fdd (NOLOCK)                  
  
                          inner join FUP_Rel_Id_Detalle_Mensaje_Prevalidacion frmp (NOLOCK) on fdd.Id_Detalle=fdd.Id_Detalle                      
  
                          where frmp.id_detalle=@id_detalle_loc)                      
  
   end                      
  
                      
  
-- validar plaza vacante y centro de trabajo en plazas hijas (01 20)                      
if(exists(select 1 from fup_documento_detalle where Id_MotivoMovimiento in (2,7) and Id_Detalle=@id_detalle_loc))                      
   begin                       
  
     --set @id_plaza_hija =(select MAX (Valor_IdCampo) from hplazas where Id_TipoMovPlazas=4 and Id_plaza=@id_plaza and Fecha<@hasta)                       
  -- se añade desde para validar la plaza hija  
  set @id_plaza_hija =(select MAX (Valor_IdCampo) from hplazas where Id_TipoMovPlazas=4 and Id_plaza=@id_plaza and Fecha>=@fechaini and Fecha<@hasta)                         
     if(@id_plaza_hija>0)                 
  
     begin                       
     set @fechaini=(select fechaini from fup_documento_detalle where id_detalle=@id_detalle_loc)                            
     set @hastaquincenafecha=(select dbo.anioQuincenaToFecha((select dbo.fechaToAnioQuincena(@hasta)),1))                         
     set @fecha_desligue_ocupada_plaza=(select top 1 fecha from plazaempleados where id_plaza=@id_plaza_hija and id_emp=0 and fecha<=@hastaquincenafecha order by fecha desc)                      
            
     if (@fecha_desligue_ocupada_plaza>@fechaini)                      
       begin       
       set @idEmp_Ocupa=(select top 1 id_emp from plazaempleados where id_plaza=@id_plaza_hija and id_emp<>0 and fecha<@hasta order by fecha desc)                          
       end                      
      else                      
       begin                      
        set @procede=0                      
       end                      
  
      set @fechaocupada= (select max(Fecha) from plazaempleados where id_emp=@idEmp_Ocupa and id_plaza=@id_plaza_hija and fecha < @hasta)                            
      set @QuincenaOcupada=(select dbo.fechaToAnioQuincena(@fechaocupada))                            
      set @Rfc_ocupa=(select rfc from empleados where id_emp=@idEmp_Ocupa)                      
      set @idnodo_ocupa=(select max(id_nodo) from plazaempleados where id_emp=@idEmp_Ocupa and id_plaza=@id_plaza_hija)                 
      set @CT_Ocupa =(select Clave from VistaTablaLongitud where id_nodo=@idnodo_ocupa)                      
      set @idnodo_plaza=(select top 1 id_nodo from plazaempleados where id_plaza=@id_plaza_hija and Fecha<''99991231'' order by fecha desc)                          
      set @Clave_id_nodo_plaza =(select clave from VistaTablaLongitud where id_nodo=@idnodo_plaza)                                           
      set @mensajePlazaocupada=''La plaza '' +@plazaieepo +'' esta ocupada por '' + @Rfc_ocupa + '' desde la Quincena '' + @QuincenaOcupada + '' en el CT '' + @CT_Ocupa                        
  
      if(@mensajePlazaocupada is null)                      
       begin                       
         set @procede=0                      
       end                      
       else                      
        begin                      
          if(exists(select 1 from FUP_Rel_Id_Detalle_Mensaje_Prevalidacion where id_detalle=@id_detalle_loc))                      
           begin                      
             update FUP_Rel_Id_Detalle_Mensaje_Prevalidacion set Mensaje_plaza_ocupada=@mensajePlazaocupada where id_detalle=@id_detalle_loc                      
           end                      
          else                      
           begin                      
             insert into FUP_Rel_Id_Detalle_Mensaje_Prevalidacion values (@id_detalle_loc,@mensajePlazaocupada,'''','''','''','''','''','''','''','''')                      
           end                      
        end                                                            
      -- validacion de fecha de alta                
      set @fecha_alta_emp =(select fecha_alta from empleados where id_emp=@id_emp_folio)               
               
      if (@fecha_alta_emp>@fechaini)                 
        begin                     
          set @mensaje_FechaAlta_emp=''La fecha de alta del empleado es mayor al desde del movimiento, Por favor verifíque.''                
          if(exists(select 1 from FUP_Rel_Id_Detalle_Mensaje_Prevalidacion where id_detalle=@id_detalle_loc))                      
             begin                      
            update FUP_Rel_Id_Detalle_Mensaje_Prevalidacion set mensaje_FechaAlta_emp=@mensaje_FechaAlta_emp where id_detalle=@id_detalle_loc                      
            end                      
          else                      
            begin                      
              insert into FUP_Rel_Id_Detalle_Mensaje_Prevalidacion values (@id_detalle_loc,'''','''','''','''','''','''','''',@mensaje_FechaAlta_emp,'''')                      
            end                  
        end                
       else                 
        begin                
          set @procede=0                
        end                     
  
       ---validacion del estatus del centro de trabajo                                                   
  
        if (@idnodo_plaza=@Id_nodo_CT_Nuevo)                           
           begin                  
             set @Estatus_idnodo_plaza=(select id_rel from RCT_Status where id_nodo=@idnodo_plaza)                          
             set @mensaject= case when @Estatus_idnodo_plaza=2 then ''El Centro de trabajo '' + @Clave_id_nodo_plaza +'' está en estatus de Baja.''                           
              else case when @Estatus_idnodo_plaza=3 then ''El Centro de trabajo '' + @Clave_id_nodo_plaza +'' está en estatus clausurado.''                           
              else '''' end end                        
           end                      
          else                           
           begin                                                                   
              set @Estatus_Ct_nuevo=(select id_rel from RCT_Status where id_nodo=@Id_nodo_CT_Nuevo)                             
              set  @mensaject= case when @Estatus_Ct_nuevo=2 then ''El Centro de trabajo '' + @Ct_nuevo +'' está en estatus de Baja.''                           
              else case when @Estatus_Ct_nuevo=3 then ''El Centro de trabajo '' + @Ct_nuevo +'' está en estatus clausurado.''                          
              else '''' end end                        
           end                       
                        
  
            if(@mensaject='''')                      
              begin                       
             set @procede=0                      
              end                      
            else                      
              begin                      
             if(exists(select * from FUP_Rel_Id_Detalle_Mensaje_Prevalidacion where id_detalle=@id_detalle_loc))                      
              begin                      
                update FUP_Rel_Id_Detalle_Mensaje_Prevalidacion set Mensaje_Ct_Activo=@mensaject where id_detalle=@id_detalle_loc                      
              end                      
             else                      
              begin                      
                 insert into FUP_Rel_Id_Detalle_Mensaje_Prevalidacion values (@id_detalle_loc,'''',@mensaject,'''','''','''','''','''','''','''')                      
              end                      
              end                  
  
          --- valida que el empleado tenga la curp                             
  
          if(exists(select 1 from empleados where id_emp=@id_emp_folio and CURP=''''))                  
            begin                   
              set @mensaje_curp=''El empleado no tiene la CURP''                  
            end                  
            else                   
             begin                   
               set @mensaje_curp=''''                  
             end                  
                     
            if(@mensaje_curp ='''')                      
             begin                       
               set @procede=0                      
             end                      
            else                      
             begin                      
                if(exists(select 1 from FUP_Rel_Id_Detalle_Mensaje_Prevalidacion where id_detalle=@id_detalle_loc))                      
                begin                      
                  update FUP_Rel_Id_Detalle_Mensaje_Prevalidacion set Mensaje_Curp=@mensaje_curp where id_detalle=@id_detalle_loc                      
                end                      
                else                      
                begin                      
                  insert into FUP_Rel_Id_Detalle_Mensaje_Prevalidacion values (@id_detalle_loc,'''','''','''','''','''','''',@mensaje_curp,'''','''')                      
                end                      
              end            
  
              set @mensaje=(select distinct (rtrim(frmp.Mensaje_plaza_ocupada) + '' '' + rtrim(frmp.Mensaje_Ct_Activo) +'' '' +rtrim(frmp.Mensaje_plaza_cancelada) +'' '' + rtrim(frmp.Mensaje_plaza_inhabilitada) +'' '' + rtrim(frmp.Mensaje_CM) +'' '' + rtrim(frmp.Mensaje_baja_alta) +'' '' + rtrim(frmp.Mensaje_curp) +'' '' + rtrim(frmp.mensaje_FechaAlta_Emp) +'' '' + rtrim(frmp.mensaje_empleado_omitido) ) as Mensaje                      
               from FUP_Documento_Detalle fdd (NOLOCK)                  
               inner join FUP_Rel_Id_Detalle_Mensaje_Prevalidacion frmp (NOLOCK) on fdd.Id_Detalle=fdd.Id_Detalle                      
               where frmp.id_detalle=@id_detalle_loc)                                       
     end                                               
 else  
  -- En caso que el movimiento 01 20 sea para la plaza padre entra al else y se revisa (plaza vacante,ct activo, plaza cancelada/cancelar y plaza inhabilitada)                      
  
begin                       
       set @fechaini=(select fechaini from fup_documento_detalle where id_detalle=@id_detalle_loc)                            
       set @hastaquincenafecha=(select dbo.anioQuincenaToFecha((select dbo.fechaToAnioQuincena(@hasta)),1))                         
       set @fecha_desligue_ocupada_plaza=(select top 1 fecha from plazaempleados where id_plaza=@id_plaza and id_emp=0 and fecha<=@hastaquincenafecha order by fecha desc)                      
       --if (exists(select top 1 fecha from plazaempleados where id_plaza=@id_plaza and id_emp=0 and fecha<@fecha_desligue_ocupada_plaza order by fecha desc))                      
       --   begin                      
       --   set @fecha_desligue_ocupada_plaza=(select top 1 fecha from plazaempleados where id_plaza=@id_plaza and id_emp=0 and fecha<@fecha_desligue_ocupada_plaza order by fecha desc)                      
       --   end                      
       --else                       
       --   begin                      
       --   set @fecha_desligue_ocupada_plaza=(select top 1 fecha from plazaempleados where id_plaza=@id_plaza and id_emp=0 and fecha<=@hastaquincenafecha order by fecha desc)                      
       --   end              
       set @idEmp_Ocupa=(select top 1 id_emp from plazaempleados where id_plaza=@id_plaza and id_emp<>0 and fecha<@hasta order by fecha desc)                          
       set @fechaocupada= (select max(Fecha) from plazaempleados where id_emp=@idEmp_Ocupa and id_plaza=@id_plaza and fecha < @hasta)                            
              
  
   if (exists(select top 1 fecha from plazaempleados where id_plaza=@id_plaza and id_emp=0 and fecha<@fecha_desligue_ocupada_plaza order by fecha desc))                      
      begin               
        set @fecha_desligue_ocupada_plaza=(select top 1 fecha from plazaempleados where id_plaza=@id_plaza and id_emp=0 and fecha<@fecha_desligue_ocupada_plaza order by fecha desc)                      
     if (@fecha_desligue_ocupada_plaza<@fechaocupada)              
           begin               
          set @fecha_desligue_ocupada_plaza=(select top 1 fecha from plazaempleados where id_plaza=@id_plaza and id_emp=0 and fecha<=@hastaquincenafecha order by fecha desc)              
           end              
     else              
     begin                      
        set @procede=0                      
     end              
       end               
    else              
     begin                      
       set @fecha_desligue_ocupada_plaza=(select top 1 fecha from plazaempleados where id_plaza=@id_plaza and id_emp=0 and fecha<=@hastaquincenafecha order by fecha desc)                      
     end               
            
       if (@fecha_desligue_ocupada_plaza>@fechaini)                      
        begin                      
             set @idEmp_Ocupa=(select top 1 id_emp from plazaempleados where id_plaza=@id_plaza and id_emp<>0 and fecha<@hasta order by fecha desc)                          
           end                      
       else                     
           begin                      
                --set @procede=0              
                set @idEmp_Ocupa=''''                      
           end                      
  
     set @fechaocupada= (select max(Fecha) from plazaempleados where id_emp=@idEmp_Ocupa and id_plaza=@id_plaza and fecha < @hasta)                            
     set @QuincenaOcupada=(select dbo.fechaToAnioQuincena(@fechaocupada))                            
     set @Rfc_ocupa=(select rfc from empleados where id_emp=@idEmp_Ocupa)                            
     set @idnodo_ocupa=(select max(id_nodo) from plazaempleados where id_emp=@idEmp_Ocupa and id_plaza=@id_plaza)                            
     set @CT_Ocupa =(select Clave from VistaTablaLongitud where id_nodo=@idnodo_ocupa)                      
     set @idnodo_plaza=(select top 1 id_nodo from plazaempleados where id_plaza=@id_plaza and Fecha<''99991231'' order by fecha desc)                          
     set @Clave_id_nodo_plaza =(select clave from VistaTablaLongitud where id_nodo=@idnodo_plaza)                      
                                
       set @mensajePlazaocupada=''La plaza '' +@plazaieepo +'' esta ocupada por '' + @Rfc_ocupa + '' desde la Quincena '' + @QuincenaOcupada + '' en el CT '' + @CT_Ocupa                                 
       if(@mensajePlazaocupada is null)                      
  
       begin                       
             set @procede=0                      
       end                      
       else                      
         begin                      
       if(exists(select 1 from FUP_Rel_Id_Detalle_Mensaje_Prevalidacion where id_detalle=@id_detalle_loc))                      
    begin                      
      update FUP_Rel_Id_Detalle_Mensaje_Prevalidacion set Mensaje_plaza_ocupada=@mensajePlazaocupada where id_detalle=@id_detalle_loc                      
    end                      
          else                      
    begin                      
      insert into FUP_Rel_Id_Detalle_Mensaje_Prevalidacion values (@id_detalle_loc,@mensajePlazaocupada,'''','''','''','''','''','''','''','''')                      
    end                      
            end                                                           
--- validacion de fecha de alta                
  
    set @fecha_alta_emp =(select fecha_alta from empleados where id_emp=@id_emp_folio)                           
  
    if (@fecha_alta_emp>@fechaini)                 
  
        begin                     
  
             set @mensaje_FechaAlta_emp=''La fecha de alta del empleado es mayor al desde del movimiento, Por favor verifíque.''                
             if(exists(select * from FUP_Rel_Id_Detalle_Mensaje_Prevalidacion where id_detalle=@id_detalle_loc))                      
         begin                      
                        update FUP_Rel_Id_Detalle_Mensaje_Prevalidacion set mensaje_FechaAlta_emp=@mensaje_FechaAlta_emp where id_detalle=@id_detalle_loc                      
                  end                      
             else                      
         begin                      
                        insert into FUP_Rel_Id_Detalle_Mensaje_Prevalidacion values (@id_detalle_loc,'''','''','''','''','''','''','''',@mensaje_FechaAlta_emp,'''')                      
                 end                  
        end                
        else                 
       begin                
      set @procede=0                
   end                                    
                                        
-- Verifica el Estatus del centro de trabajo (Clausurado o Baja)                      
  
        if(@idnodo_plaza=@Id_nodo_CT_Nuevo)                           
         begin                           
        set @Estatus_idnodo_plaza=(select id_rel from RCT_Status where id_nodo=@idnodo_plaza)                          
              set @mensaject= case when @Estatus_idnodo_plaza=2 then ''El Centro de trabajo '' + @Clave_id_nodo_plaza +'' está en estatus de Baja.''                
              else case when @Estatus_idnodo_plaza=3 then ''El Centro de trabajo '' + @Clave_id_nodo_plaza +'' está en estatus clausurado.''                           
              else '''' end end                        
         end                      
      else                           
          begin                                                    
     set @Estatus_Ct_nuevo=(select id_rel from RCT_Status where id_nodo=@Id_nodo_CT_Nuevo)                             
     set  @mensaject= case when @Estatus_Ct_nuevo=2 then ''El Centro de trabajo '' + @Ct_nuevo +'' está en estatus de Baja.''                           
     else case when @Estatus_Ct_nuevo=3 then ''El Centro de trabajo '' + @Ct_nuevo +'' está en estatus clausurado.''                          
              else '''' end end                        
          end                       
  
          if(@mensaject='''')                      
    begin                       
         set @procede=0                      
          end                      
    else                      
        begin                      
          if(exists(select 1 from FUP_Rel_Id_Detalle_Mensaje_Prevalidacion where id_detalle=@id_detalle_loc))                      
        begin                      
       update FUP_Rel_Id_Detalle_Mensaje_Prevalidacion set Mensaje_Ct_Activo=@mensaject where id_detalle=@id_detalle_loc                      
        end                      
       else                      
              begin                      
          insert into FUP_Rel_Id_Detalle_Mensaje_Prevalidacion values (@id_detalle_loc,'''',@mensaject,'''','''','''','''','''','''','''')                      
        end                      
              end                      
-- Verifica si la plaza esta cancelada o para cancelar    
      
        set @fechacancelada= (select Fecha from HOficioAfectacionCancelacion where id_plaza=@id_plaza)                          
        set @Quincenacancelada=(select dbo.fechaToAnioQuincena(@fechacancelada))                      
        set @oficio_cancelada=(select OficioAfectacionCancelacion from HOficioAfectacionCancelacion where id_plaza=@id_plaza)                      
          
     
   if(@fechacancelada is null)                      
    begin                      
      set @mensajePlaza_cancelada=''''                      
    end                      
   else                      
       begin                      
     if (@fechacancelada<=@fechaini)                      
      begin                       
        set @mensajePlaza_cancelada=''La plaza '' +@plazaieepo +'' está cancelada con el oficio de afectación '' +@oficio_cancelada + '' desde la Quincena '' + @Quincenacancelada                          
      end                      
     else                       
      begin                      
        set @mensajePlaza_cancelada=''La plaza '' +@plazaieepo +'' está para cancelar con el oficio de afectación '' +@oficio_cancelada + '' a partir de la Quincena '' + @Quincenacancelada                        
      end                        
          end                                             
        
   if(@mensajePlaza_cancelada ='''')                      
  
                                begin                       
  
                                set @procede=0                      
  
                                end                      
  
                             else                      
  
                             begin                      
  
          if(exists(select 1 from FUP_Rel_Id_Detalle_Mensaje_Prevalidacion where id_detalle=@id_detalle_loc))                      
  
           begin                      
  
           update FUP_Rel_Id_Detalle_Mensaje_Prevalidacion set Mensaje_plaza_cancelada=@mensajePlaza_cancelada where id_detalle=@id_detalle_loc                      
  
           end                      
  
          else                      
  
              begin                      
  
              insert into FUP_Rel_Id_Detalle_Mensaje_Prevalidacion values (@id_detalle_loc,'''','''',@mensajePlaza_cancelada,'''','''','''','''','''','''')                      
  
              end                      
          
    end                            
   
                             
  
          -- Verifica si la plaza está inhabilitada            
  
          -- se añade validacion al capturar Ab de forma incorrecta 2014-12-12             
  
          declare @AB as varchar (8)                     
  
          set @AB=(select distinct categoria from plazaieepo where plazaieepo=@plazaieepo)-- se considera un solo registro por las plazas hijas 2014-12-15            
  
          if (@AB = '' AB001'')            
  
          begin            
  
    set @procede=0            
  
          end            
  
          else            
  
          begin            
  
          if (not exists(select * from plazas_autorizadas where plazaieepo=@plazaieepo))                      
  
           begin                      
  
          set @mensajePlaza_inhabilitada=''La plaza está inhabilitada.''                      
  
           end                      
  
          else                      
  
           begin                      
  
          set @mensajePlaza_inhabilitada=''''                         
  
           end                      
  
                              
  
        if(@mensajePlaza_inhabilitada='''')                      
  
                                begin                       
  
                                set @procede=0                      
  
                                end                      
  
                             else                      
  
                                 begin                      
  
                                if(exists(select 1 from FUP_Rel_Id_Detalle_Mensaje_Prevalidacion where id_detalle=@id_detalle_loc))                      
  
                                 begin                      
  
                                 update FUP_Rel_Id_Detalle_Mensaje_Prevalidacion set Mensaje_plaza_inhabilitada=@mensajePlaza_inhabilitada where id_detalle=@id_detalle_loc                      
  
                                 end                      
  
                                else                      
  
                                    begin                      
  
                                    insert into FUP_Rel_Id_Detalle_Mensaje_Prevalidacion values (@id_detalle_loc,'''','''','''',@mensajePlaza_inhabilitada,'''','''','''','''','''')                      
  
                                    end                      
  
                                 end               
  
            end                
  
         ----- verifica que el empleado tenga la curp                                                   
  
         if(exists(select 1 from empleados where id_emp=@id_emp_folio and CURP=''''))                  
  
          begin                   
  
            set @mensaje_curp=''El empleado no tiene la CURP''                  
  
          end                  
  
        else                   
  
            begin                   
  
              set @mensaje_curp=''''                  
  
            end                  
  
                      
  
  if(@mensaje_curp ='''')                      
  
              begin                       
  
              set @procede=0                      
  
              end                      
  
        else                      
  
              begin                      
  
          if(exists(select 1 from FUP_Rel_Id_Detalle_Mensaje_Prevalidacion where id_detalle=@id_detalle_loc))                      
  
                begin                      
  
                     update FUP_Rel_Id_Detalle_Mensaje_Prevalidacion set Mensaje_Curp=@mensaje_curp where id_detalle=@id_detalle_loc                      
  
                end                      
  
          else                      
  
                begin                      
  
                     insert into FUP_Rel_Id_Detalle_Mensaje_Prevalidacion values (@id_detalle_loc,'''','''','''','''','''','''',@mensaje_curp,'''','''')              
  
                end                      
  
              end                                       
  
         end                      
  
           set @mensaje=(select distinct (rtrim(frmp.Mensaje_plaza_ocupada) + '' '' + rtrim(frmp.Mensaje_Ct_Activo) +'' '' +rtrim(frmp.Mensaje_plaza_cancelada) +'' '' + rtrim(frmp.Mensaje_plaza_inhabilitada) +'' '' + rtrim(frmp.Mensaje_CM) +'' '' + rtrim(frmp.Mensaje_baja_alta) +'' '' + rtrim(frmp.Mensaje_curp) +'' '' + rtrim(frmp.mensaje_FechaAlta_Emp) +'' '' + rtrim(frmp.mensaje_empleado_omitido) ) as Mensaje                      
  
                          from FUP_Documento_Detalle fdd (NOLOCK)                  
  
                          inner join FUP_Rel_Id_Detalle_Mensaje_Prevalidacion frmp (NOLOCK) on fdd.Id_Detalle=fdd.Id_Detalle                      
  
                          where frmp.id_detalle=@id_detalle_loc)                                
  
   end                      
  
              
  
-- Revision de movimientos que estan contemplados para la validacion                      
  
if (exists(select 1 from FUP_Documento_Detalle where Id_MotivoMovimiento in                       
  
(select Id_MotivoMovimiento from FUP_MotivoMovimiento where Id_TipoMovimiento in (2,3,4,8,9,10,11,12,13,17,20,30,31,37,38))and Id_Detalle=@id_detalle_loc))                      
  
begin                   
  
                  
  
  ---- validar que el empleado cuente con la curp                  
  
if(exists(select 1 from fup_documento_detalle where id_motivomovimiento in (                  
  
  select id_motivomovimiento from FUP_motivoMovimiento where id_tipomovimiento in (2,3,4,8,9,10,11,12,13,17,20,30,31,37,38) and clave not in (                  
  
  ''20'',''24'',''25'',''36'',''37'')) and id_detalle=@id_detalle_loc))                  
  
begin                   
  
     if(exists(select 1 from empleados where id_emp=@id_emp_folio and CURP=''''))                  
  
    begin                   
  
      set @mensaje_curp=''El empleado no tiene la CURP''                  
  
    end                  
  
  else                   
  
          begin                   
  
               set @mensaje_curp=''''                  
  
          end                  
  
                    
  
  if(@mensaje_curp ='''')                      
  
              begin                       
  
              set @procede=0                      
  
              end                      
  
        else                      
  
              begin                      
  
      if(exists(select 1 from FUP_Rel_Id_Detalle_Mensaje_Prevalidacion where id_detalle=@id_detalle_loc))                      
  
            begin                      
  
                 update FUP_Rel_Id_Detalle_Mensaje_Prevalidacion set Mensaje_Curp=@mensaje_curp where id_detalle=@id_detalle_loc                      
  
            end                      
  
      else                      
  
            begin                      
  
                 insert into FUP_Rel_Id_Detalle_Mensaje_Prevalidacion values (@id_detalle_loc,'''','''','''','''','''','''',@mensaje_curp,'''','''')                      
  
            end                      
  
              end                  
  
end                 
  
                
  
------ validar fecha de alta                
  
if(exists(select 1 from fup_documento_detalle where id_motivomovimiento in (5,103,117) and id_detalle=@id_detalle_loc))                
  
  begin                
  
                     
  
     set @fechaini=(select fechaini from fup_documento_detalle where id_detalle=@id_detalle_loc)                            
  
     set @fecha_alta_emp =(select fecha_alta from empleados where id_emp=@id_emp_folio)                
  
                     
  
    if (@fecha_alta_emp>@fechaini)                 
  
        begin                     
  
             set @mensaje_FechaAlta_emp=''La fecha de alta del empleado es mayor al desde del movimiento, Por favor verifíque.''                
  
             if(exists(select * from FUP_Rel_Id_Detalle_Mensaje_Prevalidacion where id_detalle=@id_detalle_loc))                      
  
                     begin                      
  
                           update FUP_Rel_Id_Detalle_Mensaje_Prevalidacion set mensaje_FechaAlta_emp=@mensaje_FechaAlta_emp where id_detalle=@id_detalle_loc                      
  
                     end                      
  
             else                      
  
                     begin                      
  
                           insert into FUP_Rel_Id_Detalle_Mensaje_Prevalidacion values (@id_detalle_loc,'''','''','''','''','''','''','''',@mensaje_FechaAlta_emp,'''')                      
  
                     end                  
  
        end                
  
    else                 
  
        begin                
  
             set @procede=0                
  
        end                
  
                
  
  end                
  
                 
  
                       
  
  ---- validar plaza vacante en movimientos que son nuevos ingresos y adicionales pero excluyendo las promociones                      
  
  --if(exists(select 1 from FUP_documento_detalle where Id_motivoMovimiento in (1,5,10,103,117,309,310) and id_detalle=@id_detalle_loc))                       
  --se quitan los casos solo dejamos los 0220 para que sean validado y los demas no para no mostrar mensajes de alerta
  if(exists(select 1 from FUP_documento_detalle where Id_motivoMovimiento in (309,310) and id_detalle=@id_detalle_loc)) 
  begin                      
  
    set @fechaini=(select fechaini from fup_documento_detalle where id_detalle=@id_detalle_loc)                            
  
  set @hastaquincenafecha=(select dbo.anioQuincenaToFecha((select dbo.fechaToAnioQuincena(@hasta)),1))                         
  
  set @fecha_desligue_ocupada_plaza=(select top 1 fecha from plazaempleados where id_plaza=@id_plaza and id_emp=0 and fecha<=@hastaquincenafecha order by fecha desc)                      
  
    --    if (exists(select top 1 fecha from plazaempleados where id_plaza=@id_plaza and id_emp=0 and fecha<@fecha_desligue_ocupada_plaza order by fecha desc))                      
  
    --       begin                      
  
    --       set @fecha_desligue_ocupada_plaza=(select top 1 fecha from plazaempleados where id_plaza=@id_plaza and id_emp=0 and fecha<@fecha_desligue_ocupada_plaza order by fecha desc)                      
  
    --       end                      
  
    --else                       
  
    --       begin                      
  
    --       set @fecha_desligue_ocupada_plaza=(select top 1 fecha from plazaempleados where id_plaza=@id_plaza and id_emp=0 and fecha<=@hastaquincenafecha order by fecha desc)                      
  
    --       end              
  
  set @idEmp_Ocupa=(select top 1 id_emp from plazaempleados where id_plaza=@id_plaza and id_emp<>0 and fecha<@hasta order by fecha desc)                          
  
  set @fechaocupada= (select max(Fecha) from plazaempleados where id_emp=@idEmp_Ocupa and id_plaza=@id_plaza and fecha < @hasta)                            
  
              
  
                 
  
   if (exists(select top 1 fecha from plazaempleados where id_plaza=@id_plaza and id_emp=0 and fecha<@fecha_desligue_ocupada_plaza order by fecha desc))                      
  
           begin               
  
                set @fecha_desligue_ocupada_plaza=(select top 1 fecha from plazaempleados where id_plaza=@id_plaza and id_emp=0 and fecha<@fecha_desligue_ocupada_plaza order by fecha desc)                      
  
                if (@fecha_desligue_ocupada_plaza<@fechaocupada)              
  
                begin               
  
                     set @fecha_desligue_ocupada_plaza=(select top 1 fecha from plazaempleados where id_plaza=@id_plaza and id_emp=0 and fecha<=@hastaquincenafecha order by fecha desc)              
  
                end              
  
                else              
  
                    begin                      
  
                         set @procede=0                      
  
                    end              
  
            end               
  
    else              
  
                    begin                      
  
                         set @fecha_desligue_ocupada_plaza=(select top 1 fecha from plazaempleados where id_plaza=@id_plaza and id_emp=0 and fecha<=@hastaquincenafecha order by fecha desc)                      
  
                    end                       
  
   if (@fecha_desligue_ocupada_plaza>@fechaini)                      
  
   begin                      
  
   set @idEmp_Ocupa=(select top 1 id_emp from plazaempleados where id_plaza=@id_plaza and id_emp<>0 and fecha<@hasta order by fecha desc)                          
  
   end                      
  
  else                      
  
      begin                      
  
      --set @procede=0               
  
      set @idEmp_Ocupa=''''                     
  
      end                      
  
  set @fechaocupada= (select max(Fecha) from plazaempleados where id_emp=@idEmp_Ocupa and id_plaza=@id_plaza and fecha < @hasta)                            
  
  set @QuincenaOcupada=(select dbo.fechaToAnioQuincena(@fechaocupada))                            
  
  set @Rfc_ocupa=(select rfc from empleados where id_emp=@idEmp_Ocupa)                            
  
  set @idnodo_ocupa=(select max(id_nodo) from plazaempleados where id_emp=@idEmp_Ocupa and id_plaza=@id_plaza)                            
  
  set @CT_Ocupa =(select Clave from VistaTablaLongitud where id_nodo=@idnodo_ocupa)                      
  
  set @idnodo_plaza=(select top 1 id_nodo from plazaempleados where id_plaza=@id_plaza and Fecha<''99991231'' order by fecha desc)                          
  
  set @Clave_id_nodo_plaza =(select clave from VistaTablaLongitud where id_nodo=@idnodo_plaza)                      
  
                             
  
  set @mensajePlazaocupada=''La plaza '' +@plazaieepo +'' esta ocupada por '' + @Rfc_ocupa + '' desde la Quincena '' + @QuincenaOcupada + '' en el CT '' + @CT_Ocupa                        
  
                                     
  
        set @fechacancelada= (select Fecha from HOficioAfectacionCancelacion where id_plaza=@id_plaza)          
  
        set @Quincenacancelada=(select dbo.fechaToAnioQuincena(@fechacancelada))                      
  
        set @oficio_cancelada=(select OficioAfectacionCancelacion from HOficioAfectacionCancelacion where id_plaza=@id_plaza)                       
  
                              
  
        if(@mensajePlazaocupada is null)                      
  
              begin                       
  
              set @procede=0                      
  
              end                      
  
        else                      
  
              begin                      
  
      -------------------------- se agrega funcionalidad para agregar mensaje en dado caso que el desde del mov          
  
      -------------------------- sea menor al desde en que la plaza que da vacante          
  
      if (select  top 1 id_rel from HstatusPlaza where id_plaza =@id_plaza order by fecha desc)=2          
  
       begin           
  
        set @QuincenaVacante=(select top 1 dbo.fechaToAnioQuincena(fecha) as fecha from HstatusPlaza where id_plaza =@id_plaza order by fecha desc )          
  
        set @mensaje_antecedente=''Queda vacante en la Qna: ''+ @QuincenaVacante          
  
       end          
  
          
  
      if (@mensaje_antecedente is null)                      
  
         begin                       
  
           set @procede=0                      
  
         end                      
  
        else                       
  
         begin                      
  
           set @mensajePlazaocupada=@mensajePlazaocupada+ '', ''+@mensaje_antecedente                      
  
         end           
  
          
  
      if(exists(select 1 from FUP_Rel_Id_Detalle_Mensaje_Prevalidacion where id_detalle=@id_detalle_loc))                      
  
          begin                      
  
               update FUP_Rel_Id_Detalle_Mensaje_Prevalidacion set Mensaje_plaza_ocupada=@mensajePlazaocupada where id_detalle=@id_detalle_loc                      
  
          end                      
  
      else                     
  
          begin                      
  
               insert into FUP_Rel_Id_Detalle_Mensaje_Prevalidacion values (@id_detalle_loc,@mensajePlazaocupada,'''','''','''','''','''','''','''','''')                      
  
          end                      
  
              end                      
  
  end                      
  
                        
  
  ---- validar plaza vacante en movimientos que son altas por promocion                      
  
if(exists(select 1 from FUP_documento_detalle where Id_motivoMovimiento in (11,12,119,120) and id_detalle=@id_detalle_loc))                       
  
  begin            
  
            
  
  set @fechaini=(select fechaini from fup_documento_detalle where id_detalle=@id_detalle_loc)                         
  
  set @hastaquincenafecha=(select dbo.anioQuincenaToFecha((select dbo.fechaToAnioQuincena(@hasta)),1))                         
  
  set @fecha_desligue_ocupada_plaza=(select top 1 fecha from plazaempleados where id_plaza=@id_plaza and id_emp=0 and fecha<=@hastaquincenafecha order by fecha desc)                      
  
            
  
     --if (exists(select top 1 fecha from plazaempleados where id_plaza=@id_plaza and id_emp=0 and fecha<@fecha_desligue_ocupada_plaza order by fecha desc))                      
  
        --   begin                      
  
        --   set @fecha_desligue_ocupada_plaza=(select top 1 fecha from plazaempleados where id_plaza=@id_plaza and id_emp=0 and fecha<@fecha_desligue_ocupada_plaza order by fecha desc)                      
  
        --   end                      
  
        --else                       
  
        --   begin                      
  
        --   set @fecha_desligue_ocupada_plaza=(select top 1 fecha from plazaempleados where id_plaza=@id_plaza and id_emp=0 and fecha<=@hastaquincenafecha order by fecha desc)                      
  
        --   end              
  
  set @idEmp_Ocupa=(select top 1 id_emp from plazaempleados where id_plaza=@id_plaza and id_emp<>0 and fecha<@hasta order by fecha desc)                          
  
  set @fechaocupada= (select max(Fecha) from plazaempleados where id_emp=@idEmp_Ocupa and id_plaza=@id_plaza and fecha < @hasta)                            
  
          
  
  if (exists(select top 1 fecha from plazaempleados where id_plaza=@id_plaza and id_emp=0 and fecha<@fecha_desligue_ocupada_plaza order by fecha desc))                      
  
           begin               
  
                set @fecha_desligue_ocupada_plaza=(select top 1 fecha from plazaempleados where id_plaza=@id_plaza and id_emp=0 and fecha<@fecha_desligue_ocupada_plaza order by fecha desc)                      
  
                if (@fecha_desligue_ocupada_plaza<@fechaocupada)              
  
                begin               
  
                     set @fecha_desligue_ocupada_plaza=(select top 1 fecha from plazaempleados where id_plaza=@id_plaza and id_emp=0 and fecha<=@hastaquincenafecha order by fecha desc)              
  
                end              
  
                else              
  
                    begin                      
  
                         set @procede=0                      
  
                    end              
  
            end               
  
    else              
  
                    begin                      
  
                         set @fecha_desligue_ocupada_plaza=(select top 1 fecha from plazaempleados where id_plaza=@id_plaza and id_emp=0 and fecha<=@hastaquincenafecha order by fecha desc)                      
  
                    end           
  
                         
  
   if (@fecha_desligue_ocupada_plaza>@fechaini)                      
  
    begin                      
  
   set @idEmp_Ocupa=(select top 1 id_emp from plazaempleados where id_plaza=@id_plaza and id_emp<>0 and fecha<@hasta order by fecha desc)                          
  
   end                      
  
  else                      
  
      begin                      
  
    --set @procede=0              
  
    set @idEmp_Ocupa=''''                      
  
      end                      
  
  set @fechaocupada= (select max(Fecha) from plazaempleados where id_emp=@idEmp_Ocupa and id_plaza=@id_plaza and fecha < @hasta)                            
  
set @QuincenaOcupada=(select dbo.fechaToAnioQuincena(@fechaocupada))          
  
  set @Rfc_ocupa=(select rfc from empleados where id_emp=@idEmp_Ocupa)                            
  
  set @idnodo_ocupa=(select max(id_nodo) from plazaempleados where id_emp=@idEmp_Ocupa and id_plaza=@id_plaza)                            
  
  set @CT_Ocupa =(select Clave from VistaTablaLongitud where id_nodo=@idnodo_ocupa)                      
  
  set @idnodo_plaza=(select top 1 id_nodo from plazaempleados where id_plaza=@id_plaza and Fecha<''99991231'' order by fecha desc)                          
  
  set @Clave_id_nodo_plaza =(select clave from VistaTablaLongitud where id_nodo=@idnodo_plaza)                      
  
                             
  
  set @mensajePlazaocupada=''La plaza '' +@plazaieepo +'' esta ocupada por '' + @Rfc_ocupa + '' desde la Quincena '' + @QuincenaOcupada + '' en el CT '' + @CT_Ocupa                        
  
                                     
  
        set @fechacancelada= (select Fecha from HOficioAfectacionCancelacion where id_plaza=@id_plaza)                          
  
        set @Quincenacancelada=(select dbo.fechaToAnioQuincena(@fechacancelada))                      
  
        set @oficio_cancelada=(select OficioAfectacionCancelacion from HOficioAfectacionCancelacion where id_plaza=@id_plaza)                       
  
            
  
             
  
--- si existe folio de antecedente en la quincena en proceso se obtiene la informacion                      
  
        if(exists(select distinct folio from fup_documentos where id_documento in (                      
  
        select id_documento from FUP_Documento_Detalle where Id_MotivoMovimiento in (                      
  
        select Id_MotivoMovimiento from FUP_MotivoMovimiento where descripcion like ''%baja%''                       
  
        and Id_MotivoMovimiento not in (312) and Id_plaza in (select id_plaza from fup_documento_detalle                       
  
        where id_detalle=@id_detalle_loc)) and Id_Documento in                       
  
        (select id_documento from FUP_Informacion_Documentos where id_periodo=@id_periodo_captura))and id_estatus in (4,3) and id_emp=@idEmp_Ocupa))                      
  
    begin                      
  
      set @folio_antecedente=(select distinct folio from fup_documentos where id_documento in (                      
  
      select id_documento from FUP_Documento_Detalle where Id_MotivoMovimiento in (           
  
      select Id_MotivoMovimiento from FUP_MotivoMovimiento where descripcion like ''%baja%''                       
  
      and Id_MotivoMovimiento not in (312) and Id_plaza in (                      
  
      select id_plaza from fup_documento_detalle where id_detalle=@id_detalle_loc                      
  
      )) and Id_Documento in (select id_documento from FUP_Informacion_Documentos where id_periodo=@id_periodo_captura))and id_estatus in (4,3) and id_emp=@idEmp_Ocupa)                       
  
      set @mensaje_antecedente=''Depende del folio ''+ cast(@folio_antecedente as varchar) +'' capturado en la Quincena:'' + @quincena_proceso + '' Parcial: '' +@parcial_proceso                      
  
 end                     
  
     else    ----- se busca si existe un folio de baja capturado para esa plaza en otra quincena y se obtiene la informacion                      
  
    begin                       
  
       declare @id_periodo_diferente as int                      
  
       declare @estatus_folio_antecedente as varchar (50)                      
  
       set @folio_antecedente=(select top 1 folio from fup_documentos where id_documento in (                      
  
            select id_documento from FUP_Documento_Detalle where Id_MotivoMovimiento in (                      
  
            select Id_MotivoMovimiento from FUP_MotivoMovimiento where descripcion like ''%baja%''                       
  
            and Id_MotivoMovimiento not in (312) and Id_plaza in (                      
  
            select id_plaza from fup_documento_detalle where id_detalle=@id_detalle_loc)))                      
  
            and Id_Estatus in (4,3) and Id_Emp=@idEmp_Ocupa)                      
  
       set @id_periodo_diferente=(select id_periodo from FUP_Informacion_Documentos  where id_documento in (                      
  
        select Id_Documento from FUP_Documentos where folio=@folio_antecedente                      
  
 ))                      
  
      set @estatus_folio_antecedente=case when (select id_estatus from fup_documentos where folio=@folio_antecedente)=4 then ''PENDIENTE''                      
  
      else case when (select id_estatus from fup_documentos where folio=@folio_antecedente)=3 then ''RECHAZADO'' END END                                                
  
      set @quincena_proceso=(select numero from calennomina where id_periodo=@id_periodo_diferente)                      
  
     set @año_proceso=(select año from calennomina where id_periodo=@id_periodo_diferente)                      
  
      set @parcial_proceso=(select parcial from calennomina where id_periodo=@id_periodo_diferente)                      
  
      if (@quincena_proceso<10)                      
  
      begin                       
  
      set @quincena_proceso=''0''+cast(@quincena_proceso as varchar)                      
  
      end                      
  
      else                      
  
      begin                      
  
      set @quincena_proceso=@quincena_proceso                      
  
      end                      
  
                            
  
      set @quincena_proceso=CAST(@año_proceso as varchar)+ CAST(@quincena_proceso as varchar)                                                        
  
      set @mensaje_antecedente=''Depende del folio ''+ cast(@folio_antecedente as varchar) +'' capturado en la Quincena:'' + @quincena_proceso + '' Parcial: '' +@parcial_proceso +'' y está en estatus: ''+ @estatus_folio_antecedente                      
  
    end                        
  
                   
  
        if(@mensajePlazaocupada is null)                      
  
              begin                       
  
              set @procede=0                      
  
              end                      
  
        else                      
  
              begin                      
  
     if (@mensaje_antecedente is null)                      
  
       begin                       
  
        set @procede=0                      
  
       end                      
  
     else                       
  
      begin                      
  
        set @mensajePlazaocupada=@mensajePlazaocupada+ '', ''+@mensaje_antecedente                      
  
      end          
  
                
  
    -------------------------- se agrega funcionalidad para agregar mensaje en dado caso que el desde del mov          
  
    -------------------------- sea menor al desde en que la plaza que da vacante          
  
      if (select  top 1 id_rel from HstatusPlaza where id_plaza =@id_plaza order by fecha desc)=2          
  
       begin           
  
        set @QuincenaVacante=(select top 1 dbo.fechaToAnioQuincena(fecha) as fecha from HstatusPlaza where id_plaza =@id_plaza order by fecha desc )          
  
        set @mensaje_queda_Vacante=''Queda vacante en la Qna: ''+ @QuincenaVacante          
  
       end          
  
         else           
  
          begin           
  
        set @mensaje_queda_Vacante=''''          
  
       end          
  
                       
  
      if (@mensajePlazaocupada is null)                      
  
         begin                       
  
           set @procede=0                      
  
         end                      
  
        else                       
  
         begin          
  
              set @mensajePlazaocupada=@mensajePlazaocupada + '', '' +@mensaje_queda_Vacante                                
  
         end                           
  
                           
  
     if(exists(select 1 from FUP_Rel_Id_Detalle_Mensaje_Prevalidacion where id_detalle=@id_detalle_loc))                      
  
       begin                      
  
      update FUP_Rel_Id_Detalle_Mensaje_Prevalidacion set Mensaje_plaza_ocupada=@mensajePlazaocupada where id_detalle=@id_detalle_loc                      
  
       end                      
  
     else                      
  
       begin                      
  
       insert into FUP_Rel_Id_Detalle_Mensaje_Prevalidacion values (@id_detalle_loc,@mensajePlazaocupada,'''','''','''','''','''','''','''','''')                      
  
       end                      
  
              end                      
  
 end                    
  
                        
  
  ---- Revision de los movimientos de baja por promocion en la que se valida que la plaza de baja tiene carrera magisterial                      
  
  ---- Verificar que el movimiento de alta tenga certificacion de carrera magisterial                      
  
  if(exists(select * from FUP_documento_detalle where Id_motivoMovimiento in (25,26,32,33) and id_detalle=@id_detalle_loc))                      
  
 begin                       
  
   declare @nivel_carrera as int                      
  
   set @nivel_carrera =(select top 1 id_rel from HTabulador_SE_CM where id_plaza=@id_plaza order by fecha desc)                      
  
   if (@nivel_carrera >3 and @nivel_carrera<10)                      
  
       begin                      
  
       --set @mensaje_cm =''El empleado tiene carrea mgisterial, revisar certificación de carrera en plaza de alta''                      
  
       set @mensaje_cm =''Verifíque si en la plaza de alta  se va a incorporar Carrera Magisterial''                      
  
       end                      
  
   else                      
  
       begin                       
  
       set @mensaje_cm=''''                      
  
       end                      
  
                         
  
    if(@mensaje_cm='''')                      
  
     begin                       
  
       set @procede=0                      
  
     end                      
  
             else                      
  
                 begin                      
  
       if(exists(select 1 from FUP_Rel_Id_Detalle_Mensaje_Prevalidacion where id_detalle=@id_detalle_loc))                      
  
       begin                      
  
         update FUP_Rel_Id_Detalle_Mensaje_Prevalidacion set Mensaje_CM=@mensaje_cm where id_detalle=@id_detalle_loc                      
  
       end                      
  
       else                      
  
       begin                      
  
            insert into FUP_Rel_Id_Detalle_Mensaje_Prevalidacion values (@id_detalle_loc,'''','''','''','''',@mensaje_cm,'''','''','''','''')                      
  
       end                      
  
                 end                        
  
 end                      
  
                       
  
  ---- Revision en las bajas por promocion que no se capture la misma plaza de baja que de alta.                      
  
  if(exists(select 1 from FUP_documento_detalle where Id_motivoMovimiento in (25,26,32,33) and id_detalle=@id_detalle_loc))                      
  
 begin                       
  
   if (exists(select 1 from FUP_documento_detalle where Id_motivoMovimiento in (11,12,119,120) and id_plaza=@id_plaza and id_documento= @idDocumento))                         
  
    begin                   
  
      set @mensaje_baja_alta=''La plaza de baja: ''+ CAST(@plazaieepo as varchar) +'' es igual a la plaza de alta''                      
  
    end                      
  
      else                      
  
          begin                      
  
               set @mensaje_baja_alta=''''                      
  
end                      
  
                            
  
                            
  
       if(@mensaje_baja_alta='''')                      
  
     begin                       
  
       set @procede=0                      
  
     end                      
  
          else                      
  
                 begin                      
  
       if(exists(select 1 from FUP_Rel_Id_Detalle_Mensaje_Prevalidacion where id_detalle=@id_detalle_loc))                      
  
       begin                      
  
    update FUP_Rel_Id_Detalle_Mensaje_Prevalidacion set Mensaje_baja_alta=@mensaje_baja_alta where id_detalle=@id_detalle_loc                      
  
       end                      
  
       else                      
  
       begin                      
  
            insert into FUP_Rel_Id_Detalle_Mensaje_Prevalidacion values (@id_detalle_loc,'''','''','''','''','''',@mensaje_baja_alta,'''','''','''')        
  
       end                      
  
                 end                       
  
 end                      
  
                       
  
  ---- Revision en las altas por promocion que no se capture la misma plaza de alta que de baja.                      
  
  if(exists(select 1 from FUP_documento_detalle where Id_motivoMovimiento in (11,12,119,120) and id_detalle=@id_detalle_loc))                      
  
 begin                       
  
   if (exists(select 1 from FUP_documento_detalle where Id_motivoMovimiento in (25,26,32,33) and id_plaza=@id_plaza and id_documento= @idDocumento))                         
  
    begin                       
  
      set @mensaje_baja_alta=''La plaza de alta: ''+ CAST(@plazaieepo as varchar) +'' es igual a la plaza de baja''                      
  
    end                      
  
      else                      
  
          begin                      
  
               set @mensaje_baja_alta=''''                      
  
          end                      
  
                            
  
                            
  
       if(@mensaje_baja_alta='''')                      
  
     begin                       
  
       set @procede=0                      
  
     end                      
  
          else                      
  
                 begin                      
  
       if(exists(select 1 from FUP_Rel_Id_Detalle_Mensaje_Prevalidacion where id_detalle=@id_detalle_loc))                      
  
 begin                      
  
         update FUP_Rel_Id_Detalle_Mensaje_Prevalidacion set Mensaje_baja_alta=@mensaje_baja_alta where id_detalle=@id_detalle_loc                      
  
       end                      
  
       else                      
  
       begin                      
  
            insert into FUP_Rel_Id_Detalle_Mensaje_Prevalidacion values (@id_detalle_loc,'''','''','''','''','''',@mensaje_baja_alta,'''','''','''')                      
  
       end                      
  
                 end                       
  
 end                      
  
                      
  
                          
  
  ---- En los casos de baja no se valida el estatus del centro de trabajo                      
  
  if (exists(select 1 from FUP_Documento_Detalle where Id_MotivoMovimiento in                       
  
     (select Id_MotivoMovimiento from FUP_MotivoMovimiento where Id_MotivoMovimiento in (25,26,32,33,3,4,8,9))                      
  
     and Id_Detalle=@id_detalle_loc))                      
  
   begin                       
  
     set @procede=0                      
  
   end                      
  
  else                      
  
   begin                            
  
    --- Verifica el Estatus del centro de trabajo (Clausurado o Baja)                      
  
    if (@idnodo_plaza=@Id_nodo_CT_Nuevo)                           
  
    begin                           
  
     set @Estatus_idnodo_plaza=(select id_rel from RCT_Status where id_nodo=@idnodo_plaza)                          
  
     set @mensaject= case when @Estatus_idnodo_plaza=2 then ''El Centro de trabajo '' + @Clave_id_nodo_plaza +'' está en estatus de Baja.''                           
  
     else case when @Estatus_idnodo_plaza=3 then ''El Centro de trabajo '' + @Clave_id_nodo_plaza +'' está en estatus clausurado.''                           
  
     else '''' end end                        
  
    end                      
  
    else                           
  
     begin                           
  
                                          
  
     set @Estatus_Ct_nuevo=(select id_rel from RCT_Status where id_nodo=@Id_nodo_CT_Nuevo)                             
  
     set  @mensaject= case when @Estatus_Ct_nuevo=2 then ''El Centro de trabajo '' + @Ct_nuevo +'' está en estatus de Baja.''                           
  
    else case when @Estatus_Ct_nuevo=3 then ''El Centro de trabajo '' + @Ct_nuevo +'' está en estatus clausurado.''                          
  
    else '''' end end                        
  
     end                      
  
                           
  
    if(@mensaject='''')                      
  
                   begin                       
  
                         set @procede=0                      
  
 end                      
  
          else                      
  
                   begin                      
  
      if(exists(select 1 from FUP_Rel_Id_Detalle_Mensaje_Prevalidacion where id_detalle=@id_detalle_loc))                      
  
         begin                      
  
                 update FUP_Rel_Id_Detalle_Mensaje_Prevalidacion set Mensaje_Ct_Activo=@mensaject where id_detalle=@id_detalle_loc                      
  
      end                      
  
      else                      
  
       begin                      
  
         insert into FUP_Rel_Id_Detalle_Mensaje_Prevalidacion values (@id_detalle_loc,'''',@mensaject,'''','''','''','''','''','''','''')                      
  
       end                      
  
                   end                          
  
   end                        
  
                      
  
   --- En los casos de baja no se valida si la plaza esta cancelada o para acancelar                      
  
   if (exists(select 1 from FUP_Documento_Detalle where Id_MotivoMovimiento in                       
  
      (select Id_MotivoMovimiento from FUP_MotivoMovimiento where Id_MotivoMovimiento in (25,26,32,33,3,4,8,9,103,117,309,310))                      
  
       and Id_Detalle=@id_detalle_loc))                         
  
     begin                       
  
      set @procede=0                      
  
     end                      
  
   else                      
  
     begin                          
  
      -- Verifica si la plaza esta cancelada o para cancelar                      
  
    if(@fechacancelada is null)                  
  
        begin                       
  
             set @mensajePlaza_cancelada=''''                      
  
        end                      
  
    else                      
  
        begin                      
  
                if (@fechacancelada<=@fechaini)                      
  
        begin                       
  
          set @mensajePlaza_cancelada=''La plaza '' +@plazaieepo +'' está cancelada con el oficio de afectación '' +@oficio_cancelada + '' desde la Quincena '' + @Quincenacancelada                          
  
        end                      
  
          else                       
  
        begin                      
  
          set @mensajePlaza_cancelada=''La plaza '' +@plazaieepo +'' está para cancelar con el oficio de afectación '' +@oficio_cancelada + '' a partir de la Quincena '' + @Quincenacancelada                        
  
        end                      
  
        end                      
  
                          
  
                       if(@mensajePlaza_cancelada ='''')                      
  
                                begin                       
  
                                set @procede=0                      
  
  end                      
  
                       else                      
  
                                begin                      
  
          if(exists(select 1 from FUP_Rel_Id_Detalle_Mensaje_Prevalidacion where id_detalle=@id_detalle_loc))                      
  
              begin                      
  
             update FUP_Rel_Id_Detalle_Mensaje_Prevalidacion set Mensaje_plaza_cancelada=@mensajePlaza_cancelada where id_detalle=@id_detalle_loc                      
  
           end                      
  
          else                      
  
              begin                      
  
             insert into FUP_Rel_Id_Detalle_Mensaje_Prevalidacion values (@id_detalle_loc,'''','''',@mensajePlaza_cancelada,'''','''','''','''','''','''')                      
  
              end                     
  
                                 end                               
  
    end                        
  
                        
  
  -- En las bajas no se valida si la plaza esta inhabilitada                       
  
  if (exists(select 1 from FUP_Documento_Detalle where Id_MotivoMovimiento in                       
  
     (select Id_MotivoMovimiento from FUP_MotivoMovimiento where Id_MotivoMovimiento in (25,26,32,33,3,4,8,9,103,117,309,310))                      
  
     and Id_Detalle=@id_detalle_loc))                      
  
     begin                       
  
      set @procede=0   
  
     end                      
  
   else                      
  
     begin                         
  
      -- Verifica si la plaza está inhabilitada            
  
      -- se añade validacion al capturar Ab de forma incorrecta 2014-12-12             
  
      declare @AB1 as varchar (8)                     
  
      set @AB1=(select distinct categoria from plazaieepo where plazaieepo=@plazaieepo) --se considera un solo registro por las plazas hijas 2014-12-15            
  
      if (@AB1 = '' AB001'')            
  
      begin            
  
   set @procede=0            
  
      end                   
  
      else            
  
      begin            
  
      if (not exists(select 1 from plazas_autorizadas where plazaieepo=@plazaieepo))                      
  
       begin                      
  
            set @mensajePlaza_inhabilitada=''La plaza está inhabilitada.''                      
  
       end                      
  
      else                      
  
          begin                      
  
                set @mensajePlaza_inhabilitada=''''                        
  
          end                      
  
                       
  
      if(@mensajePlaza_inhabilitada='''')                      
  
                      begin                       
  
                           set @procede=0                      
  
                      end                      
  
               else                      
  
                      begin                      
  
         if(exists(select 1 from FUP_Rel_Id_Detalle_Mensaje_Prevalidacion where id_detalle=@id_detalle_loc))                      
  
          begin                      
  
               update FUP_Rel_Id_Detalle_Mensaje_Prevalidacion set Mensaje_plaza_inhabilitada=@mensajePlaza_inhabilitada where id_detalle=@id_detalle_loc                      
  
          end                      
  
         else                      
  
          begin                      
  
            insert into FUP_Rel_Id_Detalle_Mensaje_Prevalidacion values (@id_detalle_loc,'''','''','''',@mensajePlaza_inhabilitada,'''','''','''','''','''')                      
  
          end                      
  
                      end            
  
      end                                                 
  
     end                      
  
         set @mensaje=(select distinct (rtrim(frmp.Mensaje_plaza_ocupada) + '' '' + rtrim(frmp.Mensaje_Ct_Activo) +'' '' +rtrim(frmp.Mensaje_plaza_cancelada) +'' '' + rtrim(frmp.Mensaje_plaza_inhabilitada) +'' '' + rtrim(frmp.Mensaje_CM) +'' '' + rtrim(frmp.Mensaje_baja_alta) +'' '' + rtrim(frmp.Mensaje_curp) +'' '' + rtrim(frmp.mensaje_FechaAlta_Emp) +'' '' + rtrim(frmp.mensaje_empleado_omitido) ) as Mensaje                      
  
                          from FUP_Documento_Detalle fdd (NOLOCK)                  
  
                          inner join FUP_Rel_Id_Detalle_Mensaje_Prevalidacion frmp (NOLOCK) on fdd.Id_Detalle=fdd.Id_Detalle                      
  
                          where frmp.id_detalle=@id_detalle_loc)                               
  
end                      
  
if (@mensaje <> '''')                          
  
  begin                          
  
   if exists(select 1 from fup_bitacora b (NOLOCK)      
  
             inner join fup_bitacora_detalle bd (NOLOCK) on b.id_bitacora = bd.id_bitacora                      
  
             where Id_Documento = @idDocumento and b.codigo = ''CI'')                          
  
    begin                
  
                              
  
     declare @totalLineas int                          
  
                               
  
     select @totalLineas = TotalLineas from fup_bitacora b (NOLOCK) inner join fup_bitacora_detalle bd (NOLOCK) on b.id_bitacora = bd.id_bitacora where Id_Documento = @idDocumento and b.codigo = ''CI''                          
  
     set @totalLineas = @totalLineas + 1                          
  
     select @idBitacora = b.Id_Bitacora from fup_bitacora b (NOLOCK) inner join fup_bitacora_detalle bd (NOLOCK) on b.id_bitacora = bd.id_bitacora where Id_Documento = @idDocumento and b.codigo = ''CI''                          
  
                               
  
     update fup_bitacora set totallineas = @totalLineas where id_bitacora = @idBitacora                          
  
                               
  
    end                          
  
   else                          
  
    begin                          
  
                              
  
     declare @nombreBitacora varchar(100)                          
  
                              
  
     select @idBitacora = max(id_bitacora) + 1 from fup_bitacora                          
  
     set @nombreBitacora = ''Bitacora Captura Folio: '' + @folio                          
  
                               
  
     insert into fup_bitacora(id_bitacora,nombrearchivo,id_estatusbitacora,id_razonsocial,fechacreacion,id_usuario,totallineas,codigo,id_periodo)                       
  
                            select @idBitacora,@nombreBitacora,3,5,getdate(),@idUsuario,1,''CI'',0                          
  
                               
  
    end                          
  
                              
  
   declare @idDetalleBitacora int                          
  
                             
  
   select @idDetalleBitacora = max(id_detalle) + 1 from fup_bitacora_detalle                          
  
                             
  
   insert into fup_bitacora_detalle(id_bitacora,id_detalle,id_documento,no_linea,motivo_rechazo,id_estatus,fechacreacion,mensaje)                       
  
   select @idBitacora,@idDetalleBitacora,@idDocumento,1,ltrim(@mensaje),9,getdate(),0                          
  
                         
  
  end                          
  
   delete from FUP_Rel_Id_Detalle_Mensaje_Prevalidacion where id_detalle=@id_detalle_loc                
  
     
  
OPTION (MAXDOP 1)                  
  
SET NOCOUNT OFF;                                    
  
end'
GO

GO
PRINT N'Creating [dbo].[spf_Desactiva_Retro_Conceptos]'
GO
IF OBJECT_ID(N'[dbo].[spf_Desactiva_Retro_Conceptos]', 'P') IS NULL
EXEC sp_executesql N'CREATE procedure [dbo].[spf_Desactiva_Retro_Conceptos]            
(                              
  @id_detalle  as int,  
  @accion as bit           
) 
as            
Begin
     declare @id_detalle_loc as int =@id_detalle             
     declare @accion_loc as bit=@accion
     declare @id_periodo as int            
     declare @descripcion as varchar(max)   
     declare @rfc as varchar(13)           
           
     set @id_periodo =  (select id_periodo from fup_informacion_documentos where id_documento   
     in (select Id_Documento from FUP_Documento_Detalle where Id_Detalle=@id_detalle_loc))            
       
     set @descripcion = (select descripcion from recalculo_calculo where id_detalle = @id_detalle_loc)          
  
--- Desactivar el retroactivo del concepto     
if @accion_loc = 0             
 begin            
   if (@id_detalle_loc <> 0)  
       if CHARINDEX(''#'',@descripcion) = 0          
    update recalculo_calculo set activo = 0, descripcion = (''No aplica retro, fecha: '' + cast(CONVERT(varchar(10), GETDATE(), 120 ) as varchar(max)) + '' #'' + @descripcion) where id_detalle = @id_detalle_loc            
   end            
  
else -- Regresion del movimiento x si algo truena   
           
 begin            
               update recalculo_calculo set activo = 1, descripcion = substring(@descripcion,(CHARINDEX(''#'',@descripcion)+1),len(@descripcion)) where id_detalle = @id_detalle_loc                       
 end            
end'
GO

GO
PRINT N'Creating [dbo].[spuHistPagosDetalle]'
GO
IF OBJECT_ID(N'[dbo].[spuHistPagosDetalle]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		wcahun
-- Create date: 10/10/2013
-- Description:	procedimiento para actualizar un concepto histpagos detalle  base a su periodo
-- =============================================
CREATE PROCEDURE [dbo].[spuHistPagosDetalle]
@id_plaza int, @id_emp int, @id_periodo int, @id_recalculo int, @periodos varchar(1000), @id_concepto int, @pesos float, @id_plazapago int
WITH EXEC AS CALLER
AS
BEGIN

declare @idPlaza int = @id_plaza
declare @idEmp int = @id_emp
declare @idPeriodo int = @id_periodo
declare @idRecalculo int  = @id_recalculo
declare @periodosos varchar(1000) = @periodos
declare @idConcepto int = @id_concepto
declare @Pesosos float = @pesos
declare @idPlazapago int = @id_plazapago


DECLARE @Xml AS XML        
		--Se crean los nodos periodo
		SET @Xml = ''<periodo>'' + REPLACE(@periodosos, '','', ''</periodo><periodo>'') + ''</periodo>'';


BEGIN TRY

	update histpagosdetalle 
	set pesos=@Pesosos
	where ID_PERIODO=@idPeriodo and id_referencia=@idRecalculo
	and id_plaza=@idPlaza and id_emp=@idEmp
	and id_concepto=@idConcepto and id_periodopago IN (SELECT periodos.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/periodo'') AS periodos(n))
	and id_plazapago=@idPlazapago

	if @@rowcount<1 
		RAISERROR (''no se actualizó ningun valor'', 16,1);
	else
		select ''correcto'' as resultado
END TRY
BEGIN CATCH
    SELECT ERROR_MESSAGE() as resultado
    
END CATCH;


END'
GO

GO
PRINT N'Creating [dbo].[DSV_SP_SacaHistPagosDedu]'
GO
IF OBJECT_ID(N'[dbo].[DSV_SP_SacaHistPagosDedu]', 'P') IS NULL
EXEC sp_executesql N'
CREATE PROCEDURE [dbo].[DSV_SP_SacaHistPagosDedu]      
(      
@idplaza int,      
@Idemp int,      
@idperiodo int,
@refere int         
)      
with encryption
  
AS      
SET NOCOUNT ON      

declare @DDtbltmp table (
Id_Emp int, 
Id_Periodo int, 
id_concepto int, 
Consecutivo int, 
Horas float, 
Pesos float, 
Fecha smalldatetime, 
CC varchar(10), 
PesosExcento float, 
id_plaza int, 
Id_Referencia int,
id_periodoPago int, 
Id_ProcesoNomina int, 
Desde varchar(6), 
Hasta varchar(6), 
esHistoria bit, 
Fix bit)
declare @danio int = (select año from calennomina where Id_Periodo = @idperiodo )

--if @DAnio  = 2012 
--insert into @DDtbltmp 
  --select *  from [dep].dbo.Nom_histpagos_2012 where @idplaza  = id_plaza and @Idemp = id_emp 
--if @Danio = 2013
--insert into @DDtbltmp 
  --select *  from [dep].dbo.Nom_histpagos_2013 where @idplaza = id_plaza and @Idemp = id_emp 

insert into @DDtbltmp 
  select *  from Nom_histpagos where @idplaza = id_plaza and @Idemp = id_emp 
-- creacion de variable tipo tabla

 SELECT      
   a.id_concepto, a.Resultado as Clave,convert(varchar(12), cast(b.Pesos as money), 1) AS Importe,a.descripcion, b.Id_Emp, Cast(g.año as varchar(4)) + ''''+Right(''00''+Cast(g.numero as varchar(2)),2) as Periodo, b.id_plaza,Desde+'' ''+Hasta as Desde_Hasta      
      
 FROM      
   Conceptos a       
   INNER JOIN ConceptoRelEmpresa c      
   ON a.id_concepto = c.id_concepto       
   INNER JOIN      
            (SELECT     Id_Emp, id_concepto, Id_Periodo, id_plaza, Pesos,Desde,Hasta, isnull(Id_Referencia,0)  Id_Referencia      
            FROM       HistPagos      
            UNION ALL      
            SELECT     Id_Emp, id_concepto, Id_Periodo, id_plaza, Pesos,Desde,Hasta, isnull(Id_Referencia,0)  Id_Referencia     
            FROM       @DDtbltmp)       
   AS b      
   ON a.id_concepto = b.id_concepto    
   inner join Empleados E    
   on e.id_emp = b.id_emp    
   inner join Plazas F    
   on F.id_plaza = b.id_plaza    
   Inner Join Calennomina G  
   on b.Id_Periodo=G.Id_periodo     
 WHERE      
   b.Id_Emp =@idemp and f.id_plaza=@idplaza AND b.id_periodo=@idperiodo and (c.id_razonsocial = 5) AND (a.Tipo = 2) AND (a.En_ListaRaya = 1)  
   --and b.Id_Referencia = @refere     
 ORDER BY 
   DESDE, HASTA, A.descripcion      
         
SET NOCOUNT OFF      
'
GO

GO
PRINT N'Creating [dbo].[spc_LayoutPD]'
GO
IF OBJECT_ID(N'[dbo].[spc_LayoutPD]', 'P') IS NULL
EXEC sp_executesql N'--procedimiento para generar el layout de percepciones y deducciones de un empleado en un solo registro
CREATE procedure [dbo].[spc_LayoutPD]                
@quincena varchar(6)='''',    
@tipo_reporte int    
with recompile                       
as                                                              
begin    
SET NOCOUNT ON;                 
  if (@tipo_reporte=0)    
   begin     
     select top 1 quincena from [federacion.ieepo.gob.mx].federacion.dbo.detalle_nomina with(nolock) where substring(quincena,5,2) not in (''00'',''25'')     
     and id_emp is not null order by quincena desc    
   end    
  else    
   begin       
   --declare @quincena as varchar(6)=''202015''      
   if(@quincena='''')      
   begin       
     set @quincena=(select top 1 quincena from [federacion.ieepo.gob.mx].federacion.dbo.detalle_nomina with(nolock)       
     where substring(quincena,5,2) not in (''00'',''25'') and id_emp is not null order by quincena desc)      
   end      
    --se generan temporales para informacion posterior      
       
    --se generan concentrado de conceptos      
    select a.curp, b.plaza, b.concepto, b.importe, b.tipo_concepto into #tabla      
    from [federacion.ieepo.gob.mx].federacion.dbo.detalle_nomina a with(nolock)     
  inner join [federacion.ieepo.gob.mx].federacion.dbo.datos_enviados_ctos b with(nolock) on a.num_comprobante=b.num_comprobante and a.curp=b.curp and a.clave_plaza=b.plaza      
    where a.quincena=@quincena and a.nomina=''ordinaria''      
    
	CREATE NONCLUSTERED INDEX idxtabla ON #tabla (curp) INCLUDE (plaza)       
 
    --se agrupan las percepciones      
    select curp, plaza,       
    stuff((      
    select '', ''+concepto+''  ''+cast(importe as varchar)      
    from (select * from #tabla where tipo_concepto = ''P'') p2      
    where p1.curp = p2.curp and p1.plaza = p2.plaza   
	order by concepto    
    for xml path('''')      
    ),1,1,'''') percepciones      
    into #percepciones      
    from (select curp,plaza,tipo_concepto from #tabla where tipo_concepto = ''P'' group by curp,plaza,tipo_concepto) p1      
      
    CREATE NONCLUSTERED INDEX idxpercepciones ON #percepciones (curp) INCLUDE (plaza)       
      
    --se agrupan las deducciones      
    select curp, plaza,       
    stuff((      
    select '', ''+concepto+''  ''+cast(importe as varchar)      
    from (select * from #tabla where tipo_concepto = ''D'') p2      
    where p1.curp = p2.curp and p1.plaza = p2.plaza 
	order by concepto     
    for xml path('''')      
    ),1,1,'''') deducciones      
    into #deducciones      
    from (select curp,plaza,tipo_concepto from #tabla where tipo_concepto = ''D'' group by curp,plaza,tipo_concepto) p1      
      
    CREATE NONCLUSTERED INDEX idxdeducciones ON #deducciones (curp) INCLUDE (plaza)       
    
    ---se genera concentrado de numeros de cheque    
    select dn.id_detalle,k.id_hist,dn.num_comprobante,dn.curp,dn.clave_plaza as plaza,k.cheque     
    into #num_cheques    
    from [federacion.ieepo.gob.mx].federacion.[dbo].detalle_nomina dn with(nolock)    
    inner join [federacion.ieepo.gob.mx].federacion.[dbo].[Rel_Cheque_Recibo] j with(nolock) on dn.id_detalle=j.id_detnom        
    inner join [federacion.ieepo.gob.mx].federacion.dbo.HIST_NOMINA k with(nolock) on k.id_hist=j.id_hist       
    where dn.quincena = @quincena and dn.nomina = ''ordinaria''    
    
    CREATE NONCLUSTERED INDEX idxnum_cheques ON #num_cheques (id_detalle) INCLUDE (curp,plaza)      
        
        
    select A.CLAVE_CCT,B.TIPO_NOMINA,A.RFC,A.PRIMER_APELLIDO,A.SEGUNDO_APELLIDO,A.NOMBRE,A.CURP,A.CLAVE_PLAZA,    
    A.CLABE_BANCO,A.IMPORTE_NETO,a.importe_percepciones,a.importe_deducciones,a.id_plaza,id_emp,id_detalle,banco,quincena into #tabla2    
    from [federacion.ieepo.gob.mx].federacion.dbo.detalle_nomina a with(nolock)        
    inner join [federacion.ieepo.gob.mx].federacion.dbo.datos_enviados_ctos b with(nolock)     
    on a.num_comprobante=b.num_comprobante and a.curp=b.curp --and a.clave_plaza=b.plaza       
    where a.quincena=@quincena           
    and a.nomina=''ordinaria''         
    and b.tipo_concepto=''p''         
    and b.concepto in (''01'',''07'',''7A'',''7B'',''7C'',''7D'',''7E'',''BC'',''14B'',''15'')        
       
    
    CREATE NONCLUSTERED INDEX IDX_tabla2    
       ON [#tabla2] ([id_plaza],[quincena])    
       INCLUDE ([CLAVE_CCT],[TIPO_NOMINA],[RFC],[PRIMER_APELLIDO],[SEGUNDO_APELLIDO],[NOMBRE],[CURP],    
    [CLAVE_PLAZA],[CLABE_BANCO],[IMPORTE_NETO],[id_emp],[id_detalle],[banco])     
            
     --Reporte version 2      
     /******INICIO DE LOS CAMPOS DEL REPORTE***/      
     select A.RFC, (rtrim(case when A.PRIMER_APELLIDO is null then'''' else A.PRIMER_APELLIDO end)       
     + case when A.SEGUNDO_APELLIDO is null THEN '''' ELSE '' '' + rtrim(A.SEGUNDO_APELLIDO) END + '' '' + rtrim(A.NOMBRE)) ''NOMBRE'',
	      case when i.fecha_alta_sep is null then '''' else convert(varchar(10),dbo.anioquincenatofecha(i.fecha_alta_sep,0),103) end as FECHA_DE_INGRESO,            
     A.IMPORTE_NETO AS SUELDO,M.PERCEPCIONES,A.IMPORTE_PERCEPCIONES AS TOTAL_PERCEPCIONES,N.DEDUCCIONES,A.IMPORTE_DEDUCCIONES AS TOTAL_DEDUCCIONES,@quincena as QUINCENA          
     from #tabla2 a     
     inner join #percepciones m on a.curp=m.curp and a.clave_plaza=m.plaza      
     inner join #deducciones n on a.curp=n.curp and a.clave_plaza=n.plaza              
     --se agrega para contemplar la fecha de ingreso sep      
     left join view_fup_fechas_sep i with(nolock) on a.id_emp=i.id_emp              
     where a.quincena=@quincena              
     order by a.rfc    
    end      
end        
    
    
    
    
    
    
    '
GO

GO
PRINT N'Creating [dbo].[SP_SacaEmpleadoCon]'
GO
IF OBJECT_ID(N'[dbo].[SP_SacaEmpleadoCon]', 'P') IS NULL
EXEC sp_executesql N'
CREATE PROCEDURE [dbo].[SP_SacaEmpleadoCon]  
(  
@Idemp int=0 
/* @fechafin  datetime */  
  
)  
AS  
SET NOCOUNT ON  
  /*  
BEGIN    
  */  
  
   
 SELECT  
  
 a.Id_Emp,b.id_plaza,a.NoConcepto,CASE WHEN a.NoConcepto >= 2300 THEN ''D'' ELSE ''P'' END AS PD,   
    a.descripcion AS Concepto, a.Monto, cast( year(a.Fecha) as varchar) + ''''+ Right(''00'' + Cast(case when(day(a.Fecha)>15)then month(a.Fecha)*2 else (month(a.Fecha)*2)-1 end as Varchar(2)),2) as Desde,cast( year(a.FechaFin) as varchar) + ''''+ Right(''00'' + Cast(case when(day(a.FechaFin)>15)then month(a.FechaFin)*2 else (month(a.FechaFin)*2)-1 end as Varchar(2)),2) as Hasta, CASE WHEN a.fechafin >= GETDATE() THEN 1 ELSE 0 END AS Vigencia  
 FROM  
 TTEmpleado_Plaza_Conc a  
 inner join plazas b  
 on a.noplaza=b.id_plaza  

  
 WHERE  
   a.id_emp=@Idemp  
ORDER BY a.FechaFin DESC  
   
/*  
 END  
*/  
  
SET NOCOUNT OFF  


'
GO

GO
PRINT N'Creating [dbo].[sp_ActualizaPlazasVR]'
GO
IF OBJECT_ID(N'[dbo].[sp_ActualizaPlazasVR]', 'P') IS NULL
EXEC sp_executesql N' CREATE PROCEDURE [dbo].[sp_ActualizaPlazasVR]   
 WITH EXEC AS CALLER    
 AS    
 SET NOCOUNT ON;  
 BEGIN   
  -- select * from #vr2  
    
  --********************* ACTUALIZACION DE PLAZAS VACANTES **************  
   
  
  -- Limpiamos las tablas temporales si es que existen  
  IF OBJECT_ID(N''tempdb..#vr1'') IS NOT NULL    
   drop table #vr1;  
  
  IF OBJECT_ID(N''tempdb..#vr2'') IS NOT NULL    
   drop table #vr2;  
   
  
  -- Obtenemos las vacantes de SIAHOY.   
  select distinct a.codigo CODIGO,b.id_plaza,b.TModelo_SE_id_Modelo_SE ,a.modelo MODELO,a.estatus ESTATUS_FONE, a.codigo_plaza PLAZA,  
  case when a.codigo_plaza like ''%E%'' then substring(a.codigo_plaza,12,2)*1 else 0 end  HORAS, b.descr_status ESTATUS,  
  b.DESDE_ST,b.ct CT,x.ESTATUS_CT,x.ud UD,x.Region REGION,  
  x.municipio MUNICIPIO,x.localidad LOCALIDAD,a.codigo_plaza PLAZAF,x.cod_Reg IDR,z.oficio,z.tipmov, z.TipoOfic CC_simc
  ,B.DES_NIVEL NIVEL_EDUCATIVO
  INTO #vr1 -- drop table usuarios.vacs241117   
  from hplazas_concifed_230217 a    
  join siahoy b on b.plazaf =a.codigo_plaza and b.descr_status    --not  in (''vacante'',''activa'')  
   in (''vacante'') --and a.CODIGO_PLAZA=''072048E0463100200563''  
  left join v_ctmunreg x on x.nodo=b.id_nodo    
  left join v_simc z on z.plaza21=b.plazaieepo  
  where a.codigo_plaza not like ''%ab%''and b.id_plaza not in (select valor_idcampo from hplazas where Id_TipoMovPlazas=4)    
  and a.estatus not in (''C'')  
    
  union  
  
  select distinct a.codigo CODIGO,b.id_plaza,b.TModelo_SE_id_Modelo_SE ,a.modelo MODELO,a.estatus ESTATUS_FONE, a.codigo_plaza PLAZA,  
  case when a.codigo_plaza like ''%E%'' then substring(a.codigo_plaza,12,2)*1 else 0 end  hrs, b.descr_status ESTATUS,b.DESDE_ST,  
  a.cct CT,x.Estatus_Ct Estatus_CT,x.ud UD,x.Region REGION,x.municipio MUNICIPIO,x.localidad LOCALIDAD,a.codigo_plaza PLAZAF,  
  x.cod_Reg IDR,z.oficio,z.tipmov, z.TipoOfic CC_simc     
  ,B.DES_NIVEL NIVEL_EDUCATIVO
  from hplazas_concifed_230217 a    
  left join siahoy b on b.plazaf =a.codigo_plaza  and b.id_plaza not in (select valor_idcampo from hplazas where Id_TipoMovPlazas=4)
   and a.estatus not in (''C'',''A'')  
  left join v_ctmunreg x on x.ct=a.cct    
  left join v_simc z on z.plazaf=a.codigo_plaza    
    where a.codigo_plaza   not like ''%ab%'' and a.ESTATUS not in (''c'') and b.descr_status  is null  
  
  
  --- Crea temporal para manejo de datos  
  select id_plaza,CODIGO,MODELO,ESTATUS_FONE,substring(plaza,3,2) U,substring(plaza,5,2) SU,PLAZA,cast('''' as varchar(max))  OBSERVACIONES,  
  case when PLAZA like ''%E%'' then substring(plaza,12,2)*1 else 0 end HORAS, ESTATUS,desde_st DESDE_ESTATUS,CT,  
  Estatus_CT ESTATUS_CT,UD,REGION,MUNICIPIO,LOCALIDAD, NIVEL_EDUCATIVO --PLAZAF IDR oficio tipmov CC_simc  
  -- select *   
  into #vr2   
  from #vr1   
   
  
  --- Dejar fuera plazas que no se pueden usar para asignacion  
  delete from #vr2  where plaza in  (''148715E0763200201421'',''148760E1563050200035'',''078721E0181000908225'')  
  
  
  -- Actualiza las observaciones si es que hay nullos  
  update #vr2  set OBSERVACIONES='''' where OBSERVACIONES is null  
  
  
  -- Eliminamos las plazas que no esten apartadas o autorizadas  
  delete from plazas_vr where apartada = 0 and autorizada = 0  
  
  
  
  --Agregamos las nuevas plazas, excepto las que ya estaban en un proceso de apartado  
  insert into plazas_vr (ID_PLAZA,CODIGO,MODELO,ESTATUS_FONE,U,SU,PLAZA,OBSERVACIONES,HORAS,ESTATUS,  
  DESDE_ESTATUS,CT,ESTATUS_CT,UD,REGION,MUNICIPIO,LOCALIDAD,APARTADA,AUTORIZADA,NIVEL_EDUCATIVO)  
  select ID_PLAZA,CODIGO,MODELO,ESTATUS_FONE,U,SU,PLAZA,OBSERVACIONES,HORAS,ESTATUS,  
  DESDE_ESTATUS,CT,ESTATUS_CT,UD,REGION,MUNICIPIO,LOCALIDAD,0 APARTADA,0 AUTORIZADA,NIVEL_EDUCATIVO
  -- select *  
  from #vr2   
  where id_plaza not in (select id_plaza from plazas_vr where apartada = 1 or autorizada = 1)  
  
  
  ---- Actualizamos el tipo y la descripcion del modelo  
  update a set a.tipo=b.tipo,a.des_modelo=b.desmodelo from plazas_vr  a   
  join hplazas_concifed_230217 b on b.codigo_plaza=a.plaza   
  where a.des_modelo is null   
  
 END  '
GO

GO
PRINT N'Creating [dbo].[SPF_TTEmpleado_Plaza_Conc_SP]'
GO
IF OBJECT_ID(N'[dbo].[SPF_TTEmpleado_Plaza_Conc_SP]', 'P') IS NULL
EXEC sp_executesql N'CREATE procedure [dbo].[SPF_TTEmpleado_Plaza_Conc_SP]      
@fechaIni as datetime, @noConcepto as int, @noEmp as int, @numPlaza as int, @undo as bit      
as      
begin   
 declare @fechaIni_loc as datetime=@fechaIni   
 declare @noConcepto_loc as int=@noConcepto  
 declare @noEmp_loc as int=@noEmp  
 declare @numPlaza_loc as int=@numPlaza  
 declare @undo_loc as bit=@undo  
   
 if @undo_loc = 0      
 begin      
  if object_id(''TTEmpleado_plaza_conc_tmp'', ''U'') is null      
  begin      
   Select * into TTEmpleado_plaza_conc_tmp from TTEmpleado_Plaza_Conc where 1 = 0      
   alter table TTEmpleado_plaza_conc_tmp drop column id_TEmpleado_Plaza_Conc      
   alter table TTEmpleado_plaza_conc_tmp add id_TEmpleado_Plaza_Conc int      
  end      
  if object_id(''chk_cp_ttemp'', ''U'') is null    
   create table chk_cp_ttemp(fechaini datetime, no_concepto int, no_emp int, num_plaza int)      
   insert into chk_cp_ttemp values(@fechaIni_loc,@noConcepto_loc,@noEmp_loc,@numPlaza_loc)      
     
  if (  
   not exists   
   (  
    select 1  
    from TTEmpleado_plaza_conc_tmp   
    where   
     Fecha = @fechaIni_loc and   
     NoConcepto = @noConcepto_loc and   
     NoEmp_rel = @noEmp_loc and  
     NoPlaza = @numPlaza_loc and       
     tvigencia_id_vigencia = 0      
   )  
  )   
  begin  
   insert into TTEmpleado_plaza_conc_tmp(      
    id_TEmpleado_Plaza_Conc, consecutivo, descripcion, NoPlaza, NoConcepto, Monto,      
    FechaFin, Tvigencia_id_vigencia, NoEmp_rel, usuario, Movimiento, Fecha, Id_Emp,      
    TTipo_Captura_id_Tipo_Captura, id_periodopago, Id_Documento       
   )       
   select       
    id_TEmpleado_Plaza_Conc, consecutivo, descripcion, NoPlaza, NoConcepto, Monto,      
    FechaFin, Tvigencia_id_vigencia, NoEmp_rel, usuario, Movimiento, Fecha, Id_Emp,      
    TTipo_Captura_id_Tipo_Captura, id_periodopago, Id_Documento        
   from TTEmpleado_plaza_conc      
   where Fecha = @fechaIni_loc and NoConcepto = @noConcepto_loc and       
    NoEmp_rel = @noEmp_loc and NoPlaza = @numPlaza_loc and       
    tvigencia_id_vigencia = 0      
  
   delete from TTEmpleado_plaza_conc      
   where Fecha = @fechaIni_loc and NoConcepto = @noConcepto_loc and       
   NoEmp_rel = @noEmp_loc and NoPlaza = @numPlaza_loc and       
   tvigencia_id_vigencia = 0      
  end  
 end      
 else      
 begin      
  insert into TTEmpleado_plaza_conc(      
   consecutivo, descripcion, NoPlaza, NoConcepto, Monto,      
   FechaFin, Tvigencia_id_vigencia, NoEmp_rel, usuario, Movimiento, Fecha, Id_Emp,      
   TTipo_Captura_id_Tipo_Captura, id_periodopago, Id_Documento       
  )       
  select       
   consecutivo, descripcion, NoPlaza, NoConcepto, Monto,      
   FechaFin, Tvigencia_id_vigencia, NoEmp_rel, usuario, Movimiento, Fecha, Id_Emp,      
   TTipo_Captura_id_Tipo_Captura, id_periodopago, Id_Documento        
  from TTEmpleado_plaza_conc_tmp      
  where Fecha = @fechaIni_loc and NoConcepto = @noConcepto_loc and       
   NoEmp_rel = @noEmp_loc and NoPlaza = @numPlaza_loc and       
   tvigencia_id_vigencia = 0      
     
  delete from TTEmpleado_plaza_conc_tmp      
  where Fecha = @fechaIni_loc and NoConcepto = @noConcepto_loc and       
   NoEmp_rel = @noEmp_loc and NoPlaza = @numPlaza_loc and       
   tvigencia_id_vigencia = 0      
 end      
end '
GO

GO
PRINT N'Creating [dbo].[spI_PlazaXPlazaIEEPO]'
GO
IF OBJECT_ID(N'[dbo].[spI_PlazaXPlazaIEEPO]', 'P') IS NULL
EXEC sp_executesql N'--CREO: Ramón Olivares      
-- Fecha Última Modificación: 30/11/2012      
-- Descripcion: Inserción de una plaza atráves de un SP.  
      
CREATE PROCEDURE [dbo].[spI_PlazaXPlazaIEEPO]       
(  
 @plazaIEEPO varchar(21),  
 @desdePlaza varchar(10),  
 @hastaPlaza varchar(10),
 @movimiento varchar(10),
 @idNivel int,  
 @idStatus int,  
 @idTipo int,  
 @idNodo int,
 @idUsuario int  
)      
      
AS  
       
 Declare @partida int  
 Declare @unidad int    
 Declare @subunidad int  
 Declare @categoria varchar(6)  
 Declare @horas float  
 Declare @diagonal varchar(6)  
 Declare @noplaza as int  
 Declare @idplaza as int  
  
 set @partida = cast(''11'' + substring(@PlazaIEEPO,1,2) as int)  
 set @unidad = cast(substring(@PlazaIEEPO,3,2) as int)  
 set @subunidad = cast(substring(@PlazaIEEPO,5,2) as int)  
 Select @categoria = Id_Tabulador_SE_Cat_Puesto From TTabulador_SE_Cat_Puesto where categoria like ''%''+ substring(@PlazaIEEPO,7,6) + ''%''  
 set @horas = cast(substring(@PlazaIEEPO,13,3) as float)  
 if (@horas > 0) set @horas = @horas / 10  
 set @diagonal = substring(@PlazaIEEPO,16,6)  
   
 select @idplaza = max(id_plaza) + 1 from plazas  
 select @noplaza = contador from ultimocontrol where tabla=''Plazas''  
 set @idplaza=@noplaza  
 
 Update ultimocontrol set contador = contador+1 where tabla=''Plazas''  
 Insert Into Plazas(Id_Plaza,Num_Plaza,Id_EmpProp,Id_Emp,Id_EmpAnt,FechaCreacion,FechaVencimiento,DineroPresupuestado,DineroPagado,HorasPresupuestadas,HorasPagadas,Orden) Select @idplaza,@noplaza,0,0,0,@desdePlaza,@hastaPlaza,0,0,0,0,0  
 Insert Into HPartida(Id_Plaza,Partida,Fecha,Id_User,Movimiento) Select @idplaza,@partida,@desdePlaza,@idUsuario,@movimiento  
 Insert Into HUnidad(Id_Plaza,Unidad,Fecha,Id_User,Movimiento) Select @idplaza,@unidad,@desdePlaza,@idUsuario,@movimiento  
 Insert Into HSubUnidad(Id_Plaza,SubUnidad,Fecha,Id_User,Movimiento) Select @idplaza,@subunidad,@desdePlaza,@idUsuario,@movimiento  
 --Insert Into HTabulador_SE_Cat_Puesto(Id_Plaza,Id_Rel,Fecha,Id_User,Movimiento) Select @idplaza,@categoria,@desdePlaza,@idUsuario,@movimiento  
 Insert Into HHoras(Id_Plaza,horas,Fecha,Id_User,Movimiento) Select @idplaza,@horas,@desdePlaza,@idUsuario,@movimiento  
 Insert Into HDiagonal(Id_Plaza,Diagonal,Fecha,Id_User,Movimiento) Select @idplaza,@diagonal,@desdePlaza,@idUsuario,@movimiento  
 Insert Into htabulador_se_nivel_pago(Id_Plaza,id_rel,Fecha,Id_User,Movimiento) Select @idplaza,@idNivel,@desdePlaza,@idUsuario,@movimiento  
 Insert Into hnivelplazas(Id_Plaza,id_rel,Fecha,Id_User,Movimiento) Select @idplaza,0,@desdePlaza,@idUsuario,@movimiento  
 Insert Into hpuestosplazas(Id_Plaza,id_rel,Fecha,Id_User,Movimiento) Select @idplaza,0,@desdePlaza,@idUsuario,@movimiento  
 --Insert Into HPlazas(Id_plaza,Fecha,Id_TipoMovPlazas,Valor_IdCampo,Id_User,Movimiento) select @idplaza,@desdePlaza,1,@idTipo,@idUsuario,@movimiento
 --Insert Into HPlazas(Id_plaza,Fecha,Id_TipoMovPlazas,Valor_IdCampo,Id_User,Movimiento) select @idplaza,@desdePlaza,2,@idStatus,@idUsuario,@movimiento  
 Insert Into HTipo_Seg_Social(Id_Plaza,id_rel,Fecha,Id_User,Movimiento) Select @idplaza,0,@desdePlaza,@idUsuario,@movimiento  
 --insert into plazaempleados(Id_Emp,Id_plaza,Fecha,Id_User,Movimiento,id_nodo,Documentos,id_plazaanterior) select 0,@idplaza,@desdePlaza,@idUsuario,@movimiento,@idNodo,'''',0

'
GO

GO
PRINT N'Creating [dbo].[SP_SacaHistPagosDedu]'
GO
IF OBJECT_ID(N'[dbo].[SP_SacaHistPagosDedu]', 'P') IS NULL
EXEC sp_executesql N'
CREATE PROCEDURE [dbo].[SP_SacaHistPagosDedu]      
(      
@idplaza int,      
@Idemp int,      
@idperiodo int,
@refere int         
)      
AS      
SET NOCOUNT ON      
 SELECT      
   a.id_concepto, a.Resultado as Clave,convert(varchar(12), cast(b.Pesos as money), 1) AS Importe,a.descripcion, b.Id_Emp, Cast(g.año as varchar(4)) + ''''+Right(''00''+Cast(g.numero as varchar(2)),2) as Periodo, b.id_plaza,Desde+'' ''+Hasta as Desde_Hasta      
      
 FROM      
   Conceptos a       
   INNER JOIN ConceptoRelEmpresa c      
   ON a.id_concepto = c.id_concepto       
   INNER JOIN      
            (SELECT     Id_Emp, id_concepto, Id_Periodo, id_plaza, Pesos,Desde,Hasta, isnull(Id_Referencia,0)  Id_Referencia      
            FROM       HistPagos      
            UNION ALL      
            SELECT     Id_Emp, id_concepto, Id_Periodo, id_plaza, Pesos,Desde,Hasta, isnull(Id_Referencia,0)  Id_Referencia     
            FROM       Nom_histpagos)       
   AS b      
   ON a.id_concepto = b.id_concepto    
   inner join Empleados E    
   on e.id_emp = b.id_emp    
   inner join Plazas F    
   on F.id_plaza = b.id_plaza    
   Inner Join Calennomina G  
   on b.Id_Periodo=G.Id_periodo     
 WHERE      
   b.Id_Emp =@idemp and f.id_plaza=@idplaza AND b.id_periodo=@idperiodo and (c.id_razonsocial = 5) AND (a.Tipo = 2) AND (a.En_ListaRaya = 1)  and b.Id_Referencia = @refere     
 ORDER BY 
   DESDE, HASTA, A.descripcion      
         
SET NOCOUNT OFF      

'
GO

GO
PRINT N'Creating [dbo].[sp_DiferenciasEmpleadosQnas]'
GO
IF OBJECT_ID(N'[dbo].[sp_DiferenciasEmpleadosQnas]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		Noe ramirez Ramos
-- Create date: 2013/12/03
-- Description:	Diferencias de empleados en dos periodos
-- =============================================
CREATE PROCEDURE [dbo].[sp_DiferenciasEmpleadosQnas]
@periodoini int, @periodofin int, @tipoCons int
WITH EXEC AS CALLER
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here

if exists(select * from sysobjects where name like ''TN_EmpleadosFaltanOmit'')
  drop table TN_EmpleadosFaltanOmit
if(@tipoCons = 1)
  begin
    -- en seleccionado no en otro
    if (exists(select 1 from histpagos where Id_Periodo = @periodofin))
      begin
        select h.Id_Emp, h.id_plaza, e.RFC, p.PlazaIEEPO into TN_EmpleadosFaltanOmit from HistPagos h 
        inner join Empleados e on e.Id_Emp = h.Id_Emp
        inner join PlazaIEEPO p on p.Id_plaza = h.id_plaza
        where h.Id_Periodo = @periodoini
        and not exists(
          select 1 from histpagos hi where hi.Id_Periodo  = @periodofin and hi.Id_Emp = h.id_emp and hi.id_plaza = h.id_plaza
        )
        group by h.Id_Emp, h.id_plaza, e.RFC, p.PlazaIEEPO
      end
    else
      begin
        select h.Id_Emp, h.id_plaza, e.RFC, p.PlazaIEEPO into TN_EmpleadosFaltanOmit from HistPagos h 
        inner join Empleados e on e.Id_Emp = h.Id_Emp
        inner join PlazaIEEPO p on p.Id_plaza = h.id_plaza
        where h.Id_Periodo = @periodoini
        and not exists(
          select 1 from nom_histpagos hi where hi.Id_Periodo  = @periodofin and hi.Id_Emp = h.id_emp and hi.id_plaza = h.id_plaza
        )
        group by h.Id_Emp, h.id_plaza, e.RFC, p.PlazaIEEPO
      end
  end
-- en en otro no en seleccionado
if (@tipoCons = 2)
begin
  if (exists(select 1 from histpagos where Id_Periodo = @periodofin))
    begin
      select h.Id_Emp, h.id_plaza, e.RFC, p.PlazaIEEPO into TN_EmpleadosFaltanOmit from HistPagos h 
      inner join Empleados e on e.Id_Emp = h.Id_Emp
      inner join PlazaIEEPO p on p.Id_plaza = h.id_plaza
      where h.Id_Periodo = @periodofin
      and not exists(
        select 1 from histpagos hi where hi.Id_Periodo  = @periodoini and hi.Id_Emp = h.id_emp and hi.id_plaza = h.id_plaza
      )
      group by h.Id_Emp, h.id_plaza, e.RFC, p.PlazaIEEPO
    end
  else
    begin
      select h.Id_Emp, h.id_plaza, e.RFC, p.PlazaIEEPO into TN_EmpleadosFaltanOmit from nom_HistPagos h 
      inner join Empleados e on e.Id_Emp = h.Id_Emp
      inner join PlazaIEEPO p on p.Id_plaza = h.id_plaza
      where h.Id_Periodo = @periodofin
      and not exists(
        select 1 from histpagos hi where hi.Id_Periodo  = @periodoini and hi.Id_Emp = h.id_emp and hi.id_plaza = h.id_plaza
      )
      group by h.Id_Emp, h.id_plaza, e.RFC, p.PlazaIEEPO
    end
end
select * from TN_EmpleadosFaltanOmit

END'
GO

GO
PRINT N'Creating [dbo].[SP_SacaEmpleados]'
GO
IF OBJECT_ID(N'[dbo].[SP_SacaEmpleados]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[SP_SacaEmpleados]            
(            
 @PlazaIEEPO varchar(21)     
)            
AS            
SET NOCOUNT ON    
declare @fecha datetime      
declare @id_plaza int  
  /*            
BEGIN              
  */            
      
Select @id_plaza = id_plaza from plazaieepo where Plazaieepo = @PlazaIEEPO  
  
/* plaza, categoria, centro de trabajo(nodo), UD, status, motivo, ***desde***,***hasta***, rfc, nivel educativo, submodelo */  
  
select id_emp,id_plaza,fecha,identity(int,1,1) as Autonumerico into #tablaAutonumerico from plazaempleados where id_plaza = @id_plaza   
group by id_emp,id_plaza,fecha order by id_plaza,fecha   
  
Select @PlazaIEEPO as PlazaIeepo,a.fecha as Desde, b.fecha as hasta,c.rfc as Filiacion from (#tablaAutonumerico a left join #tablaAutonumerico b  
on a.autonumerico=b.autonumerico-1  )  
left join Empleados c on c.id_emp = a.id_emp  
Where (a.id_emp=b.id_emp or b.id_emp=0) and a.id_emp<>0 and a.id_plaza = @id_plaza  
      
/*            
 END            
*/            
            
SET NOCOUNT OFF  

'
GO

GO
PRINT N'Creating [dbo].[spf_ReanudasconBajas]'
GO
IF OBJECT_ID(N'[dbo].[spf_ReanudasconBajas]', 'P') IS NULL
EXEC sp_executesql N'
CREATE PROCEDURE [dbo].[spf_ReanudasconBajas] (@idEmpleado AS INT, @idPlaza AS INT, @desde AS DATETIME, @id_documento AS INT, @accion AS BIT)
AS
BEGIN
	DECLARE @idEmpleado_loc AS INT = @idEmpleado
	DECLARE @idPlaza_loc AS INT = @idPlaza
	DECLARE @desde_loc AS DATETIME = @desde
	DECLARE @id_documento_loc AS INT = @id_documento
	DECLARE @accion_loc AS BIT = @accion
	DECLARE @id_periodo AS INT
	DECLARE @descripcion AS VARCHAR(max)
	DECLARE @id_detalle AS INT
	DECLARE @retro AS INT
	DECLARE @activo INT

	--  declare @mens as varchar(max)
	-- En la consulta contemplamos las reanudas admon y docentes y las licencias excepto las 44 y 48 q esas si se les paga en la lic.                  
	SET @id_periodo = (
			SELECT id_periodo
			FROM fup_informacion_documentos
			WHERE id_documento = @id_documento_loc
			)
	SET @retro = (
			SELECT count(b.id_detalle)
			FROM fup_documentos a
			INNER JOIN fup_documento_Detalle b
				ON a.id_documento = b.id_documento
			INNER JOIN fup_motivomovimiento c
				ON b.id_motivomovimiento = c.id_motivomovimiento
			INNER JOIN fup_tipomovimiento e
				ON c.id_tipomovimiento = e.id_tipomovimiento
			INNER JOIN fup_informacion_documentos d
				ON a.id_documento = d.id_documento
			WHERE d.id_periodo = @id_periodo
				AND e.clave IN (''15'', ''07'', ''14'', ''06'')
				AND c.clave NOT IN (''44'', ''48'')
				AND a.id_emp = CAST(@idEmpleado_loc AS VARCHAR(max))
				AND id_plaza = CAST(@idPlaza_loc AS VARCHAR(10))
				--and dbo.fechaToAnioQuincena(b.fechaini) = dbo.fechaToAnioQuincena(@desde_loc) -- se solicitó no validara efectos, solo que fuese en el mismo periodo    
				AND a.id_estatus = 2
			)
	SET @id_Detalle = (
			SELECT rc.id_detalle
			FROM fup_documentos a
			INNER JOIN fup_documento_Detalle b
				ON a.id_documento = b.id_documento
			INNER JOIN fup_motivomovimiento c
				ON b.id_motivomovimiento = c.id_motivomovimiento
			INNER JOIN fup_tipomovimiento e
				ON c.id_tipomovimiento = e.id_tipomovimiento
			INNER JOIN fup_informacion_documentos d
				ON a.id_documento = d.id_documento
			INNER JOIN Recalculo_Calculo rc
				ON b.Id_Detalle = rc.Id_Detalle
			WHERE d.id_periodo = @id_periodo
				AND e.clave IN (''15'', ''07'', ''14'', ''06'')
				AND c.clave NOT IN (''44'', ''48'')
				AND a.id_emp = CAST(@idEmpleado_loc AS VARCHAR(max))
				AND id_plaza = CAST(@idPlaza_loc AS VARCHAR(10))
				--and dbo.fechaToAnioQuincena(b.fechaini) = dbo.fechaToAnioQuincena(@desde_loc) -- se solicitó no validara efectos, solo que fuese en el mismo periodo    
				AND a.id_estatus = 2
			)
	SET @descripcion = (
			SELECT descripcion
			FROM recalculo_calculo
			WHERE id_detalle = @id_detalle
			)

	--Modificacion para revisar empalmes de baja con reanuda
	DECLARE @flg_empalme BIT = 0;

	IF @accion_loc = 0
	BEGIN
		IF (@retro <> 0)
			IF CHARINDEX(''#'', @descripcion) = 0
				UPDATE recalculo_calculo
				SET activo = 0, ExcluirCancelados = 1, descripcion = (''Reversa a movimiento, fecha: '' + cast(CONVERT(VARCHAR(10), GETDATE(), 120) AS VARCHAR(max)) + ''#'' + @descripcion)
				WHERE id_detalle = @id_detalle

		SET @flg_empalme = CASE 
				WHEN EXISTS (
						SELECT TOP 1 1
						FROM hplazas
						WHERE id_plaza = @idPlaza_loc
							AND fecha = @desde_loc
							AND Valor_IdCampo = 1
							AND Id_TipoMovPlazas = 2
						)
					THEN 1
				ELSE 0
				END;

		IF (@flg_empalme = 1 and not @id_detalle is null)
		BEGIN
			INSERT INTO empalme_plazaempleados (Id_Emp, Id_plaza, Fecha, Id_User, Movimiento, id_nodo, Documentos, Id, id_plazaanterior, esHistoria, desliguePlaza, tipoHistoria, id_detalle)
			SELECT TOP 1 @idEmpleado_loc, Id_plaza, @desde, Id_User, Movimiento, id_nodo, Documentos, Id, id_plazaanterior, esHistoria, desliguePlaza, tipoHistoria, @id_documento id_detalle
			FROM plazaempleados
			WHERE id_plaza = @idPlaza_loc
				AND fecha <= @desde_loc
			ORDER BY fecha DESC

			INSERT INTO Empalme_HPlazas (Id_plaza, Fecha, Id_TipoMovPlazas, Valor_IdCampo, Id_User, Movimiento, Id, esHistoria, id_detalle)
			SELECT Id_plaza, Fecha, Id_TipoMovPlazas, Valor_IdCampo, Id_User, Movimiento, Id, esHistoria, @id_documento id_documento
			FROM hplazas
			WHERE id_plaza = @idPlaza_loc
				AND fecha = @desde_loc
			ORDER BY fecha DESC, Id_TipoMovPlazas DESC

			DELETE
			FROM hplazas
			WHERE id_plaza = @idPlaza_loc
				AND fecha = @desde_loc
		END
	END
	ELSE -- Por si truena lo regresamos en fa                    
	BEGIN
		--set @mens = ''''                  
		--set @mens = (select substring(@descripcion,(CHARINDEX(''#'',@descripcion)+1),len(@descripcion))descripcion from recalculo_calculo where id_detalle = @id_Detalle)                  
		--print @mens                  
		UPDATE recalculo_calculo
		SET activo = 1, ExcluirCancelados = 0, descripcion = substring(@descripcion, (CHARINDEX(''#'', @descripcion) + 1), len(@descripcion))
		WHERE id_detalle = @id_Detalle

		SET @flg_empalme = CASE 
				WHEN EXISTS (
						SELECT TOP 1 1
						FROM empalme_hplazas
						WHERE id_detalle = @id_detalle
						)
					THEN 1
				ELSE 0
				END;

		IF (@flg_empalme = 1)
		BEGIN
			DELETE
			FROM Empalme_PlazaEmpleados
			WHERE id_detalle = @id_documento

			INSERT INTO HPlazas (Id_plaza, Fecha, Id_TipoMovPlazas, Valor_IdCampo, Id_User, Movimiento, esHistoria)
			SELECT Id_plaza, Fecha, Id_TipoMovPlazas, Valor_IdCampo, Id_User, Movimiento, esHistoria
			FROM Empalme_HPlazas
			WHERE id_detalle = @id_documento

			DELETE
			FROM Empalme_HPlazas
			WHERE id_detalle = @id_documento
		END
	END
END
'
GO

GO
PRINT N'Creating [dbo].[SP_SacaHistPagosOtro]'
GO
IF OBJECT_ID(N'[dbo].[SP_SacaHistPagosOtro]', 'P') IS NULL
EXEC sp_executesql N'
CREATE PROCEDURE [dbo].[SP_SacaHistPagosOtro]      
(      
@idplaza int,      
@Idemp int,      
@idperiodo int,
@refere int         
)      
AS      
SET NOCOUNT ON      
 SELECT      
   a.id_concepto,a.Resultado as Clave, a.descripcion, b.Id_Emp, b.Id_Periodo, Cast(g.año as varchar(4)) + ''''+Right(''00''+Cast(g.numero as varchar(2)),2) as Periodo,Desde+'' ''+Hasta as Desde_Hasta, convert(varchar(12), cast(b.Pesos as money), 1) AS Importe      
      
 FROM      
   Conceptos a       
   INNER JOIN ConceptoRelEmpresa c      
   ON a.id_concepto = c.id_concepto       
   INNER JOIN      
            (SELECT     Id_Emp, id_concepto, Id_Periodo, id_plaza, Pesos ,Desde,Hasta, isnull(Id_Referencia,0)  Id_Referencia      
            FROM       HistPagos      
            UNION ALL      
            SELECT     Id_Emp, id_concepto, Id_Periodo, id_plaza, Pesos ,Desde,Hasta, isnull(Id_Referencia,0)  Id_Referencia      
            FROM       Nom_histpagos)       
   AS b      
   ON a.id_concepto = b.id_concepto      
   inner join Empleados E    
   on E.id_emp = b.id_emp    
   inner join Plazas F    
   on F.id_plaza = b.id_plaza    
   Inner Join Calennomina G  
   on b.Id_Periodo=G.Id_periodo     
 WHERE      
   b.id_emp=@idemp and f.id_plaza=@idplaza AND b.id_periodo=@idperiodo and (c.id_razonsocial = 5) AND (a.Tipo = 3) AND (a.En_ListaRaya = 1) and b.Id_Referencia = @refere
 ORDER BY      
   A.descripcion      
         
SET NOCOUNT OFF      

'
GO

GO
PRINT N'Creating [sirei].[getBecarios]'
GO
IF OBJECT_ID(N'[sirei].[getBecarios]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [sirei].[getBecarios]  
		@opcion int = 1, @usuario char(15)  
		WITH EXEC AS CALLER  
		AS  
		BEGIN    
		  SET NOCOUNT ON;    
		  SELECT    
			folio    
		   ,treg.Descrip AS des_region    
		   ,t.Descr AS des_municipio    
		   ,t1.Descr AS des_localidad    
		   ,nei.descripcion AS des_niveleducativo    
		   ,curp    
		   ,rfc    
		   ,nombre    
		   ,primer_apellido    
		   ,segundo_apellido    
		   ,CASE    
			  WHEN b.sexo != ''M'' THEN ''HOMBRE''    
			  ELSE ''MUJER''    
			END AS descrip_sexo    
		   ,edad    
		   ,l.lengua AS des_lengua    
		   ,variante_lengua    
		   ,CASE    
			  WHEN COALESCE(b.habla, 0) > 0 THEN ''SI''    
			  ELSE ''NO''    
			END AS descrip_habla    
		   ,CASE    
			  WHEN COALESCE(b.comprende, 0) > 0 THEN ''SI''    
			  ELSE ''NO''    
			END AS descrip_comprende    
		   ,CASE    
			  WHEN COALESCE(b.escribe, 0) > 0 THEN ''SI''    
			  ELSE ''NO''    
			END AS descrip_escribe    
		   ,CASE    
			  WHEN COALESCE(b.lee, 0) > 0 THEN ''SI''    
			  ELSE ''NO''    
			END AS descrip_lee    
		   ,round(promedio,1,1) AS promedio    
		   ,CASE    
			  WHEN COALESCE(b.acta_nacimiento, 0) > 0 THEN ''SI''    
			  ELSE ''NO''    
			END AS descrip_acta_nacimiento    
		   ,CASE    
			  WHEN COALESCE(b.comprobante_de_domicilio, 0) > 0 THEN ''SI''    
			  ELSE ''NO''    
			END AS descrip_comprobante_de_domicilio    
		   ,CASE    
			  WHEN COALESCE(b.certificado_primaria, 0) > 0 THEN ''SI''    
			  ELSE ''NO''    
			END AS descrip_certificado_primaria    
		   ,CASE    
			  WHEN COALESCE(b.certificado_secundaria, 0) > 0 THEN ''SI''    
			  ELSE ''NO''    
			END AS descrip_certificado_secundaria    
		   ,CASE    
			  WHEN COALESCE(b.certificado_media_superior, 0) > 0 THEN ''SI''    
			  ELSE ''NO''    
			END AS descrip_certificado_media_superior    
		   ,CASE    
			  WHEN COALESCE(b.credencial_elector, 0) > 0 THEN ''SI''    
			  ELSE ''NO''    
			END AS descrip_credencial_elector    
		   ,CASE    
			  WHEN COALESCE(b.curp_doc, 0) > 0 THEN ''SI''    
			  ELSE ''NO''    
			END AS descrip_curp_doc    
		   ,CASE    
			  WHEN COALESCE(b.certificado_medico, 0) > 0 THEN ''SI''    
			  ELSE ''NO''    
			END AS descrip_certificado_medico    
		   ,CASE    
			  WHEN COALESCE(b.constancia_origen_vecindad, 0) > 0 THEN ''SI''    
			  ELSE ''NO''    
			END AS descrip_constancia_origen_vecindad    
		   ,CASE    
			  WHEN COALESCE(b.antecedentes_penales, 0) > 0 THEN ''SI''    
			  ELSE ''NO''    
			END AS descrip_antecedentes_penales    
			,CASE    
			  WHEN COALESCE(b.cumple, 0) > 0 THEN ''SI''    
			  ELSE ''NO''    
			END AS descrip_cumple    
		   ,CASE    
			  WHEN COALESCE(b.fotos, 0) > 0 THEN ''SI''    
			  ELSE ''NO''    
			END AS descrip_fotos    
		   ,CASE    
			  WHEN COALESCE(b.forma, 0) > 0 THEN ''SI''    
			  ELSE ''NO''    
			END AS descrip_forma    
		   ,acta_nacimiento    
		   ,comprobante_de_domicilio    
		   ,certificado_primaria    
		   ,certificado_secundaria    
		   ,certificado_media_superior    
		   ,credencial_elector    
		   ,curp_doc    
		   ,certificado_medico    
		   ,constancia_origen_vecindad    
		   ,antecedentes_penales    
		   ,cumple    
		   ,observaciones    
		   ,usuario    
		   ,fecha_registro    
		   ,id    
		   ,b.id_region    
		   ,b.id_municipio    
		   ,b.id_localidad    
		   ,id_niveleducativo    
		   ,sexo    
		   ,b.id_lengua    
		   ,habla    
		   ,comprende    
		   ,escribe    
		   ,lee    
		   ,fotos    
		   ,forma    
		  --  INTO #tbl    
		  FROM ieepo.sirei.becarios b    
		  INNER JOIN TCT_Region treg    
			ON b.id_region = treg.id_CT_Region    
		  INNER JOIN TCiudad t    
			ON t.Id_Region = b.id_region AND t.Id_Ciudad = b.id_municipio    
		  INNER JOIN TLocalidad t1    
			ON b.id_municipio = t1.id_ciudad AND b.id_localidad = t1.id_Localidad    
		  INNER JOIN ieepo.sirei.nivel_educativo_indigena nei    
			ON b.id_niveleducativo = nei.id_nivel    
		  INNER JOIN ieepo.sirei.lenguas l    
			ON b.id_lengua = l.id_lengua    
		  WHERE (    
			@usuario = ''admin'' AND (    
				(@opcion = 1) OR  (@opcion = 2 AND cumple = 1) OR (@opcion = 3 AND cumple = 0)    
			  )    
			)    
			OR (    
			  b.usuario = @usuario AND (  
		   (@opcion = 1) OR  (@opcion = 2 AND cumple = 1) OR (@opcion = 3 AND cumple = 0)    
		   )  
		   AND  @usuario != ''admin''      
			)    
		  ORDER BY b.id    
		END       '
GO

GO
PRINT N'Creating [dbo].[Pcptosemp]'
GO
IF OBJECT_ID(N'[dbo].[Pcptosemp]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[Pcptosemp]
		@_id_emp  int = 0, 
	    @_nanno int = 0,
	    @_nord int = 0
AS
BEGIN
	declare @id_emp  int = @_id_emp
	declare @nanno int = @_nanno 
	declare @nord int = @_nord 

    -- Insert statements for procedure here
	select a.categoria, b.id_plaza into #plzcat from TTabulador_SE_Cat_Puesto a join 
	HTabulador_SE_Cat_Puesto b on a.id_Tabulador_SE_Cat_Puesto = b.id_rel  
	where b.Id_plaza in (select distinct id_plaza from plazaempleados where Id_Emp = @id_emp)
	  
	select row_number()over (order by id_plaza desc) as contador, a.id_Tabulador_SE_Cat_Puesto, a.TModelo_SE_id_Modelo_SE , b.categoria, b.id_plaza into #plzcat2  
	from TTabulador_SE_Cat_Puesto a join #plzcat b 
	on a.categoria = b.categoria


	declare @elperiodo as int = (select id_periodo from CalenNomina where Id_cia = 1 and Año=@nanno and Numero = @nord and Parcial = 0) 

	declare @registro int = (select COUNT(*)from #plzcat2)
	declare @modelo int = 0
	declare @llevo int =1
	declare @id_plaza int = 0

	if @registro > 0
	begin

	CREATE TABLE #TABLA_PASO (id_concepto int, pesos float, C_costo varchar(2))
	 while @registro >= @llevo
	 begin
	   set @modelo = (select TModelo_SE_id_Modelo_SE from #plzcat2 where contador = @llevo)
	   set @id_plaza = (select id_plaza from #plzcat2 where contador = @llevo)
	  
		if  @modelo <> 7    
		 begin
		 insert into #TABLA_PASO
		  select distinct id_concepto, pesos, cast(C_costo as varchar (2)) collate SQL_Latin1_General_CP1_CI_AS c_costo  from histpagosp 
		   where id_plaza = @id_plaza  and id_emp = @Id_emp and id_periodo <> @elperiodo and
		   id_concepto in (1547, 1552, 2514, 1553, 2407, 2520, 1305, 1530, 1308, 1555, 1310, 1311, 1563, 1312, 2387,
		   1441, 1313, 1314, 1315, 1316, 1317, 1556, 2456, 1323, 1324, 1325, 1326, 1327, 1328, 2037,
		   2071, 2331, 2382, 1333, 1334, 1335, 1336, 2436, 1337, 1338, 1339, 1340, 1341, 1342, 1343,
		   1344, 1345, 2389, 1346, 1347, 1348, 1349, 1350, 1351, 1716, 1352, 1353, 1454, 1357, 1557,
		   1558, 1370, 1560, 2361, 1380, 1381, 2396, 1382, 1383, 1384, 2452, 2441, 1385, 1386, 1387,
		   2303, 2392, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1501, 1396, 1397, 1502, 1398,
		   1399, 1503, 1504, 1505, 1506, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414,
		   1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 2442, 1424, 1425, 1426, 1427, 1428,
		   1717, 1429, 1430, 1561, 1493)

		   insert into #TABLA_PASO
		  select distinct id_concepto, pesos, cast(cc as varchar (2)) collate SQL_Latin1_General_CP1_CI_AS c_costo  from nom_histpagos 
		   where id_plaza = @id_plaza  and id_emp = @Id_emp and id_periodo <> @elperiodo and
		   id_concepto in (1547, 1552, 2514, 1553, 2407, 2520, 1305, 1530, 1308, 1555, 1310, 1311, 1563, 1312, 2387,
		   1441, 1313, 1314, 1315, 1316, 1317, 1556, 2456, 1323, 1324, 1325, 1326, 1327, 1328, 2037,
		   2071, 2331, 2382, 1333, 1334, 1335, 1336, 2436, 1337, 1338, 1339, 1340, 1341, 1342, 1343,
		   1344, 1345, 2389, 1346, 1347, 1348, 1349, 1350, 1351, 1716, 1352, 1353, 1454, 1357, 1557,
		   1558, 1370, 1560, 2361, 1380, 1381, 2396, 1382, 1383, 1384, 2452, 2441, 1385, 1386, 1387,
		   2303, 2392, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1501, 1396, 1397, 1502, 1398,
		   1399, 1503, 1504, 1505, 1506, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414,
		   1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 2442, 1424, 1425, 1426, 1427, 1428,
		   1717, 1429, 1430, 1561, 1493)	   
		 end
		else
		 begin
		  insert into #TABLA_PASO
		  select distinct id_concepto, pesos, cast(C_costo as varchar (2)) collate SQL_Latin1_General_CP1_CI_AS c_costo   from histpagosp 
		  where id_plaza = @id_plaza  and id_emp = @Id_emp and id_periodo = @elperiodo and
		  id_concepto in (1511,1564,1565,1518,1566,1568,1588,1589,1522,2510,2515,1512,1509,
		  1513,2507,1516,2316,2379,2465,2407,2520,2467,2448,2409,2408,2474,3060,3061,3062,
		  3075,3076,3077,2484,2485,2486,2487,2493,2494,2475,2476,2478,1514,1515,1572,1573,
		  2495,1574,1441,2387,1575,1576,1580,1581,1582,2328,2410,2482,2481,2458,2459,2456,1556)	
		  
		  insert into #TABLA_PASO
		  select distinct id_concepto, pesos, cast(cc as varchar (2)) collate SQL_Latin1_General_CP1_CI_AS c_costo  from nom_histpagos 
		   where id_plaza = @id_plaza  and id_emp = @Id_emp and id_periodo = @elperiodo and
		   id_concepto in (1511,1564,1565,1518,1566,1568,1588,1589,1522,2510,2515,1512,1509,
		   1513,2507,1516,2316,2379,2465,2407,2520,2467,2448,2409,2408,2474,3060,3061,3062,
		   3075,3076,3077,2484,2485,2486,2487,2493,2494,2475,2476,2478,1514,1515,1572,1573,
		   2495,1574,1441,2387,1575,1576,1580,1581,1582,2328,2410,2482,2481,2458,2459,2456,1556)	
		 end
	   set @llevo = @llevo + 1     
	 end

	 select  distinct case  when a.id_concepto  =  1328
		 then cast(b.C_costo  as varchar (2)) collate SQL_Latin1_General_CP1_CI_AS 
	   else Resultado 
	   end
	   as  CONCEPTO, a.descripcion DESCRIPCION, b.pesos PESOS from conceptos a 
	inner join #TABLA_PASO b on a.id_concepto = b.id_concepto 

end

END
'
GO

GO
PRINT N'Creating [sirei].[getBecario]'
GO
IF OBJECT_ID(N'[sirei].[getBecario]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [sirei].[getBecario]  
@idBecario int  
WITH EXEC AS CALLER  
AS  
BEGIN  
 SET NOCOUNT ON ;  
   
--DECLARE @opcion INT = 1;  
  
      SELECT folio,  
      b.nombre + '' '' + primer_apellido + '' '' + segundo_apellido AS nombre,  
      credencial_elector,acta_nacimiento,curp_doc,comprobante_de_domicilio,  
      certificado_primaria,certificado_secundaria,certificado_media_superior,  
      certificado_medico,constancia_origen_vecindad,antecedentes_penales,su.nombre AS recibe,  
      GETDATE() AS fecha_impresion, b.fotos, b.forma  
   FROM ieepo.sirei.becarios b  
      INNER JOIN ieepo.sirei.sys_usuarios su ON b.usuario = su.usuario  
    WHERE b.id = @idBecario  	 
END 
'
GO

GO
PRINT N'Creating [dbo].[SIGP_Tabulador_Sueldos2]'
GO
IF OBJECT_ID(N'[dbo].[SIGP_Tabulador_Sueldos2]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================    
-- Author:  <Author,,Name>    
-- Create date: 15/11/2018    
-- Description: Tabulador de sueldos para FONE    
-- =============================================    
CREATE PROCEDURE [dbo].[SIGP_Tabulador_Sueldos2]    
     
AS    
BEGIN    
 -- SET NOCOUNT ON added to prevent extra result sets from    
 -- interfering with SELECT statements.    
 SET NOCOUNT ON;    
     
   ------------------------------------------------------------------------------------------------------------------    
   ------------------------------------------------------------------------------------------------------------------    
   ----------------------------------------         UPN     ---------------------------------------------------------    
   ------------------------------------------------------------------------------------------------------------------    
   ------------------------------------------------------------------------------------------------------------------    
    
   select ROW_NUMBER() OVER(PARTITION BY tt.id_Tabulador_SE_Cat_Puesto,resultado,id_Tabulador_SE_Zona,id_Tabulador_SE_Nivel_Pago ORDER BY tt.id_Tabulador_SE_Cat_Puesto,resultado,id_Tabulador_SE_Zona,id_Tabulador_SE_Nivel_Pago,fecha ASC) AS Row#,    
   tt.id_Tabulador_SE_Cat_Puesto,tt.categoria,id_Tabulador_SE_Zona,id_Tabulador_SE_Nivel_Pago,c.resultado,c.tipo,fecha,max(valor)Valor--,v.*    
   into -- drop table    
   #cat_pue    
   --select *     
    FROM valoresmatriz8 v with(nolock)     
    join TTabulador_SE_Cat_Puesto tt with(nolock) on tt.id_Tabulador_SE_Cat_Puesto=v.id_Tabulador_SE_Cat_Puesto    
    join Conceptos c with(nolock) on c.id_concepto=v.id_concepto    
    inner join TModelo_SE Modelo with(nolock) on tt.TModelo_SE_Id_Modelo_SE = Modelo.id_modelo_SE      
    where tt.categoria not like ''%ET%'' and tt.categoria not like ''%EH%'' and tt.categoria not like ''%AB%'' and modelo.id_modelo=7     
--and categoria='' E9007''    
   group by tt.id_Tabulador_SE_Cat_Puesto,tt.categoria,c.resultado,c.tipo,Fecha,id_Tabulador_SE_Zona,id_Tabulador_SE_Nivel_Pago    
--order by tt.id_Tabulador_SE_Cat_Puesto,id_Tabulador_SE_Zona,id_Tabulador_SE_Nivel_Pago    
    
    
   select rtrim(ltrim(c1.categoria)) categoria,c1.resultado concepto,c1.id_Tabulador_SE_Zona,c1.id_Tabulador_SE_Nivel_Pago,case when c1.tipo in (1,3) then ''P'' else '''' end tipo,dbo.fechaToAnioQuincena(c1.fecha) desde,    
   --isnull(    
   dbo.fechaToAnioQuincena(c2.Fecha-1)    
   --,''999999'' )    
   hasta,c1.Valor    
   into --drop table     
   #UPN    
   from #cat_pue c1    
   left join #cat_pue c2     
   on c1.id_Tabulador_SE_Cat_Puesto=c2.id_Tabulador_SE_Cat_Puesto and c1.resultado = c2.resultado and c1.Tipo=c2.tipo and c1.row#=c2.Row#-1    
   and c1.id_Tabulador_SE_Zona= c2.id_Tabulador_SE_Zona and c1.id_Tabulador_SE_Nivel_Pago=c2.id_Tabulador_SE_Nivel_Pago    
   order by c1.id_Tabulador_SE_Cat_Puesto,c1.resultado,c1.fecha    
    
   ------------------------------------------------------------------------------------------------------------------    
   ------------------------------------------------------------------------------------------------------------------    
   ----------------------------------------        MANDOS   ---------------------------------------------------------    
   ------------------------------------------------------------------------------------------------------------------    
   ------------------------------------------------------------------------------------------------------------------    
   select     
   tt.id_Tabulador_SE_Cat_Puesto,tt.categoria,c.resultado,c.tipo,id_Tabulador_SE_Zona,id_Tabulador_SE_Nivel_Pago,fecha,max(valor)Valor--,v.*    
   into -- drop table    
   #cat_pue_MM    
   FROM (select * from valoresmatriz4 with(nolock) union all select * from valoresmatriz5 with(nolock) ) v    
   join TTabulador_SE_Cat_Puesto tt with(nolock) on tt.id_Tabulador_SE_Cat_Puesto=v.id_Tabulador_SE_Cat_Puesto    
   join Conceptos c with(nolock) on c.id_concepto=v.id_concepto    
   inner join TModelo_SE Modelo with(nolock) on tt.TModelo_SE_Id_Modelo_SE = Modelo.id_modelo_SE      
   where tt.categoria not like ''%ET%'' and tt.categoria not like ''%EH%'' and tt.categoria not like ''%AB%'' and modelo.id_modelo=10     
   group by tt.id_Tabulador_SE_Cat_Puesto,tt.categoria,c.resultado,c.tipo,id_Tabulador_SE_Zona,id_Tabulador_SE_Nivel_Pago,Fecha    
    
   select * into -- drop table    
    #cat_pue_sueldos_base from #cat_pue_MM WHERE resultado in (''07'',''7a'',''7b'',''7c'',''7d'',''7e'',''bc'') and tipo = 1;    
   select *     
   into -- drop table     
   #cat_pue_otros from #cat_pue_MM WHERE resultado not in (''07'',''7a'',''7b'',''7c'',''7d'',''7e'',''bc'') and tipo = 1;    
    
   select ROW_NUMBER() OVER(PARTITION BY id_Tabulador_SE_Cat_Puesto,resultado,id_Tabulador_SE_Zona,id_Tabulador_SE_Nivel_Pago ORDER BY id_Tabulador_SE_Cat_Puesto,resultado,id_Tabulador_SE_Zona,id_Tabulador_SE_Nivel_Pago,fecha ASC) AS Row#,*     
   into  -- drop table     
   #cat_pue_MM_2     
   from (    
   select * from #cat_pue_sueldos_base    
   union all     
   select * from #cat_pue_otros    
   )a    
    
   select rtrim(ltrim(c1.categoria)) categoria,c1.resultado concepto,c1.id_Tabulador_SE_Zona,c1.id_Tabulador_SE_Nivel_Pago,case when c1.tipo in (1,3) then ''P'' else '''' end tipo,dbo.fechaToAnioQuincena(c1.fecha) desde,    
   --isnull(    
   dbo.fechaToAnioQuincena(c2.Fecha-1)    
   --,''999999'' )    
   hasta,c1.Valor    
   into --drop table     
   #MM    
   from #cat_pue_MM_2 c1    
   left join #cat_pue_MM_2 c2     
   on c1.id_Tabulador_SE_Cat_Puesto=c2.id_Tabulador_SE_Cat_Puesto and c1.resultado = c2.resultado and c1.Tipo=c2.tipo and c1.row#=c2.Row#-1    
   and c1.id_Tabulador_SE_Zona= c2.id_Tabulador_SE_Zona and c1.id_Tabulador_SE_Nivel_Pago=c2.id_Tabulador_SE_Nivel_Pago    
   order by c1.id_Tabulador_SE_Cat_Puesto,c1.resultado,c1.id_Tabulador_SE_Zona,c1.id_Tabulador_SE_Nivel_Pago,c1.fecha    
       
   ------------------------------------------------------------------------------------------------------------------    
   ------------------------------------------------------------------------------------------------------------------    
   ----------------------------------------        BASICA   ---------------------------------------------------------    
   ------------------------------------------------------------------------------------------------------------------    
   ------------------------------------------------------------------------------------------------------------------    
   select     
   tt.id_Tabulador_SE_Cat_Puesto,tt.categoria,c.resultado,c.tipo,id_Tabulador_SE_Zona,id_Tabulador_SE_Nivel_Pago,fecha,max(valor)Valor--,v.*    
   into -- drop table    
   #cat_pue_Ba    
    FROM (select * from valoresmatriz4 with(nolock) union all select * from valoresmatriz5 with(nolock) ) v    
    join TTabulador_SE_Cat_Puesto tt with(nolock) on tt.id_Tabulador_SE_Cat_Puesto=v.id_Tabulador_SE_Cat_Puesto    
    join Conceptos c with(nolock) on c.id_concepto=v.id_concepto    
    inner join TModelo_SE Modelo with(nolock) on tt.TModelo_SE_Id_Modelo_SE = Modelo.id_modelo_SE      
    where tt.categoria not like ''%ET%'' and tt.categoria not like ''%EH%''and tt.categoria not like ''%AB%'' and modelo.id_modelo not in (7,10 )    
   group by tt.id_Tabulador_SE_Cat_Puesto,tt.categoria,c.resultado,c.tipo,id_Tabulador_SE_Zona,id_Tabulador_SE_Nivel_Pago,Fecha    
    
   select * into -- drop table    
    #cat_pue_sueldos_base_ba from #cat_pue_Ba WHERE resultado in (''07'',''7a'',''7b'',''7c'',''7d'',''7e'',''bc'') and tipo = 3;    
   select *     
   into -- drop table     
   #cat_pue_otros_ba from #cat_pue_Ba WHERE resultado not in (''07'',''7a'',''7b'',''7c'',''7d'',''7e'',''bc'')and tipo = 1;    
    
   select ROW_NUMBER() OVER(PARTITION BY id_Tabulador_SE_Cat_Puesto,resultado,id_Tabulador_SE_Zona,id_Tabulador_SE_Nivel_Pago ORDER BY id_Tabulador_SE_Cat_Puesto,resultado,id_Tabulador_SE_Zona,id_Tabulador_SE_Nivel_Pago,fecha ASC) AS Row#,*     
   into  -- drop table    
   #cat_pue_Ba_2     
   from (    
   select * from #cat_pue_sueldos_base_ba    
   union all     
   select * from #cat_pue_otros_ba    
   )a    
    
   select rtrim(ltrim(c1.categoria)) categoria,c1.resultado concepto,c1.id_Tabulador_SE_Zona,c1.id_Tabulador_SE_Nivel_Pago,case when c1.tipo in (1,3) then ''P'' else '''' end tipo,dbo.fechaToAnioQuincena(c1.fecha) desde,    
   --isnull(    
   dbo.fechaToAnioQuincena(c2.Fecha-1)    
   --,''999999'' )    
   hasta,c1.Valor    
   into --drop table     
   #Ba    
   from #cat_pue_BA_2 c1    
   left join #cat_pue_Ba_2 c2     
   on c1.id_Tabulador_SE_Cat_Puesto=c2.id_Tabulador_SE_Cat_Puesto and c1.resultado = c2.resultado and c1.Tipo=c2.tipo and c1.row#=c2.Row#-1    
   and c1.id_Tabulador_SE_Zona= c2.id_Tabulador_SE_Zona and c1.id_Tabulador_SE_Nivel_Pago=c2.id_Tabulador_SE_Nivel_Pago    
   order by c1.id_Tabulador_SE_Cat_Puesto,c1.resultado,c1.id_Tabulador_SE_Zona,c1.id_Tabulador_SE_Nivel_Pago,c1.fecha    
   --convert (varchar(10),c1.fecha, 103) desde,--isnull(dbo.fechaToAnioQuincena(c2.Fecha-1),''999999'' )hasta,    
   --isnull(convert (varchar(10),c2.Fecha-1, 103),''31/12/9999'' )hasta,c1.Valor    
       
       
--categoria     
--Nivel_sueldo     
--clave_antecedente     
--Tipo_Concepto     
--Zona_Economica     
--Vigencia_Inicial     
--Vigencia_Final     
--Importe     
--sostenimiento    
    
   --se cambia el orden y criterios de las columnas de acuerdo a lo que solicitan para el sigp  
   --select categoria,id_Tabulador_SE_Nivel_Pago Nivel_sueldo,concepto clave_antecedente, tipo Tipo_Concepto,    
   --id_Tabulador_SE_Zona Zona_Economica,    
   --convert (varchar(10),dbo.anioQuincenaToFecha(desde,0), 103) Vigencia_Inicial,    
   --isnull(convert (varchar(10),dbo.anioQuincenaToFecha(hasta,1), 103),''00/00/0000'' )Vigencia_Final,    
   --Valor Importe,''F''sostenimiento    
  
   select RIGHT(''  '' + Ltrim(Rtrim(categoria)),7) as categoria,  
   ''F'' sostenimiento,  
   id_Tabulador_SE_Nivel_Pago Nivel_sueldo,  
   tipo Tipo_de_Concepto,  
   '''' clave_concepto_estatal,     
   concepto clave_concepto_federal,     
   id_Tabulador_SE_Zona Zona_Economica,  
    Valor Importe_mensual,    
   convert (varchar(10),dbo.anioQuincenaToFecha(desde,0), 103) Vigencia_Inicial,    
   isnull(convert (varchar(10),dbo.anioQuincenaToFecha(hasta,1), 103),''00/00/0000'' )Vigencia_Final    
   from(    
   select * from #UPN    
   union all    
   select * from #MM     
   union all    
   select * FROM #Ba     
   )tabulador    
   where len(concepto) = 2 and desde >= 201300    
   --categoria like ''%aa0501%''    
   order by categoria,concepto,id_Tabulador_SE_Zona,id_Tabulador_SE_Nivel_Pago,desde      
END    
    
    
--exec [dbo].[SIGP_Tabulador_Sueldos2]'
GO

GO
PRINT N'Creating [dbo].[SP_SacaPlazacon]'
GO
IF OBJECT_ID(N'[dbo].[SP_SacaPlazacon]', 'P') IS NULL
EXEC sp_executesql N'



create PROCEDURE [dbo].[SP_SacaPlazacon]
(
@idemp int=0,
@idplaza int=0

/* @fechafin  datetime */

)
AS
SET NOCOUNT ON
  /*
BEGIN  
  */

 
	SELECT
			a.Id_Emp, b.Id_plaza, a.NoConcepto, 
			CASE WHEN a.NoConcepto >= 2300 THEN ''D'' ELSE ''P'' END AS PD, 
			a.descripcion AS Concepto, a.Monto, a.Fecha AS FechaInicio, 
			a.FechaFin, CASE WHEN a.fechafin >= GETDATE() THEN 1 ELSE 0 END AS Vigencia
	FROM      
			TTEmpleado_Plaza_Conc a
			INNER JOIN plazas b
			ON a.NoPlaza = b.Num_Plaza
	WHERE     
			a.id_emp = @idemp and  b.num_Plaza = @idplaza
	ORDER BY 
			a.FechaFin DESC

SET NOCOUNT OFF
'
GO

GO
PRINT N'Creating [dbo].[SP_SacaPlaza]'
GO
IF OBJECT_ID(N'[dbo].[SP_SacaPlaza]', 'P') IS NULL
EXEC sp_executesql N'

CREATE PROCEDURE [dbo].[SP_SacaPlaza]        
(        
 @Idemp int = 0,      
 @IdStatus int = 0,      
 @Fecha DateTime = 0      
)        
AS        
SET NOCOUNT ON        
  /*        
BEGIN          
  */        
  
SELECT        
 Pi.PlazaIEEPO as Plaza ,A.Fecha,M.Statusplaza as Tipo,P.cvetipoplaza as Motivo,C.partida,D.unidad,E.subunidad,R.categoria,F.horas,G.diagonal,I.nivel as CM,K.descripcion as Nivel_Pago,TLP28.UDP as UD,N.clave as CT,N.descripcion as CT_Nombre,b.id_plaza,      
 cast( year(b.fechaCreacion) as varchar) + ''''+ Right(''00'' + Cast(case when(day(b.fechaCreacion)>15)then month(b.fechaCreacion)*2 else (month(b.fechaCreacion)*2)-1 end as Varchar(2)),2) + '' '' + 
 Case When b.FechaVencimiento = ''99991231'' Then ''999999'' Else cast( year(b.FechaVencimiento) as varchar) + ''''+ Right(''00''+ Cast(case when(day(b.FechaVencimiento)>15)then month(b.FechaVencimiento)*2 else (month(b.FechaVencimiento)*2)-1 end as Varchar(2)),2) End as Desde_Hasta,   
 B.num_plaza as Num_Plaza,      
 Isnull(Vt.Id_emp,0) as activa,a.id_emp      
 FROM        
 dbo.plazaempleados A        
 inner join dbo.plazas B        
 on A.id_plaza=B.id_plaza        
 left join (  
      Select b.Id_plaza,a.Id_statusPlaza,StatusPlaza,b.Fecha From TstatusPlaza a Inner join HstatusPlaza b on a.Id_statusplaza=b.Id_rel  
      Inner Join (Select Id_Plaza,Max(Fecha) as Fecha From HstatusPlaza Where Fecha<=@fecha Group by Id_plaza) c  
      on c.Id_plaza=b.Id_plaza and c.Fecha=b.Fecha) M        
      on a.id_plaza = M.id_Plaza        
 left join (  
      Select b.Id_plaza,a.Id_TipoPlaza,a.CveTipoPlaza,DestipoPlaza,b.Fecha From TTipoPlaza a Inner join HtipoPlaza b on a.Id_TipoPlaza=b.Id_rel  
      Inner Join (Select Id_Plaza,Max(Fecha) as Fecha From HtipoPlaza Where Fecha<=@fecha Group by Id_plaza) c  
      on c.Id_plaza=b.Id_plaza and c.Fecha=b.Fecha) P        
             on a.id_plaza = P.Id_plaza        
 left join (  
     Select a.* From Hpartida a   
     Inner Join (Select Id_Plaza,Max(Fecha) as Fecha From Hpartida Where Fecha<=@fecha Group by Id_plaza) b  
     on a.Id_plaza=b.Id_plaza and a.Fecha=b.Fecha) C        
            on A.id_plaza= C.id_plaza   
 left join (  
            Select a.* From HUnidad a   
            Inner Join (Select Id_Plaza,Max(Fecha) as Fecha From HUnidad Where Fecha<=@fecha Group by Id_plaza) b  
            on a.Id_plaza=b.Id_plaza and a.Fecha=b.Fecha) D        
            on A.id_plaza= D.id_plaza    
 left join (  
            Select a.* From hsubunidad a   
            Inner Join (Select Id_Plaza,Max(Fecha) as Fecha From hsubunidad Where Fecha<=@fecha Group by Id_plaza) b  
            on a.Id_plaza=b.Id_plaza and a.Fecha=b.Fecha) E        
            on A.id_plaza= E.id_plaza  
 left join (  
            Select b.Id_plaza,a.Id_Tabulador_SE_Cat_Puesto,a.Categoria,a.Descripcion,b.Fecha From Ttabulador_SE_Cat_Puesto a Inner join htabulador_SE_Cat_Puesto b on a.Id_Tabulador_SE_Cat_Puesto=b.Id_rel  
     Inner Join (Select Id_Plaza,Max(Fecha) as Fecha From htabulador_SE_Cat_Puesto Where Fecha<=@fecha Group by Id_plaza) c  
     on c.Id_plaza=b.Id_plaza and c.Fecha=b.Fecha) R              
     on A.id_plaza = R.id_plaza        
 left join (  
            Select a.* From hhoras a   
            Inner Join (Select Id_Plaza,Max(Fecha) as Fecha From hhoras Where Fecha<=@fecha Group by Id_plaza) b  
     on a.Id_plaza=b.Id_plaza and a.Fecha=b.Fecha) F        
     on A.id_plaza= F.id_plaza  
 left join (  
            Select a.* From Hdiagonal a   
            Inner Join (Select Id_Plaza,Max(Fecha) as Fecha From Hdiagonal Where Fecha<=@fecha Group by Id_plaza) b  
            on a.Id_plaza=b.Id_plaza and a.Fecha=b.Fecha) G        
            on A.id_plaza= G.id_plaza  
 left join (  
            Select b.Id_plaza,a.Id_Tabulador_se_cm ,a.Nivel,a.Descripcion,b.Fecha From Ttabulador_se_cm a Inner join htabulador_se_cm b on a.Id_Tabulador_se_cm=b.Id_rel  
            Inner Join (Select Id_Plaza,Max(Fecha) as Fecha From htabulador_se_cm Where Fecha<=@fecha Group by Id_plaza) c  
            on c.Id_plaza=b.Id_plaza and c.Fecha=b.Fecha) I        
            on A.Id_plaza=I.Id_plaza         
 left join (  
            Select b.Id_plaza,a.id_tabulador_se_nivel_pago,a.Nivel,a.Descripcion,b.Fecha From Ttabulador_se_nivel_pago a Inner join htabulador_se_nivel_pago b on a.Id_tabulador_se_nivel_pago=b.Id_rel  
            Inner Join (Select Id_Plaza,Max(Fecha) as Fecha From htabulador_se_nivel_pago Where Fecha<=@fecha Group by Id_plaza) c  
            on c.Id_plaza=b.Id_plaza and c.Fecha=b.Fecha) K        
            on A.id_plaza=K.Id_plaza         
 inner join vistatablalongitud N        
 on a.id_nodo=N.id_nodo        
 Left join SysPrevioNominaOrdenTipoplaza SO      
 on  P.id_tipoplaza=SO.id_tipoplaza      
 Left Join TablaLongitudProp_28 TLP28       
 on N.Id_nodo=TLP28.id_nodo        
 Left Join ((Select a.id_emp,a.id_plaza,a.Fecha From PlazaEmpleados a       
             Inner Join (select Id_plaza,Max(Fecha) as Fecha       
             from plazaempleados where Fecha <=@Fecha Group by Id_plaza) b       
             On a.Id_Plaza=b.Id_plaza and a.Fecha=b.Fecha )) Vt       
 on A.Id_emp=Vt.Id_emp and A.Id_plaza=Vt.Id_Plaza       
 Left Join PlazaIEEPO Pi      
 on A.Id_plaza=Pi.Id_plaza      
        
 WHERE        
 A.id_emp=@Idemp       
 And       
 M.id_statusplaza In(case when @IdStatus = 0 Then M.id_statusplaza  else @IdStatus end)      
 And      
 A.Fecha<=(case when @Fecha = 0 Then ''2200-01-01'' else @Fecha end)      
 ORDER BY SO.Id_OrdenTipoplaza,desde_hasta desc      
/*        
 END        
*/        
        
SET NOCOUNT OFF'
GO

GO
PRINT N'Creating [dbo].[SP_ImportaDatosSIAPSEP]'
GO
IF OBJECT_ID(N'[dbo].[SP_ImportaDatosSIAPSEP]', 'P') IS NULL
EXEC sp_executesql N'CREATE procedure [dbo].[SP_ImportaDatosSIAPSEP] as 
begin
drop table WEmpNew
select w.*,IDENTITY(int, 1,1) as Llave  into WEmpNew 
from wempleados w left join empleados e on e.rfc=w.rfc Where e.id_emp is null order by w.RFC --and w.vigencia=''A'' 

--Saca Maximo de Id_emp
Declare @MaxIDemp int
set @MaxIDemp =(Select max(id_emp) from empleados)
--select @MaxIDemp

--Saca Maximo de Noempx
Declare @MaxNoempx int
set @MaxNoempx =(Select max(Noempx) from empleados where noempx<38000)
--select @MaxNoempx

----Insertar registros de empleados que no existen

Insert into empleados (id_emp,noempx,nombre,appaterno,apmaterno,rfc,rfcfecha,rfchomo,imss,fecha_alta,vigencia,sexo,
id_nacionalidad,id_banco,cuenta_invernomina,curp,id_direccion,cia,id_cia,edocivil,fecha_baja,fecha_bajass,
id_estadonac,lunac,nip,id_cod)
select @MaxIDemp+llave as id_emp, cast(@MaxNoempx+llave as varchar(5)) as noempx,
nombre,appaterno,apmaterno,rfc,
Cast(''19''+substring(rfc,5,2)+''/''+ substring(rfc,7,2)+''/''+substring(rfc,9,2) as datetime) as rfcfecha,
--Cast(''19''+substring(rfc,5,2)+''/''+ substring(rfc,9,2)+''/''+substring(rfc,7,2) as datetime) as rfcfecha,
substring(rfc,11,3) as rfchomo,
imss,fecha_alta,vigencia,sexo,id_nacionalidad,id_banco,cuenta_invernomina,curp,0 as id_direccion,20 as cia,22 as id_cia
,edocivil,fecha_baja,fecha_bajass,id_estadonac,lunac,rfc as nip, 
case when cuenta_invernomina is null then 3 else case when cuenta_invernomina <> '''' then  2 else 3 end end as id_cod
from WEmpNew

-- Insertar en historia de cias a empleados nuevos
insert into hcia (id_emp,id_rel,fecha,id_user,movimiento)
select @MaxIDemp+llave as id_emp,22 as id_rel, fecha_alta as fecha, 0 as id_user, getdate() as movimiento
from WEmpNew

--select * from hfecha_alta_gob_fed
-- Insertar en historia de fecha de alta de Gobierno Federal
insert into hfecha_alta_gob_fed (id_emp,fecha_alta_gob_fed,fecha,id_user,movimiento)
select 
@MaxIDemp+llave as id_emp,
fecha_alta_gob_fed, 
fecha_alta as fecha, 
0 as id_user
, getdate() as movimiento
from WEmpNew

--select * from hfecha_alta_Sep 
insert into hfecha_alta_Sep (id_emp,fecha_alta_Sep,fecha,id_user,movimiento)
select @MaxIDemp+llave as id_emp,fecha_alta_Sep, fecha_alta as fecha, 0 as id_user, getdate() as movimiento
from WEmpNew
--select * from WEmpNew

drop table wBaseEmp
-- Crear Tabla Temporal con todos los rfc encontrados
select e.id_emp,e.noempx,e.rfc,
case when w.nombre is null then e.nombre else case when rtrim(ltrim(w.nombre)) <> '''' then w.nombre else e.nombre end end as nombre,
case when w.Appaterno is null then e.Appaterno else case when rtrim(ltrim(w.Appaterno)) <> '''' then w.Appaterno else e.Appaterno end end as Appaterno,
case when w.ApMaterno is null then e.ApMaterno else case when rtrim(ltrim(w.ApMaterno)) <> '''' then w.ApMaterno else e.ApMaterno end end as ApMaterno,
case when w.Imss is null then e.Imss else case when rtrim(ltrim(w.Imss)) <> '''' then w.Imss else e.Imss end end as Imss,
case when w.Fecha_alta is null then e.Fecha_alta else case when w.Fecha_alta > ''1900/01/01'' then w.Fecha_alta else e.Fecha_alta end end as Fecha_alta,
case when w.Vigencia is null then e.Vigencia else case when rtrim(ltrim(w.Vigencia)) <> '''' then w.Vigencia else e.Vigencia end end as Vigencia,
case when w.Sexo is null then e.Sexo else case when rtrim(ltrim(w.Sexo)) <> '''' then w.Sexo else e.Sexo end end as Sexo,
case when w.id_nacionalidad is null then e.id_nacionalidad else w.id_nacionalidad end as id_nacionalidad,
case when w.id_banco is null then e.id_banco else w.id_banco end as id_banco,
case when w.Cuenta_invernomina is null then e.Cuenta_invernomina else case when rtrim(ltrim(w.Cuenta_invernomina)) <> '''' then w.Cuenta_invernomina else e.Cuenta_invernomina end end as Cuenta_invernomina,
case when w.curp is null then e.curp else case when rtrim(ltrim(w.curp)) <> '''' then w.curp else e.curp end end as  curp,
case when w.edocivil is null then e.edocivil else case when rtrim(ltrim(w.edocivil)) <> '''' then w.edocivil else e.edocivil end end as edocivil,
case when w.fecha_baja is null then e.fecha_baja else case when w.fecha_baja > ''1900/01/01'' then w.fecha_baja else e.fecha_baja end end as fecha_baja,
case when w.fecha_bajass is null then e.fecha_bajass else case when w.fecha_bajass > ''1900/01/01'' then w.fecha_bajass else e.fecha_bajass end end as fecha_bajass,
case when w.id_EstadoNac is null then e.id_EstadoNac else w.id_EstadoNac end as id_EstadoNac,
case when w.Lunac is null then e.Lunac else case when rtrim(ltrim(w.Lunac)) <> '''' then w.Lunac else e.Lunac end end as Lunac 
into wBaseEmp 
from wempleados w inner join empleados e on e.rfc=w.rfc and e.id_cia=22

--- va a faltar numero de isste
Update empleados 
set
empleados.nombre=b.nombre
,empleados.appaterno=b.appaterno  
,empleados.apmaterno=b.apmaterno
,empleados.rfc=b.rfc
,empleados.imss=b.imss
,empleados.fecha_alta=b.fecha_alta
,empleados.vigencia=b.vigencia
,empleados.sexo=b.sexo
,empleados.id_nacionalidad=b.id_nacionalidad
,empleados.id_banco=b.id_banco
,empleados.Cuenta_invernomina=b.Cuenta_invernomina
,empleados.curp=b.curp
,empleados.edocivil=b.edocivil
,empleados.fecha_baja=b.fecha_baja
,empleados.fecha_bajass=b.fecha_bajass
,empleados.id_EstadoNac=b.id_EstadoNac
,empleados.Lunac=b.Lunac
from wBaseEmp b where b.id_emp=empleados.id_emp

--- Sacar Plazas Nuevas
drop table WPzaNew
drop table wPlazasUnicas
select 	w.CodigoPago,w.Unidad,w.SubUnidad,w.Cat_puesto,w.Horas,w.Consecutivo,w.nivel_sueldo,w.Rfc,w.FechaCreacionPlaza,w.FechaAsignacionEmp,w.FechaSubsistema,w.CentroTrabajo,w.ISSSTE_ISSSSPEA_IMSS into wPlazasUnicas
from wPlazas w inner join (
	select CodigoPago,Unidad,SubUnidad,Cat_puesto,Horas,Consecutivo,max(FechaAsignacionEmp) as MaxFechaAsignacionEmp
	from wPlazas
	group by CodigoPago,Unidad,SubUnidad,Cat_puesto,Horas,Consecutivo) x 
on w.CodigoPago=x.CodigoPago and w.Unidad=x.Unidad and w.SubUnidad=x.SubUnidad and w.Cat_puesto=x.Cat_puesto 
and w.Horas=x.Horas and w.Consecutivo=x.Consecutivo and w.FechaAsignacionEmp=MaxFechaAsignacionEmp

select w.* ,IDENTITY(int, 1,1) as Llave  into WPzaNew 
from wplazasunicas w left join cd_plaza c 
on w.codigopago=c.codigopago and w.unidad=c.unidad and w.subunidad=c.subunidad and ltrim(rtrim(w.cat_puesto))=ltrim(rtrim(c.cat_puesto))
and w.horas=c.horas and  w.consecutivo=c.consecutivo
Where c.id_plaza is null 

--Saca Maximo de Id_plaza
Declare @MaxIDplaza int
set @MaxIDplaza =(Select max(id_plaza) from plazas)
--select @MaxIDplaza

--Saca Maximo de Noempx
Declare @MaxNum_plaza int
set @MaxNum_plaza =(Select max(Num_plaza) from plazas )
--select @MaxNum_plaza

--Inserta plazas nuevas
insert into plazas (id_plaza,num_plaza,id_empProp,id_emp,id_empant,fechacreacion,fechavencimiento,dineropresupuestado,dineropagado,horaspresupuestadas,horaspagadas)
select @MaxIDplaza+llave as id_plaza,@MaxNum_plaza+llave as num_plaza,0 as id_empProp,0 as id_emp,0 as id_empant,FechaCreacionPlaza as fechacreacion,
''2100/01/01'' as fechavencimiento,0 as dineropresupuestado,0 as dineropagado,0 as horaspresupuestadas,0 as horaspagadas
from WPzaNew 

-- Inserta en cd_plaza la relacion de las plazas nuevas
insert into cd_plaza (id_plaza,codigopago,unidad,subunidad,cat_puesto,horas,consecutivo,fechasubsistema)
select @MaxIDplaza+llave as id_plaza,
codigopago,unidad,subunidad,cat_puesto,horas,consecutivo,fechasubsistema
from WPzaNew 

--Inserta Registro sin empleado a plazaempleados
insert into plazaempleados (id_emp,id_plaza,fecha,id_user,movimiento,id_nodo,id_plazaanterior)
select 0 as id_emp,@MaxIDplaza+w.llave as id_plaza,
dateadd(hh,-1,FechaAsignacionEmp) as  fecha,0 as id_user,getdate() as movimiento,v.id_nodo,0 as id_plazaanterior 
from WPzaNew w, vistatablalongitud v where clave like ''%'' + ltrim(rtrim(centrotrabajo)) + ''%''

drop table wBasePlazas
select c.id_plaza,cast(0 as int) as id_nodo,cast(0 as int) as id_emp,w.*
into wBasePlazas
from wplazasunicas w inner join cd_plaza c on 
w.codigopago=c.codigopago and w.unidad=c.unidad and w.subunidad=c.subunidad and ltrim(rtrim(w.cat_puesto))=ltrim(rtrim(c.cat_puesto))
and w.horas=c.horas and  w.consecutivo=c.consecutivo

update wBasePlazas
set wBasePlazas.id_nodo=v.id_nodo
from vistatablalongitud v where clave like ''%'' + ltrim(rtrim(wBasePlazas.centrotrabajo)) + ''%''

update wBasePlazas
set wBasePlazas.id_emp=e.id_emp
from empleados e where e.rfc=wBasePlazas.rfc and (wBasePlazas.rfc is not null and wBasePlazas.rfc<>'''')


-- Inserta Relacion de Plaza-Empleados nuevas
insert into plazaempleados (id_emp,id_plaza,fecha,id_user,movimiento,id_nodo,id_plazaanterior)
select w.id_emp,w.id_plaza,w.fechaasignacionemp as fecha,0 as id_user,getdate() as movimiento,w.id_nodo,0 as id_plazaanterior 
from Wbaseplazas w left join plazaempleados p on w.id_plaza=p.id_plaza and w.fechaasignacionemp=p.fecha where p.id_plaza is null

-- Actualiza Fecha de subsistema
update cd_plaza
set cd_plaza.fechasubsistema=w.fechasubsistema
from Wbaseplazas w Where  w.id_plaza=cd_plaza.id_plaza

-- Actualiza Tipo de seguro social de la plaza

insert into htipo_seg_social (id_plaza,id_rel,fecha,id_user,movimiento)
select w.id_plaza,w.issste_isssspea_imss as id_rel, w.fechaasignacionemp as fecha,0 as id_user,getdate() as movimiento
from Wbaseplazas w left join htipo_seg_social h on w.id_plaza=h.id_plaza and w.fechaasignacionemp=h.fecha where h.id_plaza is null

--Inserta Motivo de plaza
insert into hplazas (id_plaza,fecha,id_tipomovplazas,valor_idcampo,id_user,movimiento)
select a.id_plaza,a.fecha,a.id_tipomovplazas, max(a.valor_idcampo) as valor_idcampo,max(a.id_user)as id_user,max(a.movimiento)  as movimiento from
(
select  c.id_plaza,w.fecha, 2 as id_tipomovplazas,w.valor_idcampo,0 as id_user,w.movimiento 
from whplazas_status w inner join wbaseplazas  c on
w.codigopago=c.codigopago and w.unidad=c.unidad and w.subunidad=c.subunidad and ltrim(rtrim(w.cat_puesto))=ltrim(rtrim(c.cat_puesto))
and w.horas=c.horas 
and  w.consecutivo=c.consecutivo
) a
left join hplazas h on a.id_plaza=h.id_plaza and a.fecha=h.fecha and a.id_tipomovplazas=h.id_tipomovplazas where  h.id_plaza is null
group by a.id_plaza,a.fecha,a.id_tipomovplazas

--Inserta Status de plaza
insert into hplazas (id_plaza,fecha,id_tipomovplazas,valor_idcampo,id_user,movimiento)
select a.id_plaza,a.fecha,a.id_tipomovplazas, max(a.valor_idcampo) as valor_idcampo,max(a.id_user)as id_user,max(a.movimiento)  as movimiento from
(
select  c.id_plaza,w.fecha, 1 as id_tipomovplazas,w.valor_idcampo,0 as id_user,w.movimiento 
from wHPlazas_Motivo w inner join wbaseplazas  c on
w.codigopago=c.codigopago and w.unidad=c.unidad and w.subunidad=c.subunidad and ltrim(rtrim(w.cat_puesto))=ltrim(rtrim(c.cat_puesto))
and w.horas=c.horas 
and  w.consecutivo=c.consecutivo
) a
left join hplazas h on a.id_plaza=h.id_plaza and a.fecha=h.fecha and a.id_tipomovplazas=h.id_tipomovplazas where  h.id_plaza is null
group by a.id_plaza,a.fecha,a.id_tipomovplazas

-- Actualiza hsalarios
Insert into hsalarios (id_emp,fecha,sdiar,sdiai,tcamb,movim,sinfo,integfija,integvar,id_calif,Actual,movimiento,MotivoIncremento,Id_Plaza)
select 0 as id_emp,Isnull(w.FechaCreacion,''1/1/2008'') as fecha,0 as sdiar, 0 as sdiai,0 as tcamb,''M'' as Movim, 0 as Sinfo, 0 as IntegFija, 0 as integvar,0 as Id_Calif, 0 as Actual,isnull(w.FechaCreacion,''1/1/2008'') as Movimiento, NULL as MotivoIncremento,w.id_plaza as id_plaza
from plazas w left join hsalarios e on e.id_plaza=w.id_plaza
Where e.id_plaza is null and w.id_plaza >= 200000 order by w.id_plaza

-- Actualiza Htabulador_Empleado
Insert into HTabulador_IEA_Empleado (id_plaza, id_rel,fecha,id_user,movimiento)
SELECT     Plazas.Id_plaza AS id_plaza, TTabulador_IEA_Empleado.id_Tabulador_IEA_Empleado AS id_rel, isnull(Plazas.FechaCreacion,''2008/01/01'') AS fecha, 0 AS id_user, 
                      isnull(Plazas.FechaCreacion,''2008/01/01'') AS movimiento
FROM         CD_PLAZA INNER JOIN
                      Plazas ON CD_PLAZA.id_plaza = Plazas.Id_plaza INNER JOIN
                      TTabulador_IEA_Empleado ON LTRIM(RTRIM(CD_PLAZA.Cat_puesto)) = LTRIM(RTRIM(TTabulador_IEA_Empleado.categoria)) left JOIN
                      HTabulador_IEA_Empleado ON Plazas.Id_plaza = HTabulador_IEA_Empleado.id_plaza
Where HTabulador_IEA_Empleado.id_plaza is null and Plazas.id_plaza >= 200000 
order by Plazas.id_plaza

-- Actualiza Htabulador_IEA_Plaza
Insert into htabulador_IEA_plaza (Id_Plaza, id_rel,fecha,id_user,movimiento)
SELECT     Plazas.Id_plaza AS id_plaza, 
TTabulador_IEA_plaza.id_Tabulador_IEA_plaza AS id_rel, isnull(Plazas.FechaCreacion,''2008/01/01'') AS fecha, 0 AS id_user, 
                      isnull(Plazas.FechaCreacion,''2008/01/01'') AS movimiento
FROM         CD_PLAZA INNER JOIN
                      Plazas ON CD_PLAZA.id_plaza = Plazas.Id_plaza INNER JOIN
                      TTabulador_IEA_plaza ON LTRIM(RTRIM(CD_PLAZA.Cat_puesto)) = LTRIM(RTRIM(TTabulador_IEA_plaza.categoria)) left JOIN
                      HTabulador_IEA_plaza ON Plazas.Id_plaza = HTabulador_IEA_plaza.id_plaza
Where HTabulador_IEA_plaza.id_plaza is null and Plazas.id_plaza >= 200000 
order by Plazas.id_plaza

-- Actualiza Htabulador_IEA_Zona
Insert into Htabulador_IEA_Zona (id_plaza,id_rel,fecha,id_user,movimiento)
Select  w.id_plaza as id_plaza ,2 as id_rel, Isnull(w.FechaCreacion,''1/1/2008'') as fecha, 0 as user_id, Isnull(w.FechaCreacion,''1/1/2008'') as movimiento
from plazas w left join htabulador_IEA_ZONA  e on e.id_plaza=w.id_plaza
Where e.id_plaza is null and w.id_plaza >= 200000 order by w.id_plaza

--Actualiza Htabulador_IEA_CM
Insert into Htabulador_IEA_CM (id_plaza,id_rel,fecha,id_user,movimiento)
SELECT     Plazas.Id_plaza AS id_plaza, wPlazas.nivel_sueldo AS id_rel, ISNULL(Plazas.FechaCreacion, ''2008/01/01'') AS fecha, 0 AS id_user, 
                      ISNULL(Plazas.FechaCreacion, ''2008/01/01'') AS movimiento
FROM         Plazas INNER JOIN
                      CD_PLAZA ON Plazas.Id_plaza = CD_PLAZA.id_plaza INNER JOIN
                      wPlazas ON CD_PLAZA.CodigoPago = wPlazas.CodigoPago AND CD_PLAZA.Unidad = wPlazas.Unidad AND 
                      CD_PLAZA.SubUnidad = wPlazas.SubUnidad AND ltrim(rtrim(CD_PLAZA.Cat_puesto)) = ltrim(rtrim(wPlazas.Cat_puesto)) AND CD_PLAZA.Horas = wPlazas.Horas AND 
                      CD_PLAZA.Consecutivo = wPlazas.Consecutivo left JOIN
                      HTabulador_IEA_CM ON Plazas.Id_plaza = HTabulador_IEA_CM.id_plaza
Where HTabulador_IEA_CM.id_plaza is null and Plazas.id_plaza >= 200000 
order by Plazas.id_plaza
End'
GO

GO
PRINT N'Creating [dbo].[dsv_SacaHistPagostotal_mes]'
GO
IF OBJECT_ID(N'[dbo].[dsv_SacaHistPagostotal_mes]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		DAVID SANTIBANEZ VARGAS
-- Create date: OCTUBRE 2013
-- Description:	PLAZAS
-- =============================================
create PROCEDURE [dbo].[dsv_SacaHistPagostotal_mes]              
(              
	@Didplaza int,              
	@DIdemp int,  
	@DAnio int,          
	@DAnioQna int              
)
with encryption             
AS        
SET NOCOUNT ON        
BEGIN            

create table #prueba (id_emp int,	id_periodo int,	Periodo int,	
Parcial int,	Descripcion varchar(max),	Plaza	varchar(max), Id_plaza int,	Desde int,	Hasta int,
Percepciones varchar(max),	Deducciones varchar(max),	Liquido varchar(max),	Cheque varchar(max),	Vector int, referencia int)
insert into #prueba EXEC [dbo].[SP_SacaHistPagostotal_13_mes] @idplaza = @Didplaza, 	@Idemp = @DIdemp, @Anio = @DAnio, @AnioQna = @DAnioQna

insert into #prueba (id_emp, id_periodo, Periodo, Parcial,
Descripcion, Plaza, Id_plaza, Desde, Hasta, Percepciones, Deducciones, Liquido, Cheque, Vector, referencia)
select noemp as id_emp, 0 as id_periodo, desde as Periodo, 0 as Parcial,''OMITIDO'' as Descripcion, 
plazaieepo as Plaza, b.id_plaza, Desde, desde as Hasta, 0 AS Percepciones, 0 AS Deducciones, 0 AS Liquido, 
'''' AS Cheque,  '' '' as Vector, 0 as referencia
from templeadosplazaomitidos  a, plazaieepo b
where a.Noemp = @DIdemp and a.numplaza = @Didplaza and a.numplaza=b.id_plaza and cast(substring(desde,1,4) as int) = @DAnio

--la diferencia

-----------------------------------------
select distinct  desde, id_plaza, id_periodo into #pruebamil
 from nom_HistPagos a
 where a.id_plaza = @Didplaza and substring(a.desde,1,4)=@DAnio
 order by id_periodo
 -----------------------------------------

select id_emp, xx.id_periodo, Periodo, Parcial, Descripcion, Plaza, xx.Id_plaza, v.Desde, v.Hasta,
 Percepciones, Deducciones, Liquido, Cheque, Vector  into #prueba2 from 
 #prueba xx left join  
 (select min(desde) as desde, max(desde) as hasta, id_plaza, id_periodo
  from #pruebamil group by Id_Periodo,  id_plaza) v
 on xx.id_plaza = v.id_plaza and xx.id_periodo = v.id_periodo 
 --and v.Id_Referencia = xx.id_referencia
 where xx.id_periodo in (select id_periodo from calennomina where leyenda4 = 2 and (parcial >= 20 and parcial <= 40)  )
 --upper(Descripcion) =''RETROACTIVO'' 
 ---- fin de la diferencia

 insert into #prueba2 (id_emp, id_periodo, Periodo, Parcial,
Descripcion, Plaza, Id_plaza, Desde, Hasta, Percepciones, Deducciones, Liquido, Cheque, Vector )
 select id_emp, xx.id_periodo, Periodo, Parcial, Descripcion, Plaza, xx.Id_plaza, v.Desde, v.Hasta,
 Percepciones, Deducciones, Liquido, Cheque, Vector from 
 #prueba xx left join  
 (select min(a.desde) as desde, max(a.desde) as hasta,  a.id_plaza, a.Id_Periodo   
 from HistPagos a, #prueba b where a.id_plaza = b.id_plaza and a.Id_Periodo = b.id_periodo 
 and (  a.id_periodo in (select id_periodo from calennomina where leyenda4 = 2 and (parcial >= 20 and parcial <= 40)  ))
 --upper(b.Descripcion) =''RETROACTIVO''
 group by a.id_plaza, a.Id_Periodo ) v
 on xx.id_plaza = v.id_plaza and xx.id_periodo = v.id_periodo 
 --and v.Id_Referencia = xx.id_referencia
 where xx.id_periodo in (select id_periodo from calennomina where leyenda4 = 2 and (parcial >= 20 and parcial <= 40)  )
 --upper(Descripcion) =''RETROACTIVO'' 
 
delete  from #prueba where 
#prueba.id_periodo in (select id_periodo from calennomina where leyenda4 = 2 and (parcial >= 20 and parcial <= 40)  )
--Descripcion =''RETROACTIVO''
delete  from #prueba2 where 
#prueba2.id_periodo in (select id_periodo from calennomina where leyenda4 = 2 and (parcial >= 20 and parcial <= 40)  ) and isnull(desde,'''')=''''
--Descripcion =''RETROACTIVO''

update #prueba set Descripcion = ''OMITIDO'' where id_emp = @DIdemp and Id_plaza = @Didplaza 
 and  id_periodo in (
select c.Id_Periodo from CalenNomina c inner join #prueba p on c.Id_Periodo = p.id_periodo
and c.Id_Periodo  in (select distinct id_periodo  from nom_histpagos where id_emp = @DIdemp and id_concepto = 1789))



SELECT id_emp, id_periodo, Periodo, Parcial,
Descripcion, Plaza, Id_plaza, Desde, Hasta, Percepciones, Deducciones, Liquido, Cheque, Vector From (
select id_emp, id_periodo, Periodo, Parcial,
Descripcion, Plaza, Id_plaza, Desde, Hasta, Percepciones, Deducciones, Liquido, Cheque, Vector  from #prueba 
union 
select  id_emp, id_periodo, Periodo, Parcial,
Descripcion, Plaza, Id_plaza, Desde, Hasta, Percepciones, Deducciones, Liquido, Cheque, Vector  from #prueba2
) dsvf
Order By Periodo,parcial      

END '
GO

GO
PRINT N'Creating [dbo].[spsHistPagosDetallePivot]'
GO
IF OBJECT_ID(N'[dbo].[spsHistPagosDetallePivot]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		wcahun
-- Create date: 08102013
-- Description:	procedimiento para seleccionar los datos del histpagosDEtalle en forma de tabla
-- =============================================
CREATE PROCEDURE [dbo].[spsHistPagosDetallePivot]
@id_plaza int, @id_emp int, @id_periodo int, @id_recalculo int, @tipo int
WITH EXEC AS CALLER
AS
BEGIN

  declare @idPlaza int = @id_plaza
  declare @idEmp int = @id_emp
  declare @idPeriodo int = @id_periodo
  declare @idRecalculo int = @id_recalculo
  declare @tipoPD int = @tipo



	declare @listStr varchar(max)
	select @listStr= COALESCE(@listStr+''],['' ,'''') + cast(id_periodopago as varchar(10)) from (
	select distinct a.id_periodopago from histpagosdetalle a 
	inner join conceptos c on a.id_concepto=c.id_concepto
	WHERE a.ID_PERIODO=@idPeriodo and a.id_referencia=@idRecalculo
	and a.id_plaza=@idPlaza and a.id_emp=@idEmp
	and c.TIPO in (1,2) ) r
	order by id_periodopago
set @liststr= ''[''+@liststr+'']''

--select @liststr


declare @ejecuta nvarchar(max)
set @ejecuta=
''select '' + cast(@idEmp as varchar(15)) +'' id_emp, ''+cast(@idPlaza as varchar(15))+'' id_plaza,* from ( 
select a.id_concepto,
 case when a.id_concepto = 1328 or a.id_concepto = 1518 then isnull(a.C_costo,'''''''') else c.resultado end resultado
, descripcion, f.id_periodo qnapago,round(pesos,2) pesos, isnull(b.plazaieepo,'''''''')  plazapago , id_plazapago from histpagosdetalle a 
	left join plazaieepo b on a.id_plazapago=b.id_plaza	
	inner join plazaieepo d on a.id_plaza=d.id_plaza
	inner join conceptos c on a.id_concepto=c.id_concepto
	inner join calennomina e on e.id_periodo=a.id_periodo
	inner join calennomina f on f.id_periodo=a.id_periodopago
	WHERE a.ID_PERIODO=''+cast(@idPeriodo as varchar(15))+'' and a.id_referencia=''+cast(@idRecalculo as varchar(15))+''
	and a.id_plaza=''+cast(@idPlaza as varchar(15))+'' and a.id_emp=''+cast(@idEmp as varchar(15))+''
	and c.TIPO=''+cast(@tipoPD as varchar(15))+'' 
	) sourcetable	pivot(sum(pesos) for qnapago in (''+  @liststr +''))  PIVOTETABLE order by resultado''

--select @ejecuta
execute (@ejecuta)

--select top 10 * from histpagosdetalle
END'
GO

GO
PRINT N'Creating [dbo].[SP_CorreccionRetrosV2]'
GO
IF OBJECT_ID(N'[dbo].[SP_CorreccionRetrosV2]', 'P') IS NULL
EXEC sp_executesql N'
CREATE procedure [dbo].[SP_CorreccionRetrosV2]
@num_emp as int,
@num_plaza as int,
@id_ref int,
@params as CrRParamV2 readonly,
@e as varchar(max) = ''''
with encryption
as
begin	
	SET XACT_ABORT ON
	begin try
		begin tran;
			declare @id_emp int = (select Id_Emp from ieepo..empleados where NOEMPx = @num_emp)
			declare @id_plaza int = (select Id_plaza from ieepo..plazas where num_plaza = @num_plaza)
	
			if (select top 1 concepto from @params) is not null
			begin
				select row_number() over(order by concepto,upd_importe, ajuste) n, * into #params from @params
				declare @index int = 1
				declare @rows int = (select count(*) from #params)
				while @index <= @rows
				begin
					IF OBJECT_ID(N''tempdb..#tmp_rec'') IS NOT NULL Drop table #tmp_rec;
					select * into #tmp_rec from #params where n = @index;

					declare @id_concepto int = -1
					declare @concepto as varchar(max) = (select cast(concepto as varchar(max)) from #tmp_rec)
					if(substring(@concepto, 1, 1) not like ''$'')
						set @id_concepto = (select id_concepto from ieepo..conceptos where id_concepto = cast(@concepto as int))
					else
					begin
						set @id_concepto = 
							(
								select distinct a.id_concepto
								from ieepo..conceptos a join ieepo..histpagosdetalle b
								on a.id_concepto = b.id_concepto
								where
									resultado like substring(@concepto, 2, len(@concepto) - 1)
									and a.id_empresa = 2 and b.id_emp = @id_emp 
									and b.id_plaza = @id_plaza and b.id_referencia = @id_ref
									and tipo in (1,2)
							)
						if @id_concepto is null
							set @id_concepto =  (
								select id_concepto 
								from ieepo..Conceptos
								where 
									resultado like substring(@concepto, 2, len(@concepto) - 1) 
									and id_empresa = 2 and tipo in (1,2)
							)
					end
					if @id_concepto is not null and @id_concepto <> -1
					begin
						declare @ctd_periodos int
						if (select upd_importe from #tmp_rec) is not null
						begin	
							set @ctd_periodos = 
							(
								select count(*) from ieepo..histpagosdetalle 
								where 
									id_emp = @id_emp and id_plaza = @id_plaza and id_referencia = @id_ref
									and id_concepto = @id_concepto and pesos >= 0
									and id_periodopago not in (select value from dbo.fn_split((select excep from #tmp_rec),'',''))
							)

							if (@ctd_periodos > 0)
							begin
								declare @upd_pesos decimal(38,2) = Round((select upd_importe from #tmp_rec ) / @ctd_periodos, 2)
								update ieepo..histpagosdetalle 
								set pesos = @upd_pesos
								where 
									id_emp = @id_emp and id_plaza = @id_plaza and id_referencia = @id_ref
									and id_concepto = @id_concepto and pesos >= 0
									and id_periodopago not in (select value from dbo.fn_split((select excep from #tmp_rec),'',''))

								declare @udiff decimal(32,2) = ( 
									(
										select sum(pesos) from ieepo..histpagosdetalle 
										where 
											id_emp = @id_emp and id_plaza = @id_plaza and id_referencia = @id_ref
											and id_concepto = @id_concepto and pesos >= 0
											and id_periodopago not in (select value from dbo.fn_split((select excep from #tmp_rec),'',''))
									) - (select upd_importe from #tmp_rec ) 
								)

								;with q1 as ( 
									select top 1 * 
									from ieepo..histpagosdetalle 
									where 
										id_emp = @id_emp and id_plaza = @id_plaza and id_referencia = @id_ref
										and id_concepto = @id_concepto and pesos >= 0
										and id_periodopago not in (select value from dbo.fn_split((select excep from #tmp_rec),'',''))
									order by id_periodopago desc
								)
								update q1 set pesos = (pesos - @udiff)
							end
							else
							begin
								IF OBJECT_ID(N''tempdb..#new_records'') IS NOT NULL Drop table #new_records;
								select distinct 
									id_emp, id_periodo, @id_concepto id_concepto, 0 consecutivo, 0 horas, 
									cast (-1 as decimal(38,2)) pesos, 0 pesosexcento, id_plaza, id_referencia,
									id_periodopago, id_procesonomina, desde, hasta, 0 id_plazapago
								into #new_records
								from ieepo..histpagosdetalle 
								where 
									id_emp = @id_emp and id_plaza = @id_plaza and id_referencia = @id_ref 
									and id_periodopago not in (select value from dbo.fn_split((select excep from #tmp_rec),'',''))
						
								set @ctd_periodos = (select count(*) from #new_records)
								declare @new_pesos decimal(38,2) = Round((select upd_importe from #tmp_rec ) / @ctd_periodos, 2)
								update #new_records set pesos = @new_pesos
			
								declare @ndiff decimal(32,2) = (select sum(pesos) from #new_records) - (select upd_importe from #tmp_rec )
						
								;with q1 as (select top 1 * from #new_records)
								update q1 set pesos = (pesos - @ndiff)

								insert into ieepo..histpagosdetalle (
									id_emp, id_periodo, id_concepto, consecutivo, horas, pesos, pesosexcento,
									id_plaza, id_referencia, id_periodopago, id_procesonomina, desde, hasta, 
									id_plazapago
								)
								select
									id_emp, id_periodo, id_concepto, consecutivo, horas, pesos, pesosexcento,
									id_plaza, id_referencia, id_periodopago, id_procesonomina, desde, hasta, 
									id_plazapago
								from #new_records
							end
						end

						if (select ajuste from #tmp_rec) is not null
						begin
							set @ctd_periodos = 
							(
								select count(*) from ieepo..histpagosdetalle 
								where 
									id_emp = @id_emp and id_plaza = @id_plaza and id_referencia = @id_ref
									and id_concepto = @id_concepto
									and id_periodopago not in (select value from dbo.fn_split((select excep from #tmp_rec),'',''))
							)

							if (@ctd_periodos = 0) print @id_concepto

							declare @pesos decimal(38,2) = Round((select ajuste from #tmp_rec ) / @ctd_periodos, 2)

							IF OBJECT_ID(N''tempdb..#tmp_01'') IS NOT NULL Drop table #tmp_01;
							select 
								id_emp, id_periodo, id_concepto, consecutivo, horas,  @pesos pesos,  pesosexcento, 
								id_plaza, id_referencia, id_periodopago, id_procesonomina, desde, hasta, @id_plaza id_plazapago
							into #tmp_01
							from ieepo..histpagosdetalle 
							where 
								id_emp = @id_emp and id_plaza = @id_plaza and id_referencia = @id_ref
								and id_concepto = @id_concepto
								and id_periodopago not in (select value from dbo.fn_split((select excep from #tmp_rec),'',''))
					
							declare @diff decimal(32,2) = ( (select sum(pesos) from #tmp_01) - (select ajuste from #tmp_rec ) )
							;with q1 as ( select top 1 * from #tmp_01 order by id_periodopago desc)
							update q1 set pesos = (pesos - @diff)
					
							insert into ieepo..histpagosdetalle (
								id_emp, id_periodo, id_concepto, consecutivo, horas, pesos, pesosexcento,
								id_plaza, id_referencia, id_periodopago, id_procesonomina, desde, hasta, 
								id_plazapago
							)
							select
								id_emp, id_periodo, id_concepto, consecutivo, horas, pesos, pesosexcento,
								id_plaza, id_referencia, id_periodopago, id_procesonomina, desde, hasta, 
								id_plazapago
							from #tmp_01
						end
						else
						begin
							if (select 1 from #tmp_rec where ajuste is null and upd_importe is null) = 1
							begin
								insert into ieepo..histpagosdetalle (
									id_emp, id_periodo, id_concepto, consecutivo, horas, pesos, pesosexcento,
									id_plaza, id_referencia, id_periodopago, id_procesonomina, desde, hasta, 
									id_plazapago
								)
								select 
									id_emp, id_periodo, id_concepto, consecutivo, horas,
									(cast( cast(pesos as varchar(max) ) as decimal(38,2) ) * -1) pesos,
									pesosexcento, id_plaza, id_referencia, id_periodopago,
									id_procesonomina, desde, hasta, @id_plaza id_plazapago
								from ieepo..histpagosdetalle 
								where 
									id_emp = @id_emp and id_plaza = @id_plaza and id_referencia = @id_ref
									and id_concepto = @id_concepto	
									and id_periodopago not in (select value from dbo.fn_split((select excep from #tmp_rec),'',''))
							end
						end
					end
			
					delete from #params where n = @index
					set @index += 1
				end
			end

			declare @liquido decimal(38,2) = (
				select sum ( 
					case b.tipo
						when 1 then cast( cast(pesos as varchar(max) ) as decimal(38,2) )
						when 2 then cast( cast(pesos as varchar(max) ) as decimal(38,2) ) * -1
					End
				) from ieepo..HistPagosdetalle a join ieepo..conceptos b
				on a.id_concepto = b.id_concepto
				where 
					a.id_emp = @id_emp and a.id_plaza = @id_plaza and a.id_referencia = @id_ref
					and b.tipo in (1,2)
					and a.id_concepto <> 2601
			)

			update ieepo..HistPagos set pesos = ( @liquido - ROUND(@liquido,0,1) )
			where id_emp = @id_emp and id_plaza = @id_plaza and id_referencia = @id_ref and id_concepto = 2601
	
			update ieepo..histpagosdetalle set pesos = ( @liquido - ROUND(@liquido,0,1) )
			where id_emp = @id_emp and id_plaza = @id_plaza and id_referencia = @id_ref and id_concepto = 2601

			IF (@@ERROR <> 0) 
			BEGIN
				ROLLBACK TRAN
				raiserror(''Script failed'', 20, -1)
				print ERROR_MESSAGE()
			END
		commit tran;
	end try
	begin catch
		IF @@TRANCOUNT > 0
			 ROLLBACK TRANSACTION;
		print ERROR_MESSAGE()
	end catch
end
'
GO

GO
PRINT N'Creating [dbo].[spf_Recalculo_DR_Prejub_Resp_08Oct2013]'
GO
IF OBJECT_ID(N'[dbo].[spf_Recalculo_DR_Prejub_Resp_08Oct2013]', 'P') IS NULL
EXEC sp_executesql N'  
CREATE PROCEDURE [dbo].[spf_Recalculo_DR_Prejub_Resp_08Oct2013]                      
(                      
  @idDocumento as Int,                      
  @idEmpleado as int,                       
  @idPlaza as int,                      
  @desde as DateTime, -- desde del DR      
  @hastaCancelar as varchar(6),                              
  @hasta as DateTime, -- hasta del DR          
  @accion as bit                      
)                      
as                      
Begin                       
   declare @Año as int                      
   declare @Id_Cia as Int                      
   declare @id_Periodo_Transfer as int                      
   declare @rfc as varchar(13)                      
   declare @id_calculo as int                      
   declare @plazaieepo as varchar(21)                      
   declare @fechaFinCanc as datetime                      
   declare @desdepagar as int                      
   declare @desdep as datetime                      
   declare @sql as varchar(max)                      
   declare @tipo as varchar(5)                      
   declare @motivo as varchar(5)                      
   declare @idDetalle as int                  
                         
   set @Id_Cia = (select id_cia from Empleados where Id_Emp = CAST (@idEmpleado as varchar(max)))                      
   set @Año = YEAR(GETDATE())                      
   set @id_Periodo_Transfer = (select Id_Periodo  from FUP_Informacion_Documentos where Id_Documento = CAST(@idDocumento as varchar(10)) )                      
   set @rfc = (select rfc from Empleados where Id_Emp = CAST(@idEmpleado as varchar(10)))                      
   set @plazaieepo = (select PlazaIEEPO from PlazaIEEPO where Id_plaza = CAST(@idPlaza as varchar(10)))                      
   set @id_calculo = (select max(id_calculo)+ 1  from Recalculo_Calculo)                      
   set @fechaFinCanc = cast((select dbo.anioQuincenaToFecha(@hastaCancelar,1)) as datetime)              
   set @desdepagar = (CAST(@hastaCancelar as int)  + 1)                      
   set @desdep = (select dbo.anioQuincenaToFecha(@desdepagar,0))                   
   set @idDetalle = (select id_detalle from FUP_Documento_Detalle where Id_Documento = @idDocumento)                     
                         
   set @tipo = (select hs.id_rel  tipo from (                      
    select MAX(fecha) fecha, Id_plaza   from HstatusPlaza  where Id_plaza = @idPlaza  group by Id_plaza                       
      ) t1 inner join HstatusPlaza hs on t1.fecha = hs.Fecha and t1.Id_plaza = hs.Id_plaza )                      
                            
   set @motivo = (select hs.id_rel motivo   from (                      
      select MAX(fecha) fecha, Id_plaza   from HTipoPlaza   where Id_plaza = @idPlaza   group by Id_plaza                       
      ) t1 inner join HTipoPlaza hs on t1.fecha = hs.Fecha and t1.Id_plaza = hs.Id_plaza )                      
                      
   if @accion = 0                       
   begin                               
                                 
     insert into Recalculo_Calculo (Id_Calculo,Id_Cia,Fecha_CorteMov,Año,Descripcion,Activo,CalculoTotal,Id_Periodo_Transfer,                      
            NumProrrateo,ExcluirCancelados,Calculo_Original,id_recalculo_tipo,id_Formula_Filtro,Id_Detalle)                      
     values(                      
      @id_calculo,                      
      @Id_Cia, GETDATE(), @Año,                       
      ''Recalculo Generado por FUP DR Periodo Cancelar para el empleado con RFC: '' + @rfc + '' y plaza: '' + @plazaieepo+''.'',                      
      1,0,@id_Periodo_Transfer,0,0,0,2,0,@idDetalle);                           
                            
   insert into recalculo_periodos (Id_Calculo, Id_Periodo)                          
   Select top 24  @id_calculo, Id_Periodo From CalenNomina Where fechaini >= @desde                       
   and fechafin <= @fechaFinCanc                      
   and parcial = 0 and actualizado = 1 and id_cia = @Id_Cia;                   
                         
   insert into Recalculo_EmpleadosPeriodos (id_recalculo,id_periodo,id_emp,id_plazaCalcular,id_plazaComparar)                      
   Select top 24  @id_calculo, Id_Periodo, @idEmpleado, @idPlaza, @idPlaza  From CalenNomina Where fechaini >= @desde                       
   and fechafin <= @fechaFinCanc                      
   and parcial = 0 and actualizado = 1 and id_cia = @Id_Cia;                      
                         
     -- Insertamos el segundo retro------------------------------------------------------------                      
     set @id_calculo = 0                      
     set @id_calculo = (select max(id_calculo)+1  from Recalculo_Calculo)                      
                           
     insert into Recalculo_Calculo (Id_Calculo,Id_Cia,Fecha_CorteMov,Año,Descripcion,Activo,CalculoTotal,Id_Periodo_Transfer,                      
            NumProrrateo,ExcluirCancelados,Calculo_Original,id_recalculo_tipo,id_Formula_Filtro,Id_Detalle)                      
     values(                      
      @id_calculo,                      
      @Id_Cia, GETDATE(), @Año,                       
      ''Recalculo Generado por FUP DR Periodo Pagar para el empleado con RFC: '' + @rfc + '' y plaza: '' + @plazaieepo+''.'',                      
      1,0,@id_Periodo_Transfer,0,0,0,2,0,@idDetalle);                      
                            
   insert into recalculo_periodos (Id_Calculo, Id_Periodo)                          
   Select top 24  @id_calculo, Id_Periodo From CalenNomina Where fechaini >= @desdep                       
   and fechafin <= @hasta                      
   and parcial = 0 and actualizado = 1 and id_cia = @Id_Cia;                      
                         
   insert into Recalculo_EmpleadosPeriodos (id_recalculo,id_periodo,id_emp,id_plazaCalcular,id_plazaComparar)                      
   Select top 24  @id_calculo, Id_Periodo, @idEmpleado, @idPlaza, @idPlaza  From CalenNomina Where fechaini >= @desdep                     
   and fechafin <= @hasta                      
   and parcial = 0 and actualizado = 1 and id_cia = @Id_Cia;                      
                     
                      
                      
 end                       
 Else -- borramos si algo truena                      
 Begin                      
  delete from recalculo_periodos where Id_Calculo in (select Id_Calculo from Recalculo_Calculo where Id_Detalle  = @idDetalle  )                       
  delete from Recalculo_EmpleadosPeriodos where id_recalculo in (select Id_Calculo from Recalculo_Calculo where Id_Detalle  = @idDetalle) and id_plazaCalcular = @idPlaza and id_emp = @idEmpleado                           
     delete from Recalculo_Calculo where Id_Detalle = @idDetalle                       
                        
 End                      
end     
    '
GO

GO
PRINT N'Creating [dbo].[SP_InsertaRedondeo]'
GO
IF OBJECT_ID(N'[dbo].[SP_InsertaRedondeo]', 'P') IS NULL
EXEC sp_executesql N'

CREATE Procedure [dbo].[SP_InsertaRedondeo] (      
  @ID_recalculo int  ,  -- Recalculo a generar    ,
  @Cantidad float  --- cantidad a insertar
)      
As        

delete from histpagos where id_periodo = 1111 and id_concepto = 2601 and id_referencia = @ID_recalculo

insert into histpagos (id_emp,id_periodo,id_concepto,consecutivo,horas,pesos,
fecha, pesosexcento,c_costo,id_plaza, id_referencia,id_periodopago,id_procesonomina,
desde, hasta)
Select x.id_emp,1111 as id_periodo,2601 as id_concepto,0 as consecutivo,0 as horas,@Cantidad as pesos,
getdate() as fecha,0 as pesosexcento,'''' as c_costo,x.id_plazacalcular as id_plaza, x.id_recalculo as id_referencia,
x.id_periodo as id_periodopago,2 as id_procesonomina,x.añoqna as desde, x.añoqna as hasta
from (
Select a.*,cast(c.año as varchar) + right(''00'' + cast(c.numero as varchar ),2) as AñoQna 
 from (recalculo_empleadosperiodos A inner join Calennomina C
on a.id_periodo = c.id_periodo)
inner join (
Select a.id_recalculo,max(cast(c.año as varchar) + right(''00'' + cast(c.numero as varchar ),2)) as AñoQna 
 from recalculo_empleadosperiodos A inner join Calennomina C
on a.id_periodo = c.id_periodo
group by a.id_recalculo ) D on D.id_recalculo = a.id_recalculo and 
D.Añoqna = cast(c.año as varchar) + right(''00'' + cast(c.numero as varchar ),2)
where c.parcial = 0 and c.id_cia = 2) X where X.id_recalculo = @ID_recalculo'
GO

GO
PRINT N'Creating [dbo].[dsv_SP_SacaHistPagosOtro]'
GO
IF OBJECT_ID(N'[dbo].[dsv_SP_SacaHistPagosOtro]', 'P') IS NULL
EXEC sp_executesql N'
CREATE PROCEDURE [dbo].[dsv_SP_SacaHistPagosOtro]      
(      
@idplaza int,      
@Idemp int,      
@idperiodo int,
@refere int         
)      
  with encryption
AS      
SET NOCOUNT ON      

declare @ODtbltmp table (
Id_Emp int, 
Id_Periodo int, 
id_concepto int, 
Consecutivo int, 
Horas float, 
Pesos float, 
Fecha smalldatetime, 
CC varchar(10), 
PesosExcento float, 
id_plaza int, 
Id_Referencia int,
id_periodoPago int, 
Id_ProcesoNomina int, 
Desde varchar(6), 
Hasta varchar(6), 
esHistoria bit, 
Fix bit)
declare @danio int = (select año from calennomina where Id_Periodo = @idperiodo )

--if @DAnio  = 2012 
--insert into @ODtbltmp 
  --select *  from [dep].dbo.Nom_histpagos_2012 where @idplaza  = id_plaza and @Idemp = id_emp 
--if @Danio = 2013
--insert into @ODtbltmp 
  --select *  from [dep].dbo.Nom_histpagos_2013 where @idplaza = id_plaza and @Idemp = id_emp 

insert into @ODtbltmp 
  select *  from Nom_histpagos where @idplaza = id_plaza and @Idemp = id_emp 
-- creacion de variable tipo tabla

 SELECT      
   a.id_concepto,a.Resultado as Clave, a.descripcion, b.Id_Emp, b.Id_Periodo, Cast(g.año as varchar(4)) + ''''+Right(''00''+Cast(g.numero as varchar(2)),2) as Periodo,Desde+'' ''+Hasta as Desde_Hasta, convert(varchar(12), cast(b.Pesos as money), 1) AS Importe      
      
 FROM      
   Conceptos a       
   INNER JOIN ConceptoRelEmpresa c      
   ON a.id_concepto = c.id_concepto       
   INNER JOIN      
            (SELECT     Id_Emp, id_concepto, Id_Periodo, id_plaza, Pesos ,Desde,Hasta, isnull(Id_Referencia,0)  Id_Referencia      
            FROM       HistPagosV      
            UNION ALL      
            SELECT     Id_Emp, id_concepto, Id_Periodo, id_plaza, Pesos ,Desde,Hasta, isnull(Id_Referencia,0)  Id_Referencia      
            FROM       @ODtbltmp)       
   AS b      
   ON a.id_concepto = b.id_concepto      
   inner join Empleados E    
   on E.id_emp = b.id_emp    
   inner join Plazas F    
   on F.id_plaza = b.id_plaza    
   Inner Join Calennomina G  
   on b.Id_Periodo=G.Id_periodo     
 WHERE      
   b.id_emp=@idemp and f.id_plaza=@idplaza AND b.id_periodo=@idperiodo and (c.id_razonsocial = 5) AND (a.Tipo = 3) AND (a.En_ListaRaya = 1) 
   --and b.Id_Referencia = @refere
 ORDER BY      
   A.descripcion      
         
SET NOCOUNT OFF      
'
GO

GO
PRINT N'Creating [dbo].[spf_Basificaciones_licencia]'
GO
IF OBJECT_ID(N'[dbo].[spf_Basificaciones_licencia]', 'P') IS NULL
EXEC sp_executesql N'
CREATE PROCEDURE [dbo].[spf_Basificaciones_licencia] (@id_documento AS INT, @fechaini AS DATE, @id_emp AS INT, @id_plaza AS INT, @accion AS BIT)
	WITH RECOMPILE
AS
BEGIN
	DECLARE @id_documento_loc AS INT = @id_documento
	DECLARE @accion_loc AS INT = @accion
	--spf_basificacion_en_licencia 1259644,''2015-09-16'',71648,23554,1
	--declare @id_documento as int=1259644   
	--declare @fechaini as date=''2015-09-16''    
	--declare @id_emp as int=71648    
	--declare @id_plaza as int=23554 
	DECLARE @id_usuario AS INT = (
			SELECT id_usuario
			FROM fup_documentos
			WHERE Id_Documento = @id_documento
			)
	DECLARE @id_nodo AS INT = (
			SELECT TOP 1 id_nodo
			FROM plazaempleados
			WHERE id_plaza = @id_plaza
				AND id_emp = @id_emp
				and fecha <= @fechaini
			ORDER BY fecha desc
			)
	DECLARE @id_detalle AS INT = (
			SELECT id_detalle
			FROM FUP_Documento_Detalle
			WHERE Id_Plaza = @id_plaza
				AND id_documento = @id_documento
				AND Id_MotivoMovimiento IN (47, 56)
			)

	declare @id_detalle_lic as int = (
		select id_detalle 
		from FUP_Documento_Detalle
		where Id_Documento = @id_documento_loc and
			Id_Plaza = @id_plaza and 
			Id_MotivoMovimiento in (44, 53) and
			FechaIni = @fechaini
	)

	if exists(
		select 1 
		from hplazas 
		where id_plaza = @id_plaza and 
			Id_TipoMovPlazas = 1 and 
			Valor_IdCampo = 10 and 
			Fecha = @fechaini
	)
	BEGIN
		update d set Valor = ''10''
		from FUP_MotivoMovimiento a
		join FUP_MotMovCampos b on a.Id_MotivoMovimiento = b.Id_MotivoMovimiento
		join FUP_DetalleCampos c on a.Id_MotivoMovimiento = c.Id_MotivoMovimiento 
		and b.Id_Formula = c.Id_Formula
		join FUP_ValorText d on c.Id_Valor = d.Id_Valor
		where a.clave = ''44'' and b.Descripcion like ''MotivoAnterior'' and d.Id_Documento = @id_detalle_lic
	END

	--select * from hplazas where Id_plaza=23554 and Fecha=@fechaini and Id_TipoMovPlazas=2 and Valor_IdCampo=1
	--select * from hplazas where Id_plaza=@id_plaza and Fecha=@fechaini and Id_TipoMovPlazas=1 and Valor_IdCampo=10
	IF (@accion_loc = 0)
	BEGIN
		IF (
				EXISTS (
					SELECT *
					FROM hplazas
					WHERE Id_plaza = @id_plaza
						AND Fecha = @fechaini
						AND Id_TipoMovPlazas = 1
						AND Valor_IdCampo = 10
					)
				)
		BEGIN
			INSERT INTO empalme_hplazas (Id_plaza, Fecha, Id_TipoMovPlazas, Valor_IdCampo, Id_User, Movimiento, Id, esHistoria, id_detalle)
			SELECT Id_plaza, Fecha, Id_TipoMovPlazas, valor_IdCampo, Id_User, Movimiento, Id, esHistoria, @id_detalle AS id_detalle
			FROM hplazas
			WHERE Id_plaza = @id_plaza
				AND Fecha = @fechaini
				AND Id_TipoMovPlazas = 1
				AND Valor_IdCampo = 10

			INSERT INTO empalme_hplazas (Id_plaza, Fecha, Id_TipoMovPlazas, Valor_IdCampo, Id_User, Movimiento, Id, esHistoria, id_detalle)
			SELECT Id_plaza, Fecha, Id_TipoMovPlazas, valor_IdCampo, Id_User, Movimiento, Id, esHistoria, @id_detalle AS id_detalle
			FROM hplazas
			WHERE Id_plaza = @id_plaza
				AND Fecha = @fechaini
				AND Id_TipoMovPlazas = 2
				AND Valor_IdCampo = 1

			DELETE
			FROM hplazas
			WHERE Id_plaza = @id_plaza
				AND Fecha = @fechaini
				AND Id_TipoMovPlazas = 2
				AND Valor_IdCampo = 1

			DELETE
			FROM hplazas
			WHERE Id_plaza = @id_plaza
				AND Fecha = @fechaini
				AND Id_TipoMovPlazas = 1
				AND Valor_IdCampo = 10

			INSERT INTO Empalme_PlazaEmpleados (Id_Emp, Id_plaza, Fecha, Id_User, Movimiento, id_nodo, Documentos, Id, id_plazaanterior, esHistoria, desliguePlaza, tipoHistoria, id_detalle)
			VALUES (@id_emp, @id_plaza, @fechaini, @id_usuario, GETDATE(), @id_nodo, '''', 0, 0, 0, 0, 0, @id_detalle)
		END
	END
	ELSE
	BEGIN
		IF (
				NOT EXISTS (
					SELECT *
					FROM hplazas
					WHERE Id_plaza = @id_plaza
						AND Fecha = @fechaini
						AND Id_TipoMovPlazas = 1
						AND Valor_IdCampo = 10
					)
				)
		BEGIN
			INSERT INTO hplazas (Id_plaza, Fecha, Id_TipoMovPlazas, Valor_IdCampo, Id_User, Movimiento, esHistoria, documentos)
			SELECT Id_plaza, Fecha, id_TipoMovPlazas, Valor_IdCampo, Id_User, Movimiento, esHistoria, '''' AS documentos
			FROM Empalme_HPlazas
			WHERE id_detalle = @id_detalle

			DELETE Empalme_HPlazas
			WHERE id_detalle = @id_detalle

			DELETE Empalme_plazaempleados
			WHERE id_detalle = @id_detalle
		END
	END
END
'
GO

GO
PRINT N'Creating [dbo].[D3DUCV3NQU1NG3N]'
GO
IF OBJECT_ID(N'[dbo].[D3DUCV3NQU1NG3N]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[D3DUCV3NQU1NG3N]
@qna varchar(6), @tiponom varchar(3), @idcia int
WITH EXEC AS CALLER
AS
set @idcia = case 
                when @tiponom = ''BAS'' then 2
                when @tiponom = ''UPN'' then 1
              end
select d.Id_Emp, d.id_plaza, e.RFC, isnull(pla.PlazaIEEPO, ''Plaza 0'') as Plaza_IEEPO, d.id_concepto, c.resultado as Concepto, d.Descuento as Monto, round(d.saldoincial, 2) as Saldo_inicial, round(d.SaldoActual, 2) as Saldo_actual, d.NumPeriodos as Periodos, d.NumPagos as Pagos, d.Plazo , CONVERT(VARCHAR(10),d.FechApl,111) as Fecha_aplicacion, dbo.fechaToAnioQuincena(d.FechApl) as Desde, dbo.SumarPlazosFecha(d.Fechapl,d.plazo) as Hasta , d.Status 
from DeducsFijas d
full join PlazaIEEPO pla on d.id_plaza = pla.Id_plaza
inner join Empleados e on e.Id_Emp = d.Id_Emp
inner join conceptos c on c.id_concepto = d.id_concepto
where e.Id_Cia = @idcia and d.Status in (''A'',''C'') and (plazo - dbo.PlazosDesdeHasta(dbo.fechaToAnioQuincena(d.fechapl) , @qna)) = 0
order by c.resultado, e.RFC, d.status'
GO

GO
PRINT N'Creating [dbo].[DCSFJS_V3N]'
GO
IF OBJECT_ID(N'[dbo].[DCSFJS_V3N]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROC  [dbo].[DCSFJS_V3N]  
@qna varchar(6),
@idcia int
as
select d.Id_Prestamo, d.Id_Emp, d.id_plaza, e.RFC, isnull(pla.PlazaIEEPO, ''Plaza 0'') as PlazaIEEPO, d.id_concepto, c.resultado, d.Descuento, d.saldoincial, d.SaldoActual, d.NumPeriodos, d.NumPagos, d.Plazo , d.FechApl, d.Status 
from DeducsFijas d
full join PlazaIEEPO pla on d.id_plaza = pla.Id_plaza
inner join Empleados e on e.Id_Emp = d.Id_Emp
inner join conceptos c on c.id_concepto = d.id_concepto
where d.Status in (''A'',''C'') and (plazo - dbo.PlazosDesdeHasta(dbo.fechaToAnioQuincena(d.fechapl) , @qna)) = 1 and e.id_cia = @idcia'
GO

GO
PRINT N'Creating [dbo].[spiDuplicaPeriodoHistPagosDetalle]'
GO
IF OBJECT_ID(N'[dbo].[spiDuplicaPeriodoHistPagosDetalle]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================  
-- Author:  wcahun   
-- Create date: 09/10/2013  
-- Description: procedimeinto para duplicar un periodo del hispagosdetalle  
-- =============================================  
CREATE PROCEDURE [dbo].[spiDuplicaPeriodoHistPagosDetalle]
@id_plaza int, @id_emp int, @id_periodo int, @id_recalculo int, @id_periodopago int, @id_periodoDestino int
WITH EXEC AS CALLER
AS
BEGIN  

declare @idPlaza int = @id_plaza
declare @idemp int = @id_emp
declare @idPeriodo int = @id_periodo
declare @idRecalculo int = @id_recalculo
declare @idPeriodoPago int = @id_periodopago
declare @idPeriodoDestino int = @id_periodoDestino


 if exists(select 1 from histpagosdetalle where   
    id_emp=@idemp and id_plaza=@idPlaza and id_periodo=@idPeriodo   
    and id_referencia=@idRecalculo and id_periodopago=@idPeriodoDestino)  
 begin  
  select ''Ya existen datos para el periodo de pago destino especificado''as resultado  
 end  
 else  
 begin  
  insert into histpagosdetalle (id_emp, id_periodo, id_concepto, consecutivo, horas, pesos, pesosexcento, id_plaza, id_referencia, id_periodopago, 
id_procesonomina, desde, hasta, id_plazapago, C_costo)  
  select id_emp, id_periodo,id_concepto, consecutivo, horas, pesos, pesosexcento, id_plaza, id_referencia, @idPeriodoDestino  
  ,id_procesonomina, 
  (select dbo.fechatoanioquincena(fechaini) from calennomina where id_periodo=@idPeriodoDestino) desde , 
  (select dbo.fechatoanioquincena(fechaini) from calennomina where id_periodo=@idPeriodoDestino) hasta , id_plazapago, C_costo  
   from histpagosdetalle  
  where id_emp=@idemp and id_plaza=@idPlaza and id_periodo=@idPeriodo and id_referencia=@idRecalculo and id_periodopago=@idPeriodoPago  
  
  select ''correcto'' as resultado  
 end  
  
  
END'
GO

GO
PRINT N'Creating [dbo].[sp_beneficiarios_UPN]'
GO
IF OBJECT_ID(N'[dbo].[sp_beneficiarios_UPN]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[sp_beneficiarios_UPN]
@fecha varchar(6), @agrupador int
WITH EXEC AS CALLER
AS



select tl.UDP, vl.Clave CT,
substring(e.rfc,1,10)+CASE WHEN tb.Id_concepto = 1718 THEN ''01'' 
                          ELSE CASE WHEN tb.Id_concepto = 1719 THEN ''02'' 
                            ELSE CASE WHEN tb.Id_concepto = 1720 THEN ''03'' 
                              ELSE ''00'' 
                              END 
                            END 
                          END AS RFC,
tb.Nombre + '' '' + tb.ApPaterno + '' '' + tb.ApMaterno AS NOMBRE,
SUBSTRING(e.RFC, 1, 10)    
                      + CASE WHEN tb.Id_concepto = 1718 THEN ''001'' 
                          ELSE CASE WHEN tb.Id_concepto = 1719 THEN ''002'' 
                            ELSE CASE WHEN tb.Id_concepto = 1720 THEN ''003'' 
                              ELSE ''000'' 
                              END 
                            END 
                          END + ''00000'' 
                       + CASE WHEN tb.Id_concepto = 1718 THEN ''001'' 
                          ELSE CASE WHEN tb.Id_concepto = 1719 THEN ''002'' 
                            ELSE CASE WHEN tb.Id_concepto = 1720 THEN ''003'' 
                              ELSE ''000'' 
                              END 
                            END 
                          END AS PLAZA ,
cn.TituloPeriodo TIPO_DE_PAGO , '''' DESDE, '''' HASTA, ''000000000'' CHEQUE, H.PESOS IMPORTE
from (
  select Id_Periodo, id_emp,id_plaza, id_concepto, id_agrupperiodos, sum(pesos) pesos 
  from HistPagos_Agrupadores 
  where id_agrupperiodos = @agrupador and id_concepto in (select id_concepto from conceptos where resultado in (''51'',''50'') and tipo = 3 and id_concepto not in (3057) )
  group by Id_Periodo, id_emp, id_plaza, id_concepto, id_agrupperiodos
) h
inner join TPrioridadPensionado tp on tp.Conceptos like ''%''+cast(h.id_concepto as varchar)+''%''
inner join rbeneficiario rb on rb.id_emp = h.id_emp
inner join TBeneficiario tb on tp.Conceptos like ''%''+cast(tb.id_concepto as varchar)+''%'' and tb.id_Beneficiario = rb.id_beneficiario
inner join empleados e on e.id_emp = h.id_emp
inner join calennomina cn on cn.id_periodo = h.id_periodo
inner join (
  Select a.id_plaza,a.id_emp,a.id_nodo 
  from plazaempleados A inner join ( select id_plaza, MAX(fecha) as maximo 
  from PlazaEmpleados 
  where Fecha <= dbo.anioQuincenaToFecha(@fecha, 1) group by id_plaza ) B on a.Id_plaza = b.Id_plaza and a.Fecha = b.maximo
) pe on pe.id_plaza = h.id_plaza and pe.id_emp = h.id_emp
inner join TablaLongitudProp_28 tl on tl.id_nodo = pe.id_nodo
inner join VistaTablaLongitud vl on vl.id_nodo = tl.id_nodo'
GO

GO
PRINT N'Creating [dbo].[D3DUCV3NQU1NXC0NC3P]'
GO
IF OBJECT_ID(N'[dbo].[D3DUCV3NQU1NXC0NC3P]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROC [dbo].[D3DUCV3NQU1NXC0NC3P]

@qna varchar(6),
@tiponom varchar(3),
@idcia int,
@concep varchar(2),
@idconcep int
AS

set @idcia = case 
                when @tiponom = ''BAS'' then 2
                when @tiponom = ''UPN'' then 1
              end
set @idconcep = (select id_concepto from conceptos where resultado = @concep and Tipo = 2 and descripcion like ''%''+@tiponom+''%'')
select d.Id_Emp, d.id_plaza, e.RFC, isnull(pla.PlazaIEEPO, ''Plaza 0'') as Plaza_IEEPO, d.id_concepto, c.resultado as Concepto, d.Descuento as Monto, round(d.saldoincial, 2) as Saldo_inicial, round(d.SaldoActual, 2) as Saldo_actual, d.NumPeriodos as Periodos, d.NumPagos as Pagos, d.Plazo , d.FechApl as Fecha_aplicacion, dbo.fechaToAnioQuincena(d.FechApl) as Desde, d.Status 
from DeducsFijas d
full join PlazaIEEPO pla on d.id_plaza = pla.Id_plaza
inner join Empleados e on e.Id_Emp = d.Id_Emp
inner join conceptos c on c.id_concepto = d.id_concepto
where e.Id_Cia = @idcia and d.Status in (''A'',''C'') and (plazo - dbo.PlazosDesdeHasta(dbo.fechaToAnioQuincena(d.fechapl) , @qna)) = 0 and d.id_concepto = @idconcep
order by c.resultado, e.RFC, d.status
'
GO

GO
PRINT N'Creating [dbo].[sp_plapagbeneficiarios_UPN]'
GO
IF OBJECT_ID(N'[dbo].[sp_plapagbeneficiarios_UPN]', 'P') IS NULL
EXEC sp_executesql N'CREATE proc [dbo].[sp_plapagbeneficiarios_UPN]
@fecha varchar(6),
@agrupador int
as
SELECT     TablaLongitudProp_28.UDP AS UD, TNivel3SE.clave AS CT, Empleados.RFC, Empleados.ApPaterno + '' '' + Empleados.ApMaterno + '' '' + Empleados.Nombre AS Nombre,   
                       plazaieepo.plazaieepo AS Plaza, CalenNomina.TituloPeriodo AS Tipo_de_Pago, SUM(HistPagos_Agrupadores_1.Pesos) AS Importe, '' '' AS Desde,    
                      '' '' AS Hasta, Netos.Pesos AS Liquido   
FROM         (SELECT     Id_Emp, id_AgrupPeriodos, Id_Periodo, id_plaza, sum(Pesos   ) as pesos
                       FROM          HistPagos_Agrupadores   
                       WHERE      (id_concepto IN (1721))  group by  Id_Emp, id_AgrupPeriodos, Id_Periodo, id_plaza) AS Netos INNER JOIN   
                      TablaLongitudProp_28 INNER JOIN   
                      Plazas INNER JOIN   
                      plazaieepo INNER JOIN   
                      TNivel3SE INNER JOIN   
                      TablaConfigOrgan INNER JOIN   
                      ( Select a.id_plaza,a.id_emp,a.id_nodo from plazaempleados A inner join ( select id_plaza, MAX(fecha) as maximo from PlazaEmpleados 
                      where Fecha <= dbo.anioQuincenaToFecha(@fecha, 1) group by id_plaza ) B on a.Id_plaza = b.Id_plaza and a.Fecha = b.maximo   )PlazaEmpleados INNER JOIN   
                      Empleados INNER JOIN   
                      T_AgrupPeriodos INNER JOIN   
                      RBeneficiario INNER JOIN   
                      TBeneficiario ON RBeneficiario.id_Beneficiario = TBeneficiario.id_Beneficiario INNER JOIN   
                      CalenNomina INNER JOIN (Select id_periodo,id_emp,MIN(id_concepto) as id_concepto,id_AgrupPeriodos,id_plaza,SUM(pesos) as pesos from HistPagos_Agrupadores 
                      where id_concepto in (1718,1719,2521) group by id_periodo,id_emp,id_AgrupPeriodos,id_plaza ) AS HistPagos_Agrupadores_1 ON CalenNomina.Id_Periodo = HistPagos_Agrupadores_1.Id_Periodo ON    
                      RBeneficiario.id_emp = HistPagos_Agrupadores_1.Id_Emp AND TBeneficiario.Id_concepto = HistPagos_Agrupadores_1.id_concepto ON    
                      T_AgrupPeriodos.id_AgrupPeriodos = HistPagos_Agrupadores_1.id_AgrupPeriodos ON Empleados.Id_Emp = RBeneficiario.id_emp ON    
                      PlazaEmpleados.Id_plaza = HistPagos_Agrupadores_1.id_plaza AND PlazaEmpleados.Id_Emp = RBeneficiario.id_emp ON    
                      TablaConfigOrgan.Id_Nodo = PlazaEmpleados.id_nodo ON TNivel3SE.id_Nivel3SE = TablaConfigOrgan.ValorCampoLLave ON    
                      plazaieepo.Id_plaza = HistPagos_Agrupadores_1.id_plaza ON Plazas.Id_plaza = HistPagos_Agrupadores_1.id_plaza ON    
                      TablaLongitudProp_28.id_nodo = TablaConfigOrgan.Id_Nodo ON Netos.Id_Emp = PlazaEmpleados.Id_Emp AND    
                      Netos.id_AgrupPeriodos = HistPagos_Agrupadores_1.id_AgrupPeriodos AND Netos.Id_Periodo = CalenNomina.Id_Periodo AND    
                      Netos.id_plaza = PlazaEmpleados.Id_plaza   
WHERE     (T_AgrupPeriodos.id_AgrupPeriodos = @agrupador) 
GROUP BY Empleados.RFC, Empleados.Nombre, Empleados.ApPaterno, Empleados.ApMaterno, T_AgrupPeriodos.Descr_AgrupPeriodos, TNivel3SE.clave, Empleados.RFC,    
                      T_AgrupPeriodos.Descr_AgrupPeriodos, TNivel3SE.clave, plazaieepo.plazaieepo, Plazas.Num_Plaza, TablaLongitudProp_28.UDP, Netos.Pesos,    
                      CalenNomina.TituloPeriodo   
ORDER BY Empleados.RFC'
GO

GO
PRINT N'Creating [dbo].[EMPR3UBCT]'
GO
IF OBJECT_ID(N'[dbo].[EMPR3UBCT]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROC [dbo].[EMPR3UBCT]

@qnaini varchar(6),
@qnafin varchar(6),
@nom varchar(3),
@idcia int
AS

set @idcia = case 
                when @nom = ''BAS'' then 2
                when @nom = ''UPN'' then 1
              end
select isnull(i.id_emp, f.id_emp) as Id_Emp, isnull(i.id_plaza, f.id_plaza) as Id_Plaza, e.rfc as Filiacion, p.plazaieepo as Plaza, isnull(i.id_nodo, 0) as id_nodoQI, isnull(i.clave, ''Sin relac.'') as CT_QI, isnull(f.id_nodo, 0) as id_nodoQF, isnull(f.clave, ''Sin relac.'') as CT_QF 
from (
    select pla.id_emp,pla.id_plaza,pla.id_nodo, v.Clave
    from PlazaEmpleados pla
    inner join(
      select id_plaza,Max(Fecha) as FechaMax 
    	from plazaEmpleados
    	where fecha <= dbo.anioQuincenaToFecha(@qnaini, 0)
    	group by id_plaza ) hp on pla.id_plaza = hp.id_plaza and hp.FechaMax = pla.Fecha
      inner join VistaTablaLongitud v on pla.id_nodo = v.id_nodo
    where pla.id_emp <> 0
) i
full join (
    select pla.id_emp,pla.id_plaza,pla.id_nodo, v.clave
    from PlazaEmpleados pla
    inner join(
      select id_plaza,Max(Fecha) as FechaMax 
    	from plazaEmpleados
    	where fecha <= dbo.anioQuincenaToFecha(@qnafin, 0)
    	group by id_plaza ) hp on pla.id_plaza = hp.id_plaza and hp.FechaMax = pla.Fecha
      inner join VistaTablaLongitud v on pla.id_nodo = v.id_nodo
    where pla.id_emp <> 0
) f on f.id_emp = i.id_emp and f.id_plaza = i.id_plaza
inner join plazaieepo p on p.id_plaza = isnull(i.id_plaza, f.id_plaza)
inner join empleados e on e.id_emp = isnull(i.id_emp, f.id_emp)
where e.id_cia = @idcia and i.id_nodo <> f.id_nodo
'
GO

GO
PRINT N'Creating [dbo].[SP_TxPlH]'
GO
IF OBJECT_ID(N'[dbo].[SP_TxPlH]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		David Santibañez Vargas
-- Create date: 3 de Junio de 2013
-- Description:	Señalar que plaza es Hija
-- =============================================
CREATE PROCEDURE [dbo].[SP_TxPlH]
	@_plaza varchar(21)
AS
BEGIN
	declare @plaza varchar(21) = @_plaza

   
	   select distinct id_plaza 
		into #plazas
		from plazaieepo 
		where PlazaIEEPO like @plaza

	  select #plazas.*  into #plazas2 from #plazas, hplazas where #plazas.id_plaza = hplazas.valor_idcampo
	  
		select ROW_NUMBER() over (order by id_plaza, fecha) row,
			   id_plaza, id_nodo, Id_Emp, Fecha
		into #hplazas_part 
		from plazaempleados 
		where id_plaza in (select id_plaza from #plazas)
		create index idx_hplzsp on #hplazas_part(id_plaza)

		select * into #hplazas from (
			select a.row, a.Id_plaza, a.Id_Emp, a.id_nodo, 
				   [dbo].[DateToQNA](a.Fecha) desde, [dbo].[DateToQNA](b.Fecha) hasta,
				   a.Fecha desde_f, b.Fecha hasta_f,
					case	
						when a.id_nodo <> b.id_nodo and a.Id_plaza = b.Id_plaza 
						then ''R''
						else ''''
					end reubica
			from #hplazas_part a left join #hplazas_part b
			on a.Id_plaza = b.Id_plaza and a.row = b.row - 1
		) x 
		create index idx_hplzs on #hplazas(id_plaza)

		select Id_plaza, Fecha, Valor_IdCampo stat_pla into #hstatus 
		from hplazas 
		where Id_TipoMovPlazas = 2 and Id_plaza in (select id_plaza from #plazas)
		create index idx_hstat on #hstatus(id_plaza)

		select Id_plaza, Fecha, Valor_IdCampo mot_pla into #hmotivos
		from hplazas 
		where Id_TipoMovPlazas = 1 and Id_plaza in (select id_plaza from #plazas)
		create index idx_hmot on #hmotivos(id_plaza)

		select ROW_NUMBER() over (order by a.id_plaza, a.fecha) row, 
			   a.Id_plaza, a.fecha, 
			   Right(''00'' + Cast(stat_pla as varchar(2)), 2) stat_pla, 
			   Right(''00'' + Cast(mot_pla as varchar(2)), 2) mot_pla
		into #hmovts_part
		from #hstatus a left join #hmotivos b 
		on a.Id_plaza = b.Id_plaza  and a.Fecha = b.Fecha
		create index idx_hmpart on #hmovts_part(id_plaza)

		select a.Id_plaza, a.stat_pla, a.mot_pla, 
			   [dbo].[DateToQNA](a.Fecha) desde,
			   [dbo].[DateToQNA](DATEADD(DD, -1, b.fecha)) hasta,
			   a.Fecha desde_f, DATEADD(DD, -1, b.fecha) hasta_f
		into #hmovimientos
		from #hmovts_part a left join #hmovts_part b on a.row = b.row -1 and a.id_plaza = b.id_plaza
		insert into #hmovimientos select id_plaza, ''13'' as stat_pla, ''71'' as mot_pla, hasta as desde, hasta, hasta_f as desde_f, hasta_f 
		from #hplazas where reubica = ''R'' 
		create index idx_hmovimientos on #hmovimientos(id_plaza)

		select distinct a.id_nodo, a.clave into #ctsdsv from vistatablalongitud a join  #hplazas b on a.id_nodo=b.id_nodo
		select distinct a.id_plaza, a.plazaieepo into #plzdsv from plazaieepo a join  #hplazas b on a.id_plaza=b.id_plaza


	if (select count(*) from #plazas2) > 0 

	  select  e.RFC, b.stat_pla STAT, b.mot_pla MOT, 
		case when b.mot_pla like ''[45][0-9]''
	  then b.desde
	  else a.desde 
	  end 
	  as DESDE, 
	  case when b.mot_pla like ''[45][0-9]''
	  then b.hasta
	  else a.hasta 
	  end 
	  as HASTA, C.clave CT, d.PlazaIEEPO PLAZA, a.Id_plaza, a.id_nodo, a.Id_Emp, 
	  (case when a.id_plaza = (select distinct id_plaza from #plazas2 where #plazas2.id_plaza = a.id_plaza ) then ''H'' else '' '' end) as Tipo
		from #hplazas a left join #hmovimientos b
		on a.Id_plaza = b.Id_plaza and b.desde between a.desde and (a.hasta )
		left join #ctsdsv c on a.id_nodo = c.id_nodo
		left join #plzdsv d on a.Id_plaza = d.Id_plaza
		left join empleados e on a.Id_Emp = e.Id_Emp  
		where e.RFC is not null and e.RFC not like ''''
		order by a.Id_plaza, a.desde
	  --select #plazas.*, (case when #plazas.id_plaza = (select id_plaza from #plazas2 where #plazas2.id_plaza = #plazas.id_plaza )  then ''H'' else ''P'' end) from #plazas  
	else
		select  e.RFC, b.stat_pla STAT, b.mot_pla MOT, 
		case when b.mot_pla like ''[45][0-9]''
	  then b.desde
	  else a.desde 
	  end 
	  as DESDE, 
	  case when b.mot_pla like ''[45][0-9]''
	  then b.hasta
	  else a.hasta 
	  end 
	  as HASTA, C.clave CT, d.PlazaIEEPO PLAZA, a.Id_plaza, a.id_nodo, a.Id_Emp 
		from #hplazas a left join #hmovimientos b
		on a.Id_plaza = b.Id_plaza and b.desde between a.desde and (a.hasta )
		left join #ctsdsv c on a.id_nodo = c.id_nodo
		left join #plzdsv d on a.Id_plaza = d.Id_plaza
		left join empleados e on a.Id_Emp = e.Id_Emp
		where e.RFC is not null and e.RFC not like ''''
		order by a.Id_plaza, a.desde


END
'
GO

GO
PRINT N'Creating [dbo].[sp_crea_ObtenPlazasPensionado]'
GO
IF OBJECT_ID(N'[dbo].[sp_crea_ObtenPlazasPensionado]', 'P') IS NULL
EXEC sp_executesql N'CREATE procedure [dbo].[sp_crea_ObtenPlazasPensionado] WITH ENCRYPTION as
begin
drop table x_BB
drop table x_PP2
drop table x_PP3
create table x_BB (id_plaza int,                
   id_Beneficiario int, id int IDENTITY(1,1))

select *,CHARINDEX('','',plazaspensionado,0) as mark into x_PP2 from x_PP

select top 0 * into x_PP3 from x_PP2
while exists(select * from x_PP2) 
begin
	insert into x_BB (id_plaza,id_Beneficiario) select plazaspensionado,id_Beneficiario from x_PP2 where mark=0 and len(plazaspensionado)>0
	delete from x_PP2 where mark=0
	if exists(select * from x_PP2)
		begin 
			insert into x_BB (id_plaza,id_Beneficiario) select left(plazaspensionado,mark-1),id_Beneficiario from x_PP2
			insert into x_PP3 (plazaspensionado,id_beneficiario,mark) select SUBSTRING(plazaspensionado,mark+1,1000) as plazaspensionado,id_beneficiario,case when CHARINDEX('','',plazaspensionado,mark+1)=0 then 0 else CHARINDEX('','',plazaspensionado,mark+1)-mark end as mark from x_PP2
			truncate table x_PP2
			insert into x_PP2 (plazaspensionado,id_beneficiario,mark) select plazaspensionado,id_beneficiario,mark from x_PP3
			truncate table x_PP3
		end
end
while exists(select max(id) from x_bb group by id_plaza,id_beneficiario having count(1)>1)
begin 
delete from x_bb where id in (select max(id) from x_bb group by id_plaza,id_beneficiario having count(1)>1)
end
truncate table DPlazasPensionados
insert into DPlazasPensionados (id_plaza , id_Beneficiario ) select id_plaza , id_Beneficiario  from x_BB
end'
GO

GO
PRINT N'Creating [dbo].[SP_SPl]'
GO
IF OBJECT_ID(N'[dbo].[SP_SPl]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		DAVID SANTIBANEZ VARGAS
-- Create date: ENERO 2013
-- Description:	PLAZAS
-- =============================================
CREATE PROCEDURE [dbo].[SP_SPl]
	-- Add the parameters for the stored procedure here
	(        
 @Idemp int = 0,      
 @IdStatus varchar = 0,      
 @Fecha DateTime = 0      
)   
with encryption      
AS        
SET NOCOUNT ON        
BEGIN
select distinct pik.PlazaIEEPO as plaza, Right(''00'' + cast(piko.tipo as varchar(2)),2) as tipo, piko.motivo, 
case when piko.motivo like ''[45][0-9]''
then piko.Hdesde
else piko.desde 
end 
as desde, 
case when piko.motivo like ''[45][0-9]''
then piko.Hhasta 
else piko.hasta 
end 
as hasta,
TLP28.UDP as ud, I.nivel as [Sueldo Base], K.descripcion as Nivel_Pago,
cts.clave as CT, cts2.descripcion as CT_Nombre, dsv1.Folio,  piko.Id_plaza,  piko.Id_Emp   
into #chingatumadre
from 
(select q1.Id_plaza, Id_Emp, q1.desde, q1.hasta, estatus as tipo, motivo, q1.id_nodo, qr2.desde as Hdesde , qr2.hasta  as Hhasta    from
(select * from 
(
select x.id_plaza, x.id_emp, x.id_nodo, 
	cast( year(x.Fecha) as varchar) + ''''+ Right(''00'' + Cast(case when(day(x.Fecha)>15)then month(x.Fecha)*2 else (month(x.Fecha)*2)-1 end as Varchar(2)),2) as desde, 
	cast( year(ISNULL(y.Fechax,''9999-12-31'')) as varchar) + ''''+ Right(''00'' + Cast(case when(day(ISNULL(y.Fechax,''9999-12-31''))>15)then month(ISNULL(y.Fechax,''9999-12-31''))*2 else (month(ISNULL(y.Fechax,''9999-12-31''))*2)-1 end as Varchar(2)),2) as hasta,
	(case 
	 when y.id_nodo is null or y.id_nodo = x.id_nodo or x.Id_Emp <> y.Id_Emp  then ''-'' 
	 else '''' end) mov
from      
(select ROW_NUMBER() over (order by id_plaza,a.fecha) row, a.* from plazaempleados a 
where id_plaza in (
	select id_plaza from plazaempleados where Id_Emp = @Idemp
) ) x left join
(select (ROW_NUMBER() over (order by id_plaza,a.fecha) - 1)row, a.*, DATEADD(DD, -1, a.fecha) fechax from plazaempleados a 
where id_plaza in (
	select id_plaza from plazaempleados where Id_Emp = @Idemp
) ) y
on x.row = y.row and x.id_plaza = y.id_plaza

)as qry1 where id_emp = @Idemp 
 )
 q1
join 

(
	select x.Id_plaza, x.estatus, x.motivo, 
	cast( year(x.Fecha) as varchar) + ''''+ Right(''00'' + Cast(case when(day(x.Fecha)>15)then month(x.Fecha)*2 else (month(x.Fecha)*2)-1 end as Varchar(2)),2) as desde, 
	cast( year(ISNULL(y.Fecha,''9999-12-31'')) as varchar) + ''''+ Right(''00'' + Cast(case when(day(ISNULL(y.Fecha,''9999-12-31''))>15)then month(ISNULL(y.Fecha,''9999-12-31''))*2 else (month(ISNULL(y.Fecha,''9999-12-31''))*2)-1 end as Varchar(2)),2) as hasta
from 
(select row_number() over (order by a.id_plaza, a.fecha) row, a.Id_plaza, a.Valor_IdCampo estatus, b.Valor_IdCampo motivo, a.fecha fecha from (select * from hplazas where Id_TipoMovPlazas = 2) a 
left join (select * from hplazas where Id_TipoMovPlazas = 1) b on a.Fecha = b.Fecha and a.Id_plaza = b.Id_plaza
where a.Id_plaza in (
	select id_plaza from plazaempleados where Id_Emp = @Idemp
) and a.Valor_IdCampo <> 13 and not (a.Valor_IdCampo = 4 and b.Valor_IdCampo = 71)
) x
left join
(select (row_number() over (order by a.id_plaza,a.fecha) -1 )row, a.Id_plaza, a.Valor_IdCampo estatus, b.Valor_IdCampo motivo, DATEADD(DD, -1, a.fecha) fecha from 
(select * from hplazas where Id_TipoMovPlazas = 2) a 
left join (select * from hplazas where Id_TipoMovPlazas = 1) b on a.Fecha = b.Fecha and a.Id_plaza = b.Id_plaza
where a.Id_plaza in (
	select id_plaza from plazaempleados where Id_Emp = @Idemp
 )and a.Valor_IdCampo <> 13 and not (a.Valor_IdCampo = 4 and b.Valor_IdCampo = 71)
) y
on x.row = y.row and x.Id_plaza = y.Id_plaza
) qr2 
on q1.Id_plaza = qr2.id_plaza
where (CAST(qr2.desde as int) <= cast(q1.hasta as int)) and (CAST(qr2.desde as int) >= cast(q1.desde as int))) as piko
Left Join PlazaIEEPO Pik      
 on piko.Id_plaza=Pik.Id_plaza    
join Ct_nodo$ cts on cts.id_nodo =   piko.id_nodo
join TNivel3SE cts2 on cts.clave = cts2.clave 
left join    (select  a.folio, a.id_emp, b.id_plaza from FUP_Documentos a inner join FUP_Documento_Detalle b
on a.Id_Documento = b.Id_Documento and a.Id_Emp = @Idemp) dsv1
on piko.Id_plaza = dsv1.Id_Plaza 
left join (  
            Select distinct b.Id_plaza,a.Id_Tabulador_se_cm ,a.Nivel,a.Descripcion,b.Fecha From Ttabulador_se_cm a Inner join htabulador_se_cm b on a.Id_Tabulador_se_cm=b.Id_rel  
            ) I        
            on pik.Id_plaza=I.Id_plaza 
			and cast(dbo.datetoqna(I.fecha) as int) <= CAST(piko.hasta as int)  and CAST(piko.desde as int) >= cast(dbo.datetoqna(I.fecha) as int)
			
 left join (  
            Select  b.Id_plaza,a.id_tabulador_se_nivel_pago,a.Nivel,a.Descripcion,b.Fecha From Ttabulador_se_nivel_pago a Inner join htabulador_se_nivel_pago b on a.Id_tabulador_se_nivel_pago=b.Id_rel  
            ) K       
            on pik.id_plaza=K.Id_plaza  
            
            Left Join TablaLongitudProp_28 TLP28       
 on piko.id_nodo =TLP28.id_nodo   
 group by piko.desde, piko.id_plaza, pik.PlazaIEEPO, piko.tipo, piko.motivo, piko.hasta, TLP28.UDP, I.nivel, K.descripcion, cts.clave, cts2.descripcion, piko.Id_Emp, piko.Hdesde, piko.Hhasta, dsv1.Folio     
 select * from #chingatumadre order by desde, id_plaza

 END
 '
GO

GO
PRINT N'Creating [dbo].[spf_adscripcion_nombramiento]'
GO
IF OBJECT_ID(N'[dbo].[spf_adscripcion_nombramiento]', 'P') IS NULL
EXEC sp_executesql N'create procedure [dbo].[spf_adscripcion_nombramiento](            
@folio as varchar(18)       
)   
as
--declare @folio as varchar(18)=''027/19''  
begin
declare @curp as varchar(18)=(select e.curp from fup_documentos fd with(nolock)
                              inner join empleados e with(nolock) on fd.id_emp=e.id_emp
							  where fd.folio=@folio)
declare @nombre as varchar(250)=(select (rtrim(e.nombre) + '' '' + rtrim(e.appaterno) + '' '' + rtrim(e.apmaterno)) ''NOMBRE'' from fup_documentos fd with(nolock)
                              inner join empleados e with(nolock) on fd.id_emp=e.id_emp
							  where fd.folio=@folio)

declare @clave_pres as varchar(250)=(select stuff(( select '' '' +p.plazaieepo+ '' , '' from fup_documentos fd with(nolock)
                                     inner join fup_documento_detalle fdd with(nolock) on fd.id_documento=fdd.id_documento
			                         inner join plazaieepo p with(nolock) on fdd.id_plaza=p.id_plaza
			                         where folio=@folio for xml path('''')),1,1,'''') as plaza)

declare @nombramiento as varchar(200)=(select top 1 fmm.descripcion from fup_documentos fd with(nolock)
                                       inner join fup_documento_detalle fdd with(nolock) on fd.id_documento=fdd.id_documento
                                       inner join fup_motivomovimiento fmm with(nolock) on fdd.id_motivomovimiento=fmm.id_motivomovimiento
                                       where fd.folio=@folio)

declare @vigencia  as datetime=(select top 1 fdd.fechaini from fup_documentos fd with(nolock)
                                inner join fup_documento_detalle fdd with(nolock) on fd.id_documento=fdd.id_documento
                                inner join fup_motivomovimiento fmm with(nolock) on fdd.id_motivomovimiento=fmm.id_motivomovimiento
                                where fd.folio=@folio)

declare @nombre_ct as varchar(200)=(select vt.descripcion from fup_documentos fd with(nolock)
                                    inner join fup_informacion_documentos fid with(nolock) on fd.id_documento=fid.id_documento
									inner join vistatablalongitud vt with(nolock) on fid.centro_trabajo=vt.clave
                                    where fd.folio=@folio)

declare @ct as varchar(200)=(select fid.centro_trabajo from fup_documentos fd with(nolock)
                                    inner join fup_informacion_documentos fid with(nolock) on fd.id_documento=fid.id_documento
									where fd.folio=@folio)

declare @titular as varchar(200)=(select titular from fup_nombra_adscripcion)

declare @cargo as varchar(200)=(select cargo from fup_nombra_adscripcion)

declare @domicilio_ct as varchar(200)=(select b.direccion_ct from vistatablalongitud a with (nolock)
									   inner join tablalongitudprop_28 b with (nolock) on a.id_nodo=b.id_nodo
									   where a.clave=@ct)

declare @localidad_ct as varchar(200)=(select c.des_loc_ct from vistatablalongitud a with (nolock)
                                       inner join rct_localidad b with (nolock) on a.id_nodo=b.id_nodo
                                       inner join tct_localidad c  with (nolock) on b.id_rel=c.id_ct_localidad
                                       where a.clave=@ct)

declare @municipio_ct as varchar(200)=(select d.descr from vistatablalongitud a with (nolock)
                                       inner join rct_localidad b with (nolock) on a.id_nodo=b.id_nodo
                                       inner join tct_localidad c  with (nolock) on b.id_rel=c.id_ct_localidad
									   inner join tciudad d with (nolock) on c.id_municipio=d.id_ciudad
                                       where a.clave=@ct)

declare @region_ct as varchar(200)=(select upper(c.descrip) from vistatablalongitud a with (nolock)
									inner join rct_region b with (nolock) on a.id_nodo=b.id_nodo
									inner join tct_region c  with (nolock) on b.id_rel=c.id_ct_region
									where a.clave=@ct)

declare @categoria as varchar(10)=(select top 1 ltrim(p.categoria)  from fup_documentos fd with(nolock)
                                   inner join fup_documento_detalle fdd with(nolock) on fd.id_documento=fdd.id_documento
                                   inner join plazaieepo p with(nolock) on fdd.id_plaza=p.id_plaza
                                   where fd.folio=@folio)
								   				   
declare @funcion as varchar(40)=case 
								when @categoria in (''E0119'',''E0120'',''E0121'',''E0125'',''E0219'',''E0220'',''E0221'',''E0222'',''E0223'',''E0224'',
								                    ''E0226'',''E0240'',''E0241'',''E0320'',''E0321'',''E0325'',''E0326'',''E0327'',''E0340'',''E0341'',
                                                    ''E0344'',''E0345'',''E0420'',''E0421'',''E0440'',''E0441'',''E0541'',''E0621'',''E0622'',''E0627'', 
                                                    ''E0629'',''E0630'',''E0631'',''E0723'',''E0740'',''E0820'',''E0822'',''E0825'',''E0827'',''E0843'',
                                                    ''E0924'',''E0925'',''E0927'',''E0928'',''E0929'',''E0940'',''E0941'',''E0942'',''E0943'',''E0945'', 
                                                    ''E1020'',''E1022'',''E1024'',''E1025'',''E1026'',''E1028'',''E1030'',''E1032'',''E1034'',''E1040'',
                                                    ''E1042'',''E1044'',''E1046'',''E1048'',''E1120'',''E1221'',''E1421'',''E1445'',''E1483'',''E1484'',
                                                    ''E1524'',''E1525'',''E2724'',''E2725'',''H1035'',''H1045'',''H1080'',''H1130'',''H1135'',''H1155'',
                                                    ''T1045'',''T1050'',''T1160'',''T1300'',''T1365'',''T1370'',''E0941'',''E0101'',''E0213'',''E0103'',
                                                    ''E0105'',''E0107'',''E0113'',''E0201'',''E0203'',''E0301'',''E0401'',''E0409'',''E0701'',''E1482'',
                                                    ''E1501'',''E1303'',''E1401'',''E1403'',''E1481'',''E2711'',''EH1015'') then ''DIRECTOR''
                                 
								when @categoria in (''E0524'',''E0205'',''E0209'',''E0350'',''E0351'',''E0358'',''E0451'',''E0931'',''E0933'',''E0633'',
								                    ''E0635'',''E1447'',''E1503'',''E2709'',''E1511'',''E1305'',''E1411'') then ''SUPERVISOR''

								else ''DOCENTE'' END

declare @ciclo_esc as varchar(20)=(select ciclo_escolar from fup_ciclo_escolar)

select @curp as curp,@nombre as nombre,@funcion as funcion,@ciclo_esc as ciclo_escolar,@nombramiento as nombramiento,@clave_pres as claves,@vigencia as vigencia,@nombre_ct as nombre_ct,
@ct as ct,@titular as titular,@cargo as cargo,@domicilio_ct as domicilio_ct,@localidad_ct as localidad_ct,@municipio_ct as municipio_ct
,@region_ct as region_ct

end'
GO

GO
PRINT N'Creating [dbo].[SP_AddRetros]'
GO
IF OBJECT_ID(N'[dbo].[SP_AddRetros]', 'P') IS NULL
EXEC sp_executesql N'CREATE procedure [dbo].[SP_AddRetros] 
	@num_emp int, @num_plaza int, @id_ref int,
	@ps_pago varchar(max) = '''',
	@u as varchar(max) = ''''
with encryption
as
begin tran
	if(@u = ''514m3l4p3l4'')
	begin	
		if(@num_emp is not null and @num_plaza is not null and @id_ref is not null and @ps_pago is not null)
		begin
		
			declare @id_emp int = (select id_emp from empleados where noempx = @num_emp)
			declare @id_plaza int = (select id_plaza from Plazas where num_plaza = @num_plaza)
			declare @ps int = (select count(*) from dep..fn_Split(@ps_pago,'','') ),
					@p int = 1

			IF OBJECT_ID(N''tempdb..#tmp_res'') IS NOT NULL Drop table #tmp_res;
			select * 
			into #tmp_res
			from IEEPO..histpagosdetalle
			where 1 = 0

			while (@p <= @ps)
			begin
				declare @id_pactual int = (select value from dep..fn_Split(@ps_pago,'','') where position = @p)
	
				insert into #tmp_res (
					id_emp, id_periodo, id_concepto, consecutivo, horas, pesos, pesosexcento, id_plaza, id_referencia, 
					id_periodopago, id_procesonomina, desde, hasta, id_plazapago
				)
				select
					id_emp, a.id_periodo, id_concepto, consecutivo, horas, pesos, pesosexcento, id_plaza, id_referencia, 
					@id_pactual id_periodopago, id_procesonomina, ieepo.dbo.DateToQNA(b.fechaini) desde, 
					ieepo.dbo.DateToQNA(b.fechafin) hasta, id_plazapago
				from 
					ieepo..histpagosdetalle a join ieepo..CalenNomina b
					on b.Id_Periodo = @id_pactual
				where 
					id_emp = @id_emp and id_plaza = @id_plaza
					and a.id_referencia = @id_ref
					and a.id_periodopago = IsNull( 
						(
							select MAX(c.id_periodopago) 
							from 
								ieepo..HistPagosDetalle c join ieepo..CalenNomina d
								on c.id_periodopago = d.id_periodo
								join ieepo..conceptos e
								on c.id_concepto = e.id_concepto
							where 
								c.id_emp = @id_emp and c.id_plaza = @id_plaza
								and c.id_periodopago < @id_pactual and e.tipo in (1,2)
								and c.id_referencia = @id_ref and d.Parcial = 0
						),
						(
							select Min(c.id_periodopago) 
							from 
								ieepo..HistPagosDetalle c join ieepo..CalenNomina d
								on c.id_periodopago = d.id_periodo
								join ieepo..conceptos e
								on c.id_concepto = e.id_concepto
							where 
								c.id_emp = @id_emp and c.id_plaza = @id_plaza
								and c.id_periodopago >= @id_pactual and e.tipo in (1,2)
								and c.id_referencia = @id_ref and d.Parcial = 0
						)
					)
				set @p += 1
			end

	/**
	*		Conceptos inexistentes
	*		en la tabla histpagosdetalle
	**/
			insert into ieepo..histpagosdetalle (
					id_emp, id_periodo, id_concepto, consecutivo, horas, pesos, pesosexcento, id_plaza, id_referencia, 
					id_periodopago, id_procesonomina, desde, hasta, id_plazapago
			)
			select 
				a.id_emp, a.id_periodo, a.id_concepto, a.consecutivo, a.horas, a.pesos, 
				a.pesosexcento, a.id_plaza, a.id_referencia, a.id_periodopago, 
				a.id_procesonomina, a.desde, a.hasta, a.id_plazapago 
			from #tmp_res a left join ieepo..histpagosdetalle b
			on 
				a.id_emp = b.id_emp 
				and a.id_plaza = b.id_plaza
				and a.id_periodopago = b.id_periodopago
				and a.id_concepto = b.id_concepto
				and a.id_referencia = b.id_referencia
			where
				a.id_emp = @id_emp and a.id_plaza = @id_plaza
				and a.id_referencia = @id_ref
				and b.id_emp is null

			delete
			from ieepo..histpagosdetalle
			where
				id_emp = @id_emp and id_plaza = @id_plaza and id_referencia = @id_ref
				and id_periodopago in (select value from dep..fn_Split(@ps_pago,'',''))
				and id_concepto = 1789
		end

		declare @liquido decimal(38,2) = (
			select sum ( 
				case b.tipo
					when 1 then cast( cast(pesos as varchar(max) ) as decimal(38,2) )
					when 2 then cast( cast(pesos as varchar(max) ) as decimal(38,2) ) * -1
				End
			) from ieepo..HistPagosdetalle a join ieepo..conceptos b
			on a.id_concepto = b.id_concepto
			where 
				a.id_emp = @id_emp and a.id_plaza = @id_plaza and a.id_referencia = @id_ref
				and b.tipo in (1,2)
				and a.id_concepto <> 2601
		)

		update ieepo..histpagosdetalle set pesos = ( @liquido - ROUND(@liquido,0,1) )
		where id_emp = @id_emp and id_plaza = @id_plaza and id_referencia = @id_ref and id_concepto = 2601

		IF (@@ERROR <> 0) BEGIN
			PRINT ''Unexpected error occurred!''
			ROLLBACK TRAN
			RETURN 1
		END
	end
	else print ''513r356dp3l45''
commit tran
return 0'
GO

GO
PRINT N'Creating [dbo].[sp_RespaldaNomproCto]'
GO
IF OBJECT_ID(N'[dbo].[sp_RespaldaNomproCto]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		Noe Ramirez Ramos
-- Create date: 22/10/2013
-- Description:	respalda nompro y cto actual a la base dep
-- =============================================
CREATE PROCEDURE [dbo].[sp_RespaldaNomproCto] 
	-- Add the parameters for the stored procedure here
	--@periodo int, 
	@agrupador int
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	insert into dep.dbo.nomprosbasica (id_emp, id_plaza, id_periodo, id_referencia, id_procesonomina, tippag, ud, ct, plaza, puesto, stapla, motivo, RFC, curp, nombre, ingsep, sexo, cheque, qnapago, desde, hasta, liquido, pagele, pro, spro, Car_pd, Nunico, Trailer, Punteror, id_agr)
	select  id_emp, id_plaza, id_periodo, id_referencia, id_procesonomina, tippag, ud, ct, plaza, puesto, stapla, motivo, RFC, curp, nombre, ingsep, sexo, cheque, qnapago, desde, hasta, liquido, pagele, pro, spro, Car_pd, Nunico, Trailer, Punteror, @agrupador id_agr 
	from nompro
	insert into dep.dbo.ctosbasica (id_emp, id_plaza, id_periodo, cheque, concepto, signo, importe, perded, Desde, Hasta, pro, spr, tippag, punteror, car_pd, id_agr)
	select id_emp, id_plaza, id_periodo, cheque, concepto, signo, importe, perded, Desde, Hasta, pro, spr, tippag, punteror, car_pd, @agrupador id_agr 
	from cto



END
'
GO

GO
PRINT N'Creating [dbo].[spiInsertaPlaza]'
GO
IF OBJECT_ID(N'[dbo].[spiInsertaPlaza]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[spiInsertaPlaza]
@plaza varchar(30), @desde varchar(6), @hasta varchar(6), @nivpago int, @catego varchar(7), @CM varchar(2), @foliocrea varchar(15), @stat_pla int, @mot_pla int, @ct varchar(20)
WITH EXEC AS CALLER
AS
BEGIN
BEGIN TRANSACTION
BEGIN TRY

	declare @_plaza varchar(30) = @plaza
	declare @_desde varchar(6) = @desde
	declare @_hasta varchar(6) = @hasta
	declare @_nivpago int = @nivpago
	declare @_catego varchar(6) = @catego
	declare @_CM varchar(2) = @CM
	declare @_foliocrea varchar(15) = @foliocrea
	declare @_stat_pla int = @stat_pla
	declare @_mot_pla int = @mot_pla
	declare @_ct varchar(20) = @ct

-----
 if (select top 1 1 from Plazas_Autorizadas where PlazaIEEPO = @plaza or @plaza like ''%AB001%'' ) is not null 
 begin
	declare @id_plaza_nvo int;
	declare @num_plaza_nvo int;

	if (select top 1 1 from PlazaIEEPO where PlazaIEEPO = @_plaza ) is null
	begin

		set @id_plaza_nvo= (select max(id_plaza)+1 from plazas)
		set @num_plaza_nvo= (select contador+1 from UltimoControl WHERE TABLA=''PLAZAS'')

		update UltimoControl

		set Contador=@num_plaza_nvo where tabla=''PLAZAS''

			Insert Into Plazas(Id_Plaza,Num_Plaza,Id_EmpProp,Id_Emp,Id_EmpAnt,FechaCreacion,FechaVencimiento,DineroPresupuestado,DineroPagado,HorasPresupuestadas,HorasPagadas,Orden) 
			SELECT @id_plaza_nvo, @num_plaza_nvo,0,0,0,dbo.anioQuincenaToFecha(@desde,0),dbo.anioQuincenaToFecha(@hasta,1),0,0,0,0,0

		 Insert Into HPartida(Id_Plaza,Partida,Fecha,Id_User,Movimiento) 
		 SELECT @id_plaza_nvo, cast(''11'' + substring(@plaza,1,2) as int),dbo.anioQuincenaToFecha(@desde,0),116,dbo.anioQuincenaToFecha(@desde,0)

		Insert Into HUnidad(Id_Plaza,Unidad,Fecha,Id_User,Movimiento) 
		SELECT @id_plaza_nvo,cast(substring(@plaza,3,2) as int),dbo.anioQuincenaToFecha(@desde,0),116,dbo.anioQuincenaToFecha(@desde,0)

		Insert Into HSubUnidad(Id_Plaza,SubUnidad,Fecha,Id_User,Movimiento) 
		SELECT @id_plaza_nvo,cast(substring(@plaza,5,2) as int),dbo.anioQuincenaToFecha(@desde,0),116,dbo.anioQuincenaToFecha(@desde,0)

		Insert Into HHoras(Id_Plaza,horas,Fecha,Id_User,Movimiento) 
		SELECT @id_plaza_nvo,case when cast(substring(@plaza,13,3) as float)>0 then
			cast(substring(@plaza,13,3) as float)/10
		else 0
		end,dbo.anioQuincenaToFecha(@desde,0),116,dbo.anioQuincenaToFecha(@desde,0)

		Insert Into HDiagonal(Id_Plaza,Diagonal,Fecha,Id_User,Movimiento) 
		SELECT @id_plaza_nvo,substring(@plaza,16,6),dbo.anioQuincenaToFecha(@desde,0),116,dbo.anioQuincenaToFecha(@desde,0)

		Insert Into htabulador_se_nivel_pago(Id_Plaza,id_rel,Fecha,Id_User,Movimiento) 
		SELECT @id_plaza_nvo,@nivpago,dbo.anioQuincenaToFecha(@desde,0),116,dbo.anioQuincenaToFecha(@desde,0)

		Insert Into hnivelplazas(Id_Plaza,id_rel,Fecha,Id_User,Movimiento) 
		SELECT @id_plaza_nvo,0,dbo.anioQuincenaToFecha(@desde,0),116,dbo.anioQuincenaToFecha(@desde,0)

		Insert Into hpuestosplazas(Id_Plaza,id_rel,Fecha,Id_User,Movimiento) 
		SELECT @id_plaza_nvo,0,dbo.anioQuincenaToFecha(@desde,0),116,dbo.anioQuincenaToFecha(@desde,0)

		Insert Into HTipo_Seg_Social(Id_Plaza,id_rel,Fecha,Id_User,Movimiento) 
		SELECT @id_plaza_nvo,1,dbo.anioQuincenaToFecha(@desde,0),116,dbo.anioQuincenaToFecha(@desde,0)

		declare @idRegul int;
		set @idRegul=(select id_regularizacion from TRegularizacion where TRegularizacion.Descripcion=''SI'')

		if @idRegul is null
		  RAISERROR (''No se encuentra el valor de la regularización'', 16,1);

		INSERT INTO [HRegularizacion]([id_plaza],[id_rel],[fecha],[id_user],[movimiento])
		select @id_plaza_nvo,@idRegul, dbo.anioQuincenaToFecha(@desde,0),116,dbo.anioQuincenaToFecha(@desde,0)

		set @catego= (select top 1 puecat from puecat_0908 where catego like ''%''+ltrim(@catego)+''%'')
		declare @idTabulador int;

		--set @idTabulador = (select top 1 id_Tabulador_SE_Cat_Puesto from 
		--TTabulador_SE_Cat_Puesto b where  b.categoria like ''%''+ltrim(@catego)+''%'' and b.TModelo_SE_id_Modelo_SE not in (7))

		set @idTabulador = (select top 1 id_Tabulador_SE_Cat_Puesto from 
		TTabulador_SE_Cat_Puesto b where  b.categoria like ''%''+ltrim(rtrim(@catego))+''%'' and b.TModelo_SE_id_Modelo_SE not in (7))

		if @idTabulador is null
		  RAISERROR (''No se encuentra el valor del tabulador para la categoria'', 16,1);

		Insert Into HTabulador_SE_Cat_Puesto(Id_Plaza,Id_Rel,Fecha,Id_User,Movimiento) 
		select @id_plaza_nvo,@idTabulador, dbo.anioQuincenaToFecha(@desde,0), 116, dbo.anioQuincenaToFecha(@desde,0)

		declare @id_Tabulador_SE_CM int;
		set @id_Tabulador_SE_CM= (select TTabulador_SE_CM.id_Tabulador_SE_CM from TTabulador_SE_CM where  TTabulador_SE_CM.Nivel=@CM)

		if @id_Tabulador_SE_CM is null
		  RAISERROR (''No se encuentra el valor de la carrera magisterial'', 16,1);

		INSERT INTO [HTabulador_SE_CM]([id_plaza],[id_rel],[fecha],[id_user],[movimiento])
		select  @id_plaza_nvo,@id_Tabulador_SE_CM,dbo.anioQuincenaToFecha(@desde,0),116,dbo.anioQuincenaToFecha(@desde,0)

		INSERT INTO [HOficioAfectacionCreacion]([id_plaza],[OficioAfectacionCreacion],[fecha],[id_user],[movimiento])
		select @id_plaza_nvo, @foliocrea, dbo.anioQuincenaToFecha(@desde,0), 116, dbo.anioQuincenaToFecha(@desde,0)

		INSERT INTO [dbo].[HPlazas] ([Id_plaza],[Fecha],[Id_TipoMovPlazas],[Valor_IdCampo],[Id_User],[Movimiento],[esHistoria])
		select @id_plaza_nvo,dbo.anioQuincenaToFecha(@desde,0),2 id_tipomovplazas,@stat_pla valor_idcampo, 116 usuario, dbo.anioQuincenaToFecha(@desde,0),1

		INSERT INTO [dbo].[HPlazas] ([Id_plaza],[Fecha],[Id_TipoMovPlazas],[Valor_IdCampo],[Id_User],[Movimiento],[esHistoria])
		select @id_plaza_nvo,dbo.anioQuincenaToFecha(@desde,0),1 id_tipomovplazas,@mot_pla valor_idcampo, 116 usuario, dbo.anioQuincenaToFecha(@desde,0),1

		if @mot_pla=20
		begin 
  		INSERT INTO [dbo].[HPlazas] ([Id_plaza],[Fecha],[Id_TipoMovPlazas],[Valor_IdCampo],[Id_User],[Movimiento],[esHistoria])
  		select @id_plaza_nvo,dbo.anioQuincenaToFecha(@HASTA,1),2 id_tipomovplazas,3 valor_idcampo, 116 usuario, dbo.anioQuincenaToFecha(@HASTA,1),1

  		INSERT INTO [dbo].[HPlazas] ([Id_plaza],[Fecha],[Id_TipoMovPlazas],[Valor_IdCampo],[Id_User],[Movimiento],[esHistoria])
  		select @id_plaza_nvo,dbo.anioQuincenaToFecha(@HASTA,1),1 id_tipomovplazas,@mot_pla valor_idcampo, 116 usuario, dbo.anioQuincenaToFecha(@HASTA,1),1

		end

		INSERT INTO [dbo].[PlazaEmpleados]([Id_Emp],[Id_plaza],[Fecha],[Id_User],[Movimiento],[id_nodo],[Documentos],[id_plazaanterior],[esHistoria],[desliguePlaza],[tipoHistoria])
		select 0 id_emp, @id_plaza_nvo, dateadd(mi,-60 ,dbo.anioQuincenaToFecha(@desde,0)),116 usuario, getdate() mov, 

		(select top 1 id_nodo from ct_nodo$ a where clave= @ct) id_nodo,@foliocrea, 0 id_plazanterior, 1 eshistoria, 1 deslogueplaza, 2

		declare @rc int
		EXECUTE @rc =[SP_LlenaPlazaIEEPOUnaPlaza] @id_plaza_nvo
		select cast(@num_plaza_nvo as varchar(100)) as resultado

	end

	else
		RAISERROR (''La plaza ya existe favor de verificar'', 16,1);
    -------
  end
 else
 begin
  RAISERROR (''La plaza no esta autorizada'', 16,1);
 end
END TRY
BEGIN CATCH
    SELECT ERROR_MESSAGE() as resultado
    IF @@TRANCOUNT > 0
        ROLLBACK TRANSACTION;
END CATCH;
IF @@TRANCOUNT > 0
    COMMIT TRANSACTION;
END'
GO

GO
PRINT N'Creating [dbo].[CopiaPeriodosRecalculo]'
GO
IF OBJECT_ID(N'[dbo].[CopiaPeriodosRecalculo]', 'P') IS NULL
EXEC sp_executesql N'
 CREATE procedure [dbo].[CopiaPeriodosRecalculo] @id_calculo int, @QnaOrigen varchar(6), @QnaDestino varchar(6)
  
  as  
  begin
  Declare @id_periodoOrigen int;
  Declare @id_periodoDestino int
  
  Select @id_periodoOrigen = (Select A.id_periodo from recalculo_empleadosperiodos A inner join Calennomina C on c.id_periodo = a.id_periodo where A.id_recalculo = @id_calculo and cast(c.año as varchar) + right(''00'' + cast(numero as varchar ),2) = @QnaOrigen)
  print  @id_periodoOrigen
  Select @id_periodoDestino = (Select A.id_periodo from recalculo_empleadosperiodos A inner join Calennomina C on c.id_periodo = a.id_periodo where A.id_recalculo = @id_calculo and cast(c.año as varchar) + right(''00'' + cast(numero as varchar ),2) = @QnaDestino)
  print @id_periodoDestino
  Delete from recalculo_histpagos where id_calculo = @id_calculo and id_periodo = @id_periodoDestino
  Insert into recalculo_histpagos (id_periodo,id_emp,id_concepto,id_plaza,consecutivo,id_calculo,horas,pesos,fecha,pesosexcento,C_costo,id_referencia,id_periodopago,id_procesonomina,desde,hasta )
  Select @id_periodoDestino as id_periodo,id_emp,id_concepto,id_plaza,consecutivo,id_calculo,horas,pesos,fecha,pesosexcento,C_costo,id_referencia,id_periodopago,id_procesonomina,@QnaDestino as desde,@QnaDestino as hasta from 
  recalculo_histpagos where id_periodo = @id_periodoOrigen and  id_calculo = @id_calculo
  
  Delete from recalculo_rastreoimpuesto where id_calculo = @id_calculo and id_periodo = @id_periodoDestino
  insert into recalculo_rastreoimpuesto (id_calculo,Id_Periodo,Id_Emp,TipoImpuesto,Secuencia,DiasAcumuladosMes,DiasDelPeriodo,ISPTRetenidoAcumulado,PercepcionAcumulada,PercepcionPeriodo,BaseCalculoImpuesto,IngresoMensualizado,LInferiorTA,PorcientoTA,ImpuestoMarginal,CuotaTA,ImpuestoBruto,PorcientoTB,SubsidioAcreditable,SubsidioImpuestoMarginal,CuotaTB,SubsidioCuotaB,Subsidio,CAS_CuotaF,IsptPre,ImpuestoPeriodo,impuestofinal,CAS,SubsidioNoAcreditable,DiasTablaImpuesto,ImpuestoMarginalTA,LInferiorTB,id_clave )
  Select id_calculo,@id_periodoDestino as Id_Periodo,Id_Emp,TipoImpuesto,Secuencia,DiasAcumuladosMes,DiasDelPeriodo,ISPTRetenidoAcumulado,PercepcionAcumulada,PercepcionPeriodo,BaseCalculoImpuesto,IngresoMensualizado,LInferiorTA,PorcientoTA,ImpuestoMarginal,CuotaTA,ImpuestoBruto,PorcientoTB,SubsidioAcreditable,SubsidioImpuestoMarginal,CuotaTB,SubsidioCuotaB,Subsidio,CAS_CuotaF,IsptPre,ImpuestoPeriodo,impuestofinal,CAS,SubsidioNoAcreditable,DiasTablaImpuesto,ImpuestoMarginalTA,LInferiorTB,id_clave
  from recalculo_rastreoimpuesto where id_periodo = @id_periodoOrigen and  id_calculo = @id_calculo
  
  
end '
GO

GO
PRINT N'Creating [dbo].[spf_Actualiza_Desde_Conceptos]'
GO
IF OBJECT_ID(N'[dbo].[spf_Actualiza_Desde_Conceptos]', 'P') IS NULL
EXEC sp_executesql N'CREATE procedure [dbo].[spf_Actualiza_Desde_Conceptos]                        

(                        

  @iddetalle  as int,       

  @id_concepto as int,      

  @accion as bit                                                                

) as                        

Begin                         

     declare @iddetalle_loc as int=@iddetalle   

     declare @id_concepto_loc as int=@id_concepto     

     declare @accion_loc as int=@accion  

     declare @id_cia as int                        

     declare @id_documento as int                       

     declare @id_plaza as int                 

     declare @id_emp int      

     declare @Desde as datetime     

     declare @año as int=Year(getdate())    

     declare @noplaza as int    

              

     set @id_documento=(select id_documento from fup_documento_detalle where id_detalle=@iddetalle_loc) --and Id_MotivoMovimiento=87)           

	 set @id_emp=(select id_emp from fup_documentos where Id_Documento=@id_documento)           

	 set @id_cia=(select id_cia from empleados where id_emp=@id_emp)       

     --set @Desde=(select top 1 fechaini from calennomina where Id_cia=@id_cia and Año=@año and Parcial=0 and Actualizado=0)   

	 set @Desde=(select fechaini from calennomina where id_periodo in (

	 select id_periodo from FUP_Informacion_Documentos where id_documento=@id_documento

	 ))               

	 --set @Desde=(select top 1 fechaini from calennomina where Id_cia=@id_cia and Año=@año and Parcial=0 and Actualizado=0)         

     set @id_plaza=(select id_plaza from fup_documento_detalle where id_detalle=@iddetalle_loc )--and Id_MotivoMovimiento=87)    

     set @noplaza =(select num_plaza from plazas where Id_plaza=@id_plaza)   

     if (@Desde is null)      

     begin 

          declare @qna as varchar (2)=''01''

		  declare @AñoQna as varchar (6)

		  set @año=@año+1

		  set @AñoQna=cast(@año as varchar(max))+@qna

		  set @Desde=(select dbo.anioquincenatofecha(@AñoQna,0))

     end                   

	

    if (@accion_loc = 0 )    

          begin                   

		       update TTEmpleado_Plaza_Conc set fecha=@Desde where id_emp=@id_emp and NoConcepto=@id_concepto_loc and noplaza=@noplaza and Id_Documento=@id_documento                   

          end    

    else -- Por si truena lo regresamos                       

          begin                        

                 delete TTEmpleado_Plaza_Conc where id_emp=@id_emp and NoConcepto=@id_concepto_loc and noplaza=@noplaza and Id_Documento=@id_documento    

          end   

end '
GO

GO
PRINT N'Creating [dbo].[spc_costeoPlazasVacantes]'
GO
IF OBJECT_ID(N'[dbo].[spc_costeoPlazasVacantes]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[spc_costeoPlazasVacantes]
@tipoReporte int, @costeo int = 0
WITH EXEC AS OWNER
AS
BEGIN
	
  
-- select * from  datosPagoVacantes
  
declare @fechref datetime = (select max(fechaini) from calennomina WITH(NOLOCK) where procesado = 1 and Actualizado = 0 and parcial = 0)
select a.id_plaza, a.Fecha, a.id_rel tipo, m.id_rel motivo 
into #temp1
from HstatusPlaza a WITH(NOLOCK) inner join (
select id_plaza, max(fecha) fecha from HstatusPlaza WITH(NOLOCK) where fecha <= @fechref group by id_plaza
) b on a.Id_plaza = b.Id_plaza and a.Fecha = b.Fecha
left join (
  select a.* from HTipoPlaza a WITH(NOLOCK) inner join (
  select id_plaza, max(fecha) fecha from HTipoPlaza WITH(NOLOCK) where fecha <= @fechref group by id_plaza
  ) b on a.Id_plaza = b.Id_plaza and a.Fecha = b.Fecha
) m on m.id_plaza = a.id_plaza 
where a.id_plaza not in (select Valor_IdCampo from hplazas WITH(NOLOCK) where Id_TipoMovPlazas= 4) and a.id_rel = 2

select a.id_plaza, a.Fecha, a.tipo, a.motivo, tm.idCat, tm.Categoria, tm.Desc_categoria, tm.idModelo, tm.Modelo, case when tm.idmodelo = 7 then 1 else 3 end idCM  
into #temp2
from #temp1 a
inner join (
  select a.id_plaza, t.id_Tabulador_SE_Cat_Puesto idCat, ltrim(t.Categoria) Categoria, t.descripcion Desc_Categoria, t.TModelo_SE_id_Modelo_SE idModelo , substring(m.descripcion,3,len(m.descripcion)) Modelo
  from HTabulador_SE_Cat_Puesto a WITH(NOLOCK) inner join (
  select id_plaza, max(fecha) fecha from HTabulador_SE_Cat_Puesto WITH(NOLOCK) where fecha <= @fechref group by id_plaza
  ) b on a.id_plaza = b.id_plaza and a.fecha = b.fecha
  inner join TTabulador_SE_Cat_Puesto t WITH(NOLOCK) on t.id_Tabulador_SE_Cat_Puesto = a.id_rel
  left join TModelo_SE m WITH(NOLOCK) on m.id_Modelo_SE = t.TModelo_SE_id_Modelo_SE
  where t.TModelo_SE_id_Modelo_SE in (1,2,3,4,5,6,7,9,10)
) tm on tm.id_plaza = a.id_plaza

select a.id_plaza, a.Fecha, a.tipo, a.motivo, a.idCat, a.Categoria, a.Desc_categoria, a.idModelo, a.Modelo, a.idCM, z.Zona 
into #temp3
from #temp2 a
left join (
  select a.id_plaza, a.id_rel zona from hTabulador_SE_Zona a WITH(NOLOCK) inner join (
  select id_plaza, max(fecha) fecha from hTabulador_SE_Zona WITH(NOLOCK) where fecha <= @fechref group by id_plaza
  ) b on  a.id_plaza = b.id_plaza and a.fecha = b.fecha
) z on z.id_plaza = a.id_plaza

select a.id_plaza, a.Fecha, a.tipo, a.motivo, a.idCat, a.Categoria, a.Desc_categoria, a.idModelo, a.Modelo, a.idCM, a.Zona, pe.id_emp, pe.id_nodo 
into #temp4
from #temp3 a
left join (
  select a.id_emp, a.id_plaza, a.id_nodo from plazaempleados a WITH(NOLOCK) inner join (
  select id_plaza, max(fecha) fecha from plazaempleados WITH(NOLOCK) where fecha <= @fechref group by id_plaza
  ) b on a.Id_plaza = b.Id_plaza and a.Fecha = b.Fecha
) pe on pe.id_plaza = a.id_plaza
 
select  replace(pi.plazaieepo, '' '','''') Plaza, a.Fecha, a.tipo, a.motivo, a.idCat, a.Categoria, a.Desc_categoria, a.idModelo, a.Modelo, a.idCM, a.Zona, a.id_emp, a.id_nodo, v.clave CT, np.NPago
into #temp5
from #temp4 a
inner join PlazaIEEPO pi WITH(NOLOCK) on pi.id_plaza = a.id_plaza
left join vistatablalongitud v WITH(NOLOCK) on v.id_nodo = a.id_nodo
left join (
  select a.id_plaza, a.id_rel NPago from HTabulador_SE_Nivel_Pago a WITH(NOLOCK) inner join (
  select id_plaza, max(fecha) fecha from HTabulador_SE_Nivel_Pago WITH(NOLOCK) where fecha <= @fechref group by id_plaza
  ) b on a.id_plaza = b.id_plaza and a.fecha = b.fecha
) np on np.id_plaza = a.id_plaza
where a.id_plaza not in (select Valor_IdCampo from hplazas WITH(NOLOCK) where Id_TipoMovPlazas= 4) and a.tipo = 2
and replace(pi.plazaieepo,'' '','''') in (select codigo_plaza from hplazas_concifed WITH(NOLOCK) where ESTATUS <> ''C'')

select  a.Plaza, a.Fecha, a.tipo, a.motivo, a.idCat, a.Categoria, a.Desc_categoria, a.idModelo, a.Modelo, a.idCM, a.Zona, a.id_emp, a.id_nodo, a.CT, a.NPago 
into #datosPlazasVacates
from #temp5 a
union all
select distinct a.CODIGO_PLAZA, cast( cast(year(getdate()) as varchar)+''/01/01'' as datetime) desde ,2 tipo,0 motivo, tp.id_Tabulador_SE_Cat_Puesto idCat, isnull(ltrim(tp.categoria),case when len(rtrim(a.CODIGO_PLAZA)) = 20 then SUBSTRING(a.CODIGO_PLAZA, 7, 5) else SUBSTRING(a.CODIGO_PLAZA, 7, 6) end ) Categoria, isnull(tp.descripcion, ''CATEGORÍA INEXISTENTE EN EL CATÁLOGO IEEPO.'') Desc_categoria,
tp.TModelo_SE_id_Modelo_SE idModelo,  substring(tm.descripcion,3,len(tm.descripcion)) Modelo, case when tm.id_Modelo_SE = 7 then 1 else 3 end idCM, z.id_rel Zona, 0 id_emp, v.Id_Nodo, v.Clave CT, 3 NPago
from hplazas_concifed a 
left join TTabulador_SE_Cat_Puesto tp on ltrim(tp.categoria) = a.CODIGO
left join TModelo_SE tm on tm.id_Modelo_SE = tp.TModelo_SE_id_Modelo_SE
left join VistaTablaLongitud v on v.clave = a.CCT
left join RCT_Tabulador_SE_Zona z on z.id_nodo = v.Id_Nodo
left outer join
				PlazaIEEPO pie
					on
							a.CODIGO_PLAZA =replace(pie.PlazaIEEPO,'' '','''')
					
where
          a.ESTATUS <> ''C''
		  and pie.PlazaIEEPO is null
--where ESTATUS <> ''C'' and CODIGO_PLAZA not in (select replace(plazaieepo,'' '','''') from plazaieepo where plazaieepo is not null)



--delete from primerreportevacantes
--insert into primerreportevacantes
select CATEGORIA, PLAZA, dbo.fechatoanioquincena(fecha) DESDE, ''999999'' HASTA,CT, 
case when 
case when plaza like ''%E%'' then substring(plaza,12,3) else substring(plaza,13,3) end = ''000'' then ''J'' else ''H'' 
end TIPO_PLAZA, cast(idmodelo as varchar)+'' - ''+modelo MODELO, DESC_CATEGORIA, 
case when 
case when plaza like ''%E%'' then substring(plaza,12,3) else substring(plaza,13,3) end = ''000'' then 1 else 0 
end PLAZA_JORNADA,
case when 
case when plaza like ''%E%'' then substring(plaza,12,3) else substring(plaza,13,3) end = ''000'' then 0 else cast(case when plaza like ''%E%'' then substring(plaza,12,3) else substring(plaza,13,3) end as int)/10
end TOTAL_HORAS 
into #primerreportevacantes
from #datosPlazasVacates WITH(NOLOCK)

if (@costeo = 0)
  begin
    if (@tipoReporte = 0)
      begin
        select MODELO, CATEGORIA, DESC_CATEGORIA, SUM(PLAZA_JORNADA) PLAZAS_JORNADA, SUM(TOTAL_HORAS) TOTAL_HORAS 
        from #primerreportevacantes WITH(NOLOCK) 
        GROUP BY MODELO, CATEGORIA, DESC_CATEGORIA
      end
    else
      begin
        select CATEGORIA,PLAZA, DESDE, HASTA, TIPO_PLAZA, MODELO, DESC_CATEGORIA, PLAZA_JORNADA, TOTAL_HORAS,
        ROUND(CAST(dbo.PlazosDesdeHasta(
        case when desde < cast((select max(año) from calennomina where actualizado = 0 and procesado = 1 and parcial = 0) as varchar)+''01'' then cast((select max(año) from calennomina where actualizado = 0 and procesado = 1 and parcial = 0) as varchar)+''01'' else desde end,
        case when hasta > cast((select max(año) from calennomina where actualizado = 0 and procesado = 1 and parcial = 0) as varchar)+''24'' then cast((select max(año) from calennomina where actualizado = 0 and procesado = 1 and parcial = 0) as varchar)+''24'' else hasta end )  AS FLOAT)/2,1)
        MESES
        from #primerreportevacantes WITH(NOLOCK) order by cast(substring(modelo,1,2) as int), Categoria, Plaza
      end
  end
else
  begin
    select a.*, c.resultado, c.nombre,c.tipo 
    into #matrizParaCosteo
    from valoresmatriz4 a WITH(NOLOCK)
    inner join (
      select max(fecha) Fecha, id_Tabulador_SE_Cat_Puesto, id_Tabulador_SE_CM, id_Tabulador_SE_Nivel_Pago, id_Tabulador_SE_Zona
      from valoresmatriz4 a WITH(NOLOCK) where fecha <= getdate() group by 
      id_Tabulador_SE_Cat_Puesto, id_Tabulador_SE_CM, id_Tabulador_SE_Nivel_Pago, id_Tabulador_SE_Zona
    ) b on a.fecha = b.Fecha and
    a.id_Tabulador_SE_Cat_Puesto = b.id_Tabulador_SE_Cat_Puesto and a.id_Tabulador_SE_CM = b.id_Tabulador_SE_CM and 
    a.id_Tabulador_SE_Nivel_Pago = b.id_Tabulador_SE_Nivel_Pago and a.id_Tabulador_SE_Zona = b.id_Tabulador_SE_Zona
    inner join conceptos c WITH(NOLOCK) on c.id_concepto = a.id_concepto
    where a.id_concepto not in (1221,1222,1223,1224,1225,1225,1226,1227)
    
    insert into #matrizParaCosteo
    select a.*, c.resultado, c.nombre,c.tipo from ValoresMatriz8 a WITH(NOLOCK)
    inner join (
      select max(fecha) Fecha, id_Tabulador_SE_Cat_Puesto, id_Tabulador_SE_CM, id_Tabulador_SE_Nivel_Pago, id_Tabulador_SE_Zona
      from ValoresMatriz8 WITH(NOLOCK) where fecha <= getdate() group by 
      id_Tabulador_SE_Cat_Puesto, id_Tabulador_SE_CM, id_Tabulador_SE_Nivel_Pago, id_Tabulador_SE_Zona
    ) b on a.fecha = b.Fecha and
    a.id_Tabulador_SE_Cat_Puesto = b.id_Tabulador_SE_Cat_Puesto and a.id_Tabulador_SE_CM = b.id_Tabulador_SE_CM and 
    a.id_Tabulador_SE_Nivel_Pago = b.id_Tabulador_SE_Nivel_Pago and a.id_Tabulador_SE_Zona = b.id_Tabulador_SE_Zona
    inner join conceptos c WITH(NOLOCK) on c.id_concepto = a.id_concepto

	CREATE NONCLUSTERED INDEX indexCosteo1 ON #matrizParaCosteo ([id_concepto]) INCLUDE ([id_Tabulador_SE_Cat_Puesto])
    
    delete from #matrizParaCosteo where  id_Tabulador_SE_Cat_Puesto in (select id_Tabulador_SE_Cat_Puesto from TTabulador_SE_Cat_Puesto WITH(NOLOCK) where TModelo_SE_id_Modelo_SE  = 10)
    and id_concepto in (1306,1701)
    
    --delete from datosPagoVacantes
    --insert into datosPagoVacantes
    select a.*, b.id_concepto, b.resultado, b.Valor,
    case when 
    case when plaza like ''%E%'' then substring(plaza,12,3) else substring(plaza,13,3) end = ''000'' then 0 else cast(case when plaza like ''%E%'' then substring(plaza,12,3) else substring(plaza,13,3) end as int)/10
    end horas 
    into #datosPagoVacantes
    from #datosPlazasVacates a WITH(NOLOCK)
    left join #matrizParaCosteo b WITH(NOLOCK) on a.idCat = b.id_Tabulador_SE_Cat_Puesto and a.idCM= b.id_Tabulador_SE_CM and a.NPago = b.id_Tabulador_SE_Nivel_Pago 
    and a.Zona = b.id_Tabulador_SE_Zona
    
  CREATE NONCLUSTERED INDEX indexDatosPagoVacantes1 ON #datosPagoVacantes ([id_concepto],[idModelo]) INCLUDE ([Plaza])
	CREATE NONCLUSTERED INDEX indexDatosPagoVacantes2 ON #datosPagoVacantes ([Valor]) INCLUDE ([Categoria],[id_concepto])
	CREATE NONCLUSTERED INDEX indexDatosPagoVacantes3 ON #datosPagoVacantes ([resultado],[Valor]) INCLUDE ([Plaza],[Categoria])
	CREATE NONCLUSTERED INDEX indexDatosPagoVacantes4 ON #datosPagoVacantes ([horas]) INCLUDE ([Valor])
	CREATE NONCLUSTERED INDEX indexDatosPagoVacantes5 ON #datosPagoVacantes ([idModelo],[id_concepto]) INCLUDE ([Plaza],[Categoria],[Valor])
	CREATE NONCLUSTERED INDEX indexDatosPagoVacantes6 ON #datosPagoVacantes ([id_concepto],[idModelo]) INCLUDE ([Plaza],[Categoria],[resultado],[Valor],[horas])
    
    
    insert into #datosPagoVacantes ( Plaza, Fecha, tipo, motivo, idCat, Categoria, Desc_categoria, idModelo, Modelo, idCM, Zona, id_emp, 
    id_nodo, CT, NPago, id_concepto, resultado, Valor, horas)
    select Plaza, Fecha, tipo, motivo, idCat, Categoria, Desc_categoria, idModelo, Modelo, idCM, Zona, id_emp, 
    id_nodo, CT, NPago, 1558 id_concepto,''HT'' resultado, 143.74 Valor,
    case when 
    case when plaza like ''%E%'' then substring(plaza,12,3) else substring(plaza,13,3) end = ''000'' then 0 else cast(case when plaza like ''%E%'' then substring(plaza,12,3) else substring(plaza,13,3) end as int)/10
    end horas
    from #datosPlazasVacates WITH(NOLOCK) where idmodelo in (5,6,2,9) and plaza not in (
    select plaza from #datosPagoVacantes WITH(NOLOCK) where id_concepto = 1558 and idmodelo in (5,6,2,9)
    )
    
    update #datosPagoVacantes set valor = 3.59 where id_concepto = 1558 and horas <> 0 and idmodelo in (5,6,2,9)
    
    insert into #datosPagoVacantes (Plaza, Fecha, tipo, motivo, idCat, Categoria, Desc_categoria, idModelo, Modelo, idCM, Zona, id_emp, 
    id_nodo, CT, NPago, id_concepto, resultado, Valor, horas)
    select Plaza, Fecha, tipo, motivo, idCat, Categoria, Desc_categoria, idModelo, Modelo, idCM, Zona, id_emp, 
    id_nodo, CT, NPago, 1306 id_concepto,''38'' resultado, 1091 Valor,
    case when 
    case when plaza like ''%E%'' then substring(plaza,12,3) else substring(plaza,13,3) end = ''000'' then 0 else cast(case when plaza like ''%E%'' then substring(plaza,12,3) else substring(plaza,13,3) end as int)/10
    end horas
    from #datosPlazasVacates WITH(NOLOCK) where idmodelo in (2,5,6) and plaza not in (
    select plaza from #datosPagoVacantes WITH(NOLOCK) where id_concepto = 1306 and IdModelo in (2,5,6)
    )

    update #datosPagoVacantes set Valor = 23.28 where  idmodelo in (2,5,6) and id_concepto = 1306 and horas <> 0
    
    update a set a.valor = b.valor from #datosPagoVacantes a inner join (
      select * from #datosPagoVacantes where plaza in (
        select plaza from (
          select categoria, max(plaza) plaza from #datosPagoVacantes where Categoria in (
            select distinct Categoria from #datosPagoVacantes where valor = 0
          ) and resultado in (''01'',''07'') and valor > 0 group by categoria
        ) a
      )
    ) b on a.Categoria = b.categoria and a.id_concepto = b.id_concepto
    where a.valor = 0
    
    update #datosPagoVacantes set valor = valor * horas where horas <> 0
    delete #datosPagoVacantes where id_concepto in (1201,1202,1203)

    --delete from datosCosteoTotalPeriodos
    --insert into datosCosteoTotalPeriodos 
    select a.Plaza, a.Fecha, c.desde, c.hasta, a.tipo, a.motivo, a.idCat, a.Categoria, a.Desc_categoria, a.idModelo, a.Modelo, a.idCM, a.Zona, a.id_emp, 
    a.id_nodo, a.CT, a.NPago
    , CONCEPTOS = stuff(
    ( select '','' + b.resultado
    from #datosPagoVacantes b WITH(NOLOCK)
    where b.plaza = a.plaza order by b.resultado
    for xml path(''''))
    ,1,1,''''),
    round(sum(a.valor),2) VALOR_MENSUAL , c.PLAZA_JORNADA, c.TOTAL_HORAS
    , ROUND(CAST(dbo.PlazosDesdeHasta(
    case when desde < cast((select max(año) from calennomina where actualizado = 0 and procesado = 1 and parcial = 0) as varchar)+''01'' then cast((select max(año) from calennomina where actualizado = 0 and procesado = 1 and parcial = 0) as varchar)+''01'' else desde end,
    case when hasta > cast((select max(año) from calennomina where actualizado = 0 and procesado = 1 and parcial = 0) as varchar)+''24'' then cast((select max(año) from calennomina where actualizado = 0 and procesado = 1 and parcial = 0) as varchar)+''24'' else hasta end )  AS FLOAT)/2,1) MESES,
    round(sum(a.valor),2) * ROUND(CAST(dbo.PlazosDesdeHasta(
    case when desde < cast((select max(año) from calennomina where actualizado = 0 and procesado = 1 and parcial = 0) as varchar)+''01'' then cast((select max(año) from calennomina where actualizado = 0 and procesado = 1 and parcial = 0) as varchar)+''01'' else desde end,
    case when hasta > cast((select max(año) from calennomina where actualizado = 0 and procesado = 1 and parcial = 0) as varchar)+''24'' then cast((select max(año) from calennomina where actualizado = 0 and procesado = 1 and parcial = 0) as varchar)+''24'' else hasta end )  AS FLOAT)/2,1) MONTO_TOTAL_MESES
    into #datosCosteoTotalPeriodos
    from #datosPagoVacantes a WITH(NOLOCK)
    left join #primerreportevacantes c WITH(NOLOCK) on c.plaza = a.plaza
    group by  a.Plaza, a.Fecha, a.tipo, a.motivo, a.idCat, a.Categoria, a.Desc_categoria, a.idModelo, a.Modelo, a.idCM, a.Zona, a.id_emp, 
    a.id_nodo, a.CT, a.NPago, c.PLAZA_JORNADA, c.TOTAL_HORAS, c.desde, c.hasta
    ORDER BY a.IdModelo,a.Categoria

alter table #datosCosteoTotalPeriodos add aguinaldo float default 0 with values
alter table #datosCosteoTotalPeriodos add diaMaestro float default 0 with values
alter table #datosCosteoTotalPeriodos add CN float default 0 with values
alter table #datosCosteoTotalPeriodos add Aportacion float default 0 with values
alter table #datosCosteoTotalPeriodos add primaVacacional float default 0 with values

CREATE NONCLUSTERED INDEX indexdatosCosteoTotalPeriodos1 ON #datosCosteoTotalPeriodos ([Aportacion]) INCLUDE ([Plaza],[Categoria],[MESES])

    UPDATE A SET a.aguinaldo =  round(a.meses * b.pesos,2)
    from #datosCosteoTotalPeriodos a inner join (
    select categoria, plaza, ((sum(valor)/30) * 90)/12 pesos 
    from #datosPagoVacantes a
    where a.id_concepto in (1701,1300,1301,1302,1318,1319,1320,1321,1322,1331,1353,1354,1400,1401,1402,1403,1404,1359,1360,1361,1362,1363,1364,1454,1433,1545,1546,1358,1377,1477)
    and a.IdModelo in (1,4) 
    group by categoria, plaza
    ) b on b.categoria = a.CATEGORIA and b.plaza = a.PLAZA

    UPDATE A SET a.aguinaldo = a.meses * b.pesos
    from #datosCosteoTotalPeriodos a inner join (
    select categoria, plaza, ((sum(valor)/30) * 90)/12 pesos from #datosPagoVacantes a
    where a.id_concepto in (1701,1300,1353,1557)
    and a.IdModelo in (3) 
    group by categoria, plaza
    ) b on b.categoria = a.CATEGORIA and b.plaza = a.PLAZA

    UPDATE A SET a.aguinaldo =  case when a.meses >= 6 then b.pesos else  a.meses * (b.pesos/12) end
    from #datosCosteoTotalPeriodos a inner join (
    select categoria, plaza, ((sum(valor)/30) * 90) pesos from #datosPagoVacantes a
    where a.id_concepto in (1300,1328,1701)
    and a.IdModelo in (5,6) 
    group by categoria, plaza
    ) b on b.categoria = a.CATEGORIA and b.plaza = a.PLAZA

    UPDATE A SET a.aguinaldo = case when a.meses >= 6 then b.pesos else  a.meses * (b.pesos/12) end 
    from #datosCosteoTotalPeriodos a inner join (
    select categoria, plaza, ((sum(valor)/30) * 90) pesos from #datosPagoVacantes a
    where a.id_concepto in (1701,1300,1557,1328)
    and a.IdModelo in (2,9) 
    group by categoria, plaza
    ) b on b.categoria = a.CATEGORIA and b.plaza = a.PLAZA

    UPDATE A SET a.aguinaldo = case when a.meses >= 6 then b.pesos else  a.meses * (b.pesos/12) end
    from #datosCosteoTotalPeriodos a inner join (
    select categoria, plaza, ((sum(valor)/30) * 90) pesos from #datosPagoVacantes a
    where a.id_concepto in (1510,1518,1582)
    and a.IdModelo in (7) 
    group by categoria, plaza
    ) b on b.categoria = a.CATEGORIA and b.plaza = a.PLAZA

    UPDATE A SET a.aguinaldo = a.meses * b.pesos
    from #datosCosteoTotalPeriodos a inner join (
    select categoria, plaza, ((sum(valor)/30) * 90)/12 pesos from #datosPagoVacantes a
    where a.id_concepto in (4000,4004)
    and a.IdModelo in (10) 
    group by categoria, plaza
    ) b on b.categoria = a.CATEGORIA and b.plaza = a.PLAZA

    update a set a.diamaestro = b.pesos
    from #datosCosteoTotalPeriodos a inner join (
    select categoria, plaza, sum(valor)/2 pesos 
    from #datosPagoVacantes a
    where a.id_concepto in (1701,1300,1318,1319,1320,1321,1322,1354,1353)
    and a.IdModelo in ( 1 , 2 , 3 , 4 , 5 , 6 , 9 )
    group by categoria, plaza
    ) b on b.categoria = a.CATEGORIA and b.plaza = a.PLAZA

    update a set a.diamaestro = b.pesos
    from #datosCosteoTotalPeriodos a inner join (
    select categoria, plaza, sum(valor)/2 pesos 
    from #datosPagoVacantes a
    where a.id_concepto in (1510)
    and a.IdModelo in ( 7)
    group by categoria, plaza
    ) b on b.categoria = a.CATEGORIA and b.plaza = a.PLAZA

    update #datosCosteoTotalPeriodos set cn = 3887.00 where idmodelo in (1 , 4 )

    update #datosCosteoTotalPeriodos set cn = 3069.02 where idmodelo in (2 , 3 , 9)

    update a set a.aportacion = round(b.aportacion * meses,2)
    from #datosCosteoTotalPeriodos a inner join (
    select a.categoria, a.plaza, a.horas, a.resultado, valor, round(valor * 0.20145,2) aportacion
    from #datosPagoVacantes a
    where a.IdModelo in (1 , 2 , 3 , 4 , 5 , 6 , 9) and a.id_concepto in (1701)
    group by a.categoria, a.plaza, a.horas, valor, a.resultado
    ) b on b.plaza = a.plaza and b.categoria = a.categoria
    where a.aportacion = 0

    update a set a.aportacion = round(b.aportacion * meses,2)
    from #datosCosteoTotalPeriodos a inner join (
    select a.categoria, a.plaza, a.horas, a.resultado, valor, round(valor * .20145,2) aportacion
    from #datosPagoVacantes a
    where a.IdModelo in (7) and a.id_concepto in (1510)
    group by a.categoria, a.plaza, a.horas, valor, a.resultado
    ) b on b.plaza = a.plaza and b.categoria = a.categoria
    where a.aportacion = 0

    update a set a.aportacion = round(b.aportacion * meses,2)
    from #datosCosteoTotalPeriodos a inner join (
    select a.categoria, a.plaza, a.horas, a.resultado, valor, round(valor * .20145,2) aportacion
    from #datosPagoVacantes a
    where a.IdModelo in ( 10) and a.id_concepto in (4000)
    group by a.categoria, a.plaza, a.horas, valor, a.resultado
    ) b on b.plaza = a.plaza and b.categoria = a.categoria
    where a.aportacion = 0

    UPDATE A SET A.PRIMAVACACIONAL = B.PESOS
    from #datosCosteoTotalPeriodos a inner join (
    select categoria, plaza, (round((sum(valor)/30) * 10,2)) pesos 
    from #datosPagoVacantes a
    where a.id_concepto in (4000,4004)
    and a.IdModelo in (10) 
    group by categoria, plaza
    ) b on b.categoria = a.CATEGORIA and b.plaza = a.PLAZA

    UPDATE A SET A.PRIMAVACACIONAL = B.PESOS
    from #datosCosteoTotalPeriodos a inner join (
    select categoria, plaza, (round((sum(valor)/30) * 21,2)) pesos from #datosPagoVacantes a
    where a.id_concepto in (1510,1518)
    and a.IdModelo in (7) and a.categoria  like ''%E%''
    group by categoria, plaza
    ) b on b.categoria = a.CATEGORIA and b.plaza = a.PLAZA

    UPDATE A SET A.PRIMAVACACIONAL = B.PESOS
    from #datosCosteoTotalPeriodos a inner join (
    select categoria, plaza, (round((sum(valor)/30) * 24,2)) pesos from #datosPagoVacantes a
    where a.id_concepto in (1701,1300,1328,1557)
    and a.IdModelo in (2,9)
    group by categoria, plaza
    ) b on b.categoria = a.CATEGORIA and b.plaza = a.PLAZA

    UPDATE A SET A.PRIMAVACACIONAL = B.PESOS
    from #datosCosteoTotalPeriodos a inner join (
    select categoria, plaza, (round((sum(valor)/30) * 24,2)) pesos from #datosPagoVacantes a
    where a.id_concepto in (1701,1300,1307,1328)
    and a.IdModelo in (5,6)
    group by categoria, plaza
    ) b on b.categoria = a.CATEGORIA and b.plaza = a.PLAZA

    UPDATE A SET A.PRIMAVACACIONAL = B.PESOS
    from #datosCosteoTotalPeriodos a inner join (
    select categoria, plaza, (round((sum(valor)/30) * 5,2)) * 2 pesos from #datosPagoVacantes a
    where a.id_concepto in (1701,1557,1300,1353)
    and a.IdModelo in (3)
    group by categoria, plaza
    ) b on b.categoria = a.CATEGORIA and b.plaza = a.PLAZA

    UPDATE A SET A.PRIMAVACACIONAL = B.PESOS
    from #datosCosteoTotalPeriodos a inner join (
    select categoria, plaza, (round((sum(valor)/30) * 5,2)) * 2 pesos from #datosPagoVacantes a
    where a.id_concepto in (1701,1300,1318,1319,1320,1321,1322,1354,1400,1401,1402,1403,1404,1359,1360,1361,1362,1363,1364,1454,1433,1545,1546,1377,1358,1477,1331,1378)
    and a.IdModelo in ( 1 , 4 )
    group by categoria, plaza
    ) b on b.categoria = a.CATEGORIA and b.plaza = a.PLAZA

    if (@tipoReporte = 0)
      begin
        select MODELO, CATEGORIA, DESC_CATEGORIA, ROUND(SUM(VALOR_MENSUAL),2) VALOR_MENSUAL, SUM(PLAZA_JORNADA) PLAZAS_JORNADA, SUM(TOTAL_HORAS) TOTAL_HORAS,
        SUM(MONTO_TOTAL_MESES) MONTO_TOTAL_MESES, SUM(AGUINALDO) AGUINALDO, SUM(diamaestro) DIA_MAESTRO, SUM(CN) CN, SUM(APORTACION) APORTACION, SUM(primavacacional) PRIMA_VACACIONAL,
        ROUND(SUM(MONTO_TOTAL_MESES) + SUM(AGUINALDO) + SUM(diamaestro) + SUM(CN) + SUM(APORTACION) + SUM(primavacacional),2) TOTAL
        from #datosCosteoTotalPeriodos  WITH(NOLOCK)
        GROUP BY IDMODELO, MODELO, CATEGORIA, DESC_CATEGORIA
      end
    else
      begin
        select CATEGORIA, PLAZA, DESDE, HASTA, CT, case when PLAZA_JORNADA = 1 then ''J'' else ''H'' end TIPO_PLAZA, MODELO, desc_categoria DESC_CATEGORIA, CONCEPTOS,
        VALOR_MENSUAL, PLAZA_JORNADA, TOTAL_HORAS, MESES, MONTO_TOTAL_MESES, AGUINALDO, diamaestro DIA_MAESTRO, CN, APORTACION, primavacacional PRIMA_VACACIONAL, MONTO_TOTAL_MESES+aguinaldo+diamaestro+cn+aportacion+primavacacional TOTAL
        from #datosCosteoTotalPeriodos WITH(NOLOCK)
        ORDER BY idModelo, Categoria, PLAZA 
      end

  end
 

END'
GO

GO
PRINT N'Creating [dbo].[spc_Analizahcontinuidad]'
GO
IF OBJECT_ID(N'[dbo].[spc_Analizahcontinuidad]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[spc_Analizahcontinuidad]
@Qna varchar(6), @idEmp varchar(MAX), @id_cia int
WITH EXEC AS CALLER
AS
begin                  
 
 
 
DECLARE @Xml AS XML  
SET @Xml = ''<empleado>'' + REPLACE(@idEmp, '','', ''</empleado><empleado>'') + ''</empleado>'';                 
                    
declare @Qnaanterior as varchar(6)                  
set @Qnaanterior = case when right(@qna,2) = ''01'' then cast(cast(@Qna as int) -77 as varchar) else cast(cast(@Qna as int) -1 as varchar) end                  

if @idEmp = ''0''
begin

-- para todos los empleados

update Hcontinuidad set añoqnacontinuidad = ''      ''
from Hcontinuidad with(nolock) inner join Empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where añoqna = @Qna 
--and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End                    
and e.id_cia = @id_cia

--primero actualizo la continuidad de las plazas que no tienen plazaanterior ,que ya se pagaron la quincena pasada y siguen igual          
-- en tipo, status y categoria          
update Hcontinuidad set Hcontinuidad.añoQnaContinuidad = b.añoQnaContinuidad                   
from Hcontinuidad with(nolock) inner join ( Select * from Hcontinuidad  with(nolock) where añoqna = @Qnaanterior) B                  
on Hcontinuidad.id_emp = b.id_emp and Hcontinuidad.id_plaza = b.id_plaza 
inner join Empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where Hcontinuidad.añoqna = @Qna and Hcontinuidad.id_plazaanterior = '''' and          
Hcontinuidad.statusplaza = b.statusplaza and Hcontinuidad.tipoplaza = b.tipoplaza and           
Hcontinuidad.categoria = b.categoria 
--and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End             
and e.id_cia = @id_cia

--actualizo la continuidad de las plazas que no tienen plazaanterior (o es la misma ),que ya se pagaron la quincena pasada y cambiaron          
-- cierto tipo o status ( proporcionados por ellos ) que no deberia de cambiar continuidad          
update Hcontinuidad set Hcontinuidad.añoQnaContinuidad = b.añoQnaContinuidad                   
from Hcontinuidad with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on Hcontinuidad.id_emp = b.id_emp and Hcontinuidad.id_plaza = b.id_plaza   
inner join Empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where Hcontinuidad.añoqna = @Qna and  Hcontinuidad.añoQnaContinuidad = '''' and       
(Hcontinuidad.id_plazaanterior = cast(b.id_plaza as varchar) or Hcontinuidad.id_plazaanterior = '''' ) and          
((Hcontinuidad.statusplaza = 10 and Hcontinuidad.tipoplaza  in (44,48) ) or      
(Hcontinuidad.statusplaza = 14 and Hcontinuidad.tipoplaza  = 44 ) or       
(Hcontinuidad.statusplaza = 15 and Hcontinuidad.tipoplaza  = 48 ) or      
(Hcontinuidad.statusplaza = 11 and Hcontinuidad.tipoplaza  = 44 ) ) 
--and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End            
and e.id_cia = @id_cia

--Si la plaza aun tiene añoqnacontinuidad vacio Y NO TIENE ID_PLAZAANTERIOR                  
--significa que la plaza es nueva, asi que la continuidad empieza a partir de este momento                  
Update Hcontinuidad set Hcontinuidad.añoQnaContinuidad = Hcontinuidad.añoqna  
from Hcontinuidad with(nolock) inner join Empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where Hcontinuidad.añoqna = @Qna and Hcontinuidad.añoQnaContinuidad = ''''                   
and Hcontinuidad.id_plazaanterior = '''' 
--and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End                           
and e.id_cia = @id_cia

--Si la plaza tiene en plaza anterior LA MISMA PLAZA                   
--y el status01/tipoplaza95  en la plazaanterior de la qna pasada                  
--y un status01/tipoplaza10 en la plazaactual                  
--eso significa que le dieron definitivamente la plaza y debe mantener continuidad                  
update Hcontinuidad set Hcontinuidad.añoQnaContinuidad = b.añoQnaContinuidad                   
from Hcontinuidad with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on Hcontinuidad.id_emp = b.id_emp and b.id_plaza=Hcontinuidad.id_plaza   
inner join Empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where Hcontinuidad.añoqna = @Qna and (Hcontinuidad.id_plazaanterior = cast(Hcontinuidad.id_plaza as varchar) or Hcontinuidad.id_plazaanterior = ''''  )                
and Hcontinuidad.statusplaza = 01 and  Hcontinuidad.tipoplaza = 10                  
and b.statusplaza = 01 and  b.tipoplaza = 95  
--and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End                          
and e.id_cia = @id_cia
                  
--Si la plaza tiene en plaza anterior LA MISMA PLAZA                   
--y no cambia ni el tipo,ni el status,ni lacategoria                  
--eso significa que debe mantener continuidad                  
update Hcontinuidad set Hcontinuidad.añoQnaContinuidad = b.añoQnaContinuidad                   
from Hcontinuidad with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on Hcontinuidad.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + Hcontinuidad.id_plazaanterior + '','') <> 0   
inner join Empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where Hcontinuidad.añoqna = @Qna and charindex('',''+ ltrim(rtrim(cast(hcontinuidad.id_plaza  as varchar))) + '','','','' + Hcontinuidad.id_plazaanterior + '','') <> 0            
and Hcontinuidad.statusplaza = b.statusplaza and  Hcontinuidad.tipoplaza = b.tipoplaza                  
and Hcontinuidad.categoria = b.categoria  
-- and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End                           
and e.id_cia = @id_cia

--Si la plaza NO tiene en plaza anterior                   
--y un status14/tipoplaza41-42-43-49 ó status06/tipoplaza51-52-53 en la plazaactual                 
--eso significa que debe perder continuidad                  
update Hcontinuidad set Hcontinuidad.añoQnaContinuidad = añoQna  
from Hcontinuidad with(nolock) inner join Empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where ((Hcontinuidad.statusplaza = 14 and Hcontinuidad.tipoplaza in (41,42,43,49)) or                 
(Hcontinuidad.statusplaza = 06 and Hcontinuidad.tipoplaza in (51,52,53)))                
 and Hcontinuidad.añoqna = @Qna  
-- and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End                        
and e.id_cia = @id_cia

--Si en la qna anterior                 
--el status14/tipoplaza41-42-43-49 ó status06/tipoplaza51-52-53  en la plazaanterior de la qna pasada                  
--y un status01/tipoplaza95 en la plazaactual                 
--eso significa viene regresando de una licencia   y debe iniciar la continuidad                  
update Hcontinuidad set Hcontinuidad.añoQnaContinuidad = Hcontinuidad.añoQna                 
from Hcontinuidad with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on Hcontinuidad.id_emp = b.id_emp and Hcontinuidad.id_plaza = b.id_plaza
inner join Empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where Hcontinuidad.añoqna = @Qna and                
((b.statusplaza = 14 and b.tipoplaza in (41,42,43,49)) or                 
(b.statusplaza = 06 and b.tipoplaza in (51,52,53)))                  
and Hcontinuidad.statusplaza = 01 and  Hcontinuidad.tipoplaza = 95  
-- and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End                          
and e.id_cia = @id_cia

--Si tiene PLAZAANTERIOR pero el status y el motivo es el mismo que el actual            
--debe de tomar la continuidad de la plaza anterior            
update Hcontinuidad set Hcontinuidad.añoQnaContinuidad = b.añoQnaContinuidad                   
from Hcontinuidad with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on Hcontinuidad.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + Hcontinuidad.id_plazaanterior + '','') <> 0 
inner join Empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where Hcontinuidad.añoqna = @Qna and Hcontinuidad.id_plazaanterior <> ''''            
and Hcontinuidad.tipoplaza = b.tipoplaza and Hcontinuidad.statusplaza = b.statusplaza  
-- and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End             
and e.id_cia = @id_cia

--Si tiene PLAZAANTERIOR pero el status y el motivo de la nueva es 01-10            
-- y el status y motivo de la anterior es 01-95            
--debe de tomar la continuidad de la plaza anterior            
update Hcontinuidad set Hcontinuidad.añoQnaContinuidad = b.añoQnaContinuidad                   
from Hcontinuidad with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B               
on Hcontinuidad.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + Hcontinuidad.id_plazaanterior + '','') <> 0            
inner join Empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where Hcontinuidad.añoqna = @Qna and Hcontinuidad.id_plazaanterior <> ''''            
and ((Hcontinuidad.tipoplaza = 10 and Hcontinuidad.statusplaza = 01 and b.tipoplaza = 95 and b.statusplaza = 01) or      
(Hcontinuidad.tipoplaza = 95 and Hcontinuidad.statusplaza = 01 and b.tipoplaza = 10 and b.statusplaza = 01) )   
-- and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End       
and e.id_cia = @id_cia      
-------------------------------------------         
--Si la plaza tiene en plaza anterior LA MISMA PLAZA                   
--y el status10,11,14,15/tipoplaza44,48  en la plazaanterior de la qna pasada                  
--y un status01/tipoplaza10,95 en la plazaactual                  
--eso significa que le dieron definitivamente la plaza y debe mantener continuidad                  
--update Hcontinuidad set Hcontinuidad.añoQnaContinuidad = b.añoQnaContinuidad                   
--from Hcontinuidad inner join ( Select * from Hcontinuidad where añoqna = @Qnaanterior) B                  
--on Hcontinuidad.id_emp = b.id_emp       
--where Hcontinuidad.añoqna = @Qna and       
--(Hcontinuidad.id_plazaanterior = cast(b.id_plaza as varchar) or Hcontinuidad.id_plazaanterior = '''' )                 
--and Hcontinuidad.statusplaza = 01 and  Hcontinuidad.tipoplaza in (10,95)                  
--and b.statusplaza in (10,11,14,15) and  b.tipoplaza in (44,48)   and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End              
update Hcontinuidad set Hcontinuidad.añoQnaContinuidad = b.añoQnaContinuidad                   
from Hcontinuidad with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on Hcontinuidad.id_emp = b.id_emp and  Hcontinuidad.id_plaza = b.id_plaza 
inner join Empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where Hcontinuidad.añoqna = @Qna and       
(Hcontinuidad.id_plazaanterior = cast(b.id_plaza as varchar) or Hcontinuidad.id_plazaanterior = '''' )                 
and Hcontinuidad.statusplaza = 01 and  Hcontinuidad.tipoplaza in (10,95)                  
and b.statusplaza in (10,11,14,15) and  b.tipoplaza in (44,48)   
-- and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End           
and e.id_cia = @id_cia 

update Hcontinuidad set Hcontinuidad.añoQnaContinuidad = b.añoQnaContinuidad                   
from Hcontinuidad with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on Hcontinuidad.id_emp = b.id_emp  
inner join Empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where Hcontinuidad.añoqna = @Qna and       
(Hcontinuidad.id_plazaanterior = cast(b.id_plaza as varchar) or Hcontinuidad.id_plazaanterior = '''' )                 
and Hcontinuidad.statusplaza = 01 and  Hcontinuidad.tipoplaza in (10,95)                  
and b.statusplaza in (10,11,14,15) and  b.tipoplaza in (44,48)   
-- and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End           
and Hcontinuidad.id_emp in (select id_emp from Hcontinuidad where [añoqna] = @Qna and ([añoQnaContinuidad] = '''' or [añoQnaContinuidad] = ''      ''  ) )
and e.id_cia = @id_cia 

--Si la plaza tiene en plaza anterior LA MISMA PLAZA                   
--y el status03,06/tipoplaza20  en la plazaanterior de la qna pasada                  
--y un status01/tipoplaza10,95 en la plazaactual                  
--eso significa que le dieron definitivamente la plaza y debe mantener continuidad                  
update Hcontinuidad set Hcontinuidad.añoQnaContinuidad = b.añoQnaContinuidad                   
from Hcontinuidad with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on Hcontinuidad.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + Hcontinuidad.id_plazaanterior + '','') <> 0  
inner join Empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where Hcontinuidad.añoqna = @Qna and Hcontinuidad.id_plazaanterior = cast(Hcontinuidad.id_plaza as varchar)                  
and Hcontinuidad.statusplaza = 01 and  Hcontinuidad.tipoplaza in ( 10 , 95)                 
and b.statusplaza in (03,06) and  b.tipoplaza in (20) 
--and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End                           
and e.id_cia = @id_cia    

----Si la el tipo de plaza es de tipo prorroga
----Select * from ttipoplaza where destipoplaza like ''pró%''
----y el tipoplazapermisoanterior es distino de 48 o 44 entonces debe cortar continuidad
update Hcontinuidad set Hcontinuidad.añoQnaContinuidad = Hcontinuidad.añoQna                  
from Hcontinuidad with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on Hcontinuidad.id_emp = b.id_emp 
inner join Empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where Hcontinuidad.añoqna = @Qna                   
and Hcontinuidad.tipoplaza in (Select id_tipoplaza from ttipoplaza where destipoplaza like ''pró%'')
and Hcontinuidad.tipoplazapermisoanterior not in (48,44)
--and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End                           
and e.id_cia = @id_cia 






-- Se agregan casos a cantinuidad 25/10/2016


-- los movimientos 1-96 deben de tomar la cntinuidad de la plaza anterior
update a set a.añoQnaContinuidad = b.añoQnaContinuidad
from hcontinuidad a  with(nolock)    
inner join ( Select * from Hcontinuidad with(nolock) where añoqna =  @Qnaanterior) b on b.id_emp = a.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0 
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.[añoqna]= @Qna
and a.statusplaza = 01 and a.tipoplaza = 96 and a.id_plazaanterior <> ''''
--and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia    


-- la licencia 88 debe tomar la continuidad anterior 
update a set a.añoQnaContinuidad = b.añoQnaContinuidad
from Hcontinuidad a with(nolock) 
inner join ( Select * from Hcontinuidad with(nolock) where añoqna =  @Qnaanterior) b on b.id_emp = a.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.[añoqna]= @Qna
and a.statusplaza = 14 and a.tipoplaza = 88 
--and a.Id_emp  in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia 

-- cuando regresa de licencia 88 debe permanecer su continuidad 
update a set a.añoQnaContinuidad = b.añoQnaContinuidad
from Hcontinuidad a  with(nolock)
inner join ( Select * from Hcontinuidad with(nolock) where añoqna =  @Qnaanterior) b on b.id_emp = a.id_emp and a.id_plaza = b.id_plaza 
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.[añoqna]= @Qna
and a.statusplaza = 01 and a.tipoplaza in (10,95,96) and b.statusplaza = 14 and b.tipoplaza = 88 
--and a.Id_emp  in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
 and e.id_cia = @id_cia 
 
-- cuando entra en licencia o reanudacion y continuia con la lic que cortan
update a set a.añoQnaContinuidad = a.añoqna
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((a.statusplaza in ( 14,10) and a.tipoplaza in (41,43,49,40)) or                 
(a.statusplaza in ( 14,10) and a.tipoplaza in (51,53)))                  
-- and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia   

 -- licencias y reanudas que cortan
update a set a.añoQnaContinuidad = a.añoqna
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 14,10) and b.tipoplaza in (41,43,49,40)) or                 
(b.statusplaza  in ( 14,10) and b.tipoplaza in (51,53)))                  
and a.statusplaza = 01 and  a.tipoplaza in( 95,10)  
--and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia   


update a set a.añoQnaContinuidad = a.añoqna
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 14,10) and b.tipoplaza in (41,43,49,40)) or                 
(b.statusplaza in ( 06,10,14) and b.tipoplaza in (51,53)))                  
and ((a.statusplaza in ( 14,10,15) and a.tipoplaza in (44,42,48)) or                 
(a.statusplaza in ( 14,10) and a.tipoplaza in (52)))
--and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia   

update a set a.añoQnaContinuidad = a.añoqna
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 14,10,15) and b.tipoplaza in (44,42,48)) or                 
(b.statusplaza in (14,10) and b.tipoplaza in (52)))                  
and ((a.statusplaza in ( 14,10) and a.tipoplaza in (41,43,49,40)) or                 
(a.statusplaza in ( 06,10,14) and a.tipoplaza in (51,53  )))
--and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia   




-- licencias que no pierden la continuidad -- 05052020 la lic 42 corta
update a set a.añoQnaContinuidad = b.añoQnaContinuidad
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((a.statusplaza in ( 14,10,15) and a.tipoplaza in (44,48)) or                 
(a.statusplaza in ( 14,10,15) and a.tipoplaza in (52))) and 
((b.statusplaza in ( 14,10,15) and b.tipoplaza in (4,48)) or                 
(b.statusplaza in ( 14,10,15) and b.tipoplaza in (52)))
-- and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia   

-- cuando regresa de una licencia que no debe cortar continuidad -- 05052020 la lic 42 corta
update a set a.añoQnaContinuidad = b.añoQnaContinuidad
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza  in ( 14,10,15) and b.tipoplaza in (44,48)) or                 
(b.statusplaza in ( 14,10,15) and b.tipoplaza in (52)))                  
and ( (a.statusplaza = 01 and  a.tipoplaza in( 95,10,96)) or (a.statusplaza = 06 and  a.tipoplaza in(20)) )
-- and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia   





-- plaza 6-20 que tuvieron otra plaza y esa plaza esta en 14-42 -- 05052020 la lic 42 corta
update a set a.añoQnaContinuidad = b.añoQnaContinuidad
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0 
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
a.statusplaza = 06 and a.tipoplaza = 20
and b.statusplaza in( 14,10) and b.tipoplaza = 0
and a.id_plazaanterior <> ''''
--and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia 

-- plaza 6-20 que tienen en la misma quincena la licencia 42

update a set a.añoQnaContinuidad = b.añoQnaContinuidad
from Hcontinuidad a with(nolock) inner join (
  select h.* from Hcontinuidad h with(nolock) inner join (
  select a.id_emp, a.[añoqna], min(a.id_plaza) id_plaza
  from Hcontinuidad a with(nolock)
  inner join (
  Select id_emp, añoqna, min(añoqnacontinuidad) añoqnacontinuidad  from Hcontinuidad with(nolock) where añoqna = @Qnaanterior group by id_emp,añoqna
  ) b on a.id_emp = b.id_emp and a.[añoQnaContinuidad] = b.[añoQnaContinuidad] and a.[añoqna] = b.[añoqna]
  where a.[añoqna] = @Qnaanterior
  group by a.id_emp, a.[añoqna]
  ) m on m.id_emp = h.id_emp and m.id_plaza = h.id_plaza and m.añoqna = h.añoqna
) B                  
on a.id_emp = b.id_emp 
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                   
a.statusplaza = 06 and a.tipoplaza in (20)                
-- and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia  
and exists (
select 1 from Hcontinuidad h where h.id_emp = a.id_emp and h.[añoqna] = @Qna and h.statusplaza = 10 and h.tipoplaza = 42
)






-- movimientos 96 que tuvieron una baja 32 o 35 no cortan
update a set a.añoQnaContinuidad = b.añoQnaContinuidad
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0 
inner join empleados e with(nolock) on e.id_emp = a.id_emp
inner join hplazas h with(nolock) on h.id_plaza = b.id_plaza and h.Id_TipoMovPlazas = 1 and h.Fecha = dbo.anioQuincenaToFecha(b.añoqna, 1) and h.Valor_IdCampo in (32,35)
where a.añoqna = @Qna  and a.id_plazaanterior <> ''''                
and a.statusplaza = 01 and  a.tipoplaza = 96 
--and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia 


-- tenian una hija 6-20 y le dan una padre debe de tener continuidad 
update a set a.añoQnaContinuidad = b.añoQnaContinuidad
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and a.id_plazaanterior <> '''' 
and b.statusplaza = 06 and  b.tipoplaza = 20 
and a.statusplaza = 01 and a.tipoplaza in (95,10,96)
and a.categoria = b.categoria
and b.id_plaza in (select id_plaza from hplazas where Id_TipoMovPlazas = 4)
and a.id_plaza not in (select id_plaza from hplazas where Id_TipoMovPlazas = 4)
--and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia 



--de baja de 1-95-10 a 06-20

update a set a.añoQnaContinuidad = b.añoQnaContinuidad
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0 
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and  b.statusplaza in ( 01) and b.tipoplaza in (95,10,96)                
and a.statusplaza = 6 and  a.tipoplaza in( 20)  
--and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia



-- continuidad de regularizados se trunca si la plaza anterior no esta conciliada

update a set a.añoQnaContinuidad = a.añoQna
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0 
inner join empleados e with(nolock) on e.id_emp = a.id_emp
inner join hplazas h with(nolock) on h.id_plaza = b.id_plaza and h.Id_TipoMovPlazas = 1 and h.Fecha = dbo.anioQuincenaToFecha(b.añoqna, 1) and h.Valor_IdCampo in (32)
where a.añoqna = @Qna  and a.id_plazaanterior <> ''''                
and ((a.statusplaza = 01 and  a.tipoplaza = 95) or (a.statusplaza = 06 and  a.tipoplaza = 20)   )
--and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza in (select id_plaza from Thst_Plaza where Regularizada = 1)

update a set a.añoQnaContinuidad = b.añoQnaContinuidad
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0 
inner join empleados e with(nolock) on e.id_emp = a.id_emp
inner join hplazas h with(nolock) on h.id_plaza = b.id_plaza and h.Id_TipoMovPlazas = 1 and h.Fecha = dbo.anioQuincenaToFecha(b.añoqna, 1) and h.Valor_IdCampo in (32)
where a.añoqna = @Qna  and a.id_plazaanterior <> ''''                
and ((a.statusplaza = 01 and  a.tipoplaza = 95) or (a.statusplaza = 06 and  a.tipoplaza = 20)   )
--and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1)



-------------- queries nuevos movimientos


-- Si esta en 01 95-96-10 o 06 20 24 25 y pasa a motivo nuevo misma plaza mantiene continuidad
update a set a.añoQnaContinuidad = b.añoQnaContinuidad
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 01) and b.tipoplaza in (95,96,10)) or                 
(b.statusplaza = 06 and b.tipoplaza in (20,24,25)))                  
and ( (a.statusplaza = 01 and  a.tipoplaza in( 111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151 )) or -- ''10'',''FV'',''FT'',''FZ'',''FW'',''FJ'',''FK'',''FS'',''FY'',''FJ'',''FI'' 
(a.statusplaza = 06 and  a.tipoplaza in(88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)) ) 
-- and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1)


-- Si esta en 01 95-96-10 o 06 20 24 25 y pasa a motivo nuevo OTRA PLAZA mantiene continuidad
update a set a.añoQnaContinuidad = b.añoQnaContinuidad
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and a.id_plazaanterior <> '''' and                
((b.statusplaza in ( 01) and b.tipoplaza in (95,96,10)) or                 
(b.statusplaza = 06 and b.tipoplaza in (20,24,25)))                  
and ( (a.statusplaza = 01 and  a.tipoplaza in( 111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151)) or 
(a.statusplaza = 06 and  a.tipoplaza in(88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)) ) 
-- and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1) 


-- si de nuevo movimiento regresa a 01 95-96-10 o 06 20 24 25 en la misma plaza continuia
update a set a.añoQnaContinuidad = b.añoQnaContinuidad
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 01) and b.tipoplaza in (111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151 )) or                 
(b.statusplaza = 06 and b.tipoplaza in (88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)))                  
and ( (a.statusplaza = 01 and  a.tipoplaza in(95,96,10 )) or 
(a.statusplaza = 06 and  a.tipoplaza in(20,24,25)) ) 
-- and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1)  


-- si de nuevo movimiento regresa a 01 95-96-10 o 06 20 24 25 en OTRA PLAZA continuia
update a set a.añoQnaContinuidad = b.añoQnaContinuidad
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and a.id_plazaanterior <> '''' and                
((b.statusplaza in ( 01) and b.tipoplaza in (111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151)) or                 
(b.statusplaza = 06 and b.tipoplaza in (88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)))                  
and (( a.statusplaza = 01 and  a.tipoplaza in( 95,96,10 )) or 
(a.statusplaza = 06 and  a.tipoplaza in(20,24,25)) ) 
-- and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1)  


-- de un nuevo movimiento a otro nuevo movimiento con las misma plaza
update a set a.añoQnaContinuidad = b.añoQnaContinuidad
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 01) and b.tipoplaza in (111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151)) or                 
(b.statusplaza = 06 and b.tipoplaza in (88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)))                  
and (( a.statusplaza = 01 and  a.tipoplaza in(111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151  )) or 
(a.statusplaza = 06 and  a.tipoplaza in(88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)) ) 
-- and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1) 


-- de un nuevo movimiento a otro nuevo movimiento con OTRA plaza
update a set a.añoQnaContinuidad = b.añoQnaContinuidad
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and a.id_plazaanterior <> '''' and                
((b.statusplaza in ( 01) and b.tipoplaza in (111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151 )) or                 
(b.statusplaza = 06 and b.tipoplaza in (88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)))                  
and (( a.statusplaza = 01 and  a.tipoplaza in( 111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151  ) ) or 
(a.statusplaza = 06 and  a.tipoplaza in(88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)) ) 
-- and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1) 





-- Si tiene nuevo movimiento y entra a lic 14-10 41-43-49-40 0 06 51-53 corta continuidad
 update a set a.añoQnaContinuidad = a.añoqna
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 01) and b.tipoplaza in (111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151 )) or                 
(b.statusplaza = 06 and b.tipoplaza in (88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)))                  
and (( a.statusplaza in (14,10) and  a.tipoplaza in(41,43,49,40)) or 
(a.statusplaza in (14,10) and  a.tipoplaza in(51,53)) )
-- and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1)   


-- si esta en lic 14-10 41-43-49-40 0 06 51-53 y le dan mov nuevo inicia su continuidad
 update a set a.añoQnaContinuidad = a.añoqna
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 14,10) and b.tipoplaza in (41,43,49,40 )) or                 
(b.statusplaza in (14,10) and b.tipoplaza in (51,53)))                  
and (( a.statusplaza in (01) and  a.tipoplaza in(111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151 ) ) or 
(a.statusplaza = 06 and  a.tipoplaza in(88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)) )
-- and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1)   


-- si tine plaza en licencia y le dan una con movimiento sdp
update a set a.añoQnaContinuidad =  b.añoQnaContinuidad
from Hcontinuidad a with(nolock) inner join 
( Select * from Hcontinuidad with(nolock) where añoqna = @Qna
) B                  
on a.id_emp = b.id_emp 
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 14,10,15) and b.tipoplaza in (44,42,48,88 )) or                 
(b.statusplaza in ( 14,10,15) and b.tipoplaza in (52)))                  
and (( a.statusplaza in (01) and  a.tipoplaza in(113,115,116,123,124,125,126,131,132,147,148,150,151) ) or 
(a.statusplaza = 06 and  a.tipoplaza in(88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)) )
-- and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia =  @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1)



-- si tiene un nuevo movimiento y entra el lic 14-10 44-42-48-88 o 06 52 continuia -- 05052020 quito la lic 42 ya que no continua
 update a set a.añoQnaContinuidad = b.añoQnaContinuidad
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 01) and b.tipoplaza in (111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151)) or                 
(b.statusplaza = 06 and b.tipoplaza in (88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)))                  
and (( a.statusplaza in ( 14,10,15) and  a.tipoplaza in(44,48,88)) or 
(a.statusplaza in ( 14,10,15) and  a.tipoplaza in(52)) )
-- and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1) 



-- si regresa de lic 14-10 44-42-48-88 o 06 52 a un nuevo movimiento continua-- 05052020 quito la lic 42 ya que no continua
 update a set a.añoQnaContinuidad =  b.añoQnaContinuidad
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 14,10,15) and b.tipoplaza in (44,48,88 )) or                 
(b.statusplaza in ( 14,10,15) and b.tipoplaza in (52)))                  
and (( a.statusplaza in (01) and  a.tipoplaza in(111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151 ) ) or 
(a.statusplaza = 06 and  a.tipoplaza in(88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)) )
-- and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia =  @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1)

-- 05052020 quito la lic 42 ya que no continua
 update a set a.añoQnaContinuidad =  b.añoQnaContinuidad
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 14,10,15) and b.tipoplaza in (44,48,88 )) or                 
(b.statusplaza in ( 14,10,15) and b.tipoplaza in (52)))                  
and (( a.statusplaza in (01) and  a.tipoplaza in(111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151 ) ) or 
(a.statusplaza = 06 and  a.tipoplaza in(88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)) )
-- and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia =  @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1)



-- 23/11/2018 si esta en 6 15 y pasas a 6 -90-11 con otra plaza corta continuidad
update a set a.añoQnaContinuidad = a.añoQna
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and (b.statusplaza = 06 and  b.tipoplaza in(15,103,137)) and
(a.statusplaza = 06 and  a.tipoplaza in(11,99,133,108,143,15,103,137))
-- and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1)




---- de 96 a 96-10 y al reves con diferente plaza continuan continuan
update a set a.añoQnaContinuidad = b.añoQnaContinuidad
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and a.id_plazaanterior <> '''' and                
((b.statusplaza in ( 01) and b.tipoplaza in (95,96,10)) )                  
and ( (a.statusplaza = 01 and  a.tipoplaza in( 95,96,10))) 
-- and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1) 

update a set a.añoQnaContinuidad = b.añoQnaContinuidad
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 01) and b.tipoplaza in (95,96,10)) )                  
and ( (a.statusplaza = 01 and  a.tipoplaza in( 95,96,10))) 
-- and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1) 


--------------      
update Hcontinuidad set añoqnacontinuidad = añoqna 
from Hcontinuidad with(nolock) inner join Empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where añoqna = @Qna and añoqnacontinuidad = ''      ''   
--and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End                  
and e.id_cia = @id_cia 



-- para cambios de estado

-- lo comento para aguinaldo

--update h set h.añoqnacontinuidad = es.sep
--from hcontinuidad h
--inner join (
--select fd.Id_Emp, fdd.Id_Plaza, dbo.fechaToAnioQuincena(fdd.fechaini) qna, s.sep from FUP_Documentos fd
--inner join FUP_Documento_Detalle fdd on fd.Id_Documento = fdd.Id_Documento
--inner join FUP_Informacion_Documentos fid on fid.Id_Documento = fd.Id_Documento
--inner join FUP_MotivoMovimiento fmm on fmm.Id_MotivoMovimiento = fdd.Id_MotivoMovimiento
--inner join (
--  select a.id_emp, dbo.fechaToAnioQuincena(a.fecha_alta_sep) sep from HFecha_Alta_SEP a inner join (
--  select id_emp, max(fecha) fecha from HFecha_Alta_SEP where fecha <= getdate() group by id_emp
--  ) b on a.fecha = b.fecha and a.id_emp = b.id_emp
--) s on s.id_emp = fd.id_emp
--where fdd.Id_MotivoMovimiento = 1 and fmm.Id_TipoMovimiento = 2
--) es on es.id_emp = h.id_emp and es.id_plaza = h.id_plaza and es.qna = h.añoqna
--inner join empleados e on e.id_emp = h.id_emp
--where h.[añoqna] = @Qna and e.id_cia = @id_cia




end

else

begin

-- para empleados especificos

update Hcontinuidad set añoqnacontinuidad = ''      '' 
from Hcontinuidad with(nolock) inner join empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where añoqna = @Qna and Hcontinuidad.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))     
and e.id_cia = @id_cia

--primero actualizo la continuidad de las plazas que no tienen plazaanterior ,que ya se pagaron la quincena pasada y siguen igual          
-- en tipo, status y categoria          
update Hcontinuidad set Hcontinuidad.añoQnaContinuidad = b.añoQnaContinuidad                   
from Hcontinuidad with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B on Hcontinuidad.id_emp = b.id_emp and Hcontinuidad.id_plaza = b.id_plaza 
inner join empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where Hcontinuidad.añoqna = @Qna and Hcontinuidad.id_plazaanterior = '''' and          
Hcontinuidad.statusplaza = b.statusplaza and Hcontinuidad.tipoplaza = b.tipoplaza and           
Hcontinuidad.categoria = b.categoria 
and Hcontinuidad.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))             
and e.id_cia = @id_cia

--actualizo la continuidad de las plazas que no tienen plazaanterior (o es la misma ),que ya se pagaron la quincena pasada y cambiaron          
-- cierto tipo o status ( proporcionados por ellos ) que no deberia de cambiar continuidad          
update Hcontinuidad set Hcontinuidad.añoQnaContinuidad = b.añoQnaContinuidad                   
from Hcontinuidad with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on Hcontinuidad.id_emp = b.id_emp and Hcontinuidad.id_plaza = b.id_plaza  
inner join empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where Hcontinuidad.añoqna = @Qna and  Hcontinuidad.añoQnaContinuidad = '''' and       
(Hcontinuidad.id_plazaanterior = cast(b.id_plaza as varchar) or Hcontinuidad.id_plazaanterior = '''' ) and          
((Hcontinuidad.statusplaza = 10 and Hcontinuidad.tipoplaza  in (44,48) ) or      
(Hcontinuidad.statusplaza = 14 and Hcontinuidad.tipoplaza  = 44 ) or       
(Hcontinuidad.statusplaza = 15 and Hcontinuidad.tipoplaza  = 48 ) or      
(Hcontinuidad.statusplaza = 11 and Hcontinuidad.tipoplaza  = 44 ) ) 
and Hcontinuidad.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia
                  
--Si la plaza aun tiene añoqnacontinuidad vacio Y NO TIENE ID_PLAZAANTERIOR                  
--significa que la plaza es nueva, asi que la continuidad empieza a partir de este momento                  
Update Hcontinuidad set Hcontinuidad.añoQnaContinuidad = Hcontinuidad.añoqna 
from Hcontinuidad with(nolock) inner join empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where Hcontinuidad.añoqna = @Qna and Hcontinuidad.añoQnaContinuidad = ''''                   
and Hcontinuidad.id_plazaanterior = '''' 
and Hcontinuidad.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia                          
                  
--Si la plaza tiene en plaza anterior LA MISMA PLAZA                   
--y el status01/tipoplaza95  en la plazaanterior de la qna pasada                  
--y un status01/tipoplaza10 en la plazaactual                  
--eso significa que le dieron definitivamente la plaza y debe mantener continuidad                  
update Hcontinuidad set Hcontinuidad.añoQnaContinuidad = b.añoQnaContinuidad                   
from Hcontinuidad with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on Hcontinuidad.id_emp = b.id_emp and b.id_plaza=Hcontinuidad.id_plaza   
inner join empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where Hcontinuidad.añoqna = @Qna and (Hcontinuidad.id_plazaanterior = cast(Hcontinuidad.id_plaza as varchar) or Hcontinuidad.id_plazaanterior = ''''  )                
and Hcontinuidad.statusplaza = 01 and  Hcontinuidad.tipoplaza = 10                  
and b.statusplaza = 01 and  b.tipoplaza = 95  
and Hcontinuidad.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia                            
                  
                  
--Si la plaza tiene en plaza anterior LA MISMA PLAZA                   
--y no cambia ni el tipo,ni el status,ni lacategoria                  
--eso significa que debe mantener continuidad                  
update Hcontinuidad set Hcontinuidad.añoQnaContinuidad = b.añoQnaContinuidad                   
from Hcontinuidad with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on Hcontinuidad.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + Hcontinuidad.id_plazaanterior + '','') <> 0   
inner join empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where Hcontinuidad.añoqna = @Qna and charindex('',''+ ltrim(rtrim(cast(hcontinuidad.id_plaza  as varchar))) + '','','','' + Hcontinuidad.id_plazaanterior + '','') <> 0            
and Hcontinuidad.statusplaza = b.statusplaza and  Hcontinuidad.tipoplaza = b.tipoplaza                  
and Hcontinuidad.categoria = b.categoria  
and Hcontinuidad.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia                             
                
--Si la plaza NO tiene en plaza anterior                   
--y un status14/tipoplaza41-42-43-49 ó status06/tipoplaza51-52-53 en la plazaactual                 
--eso significa que debe perder continuidad                  
update Hcontinuidad set Hcontinuidad.añoQnaContinuidad = añoQna    
from Hcontinuidad with(nolock) inner join empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where ((Hcontinuidad.statusplaza = 14 and Hcontinuidad.tipoplaza in (41,42,43,49)) or                 
(Hcontinuidad.statusplaza = 06 and Hcontinuidad.tipoplaza in (51,52,53)))                
 and Hcontinuidad.añoqna = @Qna  
 and Hcontinuidad.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia                         
                  
--Si en la qna anterior                 
--el status14/tipoplaza41-42-43-49 ó status06/tipoplaza51-52-53  en la plazaanterior de la qna pasada                  
--y un status01/tipoplaza95 en la plazaactual                 
--eso significa viene regresando de una licencia   y debe iniciar la continuidad                  
update Hcontinuidad set Hcontinuidad.añoQnaContinuidad = Hcontinuidad.añoQna                 
from Hcontinuidad with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on Hcontinuidad.id_emp = b.id_emp and Hcontinuidad.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where Hcontinuidad.añoqna = @Qna and                
((b.statusplaza = 14 and b.tipoplaza in (41,42,43,49)) or                 
(b.statusplaza = 06 and b.tipoplaza in (51,52,53)))                  
and Hcontinuidad.statusplaza = 01 and  Hcontinuidad.tipoplaza = 95  
and Hcontinuidad.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia                              
                
--Si tiene PLAZAANTERIOR pero el status y el motivo es el mismo que el actual            
--debe de tomar la continuidad de la plaza anterior            
update Hcontinuidad set Hcontinuidad.añoQnaContinuidad = b.añoQnaContinuidad                   
from Hcontinuidad with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on Hcontinuidad.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + Hcontinuidad.id_plazaanterior + '','') <> 0 
inner join empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where Hcontinuidad.añoqna = @Qna and Hcontinuidad.id_plazaanterior <> ''''            
and Hcontinuidad.tipoplaza = b.tipoplaza and Hcontinuidad.statusplaza = b.statusplaza  
and Hcontinuidad.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia                
            
--Si tiene PLAZAANTERIOR pero el status y el motivo de la nueva es 01-10            
-- y el status y motivo de la anterior es 01-95            
--debe de tomar la continuidad de la plaza anterior            
update Hcontinuidad set Hcontinuidad.añoQnaContinuidad = b.añoQnaContinuidad                   
from Hcontinuidad with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B               
on Hcontinuidad.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + Hcontinuidad.id_plazaanterior + '','') <> 0
inner join empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where Hcontinuidad.añoqna = @Qna and Hcontinuidad.id_plazaanterior <> ''''            
and ((Hcontinuidad.tipoplaza = 10 and Hcontinuidad.statusplaza = 01 and b.tipoplaza = 95 and b.statusplaza = 01) or      
(Hcontinuidad.tipoplaza = 95 and Hcontinuidad.statusplaza = 01 and b.tipoplaza = 10 and b.statusplaza = 01) )  
and Hcontinuidad.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia         
          
-------------------------------------------         
--Si la plaza tiene en plaza anterior LA MISMA PLAZA                   
--y el status10,11,14,15/tipoplaza44,48  en la plazaanterior de la qna pasada                  
--y un status01/tipoplaza10,95 en la plazaactual                  
--eso significa que le dieron definitivamente la plaza y debe mantener continuidad                  
--update Hcontinuidad set Hcontinuidad.añoQnaContinuidad = b.añoQnaContinuidad                   
--from Hcontinuidad inner join ( Select * from Hcontinuidad where añoqna = @Qnaanterior) B                  
--on Hcontinuidad.id_emp = b.id_emp       
--where Hcontinuidad.añoqna = @Qna and       
--(Hcontinuidad.id_plazaanterior = cast(b.id_plaza as varchar) or Hcontinuidad.id_plazaanterior = '''' )                 
--and Hcontinuidad.statusplaza = 01 and  Hcontinuidad.tipoplaza in (10,95)                  
--and b.statusplaza in (10,11,14,15) and  b.tipoplaza in (44,48)   and Hcontinuidad.Id_emp = Case When @idEmp = 0 Then Hcontinuidad.Id_emp else @idEmp End              
update Hcontinuidad set Hcontinuidad.añoQnaContinuidad = b.añoQnaContinuidad                   
from Hcontinuidad with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on Hcontinuidad.id_emp = b.id_emp and  Hcontinuidad.id_plaza = b.id_plaza 
inner join empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where Hcontinuidad.añoqna = @Qna and       
(Hcontinuidad.id_plazaanterior = cast(b.id_plaza as varchar) or Hcontinuidad.id_plazaanterior = '''' )                 
and Hcontinuidad.statusplaza = 01 and  Hcontinuidad.tipoplaza in (10,95)                  
and b.statusplaza in (10,11,14,15) and  b.tipoplaza in (44,48)   
and Hcontinuidad.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia              

update Hcontinuidad set Hcontinuidad.añoQnaContinuidad = b.añoQnaContinuidad                   
from Hcontinuidad with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on Hcontinuidad.id_emp = b.id_emp   
inner join empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where Hcontinuidad.añoqna = @Qna and       
(Hcontinuidad.id_plazaanterior = cast(b.id_plaza as varchar) or Hcontinuidad.id_plazaanterior = '''' )                 
and Hcontinuidad.statusplaza = 01 and  Hcontinuidad.tipoplaza in (10,95)                  
and b.statusplaza in (10,11,14,15) and  b.tipoplaza in (44,48)   
and Hcontinuidad.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia     
and Hcontinuidad.id_emp in (select id_emp from Hcontinuidad where [añoqna] = @Qna and ([añoQnaContinuidad] = '''' or [añoQnaContinuidad] = ''      ''  ) )

--Si la plaza tiene en plaza anterior LA MISMA PLAZA                   
--y el status03,06/tipoplaza20  en la plazaanterior de la qna pasada                  
--y un status01/tipoplaza10,95 en la plazaactual                  
--eso significa que le dieron definitivamente la plaza y debe mantener continuidad                  
update Hcontinuidad set Hcontinuidad.añoQnaContinuidad = b.añoQnaContinuidad                   
from Hcontinuidad with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on Hcontinuidad.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + Hcontinuidad.id_plazaanterior + '','') <> 0
inner join empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where Hcontinuidad.añoqna = @Qna and Hcontinuidad.id_plazaanterior = cast(Hcontinuidad.id_plaza as varchar)                  
and Hcontinuidad.statusplaza = 01 and  Hcontinuidad.tipoplaza in ( 10 , 95)                 
and b.statusplaza in (03,06) and  b.tipoplaza in (20) 
and Hcontinuidad.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia                           
             
----Si la el tipo de plaza es de tipo prorroga
----Select * from ttipoplaza where destipoplaza like ''pró%''
----y el tipoplazapermisoanterior es distino de 48 o 44 entonces debe cortar continuidad
update Hcontinuidad set Hcontinuidad.añoQnaContinuidad = Hcontinuidad.añoQna                  
from Hcontinuidad with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on Hcontinuidad.id_emp = b.id_emp 
inner join empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where Hcontinuidad.añoqna = @Qna                   
and Hcontinuidad.tipoplaza in (Select id_tipoplaza from ttipoplaza where destipoplaza like ''pró%'')
and Hcontinuidad.tipoplazapermisoanterior not in (48,44)
and Hcontinuidad.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia                             




-- Se agregan casos a cantinuidad 25/10/2016


-- los movimientos 1-96 deben de tomar la cntinuidad de la plaza anterior
update a set a.añoQnaContinuidad = b.añoQnaContinuidad
from hcontinuidad a   with(nolock)   
inner join ( Select * from Hcontinuidad with(nolock) where añoqna =  @Qnaanterior) b on b.id_emp = a.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0 
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.[añoqna]= @Qna
and a.statusplaza = 01 and a.tipoplaza = 96 and a.id_plazaanterior <> ''''
and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia    


-- la licencia 88 debe tomar la continuidad anterior 
update a set a.añoQnaContinuidad = b.añoQnaContinuidad
from Hcontinuidad a  with(nolock)
inner join ( Select * from Hcontinuidad with(nolock) where añoqna =  @Qnaanterior) b on b.id_emp = a.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.[añoqna]= @Qna
and a.statusplaza = 14 and a.tipoplaza = 88 and a.Id_emp  in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia 

-- cuando regresa de licencia 88 debe permanecer su continuidad 
update a set a.añoQnaContinuidad = b.añoQnaContinuidad
from Hcontinuidad a  with(nolock)
inner join ( Select * from Hcontinuidad with(nolock) where añoqna =  @Qnaanterior) b on b.id_emp = a.id_emp and a.id_plaza = b.id_plaza 
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.[añoqna]= @Qna
and a.statusplaza = 01 and a.tipoplaza in (10,95,96) and b.statusplaza = 14 and b.tipoplaza = 88 
 and a.Id_emp  in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
 and e.id_cia = @id_cia 
 
-- cuando entra en licencia o reanudacion y continuia con la lic que cortan
update a set a.añoQnaContinuidad = a.añoqna
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((a.statusplaza in ( 14,10) and a.tipoplaza in (41,43,49,40)) or                 
(a.statusplaza in ( 14,10) and a.tipoplaza in (51,53)))                  
 and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia   

 -- licencias y reanudas que cortan
update a set a.añoQnaContinuidad = a.añoqna
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 14,10) and b.tipoplaza in (41,43,49,40)) or                 
(b.statusplaza in ( 14,10) and b.tipoplaza in (51,53)))                  
and a.statusplaza = 01 and  a.tipoplaza in( 95,10)  
and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia   

update a set a.añoQnaContinuidad = a.añoqna
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 14,10) and b.tipoplaza in (41,43,49,40)) or                 
(b.statusplaza in ( 06,10,14) and b.tipoplaza in (51,53)))                  
and ((a.statusplaza in ( 14,10,15) and a.tipoplaza in (44,42,48)) or                 
(a.statusplaza in ( 14,10) and a.tipoplaza in (52)))
and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia   

update a set a.añoQnaContinuidad = a.añoqna
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 14,10,15) and b.tipoplaza in (44,42,48)) or                 
(b.statusplaza in (14,10) and b.tipoplaza in (52)))                  
and ((a.statusplaza in ( 14,10) and a.tipoplaza in (41,43,49,40)) or                 
(a.statusplaza in ( 06,10,14) and a.tipoplaza in (51,53  )))
and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia   




-- licencias que no pierden la continuidad -- 05052020 la lic 42 corta
update a set a.añoQnaContinuidad = b.añoQnaContinuidad
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((a.statusplaza in ( 14,10,15) and a.tipoplaza in (44,48)) or                 
(a.statusplaza in ( 14,10,15) and a.tipoplaza in (52)))  and
((b.statusplaza in ( 14,10,15) and b.tipoplaza in (44,48)) or                 
(b.statusplaza in ( 14,10,15) and b.tipoplaza in (52)))
 and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia   

-- cuando regresa de una licencia que no debe cortar continuidad-- 05052020 la lic 42 corta
update a set a.añoQnaContinuidad = b.añoQnaContinuidad
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 14,10,15) and b.tipoplaza in (44,48)) or                 
(b.statusplaza in ( 14,10,15) and b.tipoplaza in (52)))                  
and ( (a.statusplaza = 01 and  a.tipoplaza in( 95,10,96)) or (a.statusplaza = 06 and  a.tipoplaza in(20)) ) 
 and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia   



-- plaza 6-20 que tuvieron otra plaza y esa plaza esta en 14-42 -- 05052020 la lic 42 corta
update a set a.añoQnaContinuidad = b.añoQnaContinuidad
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0 
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
a.statusplaza = 06 and a.tipoplaza = 20
and b.statusplaza in( 14,10) and b.tipoplaza = 0
and a.id_plazaanterior <> ''''
and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia 

-- plaza 6-20 que tienen en la misma quincena la licencia 42

update a set a.añoQnaContinuidad = b.añoQnaContinuidad
from Hcontinuidad a with(nolock) inner join (
  select h.* from Hcontinuidad h with(nolock) inner join (
  select a.id_emp, a.[añoqna], min(a.id_plaza) id_plaza
  from Hcontinuidad a with(nolock)
  inner join (
  Select id_emp, añoqna, min(añoqnacontinuidad) añoqnacontinuidad  from Hcontinuidad with(nolock) where añoqna = @Qnaanterior group by id_emp,añoqna
  ) b on a.id_emp = b.id_emp and a.[añoQnaContinuidad] = b.[añoQnaContinuidad] and a.[añoqna] = b.[añoqna]
  where a.[añoqna] = @Qnaanterior
  group by a.id_emp, a.[añoqna]
  ) m on m.id_emp = h.id_emp and m.id_plaza = h.id_plaza and m.añoqna = h.añoqna
) B                  
on a.id_emp = b.id_emp 
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                   
a.statusplaza = 06 and a.tipoplaza in (20)                
 and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia  
and exists (
select 1 from Hcontinuidad h where h.id_emp = a.id_emp and h.[añoqna] = @Qna and h.statusplaza = 10 and h.tipoplaza = 42
)






-- movimientos 96 que tuvieron una baja 32 o 35 no cortan
update a set a.añoQnaContinuidad = b.añoQnaContinuidad
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0 
inner join empleados e with(nolock) on e.id_emp = a.id_emp
inner join hplazas h with(nolock) on h.id_plaza = b.id_plaza and h.Id_TipoMovPlazas = 1 and h.Fecha = dbo.anioQuincenaToFecha(b.añoqna, 1) and h.Valor_IdCampo in (32,35)
where a.añoqna = @Qna  and a.id_plazaanterior <> ''''                
and a.statusplaza = 01 and  a.tipoplaza = 96 
and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia 


-- tenian una hija 6-20 y le dan una padre debe de tener continuidad 
update a set a.añoQnaContinuidad = b.añoQnaContinuidad
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and a.id_plazaanterior <> '''' 
and b.statusplaza = 06 and  b.tipoplaza = 20 
and a.statusplaza = 01 and a.tipoplaza in (95,10,96)
and a.categoria = b.categoria
and b.id_plaza in (select id_plaza from hplazas where Id_TipoMovPlazas = 4)
and a.id_plaza not in (select id_plaza from hplazas where Id_TipoMovPlazas = 4)
and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia 


--de baja de 1-95-10 a 06-20

update a set a.añoQnaContinuidad = b.añoQnaContinuidad
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0 
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and  b.statusplaza in ( 01) and b.tipoplaza in (95,10,96)                
and a.statusplaza = 6 and  a.tipoplaza in( 20)  
and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia



-- continuidad de regularizados se trunca si la plaza anterior no esta conciliada

update a set a.añoQnaContinuidad = a.añoQna
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0 
inner join empleados e with(nolock) on e.id_emp = a.id_emp
inner join hplazas h with(nolock) on h.id_plaza = b.id_plaza and h.Id_TipoMovPlazas = 1 and h.Fecha = dbo.anioQuincenaToFecha(b.añoqna, 1) and h.Valor_IdCampo in (32)
where a.añoqna = @Qna  and a.id_plazaanterior <> ''''                
and ((a.statusplaza = 01 and  a.tipoplaza = 95) or (a.statusplaza = 06 and  a.tipoplaza = 20)   )
and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza in (select id_plaza from Thst_Plaza where Regularizada = 1)

update a set a.añoQnaContinuidad = b.añoQnaContinuidad
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0 
inner join empleados e with(nolock) on e.id_emp = a.id_emp
inner join hplazas h with(nolock) on h.id_plaza = b.id_plaza and h.Id_TipoMovPlazas = 1 and h.Fecha = dbo.anioQuincenaToFecha(b.añoqna, 1) and h.Valor_IdCampo in (32)
where a.añoqna = @Qna  and a.id_plazaanterior <> ''''                
and ((a.statusplaza = 01 and  a.tipoplaza = 95) or (a.statusplaza = 06 and  a.tipoplaza = 20)   )
and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1)



-------------- queries nuevos movimientos


-- Si esta en 01 95-96-10 o 06 20 24 25 y pasa a motivo nuevo misma plaza mantiene continuidad
update a set a.añoQnaContinuidad = b.añoQnaContinuidad
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 01) and b.tipoplaza in (95,96,10)) or                 
(b.statusplaza = 06 and b.tipoplaza in (20,24,25)))                  
and ( (a.statusplaza = 01 and  a.tipoplaza in( 111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151 )) or 
(a.statusplaza = 06 and  a.tipoplaza in(88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)) ) 
 and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1)


-- Si esta en 01 95-96-10 o 06 20 24 25 y pasa a motivo nuevo OTRA PLAZA mantiene continuidad
update a set a.añoQnaContinuidad = b.añoQnaContinuidad
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and a.id_plazaanterior <> '''' and                
((b.statusplaza in ( 01) and b.tipoplaza in (95,96,10)) or                 
(b.statusplaza = 06 and b.tipoplaza in (20,24,25)))                  
and ( (a.statusplaza = 01 and  a.tipoplaza in( 111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151 )) or 
(a.statusplaza = 06 and  a.tipoplaza in(88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)) ) 
 and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1) 


-- si de nuevo movimiento regresa a 01 95-96-10 o 06 20 24 25 en la misma plaza continuia
update a set a.añoQnaContinuidad = b.añoQnaContinuidad
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 01) and b.tipoplaza in (111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151 )) or                 
(b.statusplaza = 06 and b.tipoplaza in (88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)))                  
and ( (a.statusplaza = 01 and  a.tipoplaza in(95,96,10 )) or 
(a.statusplaza = 06 and  a.tipoplaza in(20,24,25)) ) 
 and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1)  


-- si de nuevo movimiento regresa a 01 95-96-10 o 06 20 24 25 en OTRA PLAZA continuia
update a set a.añoQnaContinuidad = b.añoQnaContinuidad
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and a.id_plazaanterior <> '''' and                
((b.statusplaza in ( 01) and b.tipoplaza in (111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151 )) or                 
(b.statusplaza = 06 and b.tipoplaza in (88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)))                  
and (( a.statusplaza = 01 and  a.tipoplaza in( 95,96,10 )) or 
(a.statusplaza = 06 and  a.tipoplaza in(20,24,25)) ) 
 and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1)  


-- de un nuevo movimiento a otro nuevo movimiento con las misma plaza
update a set a.añoQnaContinuidad = b.añoQnaContinuidad
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 01) and b.tipoplaza in (111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151 )) or                 
(b.statusplaza = 06 and b.tipoplaza in (88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)))                  
and (( a.statusplaza = 01 and  a.tipoplaza in(111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151  )) or 
(a.statusplaza = 06 and  a.tipoplaza in(88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)) ) 
 and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1) 


-- de un nuevo movimiento a otro nuevo movimiento con OTRA plaza
update a set a.añoQnaContinuidad = b.añoQnaContinuidad
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and a.id_plazaanterior <> '''' and                
((b.statusplaza in ( 01) and b.tipoplaza in (111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151 )) or                 
(b.statusplaza = 06 and b.tipoplaza in (88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)))                  
and (( a.statusplaza = 01 and  a.tipoplaza in( 111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151 ) ) or 
(a.statusplaza = 06 and  a.tipoplaza in(88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)) ) 
 and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1) 




-- Si tiene nuevo movimiento y entra a lic 14-10 41-43-49-40 0 06 51-53 corta continuidad
 update a set a.añoQnaContinuidad = a.añoqna
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 01) and b.tipoplaza in (111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151 )) or                 
(b.statusplaza = 06 and b.tipoplaza in (88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)))                  
and (( a.statusplaza in (14,10) and  a.tipoplaza in(41,43,49,40)) or 
(a.statusplaza in (14,10) and  a.tipoplaza in(51,53)) )
 and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1)   


-- si esta en lic 14-10 41-43-49-40 0 06 51-53 y le dan mov nuevo inicia su continuidad
 update a set a.añoQnaContinuidad = a.añoqna
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 14,10) and b.tipoplaza in (41,43,49,40 )) or                 
(b.statusplaza in (14,10) and b.tipoplaza in (51,53)))                  
and (( a.statusplaza in (01) and  a.tipoplaza in(111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151 ) ) or 
(a.statusplaza = 06 and  a.tipoplaza in(88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)) )
 and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1)   

-- si tine plaza en licencia y le dan una con movimiento sdp
update a set a.añoQnaContinuidad =  b.añoQnaContinuidad
from Hcontinuidad a with(nolock) inner join 
( Select * from Hcontinuidad with(nolock) where añoqna = @Qna
) B                  
on a.id_emp = b.id_emp 
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 14,10,15) and b.tipoplaza in (44,42,48,88 )) or                 
(b.statusplaza in ( 14,10,15) and b.tipoplaza in (52)))                  
and (( a.statusplaza in (01) and  a.tipoplaza in(113,115,116,123,124,125,126,131,132,147,148,150,151) ) or 
(a.statusplaza = 06 and  a.tipoplaza in(88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)) )
and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia =  @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1)


-- si tiene un nuevo movimiento y entra el lic 14-10 44-42-48-88 o 06 52 continuia -- 05052020 quito la lic 42 ya que no continua
 update a set a.añoQnaContinuidad = b.añoQnaContinuidad
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 01) and b.tipoplaza in (111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151 )) or                 
(b.statusplaza = 06 and b.tipoplaza in (88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)))                  
and (( a.statusplaza in ( 14,10,15) and  a.tipoplaza in(44,48,88)) or 
(a.statusplaza in ( 14,10,15) and  a.tipoplaza in(52)) )
 and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1) 



-- si regresa de lic 14-10 44-42-48-88 o 06 52 a un nuevo movimiento continua-- 05052020 quito la lic 42 ya que no continua
 update a set a.añoQnaContinuidad =  b.añoQnaContinuidad
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 14,10,15) and b.tipoplaza in (44,48,88 )) or                 
(b.statusplaza in ( 14,10,15) and b.tipoplaza in (52)))                  
and (( a.statusplaza in (01) and  a.tipoplaza in(111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151) ) or 
(a.statusplaza = 06 and  a.tipoplaza in(88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)) )
 and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia =  @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1)

-- 05052020 quito la lic 42 ya que no continua
 update a set a.añoQnaContinuidad =  b.añoQnaContinuidad
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 14,10,15) and b.tipoplaza in (44,48,88 )) or                 
(b.statusplaza in ( 14,10,15) and b.tipoplaza in (52)))                  
and (( a.statusplaza in (01) and  a.tipoplaza in(111,113,115,116,117,147,148,150,121,122,123,124,125,126,131,132,151 ) ) or 
(a.statusplaza = 06 and  a.tipoplaza in(88,99,100,101,102,103,104,105,106,107,108,109,110,112,114,118,133,134,135,136,137,138,139,141,142,143,144,145,146,119,120,127,128,129,130,154,155,156,157,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173)) )
 and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia =  @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1)

--------------------

-- 23/11/2018 si esta en 6 15 y pasas a 6 -90-11 con otra plaza corta continuidad
update a set a.añoQnaContinuidad = a.añoQna
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and (b.statusplaza = 06 and  b.tipoplaza in(15,103,137)) and
(a.statusplaza = 06 and  a.tipoplaza in(11,99,133,108,143,15,103,137))
 and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1)

---- de 96 a 96-10 y al reves con diferente plaza continuan continuan
update a set a.añoQnaContinuidad = b.añoQnaContinuidad
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and charindex('',''+ ltrim(rtrim(cast(b.id_plaza  as varchar))) + '','','','' + a.id_plazaanterior + '','') <> 0
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and a.id_plazaanterior <> '''' and                
((b.statusplaza in ( 01) and b.tipoplaza in (95,96,10)) )                  
and ( (a.statusplaza = 01 and  a.tipoplaza in( 95,96,10))) 
 and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1) 

update a set a.añoQnaContinuidad = b.añoQnaContinuidad
from Hcontinuidad a with(nolock) inner join ( Select * from Hcontinuidad with(nolock) where añoqna = @Qnaanterior) B                  
on a.id_emp = b.id_emp and a.id_plaza = b.id_plaza
inner join empleados e with(nolock) on e.id_emp = a.id_emp
where a.añoqna = @Qna and                
((b.statusplaza in ( 01) and b.tipoplaza in (95,96,10)) )                  
and ( (a.statusplaza = 01 and  a.tipoplaza in( 95,96,10))) 
 and a.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia and b.id_plaza not in (select id_plaza from Thst_Plaza where Regularizada = 1) 

--------------      
update Hcontinuidad set añoqnacontinuidad = añoqna 
from Hcontinuidad with(nolock) inner join empleados e with(nolock) on e.id_emp = Hcontinuidad.id_emp
where añoqna = @Qna and añoqnacontinuidad = ''      ''   
and Hcontinuidad.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))
and e.id_cia = @id_cia   




-- Para cambios de estado

-- lo comento para aguinaldo

--update h set h.añoqnacontinuidad = es.sep
--from hcontinuidad h
--inner join (
--select fd.Id_Emp, fdd.Id_Plaza, dbo.fechaToAnioQuincena(fdd.fechaini) qna, s.sep from FUP_Documentos fd
--inner join FUP_Documento_Detalle fdd on fd.Id_Documento = fdd.Id_Documento
--inner join FUP_Informacion_Documentos fid on fid.Id_Documento = fd.Id_Documento
--inner join FUP_MotivoMovimiento fmm on fmm.Id_MotivoMovimiento = fdd.Id_MotivoMovimiento
--inner join (
--  select a.id_emp, dbo.fechaToAnioQuincena(a.fecha_alta_sep) sep from HFecha_Alta_SEP a inner join (
--  select id_emp, max(fecha) fecha from HFecha_Alta_SEP where fecha <= getdate() group by id_emp
--  ) b on a.fecha = b.fecha and a.id_emp = b.id_emp
--) s on s.id_emp = fd.id_emp
--where fdd.Id_MotivoMovimiento = 1 and fmm.Id_TipoMovimiento = 2
--) es on es.id_emp = h.id_emp and es.id_plaza = h.id_plaza and es.qna = h.añoqna
--inner join empleados e on e.id_emp = h.id_emp
--where h.[añoqna] = @Qna and e.id_cia = @id_cia
--and h.Id_emp in (SELECT empleados.n.value(''.'', ''INT'') AS n FROM    @Xml.nodes(''/empleado'') AS empleados(n))



end


--- para empleados que cambian de baseica a MM y viceversa


update a set a.añoqnacontinuidad = b.añoqnacontinuidad
 from hcontinuidad a
 inner join empleados e on e.id_emp = a.id_emp
 inner join (
  select a.*, e.curp from hcontinuidad a
   inner join empleados e on e.id_emp = a.id_emp
   where a.añoqna = @Qnaanterior and e.id_cia = 3 and a.statusplaza in (01)
 ) b on e.curp = b.curp
 where a.añoqna = @Qna and e.id_cia = 2 and a.statusplaza in (01,06)
 

update a set a.añoqnacontinuidad = b.añoqnacontinuidad
 from hcontinuidad a
 inner join empleados e on e.id_emp = a.id_emp
 inner join (
  select a.*, e.curp from hcontinuidad a
   inner join empleados e on e.id_emp = a.id_emp
   where a.añoqna = @Qnaanterior and e.id_cia = 2 and a.statusplaza in (01,06)
 ) b on e.curp = b.curp
 where a.añoqna = @Qna and e.id_cia = 3 and a.statusplaza in (01)




end'
GO

GO
PRINT N'Creating [dbo].[Pcptosplaza]'
GO
IF OBJECT_ID(N'[dbo].[Pcptosplaza]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[Pcptosplaza]
	@_id_plaza  int = 0, 
	@_nanno int = 0,
	@_nord int = 0
AS
BEGIN
	declare @id_plaza int = @_id_plaza
	declare @nanno int = @_nanno
	declare @nord int = @_nord 
       
    declare @la_catego as varchar(7) = (select top 1 a.categoria from TTabulador_SE_Cat_Puesto a join HTabulador_SE_Cat_Puesto b on a.id_Tabulador_SE_Cat_Puesto = b.id_rel  where b.Id_plaza = @id_plaza)
    
    select TOp 1 id_Tabulador_SE_Cat_Puesto, TModelo_SE_id_Modelo_SE  into #tabulador  from TTabulador_SE_Cat_Puesto  where categoria =  @la_catego
    declare @se_modelo as int = (select TModelo_SE_id_Modelo_SE from #tabulador )
    declare @se_tabulador as int =(select id_Tabulador_SE_Cat_Puesto from #tabulador )
    if  @se_modelo <> 7    
    begin
		declare @elperiodo as int = 0
		if @se_modelo = 10 
			 set @elperiodo = (select id_periodo from CalenNomina where Id_cia = 3 and Año=@nanno and Numero = @nord and Parcial = 0)
		else
			 set @elperiodo = (select id_periodo from CalenNomina where Id_cia = 2 and Año=@nanno and Numero = @nord and Parcial = 0)
		
		select  id_concepto, pesos 
		into #basidcpto 
		from nom_histpagos 
		where 
			id_plaza= @id_plaza and id_periodo = @elperiodo and 
			(
				id_concepto in 
				(
					select DISTINCT id_concepto 
					from valoresmatriz5 
					where id_Tabulador_SE_Cat_Puesto = @se_tabulador 
				)
				or id_concepto in 
				(
					select DISTINCT id_concepto 
					from valoresmatriz4 
					where id_Tabulador_SE_Cat_Puesto = @se_tabulador 
				)
			) 
		
		select  id_concepto, pesos 
		into #basidcpto2 
		from histpagosp 
		where 
			id_plaza= @id_plaza and id_periodo = @elperiodo and 
			(
				id_concepto in 
				(
					select DISTINCT id_concepto 
					from valoresmatriz5 
					where id_Tabulador_SE_Cat_Puesto = @se_tabulador 
				)
				or id_concepto in 
				(
					select DISTINCT id_concepto 
					from valoresmatriz4 
					where id_Tabulador_SE_Cat_Puesto = @se_tabulador 
				)
			) 
	
		insert into #basidcpto
		select * from  #basidcpto2 

		select  a.resultado  CONCEPTO, a.descripcion DESCRIPCION, b.pesos PESOS from conceptos a 
		inner join #basidcpto b on a.id_concepto = b.id_concepto 
    end
    else
    begin    
		declare @elperiodou as int = (select id_periodo from CalenNomina where Id_cia = 1 and Año=@nanno and Numero = @nord and Parcial = 0)    

		select id_concepto, pesos into #upnidcpto from nom_histpagos where id_plaza= @id_plaza and id_periodo = @elperiodou and 
		(id_concepto in (select DISTINCT id_concepto from ValoresMatriz8  where id_Tabulador_SE_Cat_Puesto = @se_tabulador )
		 ) 
		select id_concepto, pesos into #upnidcpto2 from histpagosp where id_plaza= @id_plaza and id_periodo = @elperiodou and 
		(id_concepto in (select DISTINCT id_concepto from ValoresMatriz8  where id_Tabulador_SE_Cat_Puesto = @se_tabulador )
		 ) 
		insert into #upnidcpto
		select * from  #upnidcpto2 

			select  a.resultado  CONCEPTO, a.descripcion DESCRIPCION, b.pesos IMPORTE from conceptos a 
		inner join #upnidcpto b on a.id_concepto = b.id_concepto 

    end   
    
END
'
GO

GO
PRINT N'Creating [dbo].[P_DatosEmpleados]'
GO
IF OBJECT_ID(N'[dbo].[P_DatosEmpleados]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		<Sistemas,Noemi>
-- Create date: <Create Date, 10/05/2017 >
-- Description:	<Description, obtener datos del empleado>
-- =============================================
--exec [P_DatosEmpleados] 121,1,''CIVS89'',''''
CREATE  procedure [dbo].[P_DatosEmpleados]
(		
	@idUsuario int, --
	@opcion int, --1 RFC 2 CURP 3 NOMBRE COMPLETO
	@filtro varchar(100), --dato a buscar
	--@ss varchar(5),--sección sindical
	@nominas varchar(30)--''BASICA'',''UPN'',''MANDOS MEDIOS''
)
AS
begin
	create table #id_emps (
	id_emp int
	);
	
	if(@opcion=1)begin
		insert into #id_emps
		select ID_EMP from Empleados where RFC like ''%''+@filtro+''%'';	
	end
	else 
	if(@opcion=2)begin
		insert into #id_emps
		select  ID_EMP id_emp2 from Empleados where curp like ''%''+@filtro+''%'';
			
	end 
	else  BEGIN	
		SET @filtro = Replace(@filtro,'' '', ''%'');
		insert into #id_emps
		select ID_EMP from Empleados where ltrim(rtrim(Nombre))+'' ''+ltrim(rtrim(ApPaterno))+'' ''+ltrim(rtrim(Apmaterno)) like ''%''+ @filtro +''%'' ;
	END	

	select distinct * into #id_cts from (
		SELECT pe.id_emp AS id_emp, pe.id_plaza, pe.id_nodo 
		from Empalme_Plazaempleados pe with(nolock) 
		join ( SELECT id_emp,id_plaza,max(fecha)fecha  
				FROM Empalme_Plazaempleados pe with(nolock)
				where Id_Emp != 0  AND Id_Emp in (select * from #id_emps)           
				group by id_emp,id_plaza 
		)hist on pe.Id_Emp=hist.Id_Emp and pe.Id_plaza = hist.Id_plaza and pe.Fecha =hist.fecha 
		group by pe.id_emp, pe.id_plaza, pe.id_nodo 
	union all
		SELECT pe.id_emp AS id_emp, pe.id_plaza, pe.id_nodo 
		from Plazaempleados pe with(nolock) 
		join ( SELECT id_emp,id_plaza,max(fecha)fecha  
				FROM Plazaempleados pe with(nolock)
				where Id_Emp != 0  AND Id_Emp in (select * from #id_emps)           
				group by id_emp,id_plaza 
		)hist on pe.Id_Emp=hist.Id_Emp and pe.Id_plaza = hist.Id_plaza and pe.Fecha =hist.fecha 
		group by pe.id_emp, pe.id_plaza, pe.id_nodo 
	)cts
	
	Select distinct Empleados.id_Emp as id,Empleados.NOEMPx no_emp,ltrim(rtrim(ApPaterno)) as ApPaterno,ltrim(rtrim(ApMAterno)) as ApMaterno, ltrim(rtrim(Nombre)) as Nombre, 
			Rfc,curp, sexo,RFCFecha F_nacimiento, empleados.vigencia,empleados.edoCivil,Cuenta_Invernomina,Lunac lugar_nacimiento,imss,empleados.email,
				cast( year(Fecha_Alta_Gob_Fed) as varchar) + Right(''00'' + Cast(case when(day(Fecha_Alta_Gob_Fed)>15)then month(Fecha_Alta_Gob_Fed)*2 else (month(Fecha_Alta_Gob_Fed)*2)-1 end as Varchar(2)),2) as fechaFed,  cast( year(Fecha_Alta_SEP) as varchar) + Right(''00'' + Cast(case when(day(Fecha_Alta_SEP)>15)then month(Fecha_Alta_SEP)*2 else (month(Fecha_Alta_SEP)*2)-1 end as Varchar(2)),2) as fechaSep,  cast( year(Fecha_Alta_Rama) as varchar) + Right(''00'' + Cast(case when(day(Fecha_Alta_Rama)>15)then month(Fecha_Alta_Rama)*2 else (month(Fecha_Alta_Rama)*2)-1 end as Varchar(2)),2) as fechaRama, 
				tne.Descripcion nivel_estudios,ce.DESCR escolaridad,
				Nomina,Calle,NumExt,NumInt,tes.Descr Estado, tcol.Descr colonia,tloc.Descr localidad,tc.Descr ciudad,t.CodPostal, ss

	from ( 
			select empleados.*,desccia as Nomina,case when id_rel=3 then ''59'' else ''22'' end ss,Fecha_Alta_Gob_Fed,Fecha_Alta_SEP,Fecha_Alta_Rama
				from Empleados with(nolock) 
				Inner join tcia with(nolock) on tcia.id_cia = Empleados.id_cia and TCia.desccia in (''BASICA'',''UPN'',''MANDOS MEDIOS'')
				left join HSeccion__Sindical ss with(nolock) on empleados.Id_Emp=ss.id_emp
				LEFT JOIN ( select h.* 
							from HFecha_Alta_Gob_Fed h with(nolock) 
							inner join ( 
										select id_emp,max(fecha)as fecha
										from HFecha_Alta_Gob_Fed with(nolock) 
										where fecha <= getdate() group by id_emp
							) m on m.id_emp=h.id_emp and m.fecha=h.fecha
				) FechaAltaFed on FechaAltaFed.id_Emp = Empleados.id_Emp
				LEFT JOIN ( select h.*,DATEDIFF(year,h.Fecha_Alta_SEP,getdate()) aniosServicios
							from HFecha_Alta_SEP h with(nolock)
							inner join ( select id_emp,max(fecha)as fecha
										from HFecha_Alta_SEP with(nolock) 
										where fecha <= getdate() group by id_emp
							) m on m.id_emp=h.id_emp and m.fecha=h.fecha
				) FechaAltaSep on FechaAltaSep.id_Emp = Empleados.id_Emp
 				LEFT JOIN ( select h.* 
 							from HFecha_Alta_Rama h with(nolock)
 							inner join ( select id_emp,max(fecha)as fecha
										from HFecha_Alta_Rama with(nolock)
										where fecha <= getdate() group by id_emp 
							) m on m.id_emp=h.id_emp and m.fecha=h.fecha
 				) FechaAltaRama on FechaAltaRama.id_Emp = Empleados.id_Emp 
				where empleados.Id_Emp  in (select * from #id_emps )  				
	)Empleados --select * from empleados
	left join tdirecciones t on Empleados.Id_Direccion = t.Id_Direccion 
	left join TCiudad tc on tc.Id_Ciudad=t.Id_Ciudad
	left join TColonia tcol on tcol.Id_Colonia=t.Id_Colonia and tcol.id_ciudad=tc.Id_Ciudad
	left join TLocalidad tloc on tloc.id_Localidad=t.Id_Localidad 
	left join TEstados tes on tes.Id_Estado=t.Id_Estado 
	join #id_cts idct on idct.id_emp=Empleados.id_emp
	left join RNivelEstudios rne on empleados.id_emp = rne.id_emp
	join TNivelEstudios tne on rne.id_NivelEstudios=tne.id_NivelEstudios
	left join escolaridad e on e.Id_Emp=empleados.id_emp
	left join TBTEscol ce on ce.Id_Escolaridad=e.Id_Escolaridad
	inner join ( Select acceso.id_nodo 
				from accesosorganigrama acceso with(nolock) 
				inner join ( Select * 
								from tablaconfigorgan with(nolock) 
								where id_nodopadre in ( select id_nodo 
														from TablaConfigOrgan 
														where id_nodopadre in ( select id_nodo 
																				from TablaConfigOrgan 
																				where id_tablalongitud = 26 
																				) 
								) 
				) organ on acceso.id_nodo = organ.id_nodo where acceso.id_usuario = @idUsuario 
	) PermisosOrganigrama on PermisosOrganigrama.id_nodo = idct.id_nodo 
	INNER JOIN ( select rn.id_nodo 
					from fup_relnivel_nodo rn with(nolock) 
					inner join FUP_RelUsuariosNivelAcademico f with(nolock) on rn.id_nivel_educativo = f.id_nivel 
					where f.id_usuario = @idUsuario 
	) nivel ON nivel.id_nodo = PermisosOrganigrama.id_nodo   
	where ss in  (select ''22''ss from ACCESOSMENUS where ClaveMenu in (''1500000229'')and Id_Usuario=@idUsuario union all select ''59''ss from ACCESOSMENUS where ClaveMenu in (''1500000228'')and Id_Usuario=@idUsuario)
end'
GO

GO
PRINT N'Creating [dbo].[N3G_0]'
GO
IF OBJECT_ID(N'[dbo].[N3G_0]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[N3G_0]
@qnaactual varchar(6), @idperiodo int, @nom varchar(3), @idcia int
WITH EXEC AS CALLER
AS
set @idcia = case 
                when @nom = ''BAS'' then 2
                when @nom = ''UPN'' then 1
              end
set @idperiodo = (select id_periodo from CalenNomina where Año = cast(SUBSTRING(@qnaactual, 1, 4) as int) and Numero = cast(SUBSTRING(@qnaactual, 5, 2) as int) and Parcial = 0 and Id_cia = @idcia)

if exists (select 1 from HistPagos where Id_Periodo = @idperiodo )
  begin
    select a.id_emp,a.id_plaza, e.RFC,p.PlazaIEEPO, sum(percepciones) as Total_Percepciones, sum(deducciones) as Total_Deducciones, (sum(percepciones) - sum(deducciones)) as Total 
    from (
      select id_emp,id_plaza,sum(pesos) as percepciones, 0 as deducciones 
      FROM histpagos
      where Id_Periodo = @idperiodo and id_concepto in (select id_concepto from conceptos where tipo = 1 and descripcion like ''%'' + @nom + ''%'' )
      group by id_emp,id_plaza
      union all
      select id_emp,id_plaza,0 as percepciones, sum(pesos) as deducciones FROM histpagos 
      where Id_Periodo = @idperiodo and id_concepto in (select id_concepto from conceptos where tipo = 2 and descripcion like ''%'' + @nom + ''%'' )
      group by id_emp,id_plaza
    ) a 
    inner join empleados e on e.Id_Emp = a.Id_Emp
    inner join plazaieepo p on p.Id_plaza = a.id_plaza
    group by a.id_emp,a.id_plaza,e.RFC,p.Id_plaza,p.PlazaIEEPO
    having (sum(percepciones) - sum(deducciones)) <= 0 order by a.id_Emp
  end
else
  begin
    select a.id_emp,a.id_plaza, e.RFC,p.PlazaIEEPO, sum(percepciones) as Total_Percepciones, sum(deducciones) as Total_Deducciones, (sum(percepciones) - sum(deducciones)) as Total 
    from (
      select id_emp,id_plaza,sum(pesos) as percepciones, 0 as deducciones 
      FROM nom_histpagos
      where Id_Periodo = @idperiodo and id_concepto in (select id_concepto from conceptos where tipo = 1 and descripcion like ''%'' + @nom + ''%'' )
      group by id_emp,id_plaza
      union all
      select id_emp,id_plaza,0 as percepciones, sum(pesos) as deducciones 
      FROM nom_histpagos 
      where Id_Periodo = @idperiodo and id_concepto in (select id_concepto from conceptos where tipo = 2 and descripcion like ''%'' + @nom + ''%'' )
      group by id_emp,id_plaza
    ) a 
    inner join empleados e on e.Id_Emp = a.Id_Emp
    inner join plazaieepo p on p.Id_plaza = a.id_plaza
    group by a.id_emp,a.id_plaza,e.RFC,p.Id_plaza,p.PlazaIEEPO
    having (sum(percepciones) - sum(deducciones)) <= 0 order by a.id_Emp
  end'
GO

GO
PRINT N'Creating [dbo].[FP_ActualizaTablaAuxCalculo]'
GO
IF OBJECT_ID(N'[dbo].[FP_ActualizaTablaAuxCalculo]', 'P') IS NULL
EXEC sp_executesql N'

create procedure [dbo].[FP_ActualizaTablaAuxCalculo]  
(       
@tabla varchar(40)   
,     @campoTablaAux varchar(40)   
,     @valorTablaAux varchar(40)   
,     @idTabla Int   
) --returns varchar(40)  
AS   
BEGIN    
--declare @tabla as varchar(40),  @idTabla Int   
--set @tabla=''ZA81701FFF40D4D36A9B7576A1084B0E0''  
--set @idTabla=92  
DECLARE @SQLString nVARCHAR(500)  
DECLARE @ParmDefinition nVARCHAR(500)  
DECLARE @IntVariable INT  
DECLARE @nameTabla varchar(40)  
declare @query varchar(1000)       
BEGIN TRANSACTION           
SET @SQLString = N''SELECT @nameTablaOUT = max(''+ @campoTablaAux + '') FROM '' + @tabla + '' WHERE idtabla = @idtablaIn''  
SET @ParmDefinition = N''@idtablaIn int,@nameTablaOUT varchar(40) OUTPUT''  
SET @IntVariable = @idTabla  
EXECUTE sp_executesql  
@SQLString,  
@ParmDefinition,  
@idtablaIn = @IntVariable,  
@nameTablaOUT=@nameTabla OUTPUT  
  
set @nameTabla= isnull(@nameTabla,'''')  
  
if @nameTabla <> ''''  
 BEGIN                   
  COMMIT TRANSACTION       
  select @nameTabla as TablaResult,0 as salida  
  RETURN 1  
 END           
  
set @query = '' UPDATE '' + @tabla + '' SET '' + @campoTablaAux + ''='' + char(39) + @valorTablaAux + char(39) + '' where IdTabla='' + CONVERT(VARCHAR(8), @idTabla) + '' ''       
exec (@query)             
IF @@ERROR <> 0        
 BEGIN                   
  ROLLBACK                   
  --RAISERROR (''Error actualizando el campo Tabla_Aux.'', 16, 1)           
  select @nameTabla as TablaResult,1 as salida  
  RETURN 0        
 END           
select @valorTablaAux as TablaResult,2 as salida  
COMMIT TRANSACTION       
RETURN 1   
end  
  
'
GO

GO
PRINT N'Creating [dbo].[MAIL]'
GO
IF OBJECT_ID(N'[dbo].[MAIL]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[MAIL] 
	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	execute msdb.dbo.sp_send_dbmail
	@profile_name =''IEEPO'',
	@recipients = ''pelowis@gmail.com;sierramosjean@gmail.com'',
	@blind_copy_recipients = ''sierramosjean@gmail.com'',
	@body = ''prueba de envio de log de base de datos'',
	@query = ''SELECT c.client_net_address, s.host_name,s.program_name,s.login_name,s.cpu_time,s.original_login_name, st.text
FROM sys.dm_exec_connections c
INNER JOIN sys.dm_exec_sessions s ON c.session_id = s.session_id
CROSS APPLY sys.dm_exec_sql_text(most_recent_sql_handle) AS st
ORDER BY c.client_net_address,c.session_id'',
	@execute_query_database = ''ieepo'',
	@subject = ''mailP'',
	@attach_query_result_as_file = 1;

 
END
'
GO

GO
PRINT N'Creating [dbo].[OFF_Index_Actualizacion]'
GO
IF OBJECT_ID(N'[dbo].[OFF_Index_Actualizacion]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[OFF_Index_Actualizacion]  
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	drop INDEX [idx_nomhistpagos_idconcepto_inc5]
	ON [dbo].[nom_histpagos]

	drop iNDEX [idx_nomhistpagos_IdEmp_idconcepto_idplaza_Inc4]
	ON [dbo].[nom_histpagos] 
END
'
GO

GO
PRINT N'Creating [dbo].[ON_Index_Actualizacion]'
GO
IF OBJECT_ID(N'[dbo].[ON_Index_Actualizacion]', 'P') IS NULL
EXEC sp_executesql N'
CREATE PROCEDURE [dbo].[ON_Index_Actualizacion]  
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	CREATE NONCLUSTERED INDEX [idx_nomhistpagos_idconcepto_inc5]
	ON [dbo].[nom_histpagos]([id_concepto])
	INCLUDE ([Id_Emp], [Horas], [Pesos], [PesosExcento], [id_periodoPago])
	WITH (FILLFACTOR = 70)
	ON [GSM]
 
CREATE NONCLUSTERED INDEX [idx_nomhistpagos_IdEmp_idconcepto_idplaza_Inc4]
	ON [dbo].[nom_histpagos]([Id_Emp], [id_concepto], [id_plaza])
	INCLUDE ([Horas], [Pesos], [PesosExcento], [id_periodoPago])
	ON [GSM]
END
'
GO

GO
PRINT N'Creating [dbo].[REINDEXA_FUP]'
GO
IF OBJECT_ID(N'[dbo].[REINDEXA_FUP]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE  [dbo].[REINDEXA_FUP]
	-- Add the parameters for the stored procedure here
 
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
ALTER INDEX [PK_AccesosAgrupadores] on ieepo.dbo.AccesosAgrupadores REBUILD;Print ''Tabla PK_AccesosAgrupadores indexada;''
ALTER INDEX [IE1_Id_Agrupador] on ieepo.dbo.AccesosAgrupadores REBUILD;Print ''Tabla IE1_Id_Agrupador indexada;''
ALTER INDEX [PK_AccesosCampos] on ieepo.dbo.AccesosCampos REBUILD;Print ''Tabla PK_AccesosCampos indexada;''
ALTER INDEX [IE1_Id_Usuario] on ieepo.dbo.AccesosCampos REBUILD;Print ''Tabla IE1_Id_Usuario indexada;''
ALTER INDEX [PK_AccesosCias] on ieepo.dbo.AccesosCias REBUILD;Print ''Tabla PK_AccesosCias indexada;''
ALTER INDEX [IE1_Id_Usuario] on ieepo.dbo.AccesosCias REBUILD;Print ''Tabla IE1_Id_Usuario indexada;''
ALTER INDEX [PK_ACCESOSMENUS] on ieepo.dbo.ACCESOSMENUS REBUILD;Print ''Tabla PK_ACCESOSMENUS indexada;''
ALTER INDEX [IE1_Id_Usuario] on ieepo.dbo.ACCESOSMENUS REBUILD;Print ''Tabla IE1_Id_Usuario indexada;''
ALTER INDEX [_dta_index_ACCESOSMENUS_5_2073058421__K2] on ieepo.dbo.ACCESOSMENUS REBUILD;Print ''Tabla _dta_index_ACCESOSMENUS_5_2073058421__K2 indexada;''
ALTER INDEX [IDNODO] on ieepo.dbo.AccesosOrganigrama REBUILD;Print ''Tabla IDNODO indexada;''
ALTER INDEX [IDX_USUARIO] on ieepo.dbo.AccesosOrganigrama REBUILD;Print ''Tabla IDX_USUARIO indexada;''
ALTER INDEX [PK_AccesosSistemas] on ieepo.dbo.AccesosSistemas REBUILD;Print ''Tabla PK_AccesosSistemas indexada;''
ALTER INDEX [IE1_Id_Usuario] on ieepo.dbo.AccesosSistemas REBUILD;Print ''Tabla IE1_Id_Usuario indexada;''
ALTER INDEX [pk_scr] on ieepo.dbo.Bitacora_Script REBUILD;Print ''Tabla pk_scr indexada;''
ALTER INDEX [PK_CalenNomina] on ieepo.dbo.CalenNomina REBUILD;Print ''Tabla PK_CalenNomina indexada;''
ALTER INDEX [IE1_Año] on ieepo.dbo.CalenNomina REBUILD;Print ''Tabla IE1_Año indexada;''
ALTER INDEX [IE2_Numero] on ieepo.dbo.CalenNomina REBUILD;Print ''Tabla IE2_Numero indexada;''
ALTER INDEX [IX_Calennomina_Parcial] on ieepo.dbo.CalenNomina REBUILD;Print ''Tabla IX_Calennomina_Parcial indexada;''
ALTER INDEX [IDEMP] on ieepo.dbo.CD_EMPLEADO REBUILD;Print ''Tabla IDEMP indexada;''
ALTER INDEX [IDNODO] on ieepo.dbo.CD_Nodos REBUILD;Print ''Tabla IDNODO indexada;''
ALTER INDEX [IDPLAZA] on ieepo.dbo.CD_PLAZA REBUILD;Print ''Tabla IDPLAZA indexada;''
ALTER INDEX [PK_CNCampos] on ieepo.dbo.CNCampos REBUILD;Print ''Tabla PK_CNCampos indexada;''
ALTER INDEX [PK_CNNombres] on ieepo.dbo.CNNombres REBUILD;Print ''Tabla PK_CNNombres indexada;''
ALTER INDEX [IDEMP] on ieepo.dbo.CNNombres REBUILD;Print ''Tabla IDEMP indexada;''
ALTER INDEX [PK_CNParentescos] on ieepo.dbo.CNParentescos REBUILD;Print ''Tabla PK_CNParentescos indexada;''
ALTER INDEX [PK_CNRelacion] on ieepo.dbo.CNRelacion REBUILD;Print ''Tabla PK_CNRelacion indexada;''
ALTER INDEX [XPKConceptos] on ieepo.dbo.Conceptos REBUILD;Print ''Tabla XPKConceptos indexada;''
ALTER INDEX [TOTALIZA] on ieepo.dbo.Conceptos REBUILD;Print ''Tabla TOTALIZA indexada;''
ALTER INDEX [ix_conceptos_desc] on ieepo.dbo.Conceptos REBUILD;Print ''Tabla ix_conceptos_desc indexada;''
ALTER INDEX [ix_conceptos_iddesc] on ieepo.dbo.Conceptos REBUILD;Print ''Tabla ix_conceptos_iddesc indexada;''
ALTER INDEX [ix_conceptos_idcondesc] on ieepo.dbo.Conceptos REBUILD;Print ''Tabla ix_conceptos_idcondesc indexada;''
ALTER INDEX [PK__ConfigBitacora__07B37926] on ieepo.dbo.ConfigBitacora REBUILD;Print ''Tabla PK__ConfigBitacora__07B37926 indexada;''
ALTER INDEX [XPKDeducsFijas_1] on ieepo.dbo.deducsfijas REBUILD;Print ''Tabla XPKDeducsFijas_1 indexada;''
ALTER INDEX [IDCONCEPTO] on ieepo.dbo.deducsfijas REBUILD;Print ''Tabla IDCONCEPTO indexada;''
ALTER INDEX [IDEMP] on ieepo.dbo.deducsfijas REBUILD;Print ''Tabla IDEMP indexada;''
ALTER INDEX [UX_DeducsFijas_id_prestamo_1] on ieepo.dbo.deducsfijas REBUILD;Print ''Tabla UX_DeducsFijas_id_prestamo_1 indexada;''
ALTER INDEX [idx_id_nodo] on ieepo.dbo.Empalme_PlazaEmpleados REBUILD;Print ''Tabla idx_id_nodo indexada;''
ALTER INDEX [idx_id_plaza] on ieepo.dbo.Empalme_PlazaEmpleados REBUILD;Print ''Tabla idx_id_plaza indexada;''
ALTER INDEX [idx_id_emp] on ieepo.dbo.Empalme_PlazaEmpleados REBUILD;Print ''Tabla idx_id_emp indexada;''
ALTER INDEX [idx_fecha] on ieepo.dbo.Empalme_PlazaEmpleados REBUILD;Print ''Tabla idx_fecha indexada;''
ALTER INDEX [PK_EMPLEADOS] on ieepo.dbo.Empleados REBUILD;Print ''Tabla PK_EMPLEADOS indexada;''
ALTER INDEX [AK2_Emp_Cia] on ieepo.dbo.Empleados REBUILD;Print ''Tabla AK2_Emp_Cia indexada;''
ALTER INDEX [llave_noempx] on ieepo.dbo.Empleados REBUILD;Print ''Tabla llave_noempx indexada;''
ALTER INDEX [Idx_Empleados_Nombre] on ieepo.dbo.Empleados REBUILD;Print ''Tabla Idx_Empleados_Nombre indexada;''
ALTER INDEX [Idx_Empleados_RFC] on ieepo.dbo.Empleados REBUILD;Print ''Tabla Idx_Empleados_RFC indexada;''
ALTER INDEX [Idx_Empleados_IMSS] on ieepo.dbo.Empleados REBUILD;Print ''Tabla Idx_Empleados_IMSS indexada;''
ALTER INDEX [Idx_Empleados_FechaAlta] on ieepo.dbo.Empleados REBUILD;Print ''Tabla Idx_Empleados_FechaAlta indexada;''
ALTER INDEX [Idx_Empleados_Id_cia] on ieepo.dbo.Empleados REBUILD;Print ''Tabla Idx_Empleados_Id_cia indexada;''
ALTER INDEX [ix_empleados_cia_ic_rfc] on ieepo.dbo.Empleados REBUILD;Print ''Tabla ix_empleados_cia_ic_rfc indexada;''
ALTER INDEX [idx_Empleados_Vig_tercero] on ieepo.dbo.Empleados REBUILD;Print ''Tabla idx_Empleados_Vig_tercero indexada;''
ALTER INDEX [pk_EmpleadosDoctosAnexos] on ieepo.dbo.Empleados_Rel_Doctos_Anexos REBUILD;Print ''Tabla pk_EmpleadosDoctosAnexos indexada;''
ALTER INDEX [PK_FUP_Autorizacion_id_documento_detalle] on ieepo.dbo.FUP_Autorizacion REBUILD;Print ''Tabla PK_FUP_Autorizacion_id_documento_detalle indexada;''
ALTER INDEX [_dta_index_FUP_Autorizacion_5_2101522571__K1] on ieepo.dbo.FUP_Autorizacion REBUILD;Print ''Tabla _dta_index_FUP_Autorizacion_5_2101522571__K1 indexada;''
ALTER INDEX [pk_fup_bitacora] on ieepo.dbo.FUP_Bitacora REBUILD;Print ''Tabla pk_fup_bitacora indexada;''
ALTER INDEX [_dta_index_FUP_Bitacora_Detalle_5_1402544871__K6_K3_K2_5] on ieepo.dbo.FUP_Bitacora_Detalle REBUILD;Print ''Tabla _dta_index_FUP_Bitacora_Detalle_5_1402544871__K6_K3_K2_5 indexada;''
ALTER INDEX [_dta_index_FUP_Bitacora_Detalle_5_1402544871__K3_K2_K6_5] on ieepo.dbo.FUP_Bitacora_Detalle REBUILD;Print ''Tabla _dta_index_FUP_Bitacora_Detalle_5_1402544871__K3_K2_K6_5 indexada;''
ALTER INDEX [_dta_index_FUP_Bitacora_Detalle_5_1402544871__K3] on ieepo.dbo.FUP_Bitacora_Detalle REBUILD;Print ''Tabla _dta_index_FUP_Bitacora_Detalle_5_1402544871__K3 indexada;''
ALTER INDEX [pk_fup_cancelados] on ieepo.dbo.FUP_Cancelados REBUILD;Print ''Tabla pk_fup_cancelados indexada;''
ALTER INDEX [PK_FUP_Dato_TipoMuestra] on ieepo.dbo.FUP_Dato_TipoMuestra REBUILD;Print ''Tabla PK_FUP_Dato_TipoMuestra indexada;''
ALTER INDEX [PK_FUP_Datos_id_rs_seccion_orden] on ieepo.dbo.FUP_Datos REBUILD;Print ''Tabla PK_FUP_Datos_id_rs_seccion_orden indexada;''
ALTER INDEX [ix_formula_Secion] on ieepo.dbo.FUP_Datos REBUILD;Print ''Tabla ix_formula_Secion indexada;''
ALTER INDEX [PK_FUP_DetalleCampos_ALL] on ieepo.dbo.FUP_DetalleCampos REBUILD;Print ''Tabla PK_FUP_DetalleCampos_ALL indexada;''
ALTER INDEX [_dta_index_FUP_DetalleCampos_5_632220115__K1_K2_K3_3923] on ieepo.dbo.FUP_DetalleCampos REBUILD;Print ''Tabla _dta_index_FUP_DetalleCampos_5_632220115__K1_K2_K3_3923 indexada;''
ALTER INDEX [ix_FUP_DetalleCampos_Id_MotivoMovimiento] on ieepo.dbo.FUP_DetalleCampos REBUILD;Print ''Tabla ix_FUP_DetalleCampos_Id_MotivoMovimiento indexada;''
ALTER INDEX [ix_FUP_DetalleCampos_Id_Valor] on ieepo.dbo.FUP_DetalleCampos REBUILD;Print ''Tabla ix_FUP_DetalleCampos_Id_Valor indexada;''
ALTER INDEX [PK_FUP_Documento_Detalle_Id_Detalle] on ieepo.dbo.FUP_Documento_Detalle REBUILD;Print ''Tabla PK_FUP_Documento_Detalle_Id_Detalle indexada;''
ALTER INDEX [IDX_FUP_DOCUMENTO_DETALLE_ID_DOCUMENTO] on ieepo.dbo.FUP_Documento_Detalle REBUILD;Print ''Tabla IDX_FUP_DOCUMENTO_DETALLE_ID_DOCUMENTO indexada;''
ALTER INDEX [_dta_index_FUP_Documento_Detalle_5_778081862__K2_K9_K1_1040] on ieepo.dbo.FUP_Documento_Detalle REBUILD;Print ''Tabla _dta_index_FUP_Documento_Detalle_5_778081862__K2_K9_K1_1040 indexada;''
ALTER INDEX [_dta_index_FUP_Documento_Detalle_5_778081862__K9_K1_K2_K3_5_6] on ieepo.dbo.FUP_Documento_Detalle REBUILD;Print ''Tabla _dta_index_FUP_Documento_Detalle_5_778081862__K9_K1_K2_K3_5_6 indexada;''
ALTER INDEX [ix_id_estatus_id_motivomovimento] on ieepo.dbo.FUP_Documento_Detalle REBUILD;Print ''Tabla ix_id_estatus_id_motivomovimento indexada;''
ALTER INDEX [PK_FUP_Documento_Detalle_MesaControl_Id_Detalle_id_documento] on ieepo.dbo.FUP_Documento_Detalle_MesaControl REBUILD;Print ''Tabla PK_FUP_Documento_Detalle_MesaControl_Id_Detalle_id_documento indexada;''
ALTER INDEX [ix_FUP_Documento_Detalle_MesaControl_doc] on ieepo.dbo.FUP_Documento_Detalle_MesaControl REBUILD;Print ''Tabla ix_FUP_Documento_Detalle_MesaControl_doc indexada;''
ALTER INDEX [PK_FUP_Documentos_Id_Documento] on ieepo.dbo.FUP_Documentos REBUILD;Print ''Tabla PK_FUP_Documentos_Id_Documento indexada;''
ALTER INDEX [IDX_id_emp_status] on ieepo.dbo.FUP_Documentos REBUILD;Print ''Tabla IDX_id_emp_status indexada;''
ALTER INDEX [_dta_index_FUP_Documentos_5_794081919__K1_K10_K5_K2_K3_K4_K7] on ieepo.dbo.FUP_Documentos REBUILD;Print ''Tabla _dta_index_FUP_Documentos_5_794081919__K1_K10_K5_K2_K3_K4_K7 indexada;''
ALTER INDEX [ix_folio] on ieepo.dbo.FUP_Documentos REBUILD;Print ''Tabla ix_folio indexada;''
ALTER INDEX [pk_fup_estatus] on ieepo.dbo.FUP_Estatus REBUILD;Print ''Tabla pk_fup_estatus indexada;''
ALTER INDEX [ix_fup_estatus_cve] on ieepo.dbo.FUP_Estatus REBUILD;Print ''Tabla ix_fup_estatus_cve indexada;''
ALTER INDEX [IDX_FUP_INFORMACION_DOCUMENTOS_ID_DOCUMENTO] on ieepo.dbo.FUP_Informacion_Documentos REBUILD;Print ''Tabla IDX_FUP_INFORMACION_DOCUMENTOS_ID_DOCUMENTO indexada;''
ALTER INDEX [_dta_index_FUP_Informacion_Documentos_5_1422059717__K16_K1_K6_K7_K8_K5] on ieepo.dbo.FUP_Informacion_Documentos REBUILD;Print ''Tabla _dta_index_FUP_Informacion_Documentos_5_1422059717__K16_K1_K6_K7_K8_K5 indexada;''
ALTER INDEX [PK__FUP_MotivoMovimi__5B7B3D8B] on ieepo.dbo.FUP_MotivoMovimiento REBUILD;Print ''Tabla PK__FUP_MotivoMovimi__5B7B3D8B indexada;''
ALTER INDEX [pk_fup_motmovcampos] on ieepo.dbo.FUP_MotMovCampos REBUILD;Print ''Tabla pk_fup_motmovcampos indexada;''
ALTER INDEX [_dta_index_FUP_MotMovCampos_5_568219887__K3_K2_K1_4_4683] on ieepo.dbo.FUP_MotMovCampos REBUILD;Print ''Tabla _dta_index_FUP_MotMovCampos_5_568219887__K3_K2_K1_4_4683 indexada;''
ALTER INDEX [FUP_REL_DOCTOS_ANEXOS_PK] on ieepo.dbo.FUP_REL_DOCTOS_ANEXOS REBUILD;Print ''Tabla FUP_REL_DOCTOS_ANEXOS_PK indexada;''
ALTER INDEX [pk_FUP_Rel_Id_Detalle_Plaza] on ieepo.dbo.FUP_Rel_Id_Detalle_Plaza REBUILD;Print ''Tabla pk_FUP_Rel_Id_Detalle_Plaza indexada;''
ALTER INDEX [ix_FUP_Rel_Id_Detalle_Plaza_id_detalle] on ieepo.dbo.FUP_Rel_Id_Detalle_Plaza REBUILD;Print ''Tabla ix_FUP_Rel_Id_Detalle_Plaza_id_detalle indexada;''
ALTER INDEX [ix_fup_RelFormulaCampo] on ieepo.dbo.FUP_RelFormulaCampo REBUILD;Print ''Tabla ix_fup_RelFormulaCampo indexada;''
ALTER INDEX [ix_nivelnodo] on ieepo.dbo.FUP_RelNivel_nodo REBUILD;Print ''Tabla ix_nivelnodo indexada;''
ALTER INDEX [PK__FUP_Template__5C6F61C4] on ieepo.dbo.FUP_Template REBUILD;Print ''Tabla PK__FUP_Template__5C6F61C4 indexada;''
ALTER INDEX [pk_fup_tipomovimiento] on ieepo.dbo.FUP_TipoMovimiento REBUILD;Print ''Tabla pk_fup_tipomovimiento indexada;''
ALTER INDEX [ix_fup_tipomovimiento_cve] on ieepo.dbo.FUP_TipoMovimiento REBUILD;Print ''Tabla ix_fup_tipomovimiento_cve indexada;''
ALTER INDEX [PK_FUP_ValorDate_id_valor] on ieepo.dbo.FUP_ValorDate REBUILD;Print ''Tabla PK_FUP_ValorDate_id_valor indexada;''
ALTER INDEX [_dta_index_FUP_ValorDate_5_810081976__K3_K1_2_6497] on ieepo.dbo.FUP_ValorDate REBUILD;Print ''Tabla _dta_index_FUP_ValorDate_5_810081976__K3_K1_2_6497 indexada;''
ALTER INDEX [ix_FUP_ValorDate_id_documento] on ieepo.dbo.FUP_ValorDate REBUILD;Print ''Tabla ix_FUP_ValorDate_id_documento indexada;''
ALTER INDEX [PK_FUP_ValorFloat_id_valor] on ieepo.dbo.FUP_ValorFloat REBUILD;Print ''Tabla PK_FUP_ValorFloat_id_valor indexada;''
ALTER INDEX [_dta_index_FUP_ValorFloat_5_826082033__K3_K1_2_2894] on ieepo.dbo.FUP_ValorFloat REBUILD;Print ''Tabla _dta_index_FUP_ValorFloat_5_826082033__K3_K1_2_2894 indexada;''
ALTER INDEX [ix_FUP_ValorFloat_id_documento] on ieepo.dbo.FUP_ValorFloat REBUILD;Print ''Tabla ix_FUP_ValorFloat_id_documento indexada;''
ALTER INDEX [PK_FUP_ValorInteger_id_valor] on ieepo.dbo.FUP_ValorInteger REBUILD;Print ''Tabla PK_FUP_ValorInteger_id_valor indexada;''
ALTER INDEX [_dta_index_FUP_ValorInteger_5_842082090__K1_K3_2_5201] on ieepo.dbo.FUP_ValorInteger REBUILD;Print ''Tabla _dta_index_FUP_ValorInteger_5_842082090__K1_K3_2_5201 indexada;''
ALTER INDEX [ix_FUP_ValorInteger_id_documento] on ieepo.dbo.FUP_ValorInteger REBUILD;Print ''Tabla ix_FUP_ValorInteger_id_documento indexada;''
ALTER INDEX [PK_FUP_ValorLista_Id_Valor] on ieepo.dbo.FUP_ValorLista REBUILD;Print ''Tabla PK_FUP_ValorLista_Id_Valor indexada;''
ALTER INDEX [ix_FUP_ValorLista_Id_Documento] on ieepo.dbo.FUP_ValorLista REBUILD;Print ''Tabla ix_FUP_ValorLista_Id_Documento indexada;''
ALTER INDEX [PK_FUP_ValorSubCatalogo_Id_Valor] on ieepo.dbo.FUP_ValorSubCatalogo REBUILD;Print ''Tabla PK_FUP_ValorSubCatalogo_Id_Valor indexada;''
ALTER INDEX [ix_FUP_FUP_ValorSubCatalogo_Id_Documento] on ieepo.dbo.FUP_ValorSubCatalogo REBUILD;Print ''Tabla ix_FUP_FUP_ValorSubCatalogo_Id_Documento indexada;''
ALTER INDEX [PK_FUP_ValorText_id_valor] on ieepo.dbo.FUP_ValorText REBUILD;Print ''Tabla PK_FUP_ValorText_id_valor indexada;''
ALTER INDEX [_dta_index_FUP_ValorText_5_874082204__K3_K1_2_3928] on ieepo.dbo.FUP_ValorText REBUILD;Print ''Tabla _dta_index_FUP_ValorText_5_874082204__K3_K1_2_3928 indexada;''
ALTER INDEX [ix_FUP_ValorText_id_documento] on ieepo.dbo.FUP_ValorText REBUILD;Print ''Tabla ix_FUP_ValorText_id_documento indexada;''
ALTER INDEX [XPKHBajas] on ieepo.dbo.HBajas REBUILD;Print ''Tabla XPKHBajas indexada;''
ALTER INDEX [IE1_Fecha] on ieepo.dbo.HBajas REBUILD;Print ''Tabla IE1_Fecha indexada;''
ALTER INDEX [PK_HCia] on ieepo.dbo.HCia REBUILD;Print ''Tabla PK_HCia indexada;''
ALTER INDEX [IX_HCia] on ieepo.dbo.HCia REBUILD;Print ''Tabla IX_HCia indexada;''
ALTER INDEX [ix_hcia_fecha_mov] on ieepo.dbo.HCia REBUILD;Print ''Tabla ix_hcia_fecha_mov indexada;''
ALTER INDEX [ix_hcia_fecha_inc_emprel] on ieepo.dbo.HCia REBUILD;Print ''Tabla ix_hcia_fecha_inc_emprel indexada;''
ALTER INDEX [PK_Hcurp] on ieepo.dbo.Hcurp REBUILD;Print ''Tabla PK_Hcurp indexada;''
ALTER INDEX [PK_HFecha_Alta_Gob_Est] on ieepo.dbo.HFecha_Alta_Gob_Est REBUILD;Print ''Tabla PK_HFecha_Alta_Gob_Est indexada;''
ALTER INDEX [Idx_hFecha_Alta_Gob_Estemp] on ieepo.dbo.HFecha_Alta_Gob_Est REBUILD;Print ''Tabla Idx_hFecha_Alta_Gob_Estemp indexada;''
ALTER INDEX [Idx_hFecha_Alta_Gob_Estfecha] on ieepo.dbo.HFecha_Alta_Gob_Est REBUILD;Print ''Tabla Idx_hFecha_Alta_Gob_Estfecha indexada;''
ALTER INDEX [PK_HFecha_Alta_Gob_Fed_1] on ieepo.dbo.HFecha_Alta_Gob_Fed REBUILD;Print ''Tabla PK_HFecha_Alta_Gob_Fed_1 indexada;''
ALTER INDEX [Idx_hFecha_Alta_Gob_Fedemp] on ieepo.dbo.HFecha_Alta_Gob_Fed REBUILD;Print ''Tabla Idx_hFecha_Alta_Gob_Fedemp indexada;''
ALTER INDEX [Idx_hFecha_Alta_Gob_Fedfecha] on ieepo.dbo.HFecha_Alta_Gob_Fed REBUILD;Print ''Tabla Idx_hFecha_Alta_Gob_Fedfecha indexada;''
ALTER INDEX [pk_HFecha_Alta_Rama_id_emp_fecha] on ieepo.dbo.HFecha_Alta_Rama REBUILD;Print ''Tabla pk_HFecha_Alta_Rama_id_emp_fecha indexada;''
ALTER INDEX [Idx_hFecha_Alta_Ramaemp] on ieepo.dbo.HFecha_Alta_Rama REBUILD;Print ''Tabla Idx_hFecha_Alta_Ramaemp indexada;''
ALTER INDEX [Idx_hFecha_Alta_Ramafecha] on ieepo.dbo.HFecha_Alta_Rama REBUILD;Print ''Tabla Idx_hFecha_Alta_Ramafecha indexada;''
ALTER INDEX [PK_HFecha_Alta_SEP_1] on ieepo.dbo.HFecha_Alta_SEP REBUILD;Print ''Tabla PK_HFecha_Alta_SEP_1 indexada;''
ALTER INDEX [Idx_hFecha_Alta_SEPemp] on ieepo.dbo.HFecha_Alta_SEP REBUILD;Print ''Tabla Idx_hFecha_Alta_SEPemp indexada;''
ALTER INDEX [Idx_hFecha_Alta_SEPfecha] on ieepo.dbo.HFecha_Alta_SEP REBUILD;Print ''Tabla Idx_hFecha_Alta_SEPfecha indexada;''
ALTER INDEX [IX_docu] on ieepo.dbo.HFecha_Alta_SEP REBUILD;Print ''Tabla IX_docu indexada;''
ALTER INDEX [PK__hfolio_e__3213E83FC772D2E6] on ieepo.dbo.hfolio_eliminados REBUILD;Print ''Tabla PK__hfolio_e__3213E83FC772D2E6 indexada;''
ALTER INDEX [PK__HFolio_v__3214EC275F3C3A71] on ieepo.dbo.HFolio_verificado REBUILD;Print ''Tabla PK__HFolio_v__3214EC275F3C3A71 indexada;''
ALTER INDEX [PK__hfup_can__3213E83FC59BD1BE] on ieepo.dbo.hfup_cancelados REBUILD;Print ''Tabla PK__hfup_can__3213E83FC59BD1BE indexada;''
ALTER INDEX [Pk_hGuarderia] on ieepo.dbo.HGuarderia REBUILD;Print ''Tabla Pk_hGuarderia indexada;''
ALTER INDEX [Idx_hGuarderiafecha] on ieepo.dbo.HGuarderia REBUILD;Print ''Tabla Idx_hGuarderiafecha indexada;''
ALTER INDEX [pk_HMotivoMov] on ieepo.dbo.HMotivoMov REBUILD;Print ''Tabla pk_HMotivoMov indexada;''
ALTER INDEX [IDPLAZA] on ieepo.dbo.HMotivoMov REBUILD;Print ''Tabla IDPLAZA indexada;''
ALTER INDEX [IX_HMotivoMov_FAp_inc_pzamot] on ieepo.dbo.HMotivoMov REBUILD;Print ''Tabla IX_HMotivoMov_FAp_inc_pzamot indexada;''
ALTER INDEX [PK_HOficioAfectacionCancelacion] on ieepo.dbo.HOficioAfectacionCancelacion REBUILD;Print ''Tabla PK_HOficioAfectacionCancelacion indexada;''
ALTER INDEX [Idx_hOficioAfectacionCancelacionfecha] on ieepo.dbo.HOficioAfectacionCancelacion REBUILD;Print ''Tabla Idx_hOficioAfectacionCancelacionfecha indexada;''
ALTER INDEX [Idx_hOficioAfectacionCancelacionplaza] on ieepo.dbo.HOficioAfectacionCancelacion REBUILD;Print ''Tabla Idx_hOficioAfectacionCancelacionplaza indexada;''
ALTER INDEX [PK_HOficioAfectacionCreaciona] on ieepo.dbo.HOficioAfectacionCreacion REBUILD;Print ''Tabla PK_HOficioAfectacionCreaciona indexada;''
ALTER INDEX [Idx_hOficioAfectacionCreacionfecha] on ieepo.dbo.HOficioAfectacionCreacion REBUILD;Print ''Tabla Idx_hOficioAfectacionCreacionfecha indexada;''
ALTER INDEX [Idx_hOficioAfectacionCreacionplaza] on ieepo.dbo.HOficioAfectacionCreacion REBUILD;Print ''Tabla Idx_hOficioAfectacionCreacionplaza indexada;''
ALTER INDEX [XPKHPlazas] on ieepo.dbo.HPlazas REBUILD;Print ''Tabla XPKHPlazas indexada;''
ALTER INDEX [ix_hplazas_id_plaza] on ieepo.dbo.HPlazas REBUILD;Print ''Tabla ix_hplazas_id_plaza indexada;''
ALTER INDEX [hplazas_id_tipomovplazas_fecha] on ieepo.dbo.HPlazas REBUILD;Print ''Tabla hplazas_id_tipomovplazas_fecha indexada;''
ALTER INDEX [IDTIPOMOVPLAZAS] on ieepo.dbo.HPlazas REBUILD;Print ''Tabla IDTIPOMOVPLAZAS indexada;''
ALTER INDEX [idx_hplazas_id_fecha_mov] on ieepo.dbo.HPlazas REBUILD;Print ''Tabla idx_hplazas_id_fecha_mov indexada;''
ALTER INDEX [ix_hplazas_tipo_mov] on ieepo.dbo.HPlazas REBUILD;Print ''Tabla ix_hplazas_tipo_mov indexada;''
ALTER INDEX [ix_hplazas_tipo_valor] on ieepo.dbo.HPlazas REBUILD;Print ''Tabla ix_hplazas_tipo_valor indexada;''
ALTER INDEX [ix_hplazas_tipomov_varios] on ieepo.dbo.HPlazas REBUILD;Print ''Tabla ix_hplazas_tipomov_varios indexada;''
ALTER INDEX [ix_hplazas_tipomov_varios2] on ieepo.dbo.HPlazas REBUILD;Print ''Tabla ix_hplazas_tipomov_varios2 indexada;''
ALTER INDEX [ix_plazafechaTipomov] on ieepo.dbo.HPlazas REBUILD;Print ''Tabla ix_plazafechaTipomov indexada;''
ALTER INDEX [pk_HPlazasPensionado] on ieepo.dbo.HPlazasPensionado REBUILD;Print ''Tabla pk_HPlazasPensionado indexada;''
ALTER INDEX [Idx_hPlazasPensionadobeneficiario] on ieepo.dbo.HPlazasPensionado REBUILD;Print ''Tabla Idx_hPlazasPensionadobeneficiario indexada;''
ALTER INDEX [Idx_hPlazasPensionadofecha] on ieepo.dbo.HPlazasPensionado REBUILD;Print ''Tabla Idx_hPlazasPensionadofecha indexada;''
ALTER INDEX [ix_HPlazaPensionado] on ieepo.dbo.HPlazasPensionado REBUILD;Print ''Tabla ix_HPlazaPensionado indexada;''
ALTER INDEX [PK_HRfc] on ieepo.dbo.HRfc REBUILD;Print ''Tabla PK_HRfc indexada;''
ALTER INDEX [IX_HSALARIOS] on ieepo.dbo.HSALARIOS REBUILD;Print ''Tabla IX_HSALARIOS indexada;''
ALTER INDEX [FECHA] on ieepo.dbo.HSALARIOS REBUILD;Print ''Tabla FECHA indexada;''
ALTER INDEX [IDEMP] on ieepo.dbo.HSALARIOS REBUILD;Print ''Tabla IDEMP indexada;''
ALTER INDEX [PK_HServiciosEspeciales] on ieepo.dbo.HServiciosEspeciales REBUILD;Print ''Tabla PK_HServiciosEspeciales indexada;''
ALTER INDEX [Idx_hServiciosEspecialesemp] on ieepo.dbo.HServiciosEspeciales REBUILD;Print ''Tabla Idx_hServiciosEspecialesemp indexada;''
ALTER INDEX [Idx_hServiciosEspecialesfecha] on ieepo.dbo.HServiciosEspeciales REBUILD;Print ''Tabla Idx_hServiciosEspecialesfecha indexada;''
ALTER INDEX [PK_HTabulador_IEA_CM_1] on ieepo.dbo.HTabulador_SE_CM REBUILD;Print ''Tabla PK_HTabulador_IEA_CM_1 indexada;''
ALTER INDEX [Idx_hTabulador_IEA_CMplaza] on ieepo.dbo.HTabulador_SE_CM REBUILD;Print ''Tabla Idx_hTabulador_IEA_CMplaza indexada;''
ALTER INDEX [ix_HTabulador_SE_CM_fecha_incpzarel] on ieepo.dbo.HTabulador_SE_CM REBUILD;Print ''Tabla ix_HTabulador_SE_CM_fecha_incpzarel indexada;''
ALTER INDEX [pk_HTabulador_SE_Nivel_Pago_id_plaza_fecha] on ieepo.dbo.HTabulador_SE_Nivel_Pago REBUILD;Print ''Tabla pk_HTabulador_SE_Nivel_Pago_id_plaza_fecha indexada;''
ALTER INDEX [Idx_hTabulador_SE_Nivel_Pagofecha] on ieepo.dbo.HTabulador_SE_Nivel_Pago REBUILD;Print ''Tabla Idx_hTabulador_SE_Nivel_Pagofecha indexada;''
ALTER INDEX [Idx_hTabulador_SE_Nivel_Pagoplaza] on ieepo.dbo.HTabulador_SE_Nivel_Pago REBUILD;Print ''Tabla Idx_hTabulador_SE_Nivel_Pagoplaza indexada;''
ALTER INDEX [PK_HTipo_Seg_Social_1] on ieepo.dbo.HTipo_Seg_Social REBUILD;Print ''Tabla PK_HTipo_Seg_Social_1 indexada;''
ALTER INDEX [Idx_hTipo_Seg_Socialfecha] on ieepo.dbo.HTipo_Seg_Social REBUILD;Print ''Tabla Idx_hTipo_Seg_Socialfecha indexada;''
ALTER INDEX [Idx_hTipo_Seg_Socialplaza] on ieepo.dbo.HTipo_Seg_Social REBUILD;Print ''Tabla Idx_hTipo_Seg_Socialplaza indexada;''
ALTER INDEX [PK_Hvectores] on ieepo.dbo.Hvectores REBUILD;Print ''Tabla PK_Hvectores indexada;''
ALTER INDEX [IDX_id_periodo] on ieepo.dbo.Hvectores REBUILD;Print ''Tabla IDX_id_periodo indexada;''
ALTER INDEX [XPKimportacionCatalogosCampos] on ieepo.dbo.importacionCatalogosCampos REBUILD;Print ''Tabla XPKimportacionCatalogosCampos indexada;''
ALTER INDEX [XPKimportacionTipoCatalogos] on ieepo.dbo.importacionTipoCatalogos REBUILD;Print ''Tabla XPKimportacionTipoCatalogos indexada;''
ALTER INDEX [XPKMensajes] on ieepo.dbo.Mensajes REBUILD;Print ''Tabla XPKMensajes indexada;''
ALTER INDEX [XPKMENU] on ieepo.dbo.MENU REBUILD;Print ''Tabla XPKMENU indexada;''
ALTER INDEX [IE1_Sistema] on ieepo.dbo.MENU REBUILD;Print ''Tabla IE1_Sistema indexada;''
ALTER INDEX [IE2_Padre] on ieepo.dbo.MENU REBUILD;Print ''Tabla IE2_Padre indexada;''
ALTER INDEX [_dta_index_MENU_5_642101328__K4] on ieepo.dbo.MENU REBUILD;Print ''Tabla _dta_index_MENU_5_642101328__K4 indexada;''
ALTER INDEX [XPKPlazaEmpleados] on ieepo.dbo.PlazaEmpleados REBUILD;Print ''Tabla XPKPlazaEmpleados indexada;''
ALTER INDEX [I_Idemp_PlazaEmpleados] on ieepo.dbo.PlazaEmpleados REBUILD;Print ''Tabla I_Idemp_PlazaEmpleados indexada;''
ALTER INDEX [I_idplaza_PlazaEmpleados] on ieepo.dbo.PlazaEmpleados REBUILD;Print ''Tabla I_idplaza_PlazaEmpleados indexada;''
ALTER INDEX [idx_PlazaEmpleados_fecha_id] on ieepo.dbo.PlazaEmpleados REBUILD;Print ''Tabla idx_PlazaEmpleados_fecha_id indexada;''
ALTER INDEX [MOVIMIENTO] on ieepo.dbo.PlazaEmpleados REBUILD;Print ''Tabla MOVIMIENTO indexada;''
ALTER INDEX [ix_plazaempleados_id_emp_inc_pzafec] on ieepo.dbo.PlazaEmpleados REBUILD;Print ''Tabla ix_plazaempleados_id_emp_inc_pzafec indexada;''
ALTER INDEX [ix_plazaempleados_fec_inc_pza] on ieepo.dbo.PlazaEmpleados REBUILD;Print ''Tabla ix_plazaempleados_fec_inc_pza indexada;''
ALTER INDEX [ix_empplazanodofecha] on ieepo.dbo.PlazaEmpleados REBUILD;Print ''Tabla ix_empplazanodofecha indexada;''
ALTER INDEX [PK__Plazas_A__3214EC278BD2CA52] on ieepo.dbo.Plazas_Autorizadas REBUILD;Print ''Tabla PK__Plazas_A__3214EC278BD2CA52 indexada;''
ALTER INDEX [Recalculo_Calculo_id_calculo] on ieepo.dbo.Recalculo_Calculo REBUILD;Print ''Tabla Recalculo_Calculo_id_calculo indexada;''
ALTER INDEX [Ix_Recalculo_Calculo_iddetalle_inc_idcalculo] on ieepo.dbo.Recalculo_Calculo REBUILD;Print ''Tabla Ix_Recalculo_Calculo_iddetalle_inc_idcalculo indexada;''
ALTER INDEX [ix_Recalculo_Calculo_Activo_Id_Periodo_Transfer_incall] on ieepo.dbo.Recalculo_Calculo REBUILD;Print ''Tabla ix_Recalculo_Calculo_Activo_Id_Periodo_Transfer_incall indexada;''
ALTER INDEX [idx_Recalculo_Empleados] on ieepo.dbo.Recalculo_Empleados REBUILD;Print ''Tabla idx_Recalculo_Empleados indexada;''
ALTER INDEX [PK_Recalculo_EmpleadosPeriodos_1] on ieepo.dbo.Recalculo_EmpleadosPeriodos REBUILD;Print ''Tabla PK_Recalculo_EmpleadosPeriodos_1 indexada;''
ALTER INDEX [ix_Recalculo_EmpleadosPeriodos_idper_idpzacalc_1] on ieepo.dbo.Recalculo_EmpleadosPeriodos REBUILD;Print ''Tabla ix_Recalculo_EmpleadosPeriodos_idper_idpzacalc_1 indexada;''
ALTER INDEX [PK_RECALCULO_TIPOS] on ieepo.dbo.Recalculo_Tipos REBUILD;Print ''Tabla PK_RECALCULO_TIPOS indexada;''
ALTER INDEX [PK_Sistemas] on ieepo.dbo.Sistemas REBUILD;Print ''Tabla PK_Sistemas indexada;''
ALTER INDEX [XPKSYSCAMPOS] on ieepo.dbo.SYSCAMPOS REBUILD;Print ''Tabla XPKSYSCAMPOS indexada;''
ALTER INDEX [COMPARTIDO] on ieepo.dbo.SYSCAMPOS REBUILD;Print ''Tabla COMPARTIDO indexada;''
ALTER INDEX [XPKSysCategorias] on ieepo.dbo.SysCategorias REBUILD;Print ''Tabla XPKSysCategorias indexada;''
ALTER INDEX [XPKSysClasifTabla] on ieepo.dbo.SysClasifTabla REBUILD;Print ''Tabla XPKSysClasifTabla indexada;''
ALTER INDEX [XPKSysFunciones] on ieepo.dbo.SysFunciones REBUILD;Print ''Tabla XPKSysFunciones indexada;''
ALTER INDEX [XPKSysFuncionesParam] on ieepo.dbo.SysFuncionesParam REBUILD;Print ''Tabla XPKSysFuncionesParam indexada;''
ALTER INDEX [XPKSYSRELACIONES] on ieepo.dbo.SYSRELACIONES REBUILD;Print ''Tabla XPKSYSRELACIONES indexada;''
ALTER INDEX [XPKSYSTABLACATEGORIAS] on ieepo.dbo.SYSTABLACATEGORIAS REBUILD;Print ''Tabla XPKSYSTABLACATEGORIAS indexada;''
ALTER INDEX [XPKSYSTABLAS] on ieepo.dbo.SYSTABLAS REBUILD;Print ''Tabla XPKSYSTABLAS indexada;''
ALTER INDEX [XPKSysTipoCampo] on ieepo.dbo.SysTipoCampo REBUILD;Print ''Tabla XPKSysTipoCampo indexada;''
ALTER INDEX [XPKSysTipoDato] on ieepo.dbo.SysTipoDato REBUILD;Print ''Tabla XPKSysTipoDato indexada;''
ALTER INDEX [XPKTablaConfigOrgan] on ieepo.dbo.TablaConfigOrgan REBUILD;Print ''Tabla XPKTablaConfigOrgan indexada;''
ALTER INDEX [IX_TTClientes_tablaconfigorgan_id_nodopadre] on ieepo.dbo.TablaConfigOrgan REBUILD;Print ''Tabla IX_TTClientes_tablaconfigorgan_id_nodopadre indexada;''
ALTER INDEX [IX_TTClientes_tablaconfigorgan_id_tablalongitud] on ieepo.dbo.TablaConfigOrgan REBUILD;Print ''Tabla IX_TTClientes_tablaconfigorgan_id_tablalongitud indexada;''
ALTER INDEX [PK_TCia] on ieepo.dbo.TCia REBUILD;Print ''Tabla PK_TCia indexada;''
ALTER INDEX [AK1_Cia] on ieepo.dbo.TCia REBUILD;Print ''Tabla AK1_Cia indexada;''
ALTER INDEX [PK_TCiudad] on ieepo.dbo.TCiudad REBUILD;Print ''Tabla PK_TCiudad indexada;''
ALTER INDEX [PK_TColonia] on ieepo.dbo.TColonia REBUILD;Print ''Tabla PK_TColonia indexada;''
ALTER INDEX [PK_TCT_Mpios_ct] on ieepo.dbo.TCT_Municipios_ct REBUILD;Print ''Tabla PK_TCT_Mpios_ct indexada;''
ALTER INDEX [IDX_TCT_Mpios_ct] on ieepo.dbo.TCT_Municipios_ct REBUILD;Print ''Tabla IDX_TCT_Mpios_ct indexada;''
ALTER INDEX [PK_tct_region] on ieepo.dbo.TCT_Region REBUILD;Print ''Tabla PK_tct_region indexada;''
ALTER INDEX [pk_tct_status] on ieepo.dbo.TCT_Status REBUILD;Print ''Tabla pk_tct_status indexada;''
ALTER INDEX [Idx_tct_status] on ieepo.dbo.TCT_Status REBUILD;Print ''Tabla Idx_tct_status indexada;''
ALTER INDEX [pk_templeadosplazaomitidos] on ieepo.dbo.TEmpleadosPlazaOmitidos REBUILD;Print ''Tabla pk_templeadosplazaomitidos indexada;''
ALTER INDEX [pk_tformulas_idFormula] on ieepo.dbo.Tformulas REBUILD;Print ''Tabla pk_tformulas_idFormula indexada;''
ALTER INDEX [ix_tformulas_IdConcepto] on ieepo.dbo.Tformulas REBUILD;Print ''Tabla ix_tformulas_IdConcepto indexada;''
ALTER INDEX [pk_TLicencias_por_plaza] on ieepo.dbo.TLicencias_por_plaza REBUILD;Print ''Tabla pk_TLicencias_por_plaza indexada;''
ALTER INDEX [ix_TLicencias_por_plaza_idplaza] on ieepo.dbo.TLicencias_por_plaza REBUILD;Print ''Tabla ix_TLicencias_por_plaza_idplaza indexada;''
ALTER INDEX [pk_TMotivoMov] on ieepo.dbo.TMotivoMov REBUILD;Print ''Tabla pk_TMotivoMov indexada;''
ALTER INDEX [PK_TNacionalidad] on ieepo.dbo.TNacionalidad REBUILD;Print ''Tabla PK_TNacionalidad indexada;''
ALTER INDEX [pk_tniveleducativo] on ieepo.dbo.TNivelEducativo REBUILD;Print ''Tabla pk_tniveleducativo indexada;''
ALTER INDEX [ix_tniveleducativo_cve] on ieepo.dbo.TNivelEducativo REBUILD;Print ''Tabla ix_tniveleducativo_cve indexada;''
ALTER INDEX [PK_TPais] on ieepo.dbo.TPais REBUILD;Print ''Tabla PK_TPais indexada;''
ALTER INDEX [pk_TTabulador_IEA_Plaza_id_Tabulador_IEA_Plaza] on ieepo.dbo.TTabulador_SE_Cat_Puesto REBUILD;Print ''Tabla pk_TTabulador_IEA_Plaza_id_Tabulador_IEA_Plaza indexada;''
ALTER INDEX [pk_TTabulador_IEA_CM_id_Tabulador_IEA_Plaza] on ieepo.dbo.TTabulador_SE_CM REBUILD;Print ''Tabla pk_TTabulador_IEA_CM_id_Tabulador_IEA_Plaza indexada;''
ALTER INDEX [idx_TTEmpleado_Plaza_Conc_Id_Emp_NoConcepto_Fecha] on ieepo.dbo.TTEmpleado_Plaza_Conc REBUILD;Print ''Tabla idx_TTEmpleado_Plaza_Conc_Id_Emp_NoConcepto_Fecha indexada;''
ALTER INDEX [IX_TTEmpleado_Plaza_Conc_1] on ieepo.dbo.TTEmpleado_Plaza_Conc REBUILD;Print ''Tabla IX_TTEmpleado_Plaza_Conc_1 indexada;''
ALTER INDEX [IX_TTEmpleado_Plaza_Conc_2] on ieepo.dbo.TTEmpleado_Plaza_Conc REBUILD;Print ''Tabla IX_TTEmpleado_Plaza_Conc_2 indexada;''
ALTER INDEX [IX_TTEmpleado_Plaza_Conc_3] on ieepo.dbo.TTEmpleado_Plaza_Conc REBUILD;Print ''Tabla IX_TTEmpleado_Plaza_Conc_3 indexada;''
ALTER INDEX [_dta_index_TTEmpleado_Plaza_Conc_5_616052112__K5_1_2_3_4_6_7_8_9_10_11_12_13] on ieepo.dbo.TTEmpleado_Plaza_Conc REBUILD;Print ''Tabla _dta_index_TTEmpleado_Plaza_Conc_5_616052112__K5_1_2_3_4_6_7_8_9_10_11_12_13 indexada;''
ALTER INDEX [idx_TTEmpleado_Plaza_Conc_Id_Emp_Fecha_Movimiento] on ieepo.dbo.TTEmpleado_Plaza_Conc REBUILD;Print ''Tabla idx_TTEmpleado_Plaza_Conc_Id_Emp_Fecha_Movimiento indexada;''
ALTER INDEX [ix_TTEmpleado_Plaza_Conc_pzafec_inc_desmonfinmov] on ieepo.dbo.TTEmpleado_Plaza_Conc REBUILD;Print ''Tabla ix_TTEmpleado_Plaza_Conc_pzafec_inc_desmonfinmov indexada;''
ALTER INDEX [PK_UltimoControl] on ieepo.dbo.UltimoControl REBUILD;Print ''Tabla PK_UltimoControl indexada;''
END
'
GO

GO
PRINT N'Creating [dbo].[REINDEXA_HIST]'
GO
IF OBJECT_ID(N'[dbo].[REINDEXA_HIST]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE  [dbo].[REINDEXA_HIST]
	-- Add the parameters for the stored procedure here
 
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	ALTER INDEX [idx_Nom_histpagos_clustered_n] on IEEPO.dbo.Nom_histpagos REBUILD;Print ''Tabla idx_Nom_histpagos_clustered_n indexada;''
	ALTER INDEX [idx_Nom_histpagos_clustered_n_E] on IEEPO.dbo.Nom_histpagosEstadistico REBUILD;Print ''Tabla idx_Nom_histpagos_clustered_n_E indexada;''
	ALTER INDEX [idx_Recalculo_HistPagos] on IEEPO.dbo.Recalculo_HistPagos REBUILD;Print ''Tabla idx_Recalculo_HistPagos indexada;''
	ALTER INDEX [idx_Recalculo_HistPagos2] on IEEPO.dbo.Recalculo_HistPagos REBUILD;Print ''Tabla idx_Recalculo_HistPagos2 indexada;''
	ALTER INDEX [IX_HistPagos_id_periodo_plaza_empleado] on IEEPO.dbo.HistPagos REBUILD;Print ''Tabla IX_HistPagos_id_periodo_plaza_empleado indexada;''
	ALTER INDEX [ix_histpagosdetalle_idper_incall] on IEEPO.dbo.histpagosdetalle REBUILD;Print ''Tabla ix_histpagosdetalle_idper_incall indexada;''
	ALTER INDEX [IX_Nom_histpagos_periodo_emp_plaza_Periodopago] on IEEPO.dbo.Nom_histpagos REBUILD;Print ''Tabla IX_Nom_histpagos_periodo_emp_plaza_Periodopago indexada;''
	ALTER INDEX [IX_Nom_histpagos_periodo_emp_plaza_Periodopago_E] on IEEPO.dbo.Nom_histpagosEstadistico REBUILD;Print ''Tabla IX_Nom_histpagos_periodo_emp_plaza_Periodopago_E indexada;''
	ALTER INDEX [IX_Nom_histpagos_perpzaref] on IEEPO.dbo.Nom_histpagos REBUILD;Print ''Tabla IX_Nom_histpagos_perpzaref indexada;''
	ALTER INDEX [IX_Nom_histpagos_perpzaref_E] on IEEPO.dbo.Nom_histpagosEstadistico REBUILD;Print ''Tabla IX_Nom_histpagos_perpzaref_E indexada;''
	ALTER INDEX [ix_nom_histpagos_pzaprocper] on IEEPO.dbo.Nom_histpagos REBUILD;Print ''Tabla ix_nom_histpagos_pzaprocper indexada;''
	ALTER INDEX [ix_nom_histpagos_pzaprocper_E] on IEEPO.dbo.Nom_histpagosEstadistico REBUILD;Print ''Tabla ix_nom_histpagos_pzaprocper_E indexada;''
	ALTER INDEX [Nom_histpagos_idPeriodo] on IEEPO.dbo.Nom_histpagos REBUILD;Print ''Tabla Nom_histpagos_idPeriodo indexada;''
	ALTER INDEX [Nom_histpagos_idPeriodo_E] on IEEPO.dbo.Nom_histpagosEstadistico REBUILD;Print ''Tabla Nom_histpagos_idPeriodo_E indexada;''
	ALTER INDEX [PK_Histpagos_IDPERIODO] on IEEPO.dbo.HistPagos REBUILD;Print ''Tabla PK_Histpagos_IDPERIODO indexada;''
	ALTER INDEX [PK_histpagosdetalle] on IEEPO.dbo.histpagosdetalle REBUILD;Print ''Tabla PK_histpagosdetalle indexada;''
    
END
'
GO

GO
PRINT N'Creating [dbo].[REINDEXA_TABLAS_PREVIO]'
GO
IF OBJECT_ID(N'[dbo].[REINDEXA_TABLAS_PREVIO]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[REINDEXA_TABLAS_PREVIO]
	-- Add the parameters for the stored procedure here 
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here   
    
ALTER INDEX AK2_Emp_Cia on IEEPO.dbo.Empleados REBUILD;Print ''Tabla Empleados indexada;''
ALTER INDEX Idx_Empleados_FechaAlta on IEEPO.dbo.Empleados REBUILD;Print ''Tabla Empleados indexada;''
ALTER INDEX Idx_Empleados_Id_cia on IEEPO.dbo.Empleados REBUILD;Print ''Tabla Empleados indexada;''
ALTER INDEX Idx_Empleados_IMSS on IEEPO.dbo.Empleados REBUILD;Print ''Tabla Empleados indexada;''
ALTER INDEX Idx_Empleados_Nombre on IEEPO.dbo.Empleados REBUILD;Print ''Tabla Empleados indexada;''
ALTER INDEX Idx_Empleados_RFC on IEEPO.dbo.Empleados REBUILD;Print ''Tabla Empleados indexada;''
ALTER INDEX ix_empleados_cia_ic_rfc on IEEPO.dbo.Empleados REBUILD;Print ''Tabla Empleados indexada;''
ALTER INDEX llave_noempx on IEEPO.dbo.Empleados REBUILD;Print ''Tabla Empleados indexada;''
ALTER INDEX PK_EMPLEADOS on IEEPO.dbo.Empleados REBUILD;Print ''Tabla Empleados indexada;''

alter index pk_templeadosplazaomitidos on IEEPO.dbo.templeadosplazaomitidos REBUILD;Print ''Tabla templeadosplazaomitidos indexada;''

ALTER INDEX Idx_hFecha_Alta_SEPemp on IEEPO.dbo.HFecha_Alta_SEP REBUILD;Print ''Tabla HFecha_Alta_SEP indexada;''
ALTER INDEX Idx_hFecha_Alta_SEPfecha on IEEPO.dbo.HFecha_Alta_SEP REBUILD;Print ''Tabla HFecha_Alta_SEP indexada;''
ALTER INDEX PK_HFecha_Alta_SEP_1 on IEEPO.dbo.HFecha_Alta_SEP REBUILD;Print ''Tabla HFecha_Alta_SEP indexada;'' 

ALTER INDEX Idx_hFecha_Alta_Ramaemp on IEEPO.dbo.HFecha_Alta_Rama REBUILD;Print ''Tabla HFecha_Alta_Rama indexada;''
ALTER INDEX Idx_hFecha_Alta_Ramafecha on IEEPO.dbo.HFecha_Alta_Rama REBUILD;Print ''Tabla HFecha_Alta_Rama indexada;''
ALTER INDEX pk_HFecha_Alta_Rama_id_emp_fecha on IEEPO.dbo.HFecha_Alta_Rama REBUILD;Print ''Tabla HFecha_Alta_Rama indexada;''

ALTER INDEX Idx_hFecha_Alta_Gob_Fedemp on IEEPO.dbo.HFecha_Alta_Gob_Fed REBUILD;Print ''Tabla HFecha_Alta_Gob_Fed indexada;''
ALTER INDEX Idx_hFecha_Alta_Gob_Fedfecha on IEEPO.dbo.HFecha_Alta_Gob_Fed REBUILD;Print ''Tabla HFecha_Alta_Gob_Fed indexada;''
ALTER INDEX PK_HFecha_Alta_Gob_Fed_1 on IEEPO.dbo.HFecha_Alta_Gob_Fed REBUILD;Print ''Tabla HFecha_Alta_Gob_Fed indexada;''

ALTER INDEX pk_TTabulador_IEA_Plaza_id_Tabulador_IEA_Plaza ON IEEPO.dbo.TTabulador_SE_Cat_Puesto REBUILD;Print ''Tabla TTabulador_SE_Cat_Puesto indexada;''
 
ALTER INDEX pk_ValoresMatriz5 ON ValoresMatriz5 REBUILD; PRINT ''Tabla ValoresMatriz5 indexada;''

ALTER INDEX pk_ValoresMatriz4 ON ValoresMatriz4 REBUILD; PRINT ''Tabla ValoresMatriz4 indexada;'' 

ALTER INDEX pk_ValoresMatriz8 ON ValoresMatriz8 REBUILD; PRINT ''Tabla ValoresMatriz8 indexada;''

ALTER INDEX I_Idemp_PlazaEmpleados on IEEPO.dbo.plazaempleados REBUILD;Print ''Tabla plazaempleados indexada;''
ALTER INDEX I_idplaza_PlazaEmpleados on IEEPO.dbo.plazaempleados REBUILD;Print ''Tabla plazaempleados indexada;''
ALTER INDEX idx_PlazaEmpleados_fecha_id on IEEPO.dbo.plazaempleados REBUILD;Print ''Tabla plazaempleados indexada;''
ALTER INDEX ix_plazaempleados_fec_inc_pza on IEEPO.dbo.plazaempleados REBUILD;Print ''Tabla plazaempleados indexada;''
ALTER INDEX ix_plazaempleados_id_emp_inc_pzafec on IEEPO.dbo.plazaempleados REBUILD;Print ''Tabla plazaempleados indexada;''
ALTER INDEX MOVIMIENTO on IEEPO.dbo.plazaempleados REBUILD;Print ''Tabla plazaempleados indexada;''
ALTER INDEX XPKPlazaEmpleados on IEEPO.dbo.plazaempleados REBUILD;Print ''Tabla plazaempleados indexada;''

ALTER INDEX hplazas_id_tipomovplazas_fecha on IEEPO.dbo.HPLAZAS REBUILD;Print ''Tabla HPLAZAS indexada;''
ALTER INDEX IDTIPOMOVPLAZAS on IEEPO.dbo.HPLAZAS REBUILD;Print ''Tabla HPLAZAS indexada;''
ALTER INDEX idx_hplazas_id_fecha_mov on IEEPO.dbo.HPLAZAS REBUILD;Print ''Tabla HPLAZAS indexada;''
ALTER INDEX ix_hplazas_id_plaza on IEEPO.dbo.HPLAZAS REBUILD;Print ''Tabla HPLAZAS indexada;''
ALTER INDEX ix_hplazas_tipo_mov on IEEPO.dbo.HPLAZAS REBUILD;Print ''Tabla HPLAZAS indexada;''
ALTER INDEX ix_hplazas_tipo_valor on IEEPO.dbo.HPLAZAS REBUILD;Print ''Tabla HPLAZAS indexada;''
ALTER INDEX ix_hplazas_tipomov_varios on IEEPO.dbo.HPLAZAS REBUILD;Print ''Tabla HPLAZAS indexada;''
ALTER INDEX ix_hplazas_tipomov_varios2 on IEEPO.dbo.HPLAZAS REBUILD;Print ''Tabla HPLAZAS indexada;''
ALTER INDEX XPKHPlazas on IEEPO.dbo.HPLAZAS REBUILD;Print ''Tabla HPLAZAS indexada;''
 
ALTER INDEX IX_nom_histpagos_tercero on IEEPO.dbo.nom_histpagos REBUILD;Print ''Tabla nom_histpagos indexada;''
ALTER INDEX idx_Nom_histpagos_clustered_n on IEEPO.dbo.nom_histpagos REBUILD;Print ''Tabla nom_histpagos indexada;''
ALTER INDEX IX_Nom_histpagos_periodo_emp_plaza_Periodopago on IEEPO.dbo.nom_histpagos REBUILD;Print ''Tabla nom_histpagos indexada;''
ALTER INDEX IX_Nom_histpagos_perpzaref on IEEPO.dbo.nom_histpagos REBUILD;Print ''Tabla nom_histpagos indexada;''
ALTER INDEX ix_nom_histpagos_pzaprocper on IEEPO.dbo.nom_histpagos REBUILD;Print ''Tabla nom_histpagos indexada;''
ALTER INDEX Nom_histpagos_idPeriodo on IEEPO.dbo.nom_histpagos REBUILD;Print ''Tabla nom_histpagos indexada;''

ALTER INDEX _dta_index_FUP_Documentos_5_794081919__K1_K10_K5_K2_K3_K4_K7 on IEEPO.dbo.FUP_Documentos REBUILD;Print ''Tabla FUP_Documentos indexada;''
ALTER INDEX IDX_FUP_DOCUMENTOS_ID_DOCUMENTO on IEEPO.dbo.FUP_Documentos REBUILD;Print ''Tabla FUP_Documentos indexada;''
ALTER INDEX PK_FUP_Documentos_Id_Documento on IEEPO.dbo.FUP_Documentos REBUILD;Print ''Tabla FUP_Documentos indexada;''

ALTER INDEX _dta_index_FUP_Documento_Detalle_5_778081862__K2_K9_K1_1040 on IEEPO.dbo.FUP_Documento_Detalle REBUILD;Print ''Tabla FUP_Documento_Detalle indexada;''
ALTER INDEX _dta_index_FUP_Documento_Detalle_5_778081862__K9_K1_K2_K3_5_6 on IEEPO.dbo.FUP_Documento_Detalle REBUILD;Print ''Tabla FUP_Documento_Detalle indexada;''
ALTER INDEX IDX_FUP_DOCUMENTO_DETALLE_ID_DOCUMENTO on IEEPO.dbo.FUP_Documento_Detalle REBUILD;Print ''Tabla FUP_Documento_Detalle indexada;''
ALTER INDEX PK_FUP_Documento_Detalle_Id_Detalle on IEEPO.dbo.FUP_Documento_Detalle REBUILD;Print ''Tabla FUP_Documento_Detalle indexada;''

ALTER INDEX _dta_index_PlazaIEEPO_5_390116934__K1_8 on IEEPO.dbo.PlazaIEEPO REBUILD;Print ''Tabla PlazaIEEPO indexada;''
ALTER INDEX PK__PlazaIEE__E3B676631928FEB8 on IEEPO.dbo.PlazaIEEPO REBUILD;Print ''Tabla PlazaIEEPO indexada;''

ALTER INDEX ix_TNivel3SE_id on IEEPO.dbo.TNivel3SE REBUILD;Print ''Tabla TNivel3SE indexada;''
ALTER INDEX PK_TNivel3SE on IEEPO.dbo.TNivel3SE REBUILD;Print ''Tabla TNivel3SE indexada;''

ALTER INDEX Idx_hTabulador_SE_Nivel_Pagofecha on IEEPO.dbo.htabulador_se_nivel_pago REBUILD;Print ''Tabla htabulador_se_nivel_pago indexada;''
ALTER INDEX Idx_hTabulador_SE_Nivel_Pagoplaza on IEEPO.dbo.htabulador_se_nivel_pago REBUILD;Print ''Tabla htabulador_se_nivel_pago indexada;''
ALTER INDEX pk_HTabulador_SE_Nivel_Pago_id_plaza_fecha on IEEPO.dbo.htabulador_se_nivel_pago REBUILD;Print ''Tabla htabulador_se_nivel_pago indexada;''

ALTER INDEX tablalongitudprop_28_id_nodo ON TablaLongitudProp_28 REBUILD;Print ''Tabla TablaLongitudProp_28 indexada;''

ALTER INDEX Idx_hTabulador_IEA_CMplaza on IEEPO.dbo.htabulador_se_cm REBUILD;Print ''Tabla htabulador_se_cm indexada;''
ALTER INDEX ix_HTabulador_SE_CM_fecha_incpzarel on IEEPO.dbo.htabulador_se_cm REBUILD;Print ''Tabla htabulador_se_cm indexada;''
ALTER INDEX PK_HTabulador_IEA_CM_1 on IEEPO.dbo.htabulador_se_cm REBUILD;Print ''Tabla htabulador_se_cm indexada;''

ALTER INDEX pk_TTabulador_IEA_CM_id_Tabulador_IEA_Plaza ON Ttabulador_se_cm REBUILD;Print ''Tabla Ttabulador_se_cm indexada;''
END
'
GO

GO
PRINT N'Creating [dbo].[ReindexaDBIEEPO]'
GO
IF OBJECT_ID(N'[dbo].[ReindexaDBIEEPO]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[ReindexaDBIEEPO]
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	 ALTER INDEX [pk_tct_status] on ieepo.dbo.TCT_Status REBUILD;Print ''Tabla pk_tct_status indexada;''
ALTER INDEX [Idx_tct_status] on ieepo.dbo.TCT_Status REBUILD;Print ''Tabla Idx_tct_status indexada;''
ALTER INDEX [IDNODO] on ieepo.dbo.CD_Nodos REBUILD;Print ''Tabla IDNODO indexada;''
ALTER INDEX [PK_TColonia] on ieepo.dbo.TColonia REBUILD;Print ''Tabla PK_TColonia indexada;''
ALTER INDEX [IDNODO] on ieepo.dbo.AccesosOrganigrama REBUILD;Print ''Tabla IDNODO indexada;''
ALTER INDEX [IDX_USUARIO] on ieepo.dbo.AccesosOrganigrama REBUILD;Print ''Tabla IDX_USUARIO indexada;''
ALTER INDEX [XPKAdminDisfrutes] on ieepo.dbo.AdminDisfrutes REBUILD;Print ''Tabla XPKAdminDisfrutes indexada;''
ALTER INDEX [PK_conceptos_Sia_Sat] on ieepo.dbo.conceptos_Sia_Sat REBUILD;Print ''Tabla PK_conceptos_Sia_Sat indexada;''
ALTER INDEX [idx_hpa_cluster] on ieepo.dbo.HistPagos_Agrupadores REBUILD;Print ''Tabla idx_hpa_cluster indexada;''
ALTER INDEX [idx_hpa] on ieepo.dbo.HistPagos_Agrupadores REBUILD;Print ''Tabla idx_hpa indexada;''
ALTER INDEX [IX_periodo] on ieepo.dbo.HistPagos_Agrupadores REBUILD;Print ''Tabla IX_periodo indexada;''
ALTER INDEX [PK_HConsecutivo_1] on ieepo.dbo.HConsecutivo REBUILD;Print ''Tabla PK_HConsecutivo_1 indexada;''
ALTER INDEX [Idx_hConsecutivofecha] on ieepo.dbo.HConsecutivo REBUILD;Print ''Tabla Idx_hConsecutivofecha indexada;''
ALTER INDEX [Idx_hConsecutivoplaza] on ieepo.dbo.HConsecutivo REBUILD;Print ''Tabla Idx_hConsecutivoplaza indexada;''
ALTER INDEX [PK_histpagosdetalle] on ieepo.dbo.nom_histpagosdetalle REBUILD;Print ''Tabla PK_histpagosdetalle indexada;''
ALTER INDEX [ix_histpagosdetalle_idper_incall] on ieepo.dbo.nom_histpagosdetalle REBUILD;Print ''Tabla ix_histpagosdetalle_idper_incall indexada;''
ALTER INDEX [PK_TDepartamentos] on ieepo.dbo.TDepartamentos REBUILD;Print ''Tabla PK_TDepartamentos indexada;''
ALTER INDEX [XPKAdminVacaciones] on ieepo.dbo.AdminVacaciones REBUILD;Print ''Tabla XPKAdminVacaciones indexada;''
ALTER INDEX [IDPLAZA] on ieepo.dbo.CD_PLAZA REBUILD;Print ''Tabla IDPLAZA indexada;''
ALTER INDEX [PK_TDiasIntegrados] on ieepo.dbo.TDiasIntegrados REBUILD;Print ''Tabla PK_TDiasIntegrados indexada;''
ALTER INDEX [PK_HBecas] on ieepo.dbo.HBecas REBUILD;Print ''Tabla PK_HBecas indexada;''
ALTER INDEX [Kid_Empl] on ieepo.dbo.HBecas REBUILD;Print ''Tabla Kid_Empl indexada;''
ALTER INDEX [Kid_empl2] on ieepo.dbo.HBecas REBUILD;Print ''Tabla Kid_empl2 indexada;''
ALTER INDEX [PK_AgrupadorCias] on ieepo.dbo.AgrupadorCias REBUILD;Print ''Tabla PK_AgrupadorCias indexada;''
ALTER INDEX [IE1_Id_Agrupador] on ieepo.dbo.AgrupadorCias REBUILD;Print ''Tabla IE1_Id_Agrupador indexada;''
ALTER INDEX [PK_HCurso_o_Carrera_1] on ieepo.dbo.HCurso_o_Carrera REBUILD;Print ''Tabla PK_HCurso_o_Carrera_1 indexada;''
ALTER INDEX [Idx_hCurso_o_Carreraemp] on ieepo.dbo.HCurso_o_Carrera REBUILD;Print ''Tabla Idx_hCurso_o_Carreraemp indexada;''
ALTER INDEX [Idx_hCurso_o_Carrerafecha] on ieepo.dbo.HCurso_o_Carrera REBUILD;Print ''Tabla Idx_hCurso_o_Carrerafecha indexada;''
ALTER INDEX [PK_HNivelPlaza] on ieepo.dbo.HNivelPlazas REBUILD;Print ''Tabla PK_HNivelPlaza indexada;''
ALTER INDEX [Idx_hnivelPuestofecha] on ieepo.dbo.HNivelPlazas REBUILD;Print ''Tabla Idx_hnivelPuestofecha indexada;''
ALTER INDEX [PK_AgrupadorMenus] on ieepo.dbo.AgrupadorMenus REBUILD;Print ''Tabla PK_AgrupadorMenus indexada;''
ALTER INDEX [IE1_Id_Agrupador] on ieepo.dbo.AgrupadorMenus REBUILD;Print ''Tabla IE1_Id_Agrupador indexada;''
ALTER INDEX [pk_hmontonutrivalepensionado] on ieepo.dbo.HMontoNutrivalePensionado REBUILD;Print ''Tabla pk_hmontonutrivalepensionado indexada;''
ALTER INDEX [Idx_hMontoNutrivalePensionadobeneficiario] on ieepo.dbo.HMontoNutrivalePensionado REBUILD;Print ''Tabla Idx_hMontoNutrivalePensionadobeneficiario indexada;''
ALTER INDEX [Idx_hMontoNutrivalePensionadofecha] on ieepo.dbo.HMontoNutrivalePensionado REBUILD;Print ''Tabla Idx_hMontoNutrivalePensionadofecha indexada;''
ALTER INDEX [PK_TPago_IMSS_Emp] on ieepo.dbo.TPago_IMSS_Emp REBUILD;Print ''Tabla PK_TPago_IMSS_Emp indexada;''
ALTER INDEX [IX_tPago_IMSS_Emp_clave] on ieepo.dbo.TPago_IMSS_Emp REBUILD;Print ''Tabla IX_tPago_IMSS_Emp_clave indexada;''
ALTER INDEX [PK_TDivisiones] on ieepo.dbo.TDivisiones REBUILD;Print ''Tabla PK_TDivisiones indexada;''
ALTER INDEX [PK_HCapExt] on ieepo.dbo.HCapExt REBUILD;Print ''Tabla PK_HCapExt indexada;''
ALTER INDEX [_WA_Sys_TAUSE_335592AB] on ieepo.dbo.HCapExt REBUILD;Print ''Tabla _WA_Sys_TAUSE_335592AB indexada;''
ALTER INDEX [_WA_Sys_TEXTR_335592AB] on ieepo.dbo.HCapExt REBUILD;Print ''Tabla _WA_Sys_TEXTR_335592AB indexada;''
ALTER INDEX [Fecha] on ieepo.dbo.HCapExt REBUILD;Print ''Tabla Fecha indexada;''
ALTER INDEX [PK__ExpFormatos__05EC5E8B] on ieepo.dbo.ExpFormatos REBUILD;Print ''Tabla PK__ExpFormatos__05EC5E8B indexada;''
ALTER INDEX [pk_HTabulador_SE_Nivel_Pago_id_plaza_fecha] on ieepo.dbo.HTabulador_SE_Nivel_Pago REBUILD;Print ''Tabla pk_HTabulador_SE_Nivel_Pago_id_plaza_fecha indexada;''
ALTER INDEX [Idx_hTabulador_SE_Nivel_Pagofecha] on ieepo.dbo.HTabulador_SE_Nivel_Pago REBUILD;Print ''Tabla Idx_hTabulador_SE_Nivel_Pagofecha indexada;''
ALTER INDEX [Idx_hTabulador_SE_Nivel_Pagoplaza] on ieepo.dbo.HTabulador_SE_Nivel_Pago REBUILD;Print ''Tabla Idx_hTabulador_SE_Nivel_Pagoplaza indexada;''
ALTER INDEX [PK_AgrupadorSistemas] on ieepo.dbo.AgrupadorSistemas REBUILD;Print ''Tabla PK_AgrupadorSistemas indexada;''
ALTER INDEX [IE1_Id_Agrupador] on ieepo.dbo.AgrupadorSistemas REBUILD;Print ''Tabla IE1_Id_Agrupador indexada;''
ALTER INDEX [PK_HPlantas] on ieepo.dbo.HPlantas REBUILD;Print ''Tabla PK_HPlantas indexada;''
ALTER INDEX [IE1_Emp_Fecha] on ieepo.dbo.HPlantas REBUILD;Print ''Tabla IE1_Emp_Fecha indexada;''
ALTER INDEX [IE2_Fecha] on ieepo.dbo.HPlantas REBUILD;Print ''Tabla IE2_Fecha indexada;''
ALTER INDEX [IX_HPlantas] on ieepo.dbo.HPlantas REBUILD;Print ''Tabla IX_HPlantas indexada;''
ALTER INDEX [PK__Saycop__1822ED6685F5E4A7] on ieepo.dbo.Saycop REBUILD;Print ''Tabla PK__Saycop__1822ED6685F5E4A7 indexada;''
ALTER INDEX [ix_Saycop_llaves] on ieepo.dbo.Saycop REBUILD;Print ''Tabla ix_Saycop_llaves indexada;''
ALTER INDEX [ix_saycop_id_emp_id_plaza_desd_hast] on ieepo.dbo.Saycop REBUILD;Print ''Tabla ix_saycop_id_emp_id_plaza_desd_hast indexada;''
ALTER INDEX [ix_saycop_nodocumentoanterior] on ieepo.dbo.Saycop REBUILD;Print ''Tabla ix_saycop_nodocumentoanterior indexada;''
ALTER INDEX [PK_Hstaff] on ieepo.dbo.Hstaff REBUILD;Print ''Tabla PK_Hstaff indexada;''
ALTER INDEX [Idx_hstafffecha] on ieepo.dbo.Hstaff REBUILD;Print ''Tabla Idx_hstafffecha indexada;''
ALTER INDEX [Idx_hstaffplaza] on ieepo.dbo.Hstaff REBUILD;Print ''Tabla Idx_hstaffplaza indexada;''
ALTER INDEX [PK_HSAR] on ieepo.dbo.HSAR REBUILD;Print ''Tabla PK_HSAR indexada;''
ALTER INDEX [Idx_hSARfecha] on ieepo.dbo.HSAR REBUILD;Print ''Tabla Idx_hSARfecha indexada;''
ALTER INDEX [Idx_hSARemp] on ieepo.dbo.HSAR REBUILD;Print ''Tabla Idx_hSARemp indexada;''
ALTER INDEX [PK_HDomicPar1_1] on ieepo.dbo.HDomicPar1 REBUILD;Print ''Tabla PK_HDomicPar1_1 indexada;''
ALTER INDEX [Idx_hDomicPar1emp] on ieepo.dbo.HDomicPar1 REBUILD;Print ''Tabla Idx_hDomicPar1emp indexada;''
ALTER INDEX [Idx_hDomicPar1fecha] on ieepo.dbo.HDomicPar1 REBUILD;Print ''Tabla Idx_hDomicPar1fecha indexada;''
ALTER INDEX [XPKTDocumentos] on ieepo.dbo.TDocumentos REBUILD;Print ''Tabla XPKTDocumentos indexada;''
ALTER INDEX [PK_TcatPuestosPlaza] on ieepo.dbo.TcatPuestosPlaza REBUILD;Print ''Tabla PK_TcatPuestosPlaza indexada;''
ALTER INDEX [IX_TcatPuestosPlaza_clave] on ieepo.dbo.TcatPuestosPlaza REBUILD;Print ''Tabla IX_TcatPuestosPlaza_clave indexada;''
ALTER INDEX [pk_tniveleducativo] on ieepo.dbo.TNivelEducativo REBUILD;Print ''Tabla pk_tniveleducativo indexada;''
ALTER INDEX [ix_tniveleducativo_cve] on ieepo.dbo.TNivelEducativo REBUILD;Print ''Tabla ix_tniveleducativo_cve indexada;''
ALTER INDEX [PK_AgrupadoresSeg] on ieepo.dbo.AgrupadoresSeg REBUILD;Print ''Tabla PK_AgrupadoresSeg indexada;''
ALTER INDEX [IE1_Fecha] on ieepo.dbo.TE_AutPrevio REBUILD;Print ''Tabla IE1_Fecha indexada;''
ALTER INDEX [IE2_Emp_Fecha] on ieepo.dbo.TE_AutPrevio REBUILD;Print ''Tabla IE2_Emp_Fecha indexada;''
ALTER INDEX [PK__ConfigBitacora__07B37926] on ieepo.dbo.ConfigBitacora REBUILD;Print ''Tabla PK__ConfigBitacora__07B37926 indexada;''
ALTER INDEX [PK__ExpDetalles__07D4A6FD] on ieepo.dbo.ExpDetalles REBUILD;Print ''Tabla PK__ExpDetalles__07D4A6FD indexada;''
ALTER INDEX [PK_HCat_Puesto] on ieepo.dbo.HCat_Puesto REBUILD;Print ''Tabla PK_HCat_Puesto indexada;''
ALTER INDEX [Idx_hCat_Puestofecha] on ieepo.dbo.HCat_Puesto REBUILD;Print ''Tabla Idx_hCat_Puestofecha indexada;''
ALTER INDEX [Idx_hCat_Puestoplaza] on ieepo.dbo.HCat_Puesto REBUILD;Print ''Tabla Idx_hCat_Puestoplaza indexada;''
ALTER INDEX [PK_HpuestoClave] on ieepo.dbo.HpuestoClave REBUILD;Print ''Tabla PK_HpuestoClave indexada;''
ALTER INDEX [Idx_hpuestoClavefecha] on ieepo.dbo.HpuestoClave REBUILD;Print ''Tabla Idx_hpuestoClavefecha indexada;''
ALTER INDEX [Idx_hpuestoClaveplaza] on ieepo.dbo.HpuestoClave REBUILD;Print ''Tabla Idx_hpuestoClaveplaza indexada;''
ALTER INDEX [PK_tct_region] on ieepo.dbo.TCT_Region REBUILD;Print ''Tabla PK_tct_region indexada;''
ALTER INDEX [PK_HFecha_Alta_Gob_Est] on ieepo.dbo.HFecha_Alta_Gob_Est REBUILD;Print ''Tabla PK_HFecha_Alta_Gob_Est indexada;''
ALTER INDEX [Idx_hFecha_Alta_Gob_Estemp] on ieepo.dbo.HFecha_Alta_Gob_Est REBUILD;Print ''Tabla Idx_hFecha_Alta_Gob_Estemp indexada;''
ALTER INDEX [Idx_hFecha_Alta_Gob_Estfecha] on ieepo.dbo.HFecha_Alta_Gob_Est REBUILD;Print ''Tabla Idx_hFecha_Alta_Gob_Estfecha indexada;''
ALTER INDEX [PK_HDomicPar2_1] on ieepo.dbo.HDomicPar2 REBUILD;Print ''Tabla PK_HDomicPar2_1 indexada;''
ALTER INDEX [Idx_hDomicPar2emp] on ieepo.dbo.HDomicPar2 REBUILD;Print ''Tabla Idx_hDomicPar2emp indexada;''
ALTER INDEX [Idx_hDomicPar2fecha] on ieepo.dbo.HDomicPar2 REBUILD;Print ''Tabla Idx_hDomicPar2fecha indexada;''
ALTER INDEX [Idx_hSUBPplaza] on ieepo.dbo.HSUBP REBUILD;Print ''Tabla Idx_hSUBPplaza indexada;''
ALTER INDEX [Idx_hSUBPfecha] on ieepo.dbo.HSUBP REBUILD;Print ''Tabla Idx_hSUBPfecha indexada;''
ALTER INDEX [PK_TEstados] on ieepo.dbo.TEstados REBUILD;Print ''Tabla PK_TEstados indexada;''
ALTER INDEX [XPKArbolCompetenciasCursos] on ieepo.dbo.ArbolCompetenciasCursos REBUILD;Print ''Tabla XPKArbolCompetenciasCursos indexada;''
ALTER INDEX [IE1_Id_Padre] on ieepo.dbo.ArbolCompetenciasCursos REBUILD;Print ''Tabla IE1_Id_Padre indexada;''
ALTER INDEX [PK__TPlantillasCalcu__760E6014] on ieepo.dbo.TPlantillasCalculo REBUILD;Print ''Tabla PK__TPlantillasCalcu__760E6014 indexada;''
ALTER INDEX [IX_HSALARIOS] on ieepo.dbo.HSALARIOS REBUILD;Print ''Tabla IX_HSALARIOS indexada;''
ALTER INDEX [FECHA] on ieepo.dbo.HSALARIOS REBUILD;Print ''Tabla FECHA indexada;''
ALTER INDEX [IDEMP] on ieepo.dbo.HSALARIOS REBUILD;Print ''Tabla IDEMP indexada;''
ALTER INDEX [ix_fup_RelFormulaCampo] on ieepo.dbo.FUP_RelFormulaCampo REBUILD;Print ''Tabla ix_fup_RelFormulaCampo indexada;''
ALTER INDEX [PK_TRelTipoIncMovimInc] on ieepo.dbo.TRelTipoIncMovimInc REBUILD;Print ''Tabla PK_TRelTipoIncMovimInc indexada;''
ALTER INDEX [PK_HCCostos_pk] on ieepo.dbo.hccosto REBUILD;Print ''Tabla PK_HCCostos_pk indexada;''
ALTER INDEX [IX_HCCosto_ix] on ieepo.dbo.hccosto REBUILD;Print ''Tabla IX_HCCosto_ix indexada;''
ALTER INDEX [XPKArbolCursos] on ieepo.dbo.ArbolCursos REBUILD;Print ''Tabla XPKArbolCursos indexada;''
ALTER INDEX [IE1_Id_Padre] on ieepo.dbo.ArbolCursos REBUILD;Print ''Tabla IE1_Id_Padre indexada;''
ALTER INDEX [PK_HCastigos] on ieepo.dbo.HCastigos REBUILD;Print ''Tabla PK_HCastigos indexada;''
ALTER INDEX [IE1_Fecha] on ieepo.dbo.HCastigos REBUILD;Print ''Tabla IE1_Fecha indexada;''
ALTER INDEX [PK_HDomicRef1_1] on ieepo.dbo.HDomicRef1 REBUILD;Print ''Tabla PK_HDomicRef1_1 indexada;''
ALTER INDEX [Idx_hDomicRef1emp] on ieepo.dbo.HDomicRef1 REBUILD;Print ''Tabla Idx_hDomicRef1emp indexada;''
ALTER INDEX [Idx_hDomicRef1fecha] on ieepo.dbo.HDomicRef1 REBUILD;Print ''Tabla Idx_hDomicRef1fecha indexada;''
ALTER INDEX [PK_TFormulasRelaciones] on ieepo.dbo.TFormulasRelaciones REBUILD;Print ''Tabla PK_TFormulasRelaciones indexada;''
ALTER INDEX [IE1_Pago] on ieepo.dbo.TFormulasRelaciones REBUILD;Print ''Tabla IE1_Pago indexada;''
ALTER INDEX [PK__HSuspensionPagos__0A8FE5D1] on ieepo.dbo.HSuspensionPagos REBUILD;Print ''Tabla PK__HSuspensionPagos__0A8FE5D1 indexada;''
ALTER INDEX [IE1_Id_Usuario] on ieepo.dbo.HErroresPassword REBUILD;Print ''Tabla IE1_Id_Usuario indexada;''
ALTER INDEX [PK_TFormulasTipo] on ieepo.dbo.TFormulasTipo REBUILD;Print ''Tabla PK_TFormulasTipo indexada;''
ALTER INDEX [PK_HLugarPar2_1] on ieepo.dbo.HLugarPar2 REBUILD;Print ''Tabla PK_HLugarPar2_1 indexada;''
ALTER INDEX [Idx_hLugarPar2emp] on ieepo.dbo.HLugarPar2 REBUILD;Print ''Tabla Idx_hLugarPar2emp indexada;''
ALTER INDEX [Idx_hLugarPar2fecha] on ieepo.dbo.HLugarPar2 REBUILD;Print ''Tabla Idx_hLugarPar2fecha indexada;''
ALTER INDEX [PK_HOficioAfectacionCreaciona] on ieepo.dbo.HOficioAfectacionCreacion REBUILD;Print ''Tabla PK_HOficioAfectacionCreaciona indexada;''
ALTER INDEX [Idx_hOficioAfectacionCreacionfecha] on ieepo.dbo.HOficioAfectacionCreacion REBUILD;Print ''Tabla Idx_hOficioAfectacionCreacionfecha indexada;''
ALTER INDEX [Idx_hOficioAfectacionCreacionplaza] on ieepo.dbo.HOficioAfectacionCreacion REBUILD;Print ''Tabla Idx_hOficioAfectacionCreacionplaza indexada;''
ALTER INDEX [PK_HEvalua] on ieepo.dbo.HEvalua REBUILD;Print ''Tabla PK_HEvalua indexada;''
ALTER INDEX [PK__ExpCampos__0BA537E1] on ieepo.dbo.ExpCampos REBUILD;Print ''Tabla PK__ExpCampos__0BA537E1 indexada;''
ALTER INDEX [PK_RptDiseñoFormatos] on ieepo.dbo.RptDiseñoFormatos REBUILD;Print ''Tabla PK_RptDiseñoFormatos indexada;''
ALTER INDEX [idx_Recalculo_conceptos] on ieepo.dbo.nom_Recalculo_conceptos REBUILD;Print ''Tabla idx_Recalculo_conceptos indexada;''
ALTER INDEX [PK_BaseTablasProcesos] on ieepo.dbo.BaseTablasProcesos REBUILD;Print ''Tabla PK_BaseTablasProcesos indexada;''
ALTER INDEX [pk_hporcentajenutrivalepensionados] on ieepo.dbo.HPorcentajeNutrivalePensionados REBUILD;Print ''Tabla pk_hporcentajenutrivalepensionados indexada;''
ALTER INDEX [Idx_hPorcentajeNutrivalePensionadosbeneficiario] on ieepo.dbo.HPorcentajeNutrivalePensionados REBUILD;Print ''Tabla Idx_hPorcentajeNutrivalePensionadosbeneficiario indexada;''
ALTER INDEX [Idx_hPorcentajeNutrivalePensionadosfecha] on ieepo.dbo.HPorcentajeNutrivalePensionados REBUILD;Print ''Tabla Idx_hPorcentajeNutrivalePensionadosfecha indexada;''
ALTER INDEX [PK_HDiagonal_id_plaza_fecha] on ieepo.dbo.HDiagonal REBUILD;Print ''Tabla PK_HDiagonal_id_plaza_fecha indexada;''
ALTER INDEX [Idx_hDiagonalfecha] on ieepo.dbo.HDiagonal REBUILD;Print ''Tabla Idx_hDiagonalfecha indexada;''
ALTER INDEX [Idx_hDiagonalplaza] on ieepo.dbo.HDiagonal REBUILD;Print ''Tabla Idx_hDiagonalplaza indexada;''
ALTER INDEX [PK_HDomicRef2_1] on ieepo.dbo.HDomicRef2 REBUILD;Print ''Tabla PK_HDomicRef2_1 indexada;''
ALTER INDEX [Idx_hDomicRef2emp] on ieepo.dbo.HDomicRef2 REBUILD;Print ''Tabla Idx_hDomicRef2emp indexada;''
ALTER INDEX [Idx_hDomicRef2fecha] on ieepo.dbo.HDomicRef2 REBUILD;Print ''Tabla Idx_hDomicRef2fecha indexada;''
ALTER INDEX [XPKHAuditorias] on ieepo.dbo.HAuditorias REBUILD;Print ''Tabla XPKHAuditorias indexada;''
ALTER INDEX [IE1_Consecutivo] on ieepo.dbo.HAuditorias REBUILD;Print ''Tabla IE1_Consecutivo indexada;''
ALTER INDEX [tquinquenios_docentes_id_Quinquenios_docentes] on ieepo.dbo.TQuinquenios_docentes REBUILD;Print ''Tabla tquinquenios_docentes_id_Quinquenios_docentes indexada;''
ALTER INDEX [tquinquenios_docentes_Tipo] on ieepo.dbo.TQuinquenios_docentes REBUILD;Print ''Tabla tquinquenios_docentes_Tipo indexada;''
ALTER INDEX [tquinquenios_docentes_Años] on ieepo.dbo.TQuinquenios_docentes REBUILD;Print ''Tabla tquinquenios_docentes_Años indexada;''
ALTER INDEX [PK_TIncrCalifica] on ieepo.dbo.TIncrCalifica REBUILD;Print ''Tabla PK_TIncrCalifica indexada;''
ALTER INDEX [Id_Calif] on ieepo.dbo.TIncrCalifica REBUILD;Print ''Tabla Id_Calif indexada;''
ALTER INDEX [XPKSYSTABLAS] on ieepo.dbo.SYSTABLAS REBUILD;Print ''Tabla XPKSYSTABLAS indexada;''
ALTER INDEX [PK_HSitLab] on ieepo.dbo.HSitLab REBUILD;Print ''Tabla PK_HSitLab indexada;''
ALTER INDEX [IE1_Emp_Fecha] on ieepo.dbo.HSitLab REBUILD;Print ''Tabla IE1_Emp_Fecha indexada;''
ALTER INDEX [IE2_Fecha] on ieepo.dbo.HSitLab REBUILD;Print ''Tabla IE2_Fecha indexada;''
ALTER INDEX [IX_HSitLab] on ieepo.dbo.HSitLab REBUILD;Print ''Tabla IX_HSitLab indexada;''
ALTER INDEX [PK_HnuevaCreacion] on ieepo.dbo.HnuevaCreacion REBUILD;Print ''Tabla PK_HnuevaCreacion indexada;''
ALTER INDEX [Idx_hnuevaCreacionfecha] on ieepo.dbo.HnuevaCreacion REBUILD;Print ''Tabla Idx_hnuevaCreacionfecha indexada;''
ALTER INDEX [Idx_hnuevaCreacionplaza] on ieepo.dbo.HnuevaCreacion REBUILD;Print ''Tabla Idx_hnuevaCreacionplaza indexada;''
ALTER INDEX [Id_calif] on ieepo.dbo.TIncrPorc REBUILD;Print ''Tabla Id_calif indexada;''
ALTER INDEX [Id_porc] on ieepo.dbo.TIncrPorc REBUILD;Print ''Tabla Id_porc indexada;''
ALTER INDEX [PK_HOficioAfectacionCancelacion] on ieepo.dbo.HOficioAfectacionCancelacion REBUILD;Print ''Tabla PK_HOficioAfectacionCancelacion indexada;''
ALTER INDEX [Idx_hOficioAfectacionCancelacionfecha] on ieepo.dbo.HOficioAfectacionCancelacion REBUILD;Print ''Tabla Idx_hOficioAfectacionCancelacionfecha indexada;''
ALTER INDEX [Idx_hOficioAfectacionCancelacionplaza] on ieepo.dbo.HOficioAfectacionCancelacion REBUILD;Print ''Tabla Idx_hOficioAfectacionCancelacionplaza indexada;''
ALTER INDEX [pk_HSubunidad_id_plaza_fecha] on ieepo.dbo.HSubunidad REBUILD;Print ''Tabla pk_HSubunidad_id_plaza_fecha indexada;''
ALTER INDEX [Idx_hSubunidadfecha] on ieepo.dbo.HSubunidad REBUILD;Print ''Tabla Idx_hSubunidadfecha indexada;''
ALTER INDEX [Idx_hSubunidadplaza] on ieepo.dbo.HSubunidad REBUILD;Print ''Tabla Idx_hSubunidadplaza indexada;''
ALTER INDEX [XPKBloqueoPassword] on ieepo.dbo.BloqueoPassword REBUILD;Print ''Tabla XPKBloqueoPassword indexada;''
ALTER INDEX [PK_HCentros_de_Trabajo] on ieepo.dbo.HCentros_de_Trabajo REBUILD;Print ''Tabla PK_HCentros_de_Trabajo indexada;''
ALTER INDEX [Idx_hCentros_de_Trabajofecha] on ieepo.dbo.HCentros_de_Trabajo REBUILD;Print ''Tabla Idx_hCentros_de_Trabajofecha indexada;''
ALTER INDEX [Idx_hCentros_de_Trabajoplaza] on ieepo.dbo.HCentros_de_Trabajo REBUILD;Print ''Tabla Idx_hCentros_de_Trabajoplaza indexada;''
ALTER INDEX [PK__TipoConceptoSica__0DE99520] on ieepo.dbo.TipoConceptoSicapron REBUILD;Print ''Tabla PK__TipoConceptoSica__0DE99520 indexada;''
ALTER INDEX [PK__FUP_DRSE__9CA9146CB93FFF6B] on ieepo.dbo.FUP_DRSE REBUILD;Print ''Tabla PK__FUP_DRSE__9CA9146CB93FFF6B indexada;''
ALTER INDEX [PK_HEdo_Mpio_1] on ieepo.dbo.HEdo_Mpio REBUILD;Print ''Tabla PK_HEdo_Mpio_1 indexada;''
ALTER INDEX [Idx_hEdo_Mpiofecha] on ieepo.dbo.HEdo_Mpio REBUILD;Print ''Tabla Idx_hEdo_Mpiofecha indexada;''
ALTER INDEX [Idx_hEdo_Mpioplaza] on ieepo.dbo.HEdo_Mpio REBUILD;Print ''Tabla Idx_hEdo_Mpioplaza indexada;''
ALTER INDEX [PK_TIncrPorcNivel] on ieepo.dbo.TIncrPorcNivel REBUILD;Print ''Tabla PK_TIncrPorcNivel indexada;''
ALTER INDEX [Id_Porc] on ieepo.dbo.TIncrPorcNivel REBUILD;Print ''Tabla Id_Porc indexada;''
ALTER INDEX [XPKHPlazas] on ieepo.dbo.HPlazas REBUILD;Print ''Tabla XPKHPlazas indexada;''
ALTER INDEX [ix_hplazas_id_plaza] on ieepo.dbo.HPlazas REBUILD;Print ''Tabla ix_hplazas_id_plaza indexada;''
ALTER INDEX [hplazas_id_tipomovplazas_fecha] on ieepo.dbo.HPlazas REBUILD;Print ''Tabla hplazas_id_tipomovplazas_fecha indexada;''
ALTER INDEX [IDTIPOMOVPLAZAS] on ieepo.dbo.HPlazas REBUILD;Print ''Tabla IDTIPOMOVPLAZAS indexada;''
ALTER INDEX [idx_hplazas_id_fecha_mov] on ieepo.dbo.HPlazas REBUILD;Print ''Tabla idx_hplazas_id_fecha_mov indexada;''
ALTER INDEX [ix_hplazas_tipo_mov] on ieepo.dbo.HPlazas REBUILD;Print ''Tabla ix_hplazas_tipo_mov indexada;''
ALTER INDEX [ix_hplazas_tipo_valor] on ieepo.dbo.HPlazas REBUILD;Print ''Tabla ix_hplazas_tipo_valor indexada;''
ALTER INDEX [ix_hplazas_tipomov_varios] on ieepo.dbo.HPlazas REBUILD;Print ''Tabla ix_hplazas_tipomov_varios indexada;''
ALTER INDEX [ix_hplazas_tipomov_varios2] on ieepo.dbo.HPlazas REBUILD;Print ''Tabla ix_hplazas_tipomov_varios2 indexada;''
ALTER INDEX [ix_plazafechaTipomov] on ieepo.dbo.HPlazas REBUILD;Print ''Tabla ix_plazafechaTipomov indexada;''
ALTER INDEX [PK_HIncapacidades] on ieepo.dbo.HIncapacidades REBUILD;Print ''Tabla PK_HIncapacidades indexada;''
ALTER INDEX [FECHA] on ieepo.dbo.HIncapacidades REBUILD;Print ''Tabla FECHA indexada;''
ALTER INDEX [pk_htproporcional_absoluto_id] on ieepo.dbo.HTproporcional_Absoluto REBUILD;Print ''Tabla pk_htproporcional_absoluto_id indexada;''
ALTER INDEX [Idx_hTproporcional_AbsolutoBene] on ieepo.dbo.HTproporcional_Absoluto REBUILD;Print ''Tabla Idx_hTproporcional_AbsolutoBene indexada;''
ALTER INDEX [Idx_hTproporcional_Absolutofecha] on ieepo.dbo.HTproporcional_Absoluto REBUILD;Print ''Tabla Idx_hTproporcional_Absolutofecha indexada;''
ALTER INDEX [PK_BolsaTrab] on ieepo.dbo.BolsaTrab REBUILD;Print ''Tabla PK_BolsaTrab indexada;''
ALTER INDEX [pk_TPresupuestoAnual_AñoPre_Id_plaza] on ieepo.dbo.TPresupuestoAnual REBUILD;Print ''Tabla pk_TPresupuestoAnual_AñoPre_Id_plaza indexada;''
ALTER INDEX [idx_TPresupuestoAnual_id_nodo_id_cat_bas_id_nivel_pre_id_cat_aut_id_nivel_aut] on ieepo.dbo.TPresupuestoAnual REBUILD;Print ''Tabla idx_TPresupuestoAnual_id_nodo_id_cat_bas_id_nivel_pre_id_cat_aut_id_nivel_aut indexada;''
ALTER INDEX [idx_TPresupuestoAnual_id_cat_bas_id_nivel_pre_id_cat_aut_id_nivel_aut] on ieepo.dbo.TPresupuestoAnual REBUILD;Print ''Tabla idx_TPresupuestoAnual_id_cat_bas_id_nivel_pre_id_cat_aut_id_nivel_aut indexada;''
ALTER INDEX [XPKTIncrPorcTablas] on ieepo.dbo.TIncrPorcTablas REBUILD;Print ''Tabla XPKTIncrPorcTablas indexada;''
ALTER INDEX [pk_Tagrupador] on ieepo.dbo.Tagrupador REBUILD;Print ''Tabla pk_Tagrupador indexada;''
ALTER INDEX [PK_HIntegrados] on ieepo.dbo.HIntegrados REBUILD;Print ''Tabla PK_HIntegrados indexada;''
ALTER INDEX [Id_Emp] on ieepo.dbo.HIntegrados REBUILD;Print ''Tabla Id_Emp indexada;''
ALTER INDEX [PK__seguimie__AAAC09D8A3AF2FCB] on ieepo.dbo.seguimiento REBUILD;Print ''Tabla PK__seguimie__AAAC09D8A3AF2FCB indexada;''
ALTER INDEX [PK_BtEmpEscol] on ieepo.dbo.BtEmpEscol REBUILD;Print ''Tabla PK_BtEmpEscol indexada;''
ALTER INDEX [ix_Saycop_conceptos_id_Saycop_id_concepto] on ieepo.dbo.Saycop_conceptos REBUILD;Print ''Tabla ix_Saycop_conceptos_id_Saycop_id_concepto indexada;''
ALTER INDEX [PK_HsectorPuesto] on ieepo.dbo.HsectorPuesto REBUILD;Print ''Tabla PK_HsectorPuesto indexada;''
ALTER INDEX [Idx_hsectorPuestofecha] on ieepo.dbo.HsectorPuesto REBUILD;Print ''Tabla Idx_hsectorPuestofecha indexada;''
ALTER INDEX [Idx_hsectorPuestoplaza] on ieepo.dbo.HsectorPuesto REBUILD;Print ''Tabla Idx_hsectorPuestoplaza indexada;''
ALTER INDEX [PK_HEstado_Profesional_1] on ieepo.dbo.HEstado_Profesional REBUILD;Print ''Tabla PK_HEstado_Profesional_1 indexada;''
ALTER INDEX [Idx_hEstado_Profesionalemp] on ieepo.dbo.HEstado_Profesional REBUILD;Print ''Tabla Idx_hEstado_Profesionalemp indexada;''
ALTER INDEX [Idx_hEstado_Profesionalfecha] on ieepo.dbo.HEstado_Profesional REBUILD;Print ''Tabla Idx_hEstado_Profesionalfecha indexada;''
ALTER INDEX [PK_TJobFamily] on ieepo.dbo.TJobFamily REBUILD;Print ''Tabla PK_TJobFamily indexada;''
ALTER INDEX [PK_BtEmpExper] on ieepo.dbo.BtEmpExper REBUILD;Print ''Tabla PK_BtEmpExper indexada;''
ALTER INDEX [PK_TLineas] on ieepo.dbo.TLineas REBUILD;Print ''Tabla PK_TLineas indexada;''
ALTER INDEX [Idx_hfonacISEAemp] on ieepo.dbo.HfonacISEA REBUILD;Print ''Tabla Idx_hfonacISEAemp indexada;''
ALTER INDEX [Idx_hfonacISEAfecha] on ieepo.dbo.HfonacISEA REBUILD;Print ''Tabla Idx_hfonacISEAfecha indexada;''
ALTER INDEX [PK_BtEmpIdio] on ieepo.dbo.BtEmpIdio REBUILD;Print ''Tabla PK_BtEmpIdio indexada;''
ALTER INDEX [pk_hporcentajediaseconomicospensionados] on ieepo.dbo.HPorcentajeDiasEconomicosPensionados REBUILD;Print ''Tabla pk_hporcentajediaseconomicospensionados indexada;''
ALTER INDEX [Idx_hPorcentajeDiasEconomicosPensionadosbeneficiario] on ieepo.dbo.HPorcentajeDiasEconomicosPensionados REBUILD;Print ''Tabla Idx_hPorcentajeDiasEconomicosPensionadosbeneficiario indexada;''
ALTER INDEX [Idx_hPorcentajeDiasEconomicosPensionadosfecha] on ieepo.dbo.HPorcentajeDiasEconomicosPensionados REBUILD;Print ''Tabla Idx_hPorcentajeDiasEconomicosPensionadosfecha indexada;''
ALTER INDEX [PK_HFecha_Alta_Gob_Fed_1] on ieepo.dbo.HFecha_Alta_Gob_Fed REBUILD;Print ''Tabla PK_HFecha_Alta_Gob_Fed_1 indexada;''
ALTER INDEX [Idx_hFecha_Alta_Gob_Fedemp] on ieepo.dbo.HFecha_Alta_Gob_Fed REBUILD;Print ''Tabla Idx_hFecha_Alta_Gob_Fedemp indexada;''
ALTER INDEX [Idx_hFecha_Alta_Gob_Fedfecha] on ieepo.dbo.HFecha_Alta_Gob_Fed REBUILD;Print ''Tabla Idx_hFecha_Alta_Gob_Fedfecha indexada;''
ALTER INDEX [IDTABLA] on ieepo.dbo.SysTablasConfig REBUILD;Print ''Tabla IDTABLA indexada;''
ALTER INDEX [XPKPlazasOrgan] on ieepo.dbo.PlazasOrgan REBUILD;Print ''Tabla XPKPlazasOrgan indexada;''
ALTER INDEX [PK_HLugarPar1_1] on ieepo.dbo.HLugarPar1 REBUILD;Print ''Tabla PK_HLugarPar1_1 indexada;''
ALTER INDEX [Idx_hLugarPar1emp] on ieepo.dbo.HLugarPar1 REBUILD;Print ''Tabla Idx_hLugarPar1emp indexada;''
ALTER INDEX [Idx_hLugarPar1fecha] on ieepo.dbo.HLugarPar1 REBUILD;Print ''Tabla Idx_hLugarPar1fecha indexada;''
ALTER INDEX [PK_HLugarRef2_1] on ieepo.dbo.HLugarRef2 REBUILD;Print ''Tabla PK_HLugarRef2_1 indexada;''
ALTER INDEX [Idx_hLugarRef2emp] on ieepo.dbo.HLugarRef2 REBUILD;Print ''Tabla Idx_hLugarRef2emp indexada;''
ALTER INDEX [Idx_hLugarRef2fecha] on ieepo.dbo.HLugarRef2 REBUILD;Print ''Tabla Idx_hLugarRef2fecha indexada;''
ALTER INDEX [PK_BtEmpPto] on ieepo.dbo.BtEmpPto REBUILD;Print ''Tabla PK_BtEmpPto indexada;''
ALTER INDEX [PK__Saycop_P__6EBE7334B9D96E9B] on ieepo.dbo.Saycop_Procesos REBUILD;Print ''Tabla PK__Saycop_P__6EBE7334B9D96E9B indexada;''
ALTER INDEX [XPKTMetodosInst] on ieepo.dbo.TMetodosInst REBUILD;Print ''Tabla XPKTMetodosInst indexada;''
ALTER INDEX [XPKHOvertime] on ieepo.dbo.HOvertime REBUILD;Print ''Tabla XPKHOvertime indexada;''
ALTER INDEX [Fecha] on ieepo.dbo.HOvertime REBUILD;Print ''Tabla Fecha indexada;''
ALTER INDEX [PK_TCT_Mpios_ct] on ieepo.dbo.TCT_Municipios_ct REBUILD;Print ''Tabla PK_TCT_Mpios_ct indexada;''
ALTER INDEX [IDX_TCT_Mpios_ct] on ieepo.dbo.TCT_Municipios_ct REBUILD;Print ''Tabla IDX_TCT_Mpios_ct indexada;''
ALTER INDEX [PK_BtEmpRefer] on ieepo.dbo.BtEmpRefer REBUILD;Print ''Tabla PK_BtEmpRefer indexada;''
ALTER INDEX [PK_HTipoMO] on ieepo.dbo.HTipoMO REBUILD;Print ''Tabla PK_HTipoMO indexada;''
ALTER INDEX [IE1_Emp_Fecha] on ieepo.dbo.HTipoMO REBUILD;Print ''Tabla IE1_Emp_Fecha indexada;''
ALTER INDEX [IE2_Fecha] on ieepo.dbo.HTipoMO REBUILD;Print ''Tabla IE2_Fecha indexada;''
ALTER INDEX [IX_HTipoMO] on ieepo.dbo.HTipoMO REBUILD;Print ''Tabla IX_HTipoMO indexada;''
ALTER INDEX [PK__FUP_CT_D__3213E83F1A09FE2A] on ieepo.dbo.FUP_CT_DRSE REBUILD;Print ''Tabla PK__FUP_CT_D__3213E83F1A09FE2A indexada;''
ALTER INDEX [PK_HFecha_Alta_SEP_1] on ieepo.dbo.HFecha_Alta_SEP REBUILD;Print ''Tabla PK_HFecha_Alta_SEP_1 indexada;''
ALTER INDEX [Idx_hFecha_Alta_SEPemp] on ieepo.dbo.HFecha_Alta_SEP REBUILD;Print ''Tabla Idx_hFecha_Alta_SEPemp indexada;''
ALTER INDEX [Idx_hFecha_Alta_SEPfecha] on ieepo.dbo.HFecha_Alta_SEP REBUILD;Print ''Tabla Idx_hFecha_Alta_SEPfecha indexada;''
ALTER INDEX [IX_docu] on ieepo.dbo.HFecha_Alta_SEP REBUILD;Print ''Tabla IX_docu indexada;''
ALTER INDEX [XPKTMotivoIncr] on ieepo.dbo.TMotivoIncr REBUILD;Print ''Tabla XPKTMotivoIncr indexada;''
ALTER INDEX [IE1_Id_Usuario] on ieepo.dbo.HPasswords REBUILD;Print ''Tabla IE1_Id_Usuario indexada;''
ALTER INDEX [PK_HMpiosPlaza_1] on ieepo.dbo.HMpiosPlaza REBUILD;Print ''Tabla PK_HMpiosPlaza_1 indexada;''
ALTER INDEX [Idx_hMpiosPlazafecha] on ieepo.dbo.HMpiosPlaza REBUILD;Print ''Tabla Idx_hMpiosPlazafecha indexada;''
ALTER INDEX [Idx_hMpiosPlazaplaza] on ieepo.dbo.HMpiosPlaza REBUILD;Print ''Tabla Idx_hMpiosPlazaplaza indexada;''
ALTER INDEX [PK_BtEmptur] on ieepo.dbo.BtEmptur REBUILD;Print ''Tabla PK_BtEmptur indexada;''
ALTER INDEX [_WA_Sys_Id_Turno_025D5595] on ieepo.dbo.BtEmptur REBUILD;Print ''Tabla _WA_Sys_Id_Turno_025D5595 indexada;''
ALTER INDEX [XPKTMovimientos] on ieepo.dbo.TMovimientos REBUILD;Print ''Tabla XPKTMovimientos indexada;''
ALTER INDEX [PK_HOficioAfectacionPlaza] on ieepo.dbo.HOficioAfectacionPlaza REBUILD;Print ''Tabla PK_HOficioAfectacionPlaza indexada;''
ALTER INDEX [Idx_hOficioAfectacionPlazafecha] on ieepo.dbo.HOficioAfectacionPlaza REBUILD;Print ''Tabla Idx_hOficioAfectacionPlazafecha indexada;''
ALTER INDEX [Idx_hOficioAfectacionPlazaplaza] on ieepo.dbo.HOficioAfectacionPlaza REBUILD;Print ''Tabla Idx_hOficioAfectacionPlazaplaza indexada;''
ALTER INDEX [Id_Permiso] on ieepo.dbo.HPerMigr REBUILD;Print ''Tabla Id_Permiso indexada;''
ALTER INDEX [pk_Hporcentajedias15pensionado] on ieepo.dbo.HPorcentajeDias15Pensionado REBUILD;Print ''Tabla pk_Hporcentajedias15pensionado indexada;''
ALTER INDEX [Idx_hPorcentajeDias15Pensionadobeneficiario] on ieepo.dbo.HPorcentajeDias15Pensionado REBUILD;Print ''Tabla Idx_hPorcentajeDias15Pensionadobeneficiario indexada;''
ALTER INDEX [Idx_hPorcentajeDias15Pensionadofecha] on ieepo.dbo.HPorcentajeDias15Pensionado REBUILD;Print ''Tabla Idx_hPorcentajeDias15Pensionadofecha indexada;''
ALTER INDEX [PK_BtSeminarios] on ieepo.dbo.BtSeminarios REBUILD;Print ''Tabla PK_BtSeminarios indexada;''
ALTER INDEX [PK_TPuestos] on ieepo.dbo.TPuestos REBUILD;Print ''Tabla PK_TPuestos indexada;''
ALTER INDEX [PK__Saycop_P__A828238AEBA217ED] on ieepo.dbo.Saycop_Procesos_conceptos REBUILD;Print ''Tabla PK__Saycop_P__A828238AEBA217ED indexada;''
ALTER INDEX [PK_HDiasLicConGoce] on ieepo.dbo.HDiasLicConGoce REBUILD;Print ''Tabla PK_HDiasLicConGoce indexada;''
ALTER INDEX [Idx_hDiasLicConGoceemp] on ieepo.dbo.HDiasLicConGoce REBUILD;Print ''Tabla Idx_hDiasLicConGoceemp indexada;''
ALTER INDEX [Idx_hDiasLicConGocefecha] on ieepo.dbo.HDiasLicConGoce REBUILD;Print ''Tabla Idx_hDiasLicConGocefecha indexada;''
ALTER INDEX [Idx_hDiasLicMedicaemp] on ieepo.dbo.HDiasLicConGoce REBUILD;Print ''Tabla Idx_hDiasLicMedicaemp indexada;''
ALTER INDEX [Idx_hDiasLicMedicafecha] on ieepo.dbo.HDiasLicConGoce REBUILD;Print ''Tabla Idx_hDiasLicMedicafecha indexada;''
ALTER INDEX [PK_HmandosMedios] on ieepo.dbo.HmandosMedios REBUILD;Print ''Tabla PK_HmandosMedios indexada;''
ALTER INDEX [Idx_hmandosMediosfecha] on ieepo.dbo.HmandosMedios REBUILD;Print ''Tabla Idx_hmandosMediosfecha indexada;''
ALTER INDEX [Idx_hmandosMediosplaza] on ieepo.dbo.HmandosMedios REBUILD;Print ''Tabla Idx_hmandosMediosplaza indexada;''
ALTER INDEX [PK_HFecha_de_Expedición_Prepa_1] on ieepo.dbo.HFecha_de_Expedición_Prepa REBUILD;Print ''Tabla PK_HFecha_de_Expedición_Prepa_1 indexada;''
ALTER INDEX [Idx_hFecha_de_Expedición_Prepaemp] on ieepo.dbo.HFecha_de_Expedición_Prepa REBUILD;Print ''Tabla Idx_hFecha_de_Expedición_Prepaemp indexada;''
ALTER INDEX [Idx_hFecha_de_Expedición_Prepafecha] on ieepo.dbo.HFecha_de_Expedición_Prepa REBUILD;Print ''Tabla Idx_hFecha_de_Expedición_Prepafecha indexada;''
ALTER INDEX [PK_TNacionalidad] on ieepo.dbo.TNacionalidad REBUILD;Print ''Tabla PK_TNacionalidad indexada;''
ALTER INDEX [PK_HNariz_1] on ieepo.dbo.HNariz REBUILD;Print ''Tabla PK_HNariz_1 indexada;''
ALTER INDEX [Idx_hNarizemp] on ieepo.dbo.HNariz REBUILD;Print ''Tabla Idx_hNarizemp indexada;''
ALTER INDEX [Idx_hNarizfecha] on ieepo.dbo.HNariz REBUILD;Print ''Tabla Idx_hNarizfecha indexada;''
ALTER INDEX [PK_CNCampos] on ieepo.dbo.CNCampos REBUILD;Print ''Tabla PK_CNCampos indexada;''
ALTER INDEX [PK_TTipoEmpleo] on ieepo.dbo.TTipoEmpleo REBUILD;Print ''Tabla PK_TTipoEmpleo indexada;''
ALTER INDEX [XPKTNemonicos] on ieepo.dbo.TNemonicos REBUILD;Print ''Tabla XPKTNemonicos indexada;''
ALTER INDEX [AK1_Nemo] on ieepo.dbo.TNemonicos REBUILD;Print ''Tabla AK1_Nemo indexada;''
ALTER INDEX [XPKSalariosIntegrados] on ieepo.dbo.SalariosIntegrados REBUILD;Print ''Tabla XPKSalariosIntegrados indexada;''
ALTER INDEX [X1$_id_plaza] on ieepo.dbo.x1$ REBUILD;Print ''Tabla X1$_id_plaza indexada;''
ALTER INDEX [PK__FUP_USUA__3213E83FD4F211BF] on ieepo.dbo.FUP_USUARIO_DRSE REBUILD;Print ''Tabla PK__FUP_USUA__3213E83FD4F211BF indexada;''
ALTER INDEX [PK_HFecha_de_Expedición_Secu_1] on ieepo.dbo.HFecha_de_Expedición_Secu REBUILD;Print ''Tabla PK_HFecha_de_Expedición_Secu_1 indexada;''
ALTER INDEX [Idx_hFecha_de_Expedición_Secuemp] on ieepo.dbo.HFecha_de_Expedición_Secu REBUILD;Print ''Tabla Idx_hFecha_de_Expedición_Secuemp indexada;''
ALTER INDEX [Idx_hFecha_de_Expedición_Secufecha] on ieepo.dbo.HFecha_de_Expedición_Secu REBUILD;Print ''Tabla Idx_hFecha_de_Expedición_Secufecha indexada;''
ALTER INDEX [IE2_Periodo_Emp] on ieepo.dbo.FCalculoHistPagos REBUILD;Print ''Tabla IE2_Periodo_Emp indexada;''
ALTER INDEX [IE3_Periodo_Emp_Conc] on ieepo.dbo.FCalculoHistPagos REBUILD;Print ''Tabla IE3_Periodo_Emp_Conc indexada;''
ALTER INDEX [XPKSysClasifTabla] on ieepo.dbo.SysClasifTabla REBUILD;Print ''Tabla XPKSysClasifTabla indexada;''
ALTER INDEX [PK_HNoActaNacimiento_1] on ieepo.dbo.HNoActaNacimiento REBUILD;Print ''Tabla PK_HNoActaNacimiento_1 indexada;''
ALTER INDEX [Idx_hNoActaNacimientoemp] on ieepo.dbo.HNoActaNacimiento REBUILD;Print ''Tabla Idx_hNoActaNacimientoemp indexada;''
ALTER INDEX [Idx_hNoActaNacimientofecha] on ieepo.dbo.HNoActaNacimiento REBUILD;Print ''Tabla Idx_hNoActaNacimientofecha indexada;''
ALTER INDEX [PK_CNParentescos] on ieepo.dbo.CNParentescos REBUILD;Print ''Tabla PK_CNParentescos indexada;''
ALTER INDEX [PK__PlazaIEE__E3B676631928FEB8] on ieepo.dbo.PlazaIEEPO REBUILD;Print ''Tabla PK__PlazaIEE__E3B676631928FEB8 indexada;''
ALTER INDEX [_dta_index_PlazaIEEPO_5_390116934__K1_8] on ieepo.dbo.PlazaIEEPO REBUILD;Print ''Tabla _dta_index_PlazaIEEPO_5_390116934__K1_8 indexada;''
ALTER INDEX [ix_plazaieepo] on ieepo.dbo.PlazaIEEPO REBUILD;Print ''Tabla ix_plazaieepo indexada;''
ALTER INDEX [PK__Trs_Cliente__27F7F79B] on ieepo.dbo.Trs_Cliente REBUILD;Print ''Tabla PK__Trs_Cliente__27F7F79B indexada;''
ALTER INDEX [PK_CNRelacion] on ieepo.dbo.CNRelacion REBUILD;Print ''Tabla PK_CNRelacion indexada;''
ALTER INDEX [tablalongitudprop_28_id_nodo] on ieepo.dbo.TablaLongitudProp_28 REBUILD;Print ''Tabla tablalongitudprop_28_id_nodo indexada;''
ALTER INDEX [PK_HFecha_Expedición_Carrera_1] on ieepo.dbo.HFecha_Expedición_Carrera REBUILD;Print ''Tabla PK_HFecha_Expedición_Carrera_1 indexada;''
ALTER INDEX [Idx_hFecha_Expedición_Carreraemp] on ieepo.dbo.HFecha_Expedición_Carrera REBUILD;Print ''Tabla Idx_hFecha_Expedición_Carreraemp indexada;''
ALTER INDEX [Idx_hFecha_Expedición_Carrerafecha] on ieepo.dbo.HFecha_Expedición_Carrera REBUILD;Print ''Tabla Idx_hFecha_Expedición_Carrerafecha indexada;''
ALTER INDEX [PK_CalenNomina] on ieepo.dbo.CalenNomina REBUILD;Print ''Tabla PK_CalenNomina indexada;''
ALTER INDEX [IE1_Año] on ieepo.dbo.CalenNomina REBUILD;Print ''Tabla IE1_Año indexada;''
ALTER INDEX [IE2_Numero] on ieepo.dbo.CalenNomina REBUILD;Print ''Tabla IE2_Numero indexada;''
ALTER INDEX [IX_Calennomina_Parcial] on ieepo.dbo.CalenNomina REBUILD;Print ''Tabla IX_Calennomina_Parcial indexada;''
ALTER INDEX [PK_TOperaciones] on ieepo.dbo.TOperaciones REBUILD;Print ''Tabla PK_TOperaciones indexada;''
ALTER INDEX [pk_hNumPoliza] on ieepo.dbo.HNumPoliza REBUILD;Print ''Tabla pk_hNumPoliza indexada;''
ALTER INDEX [Idx_hNumPolizafecha] on ieepo.dbo.HNumPoliza REBUILD;Print ''Tabla Idx_hNumPolizafecha indexada;''
ALTER INDEX [PK_HNom_Actual_1] on ieepo.dbo.HNom_Actual REBUILD;Print ''Tabla PK_HNom_Actual_1 indexada;''
ALTER INDEX [Idx_hNom_Actualemp] on ieepo.dbo.HNom_Actual REBUILD;Print ''Tabla Idx_hNom_Actualemp indexada;''
ALTER INDEX [Idx_hNom_Actualfecha] on ieepo.dbo.HNom_Actual REBUILD;Print ''Tabla Idx_hNom_Actualfecha indexada;''
ALTER INDEX [PK_Ca04] on ieepo.dbo.Ca04 REBUILD;Print ''Tabla PK_Ca04 indexada;''
ALTER INDEX [PK_HOperacion] on ieepo.dbo.HOperacion REBUILD;Print ''Tabla PK_HOperacion indexada;''
ALTER INDEX [IE1_Emp_Fecha] on ieepo.dbo.HOperacion REBUILD;Print ''Tabla IE1_Emp_Fecha indexada;''
ALTER INDEX [IE2_Fecha] on ieepo.dbo.HOperacion REBUILD;Print ''Tabla IE2_Fecha indexada;''
ALTER INDEX [PK_TPais] on ieepo.dbo.TPais REBUILD;Print ''Tabla PK_TPais indexada;''
ALTER INDEX [PK_SaldosporConcepto] on ieepo.dbo.saldosporconcepto REBUILD;Print ''Tabla PK_SaldosporConcepto indexada;''
ALTER INDEX [IDEMP] on ieepo.dbo.saldosporconcepto REBUILD;Print ''Tabla IDEMP indexada;''
ALTER INDEX [PK_HTipo_Nomina_Poliza_REN] on ieepo.dbo.HTipo_Nomina_Poliza_REN REBUILD;Print ''Tabla PK_HTipo_Nomina_Poliza_REN indexada;''
ALTER INDEX [Idx_hTipo_Nomina_Polizafecha] on ieepo.dbo.HTipo_Nomina_Poliza_REN REBUILD;Print ''Tabla Idx_hTipo_Nomina_Polizafecha indexada;''
ALTER INDEX [Idx_hTipo_Nomina_Polizaplaza] on ieepo.dbo.HTipo_Nomina_Poliza_REN REBUILD;Print ''Tabla Idx_hTipo_Nomina_Polizaplaza indexada;''
ALTER INDEX [PK_Ca05] on ieepo.dbo.Ca05 REBUILD;Print ''Tabla PK_Ca05 indexada;''
ALTER INDEX [pk_Trubros_id_rubro] on ieepo.dbo.Trubros REBUILD;Print ''Tabla pk_Trubros_id_rubro indexada;''
ALTER INDEX [PK_TM_Cedula] on ieepo.dbo.TM_Cedula REBUILD;Print ''Tabla PK_TM_Cedula indexada;''
ALTER INDEX [PK_HAreas] on ieepo.dbo.HAreas REBUILD;Print ''Tabla PK_HAreas indexada;''
ALTER INDEX [IX_HAreas] on ieepo.dbo.HAreas REBUILD;Print ''Tabla IX_HAreas indexada;''
ALTER INDEX [IE1_Emp_Fecha] on ieepo.dbo.HAreas REBUILD;Print ''Tabla IE1_Emp_Fecha indexada;''
ALTER INDEX [IE2_Fecha] on ieepo.dbo.HAreas REBUILD;Print ''Tabla IE2_Fecha indexada;''
ALTER INDEX [PK__FUP_PLAZ__3213E83F1E4E7B36] on ieepo.dbo.FUP_PLAZA_DRSE REBUILD;Print ''Tabla PK__FUP_PLAZ__3213E83F1E4E7B36 indexada;''
ALTER INDEX [PK_HFecha_Expedición_Carrera_Tecnica__1] on ieepo.dbo.HFecha_Expedición_Carrera_Tecnica_ REBUILD;Print ''Tabla PK_HFecha_Expedición_Carrera_Tecnica__1 indexada;''
ALTER INDEX [PK_TPlantas] on ieepo.dbo.TPlantas REBUILD;Print ''Tabla PK_TPlantas indexada;''
ALTER INDEX [PK_HNom_Escuela_Carrera_Técnica_1] on ieepo.dbo.HNom_Escuela_Carrera_Técnica REBUILD;Print ''Tabla PK_HNom_Escuela_Carrera_Técnica_1 indexada;''
ALTER INDEX [Idx_hNom_Escuela_Carrera_Técnicaemp] on ieepo.dbo.HNom_Escuela_Carrera_Técnica REBUILD;Print ''Tabla Idx_hNom_Escuela_Carrera_Técnicaemp indexada;''
ALTER INDEX [Idx_hNom_Escuela_Carrera_Técnicafecha] on ieepo.dbo.HNom_Escuela_Carrera_Técnica REBUILD;Print ''Tabla Idx_hNom_Escuela_Carrera_Técnicafecha indexada;''
ALTER INDEX [PK_Ca06] on ieepo.dbo.Ca06 REBUILD;Print ''Tabla PK_Ca06 indexada;''
ALTER INDEX [IE1_Curso_FechaIni_FechaFin] on ieepo.dbo.Ca06 REBUILD;Print ''Tabla IE1_Curso_FechaIni_FechaFin indexada;''
ALTER INDEX [PK__Leyendas__3214EC27991C618F] on ieepo.dbo.Leyendas REBUILD;Print ''Tabla PK__Leyendas__3214EC27991C618F indexada;''
ALTER INDEX [PK_TProcesosCalendario] on ieepo.dbo.TProcesosCalendario REBUILD;Print ''Tabla PK_TProcesosCalendario indexada;''
ALTER INDEX [pk_HResponsa_Pensionada] on ieepo.dbo.HResponsa_Pensionada REBUILD;Print ''Tabla pk_HResponsa_Pensionada indexada;''
ALTER INDEX [Idx_hResponsa_PensionadaBene] on ieepo.dbo.HResponsa_Pensionada REBUILD;Print ''Tabla Idx_hResponsa_PensionadaBene indexada;''
ALTER INDEX [Idx_hResponsa_Pensionadafecha] on ieepo.dbo.HResponsa_Pensionada REBUILD;Print ''Tabla Idx_hResponsa_Pensionadafecha indexada;''
ALTER INDEX [Id_DetalleCurso] on ieepo.dbo.Ca07 REBUILD;Print ''Tabla Id_DetalleCurso indexada;''
ALTER INDEX [IE_Id_Programacion] on ieepo.dbo.Ca07 REBUILD;Print ''Tabla IE_Id_Programacion indexada;''
ALTER INDEX [PK_HFecha_Expedición_Maestria_1] on ieepo.dbo.HFecha_Expedición_Maestria REBUILD;Print ''Tabla PK_HFecha_Expedición_Maestria_1 indexada;''
ALTER INDEX [Idx_hFecha_Expedición_Maestriaemp] on ieepo.dbo.HFecha_Expedición_Maestria REBUILD;Print ''Tabla Idx_hFecha_Expedición_Maestriaemp indexada;''
ALTER INDEX [Idx_hFecha_Expedición_Maestriafecha] on ieepo.dbo.HFecha_Expedición_Maestria REBUILD;Print ''Tabla Idx_hFecha_Expedición_Maestriafecha indexada;''
ALTER INDEX [PK_HVacaciones] on ieepo.dbo.HVacaciones REBUILD;Print ''Tabla PK_HVacaciones indexada;''
ALTER INDEX [PK_HNom_Maestria_1] on ieepo.dbo.HNom_Maestria REBUILD;Print ''Tabla PK_HNom_Maestria_1 indexada;''
ALTER INDEX [Idx_hNom_Maestriaemp] on ieepo.dbo.HNom_Maestria REBUILD;Print ''Tabla Idx_hNom_Maestriaemp indexada;''
ALTER INDEX [Idx_hNom_Maestriafecha] on ieepo.dbo.HNom_Maestria REBUILD;Print ''Tabla Idx_hNom_Maestriafecha indexada;''
ALTER INDEX [PK_Ca20] on ieepo.dbo.Ca20 REBUILD;Print ''Tabla PK_Ca20 indexada;''
ALTER INDEX [PK__TPalabra__3B4B155A1EEC7EBB] on ieepo.dbo.TPalabrasCensuradas REBUILD;Print ''Tabla PK__TPalabra__3B4B155A1EEC7EBB indexada;''
ALTER INDEX [Idx_htipoEmpISEAplaza] on ieepo.dbo.HtipoEmpISEA REBUILD;Print ''Tabla Idx_htipoEmpISEAplaza indexada;''
ALTER INDEX [Idx_htipoEmpISEAfecha] on ieepo.dbo.HtipoEmpISEA REBUILD;Print ''Tabla Idx_htipoEmpISEAfecha indexada;''
ALTER INDEX [PK_TProcesosFormulas] on ieepo.dbo.TProcesosFormulas REBUILD;Print ''Tabla PK_TProcesosFormulas indexada;''
ALTER INDEX [_WA_Sys_tabla_1C281490] on ieepo.dbo.TProcesosFormulas REBUILD;Print ''Tabla _WA_Sys_tabla_1C281490 indexada;''
ALTER INDEX [PK__TSubAgru__B3E9F2A408C06117] on ieepo.dbo.TSubAgrupadores REBUILD;Print ''Tabla PK__TSubAgru__B3E9F2A408C06117 indexada;''
ALTER INDEX [PK_HVariables] on ieepo.dbo.HVariables REBUILD;Print ''Tabla PK_HVariables indexada;''
ALTER INDEX [PK_UltimoControl] on ieepo.dbo.UltimoControl REBUILD;Print ''Tabla PK_UltimoControl indexada;''
ALTER INDEX [PK_Ca21] on ieepo.dbo.Ca21 REBUILD;Print ''Tabla PK_Ca21 indexada;''
ALTER INDEX [pk_fup_estatus] on ieepo.dbo.FUP_Estatus REBUILD;Print ''Tabla pk_fup_estatus indexada;''
ALTER INDEX [ix_fup_estatus_cve] on ieepo.dbo.FUP_Estatus REBUILD;Print ''Tabla ix_fup_estatus_cve indexada;''
ALTER INDEX [PK_HFecha_expedicion_Primaria_1] on ieepo.dbo.HFecha_expedicion_Primaria REBUILD;Print ''Tabla PK_HFecha_expedicion_Primaria_1 indexada;''
ALTER INDEX [Idx_hFecha_expedicion_Primariaemp] on ieepo.dbo.HFecha_expedicion_Primaria REBUILD;Print ''Tabla Idx_hFecha_expedicion_Primariaemp indexada;''
ALTER INDEX [Idx_hFecha_expedicion_Primariafecha] on ieepo.dbo.HFecha_expedicion_Primaria REBUILD;Print ''Tabla Idx_hFecha_expedicion_Primariafecha indexada;''
ALTER INDEX [pk_tmodelo_se] on ieepo.dbo.TModelo_SE REBUILD;Print ''Tabla pk_tmodelo_se indexada;''
ALTER INDEX [Idx_tmodelo_se] on ieepo.dbo.TModelo_SE REBUILD;Print ''Tabla Idx_tmodelo_se indexada;''
ALTER INDEX [PK_TProcesosValorXDia] on ieepo.dbo.TProcesosValorXDia REBUILD;Print ''Tabla PK_TProcesosValorXDia indexada;''
ALTER INDEX [fecha] on ieepo.dbo.TProcesosValorXDia REBUILD;Print ''Tabla fecha indexada;''
ALTER INDEX [PK_HNom_Prepa_1] on ieepo.dbo.HNom_Prepa REBUILD;Print ''Tabla PK_HNom_Prepa_1 indexada;''
ALTER INDEX [Idx_hNom_Prepaemp] on ieepo.dbo.HNom_Prepa REBUILD;Print ''Tabla Idx_hNom_Prepaemp indexada;''
ALTER INDEX [Idx_hNom_Prepafecha] on ieepo.dbo.HNom_Prepa REBUILD;Print ''Tabla Idx_hNom_Prepafecha indexada;''
ALTER INDEX [PK_Ca33] on ieepo.dbo.Ca33 REBUILD;Print ''Tabla PK_Ca33 indexada;''
ALTER INDEX [Idx_htipoMandoISEAplaza] on ieepo.dbo.HtipoMandoISEA REBUILD;Print ''Tabla Idx_htipoMandoISEAplaza indexada;''
ALTER INDEX [Idx_htipoMandoISEAfecha] on ieepo.dbo.HtipoMandoISEA REBUILD;Print ''Tabla Idx_htipoMandoISEAfecha indexada;''
ALTER INDEX [PK__Tipo_Ley__3214EC27A426FEE4] on ieepo.dbo.Tipo_Leyenda REBUILD;Print ''Tabla PK__Tipo_Ley__3214EC27A426FEE4 indexada;''
ALTER INDEX [PK_TProcesosValorXPeriodo] on ieepo.dbo.TProcesosValorXPeriodo REBUILD;Print ''Tabla PK_TProcesosValorXPeriodo indexada;''
ALTER INDEX [XPKHorarios] on ieepo.dbo.Horarios REBUILD;Print ''Tabla XPKHorarios indexada;''
ALTER INDEX [XPKCaCompetenciaCursos] on ieepo.dbo.CaCompetenciaCursos REBUILD;Print ''Tabla XPKCaCompetenciaCursos indexada;''
ALTER INDEX [pk_fup_tipomovimiento] on ieepo.dbo.FUP_TipoMovimiento REBUILD;Print ''Tabla pk_fup_tipomovimiento indexada;''
ALTER INDEX [ix_fup_tipomovimiento_cve] on ieepo.dbo.FUP_TipoMovimiento REBUILD;Print ''Tabla ix_fup_tipomovimiento_cve indexada;''
ALTER INDEX [PK_TTClientes] on ieepo.dbo.TTClientes REBUILD;Print ''Tabla PK_TTClientes indexada;''
ALTER INDEX [IX_TTClientes_clave] on ieepo.dbo.TTClientes REBUILD;Print ''Tabla IX_TTClientes_clave indexada;''
ALTER INDEX [IX_TTClientes_TTipoSegSoc_id_TipoSegSoc] on ieepo.dbo.TTClientes REBUILD;Print ''Tabla IX_TTClientes_TTipoSegSoc_id_TipoSegSoc indexada;''
ALTER INDEX [IX_TTClientes_CF_CargaSocial] on ieepo.dbo.TTClientes REBUILD;Print ''Tabla IX_TTClientes_CF_CargaSocial indexada;''
ALTER INDEX [PK_HFecha_Expedicion_Prof_1] on ieepo.dbo.HFecha_Expedicion_Prof REBUILD;Print ''Tabla PK_HFecha_Expedicion_Prof_1 indexada;''
ALTER INDEX [Idx_hFecha_Expedicion_Profemp] on ieepo.dbo.HFecha_Expedicion_Prof REBUILD;Print ''Tabla Idx_hFecha_Expedicion_Profemp indexada;''
ALTER INDEX [Idx_hFecha_Expedicion_Proffecha] on ieepo.dbo.HFecha_Expedicion_Prof REBUILD;Print ''Tabla Idx_hFecha_Expedicion_Proffecha indexada;''
ALTER INDEX [pk_TTTCategoriasPlaza_id_TTCategoriasPlaza] on ieepo.dbo.TTTCategoriasPlaza REBUILD;Print ''Tabla pk_TTTCategoriasPlaza_id_TTCategoriasPlaza indexada;''
ALTER INDEX [PK_TProcesosVariables] on ieepo.dbo.TProcesosVariables REBUILD;Print ''Tabla PK_TProcesosVariables indexada;''
ALTER INDEX [XPKConfigHistPlazas] on ieepo.dbo.ConfigHistPlazas REBUILD;Print ''Tabla XPKConfigHistPlazas indexada;''
ALTER INDEX [PK_HNom_Profesional_1] on ieepo.dbo.HNom_Profesional REBUILD;Print ''Tabla PK_HNom_Profesional_1 indexada;''
ALTER INDEX [Idx_hNom_Profesionalemp] on ieepo.dbo.HNom_Profesional REBUILD;Print ''Tabla Idx_hNom_Profesionalemp indexada;''
ALTER INDEX [Idx_hNom_Profesionalfecha] on ieepo.dbo.HNom_Profesional REBUILD;Print ''Tabla Idx_hNom_Profesionalfecha indexada;''
ALTER INDEX [PK_CaMatriz] on ieepo.dbo.CaMatriz REBUILD;Print ''Tabla PK_CaMatriz indexada;''
ALTER INDEX [pk_TLicencias_por_plaza] on ieepo.dbo.TLicencias_por_plaza REBUILD;Print ''Tabla pk_TLicencias_por_plaza indexada;''
ALTER INDEX [ix_TLicencias_por_plaza_idplaza] on ieepo.dbo.TLicencias_por_plaza REBUILD;Print ''Tabla ix_TLicencias_por_plaza_idplaza indexada;''
ALTER INDEX [pk_TTabulador_IEA_Plaza_id_Tabulador_IEA_Plaza] on ieepo.dbo.TTabulador_SE_Cat_Puesto REBUILD;Print ''Tabla pk_TTabulador_IEA_Plaza_id_Tabulador_IEA_Plaza indexada;''
ALTER INDEX [XPKTTipoMovPlazas] on ieepo.dbo.TTipoMovPlazas REBUILD;Print ''Tabla XPKTTipoMovPlazas indexada;''
ALTER INDEX [PK_Infonavit] on ieepo.dbo.Infonavit REBUILD;Print ''Tabla PK_Infonavit indexada;''
ALTER INDEX [PK__TMotivoCancelaci__5E8B557F] on ieepo.dbo.TMotivoCancelacion REBUILD;Print ''Tabla PK__TMotivoCancelaci__5E8B557F indexada;''
ALTER INDEX [PK__Concepto__2FDE759D56B7578A] on ieepo.dbo.ConceptosGeneracionCalculo REBUILD;Print ''Tabla PK__Concepto__2FDE759D56B7578A indexada;''
ALTER INDEX [PK_CaMatrizRequeridos] on ieepo.dbo.CaMatrizRequeridos REBUILD;Print ''Tabla PK_CaMatrizRequeridos indexada;''
ALTER INDEX [pk_fup_motmovcampos] on ieepo.dbo.FUP_MotMovCampos REBUILD;Print ''Tabla pk_fup_motmovcampos indexada;''
ALTER INDEX [_dta_index_FUP_MotMovCampos_5_568219887__K3_K2_K1_4_4683] on ieepo.dbo.FUP_MotMovCampos REBUILD;Print ''Tabla _dta_index_FUP_MotMovCampos_5_568219887__K3_K2_K1_4_4683 indexada;''
ALTER INDEX [XPKRastreoImpuesto] on ieepo.dbo.RastreoImpuesto REBUILD;Print ''Tabla XPKRastreoImpuesto indexada;''
ALTER INDEX [IDPERIODO] on ieepo.dbo.RastreoImpuesto REBUILD;Print ''Tabla IDPERIODO indexada;''
ALTER INDEX [PK_HpuestoDirGeneral] on ieepo.dbo.HpuestoDirGeneral REBUILD;Print ''Tabla PK_HpuestoDirGeneral indexada;''
ALTER INDEX [Idx_hpuestoDirGeneralfecha] on ieepo.dbo.HpuestoDirGeneral REBUILD;Print ''Tabla Idx_hpuestoDirGeneralfecha indexada;''
ALTER INDEX [Idx_hpuestoDirGeneralplaza] on ieepo.dbo.HpuestoDirGeneral REBUILD;Print ''Tabla Idx_hpuestoDirGeneralplaza indexada;''
ALTER INDEX [XPKTPropNodos] on ieepo.dbo.TPropNodos REBUILD;Print ''Tabla XPKTPropNodos indexada;''
ALTER INDEX [XPKTablaConfigOrgan] on ieepo.dbo.TablaConfigOrgan REBUILD;Print ''Tabla XPKTablaConfigOrgan indexada;''
ALTER INDEX [IX_TTClientes_tablaconfigorgan_id_nodopadre] on ieepo.dbo.TablaConfigOrgan REBUILD;Print ''Tabla IX_TTClientes_tablaconfigorgan_id_nodopadre indexada;''
ALTER INDEX [IX_TTClientes_tablaconfigorgan_id_tablalongitud] on ieepo.dbo.TablaConfigOrgan REBUILD;Print ''Tabla IX_TTClientes_tablaconfigorgan_id_tablalongitud indexada;''
ALTER INDEX [PK_HNombre_Primaria_1] on ieepo.dbo.HNombre_Primaria REBUILD;Print ''Tabla PK_HNombre_Primaria_1 indexada;''
ALTER INDEX [Idx_hNombre_Primariaemp] on ieepo.dbo.HNombre_Primaria REBUILD;Print ''Tabla Idx_hNombre_Primariaemp indexada;''
ALTER INDEX [Idx_hNombre_Primariafecha] on ieepo.dbo.HNombre_Primaria REBUILD;Print ''Tabla Idx_hNombre_Primariafecha indexada;''
ALTER INDEX [PK_CaSeleccionEmp] on ieepo.dbo.CaSeleccionEmp REBUILD;Print ''Tabla PK_CaSeleccionEmp indexada;''
ALTER INDEX [XPKFCalculoExcepciones] on ieepo.dbo.FCalculoExcepciones REBUILD;Print ''Tabla XPKFCalculoExcepciones indexada;''
ALTER INDEX [PK_TRazCas] on ieepo.dbo.TRazCas REBUILD;Print ''Tabla PK_TRazCas indexada;''
ALTER INDEX [PK_CaTCompetencia] on ieepo.dbo.CaTCompetencia REBUILD;Print ''Tabla PK_CaTCompetencia indexada;''
ALTER INDEX [pk_TTipoPresupuesto_idtipo] on ieepo.dbo.TTipoPresupuesto REBUILD;Print ''Tabla pk_TTipoPresupuesto_idtipo indexada;''
ALTER INDEX [PK_TRazFal] on ieepo.dbo.TRazFal REBUILD;Print ''Tabla PK_TRazFal indexada;''
ALTER INDEX [PK_Hcurp] on ieepo.dbo.Hcurp REBUILD;Print ''Tabla PK_Hcurp indexada;''
ALTER INDEX [cdx_sysindices_idtabla_orden] on ieepo.dbo.sysindices REBUILD;Print ''Tabla cdx_sysindices_idtabla_orden indexada;''
ALTER INDEX [PK_TablaLongitud] on ieepo.dbo.TablaLongitud REBUILD;Print ''Tabla PK_TablaLongitud indexada;''
ALTER INDEX [COMPARTIDO] on ieepo.dbo.TablaLongitud REBUILD;Print ''Tabla COMPARTIDO indexada;''
ALTER INDEX [COMPARTIDO2] on ieepo.dbo.TablaLongitud REBUILD;Print ''Tabla COMPARTIDO2 indexada;''
ALTER INDEX [PK_HNombrePar1_1] on ieepo.dbo.HNombrePar1 REBUILD;Print ''Tabla PK_HNombrePar1_1 indexada;''
ALTER INDEX [Idx_hNombrePar1emp] on ieepo.dbo.HNombrePar1 REBUILD;Print ''Tabla Idx_hNombrePar1emp indexada;''
ALTER INDEX [Idx_hNombrePar1fecha] on ieepo.dbo.HNombrePar1 REBUILD;Print ''Tabla Idx_hNombrePar1fecha indexada;''
ALTER INDEX [PK_TCT_Tabulador_SE_Zona] on ieepo.dbo.TCT_Tabulador_SE_Zona REBUILD;Print ''Tabla PK_TCT_Tabulador_SE_Zona indexada;''
ALTER INDEX [IX_TCT_Tabulador_SE_Zona] on ieepo.dbo.TCT_Tabulador_SE_Zona REBUILD;Print ''Tabla IX_TCT_Tabulador_SE_Zona indexada;''
ALTER INDEX [IX_Folio_Recibos] on ieepo.dbo.Folio_Recibos REBUILD;Print ''Tabla IX_Folio_Recibos indexada;''
ALTER INDEX [IX_Folio_Recibos_cancelado] on ieepo.dbo.Folio_Recibos REBUILD;Print ''Tabla IX_Folio_Recibos_cancelado indexada;''
ALTER INDEX [IX_Folio_Recibos_cod] on ieepo.dbo.Folio_Recibos REBUILD;Print ''Tabla IX_Folio_Recibos_cod indexada;''
ALTER INDEX [IX_Folio_Recibos_folio] on ieepo.dbo.Folio_Recibos REBUILD;Print ''Tabla IX_Folio_Recibos_folio indexada;''
ALTER INDEX [IX_Folio_Recibos_id_emp] on ieepo.dbo.Folio_Recibos REBUILD;Print ''Tabla IX_Folio_Recibos_id_emp indexada;''
ALTER INDEX [IX_Folio_Recibos_Id_emp_id_plaza] on ieepo.dbo.Folio_Recibos REBUILD;Print ''Tabla IX_Folio_Recibos_Id_emp_id_plaza indexada;''
ALTER INDEX [IX_Folio_Recibos_periodo] on ieepo.dbo.Folio_Recibos REBUILD;Print ''Tabla IX_Folio_Recibos_periodo indexada;''
ALTER INDEX [IX_Folio_Recibos_periodo_plaza_emp] on ieepo.dbo.Folio_Recibos REBUILD;Print ''Tabla IX_Folio_Recibos_periodo_plaza_emp indexada;''
ALTER INDEX [IX_Folio_Recibos_FR] on ieepo.dbo.Folio_Recibos REBUILD;Print ''Tabla IX_Folio_Recibos_FR indexada;''
ALTER INDEX [idx_folios_recibos] on ieepo.dbo.Folio_Recibos REBUILD;Print ''Tabla idx_folios_recibos indexada;''
ALTER INDEX [IX_Folio_Recibos_folio_id_recibo] on ieepo.dbo.Folio_Recibos REBUILD;Print ''Tabla IX_Folio_Recibos_folio_id_recibo indexada;''
ALTER INDEX [ix_foliorecibos_plaza_recibo] on ieepo.dbo.Folio_Recibos REBUILD;Print ''Tabla ix_foliorecibos_plaza_recibo indexada;''
ALTER INDEX [pk_AjustesPresupuestoPlazas_AñoPre_Id_plaza_Id_plazaorigen_fecha] on ieepo.dbo.AjustesPresupuestoPlazas REBUILD;Print ''Tabla pk_AjustesPresupuestoPlazas_AñoPre_Id_plaza_Id_plazaorigen_fecha indexada;''
ALTER INDEX [idx_AjustesPresupuestoPlazas_AñoPre_idtipo_Id_plaza] on ieepo.dbo.AjustesPresupuestoPlazas REBUILD;Print ''Tabla idx_AjustesPresupuestoPlazas_AñoPre_idtipo_Id_plaza indexada;''
ALTER INDEX [idx_AjustesPresupuestoPlazas_AñoPre_idtipo_Id_plazaorigen] on ieepo.dbo.AjustesPresupuestoPlazas REBUILD;Print ''Tabla idx_AjustesPresupuestoPlazas_AñoPre_idtipo_Id_plazaorigen indexada;''
ALTER INDEX [PK_TRazInc] on ieepo.dbo.TRazInc REBUILD;Print ''Tabla PK_TRazInc indexada;''
ALTER INDEX [IX_HDeducsfijas] on ieepo.dbo.HDeducsfijas REBUILD;Print ''Tabla IX_HDeducsfijas indexada;''
ALTER INDEX [IDEMP] on ieepo.dbo.HDeducsfijas REBUILD;Print ''Tabla IDEMP indexada;''
ALTER INDEX [COMPARTIDO] on ieepo.dbo.HDeducsfijas REBUILD;Print ''Tabla COMPARTIDO indexada;''
ALTER INDEX [PK_ListadoReportes] on ieepo.dbo.ListadoReportes REBUILD;Print ''Tabla PK_ListadoReportes indexada;''
ALTER INDEX [PK__Plazas_A__3214EC278BD2CA52] on ieepo.dbo.Plazas_Autorizadas REBUILD;Print ''Tabla PK__Plazas_A__3214EC278BD2CA52 indexada;''
ALTER INDEX [PK_RECALCULO_TIPOS] on ieepo.dbo.Recalculo_Tipos REBUILD;Print ''Tabla PK_RECALCULO_TIPOS indexada;''
ALTER INDEX [PK_FUP_DetalleCampos_ALL] on ieepo.dbo.FUP_DetalleCampos REBUILD;Print ''Tabla PK_FUP_DetalleCampos_ALL indexada;''
ALTER INDEX [_dta_index_FUP_DetalleCampos_5_632220115__K1_K2_K3_3923] on ieepo.dbo.FUP_DetalleCampos REBUILD;Print ''Tabla _dta_index_FUP_DetalleCampos_5_632220115__K1_K2_K3_3923 indexada;''
ALTER INDEX [ix_FUP_DetalleCampos_Id_MotivoMovimiento] on ieepo.dbo.FUP_DetalleCampos REBUILD;Print ''Tabla ix_FUP_DetalleCampos_Id_MotivoMovimiento indexada;''
ALTER INDEX [ix_FUP_DetalleCampos_Id_Valor] on ieepo.dbo.FUP_DetalleCampos REBUILD;Print ''Tabla ix_FUP_DetalleCampos_Id_Valor indexada;''
ALTER INDEX [PK_TRepLegal] on ieepo.dbo.TRepLegal REBUILD;Print ''Tabla PK_TRepLegal indexada;''
ALTER INDEX [XPKMENU] on ieepo.dbo.MENU REBUILD;Print ''Tabla XPKMENU indexada;''
ALTER INDEX [IE1_Sistema] on ieepo.dbo.MENU REBUILD;Print ''Tabla IE1_Sistema indexada;''
ALTER INDEX [IE2_Padre] on ieepo.dbo.MENU REBUILD;Print ''Tabla IE2_Padre indexada;''
ALTER INDEX [_dta_index_MENU_5_642101328__K4] on ieepo.dbo.MENU REBUILD;Print ''Tabla _dta_index_MENU_5_642101328__K4 indexada;''
ALTER INDEX [PK__DescripcionLeyen__2766C594] on ieepo.dbo.DescripcionLeyenda REBUILD;Print ''Tabla PK__DescripcionLeyen__2766C594 indexada;''
ALTER INDEX [PK_HNombrePar2_1] on ieepo.dbo.HNombrePar2 REBUILD;Print ''Tabla PK_HNombrePar2_1 indexada;''
ALTER INDEX [Idx_hNombrePar2emp] on ieepo.dbo.HNombrePar2 REBUILD;Print ''Tabla Idx_hNombrePar2emp indexada;''
ALTER INDEX [Idx_hNombrePar2fecha] on ieepo.dbo.HNombrePar2 REBUILD;Print ''Tabla Idx_hNombrePar2fecha indexada;''
ALTER INDEX [XPKCalenBiImss] on ieepo.dbo.CalenBiImss REBUILD;Print ''Tabla XPKCalenBiImss indexada;''
ALTER INDEX [pk_scr] on ieepo.dbo.Bitacora_Script REBUILD;Print ''Tabla pk_scr indexada;''
ALTER INDEX [XPKTRestriccionesProg] on ieepo.dbo.TRestriccionesProg REBUILD;Print ''Tabla XPKTRestriccionesProg indexada;''
ALTER INDEX [PK_HSF] on ieepo.dbo.HSF REBUILD;Print ''Tabla PK_HSF indexada;''
ALTER INDEX [Idx_hSFfecha] on ieepo.dbo.HSF REBUILD;Print ''Tabla Idx_hSFfecha indexada;''
ALTER INDEX [Idx_hSFplaza] on ieepo.dbo.HSF REBUILD;Print ''Tabla Idx_hSFplaza indexada;''
ALTER INDEX [XPKTEstructura] on ieepo.dbo.TEstructura REBUILD;Print ''Tabla XPKTEstructura indexada;''
ALTER INDEX [XPKCalenImss] on ieepo.dbo.CalenImss REBUILD;Print ''Tabla XPKCalenImss indexada;''
ALTER INDEX [pk_fup_bitacora] on ieepo.dbo.FUP_Bitacora REBUILD;Print ''Tabla pk_fup_bitacora indexada;''
ALTER INDEX [idx_Nom_histpagos_clustered_n_E] on ieepo.dbo.Nom_histpagosEstadistico REBUILD;Print ''Tabla idx_Nom_histpagos_clustered_n_E indexada;''
ALTER INDEX [IX_Nom_histpagos_periodo_emp_plaza_Periodopago_E] on ieepo.dbo.Nom_histpagosEstadistico REBUILD;Print ''Tabla IX_Nom_histpagos_periodo_emp_plaza_Periodopago_E indexada;''
ALTER INDEX [IX_Nom_histpagos_perpzaref_E] on ieepo.dbo.Nom_histpagosEstadistico REBUILD;Print ''Tabla IX_Nom_histpagos_perpzaref_E indexada;''
ALTER INDEX [ix_nom_histpagos_pzaprocper_E] on ieepo.dbo.Nom_histpagosEstadistico REBUILD;Print ''Tabla ix_nom_histpagos_pzaprocper_E indexada;''
ALTER INDEX [Nom_histpagos_idPeriodo_E] on ieepo.dbo.Nom_histpagosEstadistico REBUILD;Print ''Tabla Nom_histpagos_idPeriodo_E indexada;''
ALTER INDEX [PK_TRotacion] on ieepo.dbo.TRotacion REBUILD;Print ''Tabla PK_TRotacion indexada;''
ALTER INDEX [PK_HCveCobro] on ieepo.dbo.HCveCobro REBUILD;Print ''Tabla PK_HCveCobro indexada;''
ALTER INDEX [Idx_hCveCobroemp] on ieepo.dbo.HCveCobro REBUILD;Print ''Tabla Idx_hCveCobroemp indexada;''
ALTER INDEX [Idx_hCveCobrofecha] on ieepo.dbo.HCveCobro REBUILD;Print ''Tabla Idx_hCveCobrofecha indexada;''
ALTER INDEX [XPKMensajes] on ieepo.dbo.Mensajes REBUILD;Print ''Tabla XPKMensajes indexada;''
ALTER INDEX [PK_registro] on ieepo.dbo.Registro REBUILD;Print ''Tabla PK_registro indexada;''
ALTER INDEX [IE2_IdEmpleado] on ieepo.dbo.Registro REBUILD;Print ''Tabla IE2_IdEmpleado indexada;''
ALTER INDEX [IE1_FechaDia] on ieepo.dbo.Registro REBUILD;Print ''Tabla IE1_FechaDia indexada;''
ALTER INDEX [PK__CalenOrdenCampos__294F0E06] on ieepo.dbo.CalenOrdenCampos REBUILD;Print ''Tabla PK__CalenOrdenCampos__294F0E06 indexada;''
ALTER INDEX [PK_HNombreRef2_1] on ieepo.dbo.HNombreRef2 REBUILD;Print ''Tabla PK_HNombreRef2_1 indexada;''
ALTER INDEX [Idx_hNombreRef2emp] on ieepo.dbo.HNombreRef2 REBUILD;Print ''Tabla Idx_hNombreRef2emp indexada;''
ALTER INDEX [Idx_hNombreRef2fecha] on ieepo.dbo.HNombreRef2 REBUILD;Print ''Tabla Idx_hNombreRef2fecha indexada;''
ALTER INDEX [PK_Recalculo_EmpleadosPeriodos] on ieepo.dbo.nom_Recalculo_EmpleadosPeriodos REBUILD;Print ''Tabla PK_Recalculo_EmpleadosPeriodos indexada;''
ALTER INDEX [ix_Recalculo_EmpleadosPeriodos_idper_idpzacalc] on ieepo.dbo.nom_Recalculo_EmpleadosPeriodos REBUILD;Print ''Tabla ix_Recalculo_EmpleadosPeriodos_idper_idpzacalc indexada;''
ALTER INDEX [PK_TSitLab] on ieepo.dbo.TSitLab REBUILD;Print ''Tabla PK_TSitLab indexada;''
ALTER INDEX [XPKTDependencias] on ieepo.dbo.TDependencias REBUILD;Print ''Tabla XPKTDependencias indexada;''
ALTER INDEX [IE1_Id_Emp] on ieepo.dbo.MensajesEmpleados REBUILD;Print ''Tabla IE1_Id_Emp indexada;''
ALTER INDEX [PK_CamposCM] on ieepo.dbo.CamposCM REBUILD;Print ''Tabla PK_CamposCM indexada;''
ALTER INDEX [PK_HCia] on ieepo.dbo.HCia REBUILD;Print ''Tabla PK_HCia indexada;''
ALTER INDEX [IX_HCia] on ieepo.dbo.HCia REBUILD;Print ''Tabla IX_HCia indexada;''
ALTER INDEX [ix_hcia_fecha_mov] on ieepo.dbo.HCia REBUILD;Print ''Tabla ix_hcia_fecha_mov indexada;''
ALTER INDEX [ix_hcia_fecha_inc_emprel] on ieepo.dbo.HCia REBUILD;Print ''Tabla ix_hcia_fecha_inc_emprel indexada;''
ALTER INDEX [PK_TSupervisor] on ieepo.dbo.TSupervisor REBUILD;Print ''Tabla PK_TSupervisor indexada;''
ALTER INDEX [CiaSuper] on ieepo.dbo.TSupervisor REBUILD;Print ''Tabla CiaSuper indexada;''
ALTER INDEX [XPKMensajesFiltros] on ieepo.dbo.MensajesFiltros REBUILD;Print ''Tabla XPKMensajesFiltros indexada;''
ALTER INDEX [PK_HNomRef1_1] on ieepo.dbo.HNomRef1 REBUILD;Print ''Tabla PK_HNomRef1_1 indexada;''
ALTER INDEX [Idx_hNomRef1emp] on ieepo.dbo.HNomRef1 REBUILD;Print ''Tabla Idx_hNomRef1emp indexada;''
ALTER INDEX [Idx_hNomRef1fecha] on ieepo.dbo.HNomRef1 REBUILD;Print ''Tabla Idx_hNomRef1fecha indexada;''
ALTER INDEX [PK_CamposCS] on ieepo.dbo.CamposCS REBUILD;Print ''Tabla PK_CamposCS indexada;''
ALTER INDEX [PK__BitacoraEjecucio] on ieepo.dbo.BitacoraEjecucionesProcesaTiempos REBUILD;Print ''Tabla PK__BitacoraEjecucio indexada;''
ALTER INDEX [XPKTTiempoExtra] on ieepo.dbo.TTiempoExtra REBUILD;Print ''Tabla XPKTTiempoExtra indexada;''
ALTER INDEX [XPKMonedas] on ieepo.dbo.Monedas REBUILD;Print ''Tabla XPKMonedas indexada;''
ALTER INDEX [XPKCamposCardex] on ieepo.dbo.CamposCardex REBUILD;Print ''Tabla XPKCamposCardex indexada;''
ALTER INDEX [PK_HDiasLicSinGoce] on ieepo.dbo.HDiasLicSinGoce REBUILD;Print ''Tabla PK_HDiasLicSinGoce indexada;''
ALTER INDEX [Idx_hDiasLicSinGoceemp] on ieepo.dbo.HDiasLicSinGoce REBUILD;Print ''Tabla Idx_hDiasLicSinGoceemp indexada;''
ALTER INDEX [Idx_hDiasLicSinGocefecha] on ieepo.dbo.HDiasLicSinGoce REBUILD;Print ''Tabla Idx_hDiasLicSinGocefecha indexada;''
ALTER INDEX [XPKFCalculoConceptos] on ieepo.dbo.FCalculoConceptos REBUILD;Print ''Tabla XPKFCalculoConceptos indexada;''
ALTER INDEX [PK_TTipPerm] on ieepo.dbo.TTipPerm REBUILD;Print ''Tabla PK_TTipPerm indexada;''
ALTER INDEX [XPKNaturalezaCuenta] on ieepo.dbo.NaturalezaCuenta REBUILD;Print ''Tabla XPKNaturalezaCuenta indexada;''
ALTER INDEX [PK_HcatActividadPuesto] on ieepo.dbo.HcatActividadPuesto REBUILD;Print ''Tabla PK_HcatActividadPuesto indexada;''
ALTER INDEX [Idx_hcatActividadPuestofecha] on ieepo.dbo.HcatActividadPuesto REBUILD;Print ''Tabla Idx_hcatActividadPuestofecha indexada;''
ALTER INDEX [Idx_hcatActividadPuestoplaza] on ieepo.dbo.HcatActividadPuesto REBUILD;Print ''Tabla Idx_hcatActividadPuestoplaza indexada;''
ALTER INDEX [PK_tipos_incidencia] on ieepo.dbo.tipos_incidencia REBUILD;Print ''Tabla PK_tipos_incidencia indexada;''
ALTER INDEX [PK_HNomSecundaria_1] on ieepo.dbo.HNomSecundaria REBUILD;Print ''Tabla PK_HNomSecundaria_1 indexada;''
ALTER INDEX [Idx_hNomSecundariaemp] on ieepo.dbo.HNomSecundaria REBUILD;Print ''Tabla Idx_hNomSecundariaemp indexada;''
ALTER INDEX [Idx_hNomSecundariafecha] on ieepo.dbo.HNomSecundaria REBUILD;Print ''Tabla Idx_hNomSecundariafecha indexada;''
ALTER INDEX [PK_CamposFiltros] on ieepo.dbo.CamposFiltros REBUILD;Print ''Tabla PK_CamposFiltros indexada;''
ALTER INDEX [pk_BolsaImprevistosEntidad_año_id_Razonsocial_id_rubro] on ieepo.dbo.BolsaImprevistosEntidad REBUILD;Print ''Tabla pk_BolsaImprevistosEntidad_año_id_Razonsocial_id_rubro indexada;''
ALTER INDEX [PK_TplantillasConceptos] on ieepo.dbo.TplantillasConceptos REBUILD;Print ''Tabla PK_TplantillasConceptos indexada;''
ALTER INDEX [PK_NoGrupos] on ieepo.dbo.NoGrupos REBUILD;Print ''Tabla PK_NoGrupos indexada;''
ALTER INDEX [_WA_Sys_GRUPO_7D8391DF] on ieepo.dbo.NoGrupos REBUILD;Print ''Tabla _WA_Sys_GRUPO_7D8391DF indexada;''
ALTER INDEX [XPKExcepciones] on ieepo.dbo.Excepciones REBUILD;Print ''Tabla XPKExcepciones indexada;''
ALTER INDEX [IE1_Periodo_Emp] on ieepo.dbo.Excepciones REBUILD;Print ''Tabla IE1_Periodo_Emp indexada;''
ALTER INDEX [IE2_Periodo_Clave] on ieepo.dbo.Excepciones REBUILD;Print ''Tabla IE2_Periodo_Clave indexada;''
ALTER INDEX [IDPLAZA] on ieepo.dbo.Excepciones REBUILD;Print ''Tabla IDPLAZA indexada;''
ALTER INDEX [XPKReloj_Registro] on ieepo.dbo.Reloj_Registro REBUILD;Print ''Tabla XPKReloj_Registro indexada;''
ALTER INDEX [IDCODIGO] on ieepo.dbo.Reloj_Registro REBUILD;Print ''Tabla IDCODIGO indexada;''
ALTER INDEX [COMPARTIDO] on ieepo.dbo.Reloj_Registro REBUILD;Print ''Tabla COMPARTIDO indexada;''
ALTER INDEX [XPKCamposMaestro] on ieepo.dbo.CamposMaestro REBUILD;Print ''Tabla XPKCamposMaestro indexada;''
ALTER INDEX [PK_HasignacionPuesto] on ieepo.dbo.HasignacionPuesto REBUILD;Print ''Tabla PK_HasignacionPuesto indexada;''
ALTER INDEX [Idx_hasignacionPuestofecha] on ieepo.dbo.HasignacionPuesto REBUILD;Print ''Tabla Idx_hasignacionPuestofecha indexada;''
ALTER INDEX [Idx_hasignacionPuestoplaza] on ieepo.dbo.HasignacionPuesto REBUILD;Print ''Tabla Idx_hasignacionPuestoplaza indexada;''
ALTER INDEX [PK_TTipoExcepcionesTyA] on ieepo.dbo.TTipoExcepcionesTyA REBUILD;Print ''Tabla PK_TTipoExcepcionesTyA indexada;''
ALTER INDEX [XPKNoRelGrupos] on ieepo.dbo.NoRelGrupos REBUILD;Print ''Tabla XPKNoRelGrupos indexada;''
ALTER INDEX [IE1_Id_Grupo] on ieepo.dbo.NoRelGrupos REBUILD;Print ''Tabla IE1_Id_Grupo indexada;''
ALTER INDEX [PK_HNSS_1] on ieepo.dbo.HNSS REBUILD;Print ''Tabla PK_HNSS_1 indexada;''
ALTER INDEX [Idx_hNSSemp] on ieepo.dbo.HNSS REBUILD;Print ''Tabla Idx_hNSSemp indexada;''
ALTER INDEX [Idx_hNSSfecha] on ieepo.dbo.HNSS REBUILD;Print ''Tabla Idx_hNSSfecha indexada;''
ALTER INDEX [PK_CamposOrgan] on ieepo.dbo.CamposOrgan REBUILD;Print ''Tabla PK_CamposOrgan indexada;''
ALTER INDEX [PK_FUP_Documento_Detalle_Id_Detalle] on ieepo.dbo.FUP_Documento_Detalle REBUILD;Print ''Tabla PK_FUP_Documento_Detalle_Id_Detalle indexada;''
ALTER INDEX [IDX_FUP_DOCUMENTO_DETALLE_ID_DOCUMENTO] on ieepo.dbo.FUP_Documento_Detalle REBUILD;Print ''Tabla IDX_FUP_DOCUMENTO_DETALLE_ID_DOCUMENTO indexada;''
ALTER INDEX [_dta_index_FUP_Documento_Detalle_5_778081862__K2_K9_K1_1040] on ieepo.dbo.FUP_Documento_Detalle REBUILD;Print ''Tabla _dta_index_FUP_Documento_Detalle_5_778081862__K2_K9_K1_1040 indexada;''
ALTER INDEX [_dta_index_FUP_Documento_Detalle_5_778081862__K9_K1_K2_K3_5_6] on ieepo.dbo.FUP_Documento_Detalle REBUILD;Print ''Tabla _dta_index_FUP_Documento_Detalle_5_778081862__K9_K1_K2_K3_5_6 indexada;''
ALTER INDEX [ix_id_estatus_id_motivomovimento] on ieepo.dbo.FUP_Documento_Detalle REBUILD;Print ''Tabla ix_id_estatus_id_motivomovimento indexada;''
ALTER INDEX [PK_PlantillasConceptos_Detalle] on ieepo.dbo.PlantillasConceptos_Detalle REBUILD;Print ''Tabla PK_PlantillasConceptos_Detalle indexada;''
ALTER INDEX [IE1_Id_Programa] on ieepo.dbo.CamposPrograma REBUILD;Print ''Tabla IE1_Id_Programa indexada;''
ALTER INDEX [PK_FUP_Documentos_Id_Documento] on ieepo.dbo.FUP_Documentos REBUILD;Print ''Tabla PK_FUP_Documentos_Id_Documento indexada;''
ALTER INDEX [IDX_id_emp_status] on ieepo.dbo.FUP_Documentos REBUILD;Print ''Tabla IDX_id_emp_status indexada;''
ALTER INDEX [_dta_index_FUP_Documentos_5_794081919__K1_K10_K5_K2_K3_K4_K7] on ieepo.dbo.FUP_Documentos REBUILD;Print ''Tabla _dta_index_FUP_Documentos_5_794081919__K1_K10_K5_K2_K3_K4_K7 indexada;''
ALTER INDEX [ix_folio] on ieepo.dbo.FUP_Documentos REBUILD;Print ''Tabla ix_folio indexada;''
ALTER INDEX [pk_ConceptosRubroPresupuesto_año_id_concepto] on ieepo.dbo.ConceptosRubroPresupuesto REBUILD;Print ''Tabla pk_ConceptosRubroPresupuesto_año_id_concepto indexada;''
ALTER INDEX [idx_ConceptosRubroPresupuesto_id_rubro] on ieepo.dbo.ConceptosRubroPresupuesto REBUILD;Print ''Tabla idx_ConceptosRubroPresupuesto_id_rubro indexada;''
ALTER INDEX [uq_ConceptosRubroPresupuesto_año_id_rubro_id_concepto] on ieepo.dbo.ConceptosRubroPresupuesto REBUILD;Print ''Tabla uq_ConceptosRubroPresupuesto_año_id_rubro_id_concepto indexada;''
ALTER INDEX [PK_HNum_Certificado_Profesional_1] on ieepo.dbo.HNum_Certificado_Profesional REBUILD;Print ''Tabla PK_HNum_Certificado_Profesional_1 indexada;''
ALTER INDEX [Idx_hNum_Certificado_Profesionalemp] on ieepo.dbo.HNum_Certificado_Profesional REBUILD;Print ''Tabla Idx_hNum_Certificado_Profesionalemp indexada;''
ALTER INDEX [Idx_hNum_Certificado_Profesionalfecha] on ieepo.dbo.HNum_Certificado_Profesional REBUILD;Print ''Tabla Idx_hNum_Certificado_Profesionalfecha indexada;''
ALTER INDEX [XPKCamposReestringidos] on ieepo.dbo.CamposReestringidos REBUILD;Print ''Tabla XPKCamposReestringidos indexada;''
ALTER INDEX [IE1_Id_Usuario] on ieepo.dbo.CamposReestringidos REBUILD;Print ''Tabla IE1_Id_Usuario indexada;''
ALTER INDEX [pk_fup_cancelados] on ieepo.dbo.FUP_Cancelados REBUILD;Print ''Tabla pk_fup_cancelados indexada;''
ALTER INDEX [PK_FUP_ValorDate_id_valor] on ieepo.dbo.FUP_ValorDate REBUILD;Print ''Tabla PK_FUP_ValorDate_id_valor indexada;''
ALTER INDEX [_dta_index_FUP_ValorDate_5_810081976__K3_K1_2_6497] on ieepo.dbo.FUP_ValorDate REBUILD;Print ''Tabla _dta_index_FUP_ValorDate_5_810081976__K3_K1_2_6497 indexada;''
ALTER INDEX [ix_FUP_ValorDate_id_documento] on ieepo.dbo.FUP_ValorDate REBUILD;Print ''Tabla ix_FUP_ValorDate_id_documento indexada;''
ALTER INDEX [PK_TTurnos] on ieepo.dbo.TTurnos REBUILD;Print ''Tabla PK_TTurnos indexada;''
ALTER INDEX [PK__TrashTem__3213E83F0CF7032F] on ieepo.dbo.TrashTemp REBUILD;Print ''Tabla PK__TrashTem__3213E83F0CF7032F indexada;''
ALTER INDEX [ix_TrashTemp_nomtabla] on ieepo.dbo.TrashTemp REBUILD;Print ''Tabla ix_TrashTemp_nomtabla indexada;''
ALTER INDEX [index_TDigitoVer] on ieepo.dbo.TDigitoVer REBUILD;Print ''Tabla index_TDigitoVer indexada;''
ALTER INDEX [PK_CamposReporte] on ieepo.dbo.CamposReporte REBUILD;Print ''Tabla PK_CamposReporte indexada;''
ALTER INDEX [PK__FUP_MotivoMovimi__5B7B3D8B] on ieepo.dbo.FUP_MotivoMovimiento REBUILD;Print ''Tabla PK__FUP_MotivoMovimi__5B7B3D8B indexada;''
ALTER INDEX [PK_FUP_ValorFloat_id_valor] on ieepo.dbo.FUP_ValorFloat REBUILD;Print ''Tabla PK_FUP_ValorFloat_id_valor indexada;''
ALTER INDEX [_dta_index_FUP_ValorFloat_5_826082033__K3_K1_2_2894] on ieepo.dbo.FUP_ValorFloat REBUILD;Print ''Tabla _dta_index_FUP_ValorFloat_5_826082033__K3_K1_2_2894 indexada;''
ALTER INDEX [ix_FUP_ValorFloat_id_documento] on ieepo.dbo.FUP_ValorFloat REBUILD;Print ''Tabla ix_FUP_ValorFloat_id_documento indexada;''
ALTER INDEX [PK_HFaltasInd] on ieepo.dbo.HFaltasInd REBUILD;Print ''Tabla PK_HFaltasInd indexada;''
ALTER INDEX [IE1_Fecha] on ieepo.dbo.HFaltasInd REBUILD;Print ''Tabla IE1_Fecha indexada;''
ALTER INDEX [PK_HCTA2] on ieepo.dbo.hcuentas_pension2 REBUILD;Print ''Tabla PK_HCTA2 indexada;''
ALTER INDEX [XPKParametros] on ieepo.dbo.Parametros REBUILD;Print ''Tabla XPKParametros indexada;''
ALTER INDEX [PK_HNum_Certificado_y_Titulo_Rec_1] on ieepo.dbo.HNum_Certificado_y_Titulo_Rec REBUILD;Print ''Tabla PK_HNum_Certificado_y_Titulo_Rec_1 indexada;''
ALTER INDEX [Idx_hNum_Certificado_y_Titulo_Recemp] on ieepo.dbo.HNum_Certificado_y_Titulo_Rec REBUILD;Print ''Tabla Idx_hNum_Certificado_y_Titulo_Recemp indexada;''
ALTER INDEX [Idx_hNum_Certificado_y_Titulo_Recfecha] on ieepo.dbo.HNum_Certificado_y_Titulo_Rec REBUILD;Print ''Tabla Idx_hNum_Certificado_y_Titulo_Recfecha indexada;''
ALTER INDEX [PK_CamposReporteCap] on ieepo.dbo.CamposReporteCap REBUILD;Print ''Tabla PK_CamposReporteCap indexada;''
ALTER INDEX [FUP_REL_DOCTOS_ANEXOS_PK] on ieepo.dbo.FUP_REL_DOCTOS_ANEXOS REBUILD;Print ''Tabla FUP_REL_DOCTOS_ANEXOS_PK indexada;''
ALTER INDEX [PK_FUP_Datos_id_rs_seccion_orden] on ieepo.dbo.FUP_Datos REBUILD;Print ''Tabla PK_FUP_Datos_id_rs_seccion_orden indexada;''
ALTER INDEX [ix_formula_Secion] on ieepo.dbo.FUP_Datos REBUILD;Print ''Tabla ix_formula_Secion indexada;''
ALTER INDEX [PK_FUP_ValorInteger_id_valor] on ieepo.dbo.FUP_ValorInteger REBUILD;Print ''Tabla PK_FUP_ValorInteger_id_valor indexada;''
ALTER INDEX [_dta_index_FUP_ValorInteger_5_842082090__K1_K3_2_5201] on ieepo.dbo.FUP_ValorInteger REBUILD;Print ''Tabla _dta_index_FUP_ValorInteger_5_842082090__K1_K3_2_5201 indexada;''
ALTER INDEX [ix_FUP_ValorInteger_id_documento] on ieepo.dbo.FUP_ValorInteger REBUILD;Print ''Tabla ix_FUP_ValorInteger_id_documento indexada;''
ALTER INDEX [PK_HGF] on ieepo.dbo.HGF REBUILD;Print ''Tabla PK_HGF indexada;''
ALTER INDEX [Idx_hGFfecha] on ieepo.dbo.HGF REBUILD;Print ''Tabla Idx_hGFfecha indexada;''
ALTER INDEX [Idx_hGFplaza] on ieepo.dbo.HGF REBUILD;Print ''Tabla Idx_hGFplaza indexada;''
ALTER INDEX [XPKTVacaciones] on ieepo.dbo.TVacaciones REBUILD;Print ''Tabla XPKTVacaciones indexada;''
ALTER INDEX [PK_PlantillasConceptos_RS] on ieepo.dbo.PlantillasConceptos_RS REBUILD;Print ''Tabla PK_PlantillasConceptos_RS indexada;''
ALTER INDEX [XPKParametrosImss] on ieepo.dbo.ParametrosImss REBUILD;Print ''Tabla XPKParametrosImss indexada;''
ALTER INDEX [PK_HHBeneficiario] on ieepo.dbo.HBeneficiario REBUILD;Print ''Tabla PK_HHBeneficiario indexada;''
ALTER INDEX [HBeneficiario_Idemp] on ieepo.dbo.HBeneficiario REBUILD;Print ''Tabla HBeneficiario_Idemp indexada;''
ALTER INDEX [PK_CamposReporteSS] on ieepo.dbo.CamposReporteSS REBUILD;Print ''Tabla PK_CamposReporteSS indexada;''
ALTER INDEX [Pk_HHcta_FOVISSSTE_id_emp_fecha] on ieepo.dbo.HHcta_FOVISSSTE REBUILD;Print ''Tabla Pk_HHcta_FOVISSSTE_id_emp_fecha indexada;''
ALTER INDEX [Idx_hHcta_FOVISSSTEemp] on ieepo.dbo.HHcta_FOVISSSTE REBUILD;Print ''Tabla Idx_hHcta_FOVISSSTEemp indexada;''
ALTER INDEX [Idx_hHcta_FOVISSSTEfecha] on ieepo.dbo.HHcta_FOVISSSTE REBUILD;Print ''Tabla Idx_hHcta_FOVISSSTEfecha indexada;''
ALTER INDEX [PK_FUP_ValorSubCatalogo_Id_Valor] on ieepo.dbo.FUP_ValorSubCatalogo REBUILD;Print ''Tabla PK_FUP_ValorSubCatalogo_Id_Valor indexada;''
ALTER INDEX [ix_FUP_FUP_ValorSubCatalogo_Id_Documento] on ieepo.dbo.FUP_ValorSubCatalogo REBUILD;Print ''Tabla ix_FUP_FUP_ValorSubCatalogo_Id_Documento indexada;''
ALTER INDEX [PK__sysdiagrams__34304505] on ieepo.dbo.sysdiagrams REBUILD;Print ''Tabla PK__sysdiagrams__34304505 indexada;''
ALTER INDEX [UK_principal_name] on ieepo.dbo.sysdiagrams REBUILD;Print ''Tabla UK_principal_name indexada;''
ALTER INDEX [pk_ConceptoTipoPresupuesto_id_concepto_año] on ieepo.dbo.ConceptoTipoPresupuesto REBUILD;Print ''Tabla pk_ConceptoTipoPresupuesto_id_concepto_año indexada;''
ALTER INDEX [idx_ConceptoTipoPresupuesto_idtipo] on ieepo.dbo.ConceptoTipoPresupuesto REBUILD;Print ''Tabla idx_ConceptoTipoPresupuesto_idtipo indexada;''
ALTER INDEX [uq_ConceptoTipoPresupuesto_año_idtipo_id_concepto] on ieepo.dbo.ConceptoTipoPresupuesto REBUILD;Print ''Tabla uq_ConceptoTipoPresupuesto_año_idtipo_id_concepto indexada;''
ALTER INDEX [Idx_hsegColRetiroISEAemp] on ieepo.dbo.HsegColRetiroISEA REBUILD;Print ''Tabla Idx_hsegColRetiroISEAemp indexada;''
ALTER INDEX [Idx_hsegColRetiroISEAfecha] on ieepo.dbo.HsegColRetiroISEA REBUILD;Print ''Tabla Idx_hsegColRetiroISEAfecha indexada;''
ALTER INDEX [PK_HNum_Cetificado_Mestria_1] on ieepo.dbo.HNum_Cetificado_Mestria REBUILD;Print ''Tabla PK_HNum_Cetificado_Mestria_1 indexada;''
ALTER INDEX [Idx_hNum_Cetificado_Mestriaemp] on ieepo.dbo.HNum_Cetificado_Mestria REBUILD;Print ''Tabla Idx_hNum_Cetificado_Mestriaemp indexada;''
ALTER INDEX [Idx_hNum_Cetificado_Mestriafecha] on ieepo.dbo.HNum_Cetificado_Mestria REBUILD;Print ''Tabla Idx_hNum_Cetificado_Mestriafecha indexada;''
ALTER INDEX [PK_Campos_Dedu_Banco] on ieepo.dbo.Campos_Dedu_Banco REBUILD;Print ''Tabla PK_Campos_Dedu_Banco indexada;''
ALTER INDEX [pk_hmontoaguinaldopensionado] on ieepo.dbo.HMontoAguinaldoPensionado REBUILD;Print ''Tabla pk_hmontoaguinaldopensionado indexada;''
ALTER INDEX [Idx_hMontoAguinaldoPensionadobeneficiario] on ieepo.dbo.HMontoAguinaldoPensionado REBUILD;Print ''Tabla Idx_hMontoAguinaldoPensionadobeneficiario indexada;''
ALTER INDEX [Idx_hMontoAguinaldoPensionadofecha] on ieepo.dbo.HMontoAguinaldoPensionado REBUILD;Print ''Tabla Idx_hMontoAguinaldoPensionadofecha indexada;''
ALTER INDEX [PK_HnivelPuesto] on ieepo.dbo.HnivelPuesto REBUILD;Print ''Tabla PK_HnivelPuesto indexada;''
ALTER INDEX [Idx_hnivelPuestofecha] on ieepo.dbo.HnivelPuesto REBUILD;Print ''Tabla Idx_hnivelPuestofecha indexada;''
ALTER INDEX [Idx_hnivelPuestoplaza] on ieepo.dbo.HnivelPuesto REBUILD;Print ''Tabla Idx_hnivelPuestoplaza indexada;''
ALTER INDEX [PK_FUP_ValorText_id_valor] on ieepo.dbo.FUP_ValorText REBUILD;Print ''Tabla PK_FUP_ValorText_id_valor indexada;''
ALTER INDEX [_dta_index_FUP_ValorText_5_874082204__K3_K1_2_3928] on ieepo.dbo.FUP_ValorText REBUILD;Print ''Tabla _dta_index_FUP_ValorText_5_874082204__K3_K1_2_3928 indexada;''
ALTER INDEX [ix_FUP_ValorText_id_documento] on ieepo.dbo.FUP_ValorText REBUILD;Print ''Tabla ix_FUP_ValorText_id_documento indexada;''
ALTER INDEX [PK_DocumentosBeneficiario] on ieepo.dbo.DocumentosBeneficiario REBUILD;Print ''Tabla PK_DocumentosBeneficiario indexada;''
ALTER INDEX [PK_FUP_Dato_TipoMuestra] on ieepo.dbo.FUP_Dato_TipoMuestra REBUILD;Print ''Tabla PK_FUP_Dato_TipoMuestra indexada;''
ALTER INDEX [PK_HEstatura_emp] on ieepo.dbo.HEstatura_emp REBUILD;Print ''Tabla PK_HEstatura_emp indexada;''
ALTER INDEX [Idx_hEstatura_empemp] on ieepo.dbo.HEstatura_emp REBUILD;Print ''Tabla Idx_hEstatura_empemp indexada;''
ALTER INDEX [Idx_hEstatura_empfecha] on ieepo.dbo.HEstatura_emp REBUILD;Print ''Tabla Idx_hEstatura_empfecha indexada;''
ALTER INDEX [PK_Plantillas] on ieepo.dbo.Plantillas REBUILD;Print ''Tabla PK_Plantillas indexada;''
ALTER INDEX [PK_HNum_ISSSTE_1] on ieepo.dbo.HNum_ISSSTE REBUILD;Print ''Tabla PK_HNum_ISSSTE_1 indexada;''
ALTER INDEX [Idx_hNum_ISSSTEemp] on ieepo.dbo.HNum_ISSSTE REBUILD;Print ''Tabla Idx_hNum_ISSSTEemp indexada;''
ALTER INDEX [Idx_hNum_ISSSTEfecha] on ieepo.dbo.HNum_ISSSTE REBUILD;Print ''Tabla Idx_hNum_ISSSTEfecha indexada;''
ALTER INDEX [ID_ESCOLARIDAD] on ieepo.dbo.Carreras REBUILD;Print ''Tabla ID_ESCOLARIDAD indexada;''
ALTER INDEX [ID_CARRERA] on ieepo.dbo.Carreras REBUILD;Print ''Tabla ID_CARRERA indexada;''
ALTER INDEX [XPKDeducsFijas_1] on ieepo.dbo.deducsfijas REBUILD;Print ''Tabla XPKDeducsFijas_1 indexada;''
ALTER INDEX [IDCONCEPTO] on ieepo.dbo.deducsfijas REBUILD;Print ''Tabla IDCONCEPTO indexada;''
ALTER INDEX [IDEMP] on ieepo.dbo.deducsfijas REBUILD;Print ''Tabla IDEMP indexada;''
ALTER INDEX [UX_DeducsFijas_id_prestamo_1] on ieepo.dbo.deducsfijas REBUILD;Print ''Tabla UX_DeducsFijas_id_prestamo_1 indexada;''
ALTER INDEX [PK_TiempoIncompleto] on ieepo.dbo.TiempoIncompleto REBUILD;Print ''Tabla PK_TiempoIncompleto indexada;''
ALTER INDEX [PK_Calculo_ConceptosEjecucion] on ieepo.dbo.Calculo_ConceptosEjecucion REBUILD;Print ''Tabla PK_Calculo_ConceptosEjecucion indexada;''
ALTER INDEX [PK__errorHis__3213E83E3853DB8B] on ieepo.dbo.errorHistoria REBUILD;Print ''Tabla PK__errorHis__3213E83E3853DB8B indexada;''
ALTER INDEX [XPKPlantillasNavegador] on ieepo.dbo.PlantillasNavegador REBUILD;Print ''Tabla XPKPlantillasNavegador indexada;''
ALTER INDEX [XPKCatalogo] on ieepo.dbo.Catalogo REBUILD;Print ''Tabla XPKCatalogo indexada;''
ALTER INDEX [PK_HHorarios] on ieepo.dbo.HHorarios REBUILD;Print ''Tabla PK_HHorarios indexada;''
ALTER INDEX [IE2_Fecha] on ieepo.dbo.HHorarios REBUILD;Print ''Tabla IE2_Fecha indexada;''
ALTER INDEX [IX_HHorarios] on ieepo.dbo.HHorarios REBUILD;Print ''Tabla IX_HHorarios indexada;''
ALTER INDEX [PK_HURESP] on ieepo.dbo.HURESP REBUILD;Print ''Tabla PK_HURESP indexada;''
ALTER INDEX [Idx_hURESPfecha] on ieepo.dbo.HURESP REBUILD;Print ''Tabla Idx_hURESPfecha indexada;''
ALTER INDEX [Idx_hURESPplaza] on ieepo.dbo.HURESP REBUILD;Print ''Tabla Idx_hURESPplaza indexada;''
ALTER INDEX [XPKTiempoxDia] on ieepo.dbo.TiempoxDia REBUILD;Print ''Tabla XPKTiempoxDia indexada;''
ALTER INDEX [IE1_Fecha] on ieepo.dbo.TiempoxDia REBUILD;Print ''Tabla IE1_Fecha indexada;''
ALTER INDEX [PK__traza__AAAC09D8C375EF85] on ieepo.dbo.traza REBUILD;Print ''Tabla PK__traza__AAAC09D8C375EF85 indexada;''
ALTER INDEX [PK_Plantillas_Consultas] on ieepo.dbo.Plantillas_Consultas REBUILD;Print ''Tabla PK_Plantillas_Consultas indexada;''
ALTER INDEX [IE1_Id_EmpFecha] on ieepo.dbo.ChecadasRecibos REBUILD;Print ''Tabla IE1_Id_EmpFecha indexada;''
ALTER INDEX [PK__ConfigProcesaTie__52947303] on ieepo.dbo.ConfigProcesaTiemposAut REBUILD;Print ''Tabla PK__ConfigProcesaTie__52947303 indexada;''
ALTER INDEX [PK_TipoConcepto] on ieepo.dbo.TipoConcepto REBUILD;Print ''Tabla PK_TipoConcepto indexada;''
ALTER INDEX [XPKPlantillas_Marcadores] on ieepo.dbo.Plantillas_Marcadores REBUILD;Print ''Tabla XPKPlantillas_Marcadores indexada;''
ALTER INDEX [PK_ClClasificaciones] on ieepo.dbo.ClClasificaciones REBUILD;Print ''Tabla PK_ClClasificaciones indexada;''
ALTER INDEX [idx_Nom_histpagos_clustered_n] on ieepo.dbo.Nom_histpagos REBUILD;Print ''Tabla idx_Nom_histpagos_clustered_n indexada;''
ALTER INDEX [IX_Nom_histpagos_periodo_emp_plaza_Periodopago] on ieepo.dbo.Nom_histpagos REBUILD;Print ''Tabla IX_Nom_histpagos_periodo_emp_plaza_Periodopago indexada;''
ALTER INDEX [IX_Nom_histpagos_perpzaref] on ieepo.dbo.Nom_histpagos REBUILD;Print ''Tabla IX_Nom_histpagos_perpzaref indexada;''
ALTER INDEX [Nom_histpagos_idPeriodo] on ieepo.dbo.Nom_histpagos REBUILD;Print ''Tabla Nom_histpagos_idPeriodo indexada;''
ALTER INDEX [ix_nom_histpagos_pzaprocper] on ieepo.dbo.Nom_histpagos REBUILD;Print ''Tabla ix_nom_histpagos_pzaprocper indexada;''
ALTER INDEX [IX_nom_histpagos_tercero] on ieepo.dbo.Nom_histpagos REBUILD;Print ''Tabla IX_nom_histpagos_tercero indexada;''
ALTER INDEX [ix_emp_plaza_desde_hasta_concepto] on ieepo.dbo.Nom_histpagos REBUILD;Print ''Tabla ix_emp_plaza_desde_hasta_concepto indexada;''
ALTER INDEX [XPKTipoCuenta] on ieepo.dbo.TipoCuenta REBUILD;Print ''Tabla XPKTipoCuenta indexada;''
ALTER INDEX [XPKClRelacion] on ieepo.dbo.ClRelacion REBUILD;Print ''Tabla XPKClRelacion indexada;''
ALTER INDEX [PK_HBAN] on ieepo.dbo.hbancos REBUILD;Print ''Tabla PK_HBAN indexada;''
ALTER INDEX [XPKTipoParcial] on ieepo.dbo.TipoParcial REBUILD;Print ''Tabla XPKTipoParcial indexada;''
ALTER INDEX [PK_ReCalculo_ConceptosEjecucion] on ieepo.dbo.ReCalculo_ConceptosEjecucion REBUILD;Print ''Tabla PK_ReCalculo_ConceptosEjecucion indexada;''
ALTER INDEX [XPKSYSCAMPOS] on ieepo.dbo.SYSCAMPOS REBUILD;Print ''Tabla XPKSYSCAMPOS indexada;''
ALTER INDEX [COMPARTIDO] on ieepo.dbo.SYSCAMPOS REBUILD;Print ''Tabla COMPARTIDO indexada;''
ALTER INDEX [PK_ClSubClasificaciones] on ieepo.dbo.ClSubClasificaciones REBUILD;Print ''Tabla PK_ClSubClasificaciones indexada;''
ALTER INDEX [XPKTipoProceso] on ieepo.dbo.TipoProceso REBUILD;Print ''Tabla XPKTipoProceso indexada;''
ALTER INDEX [Id_Tipo] on ieepo.dbo.TipoProceso REBUILD;Print ''Tabla Id_Tipo indexada;''
ALTER INDEX [XPKProcesoPTU] on ieepo.dbo.ProcesoPTU REBUILD;Print ''Tabla XPKProcesoPTU indexada;''
ALTER INDEX [PK_ClavesNoChecan] on ieepo.dbo.ClavesNoChecan REBUILD;Print ''Tabla PK_ClavesNoChecan indexada;''
ALTER INDEX [AK1_CveNoCheca] on ieepo.dbo.ClavesNoChecan REBUILD;Print ''Tabla AK1_CveNoCheca indexada;''
ALTER INDEX [PK_AccesosAgrupadores] on ieepo.dbo.AccesosAgrupadores REBUILD;Print ''Tabla PK_AccesosAgrupadores indexada;''
ALTER INDEX [IE1_Id_Agrupador] on ieepo.dbo.AccesosAgrupadores REBUILD;Print ''Tabla IE1_Id_Agrupador indexada;''
ALTER INDEX [PK_Tipo_ArchivoaSubir] on ieepo.dbo.Tipo_ArchivoaSubir REBUILD;Print ''Tabla PK_Tipo_ArchivoaSubir indexada;''
ALTER INDEX [XPKPuestoEquiv] on ieepo.dbo.PuestoEquiv REBUILD;Print ''Tabla XPKPuestoEquiv indexada;''
ALTER INDEX [PK_ClavesNoModificables] on ieepo.dbo.ClavesNoModificables REBUILD;Print ''Tabla PK_ClavesNoModificables indexada;''
ALTER INDEX [AK1_CveNoModificar] on ieepo.dbo.ClavesNoModificables REBUILD;Print ''Tabla AK1_CveNoModificar indexada;''
ALTER INDEX [Idx_hamortFovisteISEAemp] on ieepo.dbo.HamortFovisteISEA REBUILD;Print ''Tabla Idx_hamortFovisteISEAemp indexada;''
ALTER INDEX [Idx_hamortFovisteISEAfecha] on ieepo.dbo.HamortFovisteISEA REBUILD;Print ''Tabla Idx_hamortFovisteISEAfecha indexada;''
ALTER INDEX [PK_CT_Nivel] on ieepo.dbo.TCT_Nivel REBUILD;Print ''Tabla PK_CT_Nivel indexada;''
ALTER INDEX [IDX_CT_Nivel] on ieepo.dbo.TCT_Nivel REBUILD;Print ''Tabla IDX_CT_Nivel indexada;''
ALTER INDEX [XPKTispta] on ieepo.dbo.Tispta REBUILD;Print ''Tabla XPKTispta indexada;''
ALTER INDEX [IE1_FechaVigencia_Dias] on ieepo.dbo.Tispta REBUILD;Print ''Tabla IE1_FechaVigencia_Dias indexada;''
ALTER INDEX [XPKRHExcepciones] on ieepo.dbo.RHExcepciones REBUILD;Print ''Tabla XPKRHExcepciones indexada;''
ALTER INDEX [XPKCodigos] on ieepo.dbo.Codigos REBUILD;Print ''Tabla XPKCodigos indexada;''
ALTER INDEX [PK_HSupervisor] on ieepo.dbo.HSupervisor REBUILD;Print ''Tabla PK_HSupervisor indexada;''
ALTER INDEX [IX_HSupervisor] on ieepo.dbo.HSupervisor REBUILD;Print ''Tabla IX_HSupervisor indexada;''
ALTER INDEX [IE2_Fecha] on ieepo.dbo.HSupervisor REBUILD;Print ''Tabla IE2_Fecha indexada;''
ALTER INDEX [XPKTisptb] on ieepo.dbo.Tisptb REBUILD;Print ''Tabla XPKTisptb indexada;''
ALTER INDEX [IE1_FechaVigencia_Dias] on ieepo.dbo.Tisptb REBUILD;Print ''Tabla IE1_FechaVigencia_Dias indexada;''
ALTER INDEX [XPKCompensaTiempos] on ieepo.dbo.CompensaTiempos REBUILD;Print ''Tabla XPKCompensaTiempos indexada;''
ALTER INDEX [IE1_Fecha] on ieepo.dbo.CompensaTiempos REBUILD;Print ''Tabla IE1_Fecha indexada;''
ALTER INDEX [PK__T_AgrupPeriodos__1DE17E0F] on ieepo.dbo.T_AgrupPeriodos REBUILD;Print ''Tabla PK__T_AgrupPeriodos__1DE17E0F indexada;''
ALTER INDEX [UQ__T_AgrupPeriodos__1ED5A248] on ieepo.dbo.T_AgrupPeriodos REBUILD;Print ''Tabla UQ__T_AgrupPeriodos__1ED5A248 indexada;''
ALTER INDEX [PK_HCaja_Ahorro] on ieepo.dbo.HCaja_Ahorro REBUILD;Print ''Tabla PK_HCaja_Ahorro indexada;''
ALTER INDEX [Idx_hCaja_Ahorroemp] on ieepo.dbo.HCaja_Ahorro REBUILD;Print ''Tabla Idx_hCaja_Ahorroemp indexada;''
ALTER INDEX [Idx_hCaja_Ahorrofecha] on ieepo.dbo.HCaja_Ahorro REBUILD;Print ''Tabla Idx_hCaja_Ahorrofecha indexada;''
ALTER INDEX [XPKTisptc] on ieepo.dbo.Tisptc REBUILD;Print ''Tabla XPKTisptc indexada;''
ALTER INDEX [IE1_FechaVigencia_Dias] on ieepo.dbo.Tisptc REBUILD;Print ''Tabla IE1_FechaVigencia_Dias indexada;''
ALTER INDEX [pk_hporcentajeprimapensionado] on ieepo.dbo.HPorcentajePrimaPensionado REBUILD;Print ''Tabla pk_hporcentajeprimapensionado indexada;''
ALTER INDEX [Idx_hPorcentajePrimaPensionadobeneficiario] on ieepo.dbo.HPorcentajePrimaPensionado REBUILD;Print ''Tabla Idx_hPorcentajePrimaPensionadobeneficiario indexada;''
ALTER INDEX [Idx_hPorcentajePrimaPensionadofecha] on ieepo.dbo.HPorcentajePrimaPensionado REBUILD;Print ''Tabla Idx_hPorcentajePrimaPensionadofecha indexada;''
ALTER INDEX [PK_HtipoPuesto] on ieepo.dbo.HtipoPuesto REBUILD;Print ''Tabla PK_HtipoPuesto indexada;''
ALTER INDEX [Idx_htipoPuestofecha] on ieepo.dbo.HtipoPuesto REBUILD;Print ''Tabla Idx_htipoPuestofecha indexada;''
ALTER INDEX [Idx_htipoPuestoplaza] on ieepo.dbo.HtipoPuesto REBUILD;Print ''Tabla Idx_htipoPuestoplaza indexada;''
ALTER INDEX [PK_HEstadosPlaza] on ieepo.dbo.HEstadosPlaza REBUILD;Print ''Tabla PK_HEstadosPlaza indexada;''
ALTER INDEX [Idx_hEstadosPlazafecha] on ieepo.dbo.HEstadosPlaza REBUILD;Print ''Tabla Idx_hEstadosPlazafecha indexada;''
ALTER INDEX [Idx_hEstadosPlazaplaza] on ieepo.dbo.HEstadosPlaza REBUILD;Print ''Tabla Idx_hEstadosPlazaplaza indexada;''
ALTER INDEX [pk_HPlazasPensionado] on ieepo.dbo.HPlazasPensionado REBUILD;Print ''Tabla pk_HPlazasPensionado indexada;''
ALTER INDEX [Idx_hPlazasPensionadobeneficiario] on ieepo.dbo.HPlazasPensionado REBUILD;Print ''Tabla Idx_hPlazasPensionadobeneficiario indexada;''
ALTER INDEX [Idx_hPlazasPensionadofecha] on ieepo.dbo.HPlazasPensionado REBUILD;Print ''Tabla Idx_hPlazasPensionadofecha indexada;''
ALTER INDEX [ix_HPlazaPensionado] on ieepo.dbo.HPlazasPensionado REBUILD;Print ''Tabla ix_HPlazaPensionado indexada;''
ALTER INDEX [PK_TTipoMO] on ieepo.dbo.TTipoMO REBUILD;Print ''Tabla PK_TTipoMO indexada;''
ALTER INDEX [KTipoMO] on ieepo.dbo.TTipoMO REBUILD;Print ''Tabla KTipoMO indexada;''
ALTER INDEX [pk_TTabulador_IEA_CM_id_Tabulador_IEA_Plaza] on ieepo.dbo.TTabulador_SE_CM REBUILD;Print ''Tabla pk_TTabulador_IEA_CM_id_Tabulador_IEA_Plaza indexada;''
ALTER INDEX [XPKTprocesos] on ieepo.dbo.Tprocesos REBUILD;Print ''Tabla XPKTprocesos indexada;''
ALTER INDEX [IE1_IdProcesoPadre] on ieepo.dbo.Tprocesos REBUILD;Print ''Tabla IE1_IdProcesoPadre indexada;''
ALTER INDEX [PK_Registro_Pat] on ieepo.dbo.Registro_Pat REBUILD;Print ''Tabla PK_Registro_Pat indexada;''
ALTER INDEX [idx_herf] on ieepo.dbo.R_H_EmpleadoRecalculoFecha REBUILD;Print ''Tabla idx_herf indexada;''
ALTER INDEX [Idx_hHorarioemp] on ieepo.dbo.HHorario REBUILD;Print ''Tabla Idx_hHorarioemp indexada;''
ALTER INDEX [Idx_hHorariofecha] on ieepo.dbo.HHorario REBUILD;Print ''Tabla Idx_hHorariofecha indexada;''
ALTER INDEX [pk_ValoresMatriz4] on ieepo.dbo.ValoresMatriz4 REBUILD;Print ''Tabla pk_ValoresMatriz4 indexada;''
ALTER INDEX [PK_CT_Niveles_ct] on ieepo.dbo.TCT_Niveles_ct REBUILD;Print ''Tabla PK_CT_Niveles_ct indexada;''
ALTER INDEX [IDX_CT_Niveles] on ieepo.dbo.TCT_Niveles_ct REBUILD;Print ''Tabla IDX_CT_Niveles indexada;''
ALTER INDEX [XPKRelCalenBiImss] on ieepo.dbo.RelCalenBiImss REBUILD;Print ''Tabla XPKRelCalenBiImss indexada;''
ALTER INDEX [PK_ConceptosExcentos] on ieepo.dbo.ConceptosExcentos REBUILD;Print ''Tabla PK_ConceptosExcentos indexada;''
ALTER INDEX [PK__Reemplazo_caract__7F5D08F4] on ieepo.dbo.Reemplazo_caracteres REBUILD;Print ''Tabla PK__Reemplazo_caract__7F5D08F4 indexada;''
ALTER INDEX [PK_Hvectores] on ieepo.dbo.Hvectores REBUILD;Print ''Tabla PK_Hvectores indexada;''
ALTER INDEX [IDX_id_periodo] on ieepo.dbo.Hvectores REBUILD;Print ''Tabla IDX_id_periodo indexada;''
ALTER INDEX [PK_HRegularizacion] on ieepo.dbo.HRegularizacion REBUILD;Print ''Tabla PK_HRegularizacion indexada;''
ALTER INDEX [Idx_hRegularizacionfecha] on ieepo.dbo.HRegularizacion REBUILD;Print ''Tabla Idx_hRegularizacionfecha indexada;''
ALTER INDEX [Idx_hRegularizacionplaza] on ieepo.dbo.HRegularizacion REBUILD;Print ''Tabla Idx_hRegularizacionplaza indexada;''
ALTER INDEX [IDEMP] on ieepo.dbo.RelacionesEmpleados REBUILD;Print ''Tabla IDEMP indexada;''
ALTER INDEX [COMPARTIDO] on ieepo.dbo.RelacionesEmpleados REBUILD;Print ''Tabla COMPARTIDO indexada;''
ALTER INDEX [XPKexcepcionesPlaza] on ieepo.dbo.excepcionesPlaza REBUILD;Print ''Tabla XPKexcepcionesPlaza indexada;''
ALTER INDEX [PK_HEmpleadoValido] on ieepo.dbo.HEmpleadoValido REBUILD;Print ''Tabla PK_HEmpleadoValido indexada;''
ALTER INDEX [XPKConceptos_CamposMaestro] on ieepo.dbo.Conceptos_CamposMaestro REBUILD;Print ''Tabla XPKConceptos_CamposMaestro indexada;''
ALTER INDEX [IX_Concepto_Folios_compuesto] on ieepo.dbo.Concepto_Folios REBUILD;Print ''Tabla IX_Concepto_Folios_compuesto indexada;''
ALTER INDEX [IX_Concepto_Folios] on ieepo.dbo.Concepto_Folios REBUILD;Print ''Tabla IX_Concepto_Folios indexada;''
ALTER INDEX [IX_Concepto_Folios_Compuesto2] on ieepo.dbo.Concepto_Folios REBUILD;Print ''Tabla IX_Concepto_Folios_Compuesto2 indexada;''
ALTER INDEX [IX_Concepto_Folios_concepto] on ieepo.dbo.Concepto_Folios REBUILD;Print ''Tabla IX_Concepto_Folios_concepto indexada;''
ALTER INDEX [PK__TrashTem__AEEE41AB1F6E7D87] on ieepo.dbo.TrashTemp_Bitacora REBUILD;Print ''Tabla PK__TrashTem__AEEE41AB1F6E7D87 indexada;''
ALTER INDEX [ix_TrashTempBit_idref] on ieepo.dbo.TrashTemp_Bitacora REBUILD;Print ''Tabla ix_TrashTempBit_idref indexada;''
ALTER INDEX [XPKRelojSupervisor] on ieepo.dbo.RelojSupervisor REBUILD;Print ''Tabla XPKRelojSupervisor indexada;''
ALTER INDEX [idx_RCT_Tabulador_SE_Zona] on ieepo.dbo.RCT_Tabulador_SE_Zona REBUILD;Print ''Tabla idx_RCT_Tabulador_SE_Zona indexada;''
ALTER INDEX [PK_HGrado_1] on ieepo.dbo.HGrado REBUILD;Print ''Tabla PK_HGrado_1 indexada;''
ALTER INDEX [Idx_hGradoemp] on ieepo.dbo.HGrado REBUILD;Print ''Tabla Idx_hGradoemp indexada;''
ALTER INDEX [Idx_hGradofecha] on ieepo.dbo.HGrado REBUILD;Print ''Tabla Idx_hGradofecha indexada;''
ALTER INDEX [pk_HPorcentajePensionado] on ieepo.dbo.HPorcentajePensionado REBUILD;Print ''Tabla pk_HPorcentajePensionado indexada;''
ALTER INDEX [Idx_hPorcentajePensionadobeneficiario] on ieepo.dbo.HPorcentajePensionado REBUILD;Print ''Tabla Idx_hPorcentajePensionadobeneficiario indexada;''
ALTER INDEX [Idx_hPorcentajePensionadofecha] on ieepo.dbo.HPorcentajePensionado REBUILD;Print ''Tabla Idx_hPorcentajePensionadofecha indexada;''
ALTER INDEX [ix_HPorcentajePensionado_idbenfec_incporc] on ieepo.dbo.HPorcentajePensionado REBUILD;Print ''Tabla ix_HPorcentajePensionado_idbenfec_incporc indexada;''
ALTER INDEX [PK_Usuarios] on ieepo.dbo.Usuarios REBUILD;Print ''Tabla PK_Usuarios indexada;''
ALTER INDEX [AK1_Usuario] on ieepo.dbo.Usuarios REBUILD;Print ''Tabla AK1_Usuario indexada;''
ALTER INDEX [XPKConceptos_HaciendaEmp] on ieepo.dbo.Conceptos_HaciendaEmp REBUILD;Print ''Tabla XPKConceptos_HaciendaEmp indexada;''
ALTER INDEX [IE1_Id_Emp] on ieepo.dbo.Conceptos_HaciendaEmp REBUILD;Print ''Tabla IE1_Id_Emp indexada;''
ALTER INDEX [pk_HUnidad_id_plaza_fecha] on ieepo.dbo.HUnidad REBUILD;Print ''Tabla pk_HUnidad_id_plaza_fecha indexada;''
ALTER INDEX [Idx_hUnidadfecha] on ieepo.dbo.HUnidad REBUILD;Print ''Tabla Idx_hUnidadfecha indexada;''
ALTER INDEX [Idx_hUnidadplaza] on ieepo.dbo.HUnidad REBUILD;Print ''Tabla Idx_hUnidadplaza indexada;''
ALTER INDEX [PK__hfup_can__3213E83FC59BD1BE] on ieepo.dbo.hfup_cancelados REBUILD;Print ''Tabla PK__hfup_can__3213E83FC59BD1BE indexada;''
ALTER INDEX [pk_EmpleadosDoctosAnexos] on ieepo.dbo.Empleados_Rel_Doctos_Anexos REBUILD;Print ''Tabla pk_EmpleadosDoctosAnexos indexada;''
ALTER INDEX [PK__DESCRIBE__6B4092F46981A123] on ieepo.dbo.DESCRIBE_NOMINA REBUILD;Print ''Tabla PK__DESCRIBE__6B4092F46981A123 indexada;''
ALTER INDEX [PK_Relojes] on ieepo.dbo.Relojes REBUILD;Print ''Tabla PK_Relojes indexada;''
ALTER INDEX [AK1_Clave] on ieepo.dbo.Relojes REBUILD;Print ''Tabla AK1_Clave indexada;''
ALTER INDEX [AK2_Maquina] on ieepo.dbo.Relojes REBUILD;Print ''Tabla AK2_Maquina indexada;''
ALTER INDEX [PK_HOjos_1] on ieepo.dbo.HOjos REBUILD;Print ''Tabla PK_HOjos_1 indexada;''
ALTER INDEX [Idx_hOjosemp] on ieepo.dbo.HOjos REBUILD;Print ''Tabla Idx_hOjosemp indexada;''
ALTER INDEX [Idx_hOjosfecha] on ieepo.dbo.HOjos REBUILD;Print ''Tabla Idx_hOjosfecha indexada;''
ALTER INDEX [PK_HcatResponPuesto] on ieepo.dbo.HcatResponPuesto REBUILD;Print ''Tabla PK_HcatResponPuesto indexada;''
ALTER INDEX [Idx_hcatResponPuestofecha] on ieepo.dbo.HcatResponPuesto REBUILD;Print ''Tabla Idx_hcatResponPuestofecha indexada;''
ALTER INDEX [Idx_hcatResponPuestoplaza] on ieepo.dbo.HcatResponPuesto REBUILD;Print ''Tabla Idx_hcatResponPuestoplaza indexada;''
ALTER INDEX [PK_AccesosCampos] on ieepo.dbo.AccesosCampos REBUILD;Print ''Tabla PK_AccesosCampos indexada;''
ALTER INDEX [IE1_Id_Usuario] on ieepo.dbo.AccesosCampos REBUILD;Print ''Tabla IE1_Id_Usuario indexada;''
ALTER INDEX [PK_HForte_1] on ieepo.dbo.HForte REBUILD;Print ''Tabla PK_HForte_1 indexada;''
ALTER INDEX [Idx_hForteemp] on ieepo.dbo.HForte REBUILD;Print ''Tabla Idx_hForteemp indexada;''
ALTER INDEX [Idx_hFortefecha] on ieepo.dbo.HForte REBUILD;Print ''Tabla Idx_hFortefecha indexada;''
ALTER INDEX [pk_hmontofijopensionado_id] on ieepo.dbo.HMontoFijoPensionado REBUILD;Print ''Tabla pk_hmontofijopensionado_id indexada;''
ALTER INDEX [Idx_hMontoFijoPensionadobeneficiario] on ieepo.dbo.HMontoFijoPensionado REBUILD;Print ''Tabla Idx_hMontoFijoPensionadobeneficiario indexada;''
ALTER INDEX [Idx_hMontoFijoPensionadofecha] on ieepo.dbo.HMontoFijoPensionado REBUILD;Print ''Tabla Idx_hMontoFijoPensionadofecha indexada;''
ALTER INDEX [PK_HRotacion] on ieepo.dbo.HRotacion REBUILD;Print ''Tabla PK_HRotacion indexada;''
ALTER INDEX [IX_HRotacion] on ieepo.dbo.HRotacion REBUILD;Print ''Tabla IX_HRotacion indexada;''
ALTER INDEX [IE1_Emp_Fecha] on ieepo.dbo.HRotacion REBUILD;Print ''Tabla IE1_Emp_Fecha indexada;''
ALTER INDEX [IE2_Fecha] on ieepo.dbo.HRotacion REBUILD;Print ''Tabla IE2_Fecha indexada;''
ALTER INDEX [Id_Vale] on ieepo.dbo.Vales REBUILD;Print ''Tabla Id_Vale indexada;''
ALTER INDEX [PK_HcatPuestosPlazao] on ieepo.dbo.HcatPuestosPlaza REBUILD;Print ''Tabla PK_HcatPuestosPlazao indexada;''
ALTER INDEX [Idx_hcatPuestosPlazafecha] on ieepo.dbo.HcatPuestosPlaza REBUILD;Print ''Tabla Idx_hcatPuestosPlazafecha indexada;''
ALTER INDEX [Idx_hcatPuestosPlazaplaza] on ieepo.dbo.HcatPuestosPlaza REBUILD;Print ''Tabla Idx_hcatPuestosPlazaplaza indexada;''
ALTER INDEX [PK_ReportesNomina] on ieepo.dbo.ReportesNomina REBUILD;Print ''Tabla PK_ReportesNomina indexada;''
ALTER INDEX [pk_ConfigRS_id_razonsocial] on ieepo.dbo.ConfigRS REBUILD;Print ''Tabla pk_ConfigRS_id_razonsocial indexada;''
ALTER INDEX [XPKVariablesGraficas] on ieepo.dbo.VariablesGraficas REBUILD;Print ''Tabla XPKVariablesGraficas indexada;''
ALTER INDEX [IX_HorariosConfiguracionValor] on ieepo.dbo.HorariosConfiguracionValor REBUILD;Print ''Tabla IX_HorariosConfiguracionValor indexada;''
ALTER INDEX [XPKRestriccionesProg] on ieepo.dbo.RestriccionesProg REBUILD;Print ''Tabla XPKRestriccionesProg indexada;''
ALTER INDEX [PK_HFojaActa_1] on ieepo.dbo.HFojaActa REBUILD;Print ''Tabla PK_HFojaActa_1 indexada;''
ALTER INDEX [Idx_hFojaActaemp] on ieepo.dbo.HFojaActa REBUILD;Print ''Tabla Idx_hFojaActaemp indexada;''
ALTER INDEX [Idx_hFojaActafecha] on ieepo.dbo.HFojaActa REBUILD;Print ''Tabla Idx_hFojaActafecha indexada;''
ALTER INDEX [PK__HFolio_v__3214EC275F3C3A71] on ieepo.dbo.HFolio_verificado REBUILD;Print ''Tabla PK__HFolio_v__3214EC275F3C3A71 indexada;''
ALTER INDEX [XPKRevisionCursos] on ieepo.dbo.RevisionCursos REBUILD;Print ''Tabla XPKRevisionCursos indexada;''
ALTER INDEX [PK_HTipo_Nomina_ren] on ieepo.dbo.HTipo_Nomina_ren REBUILD;Print ''Tabla PK_HTipo_Nomina_ren indexada;''
ALTER INDEX [Idx_hTipo_Nominafecha] on ieepo.dbo.HTipo_Nomina_ren REBUILD;Print ''Tabla Idx_hTipo_Nominafecha indexada;''
ALTER INDEX [Idx_hTipo_Nominaplaza] on ieepo.dbo.HTipo_Nomina_ren REBUILD;Print ''Tabla Idx_hTipo_Nominaplaza indexada;''
ALTER INDEX [Pk_hGuarderia] on ieepo.dbo.HGuarderia REBUILD;Print ''Tabla Pk_hGuarderia indexada;''
ALTER INDEX [Idx_hGuarderiafecha] on ieepo.dbo.HGuarderia REBUILD;Print ''Tabla Idx_hGuarderiafecha indexada;''
ALTER INDEX [XPKConfigClavesIMSS] on ieepo.dbo.ConfigClavesIMSS REBUILD;Print ''Tabla XPKConfigClavesIMSS indexada;''
ALTER INDEX [PK__hfolio_e__3213E83FC772D2E6] on ieepo.dbo.hfolio_eliminados REBUILD;Print ''Tabla PK__hfolio_e__3213E83FC772D2E6 indexada;''
ALTER INDEX [IDSECCION] on ieepo.dbo.RptCamposFormatos REBUILD;Print ''Tabla IDSECCION indexada;''
ALTER INDEX [PK_TNivel3SE] on ieepo.dbo.TNivel3SE REBUILD;Print ''Tabla PK_TNivel3SE indexada;''
ALTER INDEX [ix_TNivel3SE_id] on ieepo.dbo.TNivel3SE REBUILD;Print ''Tabla ix_TNivel3SE_id indexada;''
ALTER INDEX [PK_TPlazaEmpleadosCC] on ieepo.dbo.TPlazaEmpleadosCC REBUILD;Print ''Tabla PK_TPlazaEmpleadosCC indexada;''
ALTER INDEX [XPKcvenoCapturaCardex] on ieepo.dbo.cvenoCapturaCardex REBUILD;Print ''Tabla XPKcvenoCapturaCardex indexada;''
ALTER INDEX [PK_HFN] on ieepo.dbo.HFN REBUILD;Print ''Tabla PK_HFN indexada;''
ALTER INDEX [Idx_hFNfecha] on ieepo.dbo.HFN REBUILD;Print ''Tabla Idx_hFNfecha indexada;''
ALTER INDEX [Idx_hFNplaza] on ieepo.dbo.HFN REBUILD;Print ''Tabla Idx_hFNplaza indexada;''
ALTER INDEX [pk_Hmontodias15pensionado] on ieepo.dbo.HMontoDias15Pensionado REBUILD;Print ''Tabla pk_Hmontodias15pensionado indexada;''
ALTER INDEX [Idx_hMontoDias15Pensionadobeneficiario] on ieepo.dbo.HMontoDias15Pensionado REBUILD;Print ''Tabla Idx_hMontoDias15Pensionadobeneficiario indexada;''
ALTER INDEX [Idx_hMontoDias15Pensionadofecha] on ieepo.dbo.HMontoDias15Pensionado REBUILD;Print ''Tabla Idx_hMontoDias15Pensionadofecha indexada;''
ALTER INDEX [XPKimportacionCatalogos] on ieepo.dbo.importacionCatalogos REBUILD;Print ''Tabla XPKimportacionCatalogos indexada;''
ALTER INDEX [IE1_TipoCatálogo] on ieepo.dbo.importacionCatalogos REBUILD;Print ''Tabla IE1_TipoCatálogo indexada;''
ALTER INDEX [IE1_Reporte] on ieepo.dbo.RptExportacionFormatos REBUILD;Print ''Tabla IE1_Reporte indexada;''
ALTER INDEX [ORDEN] on ieepo.dbo.RptExportacionFormatos REBUILD;Print ''Tabla ORDEN indexada;''
ALTER INDEX [PK_ConfigGafete] on ieepo.dbo.ConfigGafete REBUILD;Print ''Tabla PK_ConfigGafete indexada;''
ALTER INDEX [IX_HTCategoriasPlazas] on ieepo.dbo.HTCategoriasPlazas REBUILD;Print ''Tabla IX_HTCategoriasPlazas indexada;''
ALTER INDEX [Idx_hTCategoriasPlazasfecha] on ieepo.dbo.HTCategoriasPlazas REBUILD;Print ''Tabla Idx_hTCategoriasPlazasfecha indexada;''
ALTER INDEX [Idx_hTCategoriasPlazasplaza] on ieepo.dbo.HTCategoriasPlazas REBUILD;Print ''Tabla Idx_hTCategoriasPlazasplaza indexada;''
ALTER INDEX [PK_EMPLEADOS] on ieepo.dbo.Empleados REBUILD;Print ''Tabla PK_EMPLEADOS indexada;''
ALTER INDEX [AK2_Emp_Cia] on ieepo.dbo.Empleados REBUILD;Print ''Tabla AK2_Emp_Cia indexada;''
ALTER INDEX [llave_noempx] on ieepo.dbo.Empleados REBUILD;Print ''Tabla llave_noempx indexada;''
ALTER INDEX [Idx_Empleados_Nombre] on ieepo.dbo.Empleados REBUILD;Print ''Tabla Idx_Empleados_Nombre indexada;''
ALTER INDEX [Idx_Empleados_RFC] on ieepo.dbo.Empleados REBUILD;Print ''Tabla Idx_Empleados_RFC indexada;''
ALTER INDEX [Idx_Empleados_IMSS] on ieepo.dbo.Empleados REBUILD;Print ''Tabla Idx_Empleados_IMSS indexada;''
ALTER INDEX [Idx_Empleados_FechaAlta] on ieepo.dbo.Empleados REBUILD;Print ''Tabla Idx_Empleados_FechaAlta indexada;''
ALTER INDEX [Idx_Empleados_Id_cia] on ieepo.dbo.Empleados REBUILD;Print ''Tabla Idx_Empleados_Id_cia indexada;''
ALTER INDEX [ix_empleados_cia_ic_rfc] on ieepo.dbo.Empleados REBUILD;Print ''Tabla ix_empleados_cia_ic_rfc indexada;''
ALTER INDEX [idx_Empleados_Vig_tercero] on ieepo.dbo.Empleados REBUILD;Print ''Tabla idx_Empleados_Vig_tercero indexada;''
ALTER INDEX [XPKimportacionCatalogosCampos] on ieepo.dbo.importacionCatalogosCampos REBUILD;Print ''Tabla XPKimportacionCatalogosCampos indexada;''
ALTER INDEX [IE1_Id_Seccion] on ieepo.dbo.RptFiguraFormatos REBUILD;Print ''Tabla IE1_Id_Seccion indexada;''
ALTER INDEX [PK_LogRecalculoCalculo] on ieepo.dbo.LogRecalculoCalculo REBUILD;Print ''Tabla PK_LogRecalculoCalculo indexada;''
ALTER INDEX [PK_HPartida_id_plaza_fecha] on ieepo.dbo.HPartida REBUILD;Print ''Tabla PK_HPartida_id_plaza_fecha indexada;''
ALTER INDEX [Idx_hPartidafecha] on ieepo.dbo.HPartida REBUILD;Print ''Tabla Idx_hPartidafecha indexada;''
ALTER INDEX [Idx_hPartidaplaza] on ieepo.dbo.HPartida REBUILD;Print ''Tabla Idx_hPartidaplaza indexada;''
ALTER INDEX [IE1_Cat_Campos] on ieepo.dbo.importacionConfig REBUILD;Print ''Tabla IE1_Cat_Campos indexada;''
ALTER INDEX [IE2_Catalogo] on ieepo.dbo.importacionConfig REBUILD;Print ''Tabla IE2_Catalogo indexada;''
ALTER INDEX [IE1_Id_Seccion] on ieepo.dbo.RptLineaFormatos REBUILD;Print ''Tabla IE1_Id_Seccion indexada;''
ALTER INDEX [pk_tformulas_idFormula] on ieepo.dbo.Tformulas REBUILD;Print ''Tabla pk_tformulas_idFormula indexada;''
ALTER INDEX [ix_tformulas_IdConcepto] on ieepo.dbo.Tformulas REBUILD;Print ''Tabla ix_tformulas_IdConcepto indexada;''
ALTER INDEX [PK__TGrupoSicapron__4EC268ED] on ieepo.dbo.TGrupoSicapron REBUILD;Print ''Tabla PK__TGrupoSicapron__4EC268ED indexada;''
ALTER INDEX [PK_HCTA] on ieepo.dbo.hcuentas REBUILD;Print ''Tabla PK_HCTA indexada;''
ALTER INDEX [XPKDeclaracion] on ieepo.dbo.Declaracion REBUILD;Print ''Tabla XPKDeclaracion indexada;''
ALTER INDEX [IE1_AnioEmp] on ieepo.dbo.Declaracion REBUILD;Print ''Tabla IE1_AnioEmp indexada;''
ALTER INDEX [IE2_Id_Emp] on ieepo.dbo.Declaracion REBUILD;Print ''Tabla IE2_Id_Emp indexada;''
ALTER INDEX [PK_HPROG] on ieepo.dbo.HPROG REBUILD;Print ''Tabla PK_HPROG indexada;''
ALTER INDEX [Idx_hPROGfecha] on ieepo.dbo.HPROG REBUILD;Print ''Tabla Idx_hPROGfecha indexada;''
ALTER INDEX [Idx_hPROGplaza] on ieepo.dbo.HPROG REBUILD;Print ''Tabla Idx_hPROGplaza indexada;''
ALTER INDEX [IE1_Id_Seccion] on ieepo.dbo.RptPictureFormatos REBUILD;Print ''Tabla IE1_Id_Seccion indexada;''
ALTER INDEX [PATHFILE] on ieepo.dbo.RptPictureFormatos REBUILD;Print ''Tabla PATHFILE indexada;''
ALTER INDEX [PK_HCenResp] on ieepo.dbo.HCenResp REBUILD;Print ''Tabla PK_HCenResp indexada;''
ALTER INDEX [Idx_hCenRespfecha] on ieepo.dbo.HCenResp REBUILD;Print ''Tabla Idx_hCenRespfecha indexada;''
ALTER INDEX [Idx_hCenRespplaza] on ieepo.dbo.HCenResp REBUILD;Print ''Tabla Idx_hCenRespplaza indexada;''
ALTER INDEX [XPKConfigOrgan] on ieepo.dbo.ConfigOrgan REBUILD;Print ''Tabla XPKConfigOrgan indexada;''
ALTER INDEX [PK_LogFupDocumentoDetalle] on ieepo.dbo.LogfupDocumentoDetalle REBUILD;Print ''Tabla PK_LogFupDocumentoDetalle indexada;''
ALTER INDEX [PK__Catalogo_Concept__797CFFD4] on ieepo.dbo.Catalogo_Conceptos_Facturas_NC REBUILD;Print ''Tabla PK__Catalogo_Concept__797CFFD4 indexada;''
ALTER INDEX [XPKimportacionTipoCatalogos] on ieepo.dbo.importacionTipoCatalogos REBUILD;Print ''Tabla XPKimportacionTipoCatalogos indexada;''
ALTER INDEX [XPKConceptos] on ieepo.dbo.Conceptos REBUILD;Print ''Tabla XPKConceptos indexada;''
ALTER INDEX [TOTALIZA] on ieepo.dbo.Conceptos REBUILD;Print ''Tabla TOTALIZA indexada;''
ALTER INDEX [ix_conceptos_desc] on ieepo.dbo.Conceptos REBUILD;Print ''Tabla ix_conceptos_desc indexada;''
ALTER INDEX [ix_conceptos_iddesc] on ieepo.dbo.Conceptos REBUILD;Print ''Tabla ix_conceptos_iddesc indexada;''
ALTER INDEX [ix_conceptos_idcondesc] on ieepo.dbo.Conceptos REBUILD;Print ''Tabla ix_conceptos_idcondesc indexada;''
ALTER INDEX [PK_HSeñasVisibles_1] on ieepo.dbo.HSeñasVisibles REBUILD;Print ''Tabla PK_HSeñasVisibles_1 indexada;''
ALTER INDEX [Idx_hSeñasVisiblesemp] on ieepo.dbo.HSeñasVisibles REBUILD;Print ''Tabla Idx_hSeñasVisiblesemp indexada;''
ALTER INDEX [Idx_hSeñasVisiblesfecha] on ieepo.dbo.HSeñasVisibles REBUILD;Print ''Tabla Idx_hSeñasVisiblesfecha indexada;''
ALTER INDEX [IE1_Id_Seccion] on ieepo.dbo.RptSeccionGrupoFormatos REBUILD;Print ''Tabla IE1_Id_Seccion indexada;''
ALTER INDEX [XPKreldirecciones] on ieepo.dbo.reldirecciones REBUILD;Print ''Tabla XPKreldirecciones indexada;''
ALTER INDEX [PK_HFrente] on ieepo.dbo.HFrente REBUILD;Print ''Tabla PK_HFrente indexada;''
ALTER INDEX [Idx_hFrenteemp] on ieepo.dbo.HFrente REBUILD;Print ''Tabla Idx_hFrenteemp indexada;''
ALTER INDEX [Idx_hFrentefecha] on ieepo.dbo.HFrente REBUILD;Print ''Tabla Idx_hFrentefecha indexada;''
ALTER INDEX [PK_RptSeccionesFormatos] on ieepo.dbo.RptSeccionesFormatos REBUILD;Print ''Tabla PK_RptSeccionesFormatos indexada;''
ALTER INDEX [AK1_Reporte_Seccion] on ieepo.dbo.RptSeccionesFormatos REBUILD;Print ''Tabla AK1_Reporte_Seccion indexada;''
ALTER INDEX [IE1_Id_Reporte] on ieepo.dbo.RptSeccionesFormatos REBUILD;Print ''Tabla IE1_Id_Reporte indexada;''
ALTER INDEX [PK_AccesosCias] on ieepo.dbo.AccesosCias REBUILD;Print ''Tabla PK_AccesosCias indexada;''
ALTER INDEX [IE1_Id_Usuario] on ieepo.dbo.AccesosCias REBUILD;Print ''Tabla IE1_Id_Usuario indexada;''
ALTER INDEX [PK_LogFupDocumento] on ieepo.dbo.LogfupDocumento REBUILD;Print ''Tabla PK_LogFupDocumento indexada;''
ALTER INDEX [PK_HPART] on ieepo.dbo.HPART REBUILD;Print ''Tabla PK_HPART indexada;''
ALTER INDEX [Idx_hPARTfecha] on ieepo.dbo.HPART REBUILD;Print ''Tabla Idx_hPARTfecha indexada;''
ALTER INDEX [Idx_hPARTplaza] on ieepo.dbo.HPART REBUILD;Print ''Tabla Idx_hPARTplaza indexada;''
ALTER INDEX [XPKSM_Supervisores] on ieepo.dbo.SM_Supervisores REBUILD;Print ''Tabla XPKSM_Supervisores indexada;''
ALTER INDEX [Idx_hpotenISEAemp] on ieepo.dbo.HpotenISEA REBUILD;Print ''Tabla Idx_hpotenISEAemp indexada;''
ALTER INDEX [Idx_hpotenISEAfecha] on ieepo.dbo.HpotenISEA REBUILD;Print ''Tabla Idx_hpotenISEAfecha indexada;''
ALTER INDEX [PK_HDespensa] on ieepo.dbo.HDespensa REBUILD;Print ''Tabla PK_HDespensa indexada;''
ALTER INDEX [Idx_hDespensaemp] on ieepo.dbo.HDespensa REBUILD;Print ''Tabla Idx_hDespensaemp indexada;''
ALTER INDEX [Idx_hDespensafecha] on ieepo.dbo.HDespensa REBUILD;Print ''Tabla Idx_hDespensafecha indexada;''
ALTER INDEX [PK_HDiasLicMedica] on ieepo.dbo.HDiasLicMedica REBUILD;Print ''Tabla PK_HDiasLicMedica indexada;''
ALTER INDEX [XPKTformulas] on ieepo.dbo.Tformulas_28092012a REBUILD;Print ''Tabla XPKTformulas indexada;''
ALTER INDEX [IDCONCEPTO] on ieepo.dbo.Tformulas_28092012a REBUILD;Print ''Tabla IDCONCEPTO indexada;''
ALTER INDEX [idx_emreca] on ieepo.dbo.empleadosRecalculo REBUILD;Print ''Tabla idx_emreca indexada;''
ALTER INDEX [PK_TProcesosExcepciones] on ieepo.dbo.TProcesosExcepciones REBUILD;Print ''Tabla PK_TProcesosExcepciones indexada;''
ALTER INDEX [PK_LogHistpagos] on ieepo.dbo.LogHistpagos REBUILD;Print ''Tabla PK_LogHistpagos indexada;''
ALTER INDEX [Idx_hFecha_Prima_Antiguedad_cluster] on ieepo.dbo.HFecha_Prima_Antiguedad REBUILD;Print ''Tabla Idx_hFecha_Prima_Antiguedad_cluster indexada;''
ALTER INDEX [Idx_hFecha_Prima_Antiguedademp] on ieepo.dbo.HFecha_Prima_Antiguedad REBUILD;Print ''Tabla Idx_hFecha_Prima_Antiguedademp indexada;''
ALTER INDEX [Idx_hFecha_Prima_Antiguedadfecha] on ieepo.dbo.HFecha_Prima_Antiguedad REBUILD;Print ''Tabla Idx_hFecha_Prima_Antiguedadfecha indexada;''
ALTER INDEX [PK_hMES_FINALemp] on ieepo.dbo.HMES_FINAL REBUILD;Print ''Tabla PK_hMES_FINALemp indexada;''
ALTER INDEX [Idx_hMES_FINALfecha] on ieepo.dbo.HMES_FINAL REBUILD;Print ''Tabla Idx_hMES_FINALfecha indexada;''
ALTER INDEX [XPKConceptoIni] on ieepo.dbo.ConceptoIni REBUILD;Print ''Tabla XPKConceptoIni indexada;''
ALTER INDEX [XPKConfigSupMaestros] on ieepo.dbo.ConfigSupMaestros REBUILD;Print ''Tabla XPKConfigSupMaestros indexada;''
ALTER INDEX [PK_hMES_INICIALemp] on ieepo.dbo.HMES_INICIAL REBUILD;Print ''Tabla PK_hMES_INICIALemp indexada;''
ALTER INDEX [Idx_hMES_INICIALfecha] on ieepo.dbo.HMES_INICIAL REBUILD;Print ''Tabla Idx_hMES_INICIALfecha indexada;''
ALTER INDEX [_dta_index_FUP_Bitacora_Detalle_5_1402544871__K6_K3_K2_5] on ieepo.dbo.FUP_Bitacora_Detalle REBUILD;Print ''Tabla _dta_index_FUP_Bitacora_Detalle_5_1402544871__K6_K3_K2_5 indexada;''
ALTER INDEX [_dta_index_FUP_Bitacora_Detalle_5_1402544871__K3_K2_K6_5] on ieepo.dbo.FUP_Bitacora_Detalle REBUILD;Print ''Tabla _dta_index_FUP_Bitacora_Detalle_5_1402544871__K3_K2_K6_5 indexada;''
ALTER INDEX [_dta_index_FUP_Bitacora_Detalle_5_1402544871__K3] on ieepo.dbo.FUP_Bitacora_Detalle REBUILD;Print ''Tabla _dta_index_FUP_Bitacora_Detalle_5_1402544871__K3 indexada;''
ALTER INDEX [PK_HTipoEmpleo] on ieepo.dbo.HTipoEmpleo REBUILD;Print ''Tabla PK_HTipoEmpleo indexada;''
ALTER INDEX [IX_HTipoEmpleo] on ieepo.dbo.HTipoEmpleo REBUILD;Print ''Tabla IX_HTipoEmpleo indexada;''
ALTER INDEX [PK__TIncidenciasEmpl__045B0EA2] on ieepo.dbo.TIncidenciasEmpleado REBUILD;Print ''Tabla PK__TIncidenciasEmpl__045B0EA2 indexada;''
ALTER INDEX [XPKSYSRELACIONES] on ieepo.dbo.SYSRELACIONES REBUILD;Print ''Tabla XPKSYSRELACIONES indexada;''
ALTER INDEX [pk_TMotivoMov] on ieepo.dbo.TMotivoMov REBUILD;Print ''Tabla pk_TMotivoMov indexada;''
ALTER INDEX [XPKTTipoPlaza] on ieepo.dbo.TTipoPlaza REBUILD;Print ''Tabla XPKTTipoPlaza indexada;''
ALTER INDEX [XPKConfigTyA] on ieepo.dbo.ConfigTyA REBUILD;Print ''Tabla XPKConfigTyA indexada;''
ALTER INDEX [PK_LogHistpagosdetalle] on ieepo.dbo.LogHistpagosDetalle REBUILD;Print ''Tabla PK_LogHistpagosdetalle indexada;''
ALTER INDEX [PK_HPago_IMSS_Emp] on ieepo.dbo.HPago_IMSS_Emp REBUILD;Print ''Tabla PK_HPago_IMSS_Emp indexada;''
ALTER INDEX [Idx_hPago_IMSS_Empemp] on ieepo.dbo.HPago_IMSS_Emp REBUILD;Print ''Tabla Idx_hPago_IMSS_Empemp indexada;''
ALTER INDEX [Idx_hPago_IMSS_Empfecha] on ieepo.dbo.HPago_IMSS_Emp REBUILD;Print ''Tabla Idx_hPago_IMSS_Empfecha indexada;''
ALTER INDEX [IX_HPago_IMSS_Emp_id_emp] on ieepo.dbo.HPago_IMSS_Emp REBUILD;Print ''Tabla IX_HPago_IMSS_Emp_id_emp indexada;''
ALTER INDEX [IX_HPago_IMSS_Emp_id_emp_fecha_id_rel] on ieepo.dbo.HPago_IMSS_Emp REBUILD;Print ''Tabla IX_HPago_IMSS_Emp_id_emp_fecha_id_rel indexada;''
ALTER INDEX [PK__Catalogo_Empresa__0ED74416] on ieepo.dbo.Catalogo_Empresas_Facturacion REBUILD;Print ''Tabla PK__Catalogo_Empresa__0ED74416 indexada;''
ALTER INDEX [IDX_FUP_INFORMACION_DOCUMENTOS_ID_DOCUMENTO] on ieepo.dbo.FUP_Informacion_Documentos REBUILD;Print ''Tabla IDX_FUP_INFORMACION_DOCUMENTOS_ID_DOCUMENTO indexada;''
ALTER INDEX [_dta_index_FUP_Informacion_Documentos_5_1422059717__K16_K1_K6_K7_K8_K5] on ieepo.dbo.FUP_Informacion_Documentos REBUILD;Print ''Tabla _dta_index_FUP_Informacion_Documentos_5_1422059717__K16_K1_K6_K7_K8_K5 indexada;''
ALTER INDEX [XPKSYSTABLACATEGORIAS] on ieepo.dbo.SYSTABLACATEGORIAS REBUILD;Print ''Tabla XPKSYSTABLACATEGORIAS indexada;''
ALTER INDEX [PK_HHoras_id_plaza_fecha] on ieepo.dbo.HHoras REBUILD;Print ''Tabla PK_HHoras_id_plaza_fecha indexada;''
ALTER INDEX [Idx_hHorasfecha] on ieepo.dbo.HHoras REBUILD;Print ''Tabla Idx_hHorasfecha indexada;''
ALTER INDEX [Idx_hHorasplaza] on ieepo.dbo.HHoras REBUILD;Print ''Tabla Idx_hHorasplaza indexada;''
ALTER INDEX [Idx_hHora_fecha_inc_pzahrs] on ieepo.dbo.HHoras REBUILD;Print ''Tabla Idx_hHora_fecha_inc_pzahrs indexada;''
ALTER INDEX [pk_HMotivoMov] on ieepo.dbo.HMotivoMov REBUILD;Print ''Tabla pk_HMotivoMov indexada;''
ALTER INDEX [IDPLAZA] on ieepo.dbo.HMotivoMov REBUILD;Print ''Tabla IDPLAZA indexada;''
ALTER INDEX [IX_HMotivoMov_FAp_inc_pzamot] on ieepo.dbo.HMotivoMov REBUILD;Print ''Tabla IX_HMotivoMov_FAp_inc_pzamot indexada;''
ALTER INDEX [PK_Hquinquenio] on ieepo.dbo.Hquinquenio REBUILD;Print ''Tabla PK_Hquinquenio indexada;''
ALTER INDEX [XPKConfig_Cve_Menu] on ieepo.dbo.Config_Cve_Menu REBUILD;Print ''Tabla XPKConfig_Cve_Menu indexada;''
ALTER INDEX [XPKPlazaEmpleados] on ieepo.dbo.PlazaEmpleados REBUILD;Print ''Tabla XPKPlazaEmpleados indexada;''
ALTER INDEX [I_Idemp_PlazaEmpleados] on ieepo.dbo.PlazaEmpleados REBUILD;Print ''Tabla I_Idemp_PlazaEmpleados indexada;''
ALTER INDEX [I_idplaza_PlazaEmpleados] on ieepo.dbo.PlazaEmpleados REBUILD;Print ''Tabla I_idplaza_PlazaEmpleados indexada;''
ALTER INDEX [idx_PlazaEmpleados_fecha_id] on ieepo.dbo.PlazaEmpleados REBUILD;Print ''Tabla idx_PlazaEmpleados_fecha_id indexada;''
ALTER INDEX [MOVIMIENTO] on ieepo.dbo.PlazaEmpleados REBUILD;Print ''Tabla MOVIMIENTO indexada;''
ALTER INDEX [ix_plazaempleados_id_emp_inc_pzafec] on ieepo.dbo.PlazaEmpleados REBUILD;Print ''Tabla ix_plazaempleados_id_emp_inc_pzafec indexada;''
ALTER INDEX [ix_plazaempleados_fec_inc_pza] on ieepo.dbo.PlazaEmpleados REBUILD;Print ''Tabla ix_plazaempleados_fec_inc_pza indexada;''
ALTER INDEX [ix_empplazanodofecha] on ieepo.dbo.PlazaEmpleados REBUILD;Print ''Tabla ix_empplazanodofecha indexada;''
ALTER INDEX [XPKConceptoFin] on ieepo.dbo.ConceptoFin REBUILD;Print ''Tabla XPKConceptoFin indexada;''
ALTER INDEX [PK__Catalogo_Formato__391861FC] on ieepo.dbo.Catalogo_Formatos_Facturacion REBUILD;Print ''Tabla PK__Catalogo_Formato__391861FC indexada;''
ALTER INDEX [PERIODOEMPLEADO] on ieepo.dbo.Polizas REBUILD;Print ''Tabla PERIODOEMPLEADO indexada;''
ALTER INDEX [PROCESO] on ieepo.dbo.Polizas REBUILD;Print ''Tabla PROCESO indexada;''
ALTER INDEX [COMPARTIDO] on ieepo.dbo.Polizas REBUILD;Print ''Tabla COMPARTIDO indexada;''
ALTER INDEX [CUENTA] on ieepo.dbo.Polizas REBUILD;Print ''Tabla CUENTA indexada;''
ALTER INDEX [IDEMPLEADO] on ieepo.dbo.Polizas REBUILD;Print ''Tabla IDEMPLEADO indexada;''
ALTER INDEX [ide] on ieepo.dbo.HReubicas_PlazaEmpleados REBUILD;Print ''Tabla ide indexada;''
ALTER INDEX [PK_HTurnos] on ieepo.dbo.HTurnos REBUILD;Print ''Tabla PK_HTurnos indexada;''
ALTER INDEX [IE1_Fecha] on ieepo.dbo.HTurnos REBUILD;Print ''Tabla IE1_Fecha indexada;''
ALTER INDEX [IX_HTurnos] on ieepo.dbo.HTurnos REBUILD;Print ''Tabla IX_HTurnos indexada;''
ALTER INDEX [PK__TRegimen__23D92D5471A1E437] on ieepo.dbo.TRegimenRetiro REBUILD;Print ''Tabla PK__TRegimen__23D92D5471A1E437 indexada;''
ALTER INDEX [PK_HTipoPagoNomina] on ieepo.dbo.HTipoPagoNomina REBUILD;Print ''Tabla PK_HTipoPagoNomina indexada;''
ALTER INDEX [Idx_hTipoPagoNominafecha] on ieepo.dbo.HTipoPagoNomina REBUILD;Print ''Tabla Idx_hTipoPagoNominafecha indexada;''
ALTER INDEX [Idx_hTipoPagoNominaplaza] on ieepo.dbo.HTipoPagoNomina REBUILD;Print ''Tabla Idx_hTipoPagoNominaplaza indexada;''
ALTER INDEX [PK_TSubareas] on ieepo.dbo.TSubareas REBUILD;Print ''Tabla PK_TSubareas indexada;''
ALTER INDEX [PK__ClasificacionNom__5993561B] on ieepo.dbo.ClasificacionNomina REBUILD;Print ''Tabla PK__ClasificacionNom__5993561B indexada;''
ALTER INDEX [pk_hmontodiaseconomicospensionados] on ieepo.dbo.HMontoDiasEconomicosPensionados REBUILD;Print ''Tabla pk_hmontodiaseconomicospensionados indexada;''
ALTER INDEX [Idx_hMontoDiasEconomicosPensionadosbeneficiario] on ieepo.dbo.HMontoDiasEconomicosPensionados REBUILD;Print ''Tabla Idx_hMontoDiasEconomicosPensionadosbeneficiario indexada;''
ALTER INDEX [Idx_hMontoDiasEconomicosPensionadosfecha] on ieepo.dbo.HMontoDiasEconomicosPensionados REBUILD;Print ''Tabla Idx_hMontoDiasEconomicosPensionadosfecha indexada;''
ALTER INDEX [HistoriaFaltas_PK] on ieepo.dbo.HistoriaFaltas REBUILD;Print ''Tabla HistoriaFaltas_PK indexada;''
ALTER INDEX [IDX_HISTORIAFALTAS_FIL_PLAZA] on ieepo.dbo.HistoriaFaltas REBUILD;Print ''Tabla IDX_HISTORIAFALTAS_FIL_PLAZA indexada;''
ALTER INDEX [PK_HFondo_Ahorro] on ieepo.dbo.HFondo_Ahorro REBUILD;Print ''Tabla PK_HFondo_Ahorro indexada;''
ALTER INDEX [Idx_hFondo_Ahorroemp] on ieepo.dbo.HFondo_Ahorro REBUILD;Print ''Tabla Idx_hFondo_Ahorroemp indexada;''
ALTER INDEX [Idx_hFondo_Ahorrofecha] on ieepo.dbo.HFondo_Ahorro REBUILD;Print ''Tabla Idx_hFondo_Ahorrofecha indexada;''
ALTER INDEX [pk_dtproperties] on ieepo.dbo.dtproperties REBUILD;Print ''Tabla pk_dtproperties indexada;''
ALTER INDEX [PK_CNNombres] on ieepo.dbo.CNNombres REBUILD;Print ''Tabla PK_CNNombres indexada;''
ALTER INDEX [IDEMP] on ieepo.dbo.CNNombres REBUILD;Print ''Tabla IDEMP indexada;''
ALTER INDEX [PK_HTNivelPuesto] on ieepo.dbo.HTNivelPuesto REBUILD;Print ''Tabla PK_HTNivelPuesto indexada;''
ALTER INDEX [Idx_hTNivelPuestofecha] on ieepo.dbo.HTNivelPuesto REBUILD;Print ''Tabla Idx_hTNivelPuestofecha indexada;''
ALTER INDEX [Idx_hTNivelPuestoplaza] on ieepo.dbo.HTNivelPuesto REBUILD;Print ''Tabla Idx_hTNivelPuestoplaza indexada;''
ALTER INDEX [IE1_Id_Plantilla] on ieepo.dbo.Coordenadas REBUILD;Print ''Tabla IE1_Id_Plantilla indexada;''
ALTER INDEX [XPKRecalculo_Rastreoimpuesto] on ieepo.dbo.nom_Recalculo_Rastreoimpuesto REBUILD;Print ''Tabla XPKRecalculo_Rastreoimpuesto indexada;''
ALTER INDEX [XPKConfigModDeclaracion] on ieepo.dbo.ConfigModDeclaracion REBUILD;Print ''Tabla XPKConfigModDeclaracion indexada;''
ALTER INDEX [XPKAportacionesFAhorro] on ieepo.dbo.AportacionesFAhorro REBUILD;Print ''Tabla XPKAportacionesFAhorro indexada;''
ALTER INDEX [PK__TTipoIncidencias__0B080C31] on ieepo.dbo.TTipoIncidencias REBUILD;Print ''Tabla PK__TTipoIncidencias__0B080C31 indexada;''
ALTER INDEX [XPKSaldosRecibos] on ieepo.dbo.SaldosRecibos REBUILD;Print ''Tabla XPKSaldosRecibos indexada;''
ALTER INDEX [PK_PrioridadPensionado] on ieepo.dbo.TPrioridadPensionado REBUILD;Print ''Tabla PK_PrioridadPensionado indexada;''
ALTER INDEX [XPKCorteFondoAhorro] on ieepo.dbo.CorteFondoAhorro REBUILD;Print ''Tabla XPKCorteFondoAhorro indexada;''
ALTER INDEX [PK__Perfil_U__4E3E04AD5CE96724] on ieepo.dbo.Perfil_Usuarios REBUILD;Print ''Tabla PK__Perfil_U__4E3E04AD5CE96724 indexada;''
ALTER INDEX [PK_HServiciosEspeciales] on ieepo.dbo.HServiciosEspeciales REBUILD;Print ''Tabla PK_HServiciosEspeciales indexada;''
ALTER INDEX [Idx_hServiciosEspecialesemp] on ieepo.dbo.HServiciosEspeciales REBUILD;Print ''Tabla Idx_hServiciosEspecialesemp indexada;''
ALTER INDEX [Idx_hServiciosEspecialesfecha] on ieepo.dbo.HServiciosEspeciales REBUILD;Print ''Tabla Idx_hServiciosEspecialesfecha indexada;''
ALTER INDEX [pk_FUP_Rel_Id_Detalle_Plaza] on ieepo.dbo.FUP_Rel_Id_Detalle_Plaza REBUILD;Print ''Tabla pk_FUP_Rel_Id_Detalle_Plaza indexada;''
ALTER INDEX [ix_FUP_Rel_Id_Detalle_Plaza_id_detalle] on ieepo.dbo.FUP_Rel_Id_Detalle_Plaza REBUILD;Print ''Tabla ix_FUP_Rel_Id_Detalle_Plaza_id_detalle indexada;''
ALTER INDEX [PK_FUP_Documento_Detalle_MesaControl_Id_Detalle_id_documento] on ieepo.dbo.FUP_Documento_Detalle_MesaControl REBUILD;Print ''Tabla PK_FUP_Documento_Detalle_MesaControl_Id_Detalle_id_documento indexada;''
ALTER INDEX [ix_FUP_Documento_Detalle_MesaControl_doc] on ieepo.dbo.FUP_Documento_Detalle_MesaControl REBUILD;Print ''Tabla ix_FUP_Documento_Detalle_MesaControl_doc indexada;''
ALTER INDEX [pk_ValoresMatriz8] on ieepo.dbo.ValoresMatriz8 REBUILD;Print ''Tabla pk_ValoresMatriz8 indexada;''
ALTER INDEX [PK_HAn_Quinquenio_1] on ieepo.dbo.HAn_Quinquenio REBUILD;Print ''Tabla PK_HAn_Quinquenio_1 indexada;''
ALTER INDEX [Idx_hAn_Quinqueniofecha] on ieepo.dbo.HAn_Quinquenio REBUILD;Print ''Tabla Idx_hAn_Quinqueniofecha indexada;''
ALTER INDEX [Idx_hAn_Quinquenioemp] on ieepo.dbo.HAn_Quinquenio REBUILD;Print ''Tabla Idx_hAn_Quinquenioemp indexada;''
ALTER INDEX [PK_Plazas] on ieepo.dbo.Plazas REBUILD;Print ''Tabla PK_Plazas indexada;''
ALTER INDEX [IE1_Id_Emp] on ieepo.dbo.Plazas REBUILD;Print ''Tabla IE1_Id_Emp indexada;''
ALTER INDEX [IDEMP] on ieepo.dbo.Plazas REBUILD;Print ''Tabla IDEMP indexada;''
ALTER INDEX [IX_Plazas_numplaza] on ieepo.dbo.Plazas REBUILD;Print ''Tabla IX_Plazas_numplaza indexada;''
ALTER INDEX [pk_HPrioridadPensionado] on ieepo.dbo.HPrioridadPensionado REBUILD;Print ''Tabla pk_HPrioridadPensionado indexada;''
ALTER INDEX [Idx_hPrioridadPensionadoBene] on ieepo.dbo.HPrioridadPensionado REBUILD;Print ''Tabla Idx_hPrioridadPensionadoBene indexada;''
ALTER INDEX [Idx_hPrioridadPensionadofecha] on ieepo.dbo.HPrioridadPensionado REBUILD;Print ''Tabla Idx_hPrioridadPensionadofecha indexada;''
ALTER INDEX [PK_Curriculum] on ieepo.dbo.Curriculum REBUILD;Print ''Tabla PK_Curriculum indexada;''
ALTER INDEX [PK_HHoras_Compatibilidad_Plaza_old] on ieepo.dbo.HHoras_Compatibilidad_Plaza_old REBUILD;Print ''Tabla PK_HHoras_Compatibilidad_Plaza_old indexada;''
ALTER INDEX [Idx_hHoras_Compatibilidad_Plazafecha] on ieepo.dbo.HHoras_Compatibilidad_Plaza_old REBUILD;Print ''Tabla Idx_hHoras_Compatibilidad_Plazafecha indexada;''
ALTER INDEX [Idx_hHoras_Compatibilidad_Plazaplaza] on ieepo.dbo.HHoras_Compatibilidad_Plaza_old REBUILD;Print ''Tabla Idx_hHoras_Compatibilidad_Plazaplaza indexada;''
ALTER INDEX [IE1_Id_Reporte] on ieepo.dbo.SeccionesExp REBUILD;Print ''Tabla IE1_Id_Reporte indexada;''
ALTER INDEX [XPKCursosDocu] on ieepo.dbo.CursosDocu REBUILD;Print ''Tabla XPKCursosDocu indexada;''
ALTER INDEX [PK_HAñoActa_1] on ieepo.dbo.HAñoActa REBUILD;Print ''Tabla PK_HAñoActa_1 indexada;''
ALTER INDEX [Idx_hAñoActafecha] on ieepo.dbo.HAñoActa REBUILD;Print ''Tabla Idx_hAñoActafecha indexada;''
ALTER INDEX [Idx_hAñoActaemp] on ieepo.dbo.HAñoActa REBUILD;Print ''Tabla Idx_hAñoActaemp indexada;''
ALTER INDEX [XPKSeccionesRpt] on ieepo.dbo.SeccionesRpt REBUILD;Print ''Tabla XPKSeccionesRpt indexada;''
ALTER INDEX [PK_CurvaDesarrollo] on ieepo.dbo.CurvaDesarrollo REBUILD;Print ''Tabla PK_CurvaDesarrollo indexada;''
ALTER INDEX [PK_HLibroActa_1] on ieepo.dbo.HLibroActa REBUILD;Print ''Tabla PK_HLibroActa_1 indexada;''
ALTER INDEX [Idx_hLibroActaemp] on ieepo.dbo.HLibroActa REBUILD;Print ''Tabla Idx_hLibroActaemp indexada;''
ALTER INDEX [Idx_hLibroActafecha] on ieepo.dbo.HLibroActa REBUILD;Print ''Tabla Idx_hLibroActafecha indexada;''
ALTER INDEX [PK_HLineas] on ieepo.dbo.HLineas REBUILD;Print ''Tabla PK_HLineas indexada;''
ALTER INDEX [IE1_Emp_Fecha] on ieepo.dbo.HLineas REBUILD;Print ''Tabla IE1_Emp_Fecha indexada;''
ALTER INDEX [IE2_Fecha] on ieepo.dbo.HLineas REBUILD;Print ''Tabla IE2_Fecha indexada;''
ALTER INDEX [PK_HsegFoviste] on ieepo.dbo.HsegFoviste REBUILD;Print ''Tabla PK_HsegFoviste indexada;''
ALTER INDEX [Idx_hsegFovisteemp] on ieepo.dbo.HsegFoviste REBUILD;Print ''Tabla Idx_hsegFovisteemp indexada;''
ALTER INDEX [Idx_hsegFovistefecha] on ieepo.dbo.HsegFoviste REBUILD;Print ''Tabla Idx_hsegFovistefecha indexada;''
ALTER INDEX [PK_Sistemas] on ieepo.dbo.Sistemas REBUILD;Print ''Tabla PK_Sistemas indexada;''
ALTER INDEX [PK_CvesPCardex] on ieepo.dbo.CvesPCardex REBUILD;Print ''Tabla PK_CvesPCardex indexada;''
ALTER INDEX [AK1_CveCardex] on ieepo.dbo.CvesPCardex REBUILD;Print ''Tabla AK1_CveCardex indexada;''
ALTER INDEX [ix_nivelnodo] on ieepo.dbo.FUP_RelNivel_nodo REBUILD;Print ''Tabla ix_nivelnodo indexada;''
ALTER INDEX [PK_HAx_Antig_Admin_Normal_1] on ieepo.dbo.HAx_Antig_Admin_Normal REBUILD;Print ''Tabla PK_HAx_Antig_Admin_Normal_1 indexada;''
ALTER INDEX [Idx_hAx_Antig_Admin_Normalemp] on ieepo.dbo.HAx_Antig_Admin_Normal REBUILD;Print ''Tabla Idx_hAx_Antig_Admin_Normalemp indexada;''
ALTER INDEX [Idx_hAx_Antig_Admin_Normalfecha] on ieepo.dbo.HAx_Antig_Admin_Normal REBUILD;Print ''Tabla Idx_hAx_Antig_Admin_Normalfecha indexada;''
ALTER INDEX [PK_HSeguro_Fovisste] on ieepo.dbo.HSeguro_Fovisste REBUILD;Print ''Tabla PK_HSeguro_Fovisste indexada;''
ALTER INDEX [Idx_hSeguro_Fovissteemp] on ieepo.dbo.HSeguro_Fovisste REBUILD;Print ''Tabla Idx_hSeguro_Fovissteemp indexada;''
ALTER INDEX [Idx_hSeguro_Fovisstefecha_inc_id_emp] on ieepo.dbo.HSeguro_Fovisste REBUILD;Print ''Tabla Idx_hSeguro_Fovisstefecha_inc_id_emp indexada;''
ALTER INDEX [PK__TLayouts__A532009C0795AA61] on ieepo.dbo.TLayoutsEmpleado REBUILD;Print ''Tabla PK__TLayouts__A532009C0795AA61 indexada;''
ALTER INDEX [PK__Tabla_Facturas__7EB6B63D] on ieepo.dbo.Tabla_Facturas REBUILD;Print ''Tabla PK__Tabla_Facturas__7EB6B63D indexada;''
ALTER INDEX [Idx_hriesgoLabISEAplaza] on ieepo.dbo.HriesgoLabISEA REBUILD;Print ''Tabla Idx_hriesgoLabISEAplaza indexada;''
ALTER INDEX [Idx_hriesgoLabISEAfecha] on ieepo.dbo.HriesgoLabISEA REBUILD;Print ''Tabla Idx_hriesgoLabISEAfecha indexada;''
ALTER INDEX [PK__TIncidenciasAnex__2D3B05D5] on ieepo.dbo.TIncidenciasAnexos REBUILD;Print ''Tabla PK__TIncidenciasAnex__2D3B05D5 indexada;''
ALTER INDEX [IX_ValoresMatriz1] on ieepo.dbo.ValoresMatriz1 REBUILD;Print ''Tabla IX_ValoresMatriz1 indexada;''
ALTER INDEX [Fecha] on ieepo.dbo.ValoresMatriz1 REBUILD;Print ''Tabla Fecha indexada;''
ALTER INDEX [PK_HBoca_1] on ieepo.dbo.HBoca REBUILD;Print ''Tabla PK_HBoca_1 indexada;''
ALTER INDEX [Idx_hBocaemp] on ieepo.dbo.HBoca REBUILD;Print ''Tabla Idx_hBocaemp indexada;''
ALTER INDEX [Idx_hBocafecha] on ieepo.dbo.HBoca REBUILD;Print ''Tabla Idx_hBocafecha indexada;''
ALTER INDEX [XPKDatosExportar] on ieepo.dbo.DatosExportar REBUILD;Print ''Tabla XPKDatosExportar indexada;''
ALTER INDEX [PK_HFechaAlta] on ieepo.dbo.HFechaAlta REBUILD;Print ''Tabla PK_HFechaAlta indexada;''
ALTER INDEX [PK_SupMaestros] on ieepo.dbo.SupMaestros REBUILD;Print ''Tabla PK_SupMaestros indexada;''
ALTER INDEX [pk_hporcentajeaguinaldopensionado] on ieepo.dbo.HPorcentajeAguinaldoPensionado REBUILD;Print ''Tabla pk_hporcentajeaguinaldopensionado indexada;''
ALTER INDEX [Idx_hPorcentajeAguinaldoPensionadobeneficiario] on ieepo.dbo.HPorcentajeAguinaldoPensionado REBUILD;Print ''Tabla Idx_hPorcentajeAguinaldoPensionadobeneficiario indexada;''
ALTER INDEX [Idx_hPorcentajeAguinaldoPensionadofecha] on ieepo.dbo.HPorcentajeAguinaldoPensionado REBUILD;Print ''Tabla Idx_hPorcentajeAguinaldoPensionadofecha indexada;''
ALTER INDEX [IDCONCEPTO] on ieepo.dbo.ValoresMatriz2 REBUILD;Print ''Tabla IDCONCEPTO indexada;''
ALTER INDEX [COMPARTIDO] on ieepo.dbo.ValoresMatriz2 REBUILD;Print ''Tabla COMPARTIDO indexada;''
ALTER INDEX [FECHA] on ieepo.dbo.ValoresMatriz2 REBUILD;Print ''Tabla FECHA indexada;''
ALTER INDEX [PK_Histpagos_IDPERIODO] on ieepo.dbo.HistPagos REBUILD;Print ''Tabla PK_Histpagos_IDPERIODO indexada;''
ALTER INDEX [IX_HistPagos_id_periodo_plaza_empleado] on ieepo.dbo.HistPagos REBUILD;Print ''Tabla IX_HistPagos_id_periodo_plaza_empleado indexada;''
ALTER INDEX [idx_idper_inc_all] on ieepo.dbo.HistPagos REBUILD;Print ''Tabla idx_idper_inc_all indexada;''
ALTER INDEX [ix_Emp_plaza] on ieepo.dbo.HistPagos REBUILD;Print ''Tabla ix_Emp_plaza indexada;''
ALTER INDEX [ix_emp_plaza_desde_hasta_concepto] on ieepo.dbo.HistPagos REBUILD;Print ''Tabla ix_emp_plaza_desde_hasta_concepto indexada;''
ALTER INDEX [PK_Facturas_Detalle] on ieepo.dbo.Tabla_Facturas_Detalle REBUILD;Print ''Tabla PK_Facturas_Detalle indexada;''
ALTER INDEX [PK_HCabello_1] on ieepo.dbo.HCabello REBUILD;Print ''Tabla PK_HCabello_1 indexada;''
ALTER INDEX [Idx_hCabelloemp] on ieepo.dbo.HCabello REBUILD;Print ''Tabla Idx_hCabelloemp indexada;''
ALTER INDEX [Idx_hCabellofecha] on ieepo.dbo.HCabello REBUILD;Print ''Tabla Idx_hCabellofecha indexada;''
ALTER INDEX [XPKSysBaseDatos] on ieepo.dbo.SysBaseDatos REBUILD;Print ''Tabla XPKSysBaseDatos indexada;''
ALTER INDEX [XPKDeclaracionEmp] on ieepo.dbo.DeclaracionEmp REBUILD;Print ''Tabla XPKDeclaracionEmp indexada;''
ALTER INDEX [Idx_htsindicatoemp] on ieepo.dbo.Htsindicato REBUILD;Print ''Tabla Idx_htsindicatoemp indexada;''
ALTER INDEX [pk_hmontoprimapensionado] on ieepo.dbo.HMontoPrimaPensionado REBUILD;Print ''Tabla pk_hmontoprimapensionado indexada;''
ALTER INDEX [Idx_hMontoPrimaPensionadobeneficiario] on ieepo.dbo.HMontoPrimaPensionado REBUILD;Print ''Tabla Idx_hMontoPrimaPensionadobeneficiario indexada;''
ALTER INDEX [Idx_hMontoPrimaPensionadofecha] on ieepo.dbo.HMontoPrimaPensionado REBUILD;Print ''Tabla Idx_hMontoPrimaPensionadofecha indexada;''
ALTER INDEX [PK__FUP_Template__5C6F61C4] on ieepo.dbo.FUP_Template REBUILD;Print ''Tabla PK__FUP_Template__5C6F61C4 indexada;''
ALTER INDEX [PK_HCartilla_SMN_1] on ieepo.dbo.HCartilla_SMN REBUILD;Print ''Tabla PK_HCartilla_SMN_1 indexada;''
ALTER INDEX [Idx_hCartilla_SMNemp] on ieepo.dbo.HCartilla_SMN REBUILD;Print ''Tabla Idx_hCartilla_SMNemp indexada;''
ALTER INDEX [Idx_hCartilla_SMNfecha] on ieepo.dbo.HCartilla_SMN REBUILD;Print ''Tabla Idx_hCartilla_SMNfecha indexada;''
ALTER INDEX [PK__TEstatusIncidenc__15859AA4] on ieepo.dbo.TEstatusIncidencias REBUILD;Print ''Tabla PK__TEstatusIncidenc__15859AA4 indexada;''
ALTER INDEX [XPKSysCategorias] on ieepo.dbo.SysCategorias REBUILD;Print ''Tabla XPKSysCategorias indexada;''
ALTER INDEX [PK_HNivel] on ieepo.dbo.HNivel REBUILD;Print ''Tabla PK_HNivel indexada;''
ALTER INDEX [IE1_Emp_Fecha] on ieepo.dbo.HNivel REBUILD;Print ''Tabla IE1_Emp_Fecha indexada;''
ALTER INDEX [PK_Facturas_Distribucion] on ieepo.dbo.Tabla_Facturas_Distribucion REBUILD;Print ''Tabla PK_Facturas_Distribucion indexada;''
ALTER INDEX [XPKSysFParamOpciones] on ieepo.dbo.SysFParamOpciones REBUILD;Print ''Tabla XPKSysFParamOpciones indexada;''
ALTER INDEX [XPKDetalleCalendarios] on ieepo.dbo.DetalleCalendarios REBUILD;Print ''Tabla XPKDetalleCalendarios indexada;''
ALTER INDEX [idx_hpp_cluster] on ieepo.dbo.R_nom_HistpagosProceso REBUILD;Print ''Tabla idx_hpp_cluster indexada;''
ALTER INDEX [idx_hpp_base] on ieepo.dbo.R_nom_HistpagosProceso REBUILD;Print ''Tabla idx_hpp_base indexada;''
ALTER INDEX [Idx_hauxDefuncionISEAemp] on ieepo.dbo.HauxDefuncionISEA REBUILD;Print ''Tabla Idx_hauxDefuncionISEAemp indexada;''
ALTER INDEX [Idx_hauxDefuncionISEAfecha] on ieepo.dbo.HauxDefuncionISEA REBUILD;Print ''Tabla Idx_hauxDefuncionISEAfecha indexada;''
ALTER INDEX [COMPARTIDO] on ieepo.dbo.TMatrizPagos REBUILD;Print ''Tabla COMPARTIDO indexada;''
ALTER INDEX [PK_TNivelGob5] on ieepo.dbo.TNivelGob5 REBUILD;Print ''Tabla PK_TNivelGob5 indexada;''
ALTER INDEX [XPKSysFunciones] on ieepo.dbo.SysFunciones REBUILD;Print ''Tabla XPKSysFunciones indexada;''
ALTER INDEX [PK_SNoCobrados] on ieepo.dbo.SNoCobrados REBUILD;Print ''Tabla PK_SNoCobrados indexada;''
ALTER INDEX [IX_SNoCobrados_C2] on ieepo.dbo.SNoCobrados REBUILD;Print ''Tabla IX_SNoCobrados_C2 indexada;''
ALTER INDEX [IX_SNoCobrados_Compuesto] on ieepo.dbo.SNoCobrados REBUILD;Print ''Tabla IX_SNoCobrados_Compuesto indexada;''
ALTER INDEX [IX_SNoCobrados_idperiodo] on ieepo.dbo.SNoCobrados REBUILD;Print ''Tabla IX_SNoCobrados_idperiodo indexada;''
ALTER INDEX [IE1_Periodo_Emp] on ieepo.dbo.SNoCobrados REBUILD;Print ''Tabla IE1_Periodo_Emp indexada;''
ALTER INDEX [IX_SNoCobrados] on ieepo.dbo.SNoCobrados REBUILD;Print ''Tabla IX_SNoCobrados indexada;''
ALTER INDEX [XPKDetalleHorarios] on ieepo.dbo.DetalleHorarios REBUILD;Print ''Tabla XPKDetalleHorarios indexada;''
ALTER INDEX [PK_hDocExtranjerosemp] on ieepo.dbo.HDocExtranjeros REBUILD;Print ''Tabla PK_hDocExtranjerosemp indexada;''
ALTER INDEX [Idx_hDocExtranjerosfecha] on ieepo.dbo.HDocExtranjeros REBUILD;Print ''Tabla Idx_hDocExtranjerosfecha indexada;''
ALTER INDEX [Idx_hDocExtranjerosemp] on ieepo.dbo.HDocExtranjeros REBUILD;Print ''Tabla Idx_hDocExtranjerosemp indexada;''
ALTER INDEX [PK_Facturas_Periodos] on ieepo.dbo.Tabla_Facturas_Periodos REBUILD;Print ''Tabla PK_Facturas_Periodos indexada;''
ALTER INDEX [XPKSysFuncionesParam] on ieepo.dbo.SysFuncionesParam REBUILD;Print ''Tabla XPKSysFuncionesParam indexada;''
ALTER INDEX [pk_templeadosplazaomitidos] on ieepo.dbo.TEmpleadosPlazaOmitidos REBUILD;Print ''Tabla pk_templeadosplazaomitidos indexada;''
ALTER INDEX [PK_HPigmentación_1] on ieepo.dbo.HPigmentación REBUILD;Print ''Tabla PK_HPigmentación_1 indexada;''
ALTER INDEX [Idx_hPigmentaciónemp] on ieepo.dbo.HPigmentación REBUILD;Print ''Tabla Idx_hPigmentaciónemp indexada;''
ALTER INDEX [Idx_hPigmentaciónfecha] on ieepo.dbo.HPigmentación REBUILD;Print ''Tabla Idx_hPigmentaciónfecha indexada;''
ALTER INDEX [PK_histpagosdetalle_1] on ieepo.dbo.histpagosdetalle REBUILD;Print ''Tabla PK_histpagosdetalle_1 indexada;''
ALTER INDEX [ix_histpagosdetalle_idper_incall_1] on ieepo.dbo.histpagosdetalle REBUILD;Print ''Tabla ix_histpagosdetalle_idper_incall_1 indexada;''
ALTER INDEX [PK_HLugarRef1_1] on ieepo.dbo.HLugarRef1 REBUILD;Print ''Tabla PK_HLugarRef1_1 indexada;''
ALTER INDEX [Idx_hLugarRef1emp] on ieepo.dbo.HLugarRef1 REBUILD;Print ''Tabla Idx_hLugarRef1emp indexada;''
ALTER INDEX [Idx_hLugarRef1fecha] on ieepo.dbo.HLugarRef1 REBUILD;Print ''Tabla Idx_hLugarRef1fecha indexada;''
ALTER INDEX [idx_id_nodo] on ieepo.dbo.Empalme_PlazaEmpleados REBUILD;Print ''Tabla idx_id_nodo indexada;''
ALTER INDEX [idx_id_plaza] on ieepo.dbo.Empalme_PlazaEmpleados REBUILD;Print ''Tabla idx_id_plaza indexada;''
ALTER INDEX [idx_id_emp] on ieepo.dbo.Empalme_PlazaEmpleados REBUILD;Print ''Tabla idx_id_emp indexada;''
ALTER INDEX [idx_fecha] on ieepo.dbo.Empalme_PlazaEmpleados REBUILD;Print ''Tabla idx_fecha indexada;''
ALTER INDEX [PK__TMotivoIncidenci__19562B88] on ieepo.dbo.TMotivoIncidencias REBUILD;Print ''Tabla PK__TMotivoIncidenci__19562B88 indexada;''
ALTER INDEX [XPKSysModulos] on ieepo.dbo.SysModulos REBUILD;Print ''Tabla XPKSysModulos indexada;''
ALTER INDEX [PK_DiasDeProceso] on ieepo.dbo.DiasDeProceso REBUILD;Print ''Tabla PK_DiasDeProceso indexada;''
ALTER INDEX [pk_parcon] on ieepo.dbo.TPartidaPre_Conceptos REBUILD;Print ''Tabla pk_parcon indexada;''
ALTER INDEX [UQ__TPartidaPre_Conc__4816E490] on ieepo.dbo.TPartidaPre_Conceptos REBUILD;Print ''Tabla UQ__TPartidaPre_Conc__4816E490 indexada;''
ALTER INDEX [PK_DisenioRpt] on ieepo.dbo.DisenioRpt REBUILD;Print ''Tabla PK_DisenioRpt indexada;''
ALTER INDEX [PK_HTabulador_IEA_CM_1] on ieepo.dbo.HTabulador_SE_CM REBUILD;Print ''Tabla PK_HTabulador_IEA_CM_1 indexada;''
ALTER INDEX [Idx_hTabulador_IEA_CMplaza] on ieepo.dbo.HTabulador_SE_CM REBUILD;Print ''Tabla Idx_hTabulador_IEA_CMplaza indexada;''
ALTER INDEX [ix_HTabulador_SE_CM_fecha_incpzarel] on ieepo.dbo.HTabulador_SE_CM REBUILD;Print ''Tabla ix_HTabulador_SE_CM_fecha_incpzarel indexada;''
ALTER INDEX [idx_Recalculo_HistPagos_1] on ieepo.dbo.Recalculo_histpagos REBUILD;Print ''Tabla idx_Recalculo_HistPagos_1 indexada;''
ALTER INDEX [idx_Recalculo_HistPagos2_1] on ieepo.dbo.Recalculo_histpagos REBUILD;Print ''Tabla idx_Recalculo_HistPagos2_1 indexada;''
ALTER INDEX [PK_HcBajoDesarrollo_1] on ieepo.dbo.HcBajoDesarrollo REBUILD;Print ''Tabla PK_HcBajoDesarrollo_1 indexada;''
ALTER INDEX [Idx_hcBajoDesarrollofecha] on ieepo.dbo.HcBajoDesarrollo REBUILD;Print ''Tabla Idx_hcBajoDesarrollofecha indexada;''
ALTER INDEX [Idx_hcBajoDesarrolloplaza] on ieepo.dbo.HcBajoDesarrollo REBUILD;Print ''Tabla Idx_hcBajoDesarrolloplaza indexada;''
ALTER INDEX [XPKSysProcesos] on ieepo.dbo.SysProcesos REBUILD;Print ''Tabla XPKSysProcesos indexada;''
ALTER INDEX [PK_HCompatibilidadDeHoras_old] on ieepo.dbo.HCompatibilidadDeHoras_old REBUILD;Print ''Tabla PK_HCompatibilidadDeHoras_old indexada;''
ALTER INDEX [Idx_hCompatibilidadDeHorasfecha] on ieepo.dbo.HCompatibilidadDeHoras_old REBUILD;Print ''Tabla Idx_hCompatibilidadDeHorasfecha indexada;''
ALTER INDEX [Idx_hCompatibilidadDeHorasplaza] on ieepo.dbo.HCompatibilidadDeHoras_old REBUILD;Print ''Tabla Idx_hCompatibilidadDeHorasplaza indexada;''
ALTER INDEX [PK_TTipoPlaza] on ieepo.dbo.TStatusPlaza REBUILD;Print ''Tabla PK_TTipoPlaza indexada;''
ALTER INDEX [Id_TipoPlaza] on ieepo.dbo.TStatusPlaza REBUILD;Print ''Tabla Id_TipoPlaza indexada;''
ALTER INDEX [XPKRecalculo_Rastreoimpuesto_1] on ieepo.dbo.Recalculo_Rastreoimpuesto REBUILD;Print ''Tabla XPKRecalculo_Rastreoimpuesto_1 indexada;''
ALTER INDEX [PK_FUP_ValorLista_Id_Valor] on ieepo.dbo.FUP_ValorLista REBUILD;Print ''Tabla PK_FUP_ValorLista_Id_Valor indexada;''
ALTER INDEX [ix_FUP_ValorLista_Id_Documento] on ieepo.dbo.FUP_ValorLista REBUILD;Print ''Tabla ix_FUP_ValorLista_Id_Documento indexada;''
ALTER INDEX [XPKNom_HAuditorias] on ieepo.dbo.Nom_HAuditorias REBUILD;Print ''Tabla XPKNom_HAuditorias indexada;''
ALTER INDEX [IE1_Periodo_Emp] on ieepo.dbo.Nom_HAuditorias REBUILD;Print ''Tabla IE1_Periodo_Emp indexada;''
ALTER INDEX [IE1_Consecutivo] on ieepo.dbo.Nom_HAuditorias REBUILD;Print ''Tabla IE1_Consecutivo indexada;''
ALTER INDEX [PK__TMovimientoIncid__1C329833] on ieepo.dbo.TMovimientoIncidencias REBUILD;Print ''Tabla PK__TMovimientoIncid__1C329833 indexada;''
ALTER INDEX [XPKSysProcesosTablas] on ieepo.dbo.SysProcesosTablas REBUILD;Print ''Tabla XPKSysProcesosTablas indexada;''
ALTER INDEX [pk_tformulas_rel_empresas_idFormula] on ieepo.dbo.tFormulas_rel_Empresas REBUILD;Print ''Tabla pk_tformulas_rel_empresas_idFormula indexada;''
ALTER INDEX [pk_HaguinaldoPensionado] on ieepo.dbo.HAguinaldoPensionado REBUILD;Print ''Tabla pk_HaguinaldoPensionado indexada;''
ALTER INDEX [Idx_hAguinaldoPensionadofecha] on ieepo.dbo.HAguinaldoPensionado REBUILD;Print ''Tabla Idx_hAguinaldoPensionadofecha indexada;''
ALTER INDEX [Idx_hAguinaldoPensionadoBene] on ieepo.dbo.HAguinaldoPensionado REBUILD;Print ''Tabla Idx_hAguinaldoPensionadoBene indexada;''
ALTER INDEX [PK_Efectivos] on ieepo.dbo.Efectivos REBUILD;Print ''Tabla PK_Efectivos indexada;''
ALTER INDEX [pk_parconrel] on ieepo.dbo.RPartidaPre_Conceptos REBUILD;Print ''Tabla pk_parconrel indexada;''
ALTER INDEX [PK_HTTCategoriasPlaza] on ieepo.dbo.HTTCategoriasPlaza REBUILD;Print ''Tabla PK_HTTCategoriasPlaza indexada;''
ALTER INDEX [Idx_hTTCategoriasPlazafecha] on ieepo.dbo.HTTCategoriasPlaza REBUILD;Print ''Tabla Idx_hTTCategoriasPlazafecha indexada;''
ALTER INDEX [Idx_hTTCategoriasPlazaplaza] on ieepo.dbo.HTTCategoriasPlaza REBUILD;Print ''Tabla Idx_hTTCategoriasPlazaplaza indexada;''
ALTER INDEX [pk_ValoresMatriz5] on ieepo.dbo.ValoresMatriz5 REBUILD;Print ''Tabla pk_ValoresMatriz5 indexada;''
ALTER INDEX [PK_HCedula_Identificacion_1] on ieepo.dbo.HCedula_Identificacion REBUILD;Print ''Tabla PK_HCedula_Identificacion_1 indexada;''
ALTER INDEX [Idx_hCedula_Identificacionemp] on ieepo.dbo.HCedula_Identificacion REBUILD;Print ''Tabla Idx_hCedula_Identificacionemp indexada;''
ALTER INDEX [Idx_hCedula_Identificacionfecha] on ieepo.dbo.HCedula_Identificacion REBUILD;Print ''Tabla Idx_hCedula_Identificacionfecha indexada;''
ALTER INDEX [XPKSysTipoCampo] on ieepo.dbo.SysTipoCampo REBUILD;Print ''Tabla XPKSysTipoCampo indexada;''
ALTER INDEX [PK_HDoctorado] on ieepo.dbo.HDoctorado REBUILD;Print ''Tabla PK_HDoctorado indexada;''
ALTER INDEX [Idx_hDoctoradoemp] on ieepo.dbo.HDoctorado REBUILD;Print ''Tabla Idx_hDoctoradoemp indexada;''
ALTER INDEX [Idx_hDoctoradofecha] on ieepo.dbo.HDoctorado REBUILD;Print ''Tabla Idx_hDoctoradofecha indexada;''
ALTER INDEX [XPKEmpleadosCodigos] on ieepo.dbo.EmpleadosCodigos REBUILD;Print ''Tabla XPKEmpleadosCodigos indexada;''
ALTER INDEX [AK1_IdEmpleado] on ieepo.dbo.EmpleadosCodigos REBUILD;Print ''Tabla AK1_IdEmpleado indexada;''
ALTER INDEX [idx_Recalculo_conceptos_1] on ieepo.dbo.Recalculo_conceptos REBUILD;Print ''Tabla idx_Recalculo_conceptos_1 indexada;''
ALTER INDEX [PK_HCategorias] on ieepo.dbo.HCategorias REBUILD;Print ''Tabla PK_HCategorias indexada;''
ALTER INDEX [IE1_Emp_Fecha] on ieepo.dbo.HCategorias REBUILD;Print ''Tabla IE1_Emp_Fecha indexada;''
ALTER INDEX [IX_HCategorias] on ieepo.dbo.HCategorias REBUILD;Print ''Tabla IX_HCategorias indexada;''
ALTER INDEX [PK_Sysrelacioneslineales_idtabla] on ieepo.dbo.Sysrelacioneslineales REBUILD;Print ''Tabla PK_Sysrelacioneslineales_idtabla indexada;''
ALTER INDEX [XPKSysTipoDato] on ieepo.dbo.SysTipoDato REBUILD;Print ''Tabla XPKSysTipoDato indexada;''
ALTER INDEX [PK_Equivalencias] on ieepo.dbo.Equivalencias REBUILD;Print ''Tabla PK_Equivalencias indexada;''
ALTER INDEX [PK_Recalculo_EmpleadosPeriodos_1] on ieepo.dbo.Recalculo_EmpleadosPeriodos REBUILD;Print ''Tabla PK_Recalculo_EmpleadosPeriodos_1 indexada;''
ALTER INDEX [ix_Recalculo_EmpleadosPeriodos_idper_idpzacalc_1] on ieepo.dbo.Recalculo_EmpleadosPeriodos REBUILD;Print ''Tabla ix_Recalculo_EmpleadosPeriodos_idper_idpzacalc_1 indexada;''
ALTER INDEX [PK_HCejas_1] on ieepo.dbo.HCejas REBUILD;Print ''Tabla PK_HCejas_1 indexada;''
ALTER INDEX [Idx_hCejasemp] on ieepo.dbo.HCejas REBUILD;Print ''Tabla Idx_hCejasemp indexada;''
ALTER INDEX [Idx_hCejasfecha] on ieepo.dbo.HCejas REBUILD;Print ''Tabla Idx_hCejasfecha indexada;''
ALTER INDEX [XPKTNivelTablas] on ieepo.dbo.TNivelTablas REBUILD;Print ''Tabla XPKTNivelTablas indexada;''
ALTER INDEX [Id_Tabla] on ieepo.dbo.TNivelTablas REBUILD;Print ''Tabla Id_Tabla indexada;''
ALTER INDEX [PK_Escolaridad] on ieepo.dbo.Escolaridad REBUILD;Print ''Tabla PK_Escolaridad indexada;''
ALTER INDEX [PK_TAdic] on ieepo.dbo.TAdic REBUILD;Print ''Tabla PK_TAdic indexada;''
ALTER INDEX [XPKEvalua] on ieepo.dbo.Evalua REBUILD;Print ''Tabla XPKEvalua indexada;''
ALTER INDEX [PK_HTabulador_SE_Cat_Puesto] on ieepo.dbo.HTabulador_SE_Cat_Puesto REBUILD;Print ''Tabla PK_HTabulador_SE_Cat_Puesto indexada;''
ALTER INDEX [Idx_hTabulador_IEA_Plazafecha] on ieepo.dbo.HTabulador_SE_Cat_Puesto REBUILD;Print ''Tabla Idx_hTabulador_IEA_Plazafecha indexada;''
ALTER INDEX [Idx_hTabulador_IEA_Plazaplaza] on ieepo.dbo.HTabulador_SE_Cat_Puesto REBUILD;Print ''Tabla Idx_hTabulador_IEA_Plazaplaza indexada;''
ALTER INDEX [idx_HTabulador_SE_Cat_Puesto_id_rel] on ieepo.dbo.HTabulador_SE_Cat_Puesto REBUILD;Print ''Tabla idx_HTabulador_SE_Cat_Puesto_id_rel indexada;''
ALTER INDEX [ix_HTabulador_SE_Cat_Puesto_inc_pzarel] on ieepo.dbo.HTabulador_SE_Cat_Puesto REBUILD;Print ''Tabla ix_HTabulador_SE_Cat_Puesto_inc_pzarel indexada;''
ALTER INDEX [pk_HFecha_Alta_Rama_id_emp_fecha] on ieepo.dbo.HFecha_Alta_Rama REBUILD;Print ''Tabla pk_HFecha_Alta_Rama_id_emp_fecha indexada;''
ALTER INDEX [Idx_hFecha_Alta_Ramaemp] on ieepo.dbo.HFecha_Alta_Rama REBUILD;Print ''Tabla Idx_hFecha_Alta_Ramaemp indexada;''
ALTER INDEX [Idx_hFecha_Alta_Ramafecha] on ieepo.dbo.HFecha_Alta_Rama REBUILD;Print ''Tabla Idx_hFecha_Alta_Ramafecha indexada;''
ALTER INDEX [PK_HpuestoDepende] on ieepo.dbo.HpuestoDepende REBUILD;Print ''Tabla PK_HpuestoDepende indexada;''
ALTER INDEX [Idx_hpuestoDependefecha] on ieepo.dbo.HpuestoDepende REBUILD;Print ''Tabla Idx_hpuestoDependefecha indexada;''
ALTER INDEX [Idx_hpuestoDependeplaza] on ieepo.dbo.HpuestoDepende REBUILD;Print ''Tabla Idx_hpuestoDependeplaza indexada;''
ALTER INDEX [PK_HCerificado_Carrera_Técnica_1] on ieepo.dbo.HCerificado_Carrera_Técnica REBUILD;Print ''Tabla PK_HCerificado_Carrera_Técnica_1 indexada;''
ALTER INDEX [Idx_hCerificado_Carrera_Técnicaemp] on ieepo.dbo.HCerificado_Carrera_Técnica REBUILD;Print ''Tabla Idx_hCerificado_Carrera_Técnicaemp indexada;''
ALTER INDEX [Idx_hCerificado_Carrera_Técnicafecha] on ieepo.dbo.HCerificado_Carrera_Técnica REBUILD;Print ''Tabla Idx_hCerificado_Carrera_Técnicafecha indexada;''
ALTER INDEX [XPKTAlternativasCursos] on ieepo.dbo.TAlternativasCursos REBUILD;Print ''Tabla XPKTAlternativasCursos indexada;''
ALTER INDEX [pk_HPrimaPensionado] on ieepo.dbo.HPrimaPensionado REBUILD;Print ''Tabla pk_HPrimaPensionado indexada;''
ALTER INDEX [Idx_hPrimaPensionadoBene] on ieepo.dbo.HPrimaPensionado REBUILD;Print ''Tabla Idx_hPrimaPensionadoBene indexada;''
ALTER INDEX [Idx_hPrimaPensionadofecha] on ieepo.dbo.HPrimaPensionado REBUILD;Print ''Tabla Idx_hPrimaPensionadofecha indexada;''
ALTER INDEX [XPKEvaluacionNivel2] on ieepo.dbo.EvaluacionNivel2 REBUILD;Print ''Tabla XPKEvaluacionNivel2 indexada;''
ALTER INDEX [PK_HestatusPuesto] on ieepo.dbo.HestatusPuesto REBUILD;Print ''Tabla PK_HestatusPuesto indexada;''
ALTER INDEX [Idx_hestatusPuestofecha] on ieepo.dbo.HestatusPuesto REBUILD;Print ''Tabla Idx_hestatusPuestofecha indexada;''
ALTER INDEX [Idx_hestatusPuestoplaza] on ieepo.dbo.HestatusPuesto REBUILD;Print ''Tabla Idx_hestatusPuestoplaza indexada;''
ALTER INDEX [PK_HgenteCargo] on ieepo.dbo.HgenteCargo REBUILD;Print ''Tabla PK_HgenteCargo indexada;''
ALTER INDEX [Idx_hgenteCargofecha] on ieepo.dbo.HgenteCargo REBUILD;Print ''Tabla Idx_hgenteCargofecha indexada;''
ALTER INDEX [Idx_hgenteCargoplaza] on ieepo.dbo.HgenteCargo REBUILD;Print ''Tabla Idx_hgenteCargoplaza indexada;''
ALTER INDEX [PK_TAreas] on ieepo.dbo.TAreas REBUILD;Print ''Tabla PK_TAreas indexada;''
ALTER INDEX [IDTABLA] on ieepo.dbo.RelacionRSTablas REBUILD;Print ''Tabla IDTABLA indexada;''
ALTER INDEX [IDRS] on ieepo.dbo.RelacionRSTablas REBUILD;Print ''Tabla IDRS indexada;''
ALTER INDEX [PK_TRazBaj] on ieepo.dbo.TRazBaj REBUILD;Print ''Tabla PK_TRazBaj indexada;''
ALTER INDEX [PK_HQn_Quinquenio_1] on ieepo.dbo.HQn_Quinquenio REBUILD;Print ''Tabla PK_HQn_Quinquenio_1 indexada;''
ALTER INDEX [Idx_hQn_Quinquenioemp] on ieepo.dbo.HQn_Quinquenio REBUILD;Print ''Tabla Idx_hQn_Quinquenioemp indexada;''
ALTER INDEX [Idx_hQn_Quinqueniofecha] on ieepo.dbo.HQn_Quinquenio REBUILD;Print ''Tabla Idx_hQn_Quinqueniofecha indexada;''
ALTER INDEX [Tokens_token] on ieepo.dbo.tokens REBUILD;Print ''Tabla Tokens_token indexada;''
ALTER INDEX [IDX_fecha] on ieepo.dbo.tokens REBUILD;Print ''Tabla IDX_fecha indexada;''
ALTER INDEX [PK__FechasReportesPr__698491D9] on ieepo.dbo.FechasReportesProceso REBUILD;Print ''Tabla PK__FechasReportesPr__698491D9 indexada;''
ALTER INDEX [PK_HCertificado_Prepa_1] on ieepo.dbo.HCertificado_Prepa REBUILD;Print ''Tabla PK_HCertificado_Prepa_1 indexada;''
ALTER INDEX [Idx_hCertificado_Prepaemp] on ieepo.dbo.HCertificado_Prepa REBUILD;Print ''Tabla Idx_hCertificado_Prepaemp indexada;''
ALTER INDEX [Idx_hCertificado_Prepafecha] on ieepo.dbo.HCertificado_Prepa REBUILD;Print ''Tabla Idx_hCertificado_Prepafecha indexada;''
ALTER INDEX [XPKTBancos] on ieepo.dbo.TBancos REBUILD;Print ''Tabla XPKTBancos indexada;''
ALTER INDEX [XPKExcepcionesTyA] on ieepo.dbo.ExcepcionesTyA REBUILD;Print ''Tabla XPKExcepcionesTyA indexada;''
ALTER INDEX [PK_Conceptos_Hacienda] on ieepo.dbo.Conceptos_Hacienda REBUILD;Print ''Tabla PK_Conceptos_Hacienda indexada;''
ALTER INDEX [PK_TDatos_Familiares] on ieepo.dbo.TDatos_Familiares REBUILD;Print ''Tabla PK_TDatos_Familiares indexada;''
ALTER INDEX [PK_TNivel] on ieepo.dbo.TNivel REBUILD;Print ''Tabla PK_TNivel indexada;''
ALTER INDEX [PK_TBecEscue] on ieepo.dbo.TBecEscue REBUILD;Print ''Tabla PK_TBecEscue indexada;''
ALTER INDEX [PK_HQx_Antig_Docentes_Normales_1] on ieepo.dbo.HQx_Antig_Docentes_Normales REBUILD;Print ''Tabla PK_HQx_Antig_Docentes_Normales_1 indexada;''
ALTER INDEX [Idx_hQx_Antig_Docentes_Normalesemp] on ieepo.dbo.HQx_Antig_Docentes_Normales REBUILD;Print ''Tabla Idx_hQx_Antig_Docentes_Normalesemp indexada;''
ALTER INDEX [Idx_hQx_Antig_Docentes_Normalesfecha] on ieepo.dbo.HQx_Antig_Docentes_Normales REBUILD;Print ''Tabla Idx_hQx_Antig_Docentes_Normalesfecha indexada;''
ALTER INDEX [XPKFBonoCalendario] on ieepo.dbo.FBonoCalendario REBUILD;Print ''Tabla XPKFBonoCalendario indexada;''
ALTER INDEX [PK_HTipo_Seg_Social_1] on ieepo.dbo.HTipo_Seg_Social REBUILD;Print ''Tabla PK_HTipo_Seg_Social_1 indexada;''
ALTER INDEX [Idx_hTipo_Seg_Socialfecha] on ieepo.dbo.HTipo_Seg_Social REBUILD;Print ''Tabla Idx_hTipo_Seg_Socialfecha indexada;''
ALTER INDEX [Idx_hTipo_Seg_Socialplaza] on ieepo.dbo.HTipo_Seg_Social REBUILD;Print ''Tabla Idx_hTipo_Seg_Socialplaza indexada;''
ALTER INDEX [pk_HCentroTrabajoPensionados] on ieepo.dbo.HCentroTrabajoPensionados REBUILD;Print ''Tabla pk_HCentroTrabajoPensionados indexada;''
ALTER INDEX [Idx_hCentroTrabajoPensionadosBene] on ieepo.dbo.HCentroTrabajoPensionados REBUILD;Print ''Tabla Idx_hCentroTrabajoPensionadosBene indexada;''
ALTER INDEX [Idx_hCentroTrabajoPensionadosfecha] on ieepo.dbo.HCentroTrabajoPensionados REBUILD;Print ''Tabla Idx_hCentroTrabajoPensionadosfecha indexada;''
ALTER INDEX [PK__TConfigCaracterC__7511B4D5] on ieepo.dbo.TConfigCaracterControl REBUILD;Print ''Tabla PK__TConfigCaracterC__7511B4D5 indexada;''
ALTER INDEX [pk_HpuestoAdministrativo] on ieepo.dbo.HpuestoAdministrativo REBUILD;Print ''Tabla pk_HpuestoAdministrativo indexada;''
ALTER INDEX [Idx_hpuestoAdministrativofecha] on ieepo.dbo.HpuestoAdministrativo REBUILD;Print ''Tabla Idx_hpuestoAdministrativofecha indexada;''
ALTER INDEX [Idx_hpuestoAdministrativoplaza] on ieepo.dbo.HpuestoAdministrativo REBUILD;Print ''Tabla Idx_hpuestoAdministrativoplaza indexada;''
ALTER INDEX [PK_THplazasCC] on ieepo.dbo.THplazasCC REBUILD;Print ''Tabla PK_THplazasCC indexada;''
ALTER INDEX [PK_HCertificado_Primaria_1] on ieepo.dbo.HCertificado_Primaria REBUILD;Print ''Tabla PK_HCertificado_Primaria_1 indexada;''
ALTER INDEX [Idx_hCertificado_Primariaemp] on ieepo.dbo.HCertificado_Primaria REBUILD;Print ''Tabla Idx_hCertificado_Primariaemp indexada;''
ALTER INDEX [Idx_hCertificado_Primariafecha] on ieepo.dbo.HCertificado_Primaria REBUILD;Print ''Tabla Idx_hCertificado_Primariafecha indexada;''
ALTER INDEX [PK_columnaorganigrama] on ieepo.dbo.TcolumnasOrg REBUILD;Print ''Tabla PK_columnaorganigrama indexada;''
ALTER INDEX [IDX_columnasOrg] on ieepo.dbo.TcolumnasOrg REBUILD;Print ''Tabla IDX_columnasOrg indexada;''
ALTER INDEX [PK_TBecEspec] on ieepo.dbo.TBecEspec REBUILD;Print ''Tabla PK_TBecEspec indexada;''
ALTER INDEX [Idx_hTbeneficiarioISEAemp] on ieepo.dbo.HTbeneficiarioISEA REBUILD;Print ''Tabla Idx_hTbeneficiarioISEAemp indexada;''
ALTER INDEX [Idx_hTbeneficiarioISEAfecha] on ieepo.dbo.HTbeneficiarioISEA REBUILD;Print ''Tabla Idx_hTbeneficiarioISEAfecha indexada;''
ALTER INDEX [XPK_hPadreMadreemp] on ieepo.dbo.HPadreMadre REBUILD;Print ''Tabla XPK_hPadreMadreemp indexada;''
ALTER INDEX [Idx_hPadreMadrefecha] on ieepo.dbo.HPadreMadre REBUILD;Print ''Tabla Idx_hPadreMadrefecha indexada;''
ALTER INDEX [PK_HDepartamentos] on ieepo.dbo.HDepartamentos REBUILD;Print ''Tabla PK_HDepartamentos indexada;''
ALTER INDEX [IX_HDepartamentos] on ieepo.dbo.HDepartamentos REBUILD;Print ''Tabla IX_HDepartamentos indexada;''
ALTER INDEX [IE1_Emp_Fecha] on ieepo.dbo.HDepartamentos REBUILD;Print ''Tabla IE1_Emp_Fecha indexada;''
ALTER INDEX [IE2_Fecha] on ieepo.dbo.HDepartamentos REBUILD;Print ''Tabla IE2_Fecha indexada;''
ALTER INDEX [PK_hAyuda_Familiar] on ieepo.dbo.HAyuda_Familiar REBUILD;Print ''Tabla PK_hAyuda_Familiar indexada;''
ALTER INDEX [Idx_hAyuda_Familiaremp] on ieepo.dbo.HAyuda_Familiar REBUILD;Print ''Tabla Idx_hAyuda_Familiaremp indexada;''
ALTER INDEX [Idx_hAyuda_Familiarfecha] on ieepo.dbo.HAyuda_Familiar REBUILD;Print ''Tabla Idx_hAyuda_Familiarfecha indexada;''
ALTER INDEX [index_relacionRSTMotivoMov] on ieepo.dbo.relacionRsTMotivoMov REBUILD;Print ''Tabla index_relacionRSTMotivoMov indexada;''
ALTER INDEX [PK__TDetalleIncidenc__2E2F2A0E] on ieepo.dbo.TDetalleIncidencias REBUILD;Print ''Tabla PK__TDetalleIncidenc__2E2F2A0E indexada;''
ALTER INDEX [PK_TBecGrados] on ieepo.dbo.TBecGrados REBUILD;Print ''Tabla PK_TBecGrados indexada;''
ALTER INDEX [pk_tcat_pto_se] on ieepo.dbo.TCat_Pto_SE REBUILD;Print ''Tabla pk_tcat_pto_se indexada;''
ALTER INDEX [Idx_tcat_pto_se] on ieepo.dbo.TCat_Pto_SE REBUILD;Print ''Tabla Idx_tcat_pto_se indexada;''
ALTER INDEX [XPKFBonoEmpleados] on ieepo.dbo.FBonoEmpleados REBUILD;Print ''Tabla XPKFBonoEmpleados indexada;''
ALTER INDEX [IX_HpuestoTitular] on ieepo.dbo.HpuestoTitular REBUILD;Print ''Tabla IX_HpuestoTitular indexada;''
ALTER INDEX [Idx_hpuestoTitularfecha] on ieepo.dbo.HpuestoTitular REBUILD;Print ''Tabla Idx_hpuestoTitularfecha indexada;''
ALTER INDEX [Idx_hpuestoTitularplaza] on ieepo.dbo.HpuestoTitular REBUILD;Print ''Tabla Idx_hpuestoTitularplaza indexada;''
ALTER INDEX [PK_HPuntualidad_y_Asistencia] on ieepo.dbo.HPuntualidad_y_Asistencia REBUILD;Print ''Tabla PK_HPuntualidad_y_Asistencia indexada;''
ALTER INDEX [Idx_hPuntualidad_y_Asistenciaemp] on ieepo.dbo.HPuntualidad_y_Asistencia REBUILD;Print ''Tabla Idx_hPuntualidad_y_Asistenciaemp indexada;''
ALTER INDEX [Idx_hPuntualidad_y_Asistenciafecha] on ieepo.dbo.HPuntualidad_y_Asistencia REBUILD;Print ''Tabla Idx_hPuntualidad_y_Asistenciafecha indexada;''
ALTER INDEX [PK_RBeneficiarioISEA] on ieepo.dbo.RBeneficiarioISEA REBUILD;Print ''Tabla PK_RBeneficiarioISEA indexada;''
ALTER INDEX [PK_HCiudad_Carrera_Técnica_1] on ieepo.dbo.HCiudad_Carrera_Técnica REBUILD;Print ''Tabla PK_HCiudad_Carrera_Técnica_1 indexada;''
ALTER INDEX [Idx_hCiudad_Carrera_Técnicaemp] on ieepo.dbo.HCiudad_Carrera_Técnica REBUILD;Print ''Tabla Idx_hCiudad_Carrera_Técnicaemp indexada;''
ALTER INDEX [Idx_hCiudad_Carrera_Técnicafecha] on ieepo.dbo.HCiudad_Carrera_Técnica REBUILD;Print ''Tabla Idx_hCiudad_Carrera_Técnicafecha indexada;''
ALTER INDEX [PK_TBecTipo] on ieepo.dbo.TBecTipo REBUILD;Print ''Tabla PK_TBecTipo indexada;''
ALTER INDEX [XPKFCalculo] on ieepo.dbo.FCalculo REBUILD;Print ''Tabla XPKFCalculo indexada;''
ALTER INDEX [XPKTconceptos] on ieepo.dbo.Tconceptos REBUILD;Print ''Tabla XPKTconceptos indexada;''
ALTER INDEX [COMPARTIDO] on ieepo.dbo.Tconceptos REBUILD;Print ''Tabla COMPARTIDO indexada;''
ALTER INDEX [COMPARTIDO2] on ieepo.dbo.Tconceptos REBUILD;Print ''Tabla COMPARTIDO2 indexada;''
ALTER INDEX [IX_HRegistraAsistencia] on ieepo.dbo.HRegistraAsistencia REBUILD;Print ''Tabla IX_HRegistraAsistencia indexada;''
ALTER INDEX [Idx_hRegistraAsistenciaemp] on ieepo.dbo.HRegistraAsistencia REBUILD;Print ''Tabla Idx_hRegistraAsistenciaemp indexada;''
ALTER INDEX [Idx_hRegistraAsistenciafecha] on ieepo.dbo.HRegistraAsistencia REBUILD;Print ''Tabla Idx_hRegistraAsistenciafecha indexada;''
ALTER INDEX [PK_TBtEscol] on ieepo.dbo.TBtEscol REBUILD;Print ''Tabla PK_TBtEscol indexada;''
ALTER INDEX [XPKNom_Excepciones] on ieepo.dbo.Nom_Excepciones REBUILD;Print ''Tabla XPKNom_Excepciones indexada;''
ALTER INDEX [IE1_Periodo_Emp] on ieepo.dbo.Nom_Excepciones REBUILD;Print ''Tabla IE1_Periodo_Emp indexada;''
ALTER INDEX [IE2_Periodo_Clave] on ieepo.dbo.Nom_Excepciones REBUILD;Print ''Tabla IE2_Periodo_Clave indexada;''
ALTER INDEX [pk_HDias15Pensionado] on ieepo.dbo.HDias15Pensionado REBUILD;Print ''Tabla pk_HDias15Pensionado indexada;''
ALTER INDEX [Idx_hDias15PensionadoBene] on ieepo.dbo.HDias15Pensionado REBUILD;Print ''Tabla Idx_hDias15PensionadoBene indexada;''
ALTER INDEX [Idx_hDias15Pensionadofecha] on ieepo.dbo.HDias15Pensionado REBUILD;Print ''Tabla Idx_hDias15Pensionadofecha indexada;''
ALTER INDEX [Recibos_Concepto_idrecibo] on ieepo.dbo.Recibos_Concepto REBUILD;Print ''Tabla Recibos_Concepto_idrecibo indexada;''
ALTER INDEX [Recibos_Concepto_idrecibo_idconcepto] on ieepo.dbo.Recibos_Concepto REBUILD;Print ''Tabla Recibos_Concepto_idrecibo_idconcepto indexada;''
ALTER INDEX [PK_HtipodePlaza] on ieepo.dbo.HtipodePlaza REBUILD;Print ''Tabla PK_HtipodePlaza indexada;''
ALTER INDEX [Idx_htipodePlazafecha] on ieepo.dbo.HtipodePlaza REBUILD;Print ''Tabla Idx_htipodePlazafecha indexada;''
ALTER INDEX [Idx_htipodePlazaplaza] on ieepo.dbo.HtipodePlaza REBUILD;Print ''Tabla Idx_htipodePlazaplaza indexada;''
ALTER INDEX [XPKestructuraMatriz] on ieepo.dbo.estructuraMatriz REBUILD;Print ''Tabla XPKestructuraMatriz indexada;''
ALTER INDEX [PK_HRfc] on ieepo.dbo.HRfc REBUILD;Print ''Tabla PK_HRfc indexada;''
ALTER INDEX [PK_HCiudad_Maestria_1] on ieepo.dbo.HCiudad_Maestria REBUILD;Print ''Tabla PK_HCiudad_Maestria_1 indexada;''
ALTER INDEX [Idx_hCiudad_Maestriaemp] on ieepo.dbo.HCiudad_Maestria REBUILD;Print ''Tabla Idx_hCiudad_Maestriaemp indexada;''
ALTER INDEX [Idx_hCiudad_Maestriafecha] on ieepo.dbo.HCiudad_Maestria REBUILD;Print ''Tabla Idx_hCiudad_Maestriafecha indexada;''
ALTER INDEX [PK_TBtIdioma] on ieepo.dbo.TBtIdioma REBUILD;Print ''Tabla PK_TBtIdioma indexada;''
ALTER INDEX [PK_Logtformulas] on ieepo.dbo.LogTformulas REBUILD;Print ''Tabla PK_Logtformulas indexada;''
ALTER INDEX [PK__HSuspensionPagos__796559CF] on ieepo.dbo.HSuspensionPagosx REBUILD;Print ''Tabla PK__HSuspensionPagos__796559CF indexada;''
ALTER INDEX [IDBENEFICIARIO] on ieepo.dbo.TBeneficiario REBUILD;Print ''Tabla IDBENEFICIARIO indexada;''
ALTER INDEX [IDCONCEPTO] on ieepo.dbo.TBeneficiario REBUILD;Print ''Tabla IDCONCEPTO indexada;''
ALTER INDEX [XPKFCalculoEmpleados] on ieepo.dbo.FCalculoEmpleados REBUILD;Print ''Tabla XPKFCalculoEmpleados indexada;''
ALTER INDEX [Idx_DPlazasPensionadose] on ieepo.dbo.DPlazasPensionados REBUILD;Print ''Tabla Idx_DPlazasPensionadose indexada;''
ALTER INDEX [PK_HDiasLaborados_en_el_Año] on ieepo.dbo.HDiasLaborados_en_el_Año REBUILD;Print ''Tabla PK_HDiasLaborados_en_el_Año indexada;''
ALTER INDEX [Idx_hDiasLaborados_en_el_Añoemp] on ieepo.dbo.HDiasLaborados_en_el_Año REBUILD;Print ''Tabla Idx_hDiasLaborados_en_el_Añoemp indexada;''
ALTER INDEX [Idx_hDiasLaborados_en_el_Añofecha] on ieepo.dbo.HDiasLaborados_en_el_Año REBUILD;Print ''Tabla Idx_hDiasLaborados_en_el_Añofecha indexada;''
ALTER INDEX [Idx_hzonaEconomISEAplaza] on ieepo.dbo.HzonaEconomISEA REBUILD;Print ''Tabla Idx_hzonaEconomISEAplaza indexada;''
ALTER INDEX [Idx_hzonaEconomISEAfecha] on ieepo.dbo.HzonaEconomISEA REBUILD;Print ''Tabla Idx_hzonaEconomISEAfecha indexada;''
ALTER INDEX [PK_TBtPuesto] on ieepo.dbo.TBtPuesto REBUILD;Print ''Tabla PK_TBtPuesto indexada;''
ALTER INDEX [PK_NutrivalePensionado] on ieepo.dbo.TNutrivalePensionado REBUILD;Print ''Tabla PK_NutrivalePensionado indexada;''
ALTER INDEX [idx_TTEmpleado_Plaza_Conc_Id_Emp_NoConcepto_Fecha] on ieepo.dbo.TTEmpleado_Plaza_Conc REBUILD;Print ''Tabla idx_TTEmpleado_Plaza_Conc_Id_Emp_NoConcepto_Fecha indexada;''
ALTER INDEX [IX_TTEmpleado_Plaza_Conc_1] on ieepo.dbo.TTEmpleado_Plaza_Conc REBUILD;Print ''Tabla IX_TTEmpleado_Plaza_Conc_1 indexada;''
ALTER INDEX [IX_TTEmpleado_Plaza_Conc_2] on ieepo.dbo.TTEmpleado_Plaza_Conc REBUILD;Print ''Tabla IX_TTEmpleado_Plaza_Conc_2 indexada;''
ALTER INDEX [IX_TTEmpleado_Plaza_Conc_3] on ieepo.dbo.TTEmpleado_Plaza_Conc REBUILD;Print ''Tabla IX_TTEmpleado_Plaza_Conc_3 indexada;''
ALTER INDEX [_dta_index_TTEmpleado_Plaza_Conc_5_616052112__K5_1_2_3_4_6_7_8_9_10_11_12_13] on ieepo.dbo.TTEmpleado_Plaza_Conc REBUILD;Print ''Tabla _dta_index_TTEmpleado_Plaza_Conc_5_616052112__K5_1_2_3_4_6_7_8_9_10_11_12_13 indexada;''
ALTER INDEX [idx_TTEmpleado_Plaza_Conc_Id_Emp_Fecha_Movimiento] on ieepo.dbo.TTEmpleado_Plaza_Conc REBUILD;Print ''Tabla idx_TTEmpleado_Plaza_Conc_Id_Emp_Fecha_Movimiento indexada;''
ALTER INDEX [ix_TTEmpleado_Plaza_Conc_pzafec_inc_desmonfinmov] on ieepo.dbo.TTEmpleado_Plaza_Conc REBUILD;Print ''Tabla ix_TTEmpleado_Plaza_Conc_pzafec_inc_desmonfinmov indexada;''
ALTER INDEX [PK_hRegistroPatronalEmpemp] on ieepo.dbo.HRegistroPatronalEmp REBUILD;Print ''Tabla PK_hRegistroPatronalEmpemp indexada;''
ALTER INDEX [Idx_hRegistroPatronalEmpfecha] on ieepo.dbo.HRegistroPatronalEmp REBUILD;Print ''Tabla Idx_hRegistroPatronalEmpfecha indexada;''
ALTER INDEX [pk_TCT_BajoDes] on ieepo.dbo.TCT_BajoDes REBUILD;Print ''Tabla pk_TCT_BajoDes indexada;''
ALTER INDEX [PK_HCiudad_Prepa_1] on ieepo.dbo.HCiudad_Prepa REBUILD;Print ''Tabla PK_HCiudad_Prepa_1 indexada;''
ALTER INDEX [Idx_hCiudad_Prepaemp] on ieepo.dbo.HCiudad_Prepa REBUILD;Print ''Tabla Idx_hCiudad_Prepaemp indexada;''
ALTER INDEX [Idx_hCiudad_Prepafecha] on ieepo.dbo.HCiudad_Prepa REBUILD;Print ''Tabla Idx_hCiudad_Prepafecha indexada;''
ALTER INDEX [PK_CardexxEmp] on ieepo.dbo.CardexxEmp REBUILD;Print ''Tabla PK_CardexxEmp indexada;''
ALTER INDEX [IE1_Acardex] on ieepo.dbo.CardexxEmp REBUILD;Print ''Tabla IE1_Acardex indexada;''
ALTER INDEX [DIAS] on ieepo.dbo.CardexxEmp REBUILD;Print ''Tabla DIAS indexada;''
ALTER INDEX [pk_HNutrivalePensionado] on ieepo.dbo.HNutrivalePensionado REBUILD;Print ''Tabla pk_HNutrivalePensionado indexada;''
ALTER INDEX [Idx_hNutrivalePensionadoBene] on ieepo.dbo.HNutrivalePensionado REBUILD;Print ''Tabla Idx_hNutrivalePensionadoBene indexada;''
ALTER INDEX [Idx_hNutrivalePensionadofecha] on ieepo.dbo.HNutrivalePensionado REBUILD;Print ''Tabla Idx_hNutrivalePensionadofecha indexada;''
ALTER INDEX [PK__TMotivoSusp__7B4DA241] on ieepo.dbo.TMotivoSusp REBUILD;Print ''Tabla PK__TMotivoSusp__7B4DA241 indexada;''
ALTER INDEX [Recalculo_Calculo_id_calculo] on ieepo.dbo.Recalculo_Calculo REBUILD;Print ''Tabla Recalculo_Calculo_id_calculo indexada;''
ALTER INDEX [Ix_Recalculo_Calculo_iddetalle_inc_idcalculo] on ieepo.dbo.Recalculo_Calculo REBUILD;Print ''Tabla Ix_Recalculo_Calculo_iddetalle_inc_idcalculo indexada;''
ALTER INDEX [ix_Recalculo_Calculo_Activo_Id_Periodo_Transfer_incall] on ieepo.dbo.Recalculo_Calculo REBUILD;Print ''Tabla ix_Recalculo_Calculo_Activo_Id_Periodo_Transfer_incall indexada;''
ALTER INDEX [PK_TCategorias] on ieepo.dbo.TCategorias REBUILD;Print ''Tabla PK_TCategorias indexada;''
ALTER INDEX [PK_Filler] on ieepo.dbo.Filler REBUILD;Print ''Tabla PK_Filler indexada;''
ALTER INDEX [PK_HpuestosPlaza] on ieepo.dbo.HpuestosPlazas REBUILD;Print ''Tabla PK_HpuestosPlaza indexada;''
ALTER INDEX [IX_HpuestosPlazas] on ieepo.dbo.HpuestosPlazas REBUILD;Print ''Tabla IX_HpuestosPlazas indexada;''
ALTER INDEX [IE2_Fecha] on ieepo.dbo.HpuestosPlazas REBUILD;Print ''Tabla IE2_Fecha indexada;''
ALTER INDEX [PK_ACCESOSMENUS] on ieepo.dbo.ACCESOSMENUS REBUILD;Print ''Tabla PK_ACCESOSMENUS indexada;''
ALTER INDEX [IE1_Id_Usuario] on ieepo.dbo.ACCESOSMENUS REBUILD;Print ''Tabla IE1_Id_Usuario indexada;''
ALTER INDEX [_dta_index_ACCESOSMENUS_5_2073058421__K2] on ieepo.dbo.ACCESOSMENUS REBUILD;Print ''Tabla _dta_index_ACCESOSMENUS_5_2073058421__K2 indexada;''
ALTER INDEX [PK_HCiudad_Primaria_1] on ieepo.dbo.HCiudad_Primaria REBUILD;Print ''Tabla PK_HCiudad_Primaria_1 indexada;''
ALTER INDEX [Idx_hCiudad_Primariaemp] on ieepo.dbo.HCiudad_Primaria REBUILD;Print ''Tabla Idx_hCiudad_Primariaemp indexada;''
ALTER INDEX [Idx_hCiudad_Primariafecha] on ieepo.dbo.HCiudad_Primaria REBUILD;Print ''Tabla Idx_hCiudad_Primariafecha indexada;''
ALTER INDEX [XPKHBajas] on ieepo.dbo.HBajas REBUILD;Print ''Tabla XPKHBajas indexada;''
ALTER INDEX [IE1_Fecha] on ieepo.dbo.HBajas REBUILD;Print ''Tabla IE1_Fecha indexada;''
ALTER INDEX [XPKTCategoriasInfo] on ieepo.dbo.TCategoriasInfo REBUILD;Print ''Tabla XPKTCategoriasInfo indexada;''
ALTER INDEX [PK_Filler_config] on ieepo.dbo.Filler_config REBUILD;Print ''Tabla PK_Filler_config indexada;''
ALTER INDEX [idx_Recalculo_Empleados] on ieepo.dbo.Recalculo_Empleados REBUILD;Print ''Tabla idx_Recalculo_Empleados indexada;''
ALTER INDEX [PK_Hpuestos] on ieepo.dbo.Hpuestos REBUILD;Print ''Tabla PK_Hpuestos indexada;''
ALTER INDEX [IX_Hpuestos] on ieepo.dbo.Hpuestos REBUILD;Print ''Tabla IX_Hpuestos indexada;''
ALTER INDEX [IE1_Emp_Fecha] on ieepo.dbo.Hpuestos REBUILD;Print ''Tabla IE1_Emp_Fecha indexada;''
ALTER INDEX [IE2_Fecha] on ieepo.dbo.Hpuestos REBUILD;Print ''Tabla IE2_Fecha indexada;''
ALTER INDEX [PK_TCia] on ieepo.dbo.TCia REBUILD;Print ''Tabla PK_TCia indexada;''
ALTER INDEX [AK1_Cia] on ieepo.dbo.TCia REBUILD;Print ''Tabla AK1_Cia indexada;''
ALTER INDEX [pk_HDiasEconomicosPensionado] on ieepo.dbo.HDiasEconomicosPensionado REBUILD;Print ''Tabla pk_HDiasEconomicosPensionado indexada;''
ALTER INDEX [Idx_hDiasEconomicosPensionadoBene] on ieepo.dbo.HDiasEconomicosPensionado REBUILD;Print ''Tabla Idx_hDiasEconomicosPensionadoBene indexada;''
ALTER INDEX [Idx_hDiasEconomicosPensionadofecha] on ieepo.dbo.HDiasEconomicosPensionado REBUILD;Print ''Tabla Idx_hDiasEconomicosPensionadofecha indexada;''
ALTER INDEX [PK_FUP_Autorizacion_id_documento_detalle] on ieepo.dbo.FUP_Autorizacion REBUILD;Print ''Tabla PK_FUP_Autorizacion_id_documento_detalle indexada;''
ALTER INDEX [_dta_index_FUP_Autorizacion_5_2101522571__K1] on ieepo.dbo.FUP_Autorizacion REBUILD;Print ''Tabla _dta_index_FUP_Autorizacion_5_2101522571__K1 indexada;''
ALTER INDEX [IE1_FolioFonacot] on ieepo.dbo.Fonacot REBUILD;Print ''Tabla IE1_FolioFonacot indexada;''
ALTER INDEX [PK__TNivel1S__FE2CD5B43C6B8CDF] on ieepo.dbo.TNivel1SE REBUILD;Print ''Tabla PK__TNivel1S__FE2CD5B43C6B8CDF indexada;''
ALTER INDEX [idx_Recalculo_HistPagos] on ieepo.dbo.nom_Recalculo_histpagos REBUILD;Print ''Tabla idx_Recalculo_HistPagos indexada;''
ALTER INDEX [idx_Recalculo_HistPagos2] on ieepo.dbo.nom_Recalculo_histpagos REBUILD;Print ''Tabla idx_Recalculo_HistPagos2 indexada;''
ALTER INDEX [PK_HRango] on ieepo.dbo.HRango REBUILD;Print ''Tabla PK_HRango indexada;''
ALTER INDEX [Idx_hRangofecha] on ieepo.dbo.HRango REBUILD;Print ''Tabla Idx_hRangofecha indexada;''
ALTER INDEX [Idx_hRangoplaza] on ieepo.dbo.HRango REBUILD;Print ''Tabla Idx_hRangoplaza indexada;''
ALTER INDEX [PK_HCiudadSecu_1] on ieepo.dbo.HCiudadSecu REBUILD;Print ''Tabla PK_HCiudadSecu_1 indexada;''
ALTER INDEX [Idx_hCiudadSecuemp] on ieepo.dbo.HCiudadSecu REBUILD;Print ''Tabla Idx_hCiudadSecuemp indexada;''
ALTER INDEX [Idx_hCiudadSecufecha] on ieepo.dbo.HCiudadSecu REBUILD;Print ''Tabla Idx_hCiudadSecufecha indexada;''
ALTER INDEX [PK_TCiudad] on ieepo.dbo.TCiudad REBUILD;Print ''Tabla PK_TCiudad indexada;''
ALTER INDEX [PK_TAreasPlazas] on ieepo.dbo.TAreasPlazas REBUILD;Print ''Tabla PK_TAreasPlazas indexada;''
ALTER INDEX [XPKFonacotEmp] on ieepo.dbo.FonacotEmp REBUILD;Print ''Tabla XPKFonacotEmp indexada;''
ALTER INDEX [PK__TNivel2S__FECB00CD48540E8A] on ieepo.dbo.TNivel2SE REBUILD;Print ''Tabla PK__TNivel2S__FECB00CD48540E8A indexada;''
ALTER INDEX [idx_Recalculo_Excepciones] on ieepo.dbo.Recalculo_Excepciones REBUILD;Print ''Tabla idx_Recalculo_Excepciones indexada;''
ALTER INDEX [IDEMP] on ieepo.dbo.CD_EMPLEADO REBUILD;Print ''Tabla IDEMP indexada;''
ALTER INDEX [PK_TClaCardex] on ieepo.dbo.TClaCardex REBUILD;Print ''Tabla PK_TClaCardex indexada;''
ALTER INDEX [Clave] on ieepo.dbo.TClaCardex REBUILD;Print ''Tabla Clave indexada;''
ALTER INDEX [PK__THelpAmigos__0012575E] on ieepo.dbo.THelpAmigos REBUILD;Print ''Tabla PK__THelpAmigos__0012575E indexada;''
ALTER INDEX [DatosPlazaHoy_id_plaza] on ieepo.dbo.DatosPlazaHoy REBUILD;Print ''Tabla DatosPlazaHoy_id_plaza indexada;''
ALTER INDEX [PK_AccesosSistemas] on ieepo.dbo.AccesosSistemas REBUILD;Print ''Tabla PK_AccesosSistemas indexada;''
ALTER INDEX [IE1_Id_Usuario] on ieepo.dbo.AccesosSistemas REBUILD;Print ''Tabla IE1_Id_Usuario indexada;''
ALTER INDEX [PK_HNUPUE] on ieepo.dbo.HNUPUE REBUILD;Print ''Tabla PK_HNUPUE indexada;''
ALTER INDEX [Idx_hNUPUEfecha] on ieepo.dbo.HNUPUE REBUILD;Print ''Tabla Idx_hNUPUEfecha indexada;''
ALTER INDEX [Idx_hNUPUEplaza] on ieepo.dbo.HNUPUE REBUILD;Print ''Tabla Idx_hNUPUEplaza indexada;''
ALTER INDEX [PK_HCodigoPago_1] on ieepo.dbo.HCodigoPago REBUILD;Print ''Tabla PK_HCodigoPago_1 indexada;''
ALTER INDEX [Idx_hCodigoPagofecha] on ieepo.dbo.HCodigoPago REBUILD;Print ''Tabla Idx_hCodigoPagofecha indexada;''
ALTER INDEX [Idx_hCodigoPagoplaza] on ieepo.dbo.HCodigoPago REBUILD;Print ''Tabla Idx_hCodigoPagoplaza indexada;''
ALTER INDEX [PK_TClasClas] on ieepo.dbo.TClasClas REBUILD;Print ''Tabla PK_TClasClas indexada;''
END
'
GO

GO
PRINT N'Creating [dbo].[SP_BorraTemporalesPorLetras]'
GO
IF OBJECT_ID(N'[dbo].[SP_BorraTemporalesPorLetras]', 'P') IS NULL
EXEC sp_executesql N'--sp_helptext sp_borratemporales

create Procedure [dbo].[SP_BorraTemporalesPorLetras] (  
  @Letras Varchar(20)  -- Nombre de la bd de donde se importan los datos  
)  
As    
Declare @NomTabla  varchar (100), @IdTabla Decimal,  
        @DropTable varchar (200), @Type as char(2),  
        @nError    int     
  
-- INICIA SP  *******************************************************************************  
Begin  
--  Desarrollo  : Dulce del Angel.  
--  Objetivo : Borrar las tablas temporales  
--  Fecha       : Agosto 21, 2004    
  
  
 Select @nError = 0  
   
-- Primer cursor para obtener las tablas de la bd origen.       
   Declare Cur_Tablas Cursor For  
       Select Name, Id, Type From sysobjects   
       where (type = ''U'' or type = ''V'') and left(name,1+len(@Letras)) = ''Z''+@Letras   
       Order By Name  
  
   Open Cur_Tablas  
   Fetch Next From Cur_Tablas Into @NomTabla, @IdTabla, @Type  
   print ''Antes While''  
   While @@Fetch_Status = 0    
   Begin       
       If @Type = ''U''  
            Select @DropTable = ''Drop Table '' +  @NomTabla  
       Else  
     Select @DropTable = ''Drop View '' +  @NomTabla  
       Print @DropTable  
       Exec(@DropTable)  
       Fetch Next From Cur_Tablas Into @NomTabla, @IdTabla, @Type  
   End  
   Close Cur_Tablas  
   Deallocate Cur_Tablas     
  
-- TERMINA SP  *******************************************************************************  
  
Fin:  
Return @nError  
End  
        
  

'
GO

GO
PRINT N'Creating [dbo].[SP_BorraTemporalesProceso]'
GO
IF OBJECT_ID(N'[dbo].[SP_BorraTemporalesProceso]', 'P') IS NULL
EXEC sp_executesql N'CREATE Procedure [dbo].[SP_BorraTemporalesProceso]

	 @TablaTemp	Varchar(100)  -- Nombre de la bd de donde se importan los datos



As  

		declare @cadSelectCursor varchar (400)
begin
  set @cadSelectCursor = ''Insert into TrashTemp (nomtabla,tipo) Select name as nomtabla, case when Type  = ''''U'''' then ''''T'''' Else ''''V'''' End as tipo  From sysobjects Where (type = ''''U'''' or type = ''''V'''') and name in (Select Nombre_Tabla_Temporales from '' + @TablaTemp + '') ''
  exec(@cadSelectCursor)
end      
'
GO

GO
PRINT N'Creating [dbo].[SP_BorraTemporalesProceso_Toño]'
GO
IF OBJECT_ID(N'[dbo].[SP_BorraTemporalesProceso_Toño]', 'P') IS NULL
EXEC sp_executesql N'CREATE Procedure [dbo].[SP_BorraTemporalesProceso_Toño] 

	 @TablaTemp	Varchar(100)  -- Nombre de la bd de donde se importan los datos



As  

		declare @cadSelectCursor varchar (300)
begin
  set @cadSelectCursor = ''Insert into TrashTemp (nomtabla,tipo) Select name as nomtabla, case when Type  = ''''U'''' then ''''T'''' Else ''''V'''' End as tipo  From sysobjects Where (type = ''''U'''' or type = ''''V'''') and name in (Select Nombre_Tabla_Temporales from '' + @TablaTemp + '') ''
  print(@cadSelectCursor)
end      
'
GO

GO
PRINT N'Creating [dbo].[SP_BorraTemporales]'
GO
IF OBJECT_ID(N'[dbo].[SP_BorraTemporales]', 'P') IS NULL
EXEC sp_executesql N'Create Procedure [dbo].[SP_BorraTemporales] (
	 @BDOrigen	Varchar(20)  -- Nombre de la bd de donde se importan los datos
)
As  
Declare @NomTabla  varchar (100), @IdTabla Decimal,
        @DropTable varchar (200), @Type as char(2),
        @nError    int   

-- INICIA SP  *******************************************************************************
Begin
--  Desarrollo  : Dulce del Angel.
--  Objetivo	: Borrar las tablas temporales
--  Fecha       : Agosto 21, 2004  


 Select @nError = 0
 
-- Primer cursor para obtener las tablas de la bd origen.     
   Declare Cur_Tablas Cursor For
       Select Name, Id, Type From sysobjects 
       where (type = ''U'' or type = ''V'') and left(name,1) = ''Z''
       Order By Name

   Open Cur_Tablas
   Fetch Next From Cur_Tablas Into @NomTabla, @IdTabla, @Type
   print ''Antes While''
   While @@Fetch_Status = 0  
   Begin     
       If @Type = ''U''
            Select @DropTable = ''Drop Table '' +  @NomTabla
       Else
	    Select @DropTable = ''Drop View '' +  @NomTabla
       Print @DropTable
       Exec(@DropTable)
       Fetch Next From Cur_Tablas Into @NomTabla, @IdTabla, @Type
   End
   Close Cur_Tablas
   Deallocate Cur_Tablas   

-- TERMINA SP  *******************************************************************************

Fin:
Return @nError
End
      

'
GO

GO
PRINT N'Creating [dbo].[SP_BorraTemporales_2]'
GO
IF OBJECT_ID(N'[dbo].[SP_BorraTemporales_2]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[SP_BorraTemporales_2]
@BDOrigen varchar(20)
WITH EXEC AS CALLER
AS
Declare @NomTabla  varchar (100), @IdTabla Decimal, 

        @DropTable varchar (200), @Type as char(2), 

        @nError    int    

 

-- INICIA SP  ******************************************************************************* 

Begin 

--  Desarrollo  : Dulce del Angel. 

--  Objetivo     : Borrar las tablas temporales 

--  Fecha       : Agosto 21, 2004   

 

 

 Select @nError = 0 

  

-- Primer cursor para obtener las tablas de la bd origen.      

   Declare Cur_Tablas Cursor For 

       Select Name, Id, Type From sysobjects  

       where (type = ''U'' or type = ''V'') and left(name,1) = ''Z'' and crdate <= dateadd(n,-1000 ,getdate()) 

       Order By Name 

 

   Open Cur_Tablas 

   Fetch Next From Cur_Tablas Into @NomTabla, @IdTabla, @Type 

   print ''Antes While'' 

   While @@Fetch_Status = 0   

   Begin      

       If @Type = ''U'' 

            Select @DropTable = ''Drop Table '' +  @NomTabla 

       Else 

         Select @DropTable = ''Drop View '' +  @NomTabla 

       Print @DropTable 

       Exec(@DropTable) 

       Fetch Next From Cur_Tablas Into @NomTabla, @IdTabla, @Type 

   End 

   Close Cur_Tablas 

   Deallocate Cur_Tablas    

 

-- TERMINA SP  ******************************************************************************* 

 

Fin: 

Return @nError 

End'
GO

GO
PRINT N'Creating [dbo].[SP_BorraTemporales_Atras]'
GO
IF OBJECT_ID(N'[dbo].[SP_BorraTemporales_Atras]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[SP_BorraTemporales_Atras]
@Horas int
WITH EXEC AS CALLER
AS
Declare @NomTabla  varchar (100), @IdTabla Decimal, 
        @DropTable varchar (200), @Type as char(2), 
        @nError    int, @_Horas int = @Horas
-- INICIA SP  ******************************************************************************* 
Begin 
--  Desarrollo  : Dulce del Angel. 
--  Objetivo     : Borrar las tablas temporales 
--  Fecha       : Agosto 21, 2004   
 Select @nError = 0 
-- Primer cursor para obtener las tablas de la bd origen.      
   Declare Cur_Tablas Cursor For 
       Select Name, Id, Type From sysobjects  
       where (type = ''U'' or type = ''V'') and left(name,1) = ''Z'' and crdate <= dateadd(hh,(-1) * @_Horas ,getdate()) 
       Order By Name 
   Open Cur_Tablas 
   Fetch Next From Cur_Tablas Into @NomTabla, @IdTabla, @Type 
   print ''Antes While'' 
   While @@Fetch_Status = 0  
   Begin      
       If @Type = ''U'' 
            Select @DropTable = ''Drop Table '' +  @NomTabla 
       Else 
            Select @DropTable = ''Drop View '' +  @NomTabla 
       Print @DropTable 
       Exec(@DropTable) 
       Fetch Next From Cur_Tablas Into @NomTabla, @IdTabla, @Type 
   End 
   Close Cur_Tablas 
   Deallocate Cur_Tablas    
-- TERMINA SP  ******************************************************************************* 
Fin: 
Return @nError 
End
'
GO

GO
PRINT N'Creating [dbo].[SP_BorraTemporales_XLetras]'
GO
IF OBJECT_ID(N'[dbo].[SP_BorraTemporales_XLetras]', 'P') IS NULL
EXEC sp_executesql N'CREATE Procedure [dbo].[SP_BorraTemporales_XLetras] (    
  @Letras Varchar(20)  -- Nombre de la bd de donde se importan los datos    
)    
As      
Declare @NomTabla  varchar (100), @IdTabla Decimal,    
        @DropTable varchar (200), @Type as char(2),    
        @nError    int       
    
-- INICIA SP  *******************************************************************************    
Begin     
    
 Select @nError = 0    
     
-- Primer cursor para obtener las tablas de la bd origen.         
   Declare Cur_Tablas Cursor For    
       Select Name, Id, Type From sysobjects     
       where (type = ''U'' or type = ''V'') and name like ''Z''+@Letras +''%''  and crdate <= dateadd(n,-150 ,getdate())    
       Order By Name    
    
   Open Cur_Tablas    
   Fetch Next From Cur_Tablas Into @NomTabla, @IdTabla, @Type    
   print ''Antes While''    
   While @@Fetch_Status = 0      
   Begin         
       If @Type = ''U''    
            Select @DropTable = ''Drop Table '' +  @NomTabla    
       Else    
     Select @DropTable = ''Drop View '' +  @NomTabla    
       Print @DropTable    
       Exec(@DropTable)    
       Fetch Next From Cur_Tablas Into @NomTabla, @IdTabla, @Type    
   End    
   Close Cur_Tablas    
   Deallocate Cur_Tablas       
    
-- TERMINA SP  *******************************************************************************    
    
Fin:    
Return @nError    
End  
  '
GO

GO
PRINT N'Creating [dbo].[SP_CambiaPropietario]'
GO
IF OBJECT_ID(N'[dbo].[SP_CambiaPropietario]', 'P') IS NULL
EXEC sp_executesql N'CREATE Procedure [dbo].[SP_CambiaPropietario] (
	 @UserOrigen	Varchar(20), @UserNuevo 	Varchar(20) 
)
as
Declare @NomTabla  varchar (50), @IdTabla Decimal,@Select_Existe varchar(300),  @Query  varchar(8000)
Begin
   Declare Cur_Tablas Cursor For
       Select Name, Id From sysobjects 
       Where type in (''U'',''V'',''P'')  and uid<>1 Order By Name
   Open Cur_Tablas
   Create Table ##TblResultado( Query varchar(8000))
   Fetch Next From Cur_Tablas Into @NomTabla, @IdTabla
   While @@Fetch_Status = 0  
   Begin
      Select @Select_Existe = ''exec sp_changeobjectowner '' + char(39)+ ''amigos.''+ @NomTabla + char(39) + '',''+ char(39)+ ''dbo'' + char(39)
      -- exec @Select_Existe
         Insert ##TblResultado(Query) Values (@Select_Existe)
	
--       exec sp_changeobjectowner ''sia.AdminDisfrutes'', ''dbo'' 
       Fetch Next From Cur_Tablas Into @NomTabla, @IdTabla
   End
   Close Cur_Tablas
   Deallocate Cur_Tablas   

   Declare Cur_Resultado Cursor For
       Select Query from ##TblResultado 
       Order by Query desc 
   Open Cur_Resultado
   Fetch Next From Cur_Resultado Into @Query
   While @@Fetch_Status = 0  
   Begin
         Print @Query
         Fetch Next From Cur_Resultado Into @Query
   End
   Close Cur_Resultado
   Deallocate Cur_Resultado

   Drop Table ##TblResultado
end
'
GO

GO
PRINT N'Creating [dbo].[SP_GeneraInsert]'
GO
IF OBJECT_ID(N'[dbo].[SP_GeneraInsert]', 'P') IS NULL
EXEC sp_executesql N'
Create procedure [dbo].[SP_GeneraInsert]
	@TableName nvarchar(255), @Where varchar(255)
AS
set nocount on
declare @ColumnName varchar(8000)
      , @ColumnType nvarchar(255)
      , @ColOrder int
      , @ExecStr  varchar(8000)
      , @HeadStr  varchar(8000)
      , @MaxCol int
      , @ColList bit
Begin
	set @ColList = 1
	set @HeadStr = ''(''
	select @MaxCol =  MAX(ORDINAL_POSITION) from INformation_schema.columns
		WHERE Table_Name=@TableName

	declare ColumnList cursor scroll for
	select COLUMN_NAME,DATA_TYPE,ORDINAL_POSITION from information_schema.columns
		WHERE Table_Name=@TableName ORDER BY ORDINAL_POSITION

	open ColumnList
	fetch first
	from ColumnList
	into @ColumnName, @ColumnType, @ColOrder
	while @@fetch_status <> -1
	begin
  		set @HeadStr = @HeadStr +
                case when @ColOrder < @MaxCol then @ColumnName + '', ''
                     else @ColumnName + '')''
                end

 		fetch next
   		 from ColumnList
    		 into @ColumnName, @ColumnType, @ColOrder
	end

	if @ColList = 1
  		set @ExecStr = ''SELECT ''''INSERT INTO '' + @TableName + '' '' + @HeadStr + ''
			VALUES ('''' + ''
	else
 		 set @ExecStr = ''SELECT ''''INSERT INTO '' + @TableName + '' VALUES ('''' + ''

	fetch first
	from ColumnList
	into @ColumnName, @ColumnType, @ColOrder
	while @@fetch_status <> -1
	begin

 		 set @ExecStr = @ExecStr +
                  case when @ColumnType in (''tinyint'', ''bit'', ''smallint'',
			''int'', ''money'') then ''convert(varchar, '' + @ColumnName + '')''
                      when @ColumnType in (''datetime'') then '''''''''''''''''' +
			replace(convert(varchar, '' + @ColumnName + '', 102), ''''.'''', '''''''') + ''''''''''''''''''

                      else '''''''''' + '''''''''''''''' + '' +''replace('' + @ColumnName
			+ '', '''''''''''''''', '''''''''''''''''''''''') + '''''''''''' ''''''
                        end +
                  case when @ColOrder < @MaxCol then ''+ '''',''''+''
                      else '' + '''')'''' FROM '' + @TableName
                        end
 		 fetch next
   		 from ColumnList
   		 into @ColumnName, @ColumnType, @ColOrder
         End
  	 deallocate ColumnList

         -- Le Agrego el Where
        Set @ExecStr = @ExecStr + '' '' + @Where
  	-- Muestra el Insert
 	-- select @Execstr
         Print @Execstr
 	 -- Ejecuta el Inser para traer los datos.
 	 exec (@Execstr)

end
'
GO

GO
PRINT N'Creating [dbo].[SP_ImportaDatos]'
GO
IF OBJECT_ID(N'[dbo].[SP_ImportaDatos]', 'P') IS NULL
EXEC sp_executesql N'Create Procedure [dbo].[SP_ImportaDatos] (
	 @BDOrigen	Varchar(20)  -- Nombre de la bd de donde se importan los datos
)
As  
Declare @NomTabla  varchar (50), @IdTabla Decimal,
        @NomCampo  varchar (50), @Select_Existe varchar(300), @Existe varchar(20),
        @Select varchar(900), @Truncate varchar(100), @IdTablaOrigen Decimal,
        @Query  varchar(8000),
        @nError    int   

-- INICIA SP  *******************************************************************************
Begin
--  Desarrollo  : Dulce del Angel.
--  Objetivo	: Importar la información de otra BD con la misma estructura
--  Fecha       : Agosto 21, 2004  


 Select @nError = 0
 
--  Tabla resultado
   Create Table ##TblResultado( Query varchar(8000))

-- Primer cursor para obtener las tablas de la bd origen.     
   Declare Cur_Tablas Cursor For
       Select Name, Id From sysobjects 
       Where type = ''U'' Order By Name
   Open Cur_Tablas
   Fetch Next From Cur_Tablas Into @NomTabla, @IdTabla
   While @@Fetch_Status = 0  
   Begin
       
       --Checo si existe la tabla en la bd    
       Select @Select_Existe = ''Select name, Id into ##TablaTmp from '' + @BDOrigen + ''..sysobjects where name = '' + char(39)+ @NomTabla + char(39)
       exec(@Select_Existe)
       Select @IdTablaOrigen = Id from ##TablaTmp
       --Print @IdTablaOrigen
       if exists(Select  Id from ##TablaTmp)
       Begin
               Print '' ------------- Tabla  ------------'' + @NomTabla
               Select @Select = ''Insert into '' + @NomTabla + '' Select ''
	       -- Segundo Cursos para obtener los campos de la tabla
	       Declare Cur_Campos Cursor For
	       Select Name From SysColumns 
	           Where Id = @IdTabla
		   Open Cur_Campos
	       Fetch Next From Cur_Campos Into @NomCampo
	       While @@Fetch_Status = 0  
	       Begin  
		       --Checo si existe la tabla en la bd    
                       Select @Select_Existe = Null
		       Select @Select_Existe = ''Select name into ##CampoTmp from '' + @BDOrigen + ''..SysColumns where name = '' + char(39)+ @NomCampo + char(39) + '' And Id = '' + Convert(varchar,@IdTablaOrigen)
                      -- Print @Select_Existe
		       exec(@Select_Existe)
		       if exists(Select * from ##CampoTmp )
		       Begin
                          --   Print ''dentro''  
		             if Upper(@NomCampo) = ''FULL'' or Upper(@NomCampo) = ''CHECK'' or Upper(@NomCampo) = ''TOP'' or Upper(@NomCampo) = ''DESC''or Upper(@NomCampo) = ''LEFT''       
		                  Select @Select = @Select + ''['' + @NomCampo + ''],'' 
		             else
		                  Select @Select = @Select + @NomCampo + '','' 
		       End	
		       Drop Table ##CampoTmp	
	               Fetch Next From Cur_Campos Into @NomCampo
	       End
	       Close Cur_Campos
	       Deallocate Cur_Campos   
	       --Le quito la ultima coma
	       Select @Select = left(@Select, len(@Select) - 1)
	       -- Le agrego la parte final del select
	       Select @Select = @Select + '' from '' + @BDOrigen + ''..'' + @NomTabla
            
	       Select @Truncate = ''truncate table '' + @NomTabla
 	      -- Print ''Truncate'' + @Truncate
	      -- exec (@Truncate)
              -- Print ''Select '' + @Select
	      -- exec (@Select)
              Insert ##TblResultado(Query) Values (@Truncate)
              Insert ##TblResultado(Query) Values (@Select)
       End
       Drop Table ##TablaTmp
       Fetch Next From Cur_Tablas Into @NomTabla, @IdTabla
   End
   Close Cur_Tablas
   Deallocate Cur_Tablas   

   Print '' Resultado Final ''
   -- Lo hago con un cursos para usar el print porque con el select no sale completo.
   Declare Cur_Resultado Cursor For
       Select Query from ##TblResultado 
       Order by Query desc 
   Open Cur_Resultado
   Fetch Next From Cur_Resultado Into @Query
   While @@Fetch_Status = 0  
   Begin
         Print @Query
         Fetch Next From Cur_Resultado Into @Query
   End
   Close Cur_Resultado
   Deallocate Cur_Resultado

   Drop Table ##TblResultado
-- TERMINA SP  *******************************************************************************

Fin:
Return @nError
End
      
'
GO

GO
PRINT N'Creating [dbo].[SP_InsertSelect]'
GO
IF OBJECT_ID(N'[dbo].[SP_InsertSelect]', 'P') IS NULL
EXEC sp_executesql N'Create Procedure [dbo].[SP_InsertSelect] (
	 @BDOrigen	Varchar(20),  -- Nombre de la bd de donde se importan los datos
         @NomTabla  varchar (50)      -- Nombre de la tabla que se va a generar el Insert_Select  
)
As  
Declare @IdTabla Decimal,
        @NomCampo  varchar (50), @Select_Existe varchar(300), @Existe varchar(20),
        @Select varchar(900), @Truncate varchar(100), @IdTablaOrigen Decimal,
        @nError    int   

-- INICIA SP  *******************************************************************************
Begin
--  Desarrollo  : Dulce del Angel.
--  Objetivo	: Generar el select a partir de una tabla
--  Fecha       : Agosto 21, 2004  


 Select @nError = 0
 
-- Primer cursor para obtener las tablas de la bd origen.     
--   Declare Cur_Tablas Cursor For
--       Select Name, Id From sysobjects 
--       Where type = ''U'' Order By Name
--   Open Cur_Tablas
--   Fetch Next From Cur_Tablas Into @NomTabla, @IdTabla
--   While @@Fetch_Status = 0  
--   Begin
       
       --Checo si existe la tabla en la bd    
       Select @Select_Existe = ''Select name, Id into ##TablaTmp from '' + @BDOrigen + ''..sysobjects where name = '' + char(39)+ @NomTabla + char(39)
       exec(@Select_Existe)
       Select @IdTablaOrigen = Id from ##TablaTmp
       --Print @IdTablaOrigen
       if exists(Select Id from ##TablaTmp)
       Begin
               Select @IdTabla = Id from ##TablaTmp           
               Print '' ------------- Tabla  ------------'' + @NomTabla
               Select @Select = ''Insert into '' + @NomTabla + '' Select ''
	       -- Segundo Cursos para obtener los campos de la tabla
	       Declare Cur_Campos Cursor For
	       Select Name From SysColumns 
	           Where id = @IdTabla
		   Open Cur_Campos
	       Fetch Next From Cur_Campos Into @NomCampo
	       While @@Fetch_Status = 0  
	       Begin  
		       --Checo si existe la tabla en la bd    
                       Select @Select_Existe = Null
		       Select @Select_Existe = ''Select name into ##CampoTmp from '' + @BDOrigen + ''..SysColumns where name = '' + char(39)+ @NomCampo + char(39) + '' And Id = '' + Convert(varchar,@IdTablaOrigen)
                      -- Print @Select_Existe
		       exec(@Select_Existe)
		       if exists(Select * from ##CampoTmp )
		       Begin
                          --   Print ''dentro''  
		             if Upper(@NomCampo) = ''FULL'' or Upper(@NomCampo) = ''CHECK'' or Upper(@NomCampo) = ''TOP'' or Upper(@NomCampo) = ''DESC''or Upper(@NomCampo) = ''LEFT''       
		                  Select @Select = @Select + ''['' + @NomCampo + ''],'' 
		             else
		                  Select @Select = @Select + @NomCampo + '','' 
		       End	
		       Drop Table ##CampoTmp	
	               Fetch Next From Cur_Campos Into @NomCampo
	       End
	       Close Cur_Campos
	       Deallocate Cur_Campos   
	       --Le quito la ultima coma
	       Select @Select = left(@Select, len(@Select) - 1)
	       -- Le agrego la parte final del select
	       Select @Select = @Select + '' from '' + @BDOrigen + ''..'' + @NomTabla
            
--	       Select @Truncate = ''truncate table '' + @NomTabla
-- 	       Print ''Truncate'' + @Truncate
--	       exec (@Truncate)
               Print @Select
--	       exec (@Select)
       End
--       Drop Table ##TablaTmp
--       Fetch Next From Cur_Tablas Into @NomTabla, @IdTabla
--   End
--   Close Cur_Tablas
--   Deallocate Cur_Tablas   

-- TERMINA SP  *******************************************************************************

Fin:
Return @nError
End
      
'
GO

GO
PRINT N'Creating [dbo].[SP_ReduceArchivo]'
GO
IF OBJECT_ID(N'[dbo].[SP_ReduceArchivo]', 'P') IS NULL
EXEC sp_executesql N'create procedure [dbo].[SP_ReduceArchivo](@MaximoMB bigint,@File varchar(50))
as
begin
declare @tamaño bigint
--use iea
set @tamaño=0
select @tamaño=size from sysfiles where name=@File
if @tamaño*8192 >@MaximoMB*1024*1024
	DBCC SHRINKFILE (@File, 0)
end
'
GO

GO
PRINT N'Creating [dbo].[SP_otorgaderechos]'
GO
IF OBJECT_ID(N'[dbo].[SP_otorgaderechos]', 'P') IS NULL
EXEC sp_executesql N'CREATE Procedure [dbo].[SP_otorgaderechos] 
As  
Declare @nError    int   

-- INICIA SP  *******************************************************************************
Begin


 Select @nError = 0
 
GRANT SELECT
ON Rep_REP_TRANSPARENCIA
TO transparencia WITH GRANT OPTION

GRANT all
ON Rep_REP_TRANSPARENCIA
TO respaldos WITH GRANT OPTION


GRANT SELECT
ON Rep_REP_viaticos
TO viaticos WITH GRANT OPTION

GRANT all
ON Rep_REP_viaticos
TO respaldos WITH GRANT OPTION


-- TERMINA SP  *******************************************************************************

Fin:
Return @nError
End
'
GO

GO
PRINT N'Creating [dbo].[SP_otorgaderechosweb]'
GO
IF OBJECT_ID(N'[dbo].[SP_otorgaderechosweb]', 'P') IS NULL
EXEC sp_executesql N'CREATE Procedure [dbo].[SP_otorgaderechosweb] 
As  
Declare @nError    int   

-- INICIA SP  *******************************************************************************
Begin


 Select @nError = 0
GRANT SELECT ON 
calennomina
TO web

GRANT SELECT ON 
CD_PLAZA
TO web 

GRANT SELECT ON 
CNParentescos
TO web 

GRANT SELECT ON
conceptos
TO web 

GRANT SELECT ON
config
TO web 

GRANT SELECT ON
constancial
TO web 

GRANT SELECT ON
deducsfijas
TO web 

GRANT SELECT ON
fonacot
TO web 

GRANT SELECT ON
HNivelPlazas
TO web 

GRANT SELECT ON
hpuestosplazas
TO web 

GRANT SELECT ON
htipoplaza
TO web 

GRANT SELECT ON
nom_histpagos
TO web 

GRANT SELECT ON
plazaempleados
TO web 

GRANT SELECT ON
RastreoImpuesto
TO web 

GRANT SELECT ON
tablaconfigorgan
TO web 

GRANT SELECT ON
TArea_prof
TO web 

GRANT SELECT ON
TCiudad
TO web 

GRANT SELECT ON
TClase_Licencia
TO web 

GRANT SELECT ON
TColonia
TO web 

GRANT SELECT ON
TDonador
TO web 

GRANT SELECT ON
TEstados
TO web 

GRANT SELECT ON
TEstatura
TO web 

GRANT SELECT ON
TGrado_Academico
TO web 

GRANT SELECT ON
TNacionalidad
TO web 

GRANT SELECT ON
TNivel
TO web 

GRANT SELECT ON
TPeso
TO web 

GRANT SELECT ON
tprofesion
TO web 

GRANT SELECT ON
TSeguro_Gastos
TO web 

GRANT SELECT ON
TSeguro_Vida
TO web 

GRANT SELECT ON
TTalla_Pantalon
TO web 

GRANT SELECT ON
TTalla_Saco_Camisa
TO web 

GRANT SELECT ON
TTipo_Sangre
TO web 

GRANT SELECT ON
ValoresMatriz1
TO web 

GRANT SELECT ON
vistatablalongitud
TO web 

GRANT SELECT, INSERT, UPDATE ON
CNNombres
TO web 

GRANT SELECT, INSERT, UPDATE ON
RAlergias
TO web 

GRANT SELECT, INSERT, UPDATE ON
RArea_Prof
TO web 

GRANT SELECT, INSERT, UPDATE ON
RClase_Licencia
TO web 

GRANT SELECT, INSERT, UPDATE ON
RDonador
TO web 

GRANT SELECT, INSERT, UPDATE ON
REstatura
TO web 

GRANT SELECT, INSERT, UPDATE ON
RGrado_Academico
TO web 

GRANT SELECT, INSERT, UPDATE ON
Rpeso
TO web 

GRANT SELECT, INSERT, UPDATE ON
RProfesion
TO web 

GRANT SELECT, INSERT, UPDATE ON
RSeguro_Gastos
TO web 

GRANT SELECT, INSERT, UPDATE ON
RSeguro_Vida
TO web 

GRANT SELECT, INSERT, UPDATE ON
RTalla_Pantalon
TO web 

GRANT SELECT, INSERT, UPDATE ON
RTalla_Saco_Camisa
TO web 

GRANT SELECT, INSERT, UPDATE ON
RTipo_Sangre
TO web 

GRANT SELECT, INSERT, UPDATE ON
TconstanciaLaboral
TO web 

GRANT SELECT, INSERT, UPDATE ON
TDirecciones
TO web 

GRANT SELECT, INSERT, UPDATE, DELETE ON
RDatos_Familiares
TO web 

GRANT SELECT, INSERT, UPDATE, DELETE ON
TDatos_Familiares
TO web 

GRANT SELECT ON
Empleados
TO web 

GRANT Update ON 
Empleados (EdoCivil ,sexo)
TO web 

-- TERMINA SP  *******************************************************************************

Fin:
Return @nError
End
'
GO

GO
PRINT N'Creating [dbo].[pagosNompros]'
GO
IF OBJECT_ID(N'[dbo].[pagosNompros]', 'P') IS NULL
EXEC sp_executesql N'--
--exec [pagosNompros] ''MALP480611II'',201002,201003,121;
create procedure [dbo].[pagosNompros]

@rfc varchar(13),
@qnaIni varchar(6),
@qnaFin int,
@idUsuario int
WITH RECOMPILE 
AS
SET NOCOUNT ON;
 
		select 68074156 id_nom,2472id_nom_file,''000224643'' cheque,2 tippag ,''101'' ud ,''20DLI0001F''ct,''072013 AB001000404749'' plaza,''MALP480611II'' rfc,''MARTINEZ LARA PEDRO'' nombre,4 qnapago,201001 desde,201003 hasta, 7472.00 liquido,2010 year
--select * from [POSTGRESQL].nompros.nom where  rfc = ''MALP480611II'' and year in (2010,2011) and (desde between 201002 and 201209 or hasta between 201002 and 201209)

SET NOCOUNT OFF;'
GO

GO
PRINT N'Creating [dbo].[sp_CreaCTONumPagosPlazo]'
GO
IF OBJECT_ID(N'[dbo].[sp_CreaCTONumPagosPlazo]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		Noe Ramirez Ramos
-- Create date: 14/11/2013
-- Description:	Crea una extraccion del cto agregando los numeros de pagos y plazo
-- =============================================
CREATE PROCEDURE [dbo].[sp_CreaCTONumPagosPlazo]
@qna varchar(6)
WITH EXEC AS CALLER
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	declare @hora varchar(6)
	set @hora = replace(convert(varchar(8), getdate(), 114),'':'','''')	
  exec (''select c.*, d.Pagos qnasapli_Calc, d.Plazo qnastot_Calc 
  into dep.dbo.as_cto_''+@hora+''
  from CTO c
  inner join (
    select dbo.PlazosDesdeHasta( dbo.fechaToAnioQuincena(fechapl),''+@qna+'' ) pagos, d.*, c.resultado from DeducsFijas d 
    inner join Conceptos c on c.id_concepto = d.id_concepto
    where d.Status in (''''A'''',''''C'''') and d.Plazo < 100 and dbo.PlazosDesdeHasta( dbo.fechaToAnioQuincena(fechapl),''+@qna+'' ) < 100 and d.id_plaza <> 0
  ) d on d.Id_Emp = c.id_emp and d.id_plaza = c.id_plaza and d.resultado = c.concepto and round(d.Descuento,2) = round((cast(c.importe as float)/100),2)
  where d.Status in (''''A'''',''''C'''') and c.perded = 2 and d.Plazo < 1200'')
  exec(''insert into dep.dbo.as_cto_'' + @hora+ '' (id_emp, id_plaza, id_periodo, cheque, concepto, signo, importe, perded, Desde, Hasta, pro, spr, tippag, punteror, car_pd,Qnasapli,Qnastot, qnasapli_Calc, qnastot_Calc)
  select c.*, d.Pagos qnasapli, d.Plazo qnastot 
  from CTO c
  inner join (
    select dbo.PlazosDesdeHasta(dbo.fechaToAnioQuincena(fechapl),''+@qna+'') pagos, d.*, c.resultado from DeducsFijas d 
    inner join Conceptos c on c.id_concepto = d.id_concepto
    where d.Status in (''''A'''',''''C'''') and d.Plazo < 100 and dbo.PlazosDesdeHasta( dbo.fechaToAnioQuincena(fechapl),''+@qna+'' ) < 100 and d.id_plaza = 0
  ) d on d.Id_Emp = c.id_emp and d.resultado = c.concepto 
  where d.Status in (''''A'''',''''C'''') and c.perded = 2 and d.Plazo < 1200'')
  select ''Tabla generada: dep.dbo.as_cto_''+ @hora +''''


END'
GO

GO
PRINT N'Creating [dbo].[sp_EliminaTempTabla]'
GO
IF OBJECT_ID(N'[dbo].[sp_EliminaTempTabla]', 'P') IS NULL
EXEC sp_executesql N'CREATE procedure [dbo].[sp_EliminaTempTabla] (@Type as varchar(1),@NomTabla  varchar (100), @IdTabla bigint)
as
Declare @DropTable varchar (200),@DeleteTable varchar (200),@Error    int   
Begin
		SET @Error = @@ERROR
		If @Type = ''T''
            Select @DropTable = ''Drop Table '' +  @NomTabla
		Else
			Select @DropTable = ''Drop View '' +  @NomTabla
		Select @DeleteTable = ''Delete from TrashTemp Where id='' +  cast(@IdTabla as varchar(15))
		Print @DropTable
		Print @DeleteTable
		Exec(@DropTable)
		IF (@Error <> 0) GOTO TratarError   
		Exec(@DeleteTable)
        TratarError:
        If @Error<>0
			BEGIN
			PRINT ''Ha ocurrido un error''      
			END

End'
GO

GO
PRINT N'Creating [dbo].[sp_ExportaTablasSubidasADep]'
GO
IF OBJECT_ID(N'[dbo].[sp_ExportaTablasSubidasADep]', 'P') IS NULL
EXEC sp_executesql N'CREATE PROCEDURE [dbo].[sp_ExportaTablasSubidasADep]
WITH EXEC AS CALLER
AS
Declare @NomTabla  varchar (100), @IdTabla Decimal,
        @DropTable varchar (200), @Type as char(2),
        @intotable varchar (300),
        @nError    int   
Begin 


 Select @nError = 0   
   Declare Cur_Tablas Cursor For
       Select Name, Id, Type From sysobjects 
       where (type = ''U'' or type = ''V'') and (left(name,3) = ''ne_'' or left(name,3) = ''ra_'' or left(name,3) = ''by_'')
       Order By Name

   Open Cur_Tablas
   Fetch Next From Cur_Tablas Into @NomTabla, @IdTabla, @Type
   While @@Fetch_Status = 0  
   Begin     
       If @Type = ''U'' 
        begin
            Select @intotable = ''select * into dep.dbo.''+ @NomTabla+'' from '' +  @NomTabla
            Select @DropTable = ''drop table '' +  @NomTabla
        end
      --select ''''+ @intotable     
      --select ''''+ @DropTable
      Exec(@intotable)
      Exec(@DropTable)
      Fetch Next From Cur_Tablas Into @NomTabla, @IdTabla, @Type
   End
   Close Cur_Tablas
   Deallocate Cur_Tablas  
Fin:
Return @nError
End'
GO

GO
PRINT N'Creating [dbo].[sp_InformacionEmpleadoPlaza]'
GO
IF OBJECT_ID(N'[dbo].[sp_InformacionEmpleadoPlaza]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		Noe Ramirez
-- Create date: 2015-02-21
-- Description:	Retorna datos del empleado plaza, la busqueda por rfc, curp o plaza
-- =============================================
CREATE PROCEDURE [dbo].[sp_InformacionEmpleadoPlaza]
@TipoBusqueda int = 0, @Dato varchar(500) = ''''
WITH EXEC AS CALLER
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	-- 0 todo
	-- 1  rfc
	-- 2  curp
	-- 3  plaza
  -- 4 nombre o apellidos

	declare @cadena nvarchar(max)

set @cadena = ''select ''+
'' em.RFC,pi.PlazaIEEPO PLAZA, hp.TIPO, hp.MOTIVO,ts.descri DECRIP_TIPO, tp.destipoplaza DESCRIP_MOTIVO, hh.DESDE, hh.HASTA, v.CT,v.UDP, v.NOMBRE_CT, v.DIRECCION_CT, v.TURNO,v.REGION_CT, em.ApPaterno APELLIDO_PATERNO,em.ApMaterno APELLIDO_MATERNO,em.NOMBRE, em.CURP, em.SEXO, ''+
'' em.Fecha_Nac FECHA_NACIMIENTO, em.EDOCIVIL, em.ESTADO, em.CIUDAD, em.COLONIA, em.CPOSTAL, em.CALLE, em.NUMEXT, em.NUMINT, em.LOCALIDAD,isnull(pp.RFC_PENSION,'''''''') RFC_PENSION, isnull(pp.NOMBRE_PENSION,'''''''') NOMBRE_PENSION, ''+
'' dp.CREACION_PLAZA, dp.VENCIMIENTO_PLAZA, dp.OFICIO_CREACION, dp.OFICIO_CANCELACION, hp.MOVIMIENTO ''+
'' from ( ''+
''   select pe.id_emp,pe.id_plaza, cast(dbo.fechatoanioquincena(pe.fecha) as varchar(6)) Desde,pe.fecha as Fechaini, cast (dbo.fechatoanioquincena((select top 1 pe2.fecha from plazaempleados pe2 where pe2.id_emp = 0   ''+ 
''   and pe2.id_plaza = pe.id_plaza and pe2.fecha > pe.fecha order by pe2.Fecha )) as varchar(6)) Hasta, FechaFin = (select top 1 pe2.fecha from plazaempleados pe2 where pe2.id_emp = 0    ''+
''   and pe2.id_plaza = pe.id_plaza and pe2.fecha > pe.fecha order by pe2.Fecha ), pe.id_nodo from plazaempleados pe where pe.Id_Emp <> 0 ''+
'' ) hh ''+
'' inner join ( ''+
'' select a.id_plaza, max(a.fechaini) fechaini from ( ''+
''   select pe.id_emp,pe.id_plaza, cast(dbo.fechatoanioquincena(pe.fecha) as varchar(6)) Desde,pe.fecha as Fechaini, cast (dbo.fechatoanioquincena((select top 1 pe2.fecha from plazaempleados pe2 where pe2.id_emp = 0  ''+  
''   and pe2.id_plaza = pe.id_plaza and pe2.fecha > pe.fecha order by pe2.Fecha )) as varchar(6)) Hasta, FechaFin = (select top 1 pe2.fecha from plazaempleados pe2 where pe2.id_emp = 0    ''+
''   and pe2.id_plaza = pe.id_plaza and pe2.fecha > pe.fecha order by pe2.Fecha ), pe.id_nodo from plazaempleados pe where pe.Id_Emp <> 0 ) a where a.fechaini <= getdate() group by a.id_plaza ''+
'' ) bb on bb.id_plaza = hh.id_plaza and bb.fechaini = hh.fechaini ''+
'' left join ( ''+
''   select h.id_plaza, h.Fecha, h.Valor_IdCampo Tipo, h2.Valor_IdCampo Motivo, h.Movimiento from hplazas h inner join ( select id_plaza, max(fecha) fecha from hplazas where fecha <= getdate() group by id_plaza ''+
''   ) hh on hh.id_plaza = h.id_plaza and hh.fecha = h.fecha and h.Id_TipoMovPlazas = 2 inner join hplazas h2 on h2.id_plaza = h.id_plaza and h2.Fecha = h.fecha and h2.Id_TipoMovPlazas = 1 ''+
'' ) hp on hp.id_plaza = hh.id_plaza ''+
'' left join ( ''+
''   select e.id_emp, e.rfc, e.curp, e.ApPaterno, e.ApMaterno, e.Nombre, e.SEXO, e.RFCFecha Fecha_Nac, EdoCivil, upper(isnull(te.Descr,'''''''')) Estado, upper(isnull(tc.Descr,'''''''')) Ciudad, upper(isnull(tcc.Descr,'''''''')) Colonia,  ''+
''    isnull(tcc.CPostal,0) CPostal, isnull(td.Calle,'''''''') Calle, isnull(td.NumExt,0) NumExt, isnull(td.NumInt,0) NumInt, isnull(tl.Descr,'''''''') Localidad from empleados e ''+
''   left join TDirecciones td on td.Id_Direccion = e.Id_Direccion left join TEstados te on te.Id_Estado = td.Id_Estado left join TCiudad tc on tc.Id_Ciudad = td.Id_Ciudad ''+
''   left join TColonia tcc on tcc.Id_Colonia = td.Id_Colonia left join TLocalidad tl on tl.id_Localidad = td.Id_Localidad ) em on em.id_emp = hh.id_emp ''+
'' left join ( ''+
'' 	select hb.id_emp, isnull(tb.RFC_Ben,tb.rfc) RFC_Pension, rtrim(tb.ApPaterno)+'''' ''''+rtrim(tb.ApMaterno)+'''' ''''+rtrim(tb.Nombre) Nombre_Pension from HBeneficiario hb inner join TBeneficiario tb on tb.id_Beneficiario = hb.id_beneficiario ''+
'' ) pp on pp.id_emp = hh.Id_Emp ''+
'' left join PlazaIEEPO pi on pi.id_plaza = hh.Id_plaza ''+
'' left join ( ''+
'' 	select v.Id_Nodo, v.Clave CT, tl.UDP,tt.descripcion TURNO, v.Descripcion NOMBRE_CT, isnull(tl.DIRECCION_CT,'''''''') DIRECCION_CT, upper(isnull(TR.Descrip,'''''''')) REGION_CT from VistaTablaLongitud v ''+
'' 	left join TablaLongitudProp_28 tl on tl.id_nodo = v.Id_Nodo left join RCT_Region rr on rr.id_nodo = v.Id_Nodo left join TCT_Region tr on tr.id_CT_Region = rr.id_rel ''+
'' 	left join RCT_Turno rt on rt.id_nodo = v.Id_Nodo left join TCT_Turno tt on tt.id_CT_Turno = rt.id_rel ''+
'' ) v on v.Id_Nodo = hh.id_nodo ''+
'' left join ( ''+
'' 	select p.Id_plaza, p.FechaCreacion CREACION_PLAZA, p.FechaVencimiento VENCIMIENTO_PLAZA, isnull(oc.OficioAfectacionCancelacion,'''''''') OFICIO_CANCELACION, isnull(occ.OficioAfectacionCreacion,'''''''') OFICIO_CREACION ''+
'' 	from plazas p left join ( select o.id_plaza, o.oficioafectacioncancelacion from HOficioAfectacionCancelacion o inner join ( select id_plaza, max(fecha) fecha from HOficioAfectacionCancelacion where fecha <= getdate() group by id_plaza ''+
'' 	) oo on oo.id_plaza = o.id_plaza and oo.fecha = o.fecha ) oc on oc.id_plaza = p.Id_plaza left join ( select hc.id_plaza, hc.OficioAfectacionCreacion from HOficioAfectacionCreacion hc ''+
'' 	inner join ( select id_plaza, max(fecha) Fecha from HOficioAfectacionCreacion where fecha <= getdate() group by id_plaza ) hcc on hcc.id_plaza = hc.id_plaza and hcc.Fecha = HC.fecha ) occ on occ.id_plaza = p.Id_plaza ''+
'' ) dp on dp.Id_plaza = hh.Id_plaza left join TTipoPlaza tp on tp.Id_TipoPlaza = hp.MOTIVO left join TStatusPlaza ts on ts.Id_StatusPlaza =  hp.TIPO''



if @TipoBusqueda = 1
	set @cadena = @cadena + '' where em.RFC in (''+ @Dato +'')''
if @TipoBusqueda = 2
	set @cadena = @cadena + '' where em.CURP in ('' + @Dato + '')''
if @TipoBusqueda = 3
	set @cadena = @cadena + '' where pi.PlazaIEEPO in ('' + @Dato + '')''
if @TipoBusqueda = 4
   set @cadena = @cadena + '' where (rtrim(em.ApPaterno)+'''' ''''+rtrim(em.ApMaterno)+'''' ''''+rtrim(em.NOMBRE)) like ''''%''+ @Dato+''%''''''
if @TipoBusqueda = 5
   set @cadena = @cadena + '' where (rtrim(em.ApPaterno)+'''' ''''+rtrim(em.ApMaterno)+'''' ''''+rtrim(em.NOMBRE)) in (''+ @Dato +'')'' 
  
 set @cadena = @cadena +'' order by em.RFC,em.CURP,hp.Movimiento,pi.PlazaIEEPO''
 exec sp_executesql  @cadena

    
END'
GO

GO
PRINT N'Creating [dbo].[sp_LargestTables]'
GO
IF OBJECT_ID(N'[dbo].[sp_LargestTables]', 'P') IS NULL
EXEC sp_executesql N'--EXEC sp_LargestTables



                create PROC [dbo].[sp_LargestTables](@n int = NULL,@IsSystemAllowed bit = 0) AS

/*=========================================================================

CREATE DATE  : Hari N Sharma CREATION DATE  : 10-09-2007 LAST MODIFICATION DATE : 11-10-2007

PURPOSE : To get a list of User/System tables according to their size. =========================================================================*/

BEGIN  SET NOCOUNT ON  DECLARE @LOW int  SELECT @LOW = LOW FROM master.dbo.spt_values (NOLOCK) WHERE number = 1 AND type = ''E''

 IF @n > 0 SET ROWCOUNT @n

 SELECT TableName,[Row Count],[Size (KB)] FROM  (   SELECT QUOTENAME(USER_NAME(o.uid)) + ''.'' + QUOTENAME(OBJECT_NAME(i.id)) AS TableName,SUM(i.rowcnt) [Row Count],   CONVERT(numeric(15,2),(((CONVERT(numeric(15,2),SUM(i.reserved)) * @LOW) / 1024.0))) AS [Size (KB)]   FROM sysindexes i INNER JOIN sysobjects o (NOLOCK) ON i.id = o.id AND   ((@IsSystemAllowed = 1 AND o.type IN (''U'', ''S'')) OR o.type = ''U'')   WHERE indid IN (0, 1, 255)   GROUP BY QUOTENAME(USER_NAME(o.uid)) + ''.'' + QUOTENAME(OBJECT_NAME(i.id))  ) AS Z  ORDER BY [Size (KB)] DESC

 SET ROWCOUNT 0

END

'
GO

GO
PRINT N'Creating [dbo].[sp_LiberaCache]'
GO
IF OBJECT_ID(N'[dbo].[sp_LiberaCache]', 'P') IS NULL
EXEC sp_executesql N'CREATE procedure [dbo].[sp_LiberaCache] (@maximo smallint) WITH ENCRYPTION as
begin
declare @maxmem varchar(10)
if @maximo>0 
	set @maxmem=cast(@maximo as varchar(10))+''000''
else
	set @maxmem=''80000''
--select @maxmem

exec (''use master sp_configure ''''allow updates'''',0'')
RECONFIGURE WITH OVERRIDE
DBCC FREEPROCCACHE WITH NO_INFOMSGS
EXEC sp_configure ''show advanced options'', 1  RECONFIGURE WITH OVERRIDE
    WAITFOR DELAY ''00:02:50''
BEGIN TRY
    EXEC sp_configure ''show advanced options'', 1  RECONFIGURE WITH OVERRIDE
    EXEC sp_configure ''max server memory'', ''40000''
    RECONFIGURE WITH OVERRIDE
    EXEC sp_configure N''show advanced options'', N''0''  RECONFIGURE WITH OVERRIDE
    WAITFOR DELAY ''00:02:50''
END TRY
BEGIN CATCH
END CATCH
BEGIN TRY
    EXEC sp_configure ''show advanced options'', 1  RECONFIGURE WITH OVERRIDE
    EXEC sp_configure ''max server memory'', ''30000''
    RECONFIGURE WITH OVERRIDE
    EXEC sp_configure N''show advanced options'', N''0''  RECONFIGURE WITH OVERRIDE
    WAITFOR DELAY ''00:02:50''
END TRY
BEGIN CATCH
END CATCH
BEGIN TRY
    EXEC sp_configure ''show advanced options'', 1  RECONFIGURE WITH OVERRIDE
    EXEC sp_configure ''max server memory'', ''20000''
    RECONFIGURE WITH OVERRIDE
    EXEC sp_configure N''show advanced options'', N''0''  RECONFIGURE WITH OVERRIDE
    WAITFOR DELAY ''00:02:50''
END TRY
BEGIN CATCH
END CATCH
BEGIN TRY
    EXEC sp_configure ''show advanced options'', 1  RECONFIGURE WITH OVERRIDE
    EXEC sp_configure ''max server memory'', ''10000''
    RECONFIGURE WITH OVERRIDE
    EXEC sp_configure N''show advanced options'', N''0''  RECONFIGURE WITH OVERRIDE
    WAITFOR DELAY ''00:02:50''
END TRY
BEGIN CATCH
END CATCH
EXEC sp_configure ''show advanced options'', 1  RECONFIGURE WITH OVERRIDE
EXEC sp_configure ''max server memory'',@maxmem
RECONFIGURE WITH OVERRIDE
EXEC sp_configure N''show advanced options'', N''0''  RECONFIGURE WITH OVERRIDE

exec sp_configure ''allow updates'',1
RECONFIGURE WITH OVERRIDE
end
'
GO

GO
PRINT N'Creating [dbo].[sp_RespaldaTablasPercepDeducsInasis]'
GO
IF OBJECT_ID(N'[dbo].[sp_RespaldaTablasPercepDeducsInasis]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		Noe Ramirez Ramos
-- Create date: 01/11/2013
-- Description:	Respalda tablas de desducciones y pecepciones a la base dep
-- =============================================
CREATE PROCEDURE [dbo].[sp_RespaldaTablasPercepDeducsInasis]
WITH EXEC AS CALLER
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	declare @fecha varchar(12)
	set @fecha = convert(varchar(12), getdate(), 112)+''_''+right(convert(varchar(12), getdate(), 108),2)
	exec(''select * into PASO.dbo.rs_DeducsFijas_''+@fecha + '' from DeducsFijas'')
	exec(''select * into PASO.dbo.rs_DeducsFijas_Bajas_''+@fecha + '' from DeducsFijas_Bajas'')
	exec(''select * into PASO.dbo.rs_SaldosPorConcepto_''+@fecha + '' from SaldosPorConcepto'')
	exec(''select * into PASO.dbo.rs_TTEmpleado_Plaza_Conc_''+@fecha + '' from TTEmpleado_Plaza_Conc'')
	exec(''select * into PASO.dbo.rs_TTEmpleado_Plaza_Conc_bajas_''+@fecha + '' from TTEmpleado_Plaza_Conc_bajas'')
	exec(''select * into PASO.dbo.rs_Excepciones_''+@fecha + '' from Excepciones'')
	exec(''select * into PASO.dbo.rs_deducsbajas_''+@fecha + '' from deducsbajas'')
	exec(''select * into PASO.dbo.rs_INASISTENCIASACEPTADAS_''+@fecha + '' from INASISTENCIASACEPTADAS'')
	exec(''select * into PASO.dbo.rs_INASISTENCIASRECHAZADAS_''+@fecha + '' from INASISTENCIASRECHAZADAS'')
  exec(''select * into PASO.dbo.rs_tresponsa_pensionada_''+@fecha + '' from tresponsa_pensionada'')
  exec(''select * into PASO.dbo.historiafaltas_''+@fecha + '' from historiafaltas '')
  --exec(''select * into PASO.dbo.ne_histpagos_''+@fecha + '' from histpagos'')
  exec(''select * into PASO.dbo.rs_HDeducsfijas_''+@fecha + '' from HDeducsfijas'')
	select ''Tablas creadas: PASO.dbo.rs_DeducsFijas_''+@fecha + ''; PASO.dbo.rs_DeducsFijas_Bajas_''+@fecha + ''; PASO.dbo.rs_SaldosPorConcepto_''+@fecha + ''; '' +
	''PASO.dbo.rs_TTEmpleado_Plaza_Conc_''+@fecha + ''; PASO.dbo.rs_TTEmpleado_Plaza_Conc_bajas_''+@fecha + ''; PASO.dbo.rs_Excepciones_''+@fecha + ''; '' +
	''PASO.dbo.rs_deducsbajas_''+@fecha + ''; PASO.dbo.rs_INASISTENCIASACEPTADAS_''+@fecha + ''; PASO.dbo.rs_INASISTENCIASRECHAZADAS_''+@fecha + ''; PASO.dbo.rs_tresponsa_pensionada_''+@fecha +''; PASO.dbo.rs_histpagos_''+@fecha + '';PASO.dbo.rs_HDeducsfijas_''+@fecha + ''; PASO.dbo.historiafaltas_''+@fecha + ''''

END'
GO

GO
PRINT N'Creating [dbo].[sp_Test]'
GO
IF OBJECT_ID(N'[dbo].[sp_Test]', 'P') IS NULL
EXEC sp_executesql N'CREATE procedure [dbo].[sp_Test] (@maximo smallint) WITH ENCRYPTION as
begin
declare @maxmem varchar(10)
if @maximo>0 
	set @maxmem=cast(@maximo as varchar(10))+''000''
else
	set @maxmem=''80000''
exec (''use master exec sp_configure ''''allow updates'''',0'')
exec (''use master exec sp_configure ''''show advanced options'''',1'')
exec (''use master exec sp_configure ''''allow updates'''',1'')
select @maxmem
end'
GO

GO
PRINT N'Creating [dbo].[sp_TraspasaTablaADep]'
GO
IF OBJECT_ID(N'[dbo].[sp_TraspasaTablaADep]', 'P') IS NULL
EXEC sp_executesql N'-- =============================================
-- Author:		Noe Ramirez Ramos
-- Create date: 06/11/2013
-- Description:	Respalda la tabla que se le pase a la base DEP y le agraga la fecha actual, evalia si la tabla dada existe
-- =============================================
CREATE PROCEDURE [dbo].[sp_TraspasaTablaADep]
	-- Add the parameters for the stored procedure here
	@tabla varchar(150)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	declare @fecha varchar(8)
	set @fecha = convert(varchar(8), getdate(), 112)
	if exists(select * from sysobjects where name like ''''+ @tabla +'''')
	  begin
		exec(''select * into dep.dbo.'' + @tabla + ''_''+@fecha + '' from '' + @tabla + '' '')
		exec(''drop table '' + @tabla )
		select ''Tabla creada: dep.dbo.'' + @tabla + ''_''+@fecha
	  end
	else
	  select ''La tabla no existe''

END
'
GO

GO
PRINT N'Creating [dbo].[sp_WhoIsActive]'
GO
IF OBJECT_ID(N'[dbo].[sp_WhoIsActive]', 'P') IS NULL
EXEC sp_executesql N'
/*********************************************************************************************
Who Is Active? v11.11 (2012-03-22)
(C) 2007-2012, Adam Machanic

Feedback: mailto:amachanic@gmail.com
Updates: http://sqlblog.com/blogs/adam_machanic/archive/tags/who+is+active/default.aspx
"Beta" Builds: http://sqlblog.com/files/folders/beta/tags/who+is+active/default.aspx

Donate! Support this project: http://tinyurl.com/WhoIsActiveDonate

License: 
	Who is Active? is free to download and use for personal, educational, and internal 
	corporate purposes, provided that this header is preserved. Redistribution or sale 
	of Who is Active?, in whole or in part, is prohibited without the author''s express 
	written consent.
*********************************************************************************************/
CREATE PROC [dbo].[sp_WhoIsActive]
(
--~
	--Filters--Both inclusive and exclusive
	--Set either filter to '''' to disable
	--Valid filter types are: session, program, database, login, and host
	--Session is a session ID, and either 0 or '''' can be used to indicate "all" sessions
	--All other filter types support % or _ as wildcards
	@filter sysname = '''',
	@filter_type VARCHAR(10) = ''session'',
	@not_filter sysname = '''',
	@not_filter_type VARCHAR(10) = ''session'',

	--Retrieve data about the calling session?
	@show_own_spid BIT = 0,

	--Retrieve data about system sessions?
	@show_system_spids BIT = 0,

	--Controls how sleeping SPIDs are handled, based on the idea of levels of interest
	--0 does not pull any sleeping SPIDs
	--1 pulls only those sleeping SPIDs that also have an open transaction
	--2 pulls all sleeping SPIDs
	@show_sleeping_spids TINYINT = 1,

	--If 1, gets the full stored procedure or running batch, when available
	--If 0, gets only the actual statement that is currently running in the batch or procedure
	@get_full_inner_text BIT = 0,

	--Get associated query plans for running tasks, if available
	--If @get_plans = 1, gets the plan based on the request''s statement offset
	--If @get_plans = 2, gets the entire plan based on the request''s plan_handle
	@get_plans TINYINT = 0,

	--Get the associated outer ad hoc query or stored procedure call, if available
	@get_outer_command BIT = 0,

	--Enables pulling transaction log write info and transaction duration
	@get_transaction_info BIT = 0,

	--Get information on active tasks, based on three interest levels
	--Level 0 does not pull any task-related information
	--Level 1 is a lightweight mode that pulls the top non-CXPACKET wait, giving preference to blockers
	--Level 2 pulls all available task-based metrics, including: 
	--number of active tasks, current wait stats, physical I/O, context switches, and blocker information
	@get_task_info TINYINT = 1,

	--Gets associated locks for each request, aggregated in an XML format
	@get_locks BIT = 0,

	--Get average time for past runs of an active query
	--(based on the combination of plan handle, sql handle, and offset)
	@get_avg_time BIT = 0,

	--Get additional non-performance-related information about the session or request
	--text_size, language, date_format, date_first, quoted_identifier, arithabort, ansi_null_dflt_on, 
	--ansi_defaults, ansi_warnings, ansi_padding, ansi_nulls, concat_null_yields_null, 
	--transaction_isolation_level, lock_timeout, deadlock_priority, row_count, command_type
	--
	--If a SQL Agent job is running, an subnode called agent_info will be populated with some or all of
	--the following: job_id, job_name, step_id, step_name, msdb_query_error (in the event of an error)
	--
	--If @get_task_info is set to 2 and a lock wait is detected, a subnode called block_info will be
	--populated with some or all of the following: lock_type, database_name, object_id, file_id, hobt_id, 
	--applock_hash, metadata_resource, metadata_class_id, object_name, schema_name
	@get_additional_info BIT = 0,

	--Walk the blocking chain and count the number of 
	--total SPIDs blocked all the way down by a given session
	--Also enables task_info Level 1, if @get_task_info is set to 0
	@find_block_leaders BIT = 0,

	--Pull deltas on various metrics
	--Interval in seconds to wait before doing the second data pull
	@delta_interval TINYINT = 0,

	--List of desired output columns, in desired order
	--Note that the final output will be the intersection of all enabled features and all 
	--columns in the list. Therefore, only columns associated with enabled features will 
	--actually appear in the output. Likewise, removing columns from this list may effectively
	--disable features, even if they are turned on
	--
	--Each element in this list must be one of the valid output column names. Names must be
	--delimited by square brackets. White space, formatting, and additional characters are
	--allowed, as long as the list contains exact matches of delimited valid column names.
	@output_column_list VARCHAR(8000) = ''[dd%][session_id][sql_text][sql_command][login_name][wait_info][tasks][tran_log%][cpu%][temp%][block%][reads%][writes%][context%][physical%][query_plan][locks][%]'',

	--Column(s) by which to sort output, optionally with sort directions. 
		--Valid column choices:
		--session_id, physical_io, reads, physical_reads, writes, tempdb_allocations,
		--tempdb_current, CPU, context_switches, used_memory, physical_io_delta, 
		--reads_delta, physical_reads_delta, writes_delta, tempdb_allocations_delta, 
		--tempdb_current_delta, CPU_delta, context_switches_delta, used_memory_delta, 
		--tasks, tran_start_time, open_tran_count, blocking_session_id, blocked_session_count,
		--percent_complete, host_name, login_name, database_name, start_time, login_time
		--
		--Note that column names in the list must be bracket-delimited. Commas and/or white
		--space are not required. 
	@sort_order VARCHAR(500) = ''[start_time] ASC'',

	--Formats some of the output columns in a more "human readable" form
	--0 disables outfput format
	--1 formats the output for variable-width fonts
	--2 formats the output for fixed-width fonts
	@format_output TINYINT = 1,

	--If set to a non-blank value, the script will attempt to insert into the specified 
	--destination table. Please note that the script will not verify that the table exists, 
	--or that it has the correct schema, before doing the insert.
	--Table can be specified in one, two, or three-part format
	@destination_table VARCHAR(4000) = '''',

	--If set to 1, no data collection will happen and no result set will be returned; instead,
	--a CREATE TABLE statement will be returned via the @schema parameter, which will match 
	--the schema of the result set that would be returned by using the same collection of the
	--rest of the parameters. The CREATE TABLE statement will have a placeholder token of 
	--<table_name> in place of an actual table name.
	@return_schema BIT = 0,
	@schema VARCHAR(MAX) = NULL OUTPUT,

	--Help! What do I do?
	@help BIT = 0
--~
)
/*
OUTPUT COLUMNS
--------------
Formatted/Non:	[session_id] [smallint] NOT NULL
	Session ID (a.k.a. SPID)

Formatted:		[dd hh:mm:ss.mss] [varchar](15) NULL
Non-Formatted:	<not returned>
	For an active request, time the query has been running
	For a sleeping session, time since the last batch completed

Formatted:		[dd hh:mm:ss.mss (avg)] [varchar](15) NULL
Non-Formatted:	[avg_elapsed_time] [int] NULL
	(Requires @get_avg_time option)
	How much time has the active portion of the query taken in the past, on average?

Formatted:		[physical_io] [varchar](30) NULL
Non-Formatted:	[physical_io] [bigint] NULL
	Shows the number of physical I/Os, for active requests

Formatted:		[reads] [varchar](30) NULL
Non-Formatted:	[reads] [bigint] NULL
	For an active request, number of reads done for the current query
	For a sleeping session, total number of reads done over the lifetime of the session

Formatted:		[physical_reads] [varchar](30) NULL
Non-Formatted:	[physical_reads] [bigint] NULL
	For an active request, number of physical reads done for the current query
	For a sleeping session, total number of physical reads done over the lifetime of the session

Formatted:		[writes] [varchar](30) NULL
Non-Formatted:	[writes] [bigint] NULL
	For an active request, number of writes done for the current query
	For a sleeping session, total number of writes done over the lifetime of the session

Formatted:		[tempdb_allocations] [varchar](30) NULL
Non-Formatted:	[tempdb_allocations] [bigint] NULL
	For an active request, number of TempDB writes done for the current query
	For a sleeping session, total number of TempDB writes done over the lifetime of the session

Formatted:		[tempdb_current] [varchar](30) NULL
Non-Formatted:	[tempdb_current] [bigint] NULL
	For an active request, number of TempDB pages currently allocated for the query
	For a sleeping session, number of TempDB pages currently allocated for the session

Formatted:		[CPU] [varchar](30) NULL
Non-Formatted:	[CPU] [int] NULL
	For an active request, total CPU time consumed by the current query
	For a sleeping session, total CPU time consumed over the lifetime of the session

Formatted:		[context_switches] [varchar](30) NULL
Non-Formatted:	[context_switches] [bigint] NULL
	Shows the number of context switches, for active requests

Formatted:		[used_memory] [varchar](30) NOT NULL
Non-Formatted:	[used_memory] [bigint] NOT NULL
	For an active request, total memory consumption for the current query
	For a sleeping session, total current memory consumption

Formatted:		[physical_io_delta] [varchar](30) NULL
Non-Formatted:	[physical_io_delta] [bigint] NULL
	(Requires @delta_interval option)
	Difference between the number of physical I/Os reported on the first and second collections. 
	If the request started after the first collection, the value will be NULL

Formatted:		[reads_delta] [varchar](30) NULL
Non-Formatted:	[reads_delta] [bigint] NULL
	(Requires @delta_interval option)
	Difference between the number of reads reported on the first and second collections. 
	If the request started after the first collection, the value will be NULL

Formatted:		[physical_reads_delta] [varchar](30) NULL
Non-Formatted:	[physical_reads_delta] [bigint] NULL
	(Requires @delta_interval option)
	Difference between the number of physical reads reported on the first and second collections. 
	If the request started after the first collection, the value will be NULL

Formatted:		[writes_delta] [varchar](30) NULL
Non-Formatted:	[writes_delta] [bigint] NULL
	(Requires @delta_interval option)
	Difference between the number of writes reported on the first and second collections. 
	If the request started after the first collection, the value will be NULL

Formatted:		[tempdb_allocations_delta] [varchar](30) NULL
Non-Formatted:	[tempdb_allocations_delta] [bigint] NULL
	(Requires @delta_interval option)
	Difference between the number of TempDB writes reported on the first and second collections. 
	If the request started after the first collection, the value will be NULL

Formatted:		[tempdb_current_delta] [varchar](30) NULL
Non-Formatted:	[tempdb_current_delta] [bigint] NULL
	(Requires @delta_interval option)
	Difference between the number of allocated TempDB pages reported on the first and second 
	collections. If the request started after the first collection, the value will be NULL

Formatted:		[CPU_delta] [varchar](30) NULL
Non-Formatted:	[CPU_delta] [int] NULL
	(Requires @delta_interval option)
	Difference between the CPU time reported on the first and second collections. 
	If the request started after the first collection, the value will be NULL

Formatted:		[context_switches_delta] [varchar](30) NULL
Non-Formatted:	[context_switches_delta] [bigint] NULL
	(Requires @delta_interval option)
	Difference between the context switches count reported on the first and second collections
	If the request started after the first collection, the value will be NULL

Formatted:		[used_memory_delta] [varchar](30) NULL
Non-Formatted:	[used_memory_delta] [bigint] NULL
	Difference between the memory usage reported on the first and second collections
	If the request started after the first collection, the value will be NULL

Formatted:		[tasks] [varchar](30) NULL
Non-Formatted:	[tasks] [smallint] NULL
	Number of worker tasks currently allocated, for active requests

Formatted/Non:	[status] [varchar](30) NOT NULL
	Activity status for the session (running, sleeping, etc)

Formatted/Non:	[wait_info] [nvarchar](4000) NULL
	Aggregates wait information, in the following format:
		(Ax: Bms/Cms/Dms)E
	A is the number of waiting tasks currently waiting on resource type E. B/C/D are wait
	times, in milliseconds. If only one thread is waiting, its wait time will be shown as B.
	If two tasks are waiting, each of their wait times will be shown (B/C). If three or more 
	tasks are waiting, the minimum, average, and maximum wait times will be shown (B/C/D).
	If wait type E is a page latch wait and the page is of a "special" type (e.g. PFS, GAM, SGAM), 
	the page type will be identified.
	If wait type E is CXPACKET, the nodeId from the query plan will be identified

Formatted/Non:	[locks] [xml] NULL
	(Requires @get_locks option)
	Aggregates lock information, in XML format.
	The lock XML includes the lock mode, locked object, and aggregates the number of requests. 
	Attempts are made to identify locked objects by name

Formatted/Non:	[tran_start_time] [datetime] NULL
	(Requires @get_transaction_info option)
	Date and time that the first transaction opened by a session caused a transaction log 
	write to occur.

Formatted/Non:	[tran_log_writes] [nvarchar](4000) NULL
	(Requires @get_transaction_info option)
	Aggregates transaction log write information, in the following format:
	A:wB (C kB)
	A is a database that has been touched by an active transaction
	B is the number of log writes that have been made in the database as a result of the transaction
	C is the number of log kilobytes consumed by the log records

Formatted:		[open_tran_count] [varchar](30) NULL
Non-Formatted:	[open_tran_count] [smallint] NULL
	Shows the number of open transactions the session has open

Formatted:		[sql_command] [xml] NULL
Non-Formatted:	[sql_command] [nvarchar](max) NULL
	(Requires @get_outer_command option)
	Shows the "outer" SQL command, i.e. the text of the batch or RPC sent to the server, 
	if available

Formatted:		[sql_text] [xml] NULL
Non-Formatted:	[sql_text] [nvarchar](max) NULL
	Shows the SQL text for active requests or the last statement executed
	for sleeping sessions, if available in either case.
	If @get_full_inner_text option is set, shows the full text of the batch.
	Otherwise, shows only the active statement within the batch.
	If the query text is locked, a special timeout message will be sent, in the following format:
		<timeout_exceeded />
	If an error occurs, an error message will be sent, in the following format:
		<error message="message" />

Formatted/Non:	[query_plan] [xml] NULL
	(Requires @get_plans option)
	Shows the query plan for the request, if available.
	If the plan is locked, a special timeout message will be sent, in the following format:
		<timeout_exceeded />
	If an error occurs, an error message will be sent, in the following format:
		<error message="message" />

Formatted/Non:	[blocking_session_id] [smallint] NULL
	When applicable, shows the blocking SPID

Formatted:		[blocked_session_count] [varchar](30) NULL
Non-Formatted:	[blocked_session_count] [smallint] NULL
	(Requires @find_block_leaders option)
	The total number of SPIDs blocked by this session,
	all the way down the blocking chain.

Formatted:		[percent_complete] [varchar](30) NULL
Non-Formatted:	[percent_complete] [real] NULL
	When applicable, shows the percent complete (e.g. for backups, restores, and some rollbacks)

Formatted/Non:	[host_name] [sysname] NOT NULL
	Shows the host name for the connection

Formatted/Non:	[login_name] [sysname] NOT NULL
	Shows the login name for the connection

Formatted/Non:	[database_name] [sysname] NULL
	Shows the connected database

Formatted/Non:	[program_name] [sysname] NULL
	Shows the reported program/application name

Formatted/Non:	[additional_info] [xml] NULL
	(Requires @get_additional_info option)
	Returns additional non-performance-related session/request information
	If the script finds a SQL Agent job running, the name of the job and job step will be reported
	If @get_task_info = 2 and the script finds a lock wait, the locked object will be reported

Formatted/Non:	[start_time] [datetime] NOT NULL
	For active requests, shows the time the request started
	For sleeping sessions, shows the time the last batch completed

Formatted/Non:	[login_time] [datetime] NOT NULL
	Shows the time that the session connected

Formatted/Non:	[request_id] [int] NULL
	For active requests, shows the request_id
	Should be 0 unless MARS is being used

Formatted/Non:	[collection_time] [datetime] NOT NULL
	Time that this script''s final SELECT ran
*/
AS
BEGIN;
	SET NOCOUNT ON; 
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
	SET QUOTED_IDENTIFIER ON;
	SET ANSI_PADDING ON;
	SET CONCAT_NULL_YIELDS_NULL ON;
	SET ANSI_WARNINGS ON;
	SET NUMERIC_ROUNDABORT OFF;
	SET ARITHABORT ON;

	IF
		@filter IS NULL
		OR @filter_type IS NULL
		OR @not_filter IS NULL
		OR @not_filter_type IS NULL
		OR @show_own_spid IS NULL
		OR @show_system_spids IS NULL
		OR @show_sleeping_spids IS NULL
		OR @get_full_inner_text IS NULL
		OR @get_plans IS NULL
		OR @get_outer_command IS NULL
		OR @get_transaction_info IS NULL
		OR @get_task_info IS NULL
		OR @get_locks IS NULL
		OR @get_avg_time IS NULL
		OR @get_additional_info IS NULL
		OR @find_block_leaders IS NULL
		OR @delta_interval IS NULL
		OR @format_output IS NULL
		OR @output_column_list IS NULL
		OR @sort_order IS NULL
		OR @return_schema IS NULL
		OR @destination_table IS NULL
		OR @help IS NULL
	BEGIN;
		RAISERROR(''Input parameters cannot be NULL'', 16, 1);
		RETURN;
	END;
	
	IF @filter_type NOT IN (''session'', ''program'', ''database'', ''login'', ''host'')
	BEGIN;
		RAISERROR(''Valid filter types are: session, program, database, login, host'', 16, 1);
		RETURN;
	END;
	
	IF @filter_type = ''session'' AND @filter LIKE ''%[^0123456789]%''
	BEGIN;
		RAISERROR(''Session filters must be valid integers'', 16, 1);
		RETURN;
	END;
	
	IF @not_filter_type NOT IN (''session'', ''program'', ''database'', ''login'', ''host'')
	BEGIN;
		RAISERROR(''Valid filter types are: session, program, database, login, host'', 16, 1);
		RETURN;
	END;
	
	IF @not_filter_type = ''session'' AND @not_filter LIKE ''%[^0123456789]%''
	BEGIN;
		RAISERROR(''Session filters must be valid integers'', 16, 1);
		RETURN;
	END;
	
	IF @show_sleeping_spids NOT IN (0, 1, 2)
	BEGIN;
		RAISERROR(''Valid values for @show_sleeping_spids are: 0, 1, or 2'', 16, 1);
		RETURN;
	END;
	
	IF @get_plans NOT IN (0, 1, 2)
	BEGIN;
		RAISERROR(''Valid values for @get_plans are: 0, 1, or 2'', 16, 1);
		RETURN;
	END;

	IF @get_task_info NOT IN (0, 1, 2)
	BEGIN;
		RAISERROR(''Valid values for @get_task_info are: 0, 1, or 2'', 16, 1);
		RETURN;
	END;

	IF @format_output NOT IN (0, 1, 2)
	BEGIN;
		RAISERROR(''Valid values for @format_output are: 0, 1, or 2'', 16, 1);
		RETURN;
	END;
	
	IF @help = 1
	BEGIN;
		DECLARE 
			@header VARCHAR(MAX),
			@params VARCHAR(MAX),
			@outputs VARCHAR(MAX);

		SELECT 
			@header =
				REPLACE
				(
					REPLACE
					(
						CONVERT
						(
							VARCHAR(MAX),
							SUBSTRING
							(
								t.text, 
								CHARINDEX(''/'' + REPLICATE(''*'', 93), t.text) + 94,
								CHARINDEX(REPLICATE(''*'', 93) + ''/'', t.text) - (CHARINDEX(''/'' + REPLICATE(''*'', 93), t.text) + 94)
							)
						),
						CHAR(13)+CHAR(10),
						CHAR(13)
					),
					''	'',
					''''
				),
			@params =
				CHAR(13) +
					REPLACE
					(
						REPLACE
						(
							CONVERT
							(
								VARCHAR(MAX),
								SUBSTRING
								(
									t.text, 
									CHARINDEX(''--~'', t.text) + 5, 
									CHARINDEX(''--~'', t.text, CHARINDEX(''--~'', t.text) + 5) - (CHARINDEX(''--~'', t.text) + 5)
								)
							),
							CHAR(13)+CHAR(10),
							CHAR(13)
						),
						''	'',
						''''
					),
				@outputs = 
					CHAR(13) +
						REPLACE
						(
							REPLACE
							(
								REPLACE
								(
									CONVERT
									(
										VARCHAR(MAX),
										SUBSTRING
										(
											t.text, 
											CHARINDEX(''OUTPUT COLUMNS''+CHAR(13)+CHAR(10)+''--------------'', t.text) + 32,
											CHARINDEX(''*/'', t.text, CHARINDEX(''OUTPUT COLUMNS''+CHAR(13)+CHAR(10)+''--------------'', t.text) + 32) - (CHARINDEX(''OUTPUT COLUMNS''+CHAR(13)+CHAR(10)+''--------------'', t.text) + 32)
										)
									),
									CHAR(9),
									CHAR(255)
								),
								CHAR(13)+CHAR(10),
								CHAR(13)
							),
							''	'',
							''''
						) +
						CHAR(13)
		FROM sys.dm_exec_requests AS r
		CROSS APPLY sys.dm_exec_sql_text(r.sql_handle) AS t
		WHERE
			r.session_id = @@SPID;

		WITH
		a0 AS
		(SELECT 1 AS n UNION ALL SELECT 1),
		a1 AS
		(SELECT 1 AS n FROM a0 AS a, a0 AS b),
		a2 AS
		(SELECT 1 AS n FROM a1 AS a, a1 AS b),
		a3 AS
		(SELECT 1 AS n FROM a2 AS a, a2 AS b),
		a4 AS
		(SELECT 1 AS n FROM a3 AS a, a3 AS b),
		numbers AS
		(
			SELECT TOP(LEN(@header) - 1)
				ROW_NUMBER() OVER
				(
					ORDER BY (SELECT NULL)
				) AS number
			FROM a4
			ORDER BY
				number
		)
		SELECT
			RTRIM(LTRIM(
				SUBSTRING
				(
					@header,
					number + 1,
					CHARINDEX(CHAR(13), @header, number + 1) - number - 1
				)
			)) AS [------header---------------------------------------------------------------------------------------------------------------]
		FROM numbers
		WHERE
			SUBSTRING(@header, number, 1) = CHAR(13);

		WITH
		a0 AS
		(SELECT 1 AS n UNION ALL SELECT 1),
		a1 AS
		(SELECT 1 AS n FROM a0 AS a, a0 AS b),
		a2 AS
		(SELECT 1 AS n FROM a1 AS a, a1 AS b),
		a3 AS
		(SELECT 1 AS n FROM a2 AS a, a2 AS b),
		a4 AS
		(SELECT 1 AS n FROM a3 AS a, a3 AS b),
		numbers AS
		(
			SELECT TOP(LEN(@params) - 1)
				ROW_NUMBER() OVER
				(
					ORDER BY (SELECT NULL)
				) AS number
			FROM a4
			ORDER BY
				number
		),
		tokens AS
		(
			SELECT 
				RTRIM(LTRIM(
					SUBSTRING
					(
						@params,
						number + 1,
						CHARINDEX(CHAR(13), @params, number + 1) - number - 1
					)
				)) AS token,
				number,
				CASE
					WHEN SUBSTRING(@params, number + 1, 1) = CHAR(13) THEN number
					ELSE COALESCE(NULLIF(CHARINDEX('','' + CHAR(13) + CHAR(13), @params, number), 0), LEN(@params)) 
				END AS param_group,
				ROW_NUMBER() OVER
				(
					PARTITION BY
						CHARINDEX('','' + CHAR(13) + CHAR(13), @params, number),
						SUBSTRING(@params, number+1, 1)
					ORDER BY 
						number
				) AS group_order
			FROM numbers
			WHERE
				SUBSTRING(@params, number, 1) = CHAR(13)
		),
		parsed_tokens AS
		(
			SELECT
				MIN
				(
					CASE
						WHEN token LIKE ''@%'' THEN token
						ELSE NULL
					END
				) AS parameter,
				MIN
				(
					CASE
						WHEN token LIKE ''--%'' THEN RIGHT(token, LEN(token) - 2)
						ELSE NULL
					END
				) AS description,
				param_group,
				group_order
			FROM tokens
			WHERE
				NOT 
				(
					token = '''' 
					AND group_order > 1
				)
			GROUP BY
				param_group,
				group_order
		)
		SELECT
			CASE
				WHEN description IS NULL AND parameter IS NULL THEN ''-------------------------------------------------------------------------''
				WHEN param_group = MAX(param_group) OVER() THEN parameter
				ELSE COALESCE(LEFT(parameter, LEN(parameter) - 1), '''')
			END AS [------parameter----------------------------------------------------------],
			CASE
				WHEN description IS NULL AND parameter IS NULL THEN ''----------------------------------------------------------------------------------------------------------------------''
				ELSE COALESCE(description, '''')
			END AS [------description-----------------------------------------------------------------------------------------------------]
		FROM parsed_tokens
		ORDER BY
			param_group, 
			group_order;
		
		WITH
		a0 AS
		(SELECT 1 AS n UNION ALL SELECT 1),
		a1 AS
		(SELECT 1 AS n FROM a0 AS a, a0 AS b),
		a2 AS
		(SELECT 1 AS n FROM a1 AS a, a1 AS b),
		a3 AS
		(SELECT 1 AS n FROM a2 AS a, a2 AS b),
		a4 AS
		(SELECT 1 AS n FROM a3 AS a, a3 AS b),
		numbers AS
		(
			SELECT TOP(LEN(@outputs) - 1)
				ROW_NUMBER() OVER
				(
					ORDER BY (SELECT NULL)
				) AS number
			FROM a4
			ORDER BY
				number
		),
		tokens AS
		(
			SELECT 
				RTRIM(LTRIM(
					SUBSTRING
					(
						@outputs,
						number + 1,
						CASE
							WHEN 
								COALESCE(NULLIF(CHARINDEX(CHAR(13) + ''Formatted'', @outputs, number + 1), 0), LEN(@outputs)) < 
								COALESCE(NULLIF(CHARINDEX(CHAR(13) + CHAR(255) COLLATE Latin1_General_Bin2, @outputs, number + 1), 0), LEN(@outputs))
								THEN COALESCE(NULLIF(CHARINDEX(CHAR(13) + ''Formatted'', @outputs, number + 1), 0), LEN(@outputs)) - number - 1
							ELSE
								COALESCE(NULLIF(CHARINDEX(CHAR(13) + CHAR(255) COLLATE Latin1_General_Bin2, @outputs, number + 1), 0), LEN(@outputs)) - number - 1
						END
					)
				)) AS token,
				number,
				COALESCE(NULLIF(CHARINDEX(CHAR(13) + ''Formatted'', @outputs, number + 1), 0), LEN(@outputs)) AS output_group,
				ROW_NUMBER() OVER
				(
					PARTITION BY 
						COALESCE(NULLIF(CHARINDEX(CHAR(13) + ''Formatted'', @outputs, number + 1), 0), LEN(@outputs))
					ORDER BY
						number
				) AS output_group_order
			FROM numbers
			WHERE
				SUBSTRING(@outputs, number, 10) = CHAR(13) + ''Formatted''
				OR SUBSTRING(@outputs, number, 2) = CHAR(13) + CHAR(255) COLLATE Latin1_General_Bin2
		),
		output_tokens AS
		(
			SELECT 
				*,
				CASE output_group_order
					WHEN 2 THEN MAX(CASE output_group_order WHEN 1 THEN token ELSE NULL END) OVER (PARTITION BY output_group)
					ELSE ''''
				END COLLATE Latin1_General_Bin2 AS column_info
			FROM tokens
		)
		SELECT
			CASE output_group_order
				WHEN 1 THEN ''-----------------------------------''
				WHEN 2 THEN 
					CASE
						WHEN CHARINDEX(''Formatted/Non:'', column_info) = 1 THEN
							SUBSTRING(column_info, CHARINDEX(CHAR(255) COLLATE Latin1_General_Bin2, column_info)+1, CHARINDEX('']'', column_info, CHARINDEX(CHAR(255) COLLATE Latin1_General_Bin2, column_info)+2) - CHARINDEX(CHAR(255) COLLATE Latin1_General_Bin2, column_info))
						ELSE
							SUBSTRING(column_info, CHARINDEX(CHAR(255) COLLATE Latin1_General_Bin2, column_info)+2, CHARINDEX('']'', column_info, CHARINDEX(CHAR(255) COLLATE Latin1_General_Bin2, column_info)+2) - CHARINDEX(CHAR(255) COLLATE Latin1_General_Bin2, column_info)-1)
					END
				ELSE ''''
			END AS formatted_column_name,
			CASE output_group_order
				WHEN 1 THEN ''-----------------------------------''
				WHEN 2 THEN 
					CASE
						WHEN CHARINDEX(''Formatted/Non:'', column_info) = 1 THEN
							SUBSTRING(column_info, CHARINDEX('']'', column_info)+2, LEN(column_info))
						ELSE
							SUBSTRING(column_info, CHARINDEX('']'', column_info)+2, CHARINDEX(''Non-Formatted:'', column_info, CHARINDEX('']'', column_info)+2) - CHARINDEX('']'', column_info)-3)
					END
				ELSE ''''
			END AS formatted_column_type,
			CASE output_group_order
				WHEN 1 THEN ''---------------------------------------''
				WHEN 2 THEN 
					CASE
						WHEN CHARINDEX(''Formatted/Non:'', column_info) = 1 THEN ''''
						ELSE
							CASE
								WHEN SUBSTRING(column_info, CHARINDEX(CHAR(255) COLLATE Latin1_General_Bin2, column_info, CHARINDEX(''Non-Formatted:'', column_info))+1, 1) = ''<'' THEN
									SUBSTRING(column_info, CHARINDEX(CHAR(255) COLLATE Latin1_General_Bin2, column_info, CHARINDEX(''Non-Formatted:'', column_info))+1, CHARINDEX(''>'', column_info, CHARINDEX(CHAR(255) COLLATE Latin1_General_Bin2, column_info, CHARINDEX(''Non-Formatted:'', column_info))+1) - CHARINDEX(CHAR(255) COLLATE Latin1_General_Bin2, column_info, CHARINDEX(''Non-Formatted:'', column_info)))
								ELSE
									SUBSTRING(column_info, CHARINDEX(CHAR(255) COLLATE Latin1_General_Bin2, column_info, CHARINDEX(''Non-Formatted:'', column_info))+1, CHARINDEX('']'', column_info, CHARINDEX(CHAR(255) COLLATE Latin1_General_Bin2, column_info, CHARINDEX(''Non-Formatted:'', column_info))+1) - CHARINDEX(CHAR(255) COLLATE Latin1_General_Bin2, column_info, CHARINDEX(''Non-Formatted:'', column_info)))
							END
					END
				ELSE ''''
			END AS unformatted_column_name,
			CASE output_group_order
				WHEN 1 THEN ''---------------------------------------''
				WHEN 2 THEN 
					CASE
						WHEN CHARINDEX(''Formatted/Non:'', column_info) = 1 THEN ''''
						ELSE
							CASE
								WHEN SUBSTRING(column_info, CHARINDEX(CHAR(255) COLLATE Latin1_General_Bin2, column_info, CHARINDEX(''Non-Formatted:'', column_info))+1, 1) = ''<'' THEN ''''
								ELSE
									SUBSTRING(column_info, CHARINDEX('']'', column_info, CHARINDEX(''Non-Formatted:'', column_info))+2, CHARINDEX(''Non-Formatted:'', column_info, CHARINDEX('']'', column_info)+2) - CHARINDEX('']'', column_info)-3)
							END
					END
				ELSE ''''
			END AS unformatted_column_type,
			CASE output_group_order
				WHEN 1 THEN ''----------------------------------------------------------------------------------------------------------------------''
				ELSE REPLACE(token, CHAR(255) COLLATE Latin1_General_Bin2, '''')
			END AS [------description-----------------------------------------------------------------------------------------------------]
		FROM output_tokens
		WHERE
			NOT 
			(
				output_group_order = 1 
				AND output_group = LEN(@outputs)
			)
		ORDER BY
			output_group,
			CASE output_group_order
				WHEN 1 THEN 99
				ELSE output_group_order
			END;

		RETURN;
	END;

	WITH
	a0 AS
	(SELECT 1 AS n UNION ALL SELECT 1),
	a1 AS
	(SELECT 1 AS n FROM a0 AS a, a0 AS b),
	a2 AS
	(SELECT 1 AS n FROM a1 AS a, a1 AS b),
	a3 AS
	(SELECT 1 AS n FROM a2 AS a, a2 AS b),
	a4 AS
	(SELECT 1 AS n FROM a3 AS a, a3 AS b),
	numbers AS
	(
		SELECT TOP(LEN(@output_column_list))
			ROW_NUMBER() OVER
			(
				ORDER BY (SELECT NULL)
			) AS number
		FROM a4
		ORDER BY
			number
	),
	tokens AS
	(
		SELECT 
			''|['' +
				SUBSTRING
				(
					@output_column_list,
					number + 1,
					CHARINDEX('']'', @output_column_list, number) - number - 1
				) + ''|]'' AS token,
			number
		FROM numbers
		WHERE
			SUBSTRING(@output_column_list, number, 1) = ''[''
	),
	ordered_columns AS
	(
		SELECT
			x.column_name,
			ROW_NUMBER() OVER
			(
				PARTITION BY
					x.column_name
				ORDER BY
					tokens.number,
					x.default_order
			) AS r,
			ROW_NUMBER() OVER
			(
				ORDER BY
					tokens.number,
					x.default_order
			) AS s
		FROM tokens
		JOIN
		(
			SELECT ''[session_id]'' AS column_name, 1 AS default_order
			UNION ALL
			SELECT ''[dd hh:mm:ss.mss]'', 2
			WHERE
				@format_output IN (1, 2)
			UNION ALL
			SELECT ''[dd hh:mm:ss.mss (avg)]'', 3
			WHERE
				@format_output IN (1, 2)
				AND @get_avg_time = 1
			UNION ALL
			SELECT ''[avg_elapsed_time]'', 4
			WHERE
				@format_output = 0
				AND @get_avg_time = 1
			UNION ALL
			SELECT ''[physical_io]'', 5
			WHERE
				@get_task_info = 2
			UNION ALL
			SELECT ''[reads]'', 6
			UNION ALL
			SELECT ''[physical_reads]'', 7
			UNION ALL
			SELECT ''[writes]'', 8
			UNION ALL
			SELECT ''[tempdb_allocations]'', 9
			UNION ALL
			SELECT ''[tempdb_current]'', 10
			UNION ALL
			SELECT ''[CPU]'', 11
			UNION ALL
			SELECT ''[context_switches]'', 12
			WHERE
				@get_task_info = 2
			UNION ALL
			SELECT ''[used_memory]'', 13
			UNION ALL
			SELECT ''[physical_io_delta]'', 14
			WHERE
				@delta_interval > 0	
				AND @get_task_info = 2
			UNION ALL
			SELECT ''[reads_delta]'', 15
			WHERE
				@delta_interval > 0
			UNION ALL
			SELECT ''[physical_reads_delta]'', 16
			WHERE
				@delta_interval > 0
			UNION ALL
			SELECT ''[writes_delta]'', 17
			WHERE
				@delta_interval > 0
			UNION ALL
			SELECT ''[tempdb_allocations_delta]'', 18
			WHERE
				@delta_interval > 0
			UNION ALL
			SELECT ''[tempdb_current_delta]'', 19
			WHERE
				@delta_interval > 0
			UNION ALL
			SELECT ''[CPU_delta]'', 20
			WHERE
				@delta_interval > 0
			UNION ALL
			SELECT ''[context_switches_delta]'', 21
			WHERE
				@delta_interval > 0
				AND @get_task_info = 2
			UNION ALL
			SELECT ''[used_memory_delta]'', 22
			WHERE
				@delta_interval > 0
			UNION ALL
			SELECT ''[tasks]'', 23
			WHERE
				@get_task_info = 2
			UNION ALL
			SELECT ''[status]'', 24
			UNION ALL
			SELECT ''[wait_info]'', 25
			WHERE
				@get_task_info > 0
				OR @find_block_leaders = 1
			UNION ALL
			SELECT ''[locks]'', 26
			WHERE
				@get_locks = 1
			UNION ALL
			SELECT ''[tran_start_time]'', 27
			WHERE
				@get_transaction_info = 1
			UNION ALL
			SELECT ''[tran_log_writes]'', 28
			WHERE
				@get_transaction_info = 1
			UNION ALL
			SELECT ''[open_tran_count]'', 29
			UNION ALL
			SELECT ''[sql_command]'', 30
			WHERE
				@get_outer_command = 1
			UNION ALL
			SELECT ''[sql_text]'', 31
			UNION ALL
			SELECT ''[query_plan]'', 32
			WHERE
				@get_plans >= 1
			UNION ALL
			SELECT ''[blocking_session_id]'', 33
			WHERE
				@get_task_info > 0
				OR @find_block_leaders = 1
			UNION ALL
			SELECT ''[blocked_session_count]'', 34
			WHERE
				@find_block_leaders = 1
			UNION ALL
			SELECT ''[percent_complete]'', 35
			UNION ALL
			SELECT ''[host_name]'', 36
			UNION ALL
			SELECT ''[login_name]'', 37
			UNION ALL
			SELECT ''[database_name]'', 38
			UNION ALL
			SELECT ''[program_name]'', 39
			UNION ALL
			SELECT ''[additional_info]'', 40
			WHERE
				@get_additional_info = 1
			UNION ALL
			SELECT ''[start_time]'', 41
			UNION ALL
			SELECT ''[login_time]'', 42
			UNION ALL
			SELECT ''[request_id]'', 43
			UNION ALL
			SELECT ''[collection_time]'', 44
		) AS x ON 
			x.column_name LIKE token ESCAPE ''|''
	)
	SELECT
		@output_column_list =
			STUFF
			(
				(
					SELECT
						'','' + column_name as [text()]
					FROM ordered_columns
					WHERE
						r = 1
					ORDER BY
						s
					FOR XML
						PATH('''')
				),
				1,
				1,
				''''
			);
	
	IF COALESCE(RTRIM(@output_column_list), '''') = ''''
	BEGIN;
		RAISERROR(''No valid column matches found in @output_column_list or no columns remain due to selected options.'', 16, 1);
		RETURN;
	END;
	
	IF @destination_table <> ''''
	BEGIN;
		SET @destination_table = 
			--database
			COALESCE(QUOTENAME(PARSENAME(@destination_table, 3)) + ''.'', '''') +
			--schema
			COALESCE(QUOTENAME(PARSENAME(@destination_table, 2)) + ''.'', '''') +
			--table
			COALESCE(QUOTENAME(PARSENAME(@destination_table, 1)), '''');
			
		IF COALESCE(RTRIM(@destination_table), '''') = ''''
		BEGIN;
			RAISERROR(''Destination table not properly formatted.'', 16, 1);
			RETURN;
		END;
	END;

	WITH
	a0 AS
	(SELECT 1 AS n UNION ALL SELECT 1),
	a1 AS
	(SELECT 1 AS n FROM a0 AS a, a0 AS b),
	a2 AS
	(SELECT 1 AS n FROM a1 AS a, a1 AS b),
	a3 AS
	(SELECT 1 AS n FROM a2 AS a, a2 AS b),
	a4 AS
	(SELECT 1 AS n FROM a3 AS a, a3 AS b),
	numbers AS
	(
		SELECT TOP(LEN(@sort_order))
			ROW_NUMBER() OVER
			(
				ORDER BY (SELECT NULL)
			) AS number
		FROM a4
		ORDER BY
			number
	),
	tokens AS
	(
		SELECT 
			''|['' +
				SUBSTRING
				(
					@sort_order,
					number + 1,
					CHARINDEX('']'', @sort_order, number) - number - 1
				) + ''|]'' AS token,
			SUBSTRING
			(
				@sort_order,
				CHARINDEX('']'', @sort_order, number) + 1,
				COALESCE(NULLIF(CHARINDEX(''['', @sort_order, CHARINDEX('']'', @sort_order, number)), 0), LEN(@sort_order)) - CHARINDEX('']'', @sort_order, number)
			) AS next_chunk,
			number
		FROM numbers
		WHERE
			SUBSTRING(@sort_order, number, 1) = ''[''
	),
	ordered_columns AS
	(
		SELECT
			x.column_name +
				CASE
					WHEN tokens.next_chunk LIKE ''%asc%'' THEN '' ASC''
					WHEN tokens.next_chunk LIKE ''%desc%'' THEN '' DESC''
					ELSE ''''
				END AS column_name,
			ROW_NUMBER() OVER
			(
				PARTITION BY
					x.column_name
				ORDER BY
					tokens.number
			) AS r,
			tokens.number
		FROM tokens
		JOIN
		(
			SELECT ''[session_id]'' AS column_name
			UNION ALL
			SELECT ''[physical_io]''
			UNION ALL
			SELECT ''[reads]''
			UNION ALL
			SELECT ''[physical_reads]''
			UNION ALL
			SELECT ''[writes]''
			UNION ALL
			SELECT ''[tempdb_allocations]''
			UNION ALL
			SELECT ''[tempdb_current]''
			UNION ALL
			SELECT ''[CPU]''
			UNION ALL
			SELECT ''[context_switches]''
			UNION ALL
			SELECT ''[used_memory]''
			UNION ALL
			SELECT ''[physical_io_delta]''
			UNION ALL
			SELECT ''[reads_delta]''
			UNION ALL
			SELECT ''[physical_reads_delta]''
			UNION ALL
			SELECT ''[writes_delta]''
			UNION ALL
			SELECT ''[tempdb_allocations_delta]''
			UNION ALL
			SELECT ''[tempdb_current_delta]''
			UNION ALL
			SELECT ''[CPU_delta]''
			UNION ALL
			SELECT ''[context_switches_delta]''
			UNION ALL
			SELECT ''[used_memory_delta]''
			UNION ALL
			SELECT ''[tasks]''
			UNION ALL
			SELECT ''[tran_start_time]''
			UNION ALL
			SELECT ''[open_tran_count]''
			UNION ALL
			SELECT ''[blocking_session_id]''
			UNION ALL
			SELECT ''[blocked_session_count]''
			UNION ALL
			SELECT ''[percent_complete]''
			UNION ALL
			SELECT ''[host_name]''
			UNION ALL
			SELECT ''[login_name]''
			UNION ALL
			SELECT ''[database_name]''
			UNION ALL
			SELECT ''[start_time]''
			UNION ALL
			SELECT ''[login_time]''
		) AS x ON 
			x.column_name LIKE token ESCAPE ''|''
	)
	SELECT
		@sort_order = COALESCE(z.sort_order, '''')
	FROM
	(
		SELECT
			STUFF
			(
				(
					SELECT
						'','' + column_name as [text()]
					FROM ordered_columns
					WHERE
						r = 1
					ORDER BY
						number
					FOR XML
						PATH('''')
				),
				1,
				1,
				''''
			) AS sort_order
	) AS z;

	CREATE TABLE #sessions
	(
		recursion SMALLINT NOT NULL,
		session_id SMALLINT NOT NULL,
		request_id INT NOT NULL,
		session_number INT NOT NULL,
		elapsed_time INT NOT NULL,
		avg_elapsed_time INT NULL,
		physical_io BIGINT NULL,
		reads BIGINT NULL,
		physical_reads BIGINT NULL,
		writes BIGINT NULL,
		tempdb_allocations BIGINT NULL,
		tempdb_current BIGINT NULL,
		CPU INT NULL,
		thread_CPU_snapshot BIGINT NULL,
		context_switches BIGINT NULL,
		used_memory BIGINT NOT NULL, 
		tasks SMALLINT NULL,
		status VARCHAR(30) NOT NULL,
		wait_info NVARCHAR(4000) NULL,
		locks XML NULL,
		transaction_id BIGINT NULL,
		tran_start_time DATETIME NULL,
		tran_log_writes NVARCHAR(4000) NULL,
		open_tran_count SMALLINT NULL,
		sql_command XML NULL,
		sql_handle VARBINARY(64) NULL,
		statement_start_offset INT NULL,
		statement_end_offset INT NULL,
		sql_text XML NULL,
		plan_handle VARBINARY(64) NULL,
		query_plan XML NULL,
		blocking_session_id SMALLINT NULL,
		blocked_session_count SMALLINT NULL,
		percent_complete REAL NULL,
		host_name sysname NULL,
		login_name sysname NOT NULL,
		database_name sysname NULL,
		program_name sysname NULL,
		additional_info XML NULL,
		start_time DATETIME NOT NULL,
		login_time DATETIME NULL,
		last_request_start_time DATETIME NULL,
		PRIMARY KEY CLUSTERED (session_id, request_id, recursion) WITH (IGNORE_DUP_KEY = ON),
		UNIQUE NONCLUSTERED (transaction_id, session_id, request_id, recursion) WITH (IGNORE_DUP_KEY = ON)
	);

	IF @return_schema = 0
	BEGIN;
		--Disable unnecessary autostats on the table
		CREATE STATISTICS s_session_id ON #sessions (session_id)
		WITH SAMPLE 0 ROWS, NORECOMPUTE;
		CREATE STATISTICS s_request_id ON #sessions (request_id)
		WITH SAMPLE 0 ROWS, NORECOMPUTE;
		CREATE STATISTICS s_transaction_id ON #sessions (transaction_id)
		WITH SAMPLE 0 ROWS, NORECOMPUTE;
		CREATE STATISTICS s_session_number ON #sessions (session_number)
		WITH SAMPLE 0 ROWS, NORECOMPUTE;
		CREATE STATISTICS s_status ON #sessions (status)
		WITH SAMPLE 0 ROWS, NORECOMPUTE;
		CREATE STATISTICS s_start_time ON #sessions (start_time)
		WITH SAMPLE 0 ROWS, NORECOMPUTE;
		CREATE STATISTICS s_last_request_start_time ON #sessions (last_request_start_time)
		WITH SAMPLE 0 ROWS, NORECOMPUTE;
		CREATE STATISTICS s_recursion ON #sessions (recursion)
		WITH SAMPLE 0 ROWS, NORECOMPUTE;

		DECLARE @recursion SMALLINT;
		SET @recursion = 
			CASE @delta_interval
				WHEN 0 THEN 1
				ELSE -1
			END;

		DECLARE @first_collection_ms_ticks BIGINT;
		DECLARE @last_collection_start DATETIME;

		--Used for the delta pull
		REDO:;
		
		IF 
			@get_locks = 1 
			AND @recursion = 1
			AND @output_column_list LIKE ''%|[locks|]%'' ESCAPE ''|''
		BEGIN;
			SELECT
				y.resource_type,
				y.database_name,
				y.object_id,
				y.file_id,
				y.page_type,
				y.hobt_id,
				y.allocation_unit_id,
				y.index_id,
				y.schema_id,
				y.principal_id,
				y.request_mode,
				y.request_status,
				y.session_id,
				y.resource_description,
				y.request_count,
				s.request_id,
				s.start_time,
				CONVERT(sysname, NULL) AS object_name,
				CONVERT(sysname, NULL) AS index_name,
				CONVERT(sysname, NULL) AS schema_name,
				CONVERT(sysname, NULL) AS principal_name,
				CONVERT(NVARCHAR(2048), NULL) AS query_error
			INTO #locks
			FROM
			(
				SELECT
					sp.spid AS session_id,
					CASE sp.status
						WHEN ''sleeping'' THEN CONVERT(INT, 0)
						ELSE sp.request_id
					END AS request_id,
					CASE sp.status
						WHEN ''sleeping'' THEN sp.last_batch
						ELSE COALESCE(req.start_time, sp.last_batch)
					END AS start_time,
					sp.dbid
				FROM sys.sysprocesses AS sp
				OUTER APPLY
				(
					SELECT TOP(1)
						CASE
							WHEN 
							(
								sp.hostprocess > ''''
								OR r.total_elapsed_time < 0
							) THEN
								r.start_time
							ELSE
								DATEADD
								(
									ms, 
									1000 * (DATEPART(ms, DATEADD(second, -(r.total_elapsed_time / 1000), GETDATE())) / 500) - DATEPART(ms, DATEADD(second, -(r.total_elapsed_time / 1000), GETDATE())), 
									DATEADD(second, -(r.total_elapsed_time / 1000), GETDATE())
								)
						END AS start_time
					FROM sys.dm_exec_requests AS r
					WHERE
						r.session_id = sp.spid
						AND r.request_id = sp.request_id
				) AS req
				WHERE
					--Process inclusive filter
					1 =
						CASE
							WHEN @filter <> '''' THEN
								CASE @filter_type
									WHEN ''session'' THEN
										CASE
											WHEN
												CONVERT(SMALLINT, @filter) = 0
												OR sp.spid = CONVERT(SMALLINT, @filter)
													THEN 1
											ELSE 0
										END
									WHEN ''program'' THEN
										CASE
											WHEN sp.program_name LIKE @filter THEN 1
											ELSE 0
										END
									WHEN ''login'' THEN
										CASE
											WHEN sp.loginame LIKE @filter THEN 1
											ELSE 0
										END
									WHEN ''host'' THEN
										CASE
											WHEN sp.hostname LIKE @filter THEN 1
											ELSE 0
										END
									WHEN ''database'' THEN
										CASE
											WHEN DB_NAME(sp.dbid) LIKE @filter THEN 1
											ELSE 0
										END
									ELSE 0
								END
							ELSE 1
						END
					--Process exclusive filter
					AND 0 =
						CASE
							WHEN @not_filter <> '''' THEN
								CASE @not_filter_type
									WHEN ''session'' THEN
										CASE
											WHEN sp.spid = CONVERT(SMALLINT, @not_filter) THEN 1
											ELSE 0
										END
									WHEN ''program'' THEN
										CASE
											WHEN sp.program_name LIKE @not_filter THEN 1
											ELSE 0
										END
									WHEN ''login'' THEN
										CASE
											WHEN sp.loginame LIKE @not_filter THEN 1
											ELSE 0
										END
									WHEN ''host'' THEN
										CASE
											WHEN sp.hostname LIKE @not_filter THEN 1
											ELSE 0
										END
									WHEN ''database'' THEN
										CASE
											WHEN DB_NAME(sp.dbid) LIKE @not_filter THEN 1
											ELSE 0
										END
									ELSE 0
								END
							ELSE 0
						END
					AND 
					(
						@show_own_spid = 1
						OR sp.spid <> @@SPID
					)
					AND 
					(
						@show_system_spids = 1
						OR sp.hostprocess > ''''
					)
					AND sp.ecid = 0
			) AS s
			INNER HASH JOIN
			(
				SELECT
					x.resource_type,
					x.database_name,
					x.object_id,
					x.file_id,
					CASE
						WHEN x.page_no = 1 OR x.page_no % 8088 = 0 THEN ''PFS''
						WHEN x.page_no = 2 OR x.page_no % 511232 = 0 THEN ''GAM''
						WHEN x.page_no = 3 OR x.page_no % 511233 = 0 THEN ''SGAM''
						WHEN x.page_no = 6 OR x.page_no % 511238 = 0 THEN ''DCM''
						WHEN x.page_no = 7 OR x.page_no % 511239 = 0 THEN ''BCM''
						WHEN x.page_no IS NOT NULL THEN ''*''
						ELSE NULL
					END AS page_type,
					x.hobt_id,
					x.allocation_unit_id,
					x.index_id,
					x.schema_id,
					x.principal_id,
					x.request_mode,
					x.request_status,
					x.session_id,
					x.request_id,
					CASE
						WHEN COALESCE(x.object_id, x.file_id, x.hobt_id, x.allocation_unit_id, x.index_id, x.schema_id, x.principal_id) IS NULL THEN NULLIF(resource_description, '''')
						ELSE NULL
					END AS resource_description,
					COUNT(*) AS request_count
				FROM
				(
					SELECT
						tl.resource_type +
							CASE
								WHEN tl.resource_subtype = '''' THEN ''''
								ELSE ''.'' + tl.resource_subtype
							END AS resource_type,
						COALESCE(DB_NAME(tl.resource_database_id), N''(null)'') AS database_name,
						CONVERT
						(
							INT,
							CASE
								WHEN tl.resource_type = ''OBJECT'' THEN tl.resource_associated_entity_id
								WHEN tl.resource_description LIKE ''%object_id = %'' THEN
									(
										SUBSTRING
										(
											tl.resource_description, 
											(CHARINDEX(''object_id = '', tl.resource_description) + 12), 
											COALESCE
											(
												NULLIF
												(
													CHARINDEX('','', tl.resource_description, CHARINDEX(''object_id = '', tl.resource_description) + 12),
													0
												), 
												DATALENGTH(tl.resource_description)+1
											) - (CHARINDEX(''object_id = '', tl.resource_description) + 12)
										)
									)
								ELSE NULL
							END
						) AS object_id,
						CONVERT
						(
							INT,
							CASE 
								WHEN tl.resource_type = ''FILE'' THEN CONVERT(INT, tl.resource_description)
								WHEN tl.resource_type IN (''PAGE'', ''EXTENT'', ''RID'') THEN LEFT(tl.resource_description, CHARINDEX('':'', tl.resource_description)-1)
								ELSE NULL
							END
						) AS file_id,
						CONVERT
						(
							INT,
							CASE
								WHEN tl.resource_type IN (''PAGE'', ''EXTENT'', ''RID'') THEN 
									SUBSTRING
									(
										tl.resource_description, 
										CHARINDEX('':'', tl.resource_description) + 1, 
										COALESCE
										(
											NULLIF
											(
												CHARINDEX('':'', tl.resource_description, CHARINDEX('':'', tl.resource_description) + 1), 
												0
											), 
											DATALENGTH(tl.resource_description)+1
										) - (CHARINDEX('':'', tl.resource_description) + 1)
									)
								ELSE NULL
							END
						) AS page_no,
						CASE
							WHEN tl.resource_type IN (''PAGE'', ''KEY'', ''RID'', ''HOBT'') THEN tl.resource_associated_entity_id
							ELSE NULL
						END AS hobt_id,
						CASE
							WHEN tl.resource_type = ''ALLOCATION_UNIT'' THEN tl.resource_associated_entity_id
							ELSE NULL
						END AS allocation_unit_id,
						CONVERT
						(
							INT,
							CASE
								WHEN
									/*TODO: Deal with server principals*/ 
									tl.resource_subtype <> ''SERVER_PRINCIPAL'' 
									AND tl.resource_description LIKE ''%index_id or stats_id = %'' THEN
									(
										SUBSTRING
										(
											tl.resource_description, 
											(CHARINDEX(''index_id or stats_id = '', tl.resource_description) + 23), 
											COALESCE
											(
												NULLIF
												(
													CHARINDEX('','', tl.resource_description, CHARINDEX(''index_id or stats_id = '', tl.resource_description) + 23), 
													0
												), 
												DATALENGTH(tl.resource_description)+1
											) - (CHARINDEX(''index_id or stats_id = '', tl.resource_description) + 23)
										)
									)
								ELSE NULL
							END 
						) AS index_id,
						CONVERT
						(
							INT,
							CASE
								WHEN tl.resource_description LIKE ''%schema_id = %'' THEN
									(
										SUBSTRING
										(
											tl.resource_description, 
											(CHARINDEX(''schema_id = '', tl.resource_description) + 12), 
											COALESCE
											(
												NULLIF
												(
													CHARINDEX('','', tl.resource_description, CHARINDEX(''schema_id = '', tl.resource_description) + 12), 
													0
												), 
												DATALENGTH(tl.resource_description)+1
											) - (CHARINDEX(''schema_id = '', tl.resource_description) + 12)
										)
									)
								ELSE NULL
							END 
						) AS schema_id,
						CONVERT
						(
							INT,
							CASE
								WHEN tl.resource_description LIKE ''%principal_id = %'' THEN
									(
										SUBSTRING
										(
											tl.resource_description, 
											(CHARINDEX(''principal_id = '', tl.resource_description) + 15), 
											COALESCE
											(
												NULLIF
												(
													CHARINDEX('','', tl.resource_description, CHARINDEX(''principal_id = '', tl.resource_description) + 15), 
													0
												), 
												DATALENGTH(tl.resource_description)+1
											) - (CHARINDEX(''principal_id = '', tl.resource_description) + 15)
										)
									)
								ELSE NULL
							END
						) AS principal_id,
						tl.request_mode,
						tl.request_status,
						tl.request_session_id AS session_id,
						tl.request_request_id AS request_id,

						/*TODO: Applocks, other resource_descriptions*/
						RTRIM(tl.resource_description) AS resource_description,
						tl.resource_associated_entity_id
						/*********************************************/
					FROM 
					(
						SELECT 
							request_session_id,
							CONVERT(VARCHAR(120), resource_type) COLLATE Latin1_General_Bin2 AS resource_type,
							CONVERT(VARCHAR(120), resource_subtype) COLLATE Latin1_General_Bin2 AS resource_subtype,
							resource_database_id,
							CONVERT(VARCHAR(512), resource_description) COLLATE Latin1_General_Bin2 AS resource_description,
							resource_associated_entity_id,
							CONVERT(VARCHAR(120), request_mode) COLLATE Latin1_General_Bin2 AS request_mode,
							CONVERT(VARCHAR(120), request_status) COLLATE Latin1_General_Bin2 AS request_status,
							request_request_id
						FROM sys.dm_tran_locks
					) AS tl
				) AS x
				GROUP BY
					x.resource_type,
					x.database_name,
					x.object_id,
					x.file_id,
					CASE
						WHEN x.page_no = 1 OR x.page_no % 8088 = 0 THEN ''PFS''
						WHEN x.page_no = 2 OR x.page_no % 511232 = 0 THEN ''GAM''
						WHEN x.page_no = 3 OR x.page_no % 511233 = 0 THEN ''SGAM''
						WHEN x.page_no = 6 OR x.page_no % 511238 = 0 THEN ''DCM''
						WHEN x.page_no = 7 OR x.page_no % 511239 = 0 THEN ''BCM''
						WHEN x.page_no IS NOT NULL THEN ''*''
						ELSE NULL
					END,
					x.hobt_id,
					x.allocation_unit_id,
					x.index_id,
					x.schema_id,
					x.principal_id,
					x.request_mode,
					x.request_status,
					x.session_id,
					x.request_id,
					CASE
						WHEN COALESCE(x.object_id, x.file_id, x.hobt_id, x.allocation_unit_id, x.index_id, x.schema_id, x.principal_id) IS NULL THEN NULLIF(resource_description, '''')
						ELSE NULL
					END
			) AS y ON
				y.session_id = s.session_id
				AND y.request_id = s.request_id
			OPTION (HASH GROUP);

			--Disable unnecessary autostats on the table
			CREATE STATISTICS s_database_name ON #locks (database_name)
			WITH SAMPLE 0 ROWS, NORECOMPUTE;
			CREATE STATISTICS s_object_id ON #locks (object_id)
			WITH SAMPLE 0 ROWS, NORECOMPUTE;
			CREATE STATISTICS s_hobt_id ON #locks (hobt_id)
			WITH SAMPLE 0 ROWS, NORECOMPUTE;
			CREATE STATISTICS s_allocation_unit_id ON #locks (allocation_unit_id)
			WITH SAMPLE 0 ROWS, NORECOMPUTE;
			CREATE STATISTICS s_index_id ON #locks (index_id)
			WITH SAMPLE 0 ROWS, NORECOMPUTE;
			CREATE STATISTICS s_schema_id ON #locks (schema_id)
			WITH SAMPLE 0 ROWS, NORECOMPUTE;
			CREATE STATISTICS s_principal_id ON #locks (principal_id)
			WITH SAMPLE 0 ROWS, NORECOMPUTE;
			CREATE STATISTICS s_request_id ON #locks (request_id)
			WITH SAMPLE 0 ROWS, NORECOMPUTE;
			CREATE STATISTICS s_start_time ON #locks (start_time)
			WITH SAMPLE 0 ROWS, NORECOMPUTE;
			CREATE STATISTICS s_resource_type ON #locks (resource_type)
			WITH SAMPLE 0 ROWS, NORECOMPUTE;
			CREATE STATISTICS s_object_name ON #locks (object_name)
			WITH SAMPLE 0 ROWS, NORECOMPUTE;
			CREATE STATISTICS s_schema_name ON #locks (schema_name)
			WITH SAMPLE 0 ROWS, NORECOMPUTE;
			CREATE STATISTICS s_page_type ON #locks (page_type)
			WITH SAMPLE 0 ROWS, NORECOMPUTE;
			CREATE STATISTICS s_request_mode ON #locks (request_mode)
			WITH SAMPLE 0 ROWS, NORECOMPUTE;
			CREATE STATISTICS s_request_status ON #locks (request_status)
			WITH SAMPLE 0 ROWS, NORECOMPUTE;
			CREATE STATISTICS s_resource_description ON #locks (resource_description)
			WITH SAMPLE 0 ROWS, NORECOMPUTE;
			CREATE STATISTICS s_index_name ON #locks (index_name)
			WITH SAMPLE 0 ROWS, NORECOMPUTE;
			CREATE STATISTICS s_principal_name ON #locks (principal_name)
			WITH SAMPLE 0 ROWS, NORECOMPUTE;
		END;
		
		DECLARE 
			@sql VARCHAR(MAX), 
			@sql_n NVARCHAR(MAX);

		SET @sql = 
			CONVERT(VARCHAR(MAX), '''') +
			''DECLARE @blocker BIT;
			SET @blocker = 0;
			DECLARE @i INT;
			SET @i = 2147483647;

			DECLARE @sessions TABLE
			(
				session_id SMALLINT NOT NULL,
				request_id INT NOT NULL,
				login_time DATETIME,
				last_request_end_time DATETIME,
				status VARCHAR(30),
				statement_start_offset INT,
				statement_end_offset INT,
				sql_handle BINARY(20),
				host_name NVARCHAR(128),
				login_name NVARCHAR(128),
				program_name NVARCHAR(128),
				database_id SMALLINT,
				memory_usage INT,
				open_tran_count SMALLINT, 
				'' +
				CASE
					WHEN 
					(
						@get_task_info <> 0 
						OR @find_block_leaders = 1 
					) THEN
						''wait_type NVARCHAR(32),
						wait_resource NVARCHAR(256),
						wait_time BIGINT, 
						''
					ELSE 
						''''
				END +
				''blocked SMALLINT,
				is_user_process BIT,
				cmd VARCHAR(32),
				PRIMARY KEY CLUSTERED (session_id, request_id) WITH (IGNORE_DUP_KEY = ON)
			);

			DECLARE @blockers TABLE
			(
				session_id INT NOT NULL PRIMARY KEY
			);

			BLOCKERS:;

			INSERT @sessions
			(
				session_id,
				request_id,
				login_time,
				last_request_end_time,
				status,
				statement_start_offset,
				statement_end_offset,
				sql_handle,
				host_name,
				login_name,
				program_name,
				database_id,
				memory_usage,
				open_tran_count, 
				'' +
				CASE
					WHEN 
					(
						@get_task_info <> 0
						OR @find_block_leaders = 1 
					) THEN
						''wait_type,
						wait_resource,
						wait_time, 
						''
					ELSE
						''''
				END +
				''blocked,
				is_user_process,
				cmd 
			)
			SELECT TOP(@i)
				spy.session_id,
				spy.request_id,
				spy.login_time,
				spy.last_request_end_time,
				spy.status,
				spy.statement_start_offset,
				spy.statement_end_offset,
				spy.sql_handle,
				spy.host_name,
				spy.login_name,
				spy.program_name,
				spy.database_id,
				spy.memory_usage,
				spy.open_tran_count,
				'' +
				CASE
					WHEN 
					(
						@get_task_info <> 0  
						OR @find_block_leaders = 1 
					) THEN
						''spy.wait_type,
						CASE
							WHEN
								spy.wait_type LIKE N''''PAGE%LATCH_%''''
								OR spy.wait_type = N''''CXPACKET''''
								OR spy.wait_type LIKE N''''LATCH[_]%''''
								OR spy.wait_type = N''''OLEDB'''' THEN
									spy.wait_resource
							ELSE
								NULL
						END AS wait_resource,
						spy.wait_time, 
						''
					ELSE
						''''
				END +
				''spy.blocked,
				spy.is_user_process,
				spy.cmd
			FROM
			(
				SELECT TOP(@i)
					spx.*, 
					'' +
					CASE
						WHEN 
						(
							@get_task_info <> 0 
							OR @find_block_leaders = 1 
						) THEN
							''ROW_NUMBER() OVER
							(
								PARTITION BY
									spx.session_id,
									spx.request_id
								ORDER BY
									CASE
										WHEN spx.wait_type LIKE N''''LCK[_]%'''' THEN 
											1
										ELSE
											99
									END,
									spx.wait_time DESC,
									spx.blocked DESC
							) AS r 
							''
						ELSE 
							''1 AS r 
							''
					END +
				''FROM
				(
					SELECT TOP(@i)
						sp0.session_id,
						sp0.request_id,
						sp0.login_time,
						sp0.last_request_end_time,
						LOWER(sp0.status) AS status,
						CASE
							WHEN sp0.cmd = ''''CREATE INDEX'''' THEN
								0
							ELSE
								sp0.stmt_start
						END AS statement_start_offset,
						CASE
							WHEN sp0.cmd = N''''CREATE INDEX'''' THEN
								-1
							ELSE
								COALESCE(NULLIF(sp0.stmt_end, 0), -1)
						END AS statement_end_offset,
						sp0.sql_handle,
						sp0.host_name,
						sp0.login_name,
						sp0.program_name,
						sp0.database_id,
						sp0.memory_usage,
						sp0.open_tran_count, 
						'' +
						CASE
							WHEN 
							(
								@get_task_info <> 0 
								OR @find_block_leaders = 1 
							) THEN
								''CASE
									WHEN sp0.wait_time > 0 AND sp0.wait_type <> N''''CXPACKET'''' THEN
										sp0.wait_type
									ELSE
										NULL
								END AS wait_type,
								CASE
									WHEN sp0.wait_time > 0 AND sp0.wait_type <> N''''CXPACKET'''' THEN 
										sp0.wait_resource
									ELSE
										NULL
								END AS wait_resource,
								CASE
									WHEN sp0.wait_type <> N''''CXPACKET'''' THEN
										sp0.wait_time
									ELSE
										0
								END AS wait_time, 
								''
							ELSE
								''''
						END +
						''sp0.blocked,
						sp0.is_user_process,
						sp0.cmd
					FROM
					(
						SELECT TOP(@i)
							sp1.session_id,
							sp1.request_id,
							sp1.login_time,
							sp1.last_request_end_time,
							sp1.status,
							sp1.cmd,
							sp1.stmt_start,
							sp1.stmt_end,
							MAX(NULLIF(sp1.sql_handle, 0x00)) OVER (PARTITION BY sp1.session_id, sp1.request_id) AS sql_handle,
							sp1.host_name,
							MAX(sp1.login_name) OVER (PARTITION BY sp1.session_id, sp1.request_id) AS login_name,
							sp1.program_name,
							sp1.database_id,
							MAX(sp1.memory_usage)  OVER (PARTITION BY sp1.session_id, sp1.request_id) AS memory_usage,
							MAX(sp1.open_tran_count)  OVER (PARTITION BY sp1.session_id, sp1.request_id) AS open_tran_count,
							sp1.wait_type,
							sp1.wait_resource,
							sp1.wait_time,
							sp1.blocked,
							sp1.hostprocess,
							sp1.is_user_process
						FROM
						(
							SELECT TOP(@i)
								sp2.spid AS session_id,
								CASE sp2.status
									WHEN ''''sleeping'''' THEN
										CONVERT(INT, 0)
									ELSE
										sp2.request_id
								END AS request_id,
								MAX(sp2.login_time) AS login_time,
								MAX(sp2.last_batch) AS last_request_end_time,
								MAX(CONVERT(VARCHAR(30), RTRIM(sp2.status)) COLLATE Latin1_General_Bin2) AS status,
								MAX(CONVERT(VARCHAR(32), RTRIM(sp2.cmd)) COLLATE Latin1_General_Bin2) AS cmd,
								MAX(sp2.stmt_start) AS stmt_start,
								MAX(sp2.stmt_end) AS stmt_end,
								MAX(sp2.sql_handle) AS sql_handle,
								MAX(CONVERT(sysname, RTRIM(sp2.hostname)) COLLATE SQL_Latin1_General_CP1_CI_AS) AS host_name,
								MAX(CONVERT(sysname, RTRIM(sp2.loginame)) COLLATE SQL_Latin1_General_CP1_CI_AS) AS login_name,
								MAX
								(
									CASE
										WHEN blk.queue_id IS NOT NULL THEN
											N''''Service Broker
												database_id: '''' + CONVERT(NVARCHAR, blk.database_id) +
												N'''' queue_id: '''' + CONVERT(NVARCHAR, blk.queue_id)
										ELSE
											CONVERT
											(
												sysname,
												RTRIM(sp2.program_name)
											)
									END COLLATE SQL_Latin1_General_CP1_CI_AS
								) AS program_name,
								MAX(sp2.dbid) AS database_id,
								MAX(sp2.memusage) AS memory_usage,
								MAX(sp2.open_tran) AS open_tran_count,
								RTRIM(sp2.lastwaittype) AS wait_type,
								RTRIM(sp2.waitresource) AS wait_resource,
								MAX(sp2.waittime) AS wait_time,
								COALESCE(NULLIF(sp2.blocked, sp2.spid), 0) AS blocked,
								MAX
								(
									CASE
										WHEN blk.session_id = sp2.spid THEN
											''''blocker''''
										ELSE
											RTRIM(sp2.hostprocess)
									END
								) AS hostprocess,
								CONVERT
								(
									BIT,
									MAX
									(
										CASE
											WHEN sp2.hostprocess > '''''''' THEN
												1
											ELSE
												0
										END
									)
								) AS is_user_process
							FROM
							(
								SELECT TOP(@i)
									session_id,
									CONVERT(INT, NULL) AS queue_id,
									CONVERT(INT, NULL) AS database_id
								FROM @blockers

								UNION ALL

								SELECT TOP(@i)
									CONVERT(SMALLINT, 0),
									CONVERT(INT, NULL) AS queue_id,
									CONVERT(INT, NULL) AS database_id
								WHERE
									@blocker = 0

								UNION ALL

								SELECT TOP(@i)
									CONVERT(SMALLINT, spid),
									queue_id,
									database_id
								FROM sys.dm_broker_activated_tasks
								WHERE
									@blocker = 0
							) AS blk
							INNER JOIN sys.sysprocesses AS sp2 ON
								sp2.spid = blk.session_id
								OR
								(
									blk.session_id = 0
									AND @blocker = 0
								)
							'' +
							CASE 
								WHEN 
								(
									@get_task_info = 0 
									AND @find_block_leaders = 0
								) THEN
									''WHERE
										sp2.ecid = 0 
									'' 
								ELSE
									''''
							END +
							''GROUP BY
								sp2.spid,
								CASE sp2.status
									WHEN ''''sleeping'''' THEN
										CONVERT(INT, 0)
									ELSE
										sp2.request_id
								END,
								RTRIM(sp2.lastwaittype),
								RTRIM(sp2.waitresource),
								COALESCE(NULLIF(sp2.blocked, sp2.spid), 0)
						) AS sp1
					) AS sp0
					WHERE
						@blocker = 1
						OR
						(1=1 
						'' +
							--inclusive filter
							CASE
								WHEN @filter <> '''' THEN
									CASE @filter_type
										WHEN ''session'' THEN
											CASE
												WHEN CONVERT(SMALLINT, @filter) <> 0 THEN
													''AND sp0.session_id = CONVERT(SMALLINT, @filter) 
													''
												ELSE
													''''
											END
										WHEN ''program'' THEN
											''AND sp0.program_name LIKE @filter 
											''
										WHEN ''login'' THEN
											''AND sp0.login_name LIKE @filter 
											''
										WHEN ''host'' THEN
											''AND sp0.host_name LIKE @filter 
											''
										WHEN ''database'' THEN
											''AND DB_NAME(sp0.database_id) LIKE @filter 
											''
										ELSE
											''''
									END
								ELSE
									''''
							END +
							--exclusive filter
							CASE
								WHEN @not_filter <> '''' THEN
									CASE @not_filter_type
										WHEN ''session'' THEN
											CASE
												WHEN CONVERT(SMALLINT, @not_filter) <> 0 THEN
													''AND sp0.session_id <> CONVERT(SMALLINT, @not_filter) 
													''
												ELSE
													''''
											END
										WHEN ''program'' THEN
											''AND sp0.program_name NOT LIKE @not_filter 
											''
										WHEN ''login'' THEN
											''AND sp0.login_name NOT LIKE @not_filter 
											''
										WHEN ''host'' THEN
											''AND sp0.host_name NOT LIKE @not_filter 
											''
										WHEN ''database'' THEN
											''AND DB_NAME(sp0.database_id) NOT LIKE @not_filter 
											''
										ELSE
											''''
									END
								ELSE
									''''
							END +
							CASE @show_own_spid
								WHEN 1 THEN
									''''
								ELSE
									''AND sp0.session_id <> @@spid 
									''
							END +
							CASE 
								WHEN @show_system_spids = 0 THEN
									''AND sp0.hostprocess > '''''''' 
									'' 
								ELSE
									''''
							END +
							CASE @show_sleeping_spids
								WHEN 0 THEN
									''AND sp0.status <> ''''sleeping'''' 
									''
								WHEN 1 THEN
									''AND
									(
										sp0.status <> ''''sleeping''''
										OR sp0.open_tran_count > 0
									)
									''
								ELSE
									''''
							END +
						'')
				) AS spx
			) AS spy
			WHERE
				spy.r = 1; 
			'' + 
			CASE @recursion
				WHEN 1 THEN 
					''IF @@ROWCOUNT > 0
					BEGIN;
						INSERT @blockers
						(
							session_id
						)
						SELECT TOP(@i)
							blocked
						FROM @sessions
						WHERE
							NULLIF(blocked, 0) IS NOT NULL

						EXCEPT

						SELECT TOP(@i)
							session_id
						FROM @sessions; 
						'' +

						CASE
							WHEN
							(
								@get_task_info > 0
								OR @find_block_leaders = 1
							) THEN
								''IF @@ROWCOUNT > 0
								BEGIN;
									SET @blocker = 1;
									GOTO BLOCKERS;
								END; 
								''
							ELSE 
								''''
						END +
					''END; 
					''
				ELSE 
					''''
			END +
			''SELECT TOP(@i)
				@recursion AS recursion,
				x.session_id,
				x.request_id,
				DENSE_RANK() OVER
				(
					ORDER BY
						x.session_id
				) AS session_number,
				'' +
				CASE
					WHEN @output_column_list LIKE ''%|[dd hh:mm:ss.mss|]%'' ESCAPE ''|'' THEN 
						''x.elapsed_time ''
					ELSE 
						''0 ''
				END + 
					''AS elapsed_time, 
					'' +
				CASE
					WHEN
						(
							@output_column_list LIKE ''%|[dd hh:mm:ss.mss (avg)|]%'' ESCAPE ''|'' OR 
							@output_column_list LIKE ''%|[avg_elapsed_time|]%'' ESCAPE ''|''
						)
						AND @recursion = 1
							THEN 
								''x.avg_elapsed_time / 1000 ''
					ELSE 
						''NULL ''
				END + 
					''AS avg_elapsed_time, 
					'' +
				CASE
					WHEN 
						@output_column_list LIKE ''%|[physical_io|]%'' ESCAPE ''|''
						OR @output_column_list LIKE ''%|[physical_io_delta|]%'' ESCAPE ''|''
							THEN 
								''x.physical_io ''
					ELSE 
						''NULL ''
				END + 
					''AS physical_io, 
					'' +
				CASE
					WHEN 
						@output_column_list LIKE ''%|[reads|]%'' ESCAPE ''|''
						OR @output_column_list LIKE ''%|[reads_delta|]%'' ESCAPE ''|''
							THEN 
								''x.reads ''
					ELSE 
						''0 ''
				END + 
					''AS reads, 
					'' +
				CASE
					WHEN 
						@output_column_list LIKE ''%|[physical_reads|]%'' ESCAPE ''|''
						OR @output_column_list LIKE ''%|[physical_reads_delta|]%'' ESCAPE ''|''
							THEN 
								''x.physical_reads ''
					ELSE 
						''0 ''
				END + 
					''AS physical_reads, 
					'' +
				CASE
					WHEN 
						@output_column_list LIKE ''%|[writes|]%'' ESCAPE ''|''
						OR @output_column_list LIKE ''%|[writes_delta|]%'' ESCAPE ''|''
							THEN 
								''x.writes ''
					ELSE 
						''0 ''
				END + 
					''AS writes, 
					'' +
				CASE
					WHEN 
						@output_column_list LIKE ''%|[tempdb_allocations|]%'' ESCAPE ''|''
						OR @output_column_list LIKE ''%|[tempdb_allocations_delta|]%'' ESCAPE ''|''
							THEN 
								''x.tempdb_allocations ''
					ELSE 
						''0 ''
				END + 
					''AS tempdb_allocations, 
					'' +
				CASE
					WHEN 
						@output_column_list LIKE ''%|[tempdb_current|]%'' ESCAPE ''|''
						OR @output_column_list LIKE ''%|[tempdb_current_delta|]%'' ESCAPE ''|''
							THEN 
								''x.tempdb_current ''
					ELSE 
						''0 ''
				END + 
					''AS tempdb_current, 
					'' +
				CASE
					WHEN 
						@output_column_list LIKE ''%|[CPU|]%'' ESCAPE ''|''
						OR @output_column_list LIKE ''%|[CPU_delta|]%'' ESCAPE ''|''
							THEN
								''x.CPU ''
					ELSE
						''0 ''
				END + 
					''AS CPU, 
					'' +
				CASE
					WHEN 
						@output_column_list LIKE ''%|[CPU_delta|]%'' ESCAPE ''|''
						AND @get_task_info = 2
							THEN 
								''x.thread_CPU_snapshot ''
					ELSE 
						''0 ''
				END + 
					''AS thread_CPU_snapshot, 
					'' +
				CASE
					WHEN 
						@output_column_list LIKE ''%|[context_switches|]%'' ESCAPE ''|''
						OR @output_column_list LIKE ''%|[context_switches_delta|]%'' ESCAPE ''|''
							THEN 
								''x.context_switches ''
					ELSE 
						''NULL ''
				END + 
					''AS context_switches, 
					'' +
				CASE
					WHEN 
						@output_column_list LIKE ''%|[used_memory|]%'' ESCAPE ''|''
						OR @output_column_list LIKE ''%|[used_memory_delta|]%'' ESCAPE ''|''
							THEN 
								''x.used_memory ''
					ELSE 
						''0 ''
				END + 
					''AS used_memory, 
					'' +
				CASE
					WHEN 
						@output_column_list LIKE ''%|[tasks|]%'' ESCAPE ''|''
						AND @recursion = 1
							THEN 
								''x.tasks ''
					ELSE 
						''NULL ''
				END + 
					''AS tasks, 
					'' +
				CASE
					WHEN 
						(
							@output_column_list LIKE ''%|[status|]%'' ESCAPE ''|'' 
							OR @output_column_list LIKE ''%|[sql_command|]%'' ESCAPE ''|''
						)
						AND @recursion = 1
							THEN 
								''x.status ''
					ELSE 
						'''''''''' ''
				END + 
					''AS status, 
					'' +
				CASE
					WHEN 
						@output_column_list LIKE ''%|[wait_info|]%'' ESCAPE ''|'' 
						AND @recursion = 1
							THEN 
								CASE @get_task_info
									WHEN 2 THEN
										''COALESCE(x.task_wait_info, x.sys_wait_info) ''
									ELSE
										''x.sys_wait_info ''
								END
					ELSE 
						''NULL ''
				END + 
					''AS wait_info, 
					'' +
				CASE
					WHEN 
						(
							@output_column_list LIKE ''%|[tran_start_time|]%'' ESCAPE ''|'' 
							OR @output_column_list LIKE ''%|[tran_log_writes|]%'' ESCAPE ''|'' 
						)
						AND @recursion = 1
							THEN 
								''x.transaction_id ''
					ELSE 
						''NULL ''
				END + 
					''AS transaction_id, 
					'' +
				CASE
					WHEN 
						@output_column_list LIKE ''%|[open_tran_count|]%'' ESCAPE ''|'' 
						AND @recursion = 1
							THEN 
								''x.open_tran_count ''
					ELSE 
						''NULL ''
				END + 
					''AS open_tran_count, 
					'' +
				CASE
					WHEN 
						@output_column_list LIKE ''%|[sql_text|]%'' ESCAPE ''|'' 
						AND @recursion = 1
							THEN 
								''x.sql_handle ''
					ELSE 
						''NULL ''
				END + 
					''AS sql_handle, 
					'' +
				CASE
					WHEN 
						(
							@output_column_list LIKE ''%|[sql_text|]%'' ESCAPE ''|'' 
							OR @output_column_list LIKE ''%|[query_plan|]%'' ESCAPE ''|'' 
						)
						AND @recursion = 1
							THEN 
								''x.statement_start_offset ''
					ELSE 
						''NULL ''
				END + 
					''AS statement_start_offset, 
					'' +
				CASE
					WHEN 
						(
							@output_column_list LIKE ''%|[sql_text|]%'' ESCAPE ''|'' 
							OR @output_column_list LIKE ''%|[query_plan|]%'' ESCAPE ''|'' 
						)
						AND @recursion = 1
							THEN 
								''x.statement_end_offset ''
					ELSE 
						''NULL ''
				END + 
					''AS statement_end_offset, 
					'' +
				''NULL AS sql_text, 
					'' +
				CASE
					WHEN 
						@output_column_list LIKE ''%|[query_plan|]%'' ESCAPE ''|'' 
						AND @recursion = 1
							THEN 
								''x.plan_handle ''
					ELSE 
						''NULL ''
				END + 
					''AS plan_handle, 
					'' +
				CASE
					WHEN 
						@output_column_list LIKE ''%|[blocking_session_id|]%'' ESCAPE ''|'' 
						AND @recursion = 1
							THEN 
								''NULLIF(x.blocking_session_id, 0) ''
					ELSE 
						''NULL ''
				END + 
					''AS blocking_session_id, 
					'' +
				CASE
					WHEN 
						@output_column_list LIKE ''%|[percent_complete|]%'' ESCAPE ''|''
						AND @recursion = 1
							THEN 
								''x.percent_complete ''
					ELSE 
						''NULL ''
				END + 
					''AS percent_complete, 
					'' +
				CASE
					WHEN 
						@output_column_list LIKE ''%|[host_name|]%'' ESCAPE ''|'' 
						AND @recursion = 1
							THEN 
								''x.host_name ''
					ELSE 
						'''''''''' ''
				END + 
					''AS host_name, 
					'' +
				CASE
					WHEN 
						@output_column_list LIKE ''%|[login_name|]%'' ESCAPE ''|'' 
						AND @recursion = 1
							THEN 
								''x.login_name ''
					ELSE 
						'''''''''' ''
				END + 
					''AS login_name, 
					'' +
				CASE
					WHEN 
						@output_column_list LIKE ''%|[database_name|]%'' ESCAPE ''|'' 
						AND @recursion = 1
							THEN 
								''DB_NAME(x.database_id) ''
					ELSE 
						''NULL ''
				END + 
					''AS database_name, 
					'' +
				CASE
					WHEN 
						@output_column_list LIKE ''%|[program_name|]%'' ESCAPE ''|'' 
						AND @recursion = 1
							THEN 
								''x.program_name ''
					ELSE 
						'''''''''' ''
				END + 
					''AS program_name, 
					'' +
				CASE
					WHEN
						@output_column_list LIKE ''%|[additional_info|]%'' ESCAPE ''|''
						AND @recursion = 1
							THEN
								''(
									SELECT TOP(@i)
										x.text_size,
										x.language,
										x.date_format,
										x.date_first,
										CASE x.quoted_identifier
											WHEN 0 THEN ''''OFF''''
											WHEN 1 THEN ''''ON''''
										END AS quoted_identifier,
										CASE x.arithabort
											WHEN 0 THEN ''''OFF''''
											WHEN 1 THEN ''''ON''''
										END AS arithabort,
										CASE x.ansi_null_dflt_on
											WHEN 0 THEN ''''OFF''''
											WHEN 1 THEN ''''ON''''
										END AS ansi_null_dflt_on,
										CASE x.ansi_defaults
											WHEN 0 THEN ''''OFF''''
											WHEN 1 THEN ''''ON''''
										END AS ansi_defaults,
										CASE x.ansi_warnings
											WHEN 0 THEN ''''OFF''''
											WHEN 1 THEN ''''ON''''
										END AS ansi_warnings,
										CASE x.ansi_padding
											WHEN 0 THEN ''''OFF''''
											WHEN 1 THEN ''''ON''''
										END AS ansi_padding,
										CASE ansi_nulls
											WHEN 0 THEN ''''OFF''''
											WHEN 1 THEN ''''ON''''
										END AS ansi_nulls,
										CASE x.concat_null_yields_null
											WHEN 0 THEN ''''OFF''''
											WHEN 1 THEN ''''ON''''
										END AS concat_null_yields_null,
										CASE x.transaction_isolation_level
											WHEN 0 THEN ''''Unspecified''''
											WHEN 1 THEN ''''ReadUncomitted''''
											WHEN 2 THEN ''''ReadCommitted''''
											WHEN 3 THEN ''''Repeatable''''
											WHEN 4 THEN ''''Serializable''''
											WHEN 5 THEN ''''Snapshot''''
										END AS transaction_isolation_level,
										x.lock_timeout,
										x.deadlock_priority,
										x.row_count,
										x.command_type, 
										'' +
										CASE
											WHEN @output_column_list LIKE ''%|[program_name|]%'' ESCAPE ''|'' THEN
												''(
													SELECT TOP(1)
														CONVERT(uniqueidentifier, CONVERT(XML, '''''''').value(''''xs:hexBinary( substring(sql:column("agent_info.job_id_string"), 0) )'''', ''''binary(16)'''')) AS job_id,
														agent_info.step_id,
														(
															SELECT TOP(1)
																NULL
															FOR XML
																PATH(''''job_name''''),
																TYPE
														),
														(
															SELECT TOP(1)
																NULL
															FOR XML
																PATH(''''step_name''''),
																TYPE
														)
													FROM
													(
														SELECT TOP(1)
															SUBSTRING(x.program_name, CHARINDEX(''''0x'''', x.program_name) + 2, 32) AS job_id_string,
															SUBSTRING(x.program_name, CHARINDEX('''': Step '''', x.program_name) + 7, CHARINDEX('''')'''', x.program_name, CHARINDEX('''': Step '''', x.program_name)) - (CHARINDEX('''': Step '''', x.program_name) + 7)) AS step_id
														WHERE
															x.program_name LIKE N''''SQLAgent - TSQL JobStep (Job 0x%''''
													) AS agent_info
													FOR XML
														PATH(''''agent_job_info''''),
														TYPE
												),
												''
											ELSE ''''
										END +
										CASE
											WHEN @get_task_info = 2 THEN
												''CONVERT(XML, x.block_info) AS block_info, 
												''
											ELSE
												''''
										END +
										''x.host_process_id 
									FOR XML
										PATH(''''additional_info''''),
										TYPE
								) ''
					ELSE
						''NULL ''
				END + 
					''AS additional_info, 
				x.start_time, 
					'' +
				CASE
					WHEN
						@output_column_list LIKE ''%|[login_time|]%'' ESCAPE ''|''
						AND @recursion = 1
							THEN
								''x.login_time ''
					ELSE 
						''NULL ''
				END + 
					''AS login_time, 
				x.last_request_start_time
			FROM
			(
				SELECT TOP(@i)
					y.*,
					CASE
						WHEN DATEDIFF(day, y.start_time, GETDATE()) > 24 THEN
							DATEDIFF(second, GETDATE(), y.start_time)
						ELSE DATEDIFF(ms, y.start_time, GETDATE())
					END AS elapsed_time,
					COALESCE(tempdb_info.tempdb_allocations, 0) AS tempdb_allocations,
					COALESCE
					(
						CASE
							WHEN tempdb_info.tempdb_current < 0 THEN 0
							ELSE tempdb_info.tempdb_current
						END,
						0
					) AS tempdb_current, 
					'' +
					CASE
						WHEN 
							(
								@get_task_info <> 0
								OR @find_block_leaders = 1
							) THEN
								''N''''('''' + CONVERT(NVARCHAR, y.wait_duration_ms) + N''''ms)'''' +
									y.wait_type +
										CASE
											WHEN y.wait_type LIKE N''''PAGE%LATCH_%'''' THEN
												N'''':'''' +
												COALESCE(DB_NAME(CONVERT(INT, LEFT(y.resource_description, CHARINDEX(N'''':'''', y.resource_description) - 1))), N''''(null)'''') +
												N'''':'''' +
												SUBSTRING(y.resource_description, CHARINDEX(N'''':'''', y.resource_description) + 1, LEN(y.resource_description) - CHARINDEX(N'''':'''', REVERSE(y.resource_description)) - CHARINDEX(N'''':'''', y.resource_description)) +
												N''''('''' +
													CASE
														WHEN
															CONVERT(INT, RIGHT(y.resource_description, CHARINDEX(N'''':'''', REVERSE(y.resource_description)) - 1)) = 1 OR
															CONVERT(INT, RIGHT(y.resource_description, CHARINDEX(N'''':'''', REVERSE(y.resource_description)) - 1)) % 8088 = 0
																THEN 
																	N''''PFS''''
														WHEN
															CONVERT(INT, RIGHT(y.resource_description, CHARINDEX(N'''':'''', REVERSE(y.resource_description)) - 1)) = 2 OR
															CONVERT(INT, RIGHT(y.resource_description, CHARINDEX(N'''':'''', REVERSE(y.resource_description)) - 1)) % 511232 = 0
																THEN 
																	N''''GAM''''
														WHEN
															CONVERT(INT, RIGHT(y.resource_description, CHARINDEX(N'''':'''', REVERSE(y.resource_description)) - 1)) = 3 OR
															CONVERT(INT, RIGHT(y.resource_description, CHARINDEX(N'''':'''', REVERSE(y.resource_description)) - 1)) % 511233 = 0
																THEN
																	N''''SGAM''''
														WHEN
															CONVERT(INT, RIGHT(y.resource_description, CHARINDEX(N'''':'''', REVERSE(y.resource_description)) - 1)) = 6 OR
															CONVERT(INT, RIGHT(y.resource_description, CHARINDEX(N'''':'''', REVERSE(y.resource_description)) - 1)) % 511238 = 0 
																THEN 
																	N''''DCM''''
														WHEN
															CONVERT(INT, RIGHT(y.resource_description, CHARINDEX(N'''':'''', REVERSE(y.resource_description)) - 1)) = 7 OR
															CONVERT(INT, RIGHT(y.resource_description, CHARINDEX(N'''':'''', REVERSE(y.resource_description)) - 1)) % 511239 = 0 
																THEN 
																	N''''BCM''''
														ELSE 
															N''''*''''
													END +
												N'''')''''
											WHEN y.wait_type = N''''CXPACKET'''' THEN
												N'''':'''' + SUBSTRING(y.resource_description, CHARINDEX(N''''nodeId'''', y.resource_description) + 7, 4)
											WHEN y.wait_type LIKE N''''LATCH[_]%'''' THEN
												N'''' ['''' + LEFT(y.resource_description, COALESCE(NULLIF(CHARINDEX(N'''' '''', y.resource_description), 0), LEN(y.resource_description) + 1) - 1) + N'''']''''
											WHEN
												y.wait_type = N''''OLEDB''''
												AND y.resource_description LIKE N''''%(SPID=%)'''' THEN
													N''''['''' + LEFT(y.resource_description, CHARINDEX(N''''(SPID='''', y.resource_description) - 2) +
														N'''':'''' + SUBSTRING(y.resource_description, CHARINDEX(N''''(SPID='''', y.resource_description) + 6, CHARINDEX(N'''')'''', y.resource_description, (CHARINDEX(N''''(SPID='''', y.resource_description) + 6)) - (CHARINDEX(N''''(SPID='''', y.resource_description) + 6)) + '''']''''
											ELSE
												N''''''''
										END COLLATE Latin1_General_Bin2 AS sys_wait_info, 
										''
							ELSE
								''''
						END +
						CASE
							WHEN @get_task_info = 2 THEN
								''tasks.physical_io,
								tasks.context_switches,
								tasks.tasks,
								tasks.block_info,
								tasks.wait_info AS task_wait_info,
								tasks.thread_CPU_snapshot,
								''
							ELSE
								'''' 
					END +
					CASE 
						WHEN NOT (@get_avg_time = 1 AND @recursion = 1) THEN
							''CONVERT(INT, NULL) ''
						ELSE 
							''qs.total_elapsed_time / qs.execution_count ''
					END + 
						''AS avg_elapsed_time 
				FROM
				(
					SELECT TOP(@i)
						sp.session_id,
						sp.request_id,
						COALESCE(r.logical_reads, s.logical_reads) AS reads,
						COALESCE(r.reads, s.reads) AS physical_reads,
						COALESCE(r.writes, s.writes) AS writes,
						COALESCE(r.CPU_time, s.CPU_time) AS CPU,
						sp.memory_usage + COALESCE(r.granted_query_memory, 0) AS used_memory,
						LOWER(sp.status) AS status,
						COALESCE(r.sql_handle, sp.sql_handle) AS sql_handle,
						COALESCE(r.statement_start_offset, sp.statement_start_offset) AS statement_start_offset,
						COALESCE(r.statement_end_offset, sp.statement_end_offset) AS statement_end_offset,
						'' +
						CASE
							WHEN 
							(
								@get_task_info <> 0
								OR @find_block_leaders = 1 
							) THEN
								''sp.wait_type COLLATE Latin1_General_Bin2 AS wait_type,
								sp.wait_resource COLLATE Latin1_General_Bin2 AS resource_description,
								sp.wait_time AS wait_duration_ms, 
								''
							ELSE
								''''
						END +
						''NULLIF(sp.blocked, 0) AS blocking_session_id,
						r.plan_handle,
						NULLIF(r.percent_complete, 0) AS percent_complete,
						sp.host_name,
						sp.login_name,
						sp.program_name,
						s.host_process_id,
						COALESCE(r.text_size, s.text_size) AS text_size,
						COALESCE(r.language, s.language) AS language,
						COALESCE(r.date_format, s.date_format) AS date_format,
						COALESCE(r.date_first, s.date_first) AS date_first,
						COALESCE(r.quoted_identifier, s.quoted_identifier) AS quoted_identifier,
						COALESCE(r.arithabort, s.arithabort) AS arithabort,
						COALESCE(r.ansi_null_dflt_on, s.ansi_null_dflt_on) AS ansi_null_dflt_on,
						COALESCE(r.ansi_defaults, s.ansi_defaults) AS ansi_defaults,
						COALESCE(r.ansi_warnings, s.ansi_warnings) AS ansi_warnings,
						COALESCE(r.ansi_padding, s.ansi_padding) AS ansi_padding,
						COALESCE(r.ansi_nulls, s.ansi_nulls) AS ansi_nulls,
						COALESCE(r.concat_null_yields_null, s.concat_null_yields_null) AS concat_null_yields_null,
						COALESCE(r.transaction_isolation_level, s.transaction_isolation_level) AS transaction_isolation_level,
						COALESCE(r.lock_timeout, s.lock_timeout) AS lock_timeout,
						COALESCE(r.deadlock_priority, s.deadlock_priority) AS deadlock_priority,
						COALESCE(r.row_count, s.row_count) AS row_count,
						COALESCE(r.command, sp.cmd) AS command_type,
						COALESCE
						(
							CASE
								WHEN
								(
									s.is_user_process = 0
									AND r.total_elapsed_time >= 0
								) THEN
									DATEADD
									(
										ms,
										1000 * (DATEPART(ms, DATEADD(second, -(r.total_elapsed_time / 1000), GETDATE())) / 500) - DATEPART(ms, DATEADD(second, -(r.total_elapsed_time / 1000), GETDATE())),
										DATEADD(second, -(r.total_elapsed_time / 1000), GETDATE())
									)
							END,
							NULLIF(COALESCE(r.start_time, sp.last_request_end_time), CONVERT(DATETIME, ''''19000101'''', 112)),
							(
								SELECT TOP(1)
									DATEADD(second, -(ms_ticks / 1000), GETDATE())
								FROM sys.dm_os_sys_info
							)
						) AS start_time,
						sp.login_time,
						CASE
							WHEN s.is_user_process = 1 THEN
								s.last_request_start_time
							ELSE
								COALESCE
								(
									DATEADD
									(
										ms,
										1000 * (DATEPART(ms, DATEADD(second, -(r.total_elapsed_time / 1000), GETDATE())) / 500) - DATEPART(ms, DATEADD(second, -(r.total_elapsed_time / 1000), GETDATE())),
										DATEADD(second, -(r.total_elapsed_time / 1000), GETDATE())
									),
									s.last_request_start_time
								)
						END AS last_request_start_time,
						r.transaction_id,
						sp.database_id,
						sp.open_tran_count
					FROM @sessions AS sp
					LEFT OUTER LOOP JOIN sys.dm_exec_sessions AS s ON
						s.session_id = sp.session_id
						AND s.login_time = sp.login_time
					LEFT OUTER LOOP JOIN sys.dm_exec_requests AS r ON
						sp.status <> ''''sleeping''''
						AND r.session_id = sp.session_id
						AND r.request_id = sp.request_id
						AND
						(
							(
								s.is_user_process = 0
								AND sp.is_user_process = 0
							)
							OR
							(
								r.start_time = s.last_request_start_time
								AND s.last_request_end_time = sp.last_request_end_time
							)
						)
				) AS y
				'' + 
				CASE 
					WHEN @get_task_info = 2 THEN
						CONVERT(VARCHAR(MAX), '''') +
						''LEFT OUTER HASH JOIN
						(
							SELECT TOP(@i)
								task_nodes.task_node.value(''''(session_id/text())[1]'''', ''''SMALLINT'''') AS session_id,
								task_nodes.task_node.value(''''(request_id/text())[1]'''', ''''INT'''') AS request_id,
								task_nodes.task_node.value(''''(physical_io/text())[1]'''', ''''BIGINT'''') AS physical_io,
								task_nodes.task_node.value(''''(context_switches/text())[1]'''', ''''BIGINT'''') AS context_switches,
								task_nodes.task_node.value(''''(tasks/text())[1]'''', ''''INT'''') AS tasks,
								task_nodes.task_node.value(''''(block_info/text())[1]'''', ''''NVARCHAR(4000)'''') AS block_info,
								task_nodes.task_node.value(''''(waits/text())[1]'''', ''''NVARCHAR(4000)'''') AS wait_info,
								task_nodes.task_node.value(''''(thread_CPU_snapshot/text())[1]'''', ''''BIGINT'''') AS thread_CPU_snapshot
							FROM
							(
								SELECT TOP(@i)
									CONVERT
									(
										XML,
										REPLACE
										(
											CONVERT(NVARCHAR(MAX), tasks_raw.task_xml_raw) COLLATE Latin1_General_Bin2,
											N''''</waits></tasks><tasks><waits>'''',
											N'''', ''''
										)
									) AS task_xml
								FROM
								(
									SELECT TOP(@i)
										CASE waits.r
											WHEN 1 THEN
												waits.session_id
											ELSE
												NULL
										END AS [session_id],
										CASE waits.r
											WHEN 1 THEN
												waits.request_id
											ELSE
												NULL
										END AS [request_id],											
										CASE waits.r
											WHEN 1 THEN
												waits.physical_io
											ELSE
												NULL
										END AS [physical_io],
										CASE waits.r
											WHEN 1 THEN
												waits.context_switches
											ELSE
												NULL
										END AS [context_switches],
										CASE waits.r
											WHEN 1 THEN
												waits.thread_CPU_snapshot
											ELSE
												NULL
										END AS [thread_CPU_snapshot],
										CASE waits.r
											WHEN 1 THEN
												waits.tasks
											ELSE
												NULL
										END AS [tasks],
										CASE waits.r
											WHEN 1 THEN
												waits.block_info
											ELSE
												NULL
										END AS [block_info],
										REPLACE
										(
											REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
											REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
											REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
												CONVERT
												(
													NVARCHAR(MAX),
													N''''('''' +
														CONVERT(NVARCHAR, num_waits) + N''''x: '''' +
														CASE num_waits
															WHEN 1 THEN
																CONVERT(NVARCHAR, min_wait_time) + N''''ms''''
															WHEN 2 THEN
																CASE
																	WHEN min_wait_time <> max_wait_time THEN
																		CONVERT(NVARCHAR, min_wait_time) + N''''/'''' + CONVERT(NVARCHAR, max_wait_time) + N''''ms''''
																	ELSE
																		CONVERT(NVARCHAR, max_wait_time) + N''''ms''''
																END
															ELSE
																CASE
																	WHEN min_wait_time <> max_wait_time THEN
																		CONVERT(NVARCHAR, min_wait_time) + N''''/'''' + CONVERT(NVARCHAR, avg_wait_time) + N''''/'''' + CONVERT(NVARCHAR, max_wait_time) + N''''ms''''
																	ELSE 
																		CONVERT(NVARCHAR, max_wait_time) + N''''ms''''
																END
														END +
													N'''')'''' + wait_type COLLATE Latin1_General_Bin2
												),
												NCHAR(31),N''''?''''),NCHAR(30),N''''?''''),NCHAR(29),N''''?''''),NCHAR(28),N''''?''''),NCHAR(27),N''''?''''),NCHAR(26),N''''?''''),NCHAR(25),N''''?''''),NCHAR(24),N''''?''''),NCHAR(23),N''''?''''),NCHAR(22),N''''?''''),
												NCHAR(21),N''''?''''),NCHAR(20),N''''?''''),NCHAR(19),N''''?''''),NCHAR(18),N''''?''''),NCHAR(17),N''''?''''),NCHAR(16),N''''?''''),NCHAR(15),N''''?''''),NCHAR(14),N''''?''''),NCHAR(12),N''''?''''),
												NCHAR(11),N''''?''''),NCHAR(8),N''''?''''),NCHAR(7),N''''?''''),NCHAR(6),N''''?''''),NCHAR(5),N''''?''''),NCHAR(4),N''''?''''),NCHAR(3),N''''?''''),NCHAR(2),N''''?''''),NCHAR(1),N''''?''''),
											NCHAR(0),
											N''''''''
										) AS [waits]
									FROM
									(
										SELECT TOP(@i)
											w1.*,
											ROW_NUMBER() OVER
											(
												PARTITION BY
													w1.session_id,
													w1.request_id
												ORDER BY
													w1.block_info DESC,
													w1.num_waits DESC,
													w1.wait_type
											) AS r
										FROM
										(
											SELECT TOP(@i)
												task_info.session_id,
												task_info.request_id,
												task_info.physical_io,
												task_info.context_switches,
												task_info.thread_CPU_snapshot,
												task_info.num_tasks AS tasks,
												CASE
													WHEN task_info.runnable_time IS NOT NULL THEN
														''''RUNNABLE''''
													ELSE
														wt2.wait_type
												END AS wait_type,
												NULLIF(COUNT(COALESCE(task_info.runnable_time, wt2.waiting_task_address)), 0) AS num_waits,
												MIN(COALESCE(task_info.runnable_time, wt2.wait_duration_ms)) AS min_wait_time,
												AVG(COALESCE(task_info.runnable_time, wt2.wait_duration_ms)) AS avg_wait_time,
												MAX(COALESCE(task_info.runnable_time, wt2.wait_duration_ms)) AS max_wait_time,
												MAX(wt2.block_info) AS block_info
											FROM
											(
												SELECT TOP(@i)
													t.session_id,
													t.request_id,
													SUM(CONVERT(BIGINT, t.pending_io_count)) OVER (PARTITION BY t.session_id, t.request_id) AS physical_io,
													SUM(CONVERT(BIGINT, t.context_switches_count)) OVER (PARTITION BY t.session_id, t.request_id) AS context_switches, 
													'' +
													CASE
														WHEN @output_column_list LIKE ''%|[CPU_delta|]%'' ESCAPE ''|''
															THEN
																''SUM(tr.usermode_time + tr.kernel_time) OVER (PARTITION BY t.session_id, t.request_id) ''
														ELSE
															''CONVERT(BIGINT, NULL) ''
													END + 
														'' AS thread_CPU_snapshot, 
													COUNT(*) OVER (PARTITION BY t.session_id, t.request_id) AS num_tasks,
													t.task_address,
													t.task_state,
													CASE
														WHEN
															t.task_state = ''''RUNNABLE''''
															AND w.runnable_time > 0 THEN
																w.runnable_time
														ELSE
															NULL
													END AS runnable_time
												FROM sys.dm_os_tasks AS t
												CROSS APPLY
												(
													SELECT TOP(1)
														sp2.session_id
													FROM @sessions AS sp2
													WHERE
														sp2.session_id = t.session_id
														AND sp2.request_id = t.request_id
														AND sp2.status <> ''''sleeping''''
												) AS sp20
												LEFT OUTER HASH JOIN
												(
													SELECT TOP(@i)
														(
															SELECT TOP(@i)
																ms_ticks
															FROM sys.dm_os_sys_info
														) -
															w0.wait_resumed_ms_ticks AS runnable_time,
														w0.worker_address,
														w0.thread_address,
														w0.task_bound_ms_ticks
													FROM sys.dm_os_workers AS w0
													WHERE
														w0.state = ''''RUNNABLE''''
														OR @first_collection_ms_ticks >= w0.task_bound_ms_ticks
												) AS w ON
													w.worker_address = t.worker_address 
												'' +
												CASE
													WHEN @output_column_list LIKE ''%|[CPU_delta|]%'' ESCAPE ''|''
														THEN
															''LEFT OUTER HASH JOIN sys.dm_os_threads AS tr ON
																tr.thread_address = w.thread_address
																AND @first_collection_ms_ticks >= w.task_bound_ms_ticks
															''
													ELSE
														''''
												END +
											'') AS task_info
											LEFT OUTER HASH JOIN
											(
												SELECT TOP(@i)
													wt1.wait_type,
													wt1.waiting_task_address,
													MAX(wt1.wait_duration_ms) AS wait_duration_ms,
													MAX(wt1.block_info) AS block_info
												FROM
												(
													SELECT DISTINCT TOP(@i)
														wt.wait_type +
															CASE
																WHEN wt.wait_type LIKE N''''PAGE%LATCH_%'''' THEN
																	'''':'''' +
																	COALESCE(DB_NAME(CONVERT(INT, LEFT(wt.resource_description, CHARINDEX(N'''':'''', wt.resource_description) - 1))), N''''(null)'''') +
																	N'''':'''' +
																	SUBSTRING(wt.resource_description, CHARINDEX(N'''':'''', wt.resource_description) + 1, LEN(wt.resource_description) - CHARINDEX(N'''':'''', REVERSE(wt.resource_description)) - CHARINDEX(N'''':'''', wt.resource_description)) +
																	N''''('''' +
																		CASE
																			WHEN
																				CONVERT(INT, RIGHT(wt.resource_description, CHARINDEX(N'''':'''', REVERSE(wt.resource_description)) - 1)) = 1 OR
																				CONVERT(INT, RIGHT(wt.resource_description, CHARINDEX(N'''':'''', REVERSE(wt.resource_description)) - 1)) % 8088 = 0
																					THEN 
																						N''''PFS''''
																			WHEN
																				CONVERT(INT, RIGHT(wt.resource_description, CHARINDEX(N'''':'''', REVERSE(wt.resource_description)) - 1)) = 2 OR
																				CONVERT(INT, RIGHT(wt.resource_description, CHARINDEX(N'''':'''', REVERSE(wt.resource_description)) - 1)) % 511232 = 0 
																					THEN 
																						N''''GAM''''
																			WHEN
																				CONVERT(INT, RIGHT(wt.resource_description, CHARINDEX(N'''':'''', REVERSE(wt.resource_description)) - 1)) = 3 OR
																				CONVERT(INT, RIGHT(wt.resource_description, CHARINDEX(N'''':'''', REVERSE(wt.resource_description)) - 1)) % 511233 = 0 
																					THEN 
																						N''''SGAM''''
																			WHEN
																				CONVERT(INT, RIGHT(wt.resource_description, CHARINDEX(N'''':'''', REVERSE(wt.resource_description)) - 1)) = 6 OR
																				CONVERT(INT, RIGHT(wt.resource_description, CHARINDEX(N'''':'''', REVERSE(wt.resource_description)) - 1)) % 511238 = 0 
																					THEN 
																						N''''DCM''''
																			WHEN
																				CONVERT(INT, RIGHT(wt.resource_description, CHARINDEX(N'''':'''', REVERSE(wt.resource_description)) - 1)) = 7 OR
																				CONVERT(INT, RIGHT(wt.resource_description, CHARINDEX(N'''':'''', REVERSE(wt.resource_description)) - 1)) % 511239 = 0
																					THEN 
																						N''''BCM''''
																			ELSE
																				N''''*''''
																		END +
																	N'''')''''
																WHEN wt.wait_type = N''''CXPACKET'''' THEN
																	N'''':'''' + SUBSTRING(wt.resource_description, CHARINDEX(N''''nodeId'''', wt.resource_description) + 7, 4)
																WHEN wt.wait_type LIKE N''''LATCH[_]%'''' THEN
																	N'''' ['''' + LEFT(wt.resource_description, COALESCE(NULLIF(CHARINDEX(N'''' '''', wt.resource_description), 0), LEN(wt.resource_description) + 1) - 1) + N'''']''''
																ELSE 
																	N''''''''
															END COLLATE Latin1_General_Bin2 AS wait_type,
														CASE
															WHEN
															(
																wt.blocking_session_id IS NOT NULL
																AND wt.wait_type LIKE N''''LCK[_]%''''
															) THEN
																(
																	SELECT TOP(@i)
																		x.lock_type,
																		REPLACE
																		(
																			REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
																			REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
																			REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
																				DB_NAME
																				(
																					CONVERT
																					(
																						INT,
																						SUBSTRING(wt.resource_description, NULLIF(CHARINDEX(N''''dbid='''', wt.resource_description), 0) + 5, COALESCE(NULLIF(CHARINDEX(N'''' '''', wt.resource_description, CHARINDEX(N''''dbid='''', wt.resource_description) + 5), 0), LEN(wt.resource_description) + 1) - CHARINDEX(N''''dbid='''', wt.resource_description) - 5)
																					)
																				),
																				NCHAR(31),N''''?''''),NCHAR(30),N''''?''''),NCHAR(29),N''''?''''),NCHAR(28),N''''?''''),NCHAR(27),N''''?''''),NCHAR(26),N''''?''''),NCHAR(25),N''''?''''),NCHAR(24),N''''?''''),NCHAR(23),N''''?''''),NCHAR(22),N''''?''''),
																				NCHAR(21),N''''?''''),NCHAR(20),N''''?''''),NCHAR(19),N''''?''''),NCHAR(18),N''''?''''),NCHAR(17),N''''?''''),NCHAR(16),N''''?''''),NCHAR(15),N''''?''''),NCHAR(14),N''''?''''),NCHAR(12),N''''?''''),
																				NCHAR(11),N''''?''''),NCHAR(8),N''''?''''),NCHAR(7),N''''?''''),NCHAR(6),N''''?''''),NCHAR(5),N''''?''''),NCHAR(4),N''''?''''),NCHAR(3),N''''?''''),NCHAR(2),N''''?''''),NCHAR(1),N''''?''''),
																			NCHAR(0),
																			N''''''''
																		) AS database_name,
																		CASE x.lock_type
																			WHEN N''''objectlock'''' THEN
																				SUBSTRING(wt.resource_description, NULLIF(CHARINDEX(N''''objid='''', wt.resource_description), 0) + 6, COALESCE(NULLIF(CHARINDEX(N'''' '''', wt.resource_description, CHARINDEX(N''''objid='''', wt.resource_description) + 6), 0), LEN(wt.resource_description) + 1) - CHARINDEX(N''''objid='''', wt.resource_description) - 6)
																			ELSE
																				NULL
																		END AS object_id,
																		CASE x.lock_type
																			WHEN N''''filelock'''' THEN
																				SUBSTRING(wt.resource_description, NULLIF(CHARINDEX(N''''fileid='''', wt.resource_description), 0) + 7, COALESCE(NULLIF(CHARINDEX(N'''' '''', wt.resource_description, CHARINDEX(N''''fileid='''', wt.resource_description) + 7), 0), LEN(wt.resource_description) + 1) - CHARINDEX(N''''fileid='''', wt.resource_description) - 7)
																			ELSE
																				NULL
																		END AS file_id,
																		CASE
																			WHEN x.lock_type in (N''''pagelock'''', N''''extentlock'''', N''''ridlock'''') THEN
																				SUBSTRING(wt.resource_description, NULLIF(CHARINDEX(N''''associatedObjectId='''', wt.resource_description), 0) + 19, COALESCE(NULLIF(CHARINDEX(N'''' '''', wt.resource_description, CHARINDEX(N''''associatedObjectId='''', wt.resource_description) + 19), 0), LEN(wt.resource_description) + 1) - CHARINDEX(N''''associatedObjectId='''', wt.resource_description) - 19)
																			WHEN x.lock_type in (N''''keylock'''', N''''hobtlock'''', N''''allocunitlock'''') THEN
																				SUBSTRING(wt.resource_description, NULLIF(CHARINDEX(N''''hobtid='''', wt.resource_description), 0) + 7, COALESCE(NULLIF(CHARINDEX(N'''' '''', wt.resource_description, CHARINDEX(N''''hobtid='''', wt.resource_description) + 7), 0), LEN(wt.resource_description) + 1) - CHARINDEX(N''''hobtid='''', wt.resource_description) - 7)
																			ELSE
																				NULL
																		END AS hobt_id,
																		CASE x.lock_type
																			WHEN N''''applicationlock'''' THEN
																				SUBSTRING(wt.resource_description, NULLIF(CHARINDEX(N''''hash='''', wt.resource_description), 0) + 5, COALESCE(NULLIF(CHARINDEX(N'''' '''', wt.resource_description, CHARINDEX(N''''hash='''', wt.resource_description) + 5), 0), LEN(wt.resource_description) + 1) - CHARINDEX(N''''hash='''', wt.resource_description) - 5)
																			ELSE
																				NULL
																		END AS applock_hash,
																		CASE x.lock_type
																			WHEN N''''metadatalock'''' THEN
																				SUBSTRING(wt.resource_description, NULLIF(CHARINDEX(N''''subresource='''', wt.resource_description), 0) + 12, COALESCE(NULLIF(CHARINDEX(N'''' '''', wt.resource_description, CHARINDEX(N''''subresource='''', wt.resource_description) + 12), 0), LEN(wt.resource_description) + 1) - CHARINDEX(N''''subresource='''', wt.resource_description) - 12)
																			ELSE
																				NULL
																		END AS metadata_resource,
																		CASE x.lock_type
																			WHEN N''''metadatalock'''' THEN
																				SUBSTRING(wt.resource_description, NULLIF(CHARINDEX(N''''classid='''', wt.resource_description), 0) + 8, COALESCE(NULLIF(CHARINDEX(N'''' dbid='''', wt.resource_description) - CHARINDEX(N''''classid='''', wt.resource_description), 0), LEN(wt.resource_description) + 1) - 8)
																			ELSE
																				NULL
																		END AS metadata_class_id
																	FROM
																	(
																		SELECT TOP(1)
																			LEFT(wt.resource_description, CHARINDEX(N'''' '''', wt.resource_description) - 1) COLLATE Latin1_General_Bin2 AS lock_type
																	) AS x
																	FOR XML
																		PATH('''''''')
																)
															ELSE NULL
														END AS block_info,
														wt.wait_duration_ms,
														wt.waiting_task_address
													FROM
													(
														SELECT TOP(@i)
															wt0.wait_type COLLATE Latin1_General_Bin2 AS wait_type,
															wt0.resource_description COLLATE Latin1_General_Bin2 AS resource_description,
															wt0.wait_duration_ms,
															wt0.waiting_task_address,
															CASE
																WHEN wt0.blocking_session_id = p.blocked THEN
																	wt0.blocking_session_id
																ELSE
																	NULL
															END AS blocking_session_id
														FROM sys.dm_os_waiting_tasks AS wt0
														CROSS APPLY
														(
															SELECT TOP(1)
																s0.blocked
															FROM @sessions AS s0
															WHERE
																s0.session_id = wt0.session_id
																AND COALESCE(s0.wait_type, N'''''''') <> N''''OLEDB''''
																AND wt0.wait_type <> N''''OLEDB''''
														) AS p
													) AS wt
												) AS wt1
												GROUP BY
													wt1.wait_type,
													wt1.waiting_task_address
											) AS wt2 ON
												wt2.waiting_task_address = task_info.task_address
												AND wt2.wait_duration_ms > 0
												AND task_info.runnable_time IS NULL
											GROUP BY
												task_info.session_id,
												task_info.request_id,
												task_info.physical_io,
												task_info.context_switches,
												task_info.thread_CPU_snapshot,
												task_info.num_tasks,
												CASE
													WHEN task_info.runnable_time IS NOT NULL THEN
														''''RUNNABLE''''
													ELSE
														wt2.wait_type
												END
										) AS w1
									) AS waits
									ORDER BY
										waits.session_id,
										waits.request_id,
										waits.r
									FOR XML
										PATH(N''''tasks''''),
										TYPE
								) AS tasks_raw (task_xml_raw)
							) AS tasks_final
							CROSS APPLY tasks_final.task_xml.nodes(N''''/tasks'''') AS task_nodes (task_node)
							WHERE
								task_nodes.task_node.exist(N''''session_id'''') = 1
						) AS tasks ON
							tasks.session_id = y.session_id
							AND tasks.request_id = y.request_id 
						''
					ELSE
						''''
				END +
				''LEFT OUTER HASH JOIN
				(
					SELECT TOP(@i)
						t_info.session_id,
						COALESCE(t_info.request_id, -1) AS request_id,
						SUM(t_info.tempdb_allocations) AS tempdb_allocations,
						SUM(t_info.tempdb_current) AS tempdb_current
					FROM
					(
						SELECT TOP(@i)
							tsu.session_id,
							tsu.request_id,
							tsu.user_objects_alloc_page_count +
								tsu.internal_objects_alloc_page_count AS tempdb_allocations,
							tsu.user_objects_alloc_page_count +
								tsu.internal_objects_alloc_page_count -
								tsu.user_objects_dealloc_page_count -
								tsu.internal_objects_dealloc_page_count AS tempdb_current
						FROM sys.dm_db_task_space_usage AS tsu
						CROSS APPLY
						(
							SELECT TOP(1)
								s0.session_id
							FROM @sessions AS s0
							WHERE
								s0.session_id = tsu.session_id
						) AS p

						UNION ALL

						SELECT TOP(@i)
							ssu.session_id,
							NULL AS request_id,
							ssu.user_objects_alloc_page_count +
								ssu.internal_objects_alloc_page_count AS tempdb_allocations,
							ssu.user_objects_alloc_page_count +
								ssu.internal_objects_alloc_page_count -
								ssu.user_objects_dealloc_page_count -
								ssu.internal_objects_dealloc_page_count AS tempdb_current
						FROM sys.dm_db_session_space_usage AS ssu
						CROSS APPLY
						(
							SELECT TOP(1)
								s0.session_id
							FROM @sessions AS s0
							WHERE
								s0.session_id = ssu.session_id
						) AS p
					) AS t_info
					GROUP BY
						t_info.session_id,
						COALESCE(t_info.request_id, -1)
				) AS tempdb_info ON
					tempdb_info.session_id = y.session_id
					AND tempdb_info.request_id =
						CASE
							WHEN y.status = N''''sleeping'''' THEN
								-1
							ELSE
								y.request_id
						END
				'' +
				CASE 
					WHEN 
						NOT 
						(
							@get_avg_time = 1 
							AND @recursion = 1
						) THEN 
							''''
					ELSE
						''LEFT OUTER HASH JOIN
						(
							SELECT TOP(@i)
								*
							FROM sys.dm_exec_query_stats
						) AS qs ON
							qs.sql_handle = y.sql_handle
							AND qs.plan_handle = y.plan_handle
							AND qs.statement_start_offset = y.statement_start_offset
							AND qs.statement_end_offset = y.statement_end_offset
						''
				END + 
			'') AS x
			OPTION (KEEPFIXED PLAN, OPTIMIZE FOR (@i = 1)); '';

		SET @sql_n = CONVERT(NVARCHAR(MAX), @sql);

		SET @last_collection_start = GETDATE();

		IF @recursion = -1
		BEGIN;
			SELECT
				@first_collection_ms_ticks = ms_ticks
			FROM sys.dm_os_sys_info;
		END;

		INSERT #sessions
		(
			recursion,
			session_id,
			request_id,
			session_number,
			elapsed_time,
			avg_elapsed_time,
			physical_io,
			reads,
			physical_reads,
			writes,
			tempdb_allocations,
			tempdb_current,
			CPU,
			thread_CPU_snapshot,
			context_switches,
			used_memory,
			tasks,
			status,
			wait_info,
			transaction_id,
			open_tran_count,
			sql_handle,
			statement_start_offset,
			statement_end_offset,		
			sql_text,
			plan_handle,
			blocking_session_id,
			percent_complete,
			host_name,
			login_name,
			database_name,
			program_name,
			additional_info,
			start_time,
			login_time,
			last_request_start_time
		)
		EXEC sp_executesql 
			@sql_n,
			N''@recursion SMALLINT, @filter sysname, @not_filter sysname, @first_collection_ms_ticks BIGINT'',
			@recursion, @filter, @not_filter, @first_collection_ms_ticks;

		--Collect transaction information?
		IF
			@recursion = 1
			AND
			(
				@output_column_list LIKE ''%|[tran_start_time|]%'' ESCAPE ''|''
				OR @output_column_list LIKE ''%|[tran_log_writes|]%'' ESCAPE ''|'' 
			)
		BEGIN;	
			DECLARE @i INT;
			SET @i = 2147483647;

			UPDATE s
			SET
				tran_start_time =
					CONVERT
					(
						DATETIME,
						LEFT
						(
							x.trans_info,
							NULLIF(CHARINDEX(NCHAR(254) COLLATE Latin1_General_Bin2, x.trans_info) - 1, -1)
						),
						121
					),
				tran_log_writes =
					RIGHT
					(
						x.trans_info,
						LEN(x.trans_info) - CHARINDEX(NCHAR(254) COLLATE Latin1_General_Bin2, x.trans_info)
					)
			FROM
			(
				SELECT TOP(@i)
					trans_nodes.trans_node.value(''(session_id/text())[1]'', ''SMALLINT'') AS session_id,
					COALESCE(trans_nodes.trans_node.value(''(request_id/text())[1]'', ''INT''), 0) AS request_id,
					trans_nodes.trans_node.value(''(trans_info/text())[1]'', ''NVARCHAR(4000)'') AS trans_info				
				FROM
				(
					SELECT TOP(@i)
						CONVERT
						(
							XML,
							REPLACE
							(
								CONVERT(NVARCHAR(MAX), trans_raw.trans_xml_raw) COLLATE Latin1_General_Bin2, 
								N''</trans_info></trans><trans><trans_info>'', N''''
							)
						)
					FROM
					(
						SELECT TOP(@i)
							CASE u_trans.r
								WHEN 1 THEN u_trans.session_id
								ELSE NULL
							END AS [session_id],
							CASE u_trans.r
								WHEN 1 THEN u_trans.request_id
								ELSE NULL
							END AS [request_id],
							CONVERT
							(
								NVARCHAR(MAX),
								CASE
									WHEN u_trans.database_id IS NOT NULL THEN
										CASE u_trans.r
											WHEN 1 THEN COALESCE(CONVERT(NVARCHAR, u_trans.transaction_start_time, 121) + NCHAR(254), N'''')
											ELSE N''''
										END + 
											REPLACE
											(
												REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
												REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
												REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
													CONVERT(VARCHAR(128), COALESCE(DB_NAME(u_trans.database_id), N''(null)'')),
													NCHAR(31),N''?''),NCHAR(30),N''?''),NCHAR(29),N''?''),NCHAR(28),N''?''),NCHAR(27),N''?''),NCHAR(26),N''?''),NCHAR(25),N''?''),NCHAR(24),N''?''),NCHAR(23),N''?''),NCHAR(22),N''?''),
													NCHAR(21),N''?''),NCHAR(20),N''?''),NCHAR(19),N''?''),NCHAR(18),N''?''),NCHAR(17),N''?''),NCHAR(16),N''?''),NCHAR(15),N''?''),NCHAR(14),N''?''),NCHAR(12),N''?''),
													NCHAR(11),N''?''),NCHAR(8),N''?''),NCHAR(7),N''?''),NCHAR(6),N''?''),NCHAR(5),N''?''),NCHAR(4),N''?''),NCHAR(3),N''?''),NCHAR(2),N''?''),NCHAR(1),N''?''),
												NCHAR(0),
												N''?''
											) +
											N'': '' +
										CONVERT(NVARCHAR, u_trans.log_record_count) + N'' ('' + CONVERT(NVARCHAR, u_trans.log_kb_used) + N'' kB)'' +
										N'',''
									ELSE
										N''N/A,''
								END COLLATE Latin1_General_Bin2
							) AS [trans_info]
						FROM
						(
							SELECT TOP(@i)
								trans.*,
								ROW_NUMBER() OVER
								(
									PARTITION BY
										trans.session_id,
										trans.request_id
									ORDER BY
										trans.transaction_start_time DESC
								) AS r
							FROM
							(
								SELECT TOP(@i)
									session_tran_map.session_id,
									session_tran_map.request_id,
									s_tran.database_id,
									COALESCE(SUM(s_tran.database_transaction_log_record_count), 0) AS log_record_count,
									COALESCE(SUM(s_tran.database_transaction_log_bytes_used), 0) / 1024 AS log_kb_used,
									MIN(s_tran.database_transaction_begin_time) AS transaction_start_time
								FROM
								(
									SELECT TOP(@i)
										*
									FROM sys.dm_tran_active_transactions
									WHERE
										transaction_begin_time <= @last_collection_start
								) AS a_tran
								INNER HASH JOIN
								(
									SELECT TOP(@i)
										*
									FROM sys.dm_tran_database_transactions
									WHERE
										database_id < 32767
								) AS s_tran ON
									s_tran.transaction_id = a_tran.transaction_id
								LEFT OUTER HASH JOIN
								(
									SELECT TOP(@i)
										*
									FROM sys.dm_tran_session_transactions
								) AS tst ON
									s_tran.transaction_id = tst.transaction_id
								CROSS APPLY
								(
									SELECT TOP(1)
										s3.session_id,
										s3.request_id
									FROM
									(
										SELECT TOP(1)
											s1.session_id,
											s1.request_id
										FROM #sessions AS s1
										WHERE
											s1.transaction_id = s_tran.transaction_id
											AND s1.recursion = 1
											
										UNION ALL
									
										SELECT TOP(1)
											s2.session_id,
											s2.request_id
										FROM #sessions AS s2
										WHERE
											s2.session_id = tst.session_id
											AND s2.recursion = 1
									) AS s3
									ORDER BY
										s3.request_id
								) AS session_tran_map
								GROUP BY
									session_tran_map.session_id,
									session_tran_map.request_id,
									s_tran.database_id
							) AS trans
						) AS u_trans
						FOR XML
							PATH(''trans''),
							TYPE
					) AS trans_raw (trans_xml_raw)
				) AS trans_final (trans_xml)
				CROSS APPLY trans_final.trans_xml.nodes(''/trans'') AS trans_nodes (trans_node)
			) AS x
			INNER HASH JOIN #sessions AS s ON
				s.session_id = x.session_id
				AND s.request_id = x.request_id
			OPTION (OPTIMIZE FOR (@i = 1));
		END;

		--Variables for text and plan collection
		DECLARE	
			@session_id SMALLINT,
			@request_id INT,
			@sql_handle VARBINARY(64),
			@plan_handle VARBINARY(64),
			@statement_start_offset INT,
			@statement_end_offset INT,
			@start_time DATETIME,
			@database_name sysname;

		IF 
			@recursion = 1
			AND @output_column_list LIKE ''%|[sql_text|]%'' ESCAPE ''|''
		BEGIN;
			DECLARE sql_cursor
			CURSOR LOCAL FAST_FORWARD
			FOR 
				SELECT 
					session_id,
					request_id,
					sql_handle,
					statement_start_offset,
					statement_end_offset
				FROM #sessions
				WHERE
					recursion = 1
					AND sql_handle IS NOT NULL
			OPTION (KEEPFIXED PLAN);

			OPEN sql_cursor;

			FETCH NEXT FROM sql_cursor
			INTO 
				@session_id,
				@request_id,
				@sql_handle,
				@statement_start_offset,
				@statement_end_offset;

			--Wait up to 5 ms for the SQL text, then give up
			SET LOCK_TIMEOUT 5;

			WHILE @@FETCH_STATUS = 0
			BEGIN;
				BEGIN TRY;
					UPDATE s
					SET
						s.sql_text =
						(
							SELECT
								REPLACE
								(
									REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
									REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
									REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
										N''--'' + NCHAR(13) + NCHAR(10) +
										CASE 
											WHEN @get_full_inner_text = 1 THEN est.text
											WHEN LEN(est.text) < (@statement_end_offset / 2) + 1 THEN est.text
											WHEN SUBSTRING(est.text, (@statement_start_offset/2), 2) LIKE N''[a-zA-Z0-9][a-zA-Z0-9]'' THEN est.text
											ELSE
												CASE
													WHEN @statement_start_offset > 0 THEN
														SUBSTRING
														(
															est.text,
															((@statement_start_offset/2) + 1),
															(
																CASE
																	WHEN @statement_end_offset = -1 THEN 2147483647
																	ELSE ((@statement_end_offset - @statement_start_offset)/2) + 1
																END
															)
														)
													ELSE RTRIM(LTRIM(est.text))
												END
										END +
										NCHAR(13) + NCHAR(10) + N''--'' COLLATE Latin1_General_Bin2,
										NCHAR(31),N''?''),NCHAR(30),N''?''),NCHAR(29),N''?''),NCHAR(28),N''?''),NCHAR(27),N''?''),NCHAR(26),N''?''),NCHAR(25),N''?''),NCHAR(24),N''?''),NCHAR(23),N''?''),NCHAR(22),N''?''),
										NCHAR(21),N''?''),NCHAR(20),N''?''),NCHAR(19),N''?''),NCHAR(18),N''?''),NCHAR(17),N''?''),NCHAR(16),N''?''),NCHAR(15),N''?''),NCHAR(14),N''?''),NCHAR(12),N''?''),
										NCHAR(11),N''?''),NCHAR(8),N''?''),NCHAR(7),N''?''),NCHAR(6),N''?''),NCHAR(5),N''?''),NCHAR(4),N''?''),NCHAR(3),N''?''),NCHAR(2),N''?''),NCHAR(1),N''?''),
									NCHAR(0),
									N''''
								) AS [processing-instruction(query)]
							FOR XML
								PATH(''''),
								TYPE
						),
						s.statement_start_offset = 
							CASE 
								WHEN LEN(est.text) < (@statement_end_offset / 2) + 1 THEN 0
								WHEN SUBSTRING(CONVERT(VARCHAR(MAX), est.text), (@statement_start_offset/2), 2) LIKE ''[a-zA-Z0-9][a-zA-Z0-9]'' THEN 0
								ELSE @statement_start_offset
							END,
						s.statement_end_offset = 
							CASE 
								WHEN LEN(est.text) < (@statement_end_offset / 2) + 1 THEN -1
								WHEN SUBSTRING(CONVERT(VARCHAR(MAX), est.text), (@statement_start_offset/2), 2) LIKE ''[a-zA-Z0-9][a-zA-Z0-9]'' THEN -1
								ELSE @statement_end_offset
							END
					FROM 
						#sessions AS s,
						(
							SELECT TOP(1)
								text
							FROM
							(
								SELECT 
									text, 
									0 AS row_num
								FROM sys.dm_exec_sql_text(@sql_handle)
								
								UNION ALL
								
								SELECT 
									NULL,
									1 AS row_num
							) AS est0
							ORDER BY
								row_num
						) AS est
					WHERE 
						s.session_id = @session_id
						AND s.request_id = @request_id
						AND s.recursion = 1
					OPTION (KEEPFIXED PLAN);
				END TRY
				BEGIN CATCH;
					UPDATE s
					SET
						s.sql_text = 
							CASE ERROR_NUMBER() 
								WHEN 1222 THEN ''<timeout_exceeded />''
								ELSE ''<error message="'' + ERROR_MESSAGE() + ''" />''
							END
					FROM #sessions AS s
					WHERE 
						s.session_id = @session_id
						AND s.request_id = @request_id
						AND s.recursion = 1
					OPTION (KEEPFIXED PLAN);
				END CATCH;

				FETCH NEXT FROM sql_cursor
				INTO
					@session_id,
					@request_id,
					@sql_handle,
					@statement_start_offset,
					@statement_end_offset;
			END;

			--Return this to the default
			SET LOCK_TIMEOUT -1;

			CLOSE sql_cursor;
			DEALLOCATE sql_cursor;
		END;

		IF 
			@get_outer_command = 1 
			AND @recursion = 1
			AND @output_column_list LIKE ''%|[sql_command|]%'' ESCAPE ''|''
		BEGIN;
			DECLARE @buffer_results TABLE
			(
				EventType VARCHAR(30),
				Parameters INT,
				EventInfo NVARCHAR(4000),
				start_time DATETIME,
				session_number INT IDENTITY(1,1) NOT NULL PRIMARY KEY
			);

			DECLARE buffer_cursor
			CURSOR LOCAL FAST_FORWARD
			FOR 
				SELECT 
					session_id,
					MAX(start_time) AS start_time
				FROM #sessions
				WHERE
					recursion = 1
				GROUP BY
					session_id
				ORDER BY
					session_id
				OPTION (KEEPFIXED PLAN);

			OPEN buffer_cursor;

			FETCH NEXT FROM buffer_cursor
			INTO 
				@session_id,
				@start_time;

			WHILE @@FETCH_STATUS = 0
			BEGIN;
				BEGIN TRY;
					--In SQL Server 2008, DBCC INPUTBUFFER will throw 
					--an exception if the session no longer exists
					INSERT @buffer_results
					(
						EventType,
						Parameters,
						EventInfo
					)
					EXEC sp_executesql
						N''DBCC INPUTBUFFER(@session_id) WITH NO_INFOMSGS;'',
						N''@session_id SMALLINT'',
						@session_id;

					UPDATE br
					SET
						br.start_time = @start_time
					FROM @buffer_results AS br
					WHERE
						br.session_number = 
						(
							SELECT MAX(br2.session_number)
							FROM @buffer_results br2
						);
				END TRY
				BEGIN CATCH
				END CATCH;

				FETCH NEXT FROM buffer_cursor
				INTO 
					@session_id,
					@start_time;
			END;

			UPDATE s
			SET
				sql_command = 
				(
					SELECT 
						REPLACE
						(
							REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
							REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
							REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
								CONVERT
								(
									NVARCHAR(MAX),
									N''--'' + NCHAR(13) + NCHAR(10) + br.EventInfo + NCHAR(13) + NCHAR(10) + N''--'' COLLATE Latin1_General_Bin2
								),
								NCHAR(31),N''?''),NCHAR(30),N''?''),NCHAR(29),N''?''),NCHAR(28),N''?''),NCHAR(27),N''?''),NCHAR(26),N''?''),NCHAR(25),N''?''),NCHAR(24),N''?''),NCHAR(23),N''?''),NCHAR(22),N''?''),
								NCHAR(21),N''?''),NCHAR(20),N''?''),NCHAR(19),N''?''),NCHAR(18),N''?''),NCHAR(17),N''?''),NCHAR(16),N''?''),NCHAR(15),N''?''),NCHAR(14),N''?''),NCHAR(12),N''?''),
								NCHAR(11),N''?''),NCHAR(8),N''?''),NCHAR(7),N''?''),NCHAR(6),N''?''),NCHAR(5),N''?''),NCHAR(4),N''?''),NCHAR(3),N''?''),NCHAR(2),N''?''),NCHAR(1),N''?''),
							NCHAR(0),
							N''''
						) AS [processing-instruction(query)]
					FROM @buffer_results AS br
					WHERE 
						br.session_number = s.session_number
						AND br.start_time = s.start_time
						AND 
						(
							(
								s.start_time = s.last_request_start_time
								AND EXISTS
								(
									SELECT *
									FROM sys.dm_exec_requests r2
									WHERE
										r2.session_id = s.session_id
										AND r2.request_id = s.request_id
										AND r2.start_time = s.start_time
								)
							)
							OR 
							(
								s.request_id = 0
								AND EXISTS
								(
									SELECT *
									FROM sys.dm_exec_sessions s2
									WHERE
										s2.session_id = s.session_id
										AND s2.last_request_start_time = s.last_request_start_time
								)
							)
						)
					FOR XML
						PATH(''''),
						TYPE
				)
			FROM #sessions AS s
			WHERE
				recursion = 1
			OPTION (KEEPFIXED PLAN);

			CLOSE buffer_cursor;
			DEALLOCATE buffer_cursor;
		END;

		IF 
			@get_plans >= 1 
			AND @recursion = 1
			AND @output_column_list LIKE ''%|[query_plan|]%'' ESCAPE ''|''
		BEGIN;
			DECLARE plan_cursor
			CURSOR LOCAL FAST_FORWARD
			FOR 
				SELECT
					session_id,
					request_id,
					plan_handle,
					statement_start_offset,
					statement_end_offset
				FROM #sessions
				WHERE
					recursion = 1
					AND plan_handle IS NOT NULL
			OPTION (KEEPFIXED PLAN);

			OPEN plan_cursor;

			FETCH NEXT FROM plan_cursor
			INTO 
				@session_id,
				@request_id,
				@plan_handle,
				@statement_start_offset,
				@statement_end_offset;

			--Wait up to 5 ms for a query plan, then give up
			SET LOCK_TIMEOUT 5;

			WHILE @@FETCH_STATUS = 0
			BEGIN;
				BEGIN TRY;
					UPDATE s
					SET
						s.query_plan =
						(
							SELECT
								CONVERT(xml, query_plan)
							FROM sys.dm_exec_text_query_plan
							(
								@plan_handle, 
								CASE @get_plans
									WHEN 1 THEN
										@statement_start_offset
									ELSE
										0
								END, 
								CASE @get_plans
									WHEN 1 THEN
										@statement_end_offset
									ELSE
										-1
								END
							)
						)
					FROM #sessions AS s
					WHERE 
						s.session_id = @session_id
						AND s.request_id = @request_id
						AND s.recursion = 1
					OPTION (KEEPFIXED PLAN);
				END TRY
				BEGIN CATCH;
					IF ERROR_NUMBER() = 6335
					BEGIN;
						UPDATE s
						SET
							s.query_plan =
							(
								SELECT
									N''--'' + NCHAR(13) + NCHAR(10) + 
									N''-- Could not render showplan due to XML data type limitations. '' + NCHAR(13) + NCHAR(10) + 
									N''-- To see the graphical plan save the XML below as a .SQLPLAN file and re-open in SSMS.'' + NCHAR(13) + NCHAR(10) +
									N''--'' + NCHAR(13) + NCHAR(10) +
										REPLACE(qp.query_plan, N''<RelOp'', NCHAR(13)+NCHAR(10)+N''<RelOp'') + 
										NCHAR(13) + NCHAR(10) + N''--'' COLLATE Latin1_General_Bin2 AS [processing-instruction(query_plan)]
								FROM sys.dm_exec_text_query_plan
								(
									@plan_handle, 
									CASE @get_plans
										WHEN 1 THEN
											@statement_start_offset
										ELSE
											0
									END, 
									CASE @get_plans
										WHEN 1 THEN
											@statement_end_offset
										ELSE
											-1
									END
								) AS qp
								FOR XML
									PATH(''''),
									TYPE
							)
						FROM #sessions AS s
						WHERE 
							s.session_id = @session_id
							AND s.request_id = @request_id
							AND s.recursion = 1
						OPTION (KEEPFIXED PLAN);
					END;
					ELSE
					BEGIN;
						UPDATE s
						SET
							s.query_plan = 
								CASE ERROR_NUMBER() 
									WHEN 1222 THEN ''<timeout_exceeded />''
									ELSE ''<error message="'' + ERROR_MESSAGE() + ''" />''
								END
						FROM #sessions AS s
						WHERE 
							s.session_id = @session_id
							AND s.request_id = @request_id
							AND s.recursion = 1
						OPTION (KEEPFIXED PLAN);
					END;
				END CATCH;

				FETCH NEXT FROM plan_cursor
				INTO
					@session_id,
					@request_id,
					@plan_handle,
					@statement_start_offset,
					@statement_end_offset;
			END;

			--Return this to the default
			SET LOCK_TIMEOUT -1;

			CLOSE plan_cursor;
			DEALLOCATE plan_cursor;
		END;

		IF 
			@get_locks = 1 
			AND @recursion = 1
			AND @output_column_list LIKE ''%|[locks|]%'' ESCAPE ''|''
		BEGIN;
			DECLARE locks_cursor
			CURSOR LOCAL FAST_FORWARD
			FOR 
				SELECT DISTINCT
					database_name
				FROM #locks
				WHERE
					EXISTS
					(
						SELECT *
						FROM #sessions AS s
						WHERE
							s.session_id = #locks.session_id
							AND recursion = 1
					)
					AND database_name <> ''(null)''
				OPTION (KEEPFIXED PLAN);

			OPEN locks_cursor;

			FETCH NEXT FROM locks_cursor
			INTO 
				@database_name;

			WHILE @@FETCH_STATUS = 0
			BEGIN;
				BEGIN TRY;
					SET @sql_n = CONVERT(NVARCHAR(MAX), '''') +
						''UPDATE l '' +
						''SET '' +
							''object_name = '' +
								''REPLACE '' +
								''( '' +
									''REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( '' +
									''REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( '' +
									''REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( '' +
										''o.name COLLATE Latin1_General_Bin2, '' +
										''NCHAR(31),N''''?''''),NCHAR(30),N''''?''''),NCHAR(29),N''''?''''),NCHAR(28),N''''?''''),NCHAR(27),N''''?''''),NCHAR(26),N''''?''''),NCHAR(25),N''''?''''),NCHAR(24),N''''?''''),NCHAR(23),N''''?''''),NCHAR(22),N''''?''''), '' +
										''NCHAR(21),N''''?''''),NCHAR(20),N''''?''''),NCHAR(19),N''''?''''),NCHAR(18),N''''?''''),NCHAR(17),N''''?''''),NCHAR(16),N''''?''''),NCHAR(15),N''''?''''),NCHAR(14),N''''?''''),NCHAR(12),N''''?''''), '' +
										''NCHAR(11),N''''?''''),NCHAR(8),N''''?''''),NCHAR(7),N''''?''''),NCHAR(6),N''''?''''),NCHAR(5),N''''?''''),NCHAR(4),N''''?''''),NCHAR(3),N''''?''''),NCHAR(2),N''''?''''),NCHAR(1),N''''?''''), '' +
									''NCHAR(0), '' +
									N'''''''''' '' +
								''), '' +
							''index_name = '' +
								''REPLACE '' +
								''( '' +
									''REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( '' +
									''REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( '' +
									''REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( '' +
										''i.name COLLATE Latin1_General_Bin2, '' +
										''NCHAR(31),N''''?''''),NCHAR(30),N''''?''''),NCHAR(29),N''''?''''),NCHAR(28),N''''?''''),NCHAR(27),N''''?''''),NCHAR(26),N''''?''''),NCHAR(25),N''''?''''),NCHAR(24),N''''?''''),NCHAR(23),N''''?''''),NCHAR(22),N''''?''''), '' +
										''NCHAR(21),N''''?''''),NCHAR(20),N''''?''''),NCHAR(19),N''''?''''),NCHAR(18),N''''?''''),NCHAR(17),N''''?''''),NCHAR(16),N''''?''''),NCHAR(15),N''''?''''),NCHAR(14),N''''?''''),NCHAR(12),N''''?''''), '' +
										''NCHAR(11),N''''?''''),NCHAR(8),N''''?''''),NCHAR(7),N''''?''''),NCHAR(6),N''''?''''),NCHAR(5),N''''?''''),NCHAR(4),N''''?''''),NCHAR(3),N''''?''''),NCHAR(2),N''''?''''),NCHAR(1),N''''?''''), '' +
									''NCHAR(0), '' +
									N'''''''''' '' +
								''), '' +
							''schema_name = '' +
								''REPLACE '' +
								''( '' +
									''REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( '' +
									''REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( '' +
									''REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( '' +
										''s.name COLLATE Latin1_General_Bin2, '' +
										''NCHAR(31),N''''?''''),NCHAR(30),N''''?''''),NCHAR(29),N''''?''''),NCHAR(28),N''''?''''),NCHAR(27),N''''?''''),NCHAR(26),N''''?''''),NCHAR(25),N''''?''''),NCHAR(24),N''''?''''),NCHAR(23),N''''?''''),NCHAR(22),N''''?''''), '' +
										''NCHAR(21),N''''?''''),NCHAR(20),N''''?''''),NCHAR(19),N''''?''''),NCHAR(18),N''''?''''),NCHAR(17),N''''?''''),NCHAR(16),N''''?''''),NCHAR(15),N''''?''''),NCHAR(14),N''''?''''),NCHAR(12),N''''?''''), '' +
										''NCHAR(11),N''''?''''),NCHAR(8),N''''?''''),NCHAR(7),N''''?''''),NCHAR(6),N''''?''''),NCHAR(5),N''''?''''),NCHAR(4),N''''?''''),NCHAR(3),N''''?''''),NCHAR(2),N''''?''''),NCHAR(1),N''''?''''), '' +
									''NCHAR(0), '' +
									N'''''''''' '' +
								''), '' +
							''principal_name = '' + 
								''REPLACE '' +
								''( '' +
									''REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( '' +
									''REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( '' +
									''REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( '' +
										''dp.name COLLATE Latin1_General_Bin2, '' +
										''NCHAR(31),N''''?''''),NCHAR(30),N''''?''''),NCHAR(29),N''''?''''),NCHAR(28),N''''?''''),NCHAR(27),N''''?''''),NCHAR(26),N''''?''''),NCHAR(25),N''''?''''),NCHAR(24),N''''?''''),NCHAR(23),N''''?''''),NCHAR(22),N''''?''''), '' +
										''NCHAR(21),N''''?''''),NCHAR(20),N''''?''''),NCHAR(19),N''''?''''),NCHAR(18),N''''?''''),NCHAR(17),N''''?''''),NCHAR(16),N''''?''''),NCHAR(15),N''''?''''),NCHAR(14),N''''?''''),NCHAR(12),N''''?''''), '' +
										''NCHAR(11),N''''?''''),NCHAR(8),N''''?''''),NCHAR(7),N''''?''''),NCHAR(6),N''''?''''),NCHAR(5),N''''?''''),NCHAR(4),N''''?''''),NCHAR(3),N''''?''''),NCHAR(2),N''''?''''),NCHAR(1),N''''?''''), '' +
									''NCHAR(0), '' +
									N'''''''''' '' +
								'') '' +
						''FROM #locks AS l '' +
						''LEFT OUTER JOIN '' + QUOTENAME(@database_name) + ''.sys.allocation_units AS au ON '' +
							''au.allocation_unit_id = l.allocation_unit_id '' +
						''LEFT OUTER JOIN '' + QUOTENAME(@database_name) + ''.sys.partitions AS p ON '' +
							''p.hobt_id = '' +
								''COALESCE '' +
								''( '' +
									''l.hobt_id, '' +
									''CASE '' +
										''WHEN au.type IN (1, 3) THEN au.container_id '' +
										''ELSE NULL '' +
									''END '' +
								'') '' +
						''LEFT OUTER JOIN '' + QUOTENAME(@database_name) + ''.sys.partitions AS p1 ON '' +
							''l.hobt_id IS NULL '' +
							''AND au.type = 2 '' +
							''AND p1.partition_id = au.container_id '' +
						''LEFT OUTER JOIN '' + QUOTENAME(@database_name) + ''.sys.objects AS o ON '' +
							''o.object_id = COALESCE(l.object_id, p.object_id, p1.object_id) '' +
						''LEFT OUTER JOIN '' + QUOTENAME(@database_name) + ''.sys.indexes AS i ON '' +
							''i.object_id = COALESCE(l.object_id, p.object_id, p1.object_id) '' +
							''AND i.index_id = COALESCE(l.index_id, p.index_id, p1.index_id) '' +
						''LEFT OUTER JOIN '' + QUOTENAME(@database_name) + ''.sys.schemas AS s ON '' +
							''s.schema_id = COALESCE(l.schema_id, o.schema_id) '' +
						''LEFT OUTER JOIN '' + QUOTENAME(@database_name) + ''.sys.database_principals AS dp ON '' +
							''dp.principal_id = l.principal_id '' +
						''WHERE '' +
							''l.database_name = @database_name '' +
						''OPTION (KEEPFIXED PLAN); '';
					
					EXEC sp_executesql
						@sql_n,
						N''@database_name sysname'',
						@database_name;
				END TRY
				BEGIN CATCH;
					UPDATE #locks
					SET
						query_error = 
							REPLACE
							(
								REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
								REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
								REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
									CONVERT
									(
										NVARCHAR(MAX), 
										ERROR_MESSAGE() COLLATE Latin1_General_Bin2
									),
									NCHAR(31),N''?''),NCHAR(30),N''?''),NCHAR(29),N''?''),NCHAR(28),N''?''),NCHAR(27),N''?''),NCHAR(26),N''?''),NCHAR(25),N''?''),NCHAR(24),N''?''),NCHAR(23),N''?''),NCHAR(22),N''?''),
									NCHAR(21),N''?''),NCHAR(20),N''?''),NCHAR(19),N''?''),NCHAR(18),N''?''),NCHAR(17),N''?''),NCHAR(16),N''?''),NCHAR(15),N''?''),NCHAR(14),N''?''),NCHAR(12),N''?''),
									NCHAR(11),N''?''),NCHAR(8),N''?''),NCHAR(7),N''?''),NCHAR(6),N''?''),NCHAR(5),N''?''),NCHAR(4),N''?''),NCHAR(3),N''?''),NCHAR(2),N''?''),NCHAR(1),N''?''),
								NCHAR(0),
								N''''
							)
					WHERE 
						database_name = @database_name
					OPTION (KEEPFIXED PLAN);
				END CATCH;

				FETCH NEXT FROM locks_cursor
				INTO
					@database_name;
			END;

			CLOSE locks_cursor;
			DEALLOCATE locks_cursor;

			CREATE CLUSTERED INDEX IX_SRD ON #locks (session_id, request_id, database_name);

			UPDATE s
			SET 
				s.locks =
				(
					SELECT 
						REPLACE
						(
							REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
							REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
							REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
								CONVERT
								(
									NVARCHAR(MAX), 
									l1.database_name COLLATE Latin1_General_Bin2
								),
								NCHAR(31),N''?''),NCHAR(30),N''?''),NCHAR(29),N''?''),NCHAR(28),N''?''),NCHAR(27),N''?''),NCHAR(26),N''?''),NCHAR(25),N''?''),NCHAR(24),N''?''),NCHAR(23),N''?''),NCHAR(22),N''?''),
								NCHAR(21),N''?''),NCHAR(20),N''?''),NCHAR(19),N''?''),NCHAR(18),N''?''),NCHAR(17),N''?''),NCHAR(16),N''?''),NCHAR(15),N''?''),NCHAR(14),N''?''),NCHAR(12),N''?''),
								NCHAR(11),N''?''),NCHAR(8),N''?''),NCHAR(7),N''?''),NCHAR(6),N''?''),NCHAR(5),N''?''),NCHAR(4),N''?''),NCHAR(3),N''?''),NCHAR(2),N''?''),NCHAR(1),N''?''),
							NCHAR(0),
							N''''
						) AS [Database/@name],
						MIN(l1.query_error) AS [Database/@query_error],
						(
							SELECT 
								l2.request_mode AS [Lock/@request_mode],
								l2.request_status AS [Lock/@request_status],
								COUNT(*) AS [Lock/@request_count]
							FROM #locks AS l2
							WHERE 
								l1.session_id = l2.session_id
								AND l1.request_id = l2.request_id
								AND l2.database_name = l1.database_name
								AND l2.resource_type = ''DATABASE''
							GROUP BY
								l2.request_mode,
								l2.request_status
							FOR XML
								PATH(''''),
								TYPE
						) AS [Database/Locks],
						(
							SELECT
								COALESCE(l3.object_name, ''(null)'') AS [Object/@name],
								l3.schema_name AS [Object/@schema_name],
								(
									SELECT
										l4.resource_type AS [Lock/@resource_type],
										l4.page_type AS [Lock/@page_type],
										l4.index_name AS [Lock/@index_name],
										CASE 
											WHEN l4.object_name IS NULL THEN l4.schema_name
											ELSE NULL
										END AS [Lock/@schema_name],
										l4.principal_name AS [Lock/@principal_name],
										l4.resource_description AS [Lock/@resource_description],
										l4.request_mode AS [Lock/@request_mode],
										l4.request_status AS [Lock/@request_status],
										SUM(l4.request_count) AS [Lock/@request_count]
									FROM #locks AS l4
									WHERE 
										l4.session_id = l3.session_id
										AND l4.request_id = l3.request_id
										AND l3.database_name = l4.database_name
										AND COALESCE(l3.object_name, ''(null)'') = COALESCE(l4.object_name, ''(null)'')
										AND COALESCE(l3.schema_name, '''') = COALESCE(l4.schema_name, '''')
										AND l4.resource_type <> ''DATABASE''
									GROUP BY
										l4.resource_type,
										l4.page_type,
										l4.index_name,
										CASE 
											WHEN l4.object_name IS NULL THEN l4.schema_name
											ELSE NULL
										END,
										l4.principal_name,
										l4.resource_description,
										l4.request_mode,
										l4.request_status
									FOR XML
										PATH(''''),
										TYPE
								) AS [Object/Locks]
							FROM #locks AS l3
							WHERE 
								l3.session_id = l1.session_id
								AND l3.request_id = l1.request_id
								AND l3.database_name = l1.database_name
								AND l3.resource_type <> ''DATABASE''
							GROUP BY 
								l3.session_id,
								l3.request_id,
								l3.database_name,
								COALESCE(l3.object_name, ''(null)''),
								l3.schema_name
							FOR XML
								PATH(''''),
								TYPE
						) AS [Database/Objects]
					FROM #locks AS l1
					WHERE
						l1.session_id = s.session_id
						AND l1.request_id = s.request_id
						AND l1.start_time IN (s.start_time, s.last_request_start_time)
						AND s.recursion = 1
					GROUP BY 
						l1.session_id,
						l1.request_id,
						l1.database_name
					FOR XML
						PATH(''''),
						TYPE
				)
			FROM #sessions s
			OPTION (KEEPFIXED PLAN);
		END;

		IF 
			@find_block_leaders = 1
			AND @recursion = 1
			AND @output_column_list LIKE ''%|[blocked_session_count|]%'' ESCAPE ''|''
		BEGIN;
			WITH
			blockers AS
			(
				SELECT
					session_id,
					session_id AS top_level_session_id
				FROM #sessions
				WHERE
					recursion = 1

				UNION ALL

				SELECT
					s.session_id,
					b.top_level_session_id
				FROM blockers AS b
				JOIN #sessions AS s ON
					s.blocking_session_id = b.session_id
					AND s.recursion = 1
			)
			UPDATE s
			SET
				s.blocked_session_count = x.blocked_session_count
			FROM #sessions AS s
			JOIN
			(
				SELECT
					b.top_level_session_id AS session_id,
					COUNT(*) - 1 AS blocked_session_count
				FROM blockers AS b
				GROUP BY
					b.top_level_session_id
			) x ON
				s.session_id = x.session_id
			WHERE
				s.recursion = 1;
		END;

		IF
			@get_task_info = 2
			AND @output_column_list LIKE ''%|[additional_info|]%'' ESCAPE ''|''
			AND @recursion = 1
		BEGIN;
			CREATE TABLE #blocked_requests
			(
				session_id SMALLINT NOT NULL,
				request_id INT NOT NULL,
				database_name sysname NOT NULL,
				object_id INT,
				hobt_id BIGINT,
				schema_id INT,
				schema_name sysname NULL,
				object_name sysname NULL,
				query_error NVARCHAR(2048),
				PRIMARY KEY (database_name, session_id, request_id)
			);

			CREATE STATISTICS s_database_name ON #blocked_requests (database_name)
			WITH SAMPLE 0 ROWS, NORECOMPUTE;
			CREATE STATISTICS s_schema_name ON #blocked_requests (schema_name)
			WITH SAMPLE 0 ROWS, NORECOMPUTE;
			CREATE STATISTICS s_object_name ON #blocked_requests (object_name)
			WITH SAMPLE 0 ROWS, NORECOMPUTE;
			CREATE STATISTICS s_query_error ON #blocked_requests (query_error)
			WITH SAMPLE 0 ROWS, NORECOMPUTE;
		
			INSERT #blocked_requests
			(
				session_id,
				request_id,
				database_name,
				object_id,
				hobt_id,
				schema_id
			)
			SELECT
				session_id,
				request_id,
				database_name,
				object_id,
				hobt_id,
				CONVERT(INT, SUBSTRING(schema_node, CHARINDEX('' = '', schema_node) + 3, LEN(schema_node))) AS schema_id
			FROM
			(
				SELECT
					session_id,
					request_id,
					agent_nodes.agent_node.value(''(database_name/text())[1]'', ''sysname'') AS database_name,
					agent_nodes.agent_node.value(''(object_id/text())[1]'', ''int'') AS object_id,
					agent_nodes.agent_node.value(''(hobt_id/text())[1]'', ''bigint'') AS hobt_id,
					agent_nodes.agent_node.value(''(metadata_resource/text()[.="SCHEMA"]/../../metadata_class_id/text())[1]'', ''varchar(100)'') AS schema_node
				FROM #sessions AS s
				CROSS APPLY s.additional_info.nodes(''//block_info'') AS agent_nodes (agent_node)
				WHERE
					s.recursion = 1
			) AS t
			WHERE
				t.database_name IS NOT NULL
				AND
				(
					t.object_id IS NOT NULL
					OR t.hobt_id IS NOT NULL
					OR t.schema_node IS NOT NULL
				);
			
			DECLARE blocks_cursor
			CURSOR LOCAL FAST_FORWARD
			FOR
				SELECT DISTINCT
					database_name
				FROM #blocked_requests;
				
			OPEN blocks_cursor;
			
			FETCH NEXT FROM blocks_cursor
			INTO 
				@database_name;
			
			WHILE @@FETCH_STATUS = 0
			BEGIN;
				BEGIN TRY;
					SET @sql_n = 
						CONVERT(NVARCHAR(MAX), '''') +
						''UPDATE b '' +
						''SET '' +
							''b.schema_name = '' +
								''REPLACE '' +
								''( '' +
									''REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( '' +
									''REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( '' +
									''REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( '' +
										''s.name COLLATE Latin1_General_Bin2, '' +
										''NCHAR(31),N''''?''''),NCHAR(30),N''''?''''),NCHAR(29),N''''?''''),NCHAR(28),N''''?''''),NCHAR(27),N''''?''''),NCHAR(26),N''''?''''),NCHAR(25),N''''?''''),NCHAR(24),N''''?''''),NCHAR(23),N''''?''''),NCHAR(22),N''''?''''), '' +
										''NCHAR(21),N''''?''''),NCHAR(20),N''''?''''),NCHAR(19),N''''?''''),NCHAR(18),N''''?''''),NCHAR(17),N''''?''''),NCHAR(16),N''''?''''),NCHAR(15),N''''?''''),NCHAR(14),N''''?''''),NCHAR(12),N''''?''''), '' +
										''NCHAR(11),N''''?''''),NCHAR(8),N''''?''''),NCHAR(7),N''''?''''),NCHAR(6),N''''?''''),NCHAR(5),N''''?''''),NCHAR(4),N''''?''''),NCHAR(3),N''''?''''),NCHAR(2),N''''?''''),NCHAR(1),N''''?''''), '' +
									''NCHAR(0), '' +
									N'''''''''' '' +
								''), '' +
							''b.object_name = '' +
								''REPLACE '' +
								''( '' +
									''REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( '' +
									''REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( '' +
									''REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( '' +
										''o.name COLLATE Latin1_General_Bin2, '' +
										''NCHAR(31),N''''?''''),NCHAR(30),N''''?''''),NCHAR(29),N''''?''''),NCHAR(28),N''''?''''),NCHAR(27),N''''?''''),NCHAR(26),N''''?''''),NCHAR(25),N''''?''''),NCHAR(24),N''''?''''),NCHAR(23),N''''?''''),NCHAR(22),N''''?''''), '' +
										''NCHAR(21),N''''?''''),NCHAR(20),N''''?''''),NCHAR(19),N''''?''''),NCHAR(18),N''''?''''),NCHAR(17),N''''?''''),NCHAR(16),N''''?''''),NCHAR(15),N''''?''''),NCHAR(14),N''''?''''),NCHAR(12),N''''?''''), '' +
										''NCHAR(11),N''''?''''),NCHAR(8),N''''?''''),NCHAR(7),N''''?''''),NCHAR(6),N''''?''''),NCHAR(5),N''''?''''),NCHAR(4),N''''?''''),NCHAR(3),N''''?''''),NCHAR(2),N''''?''''),NCHAR(1),N''''?''''), '' +
									''NCHAR(0), '' +
									N'''''''''' '' +
								'') '' +
						''FROM #blocked_requests AS b '' +
						''LEFT OUTER JOIN '' + QUOTENAME(@database_name) + ''.sys.partitions AS p ON '' +
							''p.hobt_id = b.hobt_id '' +
						''LEFT OUTER JOIN '' + QUOTENAME(@database_name) + ''.sys.objects AS o ON '' +
							''o.object_id = COALESCE(p.object_id, b.object_id) '' +
						''LEFT OUTER JOIN '' + QUOTENAME(@database_name) + ''.sys.schemas AS s ON '' +
							''s.schema_id = COALESCE(o.schema_id, b.schema_id) '' +
						''WHERE '' +
							''b.database_name = @database_name; '';
					
					EXEC sp_executesql
						@sql_n,
						N''@database_name sysname'',
						@database_name;
				END TRY
				BEGIN CATCH;
					UPDATE #blocked_requests
					SET
						query_error = 
							REPLACE
							(
								REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
								REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
								REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
									CONVERT
									(
										NVARCHAR(MAX), 
										ERROR_MESSAGE() COLLATE Latin1_General_Bin2
									),
									NCHAR(31),N''?''),NCHAR(30),N''?''),NCHAR(29),N''?''),NCHAR(28),N''?''),NCHAR(27),N''?''),NCHAR(26),N''?''),NCHAR(25),N''?''),NCHAR(24),N''?''),NCHAR(23),N''?''),NCHAR(22),N''?''),
									NCHAR(21),N''?''),NCHAR(20),N''?''),NCHAR(19),N''?''),NCHAR(18),N''?''),NCHAR(17),N''?''),NCHAR(16),N''?''),NCHAR(15),N''?''),NCHAR(14),N''?''),NCHAR(12),N''?''),
									NCHAR(11),N''?''),NCHAR(8),N''?''),NCHAR(7),N''?''),NCHAR(6),N''?''),NCHAR(5),N''?''),NCHAR(4),N''?''),NCHAR(3),N''?''),NCHAR(2),N''?''),NCHAR(1),N''?''),
								NCHAR(0),
								N''''
							)
					WHERE
						database_name = @database_name;
				END CATCH;

				FETCH NEXT FROM blocks_cursor
				INTO
					@database_name;
			END;
			
			CLOSE blocks_cursor;
			DEALLOCATE blocks_cursor;
			
			UPDATE s
			SET
				additional_info.modify
				(''
					insert <schema_name>{sql:column("b.schema_name")}</schema_name>
					as last
					into (/additional_info/block_info)[1]
				'')
			FROM #sessions AS s
			INNER JOIN #blocked_requests AS b ON
				b.session_id = s.session_id
				AND b.request_id = s.request_id
				AND s.recursion = 1
			WHERE
				b.schema_name IS NOT NULL;

			UPDATE s
			SET
				additional_info.modify
				(''
					insert <object_name>{sql:column("b.object_name")}</object_name>
					as last
					into (/additional_info/block_info)[1]
				'')
			FROM #sessions AS s
			INNER JOIN #blocked_requests AS b ON
				b.session_id = s.session_id
				AND b.request_id = s.request_id
				AND s.recursion = 1
			WHERE
				b.object_name IS NOT NULL;

			UPDATE s
			SET
				additional_info.modify
				(''
					insert <query_error>{sql:column("b.query_error")}</query_error>
					as last
					into (/additional_info/block_info)[1]
				'')
			FROM #sessions AS s
			INNER JOIN #blocked_requests AS b ON
				b.session_id = s.session_id
				AND b.request_id = s.request_id
				AND s.recursion = 1
			WHERE
				b.query_error IS NOT NULL;
		END;

		IF
			@output_column_list LIKE ''%|[program_name|]%'' ESCAPE ''|''
			AND @output_column_list LIKE ''%|[additional_info|]%'' ESCAPE ''|''
			AND @recursion = 1
		BEGIN;
			DECLARE @job_id UNIQUEIDENTIFIER;
			DECLARE @step_id INT;

			DECLARE agent_cursor
			CURSOR LOCAL FAST_FORWARD
			FOR 
				SELECT
					s.session_id,
					agent_nodes.agent_node.value(''(job_id/text())[1]'', ''uniqueidentifier'') AS job_id,
					agent_nodes.agent_node.value(''(step_id/text())[1]'', ''int'') AS step_id
				FROM #sessions AS s
				CROSS APPLY s.additional_info.nodes(''//agent_job_info'') AS agent_nodes (agent_node)
				WHERE
					s.recursion = 1
			OPTION (KEEPFIXED PLAN);
			
			OPEN agent_cursor;

			FETCH NEXT FROM agent_cursor
			INTO 
				@session_id,
				@job_id,
				@step_id;

			WHILE @@FETCH_STATUS = 0
			BEGIN;
				BEGIN TRY;
					DECLARE @job_name sysname;
					SET @job_name = NULL;
					DECLARE @step_name sysname;
					SET @step_name = NULL;
					
					SELECT
						@job_name = 
							REPLACE
							(
								REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
								REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
								REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
									j.name,
									NCHAR(31),N''?''),NCHAR(30),N''?''),NCHAR(29),N''?''),NCHAR(28),N''?''),NCHAR(27),N''?''),NCHAR(26),N''?''),NCHAR(25),N''?''),NCHAR(24),N''?''),NCHAR(23),N''?''),NCHAR(22),N''?''),
									NCHAR(21),N''?''),NCHAR(20),N''?''),NCHAR(19),N''?''),NCHAR(18),N''?''),NCHAR(17),N''?''),NCHAR(16),N''?''),NCHAR(15),N''?''),NCHAR(14),N''?''),NCHAR(12),N''?''),
									NCHAR(11),N''?''),NCHAR(8),N''?''),NCHAR(7),N''?''),NCHAR(6),N''?''),NCHAR(5),N''?''),NCHAR(4),N''?''),NCHAR(3),N''?''),NCHAR(2),N''?''),NCHAR(1),N''?''),
								NCHAR(0),
								N''?''
							),
						@step_name = 
							REPLACE
							(
								REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
								REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
								REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
									s.step_name,
									NCHAR(31),N''?''),NCHAR(30),N''?''),NCHAR(29),N''?''),NCHAR(28),N''?''),NCHAR(27),N''?''),NCHAR(26),N''?''),NCHAR(25),N''?''),NCHAR(24),N''?''),NCHAR(23),N''?''),NCHAR(22),N''?''),
									NCHAR(21),N''?''),NCHAR(20),N''?''),NCHAR(19),N''?''),NCHAR(18),N''?''),NCHAR(17),N''?''),NCHAR(16),N''?''),NCHAR(15),N''?''),NCHAR(14),N''?''),NCHAR(12),N''?''),
									NCHAR(11),N''?''),NCHAR(8),N''?''),NCHAR(7),N''?''),NCHAR(6),N''?''),NCHAR(5),N''?''),NCHAR(4),N''?''),NCHAR(3),N''?''),NCHAR(2),N''?''),NCHAR(1),N''?''),
								NCHAR(0),
								N''?''
							)
					FROM msdb.dbo.sysjobs AS j
					INNER JOIN msdb..sysjobsteps AS s ON
						j.job_id = s.job_id
					WHERE
						j.job_id = @job_id
						AND s.step_id = @step_id;

					IF @job_name IS NOT NULL
					BEGIN;
						UPDATE s
						SET
							additional_info.modify
							(''
								insert text{sql:variable("@job_name")}
								into (/additional_info/agent_job_info/job_name)[1]
							'')
						FROM #sessions AS s
						WHERE 
							s.session_id = @session_id
						OPTION (KEEPFIXED PLAN);
						
						UPDATE s
						SET
							additional_info.modify
							(''
								insert text{sql:variable("@step_name")}
								into (/additional_info/agent_job_info/step_name)[1]
							'')
						FROM #sessions AS s
						WHERE 
							s.session_id = @session_id
						OPTION (KEEPFIXED PLAN);
					END;
				END TRY
				BEGIN CATCH;
					DECLARE @msdb_error_message NVARCHAR(256);
					SET @msdb_error_message = ERROR_MESSAGE();
				
					UPDATE s
					SET
						additional_info.modify
						(''
							insert <msdb_query_error>{sql:variable("@msdb_error_message")}</msdb_query_error>
							as last
							into (/additional_info/agent_job_info)[1]
						'')
					FROM #sessions AS s
					WHERE 
						s.session_id = @session_id
						AND s.recursion = 1
					OPTION (KEEPFIXED PLAN);
				END CATCH;

				FETCH NEXT FROM agent_cursor
				INTO 
					@session_id,
					@job_id,
					@step_id;
			END;

			CLOSE agent_cursor;
			DEALLOCATE agent_cursor;
		END; 
		
		IF 
			@delta_interval > 0 
			AND @recursion <> 1
		BEGIN;
			SET @recursion = 1;

			DECLARE @delay_time CHAR(12);
			SET @delay_time = CONVERT(VARCHAR, DATEADD(second, @delta_interval, 0), 114);
			WAITFOR DELAY @delay_time;

			GOTO REDO;
		END;
	END;

	SET @sql = 
		--Outer column list
		CONVERT
		(
			VARCHAR(MAX),
			CASE
				WHEN 
					@destination_table <> '''' 
					AND @return_schema = 0 
						THEN ''INSERT '' + @destination_table + '' ''
				ELSE ''''
			END +
			''SELECT '' +
				@output_column_list + '' '' +
			CASE @return_schema
				WHEN 1 THEN ''INTO #session_schema ''
				ELSE ''''
			END
		--End outer column list
		) + 
		--Inner column list
		CONVERT
		(
			VARCHAR(MAX),
			''FROM '' +
			''( '' +
				''SELECT '' +
					''session_id, '' +
					--[dd hh:mm:ss.mss]
					CASE
						WHEN @format_output IN (1, 2) THEN
							''CASE '' +
								''WHEN elapsed_time < 0 THEN '' +
									''RIGHT '' +
									''( '' +
										''REPLICATE(''''0'''', max_elapsed_length) + CONVERT(VARCHAR, (-1 * elapsed_time) / 86400), '' +
										''max_elapsed_length '' +
									'') + '' +
										''RIGHT '' +
										''( '' +
											''CONVERT(VARCHAR, DATEADD(second, (-1 * elapsed_time), 0), 120), '' +
											''9 '' +
										'') + '' +
										''''''.000'''' '' +
								''ELSE '' +
									''RIGHT '' +
									''( '' +
										''REPLICATE(''''0'''', max_elapsed_length) + CONVERT(VARCHAR, elapsed_time / 86400000), '' +
										''max_elapsed_length '' +
									'') + '' +
										''RIGHT '' +
										''( '' +
											''CONVERT(VARCHAR, DATEADD(second, elapsed_time / 1000, 0), 120), '' +
											''9 '' +
										'') + '' +
										''''''.'''' + '' + 
										''RIGHT(''''000'''' + CONVERT(VARCHAR, elapsed_time % 1000), 3) '' +
							''END AS [dd hh:mm:ss.mss], ''
						ELSE
							''''
					END +
					--[dd hh:mm:ss.mss (avg)] / avg_elapsed_time
					CASE 
						WHEN  @format_output IN (1, 2) THEN 
							''RIGHT '' +
							''( '' +
								''''''00'''' + CONVERT(VARCHAR, avg_elapsed_time / 86400000), '' +
								''2 '' +
							'') + '' +
								''RIGHT '' +
								''( '' +
									''CONVERT(VARCHAR, DATEADD(second, avg_elapsed_time / 1000, 0), 120), '' +
									''9 '' +
								'') + '' +
								''''''.'''' + '' +
								''RIGHT(''''000'''' + CONVERT(VARCHAR, avg_elapsed_time % 1000), 3) AS [dd hh:mm:ss.mss (avg)], ''
						ELSE
							''avg_elapsed_time, ''
					END +
					--physical_io
					CASE @format_output
						WHEN 1 THEN ''CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, physical_io))) OVER() - LEN(CONVERT(VARCHAR, physical_io))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, physical_io), 1), 19)) AS ''
						WHEN 2 THEN ''CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, physical_io), 1), 19)) AS ''
						ELSE ''''
					END + ''physical_io, '' +
					--reads
					CASE @format_output
						WHEN 1 THEN ''CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, reads))) OVER() - LEN(CONVERT(VARCHAR, reads))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, reads), 1), 19)) AS ''
						WHEN 2 THEN ''CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, reads), 1), 19)) AS ''
						ELSE ''''
					END + ''reads, '' +
					--physical_reads
					CASE @format_output
						WHEN 1 THEN ''CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, physical_reads))) OVER() - LEN(CONVERT(VARCHAR, physical_reads))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, physical_reads), 1), 19)) AS ''
						WHEN 2 THEN ''CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, physical_reads), 1), 19)) AS ''
						ELSE ''''
					END + ''physical_reads, '' +
					--writes
					CASE @format_output
						WHEN 1 THEN ''CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, writes))) OVER() - LEN(CONVERT(VARCHAR, writes))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, writes), 1), 19)) AS ''
						WHEN 2 THEN ''CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, writes), 1), 19)) AS ''
						ELSE ''''
					END + ''writes, '' +
					--tempdb_allocations
					CASE @format_output
						WHEN 1 THEN ''CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, tempdb_allocations))) OVER() - LEN(CONVERT(VARCHAR, tempdb_allocations))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, tempdb_allocations), 1), 19)) AS ''
						WHEN 2 THEN ''CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, tempdb_allocations), 1), 19)) AS ''
						ELSE ''''
					END + ''tempdb_allocations, '' +
					--tempdb_current
					CASE @format_output
						WHEN 1 THEN ''CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, tempdb_current))) OVER() - LEN(CONVERT(VARCHAR, tempdb_current))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, tempdb_current), 1), 19)) AS ''
						WHEN 2 THEN ''CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, tempdb_current), 1), 19)) AS ''
						ELSE ''''
					END + ''tempdb_current, '' +
					--CPU
					CASE @format_output
						WHEN 1 THEN ''CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, CPU))) OVER() - LEN(CONVERT(VARCHAR, CPU))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, CPU), 1), 19)) AS ''
						WHEN 2 THEN ''CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, CPU), 1), 19)) AS ''
						ELSE ''''
					END + ''CPU, '' +
					--context_switches
					CASE @format_output
						WHEN 1 THEN ''CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, context_switches))) OVER() - LEN(CONVERT(VARCHAR, context_switches))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, context_switches), 1), 19)) AS ''
						WHEN 2 THEN ''CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, context_switches), 1), 19)) AS ''
						ELSE ''''
					END + ''context_switches, '' +
					--used_memory
					CASE @format_output
						WHEN 1 THEN ''CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, used_memory))) OVER() - LEN(CONVERT(VARCHAR, used_memory))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, used_memory), 1), 19)) AS ''
						WHEN 2 THEN ''CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, used_memory), 1), 19)) AS ''
						ELSE ''''
					END + ''used_memory, '' +
					CASE
						WHEN @output_column_list LIKE ''%|_delta|]%'' ESCAPE ''|'' THEN
							--physical_io_delta			
							''CASE '' +
								''WHEN '' +
									''first_request_start_time = last_request_start_time '' + 
									''AND num_events = 2 '' +
									''AND physical_io_delta >= 0 '' +
										''THEN '' +
										CASE @format_output
											WHEN 1 THEN ''CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, physical_io_delta))) OVER() - LEN(CONVERT(VARCHAR, physical_io_delta))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, physical_io_delta), 1), 19)) '' 
											WHEN 2 THEN ''CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, physical_io_delta), 1), 19)) ''
											ELSE ''physical_io_delta ''
										END +
								''ELSE NULL '' +
							''END AS physical_io_delta, '' +
							--reads_delta
							''CASE '' +
								''WHEN '' +
									''first_request_start_time = last_request_start_time '' + 
									''AND num_events = 2 '' +
									''AND reads_delta >= 0 '' +
										''THEN '' +
										CASE @format_output
											WHEN 1 THEN ''CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, reads_delta))) OVER() - LEN(CONVERT(VARCHAR, reads_delta))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, reads_delta), 1), 19)) ''
											WHEN 2 THEN ''CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, reads_delta), 1), 19)) ''
											ELSE ''reads_delta ''
										END +
								''ELSE NULL '' +
							''END AS reads_delta, '' +
							--physical_reads_delta
							''CASE '' +
								''WHEN '' +
									''first_request_start_time = last_request_start_time '' + 
									''AND num_events = 2 '' +
									''AND physical_reads_delta >= 0 '' +
										''THEN '' +
										CASE @format_output
											WHEN 1 THEN ''CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, physical_reads_delta))) OVER() - LEN(CONVERT(VARCHAR, physical_reads_delta))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, physical_reads_delta), 1), 19)) ''
											WHEN 2 THEN ''CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, physical_reads_delta), 1), 19)) ''
											ELSE ''physical_reads_delta ''
										END + 
								''ELSE NULL '' +
							''END AS physical_reads_delta, '' +
							--writes_delta
							''CASE '' +
								''WHEN '' +
									''first_request_start_time = last_request_start_time '' + 
									''AND num_events = 2 '' +
									''AND writes_delta >= 0 '' +
										''THEN '' +
										CASE @format_output
											WHEN 1 THEN ''CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, writes_delta))) OVER() - LEN(CONVERT(VARCHAR, writes_delta))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, writes_delta), 1), 19)) ''
											WHEN 2 THEN ''CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, writes_delta), 1), 19)) ''
											ELSE ''writes_delta ''
										END + 
								''ELSE NULL '' +
							''END AS writes_delta, '' +
							--tempdb_allocations_delta
							''CASE '' +
								''WHEN '' +
									''first_request_start_time = last_request_start_time '' + 
									''AND num_events = 2 '' +
									''AND tempdb_allocations_delta >= 0 '' +
										''THEN '' +
										CASE @format_output
											WHEN 1 THEN ''CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, tempdb_allocations_delta))) OVER() - LEN(CONVERT(VARCHAR, tempdb_allocations_delta))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, tempdb_allocations_delta), 1), 19)) ''
											WHEN 2 THEN ''CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, tempdb_allocations_delta), 1), 19)) ''
											ELSE ''tempdb_allocations_delta ''
										END + 
								''ELSE NULL '' +
							''END AS tempdb_allocations_delta, '' +
							--tempdb_current_delta
							--this is the only one that can (legitimately) go negative 
							''CASE '' +
								''WHEN '' +
									''first_request_start_time = last_request_start_time '' + 
									''AND num_events = 2 '' +
										''THEN '' +
										CASE @format_output
											WHEN 1 THEN ''CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, tempdb_current_delta))) OVER() - LEN(CONVERT(VARCHAR, tempdb_current_delta))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, tempdb_current_delta), 1), 19)) ''
											WHEN 2 THEN ''CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, tempdb_current_delta), 1), 19)) ''
											ELSE ''tempdb_current_delta ''
										END + 
								''ELSE NULL '' +
							''END AS tempdb_current_delta, '' +
							--CPU_delta
							''CASE '' +
								''WHEN '' +
									''first_request_start_time = last_request_start_time '' + 
									''AND num_events = 2 '' +
										''THEN '' +
											''CASE '' +
												''WHEN '' +
													''thread_CPU_delta > CPU_delta '' +
													''AND thread_CPU_delta > 0 '' +
														''THEN '' +
															CASE @format_output
																WHEN 1 THEN ''CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, thread_CPU_delta + CPU_delta))) OVER() - LEN(CONVERT(VARCHAR, thread_CPU_delta))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, thread_CPU_delta), 1), 19)) ''
																WHEN 2 THEN ''CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, thread_CPU_delta), 1), 19)) ''
																ELSE ''thread_CPU_delta ''
															END + 
												''WHEN CPU_delta >= 0 THEN '' +
													CASE @format_output
														WHEN 1 THEN ''CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, thread_CPU_delta + CPU_delta))) OVER() - LEN(CONVERT(VARCHAR, CPU_delta))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, CPU_delta), 1), 19)) ''
														WHEN 2 THEN ''CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, CPU_delta), 1), 19)) ''
														ELSE ''CPU_delta ''
													END + 
												''ELSE NULL '' +
											''END '' +
								''ELSE '' +
									''NULL '' +
							''END AS CPU_delta, '' +
							--context_switches_delta
							''CASE '' +
								''WHEN '' +
									''first_request_start_time = last_request_start_time '' + 
									''AND num_events = 2 '' +
									''AND context_switches_delta >= 0 '' +
										''THEN '' +
										CASE @format_output
											WHEN 1 THEN ''CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, context_switches_delta))) OVER() - LEN(CONVERT(VARCHAR, context_switches_delta))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, context_switches_delta), 1), 19)) ''
											WHEN 2 THEN ''CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, context_switches_delta), 1), 19)) ''
											ELSE ''context_switches_delta ''
										END + 
								''ELSE NULL '' +
							''END AS context_switches_delta, '' +
							--used_memory_delta
							''CASE '' +
								''WHEN '' +
									''first_request_start_time = last_request_start_time '' + 
									''AND num_events = 2 '' +
									''AND used_memory_delta >= 0 '' +
										''THEN '' +
										CASE @format_output
											WHEN 1 THEN ''CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, used_memory_delta))) OVER() - LEN(CONVERT(VARCHAR, used_memory_delta))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, used_memory_delta), 1), 19)) ''
											WHEN 2 THEN ''CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, used_memory_delta), 1), 19)) ''
											ELSE ''used_memory_delta ''
										END + 
								''ELSE NULL '' +
							''END AS used_memory_delta, ''
						ELSE ''''
					END +
					--tasks
					CASE @format_output
						WHEN 1 THEN ''CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, tasks))) OVER() - LEN(CONVERT(VARCHAR, tasks))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, tasks), 1), 19)) AS ''
						WHEN 2 THEN ''CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, tasks), 1), 19)) ''
						ELSE ''''
					END + ''tasks, '' +
					''status, '' +
					''wait_info, '' +
					''locks, '' +
					''tran_start_time, '' +
					''LEFT(tran_log_writes, LEN(tran_log_writes) - 1) AS tran_log_writes, '' +
					--open_tran_count
					CASE @format_output
						WHEN 1 THEN ''CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, open_tran_count))) OVER() - LEN(CONVERT(VARCHAR, open_tran_count))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, open_tran_count), 1), 19)) AS ''
						WHEN 2 THEN ''CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, open_tran_count), 1), 19)) AS ''
						ELSE ''''
					END + ''open_tran_count, '' +
					--sql_command
					CASE @format_output 
						WHEN 0 THEN ''REPLACE(REPLACE(CONVERT(NVARCHAR(MAX), sql_command), ''''<?query --''''+CHAR(13)+CHAR(10), ''''''''), CHAR(13)+CHAR(10)+''''--?>'''', '''''''') AS ''
						ELSE ''''
					END + ''sql_command, '' +
					--sql_text
					CASE @format_output 
						WHEN 0 THEN ''REPLACE(REPLACE(CONVERT(NVARCHAR(MAX), sql_text), ''''<?query --''''+CHAR(13)+CHAR(10), ''''''''), CHAR(13)+CHAR(10)+''''--?>'''', '''''''') AS ''
						ELSE ''''
					END + ''sql_text, '' +
					''query_plan, '' +
					''blocking_session_id, '' +
					--blocked_session_count
					CASE @format_output
						WHEN 1 THEN ''CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, blocked_session_count))) OVER() - LEN(CONVERT(VARCHAR, blocked_session_count))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, blocked_session_count), 1), 19)) AS ''
						WHEN 2 THEN ''CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, blocked_session_count), 1), 19)) AS ''
						ELSE ''''
					END + ''blocked_session_count, '' +
					--percent_complete
					CASE @format_output
						WHEN 1 THEN ''CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, CONVERT(MONEY, percent_complete), 2))) OVER() - LEN(CONVERT(VARCHAR, CONVERT(MONEY, percent_complete), 2))) + CONVERT(CHAR(22), CONVERT(MONEY, percent_complete), 2)) AS ''
						WHEN 2 THEN ''CONVERT(VARCHAR, CONVERT(CHAR(22), CONVERT(MONEY, blocked_session_count), 1)) AS ''
						ELSE ''''
					END + ''percent_complete, '' +
					''host_name, '' +
					''login_name, '' +
					''database_name, '' +
					''program_name, '' +
					''additional_info, '' +
					''start_time, '' +
					''login_time, '' +
					''CASE '' +
						''WHEN status = N''''sleeping'''' THEN NULL '' +
						''ELSE request_id '' +
					''END AS request_id, '' +
					''GETDATE() AS collection_time ''
		--End inner column list
		) +
		--Derived table and INSERT specification
		CONVERT
		(
			VARCHAR(MAX),
				''FROM '' +
				''( '' +
					''SELECT TOP(2147483647) '' +
						''*, '' +
						''CASE '' +
							''MAX '' +
							''( '' +
								''LEN '' +
								''( '' +
									''CONVERT '' +
									''( '' +
										''VARCHAR, '' +
										''CASE '' +
											''WHEN elapsed_time < 0 THEN '' +
												''(-1 * elapsed_time) / 86400 '' +
											''ELSE '' +
												''elapsed_time / 86400000 '' +
										''END '' +
									'') '' +
								'') '' +
							'') OVER () '' +
								''WHEN 1 THEN 2 '' +
								''ELSE '' +
									''MAX '' +
									''( '' +
										''LEN '' +
										''( '' +
											''CONVERT '' +
											''( '' +
												''VARCHAR, '' +
												''CASE '' +
													''WHEN elapsed_time < 0 THEN '' +
														''(-1 * elapsed_time) / 86400 '' +
													''ELSE '' +
														''elapsed_time / 86400000 '' +
												''END '' +
											'') '' +
										'') '' +
									'') OVER () '' +
						''END AS max_elapsed_length, '' +
						CASE
							WHEN @output_column_list LIKE ''%|_delta|]%'' ESCAPE ''|'' THEN
								''MAX(physical_io * recursion) OVER (PARTITION BY session_id, request_id) + '' +
									''MIN(physical_io * recursion) OVER (PARTITION BY session_id, request_id) AS physical_io_delta, '' +
								''MAX(reads * recursion) OVER (PARTITION BY session_id, request_id) + '' +
									''MIN(reads * recursion) OVER (PARTITION BY session_id, request_id) AS reads_delta, '' +
								''MAX(physical_reads * recursion) OVER (PARTITION BY session_id, request_id) + '' +
									''MIN(physical_reads * recursion) OVER (PARTITION BY session_id, request_id) AS physical_reads_delta, '' +
								''MAX(writes * recursion) OVER (PARTITION BY session_id, request_id) + '' +
									''MIN(writes * recursion) OVER (PARTITION BY session_id, request_id) AS writes_delta, '' +
								''MAX(tempdb_allocations * recursion) OVER (PARTITION BY session_id, request_id) + '' +
									''MIN(tempdb_allocations * recursion) OVER (PARTITION BY session_id, request_id) AS tempdb_allocations_delta, '' +
								''MAX(tempdb_current * recursion) OVER (PARTITION BY session_id, request_id) + '' +
									''MIN(tempdb_current * recursion) OVER (PARTITION BY session_id, request_id) AS tempdb_current_delta, '' +
								''MAX(CPU * recursion) OVER (PARTITION BY session_id, request_id) + '' +
									''MIN(CPU * recursion) OVER (PARTITION BY session_id, request_id) AS CPU_delta, '' +
								''MAX(thread_CPU_snapshot * recursion) OVER (PARTITION BY session_id, request_id) + '' +
									''MIN(thread_CPU_snapshot * recursion) OVER (PARTITION BY session_id, request_id) AS thread_CPU_delta, '' +
								''MAX(context_switches * recursion) OVER (PARTITION BY session_id, request_id) + '' +
									''MIN(context_switches * recursion) OVER (PARTITION BY session_id, request_id) AS context_switches_delta, '' +
								''MAX(used_memory * recursion) OVER (PARTITION BY session_id, request_id) + '' +
									''MIN(used_memory * recursion) OVER (PARTITION BY session_id, request_id) AS used_memory_delta, '' +
								''MIN(last_request_start_time) OVER (PARTITION BY session_id, request_id) AS first_request_start_time, ''
							ELSE ''''
						END +
						''COUNT(*) OVER (PARTITION BY session_id, request_id) AS num_events '' +
					''FROM #sessions AS s1 '' +
					CASE 
						WHEN @sort_order = '''' THEN ''''
						ELSE
							''ORDER BY '' +
								@sort_order
					END +
				'') AS s '' +
				''WHERE '' +
					''s.recursion = 1 '' +
			'') x '' +
			''OPTION (KEEPFIXED PLAN); '' +
			'''' +
			CASE @return_schema
				WHEN 1 THEN
					''SET @schema = '' +
						''''''CREATE TABLE <table_name> ( '''' + '' +
							''STUFF '' +
							''( '' +
								''( '' +
									''SELECT '' +
										'''''','''' + '' +
										''QUOTENAME(COLUMN_NAME) + '''' '''' + '' +
										''DATA_TYPE + '' + 
										''CASE '' +
											''WHEN DATA_TYPE LIKE ''''%char'''' THEN ''''('''' + COALESCE(NULLIF(CONVERT(VARCHAR, CHARACTER_MAXIMUM_LENGTH), ''''-1''''), ''''max'''') + '''') '''' '' +
											''ELSE '''' '''' '' +
										''END + '' +
										''CASE IS_NULLABLE '' +
											''WHEN ''''NO'''' THEN ''''NOT '''' '' +
											''ELSE '''''''' '' +
										''END + ''''NULL'''' AS [text()] '' +
									''FROM tempdb.INFORMATION_SCHEMA.COLUMNS '' +
									''WHERE '' +
										''TABLE_NAME = (SELECT name FROM tempdb.sys.objects WHERE object_id = OBJECT_ID(''''tempdb..#session_schema'''')) '' +
										''ORDER BY '' +
											''ORDINAL_POSITION '' +
									''FOR XML '' +
										''PATH('''''''') '' +
								''), + '' +
								''1, '' +
								''1, '' +
								'''''''''' '' +
							'') + '' +
						'''''')''''; '' 
				ELSE ''''
			END
		--End derived table and INSERT specification
		);

	SET @sql_n = CONVERT(NVARCHAR(MAX), @sql);

	EXEC sp_executesql
		@sql_n,
		N''@schema VARCHAR(MAX) OUTPUT'',
		@schema OUTPUT;
END;
'
GO

GO
PRINT N'Creating [dbo].[sp_addBit]'
GO
IF OBJECT_ID(N'[dbo].[sp_addBit]', 'P') IS NULL
EXEC sp_executesql N'create procedure [dbo].[sp_addBit] with encryption as
insert into xbit (cantidad,hora)
select COUNT(1) as cantidad,getdate() as hora from sysobjects where xtype in (''U'',''V'') and left(name,1)=''Z''

'
GO

GO
PRINT N'Creating [dbo].[sp_reducelog_BD]'
GO
IF OBJECT_ID(N'[dbo].[sp_reducelog_BD]', 'P') IS NULL
EXEC sp_executesql N'CREATE procedure [dbo].[sp_reducelog_BD]
as
begin
checkpoint
DBCC SHRINKFILE (Amigos_Demo_Log, 1);
DBCC SHRINKFILE (Amigos_Demo_Log2, 1);
DBCC SHRINKFILE (Amigos_Demo_Log3, 1);
DBCC SHRINKFILE (Amigos_Demo_Log4, 1);
DBCC SHRINKFILE (Amigos_Demo_Log5, 1);
DBCC SHRINKFILE (Amigos_Demo_Log6, 1);
DBCC SHRINKFILE (Amigos_Demo_Log7, 1);
DBCC SHRINKFILE (Amigos_Demo_Log8, 1);
DBCC SHRINKFILE (Amigos_Demo_Log9, 1);
end'
GO

GO
PRINT N'Creating [dbo].[spf_obten_plantillas_impresion]'
GO
IF OBJECT_ID(N'[dbo].[spf_obten_plantillas_impresion]', 'P') IS NULL
EXEC sp_executesql N'create procedure [dbo].[spf_obten_plantillas_impresion](
@id_usuario as int
)
with recompile       
as                                              
begin      
SET NOCOUNT ON;
select id_plantilla,''VERIFICA.-'' + VERIFICA +''--CARGO:'' + CARGO_VERIFICA +'', ''+ ''AUTORIZA.-''+AUTORIZA+''--CARGO:''+CARGO_AUTORIZA as plantilla from fup_plantillas_firmas
where id_usuario=@id_usuario
end'
GO

GO
PRINT N'Creating [dbo].[spf_reportes_datos_personales]'
GO
IF OBJECT_ID(N'[dbo].[spf_reportes_datos_personales]', 'P') IS NULL
EXEC sp_executesql N'--exec spf_reportes_datos_personales ''201816'',6,10,'''','''',''''
--exec spf_reportes_datos_personales '''',2,10,'''','''',''''
--exec spf_reportes_datos_personales ''201816'',6,10,'''','''',''''
--exec spf_reportes_datos_personales '''',4,0,'''','''',''''
--exec spf_reportes_datos_personales ''201812'',4,10,'''','''',''''
CREATE procedure [dbo].[spf_reportes_datos_personales]
@quincena varchar(6)='''',--valor de la quincena en formato año quincena AAAAQQ
@tipo_reporte int,--el valor 0 para mostrar los tipos de datos personales,1 si es para folios en estatus pendiente o capturados, 2 para estatus procesados
@tipo_cambio int,--valor del 0 al 6 para el filtro de tipo de cambio de dato personal (curp,rfc,nombre, etc) ó el valor 10 ejecuta todos los cambios efectuados
@drse varchar(80)='''',
@id_nivel_educativo as varchar(5)='''',
@no_relacion as varchar(50)=''''
with recompile       
as                                              
begin
SET NOCOUNT ON;
		--declare @quincena as varchar(6)=''201816''
		--declare @tipo_reporte as int=2
		--declare @tipo_cambio as int=10--para el reporte general sin filtro es 10
		--declare @drse as varchar(80)=''''
		--declare @id_nivel_educativo as varchar(5)=''''
	 --   declare @no_relacion as varchar(50)=''''
		declare @where as varchar(max)=''''
		declare @ssql as varchar(max)

			if(@quincena<>'''')--si viene el filtro por periodo/quincena
			begin
				 set @where='' and c.numero=substring(''+''''''''+@quincena+''''''''+'',5,2) and año=substring(''+''''''''+@quincena+''''''''+'',1,4)''
			end

			if(@drse<>'''')--si viene el filtro por periodo/quincena
			begin
				 set @where= @where + '' and u.observaciones='' +'''''''' + @drse +''''''''
			end

			if(@id_nivel_educativo<>'''')--si viene el filtro por nivel educativo
			begin
				 set @where= @where + '' and fid.id_nivel_educativo='' + +'''''''' + @id_nivel_educativo +''''''''
			end
			if(@no_relacion<>'''')--si viene el filtro por el numero de relacion
			begin
				 set @where= @where + '' and fid.no_relacion='' + +'''''''' + @no_relacion +''''''''
			end				
        if (@tipo_reporte=0)-- se utiliza el valor 0 para mostrar las tipos de cambios de datos personales
		begin 
		     set @ssql=''select id_tfup_cambio_datos_personales as id,LTRIM(REPLACE(SUBSTRING(Descripcion,5,80),''''.-'''','''''''')) AS modificacion from TTFup_Cambio_Datos_Personales''
			 exec(@ssql)
		end				    
		else if (@tipo_reporte=1)------ para datos personales  en estatus pendiente o capturado
			   begin
					if(@tipo_cambio=0)--entra a cambios de curp
					begin 
						set @ssql=''select distinct fd.FOLIO as id,fd.FOLIO,E.RFC,E.CURP as DICE,upper(vt.valor) as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						where fd.Id_Estatus=4 and fdd.id_motivomovimiento=320 and fvs.valor=0''
				
						set @ssql= @ssql + @where + '' order by e.rfc''
						exec(@ssql)
					end
					if(@tipo_cambio=1)--entra a cambios de apellido paterno
					begin 
						set @ssql=''select distinct fd.FOLIO as id,fd.FOLIO,E.RFC,E.ApPaterno as DICE,case when vt.valor=''''.'''' then '''''''' else upper(vt.valor) end as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						where fd.Id_Estatus=4 and fdd.id_motivomovimiento=320 and fvs.valor=1''
				
						set @ssql= @ssql + @where + '' order by e.rfc''
						exec(@ssql)
					end
					if(@tipo_cambio=2)--entra a cambios de apellido materno
					begin 
						set @ssql=''select distinct fd.FOLIO as id,fd.FOLIO,E.RFC,E.ApMaterno as DICE,case when vt.valor=''''.'''' then '''''''' else upper(vt.valor) end as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						where fd.Id_Estatus=4 and fdd.id_motivomovimiento=320 and fvs.valor=2''
				
						set @ssql= @ssql + @where + '' order by e.rfc''
						exec(@ssql)
					end
					if(@tipo_cambio=3)--entra a cambios de nombre
					begin 
						set @ssql=''select distinct fd.FOLIO as id,fd.FOLIO,E.RFC,E.nombre as DICE,upper(vt.valor) as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						where fd.Id_Estatus=4 and fdd.id_motivomovimiento=320 and fvs.valor=3''
				
						set @ssql= @ssql + @where + '' order by e.rfc''
						exec(@ssql)
					end
					if(@tipo_cambio=4)--entra a cambios de fecha sep
					begin 
						set @ssql=''select distinct fd.FOLIO as id,fd.FOLIO,E.RFC,case when hfs.Fecha_Alta_SEP is null then '''''''' else dbo.fechatoanioquincena(hfs.Fecha_Alta_SEP) end as DICE,vt.valor as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						left join HFecha_Alta_SEP hfs with(nolock) on fd.id_emp=hfs.id_emp
						left join ( select max(fecha) as fecha,id_emp  from HFecha_Alta_SEP with(nolock)
						group by id_emp
						) x on hfs.id_emp=x.id_emp and x.fecha=hfs.fecha
						where fd.Id_Estatus=4 and fdd.id_motivomovimiento=320 and fvs.valor=4''
				
						set @ssql= @ssql + @where + '' order by e.rfc''
						exec(@ssql)
					end
					if(@tipo_cambio=5)--entra a cambios de fecha rama
					begin 
						set @ssql=''select distinct fd.FOLIO as id,fd.FOLIO,E.RFC,case when hfr.Fecha_Alta_Rama is null then '''''''' else dbo.fechatoanioquincena(hfr.Fecha_Alta_Rama) end as DICE,vt.valor as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						left join HFecha_Alta_Rama hfr with(nolock) on fd.id_emp=hfr.id_emp
						left join ( select max(fecha) as fecha,id_emp  from HFecha_Alta_Rama with(nolock)
						group by id_emp
						) x on hfr.id_emp=x.id_emp and x.fecha=hfr.fecha
						where fd.Id_Estatus=4 and fdd.id_motivomovimiento=320 and fvs.valor=5''
				
						set @ssql= @ssql + @where + '' order by e.rfc''
						exec(@ssql)
					end
					if(@tipo_cambio=6)--entra a cambios de filiacion (rfc)
					begin 
						set @ssql= ''select distinct fd.FOLIO as id,fd.FOLIO,E.RFC,E.RFC as DICE,upper(vt.valor) as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						where fd.Id_Estatus=4 and fdd.id_motivomovimiento=320 and fvs.valor=6''
				
						set @ssql= @ssql + @where + '' order by e.rfc''
						exec(@ssql)
					end
					if(@tipo_cambio=7)--entra a cambios de fecha al gobierno federal 
					begin 
						set @ssql=''select distinct fd.FOLIO as id,fd.FOLIO,E.RFC,case when hfs.Fecha_Alta_Gob_Fed is null then '''''''' else dbo.fechatoanioquincena(hfs.Fecha_Alta_Gob_Fed) end as DICE,vt.valor as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						left join HFecha_Alta_Gob_Fed hfs with(nolock) on fd.id_emp=hfs.id_emp
						left join ( select max(fecha) as fecha,id_emp  from HFecha_Alta_Gob_Fed with(nolock)
						group by id_emp
						) x on hfs.id_emp=x.id_emp and x.fecha=hfs.fecha
						where fd.Id_Estatus=4 and fdd.id_motivomovimiento=320 and fvs.valor=7''
				
						set @ssql= @ssql + @where + '' order by e.rfc''
						exec(@ssql)
					end
					if(@tipo_cambio=10)--entra cuando se genera el reporte general sin filtro de cambios de datos capturados
					begin 
						set @ssql=''select distinct fd.FOLIO as id,fd.FOLIO,E.RFC,E.CURP as DICE,upper(vt.valor) as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						where fd.Id_Estatus=4 and fdd.id_motivomovimiento=320 and fvs.valor=0''
				
						set @ssql= @ssql + @where + '' union ''						
						set @ssql= @ssql + ''select distinct fd.FOLIO as id,fd.FOLIO,E.RFC,E.ApPaterno as DICE,case when vt.valor=''''.'''' then '''''''' else upper(vt.valor) end as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						where fd.Id_Estatus=4 and fdd.id_motivomovimiento=320 and fvs.valor=1''
				
						set @ssql= @ssql + @where + '' union ''					
						set @ssql= @ssql + ''select distinct fd.FOLIO as id,fd.FOLIO,E.RFC,E.ApMaterno as DICE,case when vt.valor=''''.'''' then '''''''' else upper(vt.valor) end as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						where fd.Id_Estatus=4 and fdd.id_motivomovimiento=320 and fvs.valor=2''
				
						set @ssql= @ssql + @where + '' union ''				
						set @ssql= @ssql + ''select distinct fd.FOLIO as id,fd.FOLIO,E.RFC,E.nombre as DICE,upper(vt.valor) as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						where fd.Id_Estatus=4 and fdd.id_motivomovimiento=320 and fvs.valor=3''
						set @ssql= @ssql + @where + '' union ''								
						set @ssql= @ssql + ''select distinct fd.FOLIO as id,fd.FOLIO,E.RFC,case when hfs.Fecha_Alta_SEP is null then '''''''' else dbo.fechatoanioquincena(hfs.Fecha_Alta_SEP) end as DICE,vt.valor as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						left join HFecha_Alta_SEP hfs with(nolock) on fd.id_emp=hfs.id_emp
						left join ( select max(fecha) as fecha,id_emp  from HFecha_Alta_SEP with(nolock)
						group by id_emp
						) x on hfs.id_emp=x.id_emp and x.fecha=hfs.fecha
						where fd.Id_Estatus=4 and fdd.id_motivomovimiento=320 and fvs.valor=4''
						set @ssql= @ssql + @where + '' union ''
						set @ssql= @ssql + ''select distinct fd.FOLIO as id,fd.FOLIO,E.RFC,case when hfr.Fecha_Alta_Rama is null then '''''''' else dbo.fechatoanioquincena(hfr.Fecha_Alta_Rama) end as DICE,vt.valor as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						left join HFecha_Alta_Rama hfr with(nolock) on fd.id_emp=hfr.id_emp
						left join ( select max(fecha) as fecha,id_emp  from HFecha_Alta_Rama with(nolock)
						group by id_emp
						) x on hfr.id_emp=x.id_emp and x.fecha=hfr.fecha
						where fd.Id_Estatus=4 and fdd.id_motivomovimiento=320 and fvs.valor=5''
						set @ssql= @ssql + @where + '' union ''
						set @ssql= @ssql + ''select distinct fd.FOLIO as id,fd.FOLIO,E.RFC,E.RFC as DICE,upper(vt.valor) as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						where fd.Id_Estatus=4 and fdd.id_motivomovimiento=320 and fvs.valor=6''
						set @ssql= @ssql + @where + '' union ''						
						set @ssql= @ssql + ''select distinct fd.FOLIO as id,fd.FOLIO,E.RFC,case when hfs.Fecha_Alta_Gob_Fed is null then '''''''' else dbo.fechatoanioquincena(hfs.Fecha_Alta_Gob_Fed) end as DICE,vt.valor as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						left join HFecha_Alta_Gob_Fed hfs with(nolock) on fd.id_emp=hfs.id_emp
						left join ( select max(fecha) as fecha,id_emp  from HFecha_Alta_Gob_Fed with(nolock)
						group by id_emp
						) x on hfs.id_emp=x.id_emp and x.fecha=hfs.fecha
						where fd.Id_Estatus=4 and fdd.id_motivomovimiento=320 and fvs.valor=7''				
						set @ssql= @ssql + @where + '' order by e.rfc''

						exec (@ssql)
					end
		 end
         else if (@tipo_reporte=2)--para datos personales  en estatus procesado
			  begin 
		      if(@tipo_cambio=0)--entra a cambios de curp
					begin 
						set @ssql=''select distinct fd.FOLIO as id,fd.FOLIO,fd.id_emp,E.RFC,case when hc.curp is null then '''''''' else hc.curp end as DICE,hc.fecha,
						vt.valor as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						ROW_NUMBER() OVER(PARTITION BY fd.folio,fd.id_emp ORDER BY fd.id_emp,dbo.fechatoanioquincena(hc.fecha) desc) as orden,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						into #fup_cambio_curp
						from fup_documentos fd with(nolock)            
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_Cancelados fc with(nolock) on fd.id_documento=fc.id_documento
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						left join hcurp hc with(nolock) on fd.id_emp=hc.id_emp and hc.curp<>vt.valor
						left join (select max(fecha) as fecha,id_emp from hcurp with(nolock)
						group by id_emp) x on hc.id_emp=x.id_emp
						where fd.Id_Estatus=2 and fdd.id_motivomovimiento=320 and fvs.valor=0''		
						set @ssql= @ssql + @where
						set @ssql=@ssql  +'' 
						select distinct id,FOLIO,RFC,DICE,DEBE_DECIR,CLAVE_CCT,MODIFICACION,QNA_PROCESO from #fup_cambio_curp where orden=1 order by rfc''
						exec(@ssql)
					end
					if(@tipo_cambio=1)--entra a apellido paterno
					begin 
						set @ssql=''select distinct fd.FOLIO as id,fd.FOLIO,fd.id_emp,E.RFC,case when hc.appaterno is null then '''''''' else hc.appaterno end as DICE,hc.fecha,
						case when vt.valor=''''.'''' then '''''''' else vt.valor end as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						ROW_NUMBER() OVER(PARTITION BY fd.folio,fd.id_emp ORDER BY fd.id_emp,dbo.fechatoanioquincena(hc.fecha) desc) as orden,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						into #fup_cambio_appaterno
						from fup_documentos fd with(nolock)            
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_Cancelados fc with(nolock) on fd.id_documento=fc.id_documento
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						left join hnombre hc with(nolock) on fd.id_emp=hc.id_emp and hc.appaterno<>vt.valor
						left join (select max(fecha) as fecha,id_emp from hnombre with(nolock)
						group by id_emp) x on hc.id_emp=x.id_emp
						where fd.Id_Estatus=2 and fdd.id_motivomovimiento=320 and fvs.valor=1''		
						set @ssql= @ssql + @where
						set @ssql=@ssql  +'' 
						select distinct id,FOLIO,RFC,DICE,DEBE_DECIR,CLAVE_CCT,MODIFICACION,QNA_PROCESO from #fup_cambio_appaterno where orden=1 order by rfc''
						exec (@ssql)
					end	
					if(@tipo_cambio=2)--entra a apellido materno
					begin 
						set @ssql=''select distinct fd.FOLIO as id,fd.FOLIO,fd.id_emp,E.RFC,case when hc.apmaterno is null then '''''''' else hc.apmaterno end as DICE,hc.fecha,
						case when vt.valor=''''.'''' then '''''''' else vt.valor end as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						ROW_NUMBER() OVER(PARTITION BY fd.folio,fd.id_emp ORDER BY fd.id_emp,dbo.fechatoanioquincena(hc.fecha) desc) as orden,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						into #fup_cambio_apmaterno
						from fup_documentos fd with(nolock)            
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_Cancelados fc with(nolock) on fd.id_documento=fc.id_documento
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						left join hnombre hc with(nolock) on fd.id_emp=hc.id_emp and hc.apmaterno<>vt.valor
						left join (select max(fecha) as fecha,id_emp from hnombre with(nolock)
						group by id_emp) x on hc.id_emp=x.id_emp
						where fd.Id_Estatus=2 and fdd.id_motivomovimiento=320 and fvs.valor=2''		
						set @ssql= @ssql + @where
						set @ssql=@ssql  +'' 
						select distinct id,FOLIO,RFC,DICE,DEBE_DECIR,CLAVE_CCT,MODIFICACION,QNA_PROCESO from #fup_cambio_apmaterno where orden=1 order by rfc''
						exec (@ssql)
					end
					if(@tipo_cambio=3)--entra al cambio de nombre
					begin 
						set @ssql=''select distinct fd.FOLIO as id,fd.FOLIO,fd.id_emp,E.RFC,case when hc.nombre is null then '''''''' else hc.nombre end as DICE,hc.fecha,
						case when vt.valor=''''.'''' then '''''''' else vt.valor end as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						ROW_NUMBER() OVER(PARTITION BY fd.folio,fd.id_emp ORDER BY fd.id_emp,dbo.fechatoanioquincena(hc.fecha) desc) as orden,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						into #fup_cambio_nombre
						from fup_documentos fd with(nolock)            
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_Cancelados fc with(nolock) on fd.id_documento=fc.id_documento
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						left join hnombre hc with(nolock) on fd.id_emp=hc.id_emp and hc.nombre<>vt.valor
						left join (select max(fecha) as fecha,id_emp from hnombre with(nolock)
						group by id_emp) x on hc.id_emp=x.id_emp
						where fd.Id_Estatus=2 and fdd.id_motivomovimiento=320 and fvs.valor=3''		
						set @ssql= @ssql + @where
						set @ssql=@ssql  +'' 
						select distinct id,FOLIO,RFC,DICE,DEBE_DECIR,CLAVE_CCT,MODIFICACION,QNA_PROCESO from #fup_cambio_nombre where orden=1 order by rfc''
						exec (@ssql)
					end
					if(@tipo_cambio=4)--entra al cambio de fecha de alta sep
					begin 
						set @ssql=''select distinct fd.FOLIO as id,fd.FOLIO,fd.id_emp,E.RFC,case when hfs.Fecha_Alta_SEP is null then '''''''' else dbo.fechatoanioquincena(hfs.fecha_alta_sep)  end as DICE,hfs.fecha,
						ROW_NUMBER() OVER(PARTITION BY fd.folio,fd.id_emp ORDER BY fd.id_emp,dbo.fechatoanioquincena(hfs.fecha) desc) as orden,
						vt.valor as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO						
						into #fup_fecha_sep
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento						
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento						
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''	
						left join HFecha_Alta_SEP hfs with(nolock) on fd.id_emp=hfs.id_emp and hfs.fecha_alta_sep<>dbo.anioquincenatofecha(vt.valor,0)    
						left join (select max(fecha) as fecha,id_emp  from HFecha_Alta_SEP with(nolock)														
						group by id_emp												 						                                         													
						) x on fd.id_emp=x.id_emp
						where fd.Id_Estatus=2 and fdd.id_motivomovimiento=320 and fvs.valor=4''		
						set @ssql= @ssql + @where
						set @ssql=@ssql  +'' 
						select distinct id,FOLIO,RFC,DICE,DEBE_DECIR,CLAVE_CCT,MODIFICACION,QNA_PROCESO from #fup_fecha_sep where orden=1 order by rfc''
						exec(@ssql)						
					end
					if(@tipo_cambio=5)--entra al cambio de fecha de alta rama
					begin 
						set @ssql=''select distinct fd.FOLIO as id,fd.FOLIO,fd.id_emp,E.RFC,case when hfs.Fecha_Alta_rama is null then '''''''' else dbo.fechatoanioquincena(hfs.fecha_alta_rama)  end as DICE,hfs.fecha,
						ROW_NUMBER() OVER(PARTITION BY fd.folio,fd.id_emp ORDER BY fd.id_emp,dbo.fechatoanioquincena(hfs.fecha) desc) as orden,
						vt.valor as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO						
						into #fup_fecha_rama
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento						
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento						
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''	
						left join HFecha_Alta_rama hfs with(nolock) on fd.id_emp=hfs.id_emp and hfs.fecha_alta_rama<>dbo.anioquincenatofecha(vt.valor,0)    
						left join (select max(fecha) as fecha,id_emp  from HFecha_Alta_rama with(nolock)														
						group by id_emp												 						                                         													
						) x on fd.id_emp=x.id_emp
						where fd.Id_Estatus=2 and fdd.id_motivomovimiento=320 and fvs.valor=5''		
						set @ssql= @ssql + @where
						set @ssql=@ssql  +'' 
						select distinct id,FOLIO,RFC,DICE,DEBE_DECIR,CLAVE_CCT,MODIFICACION,QNA_PROCESO from #fup_fecha_rama where orden=1 order by rfc''
						exec(@ssql)						
					end
					if(@tipo_cambio=6)--entra a cambios de filiacion
					begin 
						set @ssql=''select distinct fd.FOLIO as id,fd.FOLIO,fd.id_emp,E.RFC,case when hc.rfc is null then '''''''' else hc.rfc end as DICE,hc.fecha,
						vt.valor as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						ROW_NUMBER() OVER(PARTITION BY fd.folio,fd.id_emp ORDER BY fd.id_emp,dbo.fechatoanioquincena(hc.fecha) desc) as orden,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						into #fup_cambio_rfc
						from fup_documentos fd with(nolock)            
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_Cancelados fc with(nolock) on fd.id_documento=fc.id_documento
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						left join hrfc hc with(nolock) on fd.id_emp=hc.id_emp and hc.rfc<>vt.valor
						left join (select max(fecha) as fecha,id_emp from hrfc with(nolock)
						group by id_emp) x on hc.id_emp=x.id_emp
						where fd.Id_Estatus=2 and fdd.id_motivomovimiento=320 and fvs.valor=6''		
						set @ssql= @ssql + @where
						set @ssql=@ssql  +'' 
						select distinct id,FOLIO,RFC,DICE,DEBE_DECIR,CLAVE_CCT,MODIFICACION,QNA_PROCESO from #fup_cambio_rfc where orden=1 order by rfc''
						exec(@ssql)
					end
					if(@tipo_cambio=7)--entra al cambio de fecha de alta al gobierno federal
					begin 
						set @ssql=''select distinct fd.FOLIO as id,fd.FOLIO,fd.id_emp,E.RFC,case when hfs.Fecha_Alta_Gob_Fed is null then '''''''' else dbo.fechatoanioquincena(hfs.Fecha_Alta_Gob_Fed)  end as DICE,hfs.fecha,
						ROW_NUMBER() OVER(PARTITION BY fd.folio,fd.id_emp ORDER BY fd.id_emp,dbo.fechatoanioquincena(hfs.fecha) desc) as orden,
						vt.valor as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO						
						into #fup_fecha_gob_fed
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento						
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento						
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''	
						left join HFecha_Alta_Gob_Fed hfs with(nolock) on fd.id_emp=hfs.id_emp and hfs.Fecha_Alta_Gob_Fed<>dbo.anioquincenatofecha(vt.valor,0)    
						left join (select max(fecha) as fecha,id_emp  from HFecha_Alta_Gob_Fed with(nolock)														
						group by id_emp												 						                                         													
						) x on fd.id_emp=x.id_emp
						where fd.Id_Estatus=2 and fdd.id_motivomovimiento=320 and fvs.valor=7''		
						set @ssql= @ssql + @where
						set @ssql=@ssql  +'' 
						select distinct id,FOLIO,RFC,DICE,DEBE_DECIR,CLAVE_CCT,MODIFICACION,QNA_PROCESO from #fup_fecha_gob_fed where orden=1 order by rfc''
						exec(@ssql)						
					end
					if(@tipo_cambio=10)--entra a todos los cambios procesados // se va concatenando de acuerdo al orden de los filtros (curp,appaterno,apmaterno,etc)
					begin 
						set @ssql=''select distinct fd.FOLIO as id,fd.FOLIO,fd.id_emp,E.RFC,case when hc.curp is null then '''''''' else hc.curp end as DICE,hc.fecha,
						vt.valor as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						ROW_NUMBER() OVER(PARTITION BY fd.folio,fd.id_emp ORDER BY fd.id_emp,dbo.fechatoanioquincena(hc.fecha) desc) as orden,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						into #fup_cambio_curp
						from fup_documentos fd with(nolock)            
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_Cancelados fc with(nolock) on fd.id_documento=fc.id_documento
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						left join hcurp hc with(nolock) on fd.id_emp=hc.id_emp and hc.curp<>vt.valor
						left join (select max(fecha) as fecha,id_emp from hcurp with(nolock)
						group by id_emp) x on hc.id_emp=x.id_emp
						where fd.Id_Estatus=2 and fdd.id_motivomovimiento=320 and fvs.valor=0''		
						set @ssql= @ssql + @where + ''
						''						
						set @ssql= @ssql +'' select distinct fd.FOLIO as id,fd.FOLIO,fd.id_emp,E.RFC,case when hc.appaterno is null then '''''''' else hc.appaterno end as DICE,hc.fecha,
						case when vt.valor=''''.'''' then '''''''' else vt.valor end as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						ROW_NUMBER() OVER(PARTITION BY fd.folio,fd.id_emp ORDER BY fd.id_emp,dbo.fechatoanioquincena(hc.fecha) desc) as orden,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						into #fup_cambio_appaterno
						from fup_documentos fd with(nolock)            
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_Cancelados fc with(nolock) on fd.id_documento=fc.id_documento
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						left join hnombre hc with(nolock) on fd.id_emp=hc.id_emp and hc.appaterno<>vt.valor
						left join (select max(fecha) as fecha,id_emp from hnombre with(nolock)
						group by id_emp) x on hc.id_emp=x.id_emp
						where fd.Id_Estatus=2 and fdd.id_motivomovimiento=320 and fvs.valor=1''		
						set @ssql= @ssql + @where +''
						''						
						set @ssql= @ssql +''select distinct fd.FOLIO as id,fd.FOLIO,fd.id_emp,E.RFC,case when hc.apmaterno is null then '''''''' else hc.apmaterno end as DICE,hc.fecha,
						case when vt.valor=''''.'''' then '''''''' else vt.valor end as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						ROW_NUMBER() OVER(PARTITION BY fd.folio,fd.id_emp ORDER BY fd.id_emp,dbo.fechatoanioquincena(hc.fecha) desc) as orden,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						into #fup_cambio_apmaterno
						from fup_documentos fd with(nolock)            
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_Cancelados fc with(nolock) on fd.id_documento=fc.id_documento
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						left join hnombre hc with(nolock) on fd.id_emp=hc.id_emp and hc.apmaterno<>vt.valor
						left join (select max(fecha) as fecha,id_emp from hnombre with(nolock)
						group by id_emp) x on hc.id_emp=x.id_emp
						where fd.Id_Estatus=2 and fdd.id_motivomovimiento=320 and fvs.valor=2''		
						set @ssql= @ssql + @where +''
						''
						set @ssql= @ssql + '' select distinct fd.FOLIO as id,fd.FOLIO,fd.id_emp,E.RFC,case when hc.nombre is null then '''''''' else hc.nombre end as DICE,hc.fecha,
						case when vt.valor=''''.'''' then '''''''' else vt.valor end as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						ROW_NUMBER() OVER(PARTITION BY fd.folio,fd.id_emp ORDER BY fd.id_emp,dbo.fechatoanioquincena(hc.fecha) desc) as orden,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						into #fup_cambio_nombre
						from fup_documentos fd with(nolock)            
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_Cancelados fc with(nolock) on fd.id_documento=fc.id_documento
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						left join hnombre hc with(nolock) on fd.id_emp=hc.id_emp and hc.nombre<>vt.valor
						left join (select max(fecha) as fecha,id_emp from hnombre with(nolock)
						group by id_emp) x on hc.id_emp=x.id_emp
						where fd.Id_Estatus=2 and fdd.id_motivomovimiento=320 and fvs.valor=3''		
						set @ssql= @ssql + @where +''
						''
						set @ssql= @ssql + ''select distinct fd.FOLIO as id,fd.FOLIO,fd.id_emp,E.RFC,case when hfs.Fecha_Alta_SEP is null then '''''''' else dbo.fechatoanioquincena(hfs.fecha_alta_sep)  end as DICE,hfs.fecha,
						ROW_NUMBER() OVER(PARTITION BY fd.folio,fd.id_emp ORDER BY fd.id_emp,dbo.fechatoanioquincena(hfs.fecha) desc) as orden,
						vt.valor as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO						
						into #fup_fecha_sep
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento						
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento						
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''	
						left join HFecha_Alta_SEP hfs with(nolock) on fd.id_emp=hfs.id_emp and hfs.fecha_alta_sep<>dbo.anioquincenatofecha(vt.valor,0)    
						left join (select max(fecha) as fecha,id_emp  from HFecha_Alta_SEP with(nolock)														
						group by id_emp												 						                                         													
						) x on fd.id_emp=x.id_emp
						where fd.Id_Estatus=2 and fdd.id_motivomovimiento=320 and fvs.valor=4''		
						set @ssql= @ssql + @where + ''						 						
						''
						set @ssql= @ssql + '' select distinct fd.FOLIO as id,fd.FOLIO,fd.id_emp,E.RFC,case when hfs.Fecha_Alta_rama is null then '''''''' else dbo.fechatoanioquincena(hfs.fecha_alta_rama)  end as DICE,hfs.fecha,
						ROW_NUMBER() OVER(PARTITION BY fd.folio,fd.id_emp ORDER BY fd.id_emp,dbo.fechatoanioquincena(hfs.fecha) desc) as orden,
						vt.valor as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO						
						into #fup_fecha_rama
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento						
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento						
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''	
						left join HFecha_Alta_rama hfs with(nolock) on fd.id_emp=hfs.id_emp and hfs.fecha_alta_rama<>dbo.anioquincenatofecha(vt.valor,0)    
						left join (select max(fecha) as fecha,id_emp  from HFecha_Alta_rama with(nolock)														
						group by id_emp												 						                                         													
						) x on fd.id_emp=x.id_emp
						where fd.Id_Estatus=2 and fdd.id_motivomovimiento=320 and fvs.valor=5''		
						set @ssql= @ssql + @where +''
						''
						set @ssql= @ssql + '' select distinct fd.FOLIO as id,fd.FOLIO,fd.id_emp,E.RFC,case when hc.rfc is null then '''''''' else hc.rfc end as DICE,hc.fecha,
						vt.valor as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						ROW_NUMBER() OVER(PARTITION BY fd.folio,fd.id_emp ORDER BY fd.id_emp,dbo.fechatoanioquincena(hc.fecha) desc) as orden,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						into #fup_cambio_rfc
						from fup_documentos fd with(nolock)            
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_Cancelados fc with(nolock) on fd.id_documento=fc.id_documento
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						left join hrfc hc with(nolock) on fd.id_emp=hc.id_emp and hc.rfc<>vt.valor
						left join (select max(fecha) as fecha,id_emp from hrfc with(nolock)
						group by id_emp) x on hc.id_emp=x.id_emp
						where fd.Id_Estatus=2 and fdd.id_motivomovimiento=320 and fvs.valor=6''		
						set @ssql= @ssql + @where + ''
						''
						set @ssql= @ssql + ''select distinct fd.FOLIO as id,fd.FOLIO,fd.id_emp,E.RFC,case when hfs.Fecha_Alta_Gob_Fed is null then '''''''' else dbo.fechatoanioquincena(hfs.Fecha_Alta_Gob_Fed)  end as DICE,hfs.fecha,
						ROW_NUMBER() OVER(PARTITION BY fd.folio,fd.id_emp ORDER BY fd.id_emp,dbo.fechatoanioquincena(hfs.fecha) desc) as orden,
						vt.valor as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO						
						into #fup_fecha_gob_fed
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento						
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento						
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''	
						left join HFecha_Alta_Gob_Fed hfs with(nolock) on fd.id_emp=hfs.id_emp and hfs.Fecha_Alta_Gob_Fed<>dbo.anioquincenatofecha(vt.valor,0)    
						left join (select max(fecha) as fecha,id_emp  from HFecha_Alta_Gob_Fed with(nolock)														
						group by id_emp												 						                                         													
						) x on fd.id_emp=x.id_emp
						where fd.Id_Estatus=2 and fdd.id_motivomovimiento=320 and fvs.valor=7''		
						set @ssql= @ssql + @where + ''
						''						 									
						set @ssql= @ssql + '' select distinct id,FOLIO,RFC,DICE,DEBE_DECIR,CLAVE_CCT,MODIFICACION,QNA_PROCESO from #fup_cambio_curp where orden=1
						union 
						select distinct id,FOLIO,RFC,DICE,DEBE_DECIR,CLAVE_CCT,MODIFICACION,QNA_PROCESO from #fup_cambio_appaterno where orden=1 
						union
						select distinct id,FOLIO,RFC,DICE,DEBE_DECIR,CLAVE_CCT,MODIFICACION,QNA_PROCESO from #fup_cambio_apmaterno where orden=1 					
						union
						select distinct id,FOLIO,RFC,DICE,DEBE_DECIR,CLAVE_CCT,MODIFICACION,QNA_PROCESO from #fup_cambio_nombre where orden=1
						union
						select distinct id,FOLIO,RFC,DICE,DEBE_DECIR,CLAVE_CCT,MODIFICACION,QNA_PROCESO from #fup_fecha_sep where orden=1
						union 
						select distinct id,FOLIO,RFC,DICE,DEBE_DECIR,CLAVE_CCT,MODIFICACION,QNA_PROCESO from #fup_fecha_rama where orden=1
						union
						select distinct id,FOLIO,RFC,DICE,DEBE_DECIR,CLAVE_CCT,MODIFICACION,QNA_PROCESO from #fup_cambio_rfc where orden=1
						union
						select distinct id,FOLIO,RFC,DICE,DEBE_DECIR,CLAVE_CCT,MODIFICACION,QNA_PROCESO from #fup_fecha_gob_fed where orden=1
						order by rfc''															
						exec (@ssql)					
					end							 
			  end
			  /*
			  /////////////////////////////////////////////////////
			  /////////////////////////////////////////////////////
			  Entra al bloque para conteo de folios por tipo de reporte
			  */
			  else if (@tipo_reporte=3)------ obtiene el total de folios capturados
			  begin
					if(@tipo_cambio=0)--entra a cambios de curp
					begin 
						set @ssql=''select count(distinct fd.FOLIO) as totalFolios
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						where fd.Id_Estatus=4 and fdd.id_motivomovimiento=320 and fvs.valor=0''				
						set @ssql= @ssql + @where
						exec(@ssql)
					end
					if(@tipo_cambio=1)--entra a cambios de apellido paterno
					begin 
						set @ssql=''select count(distinct fd.FOLIO) as totalFolios
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						where fd.Id_Estatus=4 and fdd.id_motivomovimiento=320 and fvs.valor=1''				
						set @ssql= @ssql + @where
						exec(@ssql)
					end
					if(@tipo_cambio=2)--entra a cambios de apellido materno
					begin 
						set @ssql=''select count(distinct fd.FOLIO) as totalFolios
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						where fd.Id_Estatus=4 and fdd.id_motivomovimiento=320 and fvs.valor=2''				
						set @ssql= @ssql + @where
						exec(@ssql)
					end
					if(@tipo_cambio=3)--entra a cambios de nombre
					begin 
						set @ssql=''select count(distinct fd.FOLIO) as totalFolios
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						where fd.Id_Estatus=4 and fdd.id_motivomovimiento=320 and fvs.valor=3''				
						set @ssql= @ssql + @where
						exec(@ssql)
					end
					if(@tipo_cambio=4)--entra a cambios de fecha de alta sep
					begin 
						set @ssql=''select count(distinct fd.FOLIO) as totalFolios
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						where fd.Id_Estatus=4 and fdd.id_motivomovimiento=320 and fvs.valor=4''				
						set @ssql= @ssql + @where
						exec(@ssql)
					end
					if(@tipo_cambio=5)--entra a cambios de fecha de alta a la rama
					begin 
						set @ssql=''select count(distinct fd.FOLIO) as totalFolios
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						where fd.Id_Estatus=4 and fdd.id_motivomovimiento=320 and fvs.valor=5''				
						set @ssql= @ssql + @where
						exec(@ssql)
					end
					if(@tipo_cambio=6)--entra a cambios de filiacion (rfc)
					begin 
						set @ssql=''select count(distinct fd.FOLIO) as totalFolios
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						where fd.Id_Estatus=4 and fdd.id_motivomovimiento=320 and fvs.valor=6''				
						set @ssql= @ssql + @where
						exec(@ssql)
					end
					if(@tipo_cambio=7)--entra a cambios de fecha de alta al gobierno federal
					begin 
						set @ssql=''select count(distinct fd.FOLIO) as totalFolios
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						where fd.Id_Estatus=4 and fdd.id_motivomovimiento=320 and fvs.valor=7''				
						set @ssql= @ssql + @where
						exec(@ssql)
					end
					if(@tipo_cambio=10)--entra a todos los cambios capturados de acuerdo al orden de los filtros (curp,appaterno,apmaterno,etc)
					begin 
						set @ssql=''select count(distinct fd.FOLIO) as totalFolios
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						where fd.Id_Estatus=4 and fdd.id_motivomovimiento=320''				
						set @ssql= @ssql + @where
						exec(@ssql)
					end
			  end
			  else if (@tipo_reporte=4)------ obtiene el total de folios procesados
			  begin
					if(@tipo_cambio=0)--entra a cambios de curp
					begin 
						set @ssql=''select count(distinct fd.FOLIO) as totalFolios
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						where fd.Id_Estatus=2 and fdd.id_motivomovimiento=320 and fvs.valor=0''				
						set @ssql= @ssql + @where
						exec(@ssql)
					end
					if(@tipo_cambio=1)--entra a cambios de apellido paterno
					begin 
						set @ssql=''select count(distinct fd.FOLIO) as totalFolios
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						where fd.Id_Estatus=2 and fdd.id_motivomovimiento=320 and fvs.valor=1''				
						set @ssql= @ssql + @where
						exec(@ssql)
					end
					if(@tipo_cambio=2)--entra a cambios de apellido materno
					begin 
						set @ssql=''select count(distinct fd.FOLIO) as totalFolios
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						where fd.Id_Estatus=2 and fdd.id_motivomovimiento=320 and fvs.valor=2''				
						set @ssql= @ssql + @where
						exec(@ssql)
					end
					if(@tipo_cambio=3)--entra a cambios de nombre
					begin 
						set @ssql=''select count(distinct fd.FOLIO) as totalFolios
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						where fd.Id_Estatus=2 and fdd.id_motivomovimiento=320 and fvs.valor=3''				
						set @ssql= @ssql + @where
						exec(@ssql)
					end
					if(@tipo_cambio=4)--entra a cambios de fecha de alta sep
					begin 
						set @ssql=''select count(distinct fd.FOLIO) as totalFolios
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						where fd.Id_Estatus=2 and fdd.id_motivomovimiento=320 and fvs.valor=4''				
						set @ssql= @ssql + @where
						exec(@ssql)
					end
					if(@tipo_cambio=5)--entra a cambios de fecha de alta a la rama
					begin 
						set @ssql=''select count(distinct fd.FOLIO) as totalFolios
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						where fd.Id_Estatus=2 and fdd.id_motivomovimiento=320 and fvs.valor=5''				
						set @ssql= @ssql + @where
						exec(@ssql)
					end
					if(@tipo_cambio=6)--entra a cambios de filiacion (rfc)
					begin 
						set @ssql=''select count(distinct fd.FOLIO) as totalFolios
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						where fd.Id_Estatus=2 and fdd.id_motivomovimiento=320 and fvs.valor=6''				
						set @ssql= @ssql + @where
						exec(@ssql)
					end
					if(@tipo_cambio=7)--entra a cambios de fecha de alta al gobierno federal
					begin 
						set @ssql=''select count(distinct fd.FOLIO) as totalFolios
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						where fd.Id_Estatus=2 and fdd.id_motivomovimiento=320 and fvs.valor=7''				
						set @ssql= @ssql + @where
						exec(@ssql)
					end
					if(@tipo_cambio=10)--entra a todos los cambios capturados de acuerdo al orden de los filtros (curp,appaterno,apmaterno,etc)
					begin 
						set @ssql=''select count(distinct fd.FOLIO) as totalFolios
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						where fd.Id_Estatus=2 and fdd.id_motivomovimiento=320''				
						set @ssql= @ssql + @where
						exec(@ssql)
					end
			  end
			  /*////////////////////////////////////////////////
			  /////////////////////////////////////////////////
			  Bloque para la exportacion
			  */
			  else if (@tipo_reporte=5)------ para datos personales  en estatus pendiente o capturado-- para exportacion 
			  begin
					if(@tipo_cambio=0)--entra a cambios de curp
					begin 
						set @ssql=''select distinct fd.FOLIO,E.RFC,E.CURP as DICE,upper(vt.valor) as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						where fd.Id_Estatus=4 and fdd.id_motivomovimiento=320 and fvs.valor=0''
				
						set @ssql= @ssql + @where + '' order by e.rfc''
						exec(@ssql)
					end
					if(@tipo_cambio=1)--entra a cambios de apellido paterno
					begin 
						set @ssql=''select distinct fd.FOLIO,E.RFC,E.ApPaterno as DICE,case when vt.valor=''''.'''' then '''''''' else upper(vt.valor) end as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						where fd.Id_Estatus=4 and fdd.id_motivomovimiento=320 and fvs.valor=1''
				
						set @ssql= @ssql + @where + '' order by e.rfc''
						exec(@ssql)
					end
					if(@tipo_cambio=2)--entra a cambios de apellido materno
					begin 
						set @ssql=''select distinct fd.FOLIO,E.RFC,E.ApMaterno as DICE,case when vt.valor=''''.'''' then '''''''' else upper(vt.valor) end as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						where fd.Id_Estatus=4 and fdd.id_motivomovimiento=320 and fvs.valor=2''
				
						set @ssql= @ssql + @where + '' order by e.rfc''
						exec(@ssql)
					end
					if(@tipo_cambio=3)--entra a cambios de nombre
					begin 
						set @ssql=''select distinct fd.FOLIO,E.RFC,E.nombre as DICE,upper(vt.valor) as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						where fd.Id_Estatus=4 and fdd.id_motivomovimiento=320 and fvs.valor=3''
				
						set @ssql= @ssql + @where + '' order by e.rfc''
						exec(@ssql)
					end
					if(@tipo_cambio=4)--entra a cambios de fecha sep
					begin 
						set @ssql=''select distinct fd.FOLIO,E.RFC,case when hfs.Fecha_Alta_SEP is null then '''''''' else dbo.fechatoanioquincena(hfs.Fecha_Alta_SEP) end as DICE,vt.valor as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						left join HFecha_Alta_SEP hfs with(nolock) on fd.id_emp=hfs.id_emp
						left join ( select max(fecha) as fecha,id_emp  from HFecha_Alta_SEP with(nolock)
						group by id_emp
						) x on hfs.id_emp=x.id_emp and x.fecha=hfs.fecha
						where fd.Id_Estatus=4 and fdd.id_motivomovimiento=320 and fvs.valor=4''
				
						set @ssql= @ssql + @where + '' order by e.rfc''
						exec(@ssql)
					end
					if(@tipo_cambio=5)--entra a cambios de fecha rama
					begin 
						set @ssql=''select distinct fd.FOLIO,E.RFC,case when hfr.Fecha_Alta_Rama is null then '''''''' else dbo.fechatoanioquincena(hfr.Fecha_Alta_Rama) end as DICE,vt.valor as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						left join HFecha_Alta_Rama hfr with(nolock) on fd.id_emp=hfr.id_emp
						left join ( select max(fecha) as fecha,id_emp  from HFecha_Alta_Rama with(nolock)
						group by id_emp
						) x on hfr.id_emp=x.id_emp and x.fecha=hfr.fecha
						where fd.Id_Estatus=4 and fdd.id_motivomovimiento=320 and fvs.valor=5''
				
						set @ssql= @ssql + @where + '' order by e.rfc''
						exec(@ssql)
					end
					if(@tipo_cambio=6)--entra a cambios de filiacion (rfc)
					begin 
						set @ssql= ''select distinct fd.FOLIO,E.RFC,E.RFC as DICE,upper(vt.valor) as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						where fd.Id_Estatus=4 and fdd.id_motivomovimiento=320 and fvs.valor=6''
				
						set @ssql= @ssql + @where + '' order by e.rfc''
						exec(@ssql)
					end
					if(@tipo_cambio=7)--entra a cambios de fecha de alta al gobierno federal
					begin 
						set @ssql=''select distinct fd.FOLIO,E.RFC,case when hfs.Fecha_Alta_Gob_Fed is null then '''''''' else dbo.fechatoanioquincena(hfs.Fecha_Alta_Gob_Fed) end as DICE,vt.valor as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						left join HFecha_Alta_Gob_Fed hfs with(nolock) on fd.id_emp=hfs.id_emp
						left join ( select max(fecha) as fecha,id_emp  from HFecha_Alta_Gob_Fed with(nolock)
						group by id_emp
						) x on hfs.id_emp=x.id_emp and x.fecha=hfs.fecha
						where fd.Id_Estatus=4 and fdd.id_motivomovimiento=320 and fvs.valor=7''
				
						set @ssql= @ssql + @where + '' order by e.rfc''
						exec(@ssql)
					end
					if(@tipo_cambio=10)--entra cuando se genera el reporte general sin filtro de cambios de datos capturados
					begin 
						set @ssql=''select distinct fd.FOLIO,E.RFC,E.CURP as DICE,upper(vt.valor) as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						where fd.Id_Estatus=4 and fdd.id_motivomovimiento=320 and fvs.valor=0''
				
						set @ssql= @ssql + @where + '' union ''						
						set @ssql= @ssql + ''select distinct fd.FOLIO,E.RFC,E.ApPaterno as DICE,case when vt.valor=''''.'''' then '''''''' else upper(vt.valor) end as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						where fd.Id_Estatus=4 and fdd.id_motivomovimiento=320 and fvs.valor=1''
				
						set @ssql= @ssql + @where + '' union ''					
						set @ssql= @ssql + ''select distinct fd.FOLIO,E.RFC,E.ApMaterno as DICE,case when vt.valor=''''.'''' then '''''''' else upper(vt.valor) end as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						where fd.Id_Estatus=4 and fdd.id_motivomovimiento=320 and fvs.valor=2''
				
						set @ssql= @ssql + @where + '' union ''				
						set @ssql= @ssql + ''select distinct fd.FOLIO,E.RFC,E.nombre as DICE,upper(vt.valor) as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						where fd.Id_Estatus=4 and fdd.id_motivomovimiento=320 and fvs.valor=3''
						set @ssql= @ssql + @where + '' union ''								
						set @ssql= @ssql + ''select distinct fd.FOLIO,E.RFC,case when hfs.Fecha_Alta_SEP is null then '''''''' else dbo.fechatoanioquincena(hfs.Fecha_Alta_SEP) end as DICE,vt.valor as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						left join HFecha_Alta_SEP hfs with(nolock) on fd.id_emp=hfs.id_emp
						left join ( select max(fecha) as fecha,id_emp  from HFecha_Alta_SEP with(nolock)
						group by id_emp
						) x on hfs.id_emp=x.id_emp and x.fecha=hfs.fecha
						where fd.Id_Estatus=4 and fdd.id_motivomovimiento=320 and fvs.valor=4''
						set @ssql= @ssql + @where + '' union ''
						set @ssql= @ssql + ''select distinct fd.FOLIO,E.RFC,case when hfr.Fecha_Alta_Rama is null then '''''''' else dbo.fechatoanioquincena(hfr.Fecha_Alta_Rama) end as DICE,vt.valor as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						left join HFecha_Alta_Rama hfr with(nolock) on fd.id_emp=hfr.id_emp
						left join ( select max(fecha) as fecha,id_emp  from HFecha_Alta_Rama with(nolock)
						group by id_emp
						) x on hfr.id_emp=x.id_emp and x.fecha=hfr.fecha
						where fd.Id_Estatus=4 and fdd.id_motivomovimiento=320 and fvs.valor=5''
						set @ssql= @ssql + @where + '' union ''
						set @ssql= @ssql + ''select distinct fd.FOLIO,E.RFC,E.RFC as DICE,upper(vt.valor) as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						where fd.Id_Estatus=4 and fdd.id_motivomovimiento=320 and fvs.valor=6''
						set @ssql= @ssql + @where + '' union ''
						set @ssql= @ssql + ''select distinct fd.FOLIO,E.RFC,case when hfs.Fecha_Alta_Gob_Fed is null then '''''''' else dbo.fechatoanioquincena(hfs.Fecha_Alta_Gob_Fed) end as DICE,vt.valor as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						left join HFecha_Alta_Gob_Fed hfs with(nolock) on fd.id_emp=hfs.id_emp
						left join ( select max(fecha) as fecha,id_emp  from HFecha_Alta_Gob_Fed with(nolock)
						group by id_emp
						) x on hfs.id_emp=x.id_emp and x.fecha=hfs.fecha
						where fd.Id_Estatus=4 and fdd.id_motivomovimiento=320 and fvs.valor=7''				
						set @ssql= @ssql + @where + '' order by e.rfc''											
						exec (@ssql)
					end
		      end
			  else if (@tipo_reporte=6)--para datos personales  en estatus procesado ... exportacion
			  begin 
		      if(@tipo_cambio=0)--entra a cambios de curp
					begin 
						set @ssql=''select distinct fd.FOLIO,fd.id_emp,E.RFC,case when hc.curp is null then '''''''' else hc.curp end as DICE,hc.fecha,
						vt.valor as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						ROW_NUMBER() OVER(PARTITION BY fd.folio,fd.id_emp ORDER BY fd.id_emp,dbo.fechatoanioquincena(hc.fecha) desc) as orden,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						into #fup_cambio_curp
						from fup_documentos fd with(nolock)            
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_Cancelados fc with(nolock) on fd.id_documento=fc.id_documento
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						left join hcurp hc with(nolock) on fd.id_emp=hc.id_emp and hc.curp<>vt.valor
						left join (select max(fecha) as fecha,id_emp from hcurp with(nolock)
						group by id_emp) x on hc.id_emp=x.id_emp
						where fd.Id_Estatus=2 and fdd.id_motivomovimiento=320 and fvs.valor=0''		
						set @ssql= @ssql + @where
						set @ssql=@ssql  +'' 
						select distinct FOLIO,RFC,DICE,DEBE_DECIR,CLAVE_CCT,MODIFICACION,QNA_PROCESO from #fup_cambio_curp where orden=1 order by rfc''
						exec(@ssql)
					end
					if(@tipo_cambio=1)--entra a apellido paterno
					begin 
						set @ssql=''select distinct fd.FOLIO,fd.id_emp,E.RFC,case when hc.appaterno is null then '''''''' else hc.appaterno end as DICE,hc.fecha,
						case when vt.valor=''''.'''' then '''''''' else vt.valor end as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						ROW_NUMBER() OVER(PARTITION BY fd.folio,fd.id_emp ORDER BY fd.id_emp,dbo.fechatoanioquincena(hc.fecha) desc) as orden,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						into #fup_cambio_appaterno
						from fup_documentos fd with(nolock)            
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_Cancelados fc with(nolock) on fd.id_documento=fc.id_documento
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						left join hnombre hc with(nolock) on fd.id_emp=hc.id_emp and hc.appaterno<>vt.valor
						left join (select max(fecha) as fecha,id_emp from hnombre with(nolock)
						group by id_emp) x on hc.id_emp=x.id_emp
						where fd.Id_Estatus=2 and fdd.id_motivomovimiento=320 and fvs.valor=1''		
						set @ssql= @ssql + @where
						set @ssql=@ssql  +'' 
						select distinct FOLIO,RFC,DICE,DEBE_DECIR,CLAVE_CCT,MODIFICACION,QNA_PROCESO from #fup_cambio_appaterno where orden=1 order by rfc''
						exec (@ssql)
					end	
					if(@tipo_cambio=2)--entra a apellido materno
					begin 
						set @ssql=''select distinct fd.FOLIO,fd.id_emp,E.RFC,case when hc.apmaterno is null then '''''''' else hc.apmaterno end as DICE,hc.fecha,
						case when vt.valor=''''.'''' then '''''''' else vt.valor end as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						ROW_NUMBER() OVER(PARTITION BY fd.folio,fd.id_emp ORDER BY fd.id_emp,dbo.fechatoanioquincena(hc.fecha) desc) as orden,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						into #fup_cambio_apmaterno
						from fup_documentos fd with(nolock)            
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_Cancelados fc with(nolock) on fd.id_documento=fc.id_documento
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						left join hnombre hc with(nolock) on fd.id_emp=hc.id_emp and hc.apmaterno<>vt.valor
						left join (select max(fecha) as fecha,id_emp from hnombre with(nolock)
						group by id_emp) x on hc.id_emp=x.id_emp
						where fd.Id_Estatus=2 and fdd.id_motivomovimiento=320 and fvs.valor=2''		
						set @ssql= @ssql + @where
						set @ssql=@ssql  +'' 
						select distinct FOLIO,RFC,DICE,DEBE_DECIR,CLAVE_CCT,MODIFICACION,QNA_PROCESO from #fup_cambio_apmaterno where orden=1 order by rfc''
						exec (@ssql)
					end
					if(@tipo_cambio=3)--entra al cambio de nombre
					begin 
						set @ssql=''select distinct fd.FOLIO as id,fd.FOLIO,fd.id_emp,E.RFC,case when hc.nombre is null then '''''''' else hc.nombre end as DICE,hc.fecha,
						case when vt.valor=''''.'''' then '''''''' else vt.valor end as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						ROW_NUMBER() OVER(PARTITION BY fd.folio,fd.id_emp ORDER BY fd.id_emp,dbo.fechatoanioquincena(hc.fecha) desc) as orden,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						into #fup_cambio_nombre
						from fup_documentos fd with(nolock)            
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_Cancelados fc with(nolock) on fd.id_documento=fc.id_documento
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						left join hnombre hc with(nolock) on fd.id_emp=hc.id_emp and hc.nombre<>vt.valor
						left join (select max(fecha) as fecha,id_emp from hnombre with(nolock)
						group by id_emp) x on hc.id_emp=x.id_emp
						where fd.Id_Estatus=2 and fdd.id_motivomovimiento=320 and fvs.valor=3''		
						set @ssql= @ssql + @where
						set @ssql=@ssql  +'' 
						select distinct FOLIO,RFC,DICE,DEBE_DECIR,CLAVE_CCT,MODIFICACION,QNA_PROCESO from #fup_cambio_nombre where orden=1 order by rfc''
						exec (@ssql)
					end
					if(@tipo_cambio=4)--entra al cambio de fecha de alta sep
					begin 
						set @ssql=''select distinct fd.FOLIO,fd.id_emp,E.RFC,case when hfs.Fecha_Alta_SEP is null then '''''''' else dbo.fechatoanioquincena(hfs.fecha_alta_sep)  end as DICE,hfs.fecha,
						ROW_NUMBER() OVER(PARTITION BY fd.folio,fd.id_emp ORDER BY fd.id_emp,dbo.fechatoanioquincena(hfs.fecha) desc) as orden,
						vt.valor as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO						
						into #fup_fecha_sep
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento						
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento						
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''	
						left join HFecha_Alta_SEP hfs with(nolock) on fd.id_emp=hfs.id_emp and hfs.fecha_alta_sep<>dbo.anioquincenatofecha(vt.valor,0)    
						left join (select max(fecha) as fecha,id_emp  from HFecha_Alta_SEP with(nolock)														
						group by id_emp												 						                                         													
						) x on fd.id_emp=x.id_emp
						where fd.Id_Estatus=2 and fdd.id_motivomovimiento=320 and fvs.valor=4''		
						set @ssql= @ssql + @where
						set @ssql=@ssql  +'' 
						select distinct FOLIO,RFC,DICE,DEBE_DECIR,CLAVE_CCT,MODIFICACION,QNA_PROCESO from #fup_fecha_sep where orden=1 order by rfc''
						exec(@ssql)						
					end
					if(@tipo_cambio=5)--entra al cambio de fecha de alta rama
					begin 
						set @ssql=''select distinct fd.FOLIO,fd.id_emp,E.RFC,case when hfs.Fecha_Alta_rama is null then '''''''' else dbo.fechatoanioquincena(hfs.fecha_alta_rama)  end as DICE,hfs.fecha,
						ROW_NUMBER() OVER(PARTITION BY fd.folio,fd.id_emp ORDER BY fd.id_emp,dbo.fechatoanioquincena(hfs.fecha) desc) as orden,
						vt.valor as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO						
						into #fup_fecha_rama
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento						
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento						
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''	
						left join HFecha_Alta_rama hfs with(nolock) on fd.id_emp=hfs.id_emp and hfs.fecha_alta_rama<>dbo.anioquincenatofecha(vt.valor,0)    
						left join (select max(fecha) as fecha,id_emp  from HFecha_Alta_rama with(nolock)														
						group by id_emp												 						                                         													
						) x on fd.id_emp=x.id_emp
						where fd.Id_Estatus=2 and fdd.id_motivomovimiento=320 and fvs.valor=5''		
						set @ssql= @ssql + @where
						set @ssql=@ssql  +'' 
						select distinct FOLIO,RFC,DICE,DEBE_DECIR,CLAVE_CCT,MODIFICACION,QNA_PROCESO from #fup_fecha_rama where orden=1 order by rfc''
						exec(@ssql)						
					end
					if(@tipo_cambio=6)--entra a cambios de filiacion
					begin 
						set @ssql=''select distinct fd.FOLIO,fd.id_emp,E.RFC,case when hc.rfc is null then '''''''' else hc.rfc end as DICE,hc.fecha,
						vt.valor as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						ROW_NUMBER() OVER(PARTITION BY fd.folio,fd.id_emp ORDER BY fd.id_emp,dbo.fechatoanioquincena(hc.fecha) desc) as orden,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						into #fup_cambio_rfc
						from fup_documentos fd with(nolock)            
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_Cancelados fc with(nolock) on fd.id_documento=fc.id_documento
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						left join hrfc hc with(nolock) on fd.id_emp=hc.id_emp and hc.rfc<>vt.valor
						left join (select max(fecha) as fecha,id_emp from hrfc with(nolock)
						group by id_emp) x on hc.id_emp=x.id_emp
						where fd.Id_Estatus=2 and fdd.id_motivomovimiento=320 and fvs.valor=6''		
						set @ssql= @ssql + @where
						set @ssql=@ssql  +'' 
						select distinct FOLIO,RFC,DICE,DEBE_DECIR,CLAVE_CCT,MODIFICACION,QNA_PROCESO from #fup_cambio_rfc where orden=1 order by rfc''
						exec(@ssql)
					end
					if(@tipo_cambio=7)--entra al cambio de fecha de alta al gobierno federal
					begin 
						set @ssql=''select distinct fd.FOLIO,fd.id_emp,E.RFC,case when hfs.Fecha_Alta_Gob_Fed is null then '''''''' else dbo.fechatoanioquincena(hfs.Fecha_Alta_Gob_Fed)  end as DICE,hfs.fecha,
						ROW_NUMBER() OVER(PARTITION BY fd.folio,fd.id_emp ORDER BY fd.id_emp,dbo.fechatoanioquincena(hfs.fecha) desc) as orden,
						vt.valor as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO						
						into #fup_fecha_gob_fed
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento						
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento						
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''	
						left join HFecha_Alta_Gob_Fed hfs with(nolock) on fd.id_emp=hfs.id_emp and hfs.Fecha_Alta_Gob_Fed<>dbo.anioquincenatofecha(vt.valor,0)    
						left join (select max(fecha) as fecha,id_emp  from HFecha_Alta_Gob_Fed with(nolock)														
						group by id_emp												 						                                         													
						) x on fd.id_emp=x.id_emp
						where fd.Id_Estatus=2 and fdd.id_motivomovimiento=320 and fvs.valor=7''		
						set @ssql= @ssql + @where
						set @ssql=@ssql  +'' 
						select distinct FOLIO,RFC,DICE,DEBE_DECIR,CLAVE_CCT,MODIFICACION,QNA_PROCESO from #fup_fecha_gob_fed where orden=1 order by rfc''
						exec(@ssql)						
					end
					if(@tipo_cambio=10)--entra a todos los cambios procesados // se va concatenando de acuerdo al orden de los filtros (curp,appaterno,apmaterno,etc)
					begin 
						set @ssql=''select distinct fd.FOLIO,fd.id_emp,E.RFC,case when hc.curp is null then '''''''' else hc.curp end as DICE,hc.fecha,
						vt.valor as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						ROW_NUMBER() OVER(PARTITION BY fd.folio,fd.id_emp ORDER BY fd.id_emp,dbo.fechatoanioquincena(hc.fecha) desc) as orden,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						into #fup_cambio_curp
						from fup_documentos fd with(nolock)            
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_Cancelados fc with(nolock) on fd.id_documento=fc.id_documento
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						left join hcurp hc with(nolock) on fd.id_emp=hc.id_emp and hc.curp<>vt.valor
						left join (select max(fecha) as fecha,id_emp from hcurp with(nolock)
						group by id_emp) x on hc.id_emp=x.id_emp
						where fd.Id_Estatus=2 and fdd.id_motivomovimiento=320 and fvs.valor=0''		
						set @ssql= @ssql + @where + ''
						''
						set @ssql= @ssql +'' select distinct fd.FOLIO,fd.id_emp,E.RFC,case when hc.appaterno is null then '''''''' else hc.appaterno end as DICE,hc.fecha,
						case when vt.valor=''''.'''' then '''''''' else vt.valor end as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						ROW_NUMBER() OVER(PARTITION BY fd.folio,fd.id_emp ORDER BY fd.id_emp,dbo.fechatoanioquincena(hc.fecha) desc) as orden,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						into #fup_cambio_appaterno
						from fup_documentos fd with(nolock)            
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_Cancelados fc with(nolock) on fd.id_documento=fc.id_documento
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						left join hnombre hc with(nolock) on fd.id_emp=hc.id_emp and hc.appaterno<>vt.valor
						left join (select max(fecha) as fecha,id_emp from hnombre with(nolock)
						group by id_emp) x on hc.id_emp=x.id_emp
						where fd.Id_Estatus=2 and fdd.id_motivomovimiento=320 and fvs.valor=1''		
						set @ssql= @ssql + @where +''
						''
						set @ssql= @ssql +''select distinct fd.FOLIO,fd.id_emp,E.RFC,case when hc.apmaterno is null then '''''''' else hc.apmaterno end as DICE,hc.fecha,
						case when vt.valor=''''.'''' then '''''''' else vt.valor end as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						ROW_NUMBER() OVER(PARTITION BY fd.folio,fd.id_emp ORDER BY fd.id_emp,dbo.fechatoanioquincena(hc.fecha) desc) as orden,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						into #fup_cambio_apmaterno
						from fup_documentos fd with(nolock)            
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_Cancelados fc with(nolock) on fd.id_documento=fc.id_documento
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						left join hnombre hc with(nolock) on fd.id_emp=hc.id_emp and hc.apmaterno<>vt.valor
						left join (select max(fecha) as fecha,id_emp from hnombre with(nolock)
						group by id_emp) x on hc.id_emp=x.id_emp
						where fd.Id_Estatus=2 and fdd.id_motivomovimiento=320 and fvs.valor=2''		
						set @ssql= @ssql + @where +''
						''
						set @ssql= @ssql + '' select distinct fd.FOLIO,fd.id_emp,E.RFC,case when hc.nombre is null then '''''''' else hc.nombre end as DICE,hc.fecha,
						case when vt.valor=''''.'''' then '''''''' else vt.valor end as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						ROW_NUMBER() OVER(PARTITION BY fd.folio,fd.id_emp ORDER BY fd.id_emp,dbo.fechatoanioquincena(hc.fecha) desc) as orden,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						into #fup_cambio_nombre
						from fup_documentos fd with(nolock)            
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_Cancelados fc with(nolock) on fd.id_documento=fc.id_documento
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						left join hnombre hc with(nolock) on fd.id_emp=hc.id_emp and hc.nombre<>vt.valor
						left join (select max(fecha) as fecha,id_emp from hnombre with(nolock)
						group by id_emp) x on hc.id_emp=x.id_emp
						where fd.Id_Estatus=2 and fdd.id_motivomovimiento=320 and fvs.valor=3''		
						set @ssql= @ssql + @where +''
						''
						set @ssql= @ssql + ''select distinct fd.FOLIO,fd.id_emp,E.RFC,case when hfs.Fecha_Alta_SEP is null then '''''''' else dbo.fechatoanioquincena(hfs.fecha_alta_sep)  end as DICE,hfs.fecha,
						ROW_NUMBER() OVER(PARTITION BY fd.folio,fd.id_emp ORDER BY fd.id_emp,dbo.fechatoanioquincena(hfs.fecha) desc) as orden,
						vt.valor as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO						
						into #fup_fecha_sep
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento						
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento						
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''	
						left join HFecha_Alta_SEP hfs with(nolock) on fd.id_emp=hfs.id_emp and hfs.fecha_alta_sep<>dbo.anioquincenatofecha(vt.valor,0)    
						left join (select max(fecha) as fecha,id_emp  from HFecha_Alta_SEP with(nolock)														
						group by id_emp												 						                                         													
						) x on fd.id_emp=x.id_emp
						where fd.Id_Estatus=2 and fdd.id_motivomovimiento=320 and fvs.valor=4''		
						set @ssql= @ssql + @where + ''						 						
						''
						set @ssql= @ssql + '' select distinct fd.FOLIO,fd.id_emp,E.RFC,case when hfs.Fecha_Alta_rama is null then '''''''' else dbo.fechatoanioquincena(hfs.fecha_alta_rama)  end as DICE,hfs.fecha,
						ROW_NUMBER() OVER(PARTITION BY fd.folio,fd.id_emp ORDER BY fd.id_emp,dbo.fechatoanioquincena(hfs.fecha) desc) as orden,
						vt.valor as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO						
						into #fup_fecha_rama
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento						
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento						
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''	
						left join HFecha_Alta_rama hfs with(nolock) on fd.id_emp=hfs.id_emp and hfs.fecha_alta_rama<>dbo.anioquincenatofecha(vt.valor,0)    
						left join (select max(fecha) as fecha,id_emp  from HFecha_Alta_rama with(nolock)														
						group by id_emp												 						                                         													
						) x on fd.id_emp=x.id_emp
						where fd.Id_Estatus=2 and fdd.id_motivomovimiento=320 and fvs.valor=5''		
						set @ssql= @ssql + @where +''
						''
						set @ssql= @ssql + '' select distinct fd.FOLIO,fd.id_emp,E.RFC,case when hc.rfc is null then '''''''' else hc.rfc end as DICE,hc.fecha,
						vt.valor as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						ROW_NUMBER() OVER(PARTITION BY fd.folio,fd.id_emp ORDER BY fd.id_emp,dbo.fechatoanioquincena(hc.fecha) desc) as orden,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO
						into #fup_cambio_rfc
						from fup_documentos fd with(nolock)            
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento
						inner join plazas p with(nolock) on fdd.Id_Plaza = p.Id_plaza
						inner join plazaieepo pi with(nolock) on fdd.Id_Plaza = pi.Id_plaza
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						inner join TNivelEducativo tn with(nolock) on fid.Id_Nivel_Educativo=tn.id_NivelEducativo
						inner join FUP_MotivoMovimiento fmm with(nolock) on fdd.Id_MotivoMovimiento = fmm.Id_MotivoMovimiento
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento
						inner join FUP_TipoMovimiento ftm with(nolock) on fmm.Id_TipoMovimiento = ftm.Id_TipoMovimiento
						inner join fup_estatus fb with(nolock) on fd.id_estatus=fb.id_estatus
						left join FUP_Cancelados fc with(nolock) on fd.id_documento=fc.id_documento
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						left join conceptos cpto with(nolock) on fvs.valor=cpto.id_concepto
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''
						left join hrfc hc with(nolock) on fd.id_emp=hc.id_emp and hc.rfc<>vt.valor
						left join (select max(fecha) as fecha,id_emp from hrfc with(nolock)
						group by id_emp) x on hc.id_emp=x.id_emp
						where fd.Id_Estatus=2 and fdd.id_motivomovimiento=320 and fvs.valor=6''		
						set @ssql= @ssql + @where + ''
						''
						set @ssql= @ssql + ''select distinct fd.FOLIO,fd.id_emp,E.RFC,case when hfs.Fecha_Alta_Gob_Fed is null then '''''''' else dbo.fechatoanioquincena(hfs.Fecha_Alta_Gob_Fed)  end as DICE,hfs.fecha,
						ROW_NUMBER() OVER(PARTITION BY fd.folio,fd.id_emp ORDER BY fd.id_emp,dbo.fechatoanioquincena(hfs.fecha) desc) as orden,
						vt.valor as DEBE_DECIR,fid.CENTRO_TRABAJO as CLAVE_CCT,LTRIM(REPLACE(SUBSTRING(TF.Descripcion,5,80),''''.-'''','''''''')) AS MODIFICACION,
						CAST(C.AÑO AS VARCHAR(MAX))+ CAST(CASE WHEN C.NUMERO<10 THEN ''''0''''+cast(c.numero as varchar) ELSE CAST(C.NUMERO AS VARCHAR(MAX)) END AS VARCHAR(MAX))+CAST('''' PARCIAL '''' AS VARCHAR(MAX))+CAST(C.PARCIAL AS VARCHAR(MAX)) AS QNA_PROCESO						
						into #fup_fecha_gob_fed
						from fup_documentos fd with(nolock)          
						inner join empleados e with(nolock) on fd.Id_Emp = e.Id_Emp
						inner join fup_documento_detalle fdd with(nolock) on fd.Id_Documento = fdd.Id_Documento						
						inner join usuarios u with(nolock) on fd.Id_Usuario = u.Id_Usuario
						inner join FUP_Informacion_Documentos fid with(nolock) on fd.Id_Documento = fid.Id_Documento
						inner join CalenNomina c with(nolock) on fid.Id_Periodo = c.Id_Periodo
						left join  FUP_Valortext vt with(nolock) on fdd.Id_Detalle=vt.Id_Documento						
						left join FUP_valorsubcatalogo fvs with(nolock) on fdd.id_detalle=fvs.id_documento
						inner join TTFup_Cambio_Datos_Personales tf with(nolock) on fvs.valor=tf.clave
						inner join fup_detallecampos fdc with(nolock) on vt.id_valor=fdc.id_valor and fdc.id_motivomovimiento=320
						inner join tformulas t with(nolock) on fdc.id_formula=t.idformula and t.descripcion=''''debe_decir''''	
						left join HFecha_Alta_Gob_Fed hfs with(nolock) on fd.id_emp=hfs.id_emp and hfs.Fecha_Alta_Gob_Fed<>dbo.anioquincenatofecha(vt.valor,0)    
						left join (select max(fecha) as fecha,id_emp  from HFecha_Alta_Gob_Fed with(nolock)														
						group by id_emp												 						                                         													
						) x on fd.id_emp=x.id_emp
						where fd.Id_Estatus=2 and fdd.id_motivomovimiento=320 and fvs.valor=7''		
						set @ssql= @ssql + @where + ''
						''						
						set @ssql= @ssql + '' select distinct FOLIO,RFC,DICE,DEBE_DECIR,CLAVE_CCT,MODIFICACION,QNA_PROCESO from #fup_cambio_curp where orden=1
						union 
						select distinct FOLIO,RFC,DICE,DEBE_DECIR,CLAVE_CCT,MODIFICACION,QNA_PROCESO from #fup_cambio_appaterno where orden=1 
						union
						select distinct FOLIO,RFC,DICE,DEBE_DECIR,CLAVE_CCT,MODIFICACION,QNA_PROCESO from #fup_cambio_apmaterno where orden=1 					
						union
						select distinct FOLIO,RFC,DICE,DEBE_DECIR,CLAVE_CCT,MODIFICACION,QNA_PROCESO from #fup_cambio_nombre where orden=1
						union
						select distinct FOLIO,RFC,DICE,DEBE_DECIR,CLAVE_CCT,MODIFICACION,QNA_PROCESO from #fup_fecha_sep where orden=1
						union 
						select distinct FOLIO,RFC,DICE,DEBE_DECIR,CLAVE_CCT,MODIFICACION,QNA_PROCESO from #fup_fecha_rama where orden=1
						union
						select distinct FOLIO,RFC,DICE,DEBE_DECIR,CLAVE_CCT,MODIFICACION,QNA_PROCESO from #fup_cambio_rfc where orden=1
						union
						select distinct FOLIO,RFC,DICE,DEBE_DECIR,CLAVE_CCT,MODIFICACION,QNA_PROCESO from #fup_fecha_gob_fed where orden=1
						order by rfc
						''															
						exec (@ssql)					
					end							 
			  end			 
end
'
GO

GO
PRINT N'Creating [dbo].[spi_InsertaResposabilidades]'
GO
IF OBJECT_ID(N'[dbo].[spi_InsertaResposabilidades]', 'P') IS NULL
EXEC sp_executesql N'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- =============================================
-- Author:		wcahun
-- Create date: 19-03-2013
-- Description:	procedimiento para insertar en histpagosdetalle uno o varios periodos del nom_histpagos con el signo contrario para 
--				el cobro de responsabilidades
-- =============================================
CREATE PROCEDURE [dbo].[spi_InsertaResposabilidades]
@id_plaza int, @id_periodo int, @id_emp int, @id_recalculo int, @id_plaza_origen int, @id_periodo_origen varchar(500), @id_plazapago int
WITH EXEC AS CALLER
AS
BEGIN

	declare @ejecuta nvarchar(max)

	set @ejecuta=
	'' insert into histpagosdetalle (id_emp, id_periodo, id_concepto, consecutivo, horas, pesos, pesosexcento, id_plaza, id_referencia, 
id_periodopago, id_procesonomina, desde, hasta, id_plazapago, C_costo)
 
  select id_emp, '' + cast(@id_periodo as varchar(10)) + '' idperiodo,A.id_concepto,  consecutivo,  horas, pesos * -1 pesos,  pesosexcento,'' + cast(@id_plaza as varchar(10))+ ''
     id_plaza,''+ cast(@id_recalculo as varchar(10)) +'' id_referencia ,case when a.id_periodopago=0 then	a.id_periodo else a.id_periodopago end as idperiodoDestino 
	,2 id_procesonomina  
	,(select dbo.fechatoanioquincena(fechaini) from calennomina where id_periodo= (case when a.id_periodopago=0 then	a.id_periodo else a.id_periodopago end)) desde   
	,(select dbo.fechatoanioquincena(fechaini) from calennomina where id_periodo=(case when a.id_periodopago=0 then	a.id_periodo else a.id_periodopago end)) hasta 
	,'' + cast(@id_plazapago as varchar(10)) +'' idplazapago, cc   from nom_histpagos a 
	inner join conceptos c on a.id_concepto=c.id_concepto
	WHERE  ((a.id_periodo in ('' + @id_periodo_origen+'') and a.id_periodopago=0) or (a.id_periodopago in (''+ @id_periodo_origen+ '' ))) '' +
	''and a.id_plaza=''+cast(@id_plaza_origen as varchar(15))+'' and a.id_emp=''+cast(@id_emp as varchar(15))+'' and c.TIPO in (1,2)''

	--SELECT @ejecuta
	EXECUTE (@ejecuta)
	
	select ''correcto'' as resultado 


END'
GO

GO
-- This statement writes to the SQL Server Log so SQL Monitor can show this deployment.
IF HAS_PERMS_BY_NAME(N'sys.xp_logevent', N'OBJECT', N'EXECUTE') = 1
BEGIN
    DECLARE @databaseName AS nvarchar(2048), @eventMessage AS nvarchar(2048)
    SET @databaseName = REPLACE(REPLACE(DB_NAME(), N'\', N'\\'), N'"', N'\"')
    SET @eventMessage = N'Redgate SQL Compare: { "deployment": { "description": "Redgate SQL Compare deployed to ' + @databaseName + N'", "database": "' + @databaseName + N'" }}'
    EXECUTE sys.xp_logevent 55000, @eventMessage
END
GO
DECLARE @Success AS BIT
SET @Success = 1
SET NOEXEC OFF
IF (@Success = 1) PRINT 'The database update succeeded'
ELSE BEGIN
	PRINT 'The database update failed'
END
GO
